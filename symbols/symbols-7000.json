{
	"PacletTools`PacletResourceGet":"ObjectType: Symbol\nUsage: PacletTools`PacletResourceGet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletTools`PacletResourceGet[System`PacletLoadDump`paclet_String, System`PacletLoadDump`resource_String, System`PacletLoadDump`msgHead_, System`PacletLoadDump`minVer_:Automatic, OptionsPattern[]] := Module[{System`PacletLoadDump`p}, System`PacletLoadDump`p = PacletTools`PacletGet[System`PacletLoadDump`paclet, System`PacletLoadDump`msgHead, System`PacletLoadDump`minVer, \"Update\" -> OptionValue[\"Update\"]]; If[TrueQ[PacletObjectQ[System`PacletLoadDump`p]] || Head[System`PacletLoadDump`p] === PacletManager`Paclet, Quiet[PacletManager`PacletResource[System`PacletLoadDump`p, System`PacletLoadDump`resource]] \/. Null -> $Failed, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Install -> True, Update -> False}\nAttributes: {}\nFullName: PacletTools`PacletResourceGet",
	"PacletManager`PacletResources":"ObjectType: Symbol\nUsage: PacletResources is an internal symbol.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`PacletResources[PacletManager`Manager`Private`extensionType_String, PacletManager`Manager`Private`resName:_String | All:All, PacletManager`Manager`Private`opts:OptionsPattern[]] := Module[{PacletManager`Manager`Private`paclets}, PacletManager`Manager`Private`paclets = PacletManager`Package`takeLatestEnabledVersionOfEachPaclet[PacletManager`Package`PCfindMatching[\"Extension\" -> PacletManager`Manager`Private`extensionType, \"Internal\" -> OptionValue[\"Internal\"], \"Collections\" -> (OptionValue[\"Collections\"] \/. All -> {\"User\", \"Shared\", \"Layout\", \"Legacy\", \"Extra\", \"CloudExtra\"})]]; PacletManager`PacletResources[PacletManager`Manager`Private`paclets, PacletManager`Manager`Private`extensionType, PacletManager`Manager`Private`resName, PacletManager`Manager`Private`opts]]\nPacletManager`PacletResources[PacletManager`Manager`Private`p_PacletObject, PacletManager`Manager`Private`args__] := PacletManager`PacletResources[{PacletManager`Manager`Private`p}, PacletManager`Manager`Private`args]\nPacletManager`PacletResources[PacletManager`Manager`Private`paclets:{___PacletObject}, PacletManager`Manager`Private`extensionType_String, PacletManager`Manager`Private`resName:_String | All:All, OptionsPattern[]] := Module[{PacletManager`Manager`Private`p, PacletManager`Manager`Private`pacletRootPath, PacletManager`Manager`Private`ext, PacletManager`Manager`Private`exts, PacletManager`Manager`Private`extPath, PacletManager`Manager`Private`resSpec, PacletManager`Manager`Private`fullPathList, PacletManager`Manager`Private`resPaths}, (DeleteCases[#1, {_PacletObject, {}}] & )[PacletManager`Package`forEach[PacletManager`Manager`Private`p, PacletManager`Manager`Private`paclets, PacletManager`Manager`Private`pacletRootPath = PacletManager`Package`PgetPathToRoot[PacletManager`Manager`Private`p]; PacletManager`Manager`Private`exts = PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Manager`Private`p, PacletManager`Manager`Private`extensionType], {\"WolframVersion\", \"SystemID\", \"Language\", \"ProductID\"}]; PacletManager`Manager`Private`fullPathList = Flatten[DeleteDuplicates[Join[PacletManager`Package`forEach[PacletManager`Manager`Private`ext, PacletManager`Manager`Private`exts, PacletManager`Manager`Private`extPath = ExpandFileName[ToFileName[PacletManager`Manager`Private`pacletRootPath, PacletManager`Package`EXTgetProperty[PacletManager`Manager`Private`ext, \"Root\"]]]; PacletManager`Manager`Private`resSpec = PacletManager`Package`EXTgetProperty[PacletManager`Manager`Private`ext, \"Resources\"]; PacletManager`Manager`Private`resPaths = If[StringQ[PacletManager`Manager`Private`resName], Switch[PacletManager`Manager`Private`resSpec, PacletManager`Manager`Private`resName, {PacletManager`Manager`Private`resSpec}, _List, {FirstCase[PacletManager`Manager`Private`resSpec, PacletManager`Manager`Private`r:PacletManager`Manager`Private`resName | {PacletManager`Manager`Private`resName} | {PacletManager`Manager`Private`resName, _} :> Last[Flatten[{PacletManager`Manager`Private`r}]]]}, _, {}], Which[StringQ[PacletManager`Manager`Private`resSpec], {PacletManager`Manager`Private`resSpec}, ListQ[PacletManager`Manager`Private`resSpec], Replace[PacletManager`Manager`Private`resSpec, {PacletManager`Manager`Private`namePathPair_List :> Last[PacletManager`Manager`Private`namePathPair]}, {1}], True, {\".\"}]]; (ExpandFileName[FileNameJoin[{PacletManager`Manager`Private`extPath, #1}]] & ) \/@ Select[Flatten[PacletManager`Manager`Private`resPaths], StringQ]]]]]; {PacletManager`Manager`Private`p, Select[PacletManager`Manager`Private`fullPathList, FileExistsQ]}]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Collections -> All, Internal -> All}\nAttributes: {}\nFullName: PacletManager`PacletResources",
	"PacletManager`Documentation`Private`PacletSetLoading":"ObjectType: Symbol\nUsage: PacletManager`Documentation`Private`PacletSetLoading\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Documentation`Private`PacletSetLoading",
	"PacletManager`PacletSiteAdd":"ObjectType: Symbol\nUsage: PacletSiteRegister[url] registers url as a known paclet site.PacletSiteRegister[url, name] registers url as a known paclet site with name.PacletSiteRegister[PacletSiteObject[…]] registers the given PacletSiteObject as a known paclet site.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletSiteRegister[\"Wolfram Paclet Repository\"] := PacletSiteRegister[PacletManager`$WolframPacletRepository, PacletManager`$WolframPacletRepositoryName]\nPacletSiteRegister[PacletManager`Services`Private`siteURL:_String | _URL, PacletManager`Services`Private`opts:OptionsPattern[]] := PacletSiteRegister[PacletManager`Services`Private`makePacletSiteObject[PacletManager`Services`Private`siteURL, \"\", False], PacletManager`Services`Private`opts]\nPacletSiteRegister[PacletManager`Services`Private`siteURL:_String | _URL, PacletManager`Services`Private`name_String, PacletManager`Services`Private`opts:OptionsPattern[]] := PacletSiteRegister[PacletManager`Services`Private`makePacletSiteObject[PacletManager`Services`Private`siteURL, PacletManager`Services`Private`name, False], PacletManager`Services`Private`opts]\nPacletSiteRegister[PacletManager`Services`Private`site_PacletSiteObject, PacletManager`Services`Private`opts:OptionsPattern[]] := PacletManager`Package`executionProtect[Module[{PacletManager`Services`Private`siteURL, PacletManager`Services`Private`name, PacletManager`Services`Private`isLocal, PacletManager`Services`Private`dataChanged, PacletManager`Services`Private`existingSite, PacletManager`Services`Private`isPrepend}, {PacletManager`Services`Private`siteURL, PacletManager`Services`Private`name, PacletManager`Services`Private`isLocal} = Lookup[First[PacletManager`Services`Private`site], {\"URL\", \"Name\", \"Local\"}]; PacletManager`Services`Private`dataChanged = False; If[ !(StringMatchQ[PacletManager`Services`Private`siteURL, \"http*:*\"] || StringMatchQ[PacletManager`Services`Private`siteURL, \"file:*\"]), Message[PacletSiteRegister::badurl, PacletManager`Services`Private`siteURL]; Return[$Failed]]; PacletManager`Services`Private`isPrepend = TrueQ[OptionValue[Prepend]]; If[StringMatchQ[PacletManager`Services`Private`siteURL, \"file:*\"], PacletManager`Services`Private`isLocal = True]; PacletManager`Services`Private`existingSite = Cases[PacletManager`Services`Private`getPacletSiteData[], {PacletManager`Services`Private`siteURL, __}]; If[Length[PacletManager`Services`Private`existingSite] > 0, PacletManager`Services`Private`existingSite = First[PacletManager`Services`Private`existingSite]; Which[PacletManager`Services`Private`existingSite[[2]] == PacletManager`Services`Private`name && PacletManager`Services`Private`existingSite[[3]] == PacletManager`Services`Private`isLocal &&  !PacletManager`Services`Private`isPrepend, Null, PacletManager`Services`Private`isPrepend, PacletManager`Services`Private`$pacletSiteData = Prepend[DeleteCases[PacletManager`Services`Private`getPacletSiteData[], {PacletManager`Services`Private`siteURL, __}], ReplacePart[PacletManager`Services`Private`existingSite, {2 -> PacletManager`Services`Private`name, 3 -> PacletManager`Services`Private`isLocal}]]; PacletManager`Services`Private`dataChanged = True, True, PacletManager`Services`Private`$pacletSiteData = Replace[PacletManager`Services`Private`getPacletSiteData[], {PacletManager`Services`Private`siteURL, PacletManager`Services`Private`n_, PacletManager`Services`Private`loc_, PacletManager`Services`Private`d1_, PacletManager`Services`Private`d2_, PacletManager`Services`Private`p_} :> {PacletManager`Services`Private`siteURL, PacletManager`Services`Private`name, PacletManager`Services`Private`isLocal, PacletManager`Services`Private`d1, PacletManager`Services`Private`d2, PacletManager`Services`Private`p}, {1}]; PacletManager`Services`Private`dataChanged = True], PacletManager`Services`Private`$pacletSiteData = If[PacletManager`Services`Private`isPrepend, Prepend, Append][PacletManager`Services`Private`$pacletSiteData, {PacletManager`Services`Private`siteURL, PacletManager`Services`Private`name, PacletManager`Services`Private`isLocal, {}, {}, {}}]; PacletManager`Services`Private`dataChanged = True]; If[PacletManager`Services`Private`dataChanged, PacletManager`Services`Private`writeSiteData[]]; PacletSiteObject[Association[\"URL\" -> PacletManager`Services`Private`siteURL, \"Name\" -> PacletManager`Services`Private`name, \"Local\" -> PacletManager`Services`Private`isLocal, \"Type\" -> \"Server\"]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Prepend -> False}\nAttributes: {}\nFullName: System`PacletSiteRegister",
	"PacletManager`PacletSiteRemove":"ObjectType: Symbol\nUsage: PacletSiteUnregister[url] removes url from the list of registered paclet sites.PacletSiteUnregister[name] removes the site named name from the list of registered paclet sites.PacletSiteUnregister[PacletSiteObject[…]] removes the given PacletSiteObject from the list of registered paclet sites.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletSiteUnregister[PacletManager`Services`Private`site_PacletSiteObject] := PacletSiteUnregister[Lookup[First[PacletManager`Services`Private`site], \"URL\"]]\nPacletSiteUnregister[PacletManager`Services`Private`siteURL_URL] := PacletSiteUnregister[First[PacletManager`Services`Private`siteURL]]\nPacletSiteUnregister[PacletManager`Services`Private`siteURLorName_String] := PacletManager`Package`executionProtect[Module[{PacletManager`Services`Private`originalData}, PacletManager`Services`Private`originalData = PacletManager`Services`Private`getPacletSiteData[]; PacletManager`Services`Private`$pacletSiteData = DeleteCases[PacletManager`Services`Private`originalData, {PacletManager`Services`Private`siteURLorName, __} | {_, PacletManager`Services`Private`siteURLorName, ___}]; If[Length[PacletManager`Services`Private`$pacletSiteData] == Length[PacletManager`Services`Private`originalData], Message[PacletSiteUnregister::nosite, PacletManager`Services`Private`siteURLorName], PacletManager`Services`Private`writeSiteData[]]; PacletSites[]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletSiteUnregister",
	"PacletManager`PacletSites":"ObjectType: Symbol\nUsage: PacletSites[] gives the list of all paclet sites known to your system.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletSites[] := (PacletManager`Services`Private`makePacletSiteObject[#1[[1]], #1[[2]], #1[[3]]] & ) \/@ PacletManager`Services`Private`getPacletSiteData[]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletSites",
	"PacletManager`PacletSiteUpdate":"ObjectType: Symbol\nUsage: PacletSiteUpdate[site] acquires and caches current information about the available paclets on the given paclet site.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletSiteUpdate[PacletManager`Services`Private`site_PacletSiteObject, PacletManager`Services`Private`opts:OptionsPattern[]] := PacletSiteUpdate[\"URL\" \/. First[PacletManager`Services`Private`site], PacletManager`Services`Private`opts]\nPacletSiteUpdate[PacletManager`Services`Private`siteURLorName_String, PacletManager`Services`Private`opts:OptionsPattern[]] := Module[{PacletManager`Services`Private`startResult, PacletManager`Services`Private`siteRec}, If[PacletManager`Package`isPMReadOnly[], Return[Null]]; If[OptionValue[\"Force\"] === False, If[TrueQ[PacletManager`Package`$checkedForUpdates], PacletManager`Services`Private`siteRec = FirstCase[PacletManager`Services`Private`getPacletSiteData[], {PacletManager`Services`Private`siteURLorName, __} | {_, PacletManager`Services`Private`siteURLorName, ___}]; If[MissingQ[PacletManager`Services`Private`siteRec], Return[$Failed], Return[PacletManager`Services`Private`makePacletSiteObject[PacletManager`Services`Private`siteRec[[1]], PacletManager`Services`Private`siteRec[[2]], PacletManager`Services`Private`siteRec[[3]]]]], PacletManager`Package`$checkedForUpdates = True]]; PacletManager`Services`Private`startResult = PacletManager`Services`Private`startPacletSiteUpdate[PacletManager`Services`Private`siteURLorName, PacletManager`Services`Private`opts]; Switch[PacletManager`Services`Private`startResult, _List, PacletManager`Services`Private`finishPacletSiteUpdate[PacletManager`Services`Private`startResult], _AsynchronousTaskObject, PacletManager`Services`Private`startResult, _, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Interactive -> False, Asynchronous -> False, Force -> True}\nAttributes: {Listable}\nFullName: System`PacletSiteUpdate",
	"PacletManager`PacletUninstall":"ObjectType: Symbol\nUsage: PacletUninstall[paclet] uninstalls a paclet.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletUninstall[PacletManager`Manager`Private`p_PacletObject] := PacletManager`Package`executionProtect[Module[{PacletManager`Manager`Private`location, PacletManager`Manager`Private`result, PacletManager`Manager`Private`lockFile, PacletManager`Manager`Private`needsFEReset, PacletManager`Manager`Private`pacletIsInCachedDir, PacletManager`Manager`Private`pacletNeedsDeletion, PacletManager`Manager`Private`pacletNeedsDirUnload}, PacletManager`Manager`Private`location = PacletManager`Manager`Private`p[\"Location\"]; If[StringMatchQ[PacletManager`Manager`Private`location, \"http*:*\", IgnoreCase -> True] || StringMatchQ[PacletManager`Manager`Private`location, \"ftp:*\", IgnoreCase -> True] || StringMatchQ[PacletManager`Manager`Private`location, \"*.paclet\", IgnoreCase -> True], Message[PacletUninstall::notinstalled, PacletManager`Manager`Private`p[\"Name\"], PacletManager`Manager`Private`location]; Return[$Failed]]; If[PacletManager`Package`isPMReadOnly[], Message[PacletUninstall::readonly]; Return[$Failed]]; PacletManager`Manager`Private`pacletIsInCachedDir = StringStartsQ[PacletManager`Manager`Private`location, PacletManager`Package`$userCachedPacletsDir]; PacletManager`Manager`Private`pacletNeedsDeletion = StringStartsQ[PacletManager`Manager`Private`location, PacletManager`Package`$userRepositoryDir] || ( !PacletManager`Package`isCloud[] && StringStartsQ[PacletManager`Manager`Private`location, PacletManager`Package`$sharedRepositoryDir]) || PacletManager`Manager`Private`pacletIsInCachedDir; PacletManager`Manager`Private`pacletNeedsDirUnload = MemberQ[PacletManager`Package`$extraPacletHiddenDirs, PacletManager`Manager`Private`location]; If[PacletManager`Manager`Private`pacletNeedsDeletion, PacletManager`Manager`Private`needsFEReset = PacletManager`Manager`Private`detachPaclet[PacletManager`Manager`Private`p, True]; PacletManager`Manager`Private`lockFile = ToFileName[PacletManager`Package`$userTemporaryDir, \"repository.lock\"]; If[ !TrueQ[PacletManager`Manager`Private`$alreadyHoldsLock] &&  !PacletManager`Package`acquireLock[PacletManager`Manager`Private`lockFile, PacletManager`Manager`Private`$repositoryLockTimeout, False], Message[PacletUninstall::lock]; Return[$Failed]]; PacletManager`Manager`Private`result = If[DirectoryQ[PacletManager`Manager`Private`location], Quiet[Check[DeleteDirectory[PacletManager`Manager`Private`location, DeleteContents -> True], $Failed]], Null]; If[ !TrueQ[PacletManager`Manager`Private`$alreadyHoldsLock], PacletManager`Package`releaseLock[PacletManager`Manager`Private`lockFile]]; If[PacletManager`Manager`Private`result === $Failed, Message[PacletUninstall::open, PacletManager`Manager`Private`p[\"Name\"], PacletManager`Manager`Private`location]; If[Length[FileNames[{\"PacletInfo.m\", \"PacletInfo.wl\"}, PacletManager`Manager`Private`location]] == 0, PacletManager`Manager`Private`result = Null]]; PacletManager`Package`PCrebuild[\"Collections\" -> {\"User\", \"Shared\", If[PacletManager`Manager`Private`pacletIsInCachedDir, \"Cached\", Nothing]}]; PacletManager`Package`PCwrite[]; PacletManager`Manager`Private`rebuildPathMap[]; If[PacletManager`Manager`Private`needsFEReset, PacletManager`Manager`Private`resetFEData[]]]; If[PacletManager`Manager`Private`pacletNeedsDirUnload, PacletDirectoryUnload[PacletManager`Manager`Private`location]]; If[ !PacletManager`Manager`Private`pacletNeedsDeletion &&  !PacletManager`Manager`Private`pacletNeedsDirUnload, PacletManager`Manager`Private`result = Null; Message[PacletUninstall::nodelete, PacletManager`Manager`Private`p[\"Name\"], PacletManager`Manager`Private`location]]; PacletManager`Manager`Private`result]]\nPacletUninstall[PacletManager`Manager`Private`pacletName_String] := PacletUninstall[PacletManager`Manager`Private`pacletName -> All]\nPacletUninstall[{PacletManager`Manager`Private`pacletName_String, PacletManager`Manager`Private`pacletVersion:_String | All}] := PacletUninstall[PacletManager`Manager`Private`pacletName -> PacletManager`Manager`Private`pacletVersion]\nPacletUninstall[PacletManager`Manager`Private`pacletName_String -> PacletManager`Manager`Private`pacletVersion:_String | All] := Module[{PacletManager`Manager`Private`paclets, PacletManager`Manager`Private`atLeastOneInRepo, PacletManager`Manager`Private`p}, PacletManager`Manager`Private`paclets = PacletFind[PacletManager`Manager`Private`pacletName -> PacletManager`Manager`Private`pacletVersion, Association[\"Enabled\" -> All, \"Internal\" -> All, \"Collections\" -> {\"User\", \"Shared\", \"Layout\", \"Legacy\", \"Extra\", \"CloudExtra\", \"Cached\"}]]; If[Length[PacletManager`Manager`Private`paclets] > 0, PacletManager`Manager`Private`atLeastOneInRepo = False; PacletManager`Package`doForEach[PacletManager`Manager`Private`p, PacletManager`Manager`Private`paclets, If[StringStartsQ[PacletManager`Manager`Private`p[\"Location\"], PacletManager`Package`$userRepositoryDir] || StringStartsQ[PacletManager`Manager`Private`p[\"Location\"], PacletManager`Package`$sharedRepositoryDir] || StringStartsQ[PacletManager`Manager`Private`p[\"Location\"], PacletManager`Package`$userCachedPacletsDir], PacletManager`Manager`Private`atLeastOneInRepo = True]]; (If[MemberQ[#1, $Failed], $Failed, Null] & )[Function[{PacletManager`Manager`Private`body}, If[PacletManager`Manager`Private`atLeastOneInRepo, Quiet[PacletManager`Manager`Private`body, {PacletUninstall::nodelete}], PacletManager`Manager`Private`body], {HoldAll}][PacletUninstall \/@ PacletManager`Manager`Private`paclets]], If[PacletManager`Manager`Private`pacletVersion === \"\" || PacletManager`Manager`Private`pacletVersion === All, Message[PacletUninstall::notfound, PacletManager`Manager`Private`pacletName], Message[PacletUninstall::vnotfound, PacletManager`Manager`Private`pacletName, PacletManager`Manager`Private`pacletVersion]]; $Failed]]\nPacletUninstall[PacletManager`Manager`Private`paclets:{__PacletObject}] := PacletUninstall \/@ PacletManager`Manager`Private`paclets\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletUninstall",
	"PacletManager`PacletUpdate":"ObjectType: Symbol\nUsage: PacletUpdate is an obsolete symbol, replaced by PacletInstall.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`PacletUpdate[PacletManager`Manager`Private`pacletName_String, PacletManager`Manager`Private`opts:OptionsPattern[]] := Module[{PacletManager`Manager`Private`localPaclets, PacletManager`Manager`Private`newOpts}, PacletManager`Manager`Private`localPaclets = Quiet[PacletFind[PacletManager`Manager`Private`pacletName, Association[\"Enabled\" -> All, \"Internal\" -> All, \"IncludeDocPaclets\" -> StringMatchQ[PacletManager`Manager`Private`pacletName, \"SystemDocs_*\"]]]]; If[Length[PacletManager`Manager`Private`localPaclets] == 0, PacletManager`Manager`Private`newOpts = {KeepExistingVersion -> OptionValue[\"KeepExisting\"], PacletSite -> OptionValue[\"Site\"], UpdatePacletSites -> OptionValue[\"UpdateSites\"]}; If[TrueQ[OptionValue[\"Asynchronous\"]], PacletInstallSubmit[PacletManager`Manager`Private`pacletName, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstallSubmit]]], PacletInstall[PacletManager`Manager`Private`pacletName, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstall]]]], PacletManager`PacletUpdate[First[PacletManager`Manager`Private`localPaclets], PacletManager`Manager`Private`opts]]]\nPacletManager`PacletUpdate[PacletManager`Manager`Private`paclet_PacletObject, PacletManager`Manager`Private`opts:OptionsPattern[]] := Module[{PacletManager`Manager`Private`result = Null, PacletManager`Manager`Private`remote, PacletManager`Manager`Private`bestRemote, PacletManager`Manager`Private`site, PacletManager`Manager`Private`isNewSite, PacletManager`Manager`Private`updateSites, PacletManager`Manager`Private`newOpts}, PacletManager`Manager`Private`site = OptionValue[\"Site\"]; If[StringQ[PacletManager`Manager`Private`site], PacletManager`Package`try[PacletManager`Manager`Private`isNewSite =  !MemberQ[PacletSites[], PacletSiteObject[PacletManager`Manager`Private`site, __]]; PacletSiteRegister[PacletManager`Manager`Private`site]; PacletSiteUpdate[PacletManager`Manager`Private`site]; PacletManager`Manager`Private`result = PacletManager`PacletUpdate[PacletManager`Manager`Private`paclet, \"KeepExisting\" -> OptionValue[\"KeepExisting\"], \"UpdateSites\" -> False, \"Asynchronous\" -> OptionValue[\"Asynchronous\"]], If[PacletManager`Manager`Private`isNewSite, PacletSiteUnregister[PacletManager`Manager`Private`site]]]; Return[PacletManager`Manager`Private`result]]; PacletManager`Manager`Private`updateSites = OptionValue[\"UpdateSites\"]; If[TrueQ[PacletManager`Manager`Private`updateSites], Quiet[PacletSiteUpdate \/@ PacletSites[]]]; PacletManager`Manager`Private`remote = PacletFindRemote[PacletManager`Manager`Private`paclet[\"Name\"], UpdatePacletSites -> False]; If[PacletManager`Manager`Private`updateSites === Automatic && (Length[PacletManager`Manager`Private`remote] == 0 ||  !PacletNewerQ[First[PacletManager`Manager`Private`remote][\"Version\"], PacletManager`Manager`Private`paclet[\"Version\"]]), PacletManager`Manager`Private`lastSite = PacletManager`Package`lastUpdatedPacletSite[]; If[Length[PacletManager`Manager`Private`lastSite] > 1 && PacletManager`Package`differenceInDays[PacletManager`Manager`Private`lastSite[[2]], Date[]] > 0.25, PacletManager`Manager`Private`remote = PacletFindRemote[PacletManager`Manager`Private`paclet[\"Name\"], UpdatePacletSites -> True]]]; If[Length[PacletManager`Manager`Private`remote] > 0, PacletManager`Manager`Private`bestRemote = First[PacletManager`Manager`Private`remote]; If[PacletNewerQ[PacletManager`Manager`Private`bestRemote[\"Version\"], PacletManager`Manager`Private`paclet[\"Version\"]], PacletManager`Manager`Private`newOpts = {KeepExistingVersion -> OptionValue[\"KeepExisting\"], PacletSite -> OptionValue[\"Site\"], UpdatePacletSites -> OptionValue[\"UpdateSites\"]}; If[TrueQ[OptionValue[\"Asynchronous\"]], PacletManager`Manager`Private`result = PacletInstallSubmit[PacletManager`Manager`Private`bestRemote, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstallSubmit]]], PacletManager`Manager`Private`result = PacletInstall[PacletManager`Manager`Private`bestRemote, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstall]]]]], Message[PacletManager`PacletUpdate::uptodate, PacletManager`Manager`Private`paclet[\"Name\"]]]; PacletManager`Manager`Private`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {KeepExisting -> Automatic, Site -> Automatic, UpdateSites -> Automatic, Asynchronous -> False}\nAttributes: {}\nFullName: PacletManager`PacletUpdate",
	"PlanetaryAstronomy`Private`PACoordinatesX":"ObjectType: Symbol\nUsage: PlanetaryAstronomy`Private`PACoordinatesX\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PlanetaryAstronomy`Private`PACoordinatesX[_, \"Earth\", \"EarthLBR\" | \"EarthEquatorial\" | \"EarthEquatorialApparent\" | \"EarthEquatorialHourDegree\" | {\"Earth\", __} | {\"EarthApparent\", __}, ___] := $Failed\nPlanetaryAstronomy`Private`PACoordinatesX[_, \"Sun\", \"SunLBR\", ___] := $Failed\nPlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd_, PlanetaryAstronomy`Private`o_, PlanetaryAstronomy`Private`b_, PlanetaryAstronomy`Private`opts___] := (PlanetaryAstronomy`Private`PATransformationX[#1[PlanetaryAstronomy`Private`jd, #2, PlanetaryAstronomy`Private`o], PlanetaryAstronomy`Private`b, PlanetaryAstronomy`Private`opts] & ) @@ Replace[{\"Precision\", \"LightTimeCorrection\"} \/. {PlanetaryAstronomy`Private`opts} \/. {\"Precision\" -> \"Medium\", \"LightTimeCorrection\" -> None}, {\"Low2\" -> PlanetaryAstronomy`Private`PACoordinates2, \"Low\" -> PlanetaryAstronomy`Private`PACoordinates1, \"Medium\" -> PlanetaryAstronomy`Private`PACoordinates0, None -> 0, \"Earth\" :> -PlanetaryAstronomy`Private`LightTimeDays[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`o, \"EarthLBR\", \"Precision\" -> \"Low\"][[-1,-1]]]}, {1}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PlanetaryAstronomy`Private`PACoordinatesX",
	"System`DateObjectDump`PadAppropriately":"ObjectType: Symbol\nUsage: System`DateObjectDump`PadAppropriately\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`DateObjectDump`PadAppropriately[System`DateObjectDump`list_List] := Switch[Length[System`DateObjectDump`list], 1, Join[System`DateObjectDump`list, System`DateObjectDump`$currentMDH], 2, Join[System`DateObjectDump`list, Rest[System`DateObjectDump`$currentMDH]], 3, Join[System`DateObjectDump`list, {Last[System`DateObjectDump`$currentMDH]}], _, Take[System`DateObjectDump`list, 4]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`PadAppropriately",
	"DateAndTime`PadCalendarDate":"ObjectType: Symbol\nUsage: DateAndTime`PadCalendarDate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`PadCalendarDate[System`InternalDateUtilitiesDump`date_List] := PadRight[System`InternalDateUtilitiesDump`date, 7, {\"Gregorian\", 1, 1, 1, 0, 0, 0}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`PadCalendarDate",
	"Sound`PadChannels":"ObjectType: Symbol\nUsage: Sound`PadChannels\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`PadChannels[SampledSoundList[(Sound`SoundDump`lst_)?VectorQ, Sound`SoundDump`rest_], Sound`SoundDump`chans_] := Sound`PadChannels[SampledSoundList[{Sound`SoundDump`lst}, Sound`SoundDump`rest], Sound`SoundDump`chans]\nSound`PadChannels[SampledSoundList[Sound`SoundDump`lst_List, Sound`SoundDump`rest_], Sound`SoundDump`chans_] := Module[{Sound`SoundDump`len, Sound`SoundDump`ret, Sound`SoundDump`pad, Sound`SoundDump`prec, Sound`SoundDump`zero}, Sound`SoundDump`len = Max[Length \/@ Sound`SoundDump`lst]; Sound`SoundDump`prec = Precision[Sound`SoundDump`lst]; Sound`SoundDump`zero = SetPrecision[0, Sound`SoundDump`prec]; Sound`SoundDump`ret = (PadRight[#1, Sound`SoundDump`len, Sound`SoundDump`zero] & ) \/@ Sound`SoundDump`lst; If[Length[Sound`SoundDump`lst] < Sound`SoundDump`chans, Sound`SoundDump`pad = Table[Sound`SoundDump`zero, {Sound`SoundDump`len}]; Sound`SoundDump`ret = PadRight[Sound`SoundDump`ret, Sound`SoundDump`chans, {Sound`SoundDump`pad}]]; If[Length[Sound`SoundDump`lst] > Sound`SoundDump`chans, Sound`SoundDump`ret = Take[Sound`SoundDump`ret, Sound`SoundDump`chans]; ]; SampledSoundList[Sound`SoundDump`ret, Sound`SoundDump`rest]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PadChannels",
	"GIS`PadGeoRange":"ObjectType: Symbol\nUsage: GIS`PadGeoRange[georange, geopadding, geomodel, head] pads the given latlon georange as specified by\nthe geopadding spec, assuming that both specifications are given on the geomodel. If the operation is not possible, error\nmessages are attached to the given head.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PadGeoRange[$Failed, GIS`GeoRangesDump`geoPadding_, GIS`GeoRangesDump`geoModelParsed_, GIS`GeoRangesDump`head_] := $Failed\nGIS`PadGeoRange[GIS`GeoRangesDump`ranges_, None, GIS`GeoRangesDump`geoModelParsed_, GIS`GeoRangesDump`head_] := GIS`GeoRangesDump`ranges\nGIS`PadGeoRange[(GIS`GeoRangesDump`ranges_)?GIS`NumericRangesQ, GIS`GeoRangesDump`geoPadding_, GIS`GeoRangesDump`geoModelParsed_, GIS`GeoRangesDump`head_] := Module[{GIS`GeoRangesDump`res}, GIS`GeoRangesDump`res = GIS`GeoRangesDump`sortoutPadding[GIS`RangeReverse[GIS`GeoRangesDump`ranges], If[ListQ[GIS`GeoRangesDump`geoPadding], Reverse[GIS`GeoRangesDump`geoPadding], GIS`GeoRangesDump`geoPadding], GIS`GeoRangesDump`geoModelParsed, GIS`GeoRangesDump`head]; If[GIS`NumericRangesQ[GIS`GeoRangesDump`res, \"LonLat\"], GIS`RangeReverse[GIS`GeoRangesDump`res], If[GIS`GeoRangesDump`geoPadding =!= None, Message[GIS`GeoRangesDump`head::grpad, GIS`GeoRangesDump`geoPadding]]; $Failed]]\nGIS`PadGeoRange[_, _, _, _] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PadGeoRange",
	"Charting`PadLabels":"ObjectType: Symbol\nUsage: Charting`PadLabels\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PadLabels",
	"System`ConvertersDump`PadRaster":"ObjectType: Symbol\nUsage: System`ConvertersDump`PadRaster\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`PadRaster[Graphics[Raster[System`ConvertersDump`data_, System`ConvertersDump`dims_, {0, System`ConvertersDump`max_}, System`ConvertersDump`rest___], System`ConvertersDump`opts___], System`ConvertersDump`pad_, System`ConvertersDump`bg_] := Graphics[Raster[System`ConvertersDump`padRaster[System`ConvertersDump`data, System`ConvertersDump`max, System`ConvertersDump`pad, System`ConvertersDump`bg], System`ConvertersDump`dims, {0, System`ConvertersDump`max}, System`ConvertersDump`rest], System`ConvertersDump`opts]\nSystem`ConvertersDump`PadRaster[System`ConvertersDump`RasterDataPacket[System`ConvertersDump`type_, System`ConvertersDump`max_, System`ConvertersDump`data_, System`ConvertersDump`others___], System`ConvertersDump`pad_, System`ConvertersDump`bg_] := System`ConvertersDump`RasterDataPacket[System`ConvertersDump`type, System`ConvertersDump`max, System`ConvertersDump`padRaster[System`ConvertersDump`data, System`ConvertersDump`max, System`ConvertersDump`pad, System`ConvertersDump`bg], System`ConvertersDump`others]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PadRaster",
	"SparseArray`PageRank":"ObjectType: Symbol\nUsage: SparseArray`PageRank\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RemoveSinks -> True, TeleportProbability -> 0.15, Tolerance -> Automatic}\nAttributes: {}\nFullName: SparseArray`PageRank",
	"Charting`PairedChartArgCheck":"ObjectType: Symbol\nUsage: Charting`PairedChartArgCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PairedChartArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[{}, {}, Charting`CommonDump`opts:OptionsPattern[]], _] := True\nCharting`PairedChartArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[{{}..}, {{}..}, Charting`CommonDump`opts:OptionsPattern[]], _] := True\nCharting`PairedChartArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args__, {}, Charting`CommonDump`opts:OptionsPattern[]], _] := True\nCharting`PairedChartArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args__, {{}..}, Charting`CommonDump`opts:OptionsPattern[]], _] := True\nCharting`PairedChartArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args___, Charting`CommonDump`opts:OptionsPattern[]], Charting`CommonDump`ifn_] := Block[{Charting`CommonDump`len}, Charting`CommonDump`len = Length[Unevaluated[{Charting`CommonDump`args}]]; If[Charting`CommonDump`len <= 2, ArgumentCountQ[Charting`CommonDump`f, Charting`CommonDump`len, 2, 2], Message[Charting`CommonDump`f::nonopt, Last[Function[Charting`CommonDump`z, HoldForm[Charting`CommonDump`z], HoldAll] \/@ Unevaluated[{Charting`CommonDump`args}]], 1, HoldForm[Charting`CommonDump`b]]; False, False]] && Charting`optCheck[Charting`CommonDump`b, Charting`CommonDump`ifn]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Charting`PairedChartArgCheck",
	"Charting`PairedHistArgCheck":"ObjectType: Symbol\nUsage: Charting`PairedHistArgCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PairedHistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[{}, {}, Charting`CommonDump`opts:OptionsPattern[]], ___] := True\nCharting`PairedHistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[{{}..}, {{}..}, Charting`CommonDump`opts:OptionsPattern[]], ___] := True\nCharting`PairedHistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args_, {}, Charting`CommonDump`opts:OptionsPattern[]], ___] := True\nCharting`PairedHistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args_, {{}..}, Charting`CommonDump`opts:OptionsPattern[]], ___] := True\nCharting`PairedHistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args___, Charting`CommonDump`opts:OptionsPattern[]], Charting`CommonDump`ifn_, Charting`CommonDump`n_:4] := Block[{Charting`CommonDump`len}, Charting`CommonDump`len = Length[Unevaluated[{Charting`CommonDump`args}]]; If[Charting`CommonDump`len <= Charting`CommonDump`n, ArgumentCountQ[Charting`CommonDump`f, Charting`CommonDump`len, 2, Charting`CommonDump`n], Message[Charting`CommonDump`f::nonopt, Last[Function[Charting`CommonDump`z, HoldForm[Charting`CommonDump`z], HoldAll] \/@ Unevaluated[{Charting`CommonDump`args}]], 3, HoldForm[Charting`CommonDump`b]]; False, False]] && Charting`optCheck[Charting`CommonDump`b, Charting`CommonDump`ifn]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Charting`PairedHistArgCheck",
	"DateAndTime`PairIntersection":"ObjectType: Symbol\nUsage: DateAndTime`PairIntersection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`PairIntersection[System`DateIntervalDump`pairs_] := System`DateIntervalDump`intersection @@ System`DateIntervalDump`pairs\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`PairIntersection",
	"System`ConvertersDump`FormatUtilities`PairOfPositiveMachineIntegersQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`PairOfPositiveMachineIntegersQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`PairOfPositiveMachineIntegersQ[{_?Internal`PositiveMachineIntegerQ, _?Internal`PositiveMachineIntegerQ}] := True\nSystem`ConvertersDump`FormatUtilities`PairOfPositiveMachineIntegersQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`PairOfPositiveMachineIntegersQ",
	"ClusterAnalysis`FindClusters`PAMUpdate":"ObjectType: Symbol\nUsage: ClusterAnalysis`FindClusters`PAMUpdate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ClusterAnalysis`FindClusters`PAMUpdate",
	"BoxForm`PanelTitle":"ObjectType: Symbol\nUsage: BoxForm`PanelTitle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`PanelTitle",
	"ResourceFunctionHelpers`ParabolaProperties":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`ParabolaProperties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`ParabolaProperties[ResourceFunctionHelpers`ConicProperties`Private`iprops_, ResourceFunctionHelpers`ConicProperties`Private`vars:{_Symbol, _Symbol}, ResourceFunctionHelpers`ConicProperties`Private`requestedProps:_String | {_String..} | _Symbol:Automatic, ResourceFunctionHelpers`ConicProperties`Private`opt:OptionsPattern[]] := Block[{ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`returnType, ResourceFunctionHelpers`ConicProperties`Private`res}, ResourceFunctionHelpers`ConicProperties`Private`props = ResourceFunctionHelpers`ConicProperties`Private`processInput[ResourceFunctionHelpers`ConicProperties`Private`iprops, ResourceFunctionHelpers`ConicProperties`Private`vars, \"Parabola\"]; ResourceFunctionHelpers`ConicProperties`Private`returnType = OptionValue[\"ReturnType\"]; (ResourceFunctionHelpers`ConicProperties`Private`res = If[ResourceFunctionHelpers`ConicProperties`Private`goodParabolaQ[ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`vars], ResourceFunctionHelpers`ConicProperties`Private`iParabolaProperties[ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`vars, ResourceFunctionHelpers`ConicProperties`Private`requestedProps, \"ReturnType\" -> True, ResourceFunctionHelpers`ConicProperties`Private`opt], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`ParabolaProperties::badprops]; ResourceFunctionHelpers`ConicProperties`Private`returnType = True; ResourceFunctionHelpers`ConicProperties`Private`redirectProperties[ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`vars, ResourceFunctionHelpers`ConicProperties`Private`requestedProps, \"Parabola\", ResourceFunctionHelpers`ConicProperties`Private`opt]]; (If[ !MatchQ[ResourceFunctionHelpers`ConicProperties`Private`res[\"Type\"], \"Circle\"], Block[{ResourceFunctionHelpers`ConicProperties`Private`temp = ResourceFunctionHelpers`ConicProperties`Private`makeBaseConic[ResourceFunctionHelpers`ConicProperties`Private`res, ResourceFunctionHelpers`ConicProperties`Private`vars]}, If[MatchQ[ResourceFunctionHelpers`ConicProperties`Private`temp, _Association], ResourceFunctionHelpers`ConicProperties`Private`res[\"BaseConic\"] = ResourceFunctionHelpers`ConicProperties`Private`temp, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`ParabolaProperties::insuf]]]]; ResourceFunctionHelpers`ConicProperties`Private`res = ResourceFunctionHelpers`ConicProperties`Private`sortProperties[ResourceFunctionHelpers`ConicProperties`Private`res, ResourceFunctionHelpers`ConicProperties`Private`res[\"Type\"]]; If[ !ResourceFunctionHelpers`ConicProperties`Private`returnType, KeyDropFrom[ResourceFunctionHelpers`ConicProperties`Private`res, \"Type\"], ResourceFunctionHelpers`ConicProperties`Private`res]) \/; MatchQ[ResourceFunctionHelpers`ConicProperties`Private`res, _Association]) \/;  !MatchQ[ResourceFunctionHelpers`ConicProperties`Private`props, $Failed] && ResourceFunctionHelpers`ConicProperties`Private`goodPropsTest[ResourceFunctionHelpers`ConicProperties`Private`props]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ReturnType -> False, PropertiesForPlotting -> False}\nAttributes: {}\nFullName: ResourceFunctionHelpers`ParabolaProperties",
	"Reduce`ParallelCAD":"ObjectType: Symbol\nUsage: Reduce`ParallelCAD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ParallelCAD[System`ReduceUtilsDump`args__, System`ReduceUtilsDump`launch_] := If[TrueQ[Parallel`Developer`LaunchDefaultKernels[System`ReduceUtilsDump`launch]], System`ReduceUtilsDump`pCAD[System`ReduceUtilsDump`args], $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ParallelCAD",
	"Parallel`Developer`ParallelDispatch":"ObjectType: Symbol\nUsage: Parallel`Developer`ParallelDispatch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Parallel`Developer`ParallelDispatch[___] := (Message[Parallel`Developer`ParallelDispatch::subnopar]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`ParallelDispatch",
	"Random`ParallelGenerator":"ObjectType: Symbol\nUsage: Random`ParallelGenerator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> ParallelMersenneTwister}\nAttributes: {}\nFullName: Random`ParallelGenerator",
	"Visualization`VectorFields`VectorFieldsDump`ParallelLineIntegralConvolutionPlot":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldsDump`ParallelLineIntegralConvolutionPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldsDump`ParallelLineIntegralConvolutionPlot[Visualization`VectorFields`VectorFieldsDump`func_, {{Visualization`VectorFields`VectorFieldsDump`xmin_, Visualization`VectorFields`VectorFieldsDump`xmax_}, {Visualization`VectorFields`VectorFieldsDump`ymin_, Visualization`VectorFields`VectorFieldsDump`ymax_}}, Visualization`VectorFields`VectorFieldsDump`image_, {Visualization`VectorFields`VectorFieldsDump`sx_, Visualization`VectorFields`VectorFieldsDump`sy_}, Visualization`VectorFields`VectorFieldsDump`licscale_, Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Module[{}, None]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {HoldFirst}\nFullName: Visualization`VectorFields`VectorFieldsDump`ParallelLineIntegralConvolutionPlot",
	"ResourceFunctionHelpers`ParallelLineThrough":"ObjectType: Symbol\nUsage: Get information about the line parallel to a given line and passing through a given point.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`ParallelLineThrough[ResourceFunctionHelpers`Lines`Private`origLine_, {ResourceFunctionHelpers`Lines`Private`x_Symbol, ResourceFunctionHelpers`Lines`Private`x1:_Symbol | _?NumericQ}, {ResourceFunctionHelpers`Lines`Private`y_Symbol, ResourceFunctionHelpers`Lines`Private`y1:_Symbol | _?NumericQ}, ResourceFunctionHelpers`Lines`Private`type_:All] := With[{ResourceFunctionHelpers`Lines`Private`res = If[FreeQ[{ResourceFunctionHelpers`Lines`Private`origLine, ResourceFunctionHelpers`Lines`Private`x1, ResourceFunctionHelpers`Lines`Private`y1}, _Complex | I], ResourceFunctionHelpers`Lines`Private`parallelOrNormalLineThrough[\"ParallelLineThrough\", ResourceFunctionHelpers`Lines`Private`origLine, {ResourceFunctionHelpers`Lines`Private`x1, ResourceFunctionHelpers`Lines`Private`y1}, ResourceFunctionHelpers`Lines`Private`x, ResourceFunctionHelpers`Lines`Private`y, ResourceFunctionHelpers`Lines`Private`checkTypes[ResourceFunctionHelpers`Lines`Private`type, ResourceFunctionHelpers`ParallelLineThrough]], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`ParallelLineThrough::reals, \"ParallelLineThrough\"]; $Failed]}, ResourceFunctionHelpers`Lines`Private`res \/; FreeQ[ResourceFunctionHelpers`Lines`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`ParallelLineThrough",
	"Random`ParallelMersenneTwister":"ObjectType: Symbol\nUsage: Random`ParallelMersenneTwister\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Index -> 0}\nAttributes: {}\nFullName: Random`ParallelMersenneTwister",
	"Internal`ParallelMWACompute":"ObjectType: Symbol\nUsage: Internal`ParallelMWACompute\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`ParallelMWACompute[WolframAlphaClient`Private`type_String, WolframAlphaClient`Private`argsIn_List, WolframAlphaClient`Private`opts:OptionsPattern[]] \/; WolframAlphaClient`Private`$PMWARec =!= True && Length[WolframAlphaClient`Private`argsIn] > WolframAlphaClient`Private`$MaxAsyncCalls := Block[{WolframAlphaClient`Private`$PMWARec = True}, Join @@ (Internal`ParallelMWACompute[WolframAlphaClient`Private`type, #1, WolframAlphaClient`Private`opts] & ) \/@ WolframAlphaClient`Private`divideIntoBatches[WolframAlphaClient`Private`argsIn, WolframAlphaClient`Private`$MaxAsyncCalls]]\nInternal`ParallelMWACompute[WolframAlphaClient`Private`type_String, WolframAlphaClient`Private`argsIn_List, WolframAlphaClient`Private`opts:OptionsPattern[]] := Catch[With[{WolframAlphaClient`Private`msghead = Replace[OptionValue[\"MessageHead\"], Automatic -> EntityValue], WolframAlphaClient`Private`checkmessages := {Utilities`URLTools`FetchURL::conopen, Utilities`URLTools`FetchURL::contime, Utilities`URLTools`FetchURL::erropts, Utilities`URLTools`FetchURL::httperr, Utilities`URLTools`FetchURL::nofile, Utilities`URLTools`FetchURL::nolib, URLFetch::invhttp, General::offline, General::nffil}}, Module[{WolframAlphaClient`Private`res, WolframAlphaClient`Private`argscompressed, WolframAlphaClient`Private`tmpcontext, WolframAlphaClient`Private`timeout, WolframAlphaClient`Private`args = ({#1, \"EvalEnv\" -> $EvaluationEnvironment} & ) \/@ WolframAlphaClient`Private`argsIn, WolframAlphaClient`Private`urls, WolframAlphaClient`Private`df, WolframAlphaClient`Private`data, WolframAlphaClient`Private`tasks}, WolframAlphaClient`Private`data[__] = {}; WolframAlphaClient`Private`tmpcontext = OptionValue[\"Context\"]; WolframAlphaClient`Private`timeout = OptionValue[TimeConstraint]; If[ !TrueQ[WolframAlphaClient`Private`timeout > 0], WolframAlphaClient`Private`timeout = WolframAlphaClient`Private`$AlphaQueryTimeConstraint]; If[StringQ[WolframAlphaClient`Private`tmpcontext] &&  !StringFreeQ[WolframAlphaClient`Private`tmpcontext, \"Temporary\"], Quiet[Remove @@ {StringJoin[WolframAlphaClient`Private`tmpcontext, \"*\"]}]; ]; If[TrueQ[OptionValue[\"ConvertMWASymbols\"]], WolframAlphaClient`Private`args = WolframAlphaClient`Private`args \/. WolframAlphaClient`Private`$ToMWARules]; WolframAlphaClient`Private`argscompressed = Block[{$ContextPath = OptionValue[\"ContextPath\"], $Context = OptionValue[\"Context\"]}, Compress \/@ WolframAlphaClient`Private`args]; Block[{WolframAlphaClient`Private`$APITimeZone = WolframAlphaClient`Private`iTimeZoneToGMTString[OptionValue[\"TimeZone\"]], WolframAlphaClient`Private`$APILatLong = WolframAlphaClient`Private`iGeoLocationtoLatLong[OptionValue[\"GeoLocation\"]], WolframAlphaClient`Private`$APIUnitSystem = WolframAlphaClient`Private`iVerifyUnitSystem[OptionValue[\"UnitSystem\"]], WolframAlphaClient`Private`$APITimeout = WolframAlphaClient`Private`timeout}, WolframAlphaClient`Private`urls = (WolframAlphaClient`Private`getMWAComputeURLAndArgs[WolframAlphaClient`Private`type, #1, WolframAlphaClient`Private`opts] & ) \/@ WolframAlphaClient`Private`argscompressed; ]; ((WolframAlphaClient`Private`df[#1] := Function[{WolframAlphaClient`Private`asyncObj, WolframAlphaClient`Private`eventType, WolframAlphaClient`Private`document}, Switch[WolframAlphaClient`Private`eventType, \"data\", WolframAlphaClient`Private`data[#1] = WolframAlphaClient`Private`document, \"error\", WolframAlphaClient`Private`data[#1] = ToCharacterCode[\"Missing[\\\"RetrievalFailure\\\"]\"], _, Null]]) & ) \/@ WolframAlphaClient`Private`urls; WolframAlphaClient`Private`sendWAEvent[WolframAlphaClient`Private`type]; Quiet[Check[WolframAlphaClient`Private`tasks = (WolframAlphaClient`Private`AsynchFetch[#1, WolframAlphaClient`Private`df[#1]] & ) \/@ WolframAlphaClient`Private`urls; TimeConstrained[Quiet[Scan[WaitAsynchronousTask, WolframAlphaClient`Private`tasks], {WaitAsynchronousTask::asyncobj}]; , WolframAlphaClient`Private`timeout, Message[WolframAlphaClient`Private`msghead::timeout, WolframAlphaClient`Private`msghead]], $Failed, WolframAlphaClient`Private`checkmessages], WolframAlphaClient`Private`checkmessages]; WolframAlphaClient`Private`res = (FromCharacterCode[WolframAlphaClient`Private`data[#1]] & ) \/@ WolframAlphaClient`Private`urls; WolframAlphaClient`Private`res = Replace[WolframAlphaClient`Private`res, {WolframAlphaClient`Private`x_} :> WolframAlphaClient`Private`x, {1}]; WolframAlphaClient`Private`res = WolframAlphaClient`Private`processMWAComputeResultList[WolframAlphaClient`Private`res, OptionValue[{\"ContextPath\", \"Context\", \"ConvertMWASymbols\", \"Sources\", \"CacheEntityNames\"}]]; Clear[WolframAlphaClient`Private`df]; WolframAlphaClient`Private`res]], WolframAlphaClient`Private`$tag | \"WAE\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Asynchronous -> False, AsynchronousFunction -> Null, ContextPath -> {Internal`MWASymbols`, System`}, Context -> Internal`MWASymbols`Temporary`, TimeConstraint -> None, MessageHead -> Automatic, ConvertMWASymbols -> True, CacheEntityNames -> True, Compress -> True, TimeZone -> None, GeoLocation -> None, Sources -> True, UnitSystem -> None}\nAttributes: {}\nFullName: Internal`ParallelMWACompute",
	"SurfaceGraphics`Methods`ParallelPlotEvaluate":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`ParallelPlotEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`ParallelPlotEvaluate",
	"SurfaceGraphics`Methods`ParallelPlotMethod":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`ParallelPlotMethod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`ParallelPlotMethod",
	"SurfaceGraphics`Methods`ParallelPlotParameters":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`ParallelPlotParameters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`ParallelPlotParameters",
	"Parallel`Developer`ParallelPreferences":"ObjectType: Symbol\nUsage: Parallel`Developer`ParallelPreferences\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`ParallelPreferences",
	"Reliability`Library`ParallelSystemQ":"ObjectType: Symbol\nUsage: Reliability`Library`ParallelSystemQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reliability`Library`ParallelSystemQ[Reliability`ReliabilityDistributionsDump`e_] := Reliability`ReliabilityDistributionsDump`iParallelSystemQ[Reliability`ReliabilityDistributionsDump`e]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reliability`Library`ParallelSystemQ",
	"Internal`ParallelThreads":"ObjectType: Symbol\nUsage: Internal`ParallelThreads\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ParallelThreads",
	"Reduce`ParamCleanup":"ObjectType: Symbol\nUsage: Reduce`ParamCleanup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ParamCleanup[System`ReduceUtilsDump`aa_Or, System`ReduceUtilsDump`ptest_] := (Reduce`ParamCleanup[#1, System`ReduceUtilsDump`ptest] & ) \/@ System`ReduceUtilsDump`aa\nReduce`ParamCleanup[System`ReduceUtilsDump`aa_And, System`ReduceUtilsDump`ptest_] := Module[{System`ReduceUtilsDump`i, System`ReduceUtilsDump`n, System`ReduceUtilsDump`old, System`ReduceUtilsDump`ans = System`ReduceUtilsDump`aa, System`ReduceUtilsDump`el, System`ReduceUtilsDump`r, System`ReduceUtilsDump`e, System`ReduceUtilsDump`f}, While[System`ReduceUtilsDump`ans =!= System`ReduceUtilsDump`old, System`ReduceUtilsDump`old = System`ReduceUtilsDump`ans; System`ReduceUtilsDump`i = 1; System`ReduceUtilsDump`n = Length[System`ReduceUtilsDump`ans]; While[System`ReduceUtilsDump`i <= System`ReduceUtilsDump`n, System`ReduceUtilsDump`el = System`ReduceUtilsDump`ans[[System`ReduceUtilsDump`i]]; Switch[Head[System`ReduceUtilsDump`el], Equal, If[Length[System`ReduceUtilsDump`el] == 2 && System`ReduceUtilsDump`el[[1]] =!= 0 && System`ReduceUtilsDump`ptest[System`ReduceUtilsDump`el[[1]]], System`ReduceUtilsDump`ans = Drop[System`ReduceUtilsDump`ans, {System`ReduceUtilsDump`i}] \/. Rule @@ System`ReduceUtilsDump`el; Return[Reduce`ParamCleanup[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ptest], Module], System`ReduceUtilsDump`i++], Less | LessEqual | Greater | GreaterEqual, If[Length[System`ReduceUtilsDump`el] == 2 && System`ReduceUtilsDump`ptest[System`ReduceUtilsDump`el[[1]]] && FreeQ[System`ReduceUtilsDump`r = Drop[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`i], System`ReduceUtilsDump`el[[1]]], System`ReduceUtilsDump`ans = Take[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`i - 1] && System`ReduceUtilsDump`r; If[Head[System`ReduceUtilsDump`ans] =!= And, Return[Reduce`ParamCleanup[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ptest], Module]]; System`ReduceUtilsDump`n--, System`ReduceUtilsDump`i++], Inequality, If[Length[System`ReduceUtilsDump`el] == 5 && System`ReduceUtilsDump`ptest[System`ReduceUtilsDump`el[[3]]] && FreeQ[System`ReduceUtilsDump`r = Drop[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`i], System`ReduceUtilsDump`el[[3]]], System`ReduceUtilsDump`ans = Take[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`i - 1] && System`ReduceUtilsDump`r; If[Head[System`ReduceUtilsDump`ans] =!= And, Return[Reduce`ParamCleanup[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ptest], Module]]; System`ReduceUtilsDump`n--, System`ReduceUtilsDump`i++], Element, If[Length[System`ReduceUtilsDump`el] == 2, System`ReduceUtilsDump`e = System`ReduceUtilsDump`el[[1]]; If[Head[System`ReduceUtilsDump`e] === Alternatives, System`ReduceUtilsDump`e = List @@ System`ReduceUtilsDump`e, System`ReduceUtilsDump`e = {System`ReduceUtilsDump`e}]; System`ReduceUtilsDump`r = Drop[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`i]; System`ReduceUtilsDump`f = Select[System`ReduceUtilsDump`e,  !System`ReduceUtilsDump`cleanelemparQ[#1, System`ReduceUtilsDump`ptest, System`ReduceUtilsDump`r] & ]; If[System`ReduceUtilsDump`f === {}, System`ReduceUtilsDump`ans = Take[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`i - 1] && System`ReduceUtilsDump`r; If[Head[System`ReduceUtilsDump`ans] =!= And, Return[Reduce`ParamCleanup[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ptest], Module]]; System`ReduceUtilsDump`n--, If[Length[System`ReduceUtilsDump`f] < Length[System`ReduceUtilsDump`e], System`ReduceUtilsDump`ans[[System`ReduceUtilsDump`i]] = Element[System`ReduceUtilsDump`f, System`ReduceUtilsDump`el[[2]]]]; System`ReduceUtilsDump`i++], System`ReduceUtilsDump`i++], Or, System`ReduceUtilsDump`e = Reduce`ParamCleanup[System`ReduceUtilsDump`el, System`ReduceUtilsDump`ptest]; If[System`ReduceUtilsDump`i < System`ReduceUtilsDump`n, If[System`ReduceUtilsDump`e =!= System`ReduceUtilsDump`el, System`ReduceUtilsDump`ans = (ReplacePart[System`ReduceUtilsDump`ans, #1, System`ReduceUtilsDump`i] & ) \/@ System`ReduceUtilsDump`el; Return[Reduce`ParamCleanup[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ptest], Module]], System`ReduceUtilsDump`ans[[System`ReduceUtilsDump`i]] = System`ReduceUtilsDump`e]; System`ReduceUtilsDump`i++, _, System`ReduceUtilsDump`i++]]]; System`ReduceUtilsDump`e = System`ReduceUtilsDump`andcleanup[System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ptest]; If[System`ReduceUtilsDump`e === System`ReduceUtilsDump`ans, System`ReduceUtilsDump`ans, Reduce`ParamCleanup[System`ReduceUtilsDump`e, System`ReduceUtilsDump`ptest]]]\nReduce`ParamCleanup[System`ReduceUtilsDump`aa_, System`ReduceUtilsDump`ptest_] := Switch[Head[System`ReduceUtilsDump`aa], Equal | Less | LessEqual | Greater | GreaterEqual, If[Length[System`ReduceUtilsDump`aa] == 2 && System`ReduceUtilsDump`ptest[System`ReduceUtilsDump`aa[[1]]], True, System`ReduceUtilsDump`aa], Inequality, If[Length[System`ReduceUtilsDump`aa] == 5 && System`ReduceUtilsDump`ptest[System`ReduceUtilsDump`aa[[3]]], True, System`ReduceUtilsDump`aa], Element, If[Length[System`ReduceUtilsDump`aa] == 2, With[{System`ReduceUtilsDump`e = If[Head[System`ReduceUtilsDump`aa[[1]]] === Alternatives, Select[List @@ System`ReduceUtilsDump`aa[[1]],  !System`ReduceUtilsDump`ptest[#1] & ], If[System`ReduceUtilsDump`ptest[System`ReduceUtilsDump`aa[[1]]], {}, {System`ReduceUtilsDump`aa[[1]]}]]}, If[System`ReduceUtilsDump`e === {}, True, Element[System`ReduceUtilsDump`e, System`ReduceUtilsDump`aa[[2]]]]], System`ReduceUtilsDump`aa], _, System`ReduceUtilsDump`aa]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ParamCleanup",
	"Solve`ParamEqual":"ObjectType: Symbol\nUsage: Solve`ParamEqual\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Solve`ParamEqual",
	"Statistics`Library`ParameterCountRange":"ObjectType: Symbol\nUsage: Statistics`Library`ParameterCountRange\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ParameterCountRange[Statistics`DistributionEstimateDump`params_] := Range[Count[Statistics`DistributionEstimateDump`params, _?Statistics`Library`ValidParameterQ]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ParameterCountRange",
	"FittedModels`ParameterEllipsoid":"ObjectType: Symbol\nUsage: FittedModels`ParameterEllipsoid\nDocumentation: None\nOwnValues: None\nUpValues: FittedModels`ParameterEllipsoid \/: FittedModels`ValidParameterEllipsoidQ[FittedModels`ParameterEllipsoid[(FittedModels`FittedModelsCommonDump`mu_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`r_)?Statistics`Library`RealVectorQ], Graphics] := True \/; Length[FittedModels`FittedModelsCommonDump`mu] === Length[FittedModels`FittedModelsCommonDump`r] === 2\nFittedModels`ParameterEllipsoid \/: FittedModels`ValidParameterEllipsoidQ[FittedModels`ParameterEllipsoid[(FittedModels`FittedModelsCommonDump`mu_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`r_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`dir_)?Statistics`Library`RealVectorQ], Graphics] := True \/; Length[FittedModels`FittedModelsCommonDump`mu] === Length[FittedModels`FittedModelsCommonDump`r] === Length[FittedModels`FittedModelsCommonDump`dir] === 2\nFittedModels`ParameterEllipsoid \/: FittedModels`ValidParameterEllipsoidQ[FittedModels`ParameterEllipsoid[(FittedModels`FittedModelsCommonDump`mu_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`r_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`dir_)?Statistics`Library`RealMatrixQ], Graphics] := True \/; Length[FittedModels`FittedModelsCommonDump`mu] === Length[FittedModels`FittedModelsCommonDump`r] === 2 && Dimensions[FittedModels`FittedModelsCommonDump`dir] === {2, 2}\nFittedModels`ParameterEllipsoid \/: FittedModels`ValidParameterEllipsoidQ[FittedModels`ParameterEllipsoid[(FittedModels`FittedModelsCommonDump`mu_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`r_)?Statistics`Library`RealVectorQ, (FittedModels`FittedModelsCommonDump`dir_)?Statistics`Library`RealMatrixQ], Graphics3D] := True \/; Length[FittedModels`FittedModelsCommonDump`mu] === Length[FittedModels`FittedModelsCommonDump`r] === 3 && Dimensions[FittedModels`FittedModelsCommonDump`dir] === {3, 3}\nFittedModels`ParameterEllipsoid \/: FittedModels`ParameterEllipsoidToPrimitives[FittedModels`ParameterEllipsoid[FittedModels`FittedModelsCommonDump`mu_, FittedModels`FittedModelsCommonDump`r_], Graphics] := Circle[FittedModels`FittedModelsCommonDump`mu, FittedModels`FittedModelsCommonDump`r] \/; Length[FittedModels`FittedModelsCommonDump`mu] === 2\nFittedModels`ParameterEllipsoid \/: FittedModels`ParameterEllipsoidToPrimitives[FittedModels`ParameterEllipsoid[FittedModels`FittedModelsCommonDump`mu_, FittedModels`FittedModelsCommonDump`r_, (FittedModels`FittedModelsCommonDump`dir_)?MatrixQ], Graphics] := FittedModels`FittedModelsCommonDump`ellipsoidPrimitive[FittedModels`FittedModelsCommonDump`mu, FittedModels`FittedModelsCommonDump`r, FittedModels`FittedModelsCommonDump`dir[[1]]] \/; Length[FittedModels`FittedModelsCommonDump`mu] === 2\nFittedModels`ParameterEllipsoid \/: FittedModels`ParameterEllipsoidToPrimitives[FittedModels`ParameterEllipsoid[FittedModels`FittedModelsCommonDump`mu_, FittedModels`FittedModelsCommonDump`r_, (FittedModels`FittedModelsCommonDump`dir_)?VectorQ], Graphics] := FittedModels`FittedModelsCommonDump`ellipsoidPrimitive[FittedModels`FittedModelsCommonDump`mu, FittedModels`FittedModelsCommonDump`r, FittedModels`FittedModelsCommonDump`dir] \/; Length[FittedModels`FittedModelsCommonDump`mu] === 2\nFittedModels`ParameterEllipsoid \/: FittedModels`ParameterEllipsoidToPrimitives[FittedModels`ParameterEllipsoid[FittedModels`FittedModelsCommonDump`mu_, FittedModels`FittedModelsCommonDump`r_, (FittedModels`FittedModelsCommonDump`dir_)?MatrixQ], Graphics3D] := FittedModels`FittedModelsCommonDump`ellipsoidPrimitive3D[FittedModels`FittedModelsCommonDump`mu, FittedModels`FittedModelsCommonDump`r, FittedModels`FittedModelsCommonDump`dir] \/; Length[FittedModels`FittedModelsCommonDump`mu] === 3\nDownValues: FittedModels`ParameterEllipsoid[(FittedModels`FittedModelsCommonDump`mu_)?VectorQ, (FittedModels`FittedModelsCommonDump`r_)?VectorQ, (FittedModels`FittedModelsCommonDump`dir_)?MatrixQ] := Module[{FittedModels`FittedModelsCommonDump`rdir = Transpose[{FittedModels`FittedModelsCommonDump`r, FittedModels`FittedModelsCommonDump`dir}], FittedModels`FittedModelsCommonDump`p = Length[FittedModels`FittedModelsCommonDump`mu], FittedModels`FittedModelsCommonDump`sortedR, FittedModels`FittedModelsCommonDump`sortedDIR, FittedModels`FittedModelsCommonDump`newEllipsoid}, FittedModels`FittedModelsCommonDump`newEllipsoid \/; ({FittedModels`FittedModelsCommonDump`sortedR, FittedModels`FittedModelsCommonDump`sortedDIR} = Transpose[Sort[FittedModels`FittedModelsCommonDump`rdir, Order[#1[[2]], #2[[2]]] == -1 & ]]; If[FittedModels`FittedModelsCommonDump`sortedDIR[[1,1]] != 0, FittedModels`FittedModelsCommonDump`sortedDIR \/= FittedModels`FittedModelsCommonDump`sortedDIR[[1,1]]]; If[And @@ (#1 == 0 & ) \/@ Flatten[FittedModels`FittedModelsCommonDump`sortedDIR - IdentityMatrix[FittedModels`FittedModelsCommonDump`p]], FittedModels`FittedModelsCommonDump`newEllipsoid = FittedModels`ParameterEllipsoid[FittedModels`FittedModelsCommonDump`mu, FittedModels`FittedModelsCommonDump`sortedR]; True, False])] \/; Equal @@ Join[Dimensions[FittedModels`FittedModelsCommonDump`dir], {Length[FittedModels`FittedModelsCommonDump`mu], Length[FittedModels`FittedModelsCommonDump`r]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ParameterEllipsoid",
	"FittedModels`ParameterEllipsoidToPrimitives":"ObjectType: Symbol\nUsage: FittedModels`ParameterEllipsoidToPrimitives\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ParameterEllipsoidToPrimitives",
	"ResourceFunctionHelpers`ParameterizePolygon":"ObjectType: Symbol\nUsage: Parameterizes the curve formed by linear paths connecting a set of points.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`ParameterizePolygon[ResourceFunctionHelpers`ColorWinding`Private`ptListIn_, ResourceFunctionHelpers`ColorWinding`Private`t_, ResourceFunctionHelpers`ColorWinding`Private`opts:OptionsPattern[]] := Module[{ResourceFunctionHelpers`ColorWinding`Private`pwTs, ResourceFunctionHelpers`ColorWinding`Private`numPts, ResourceFunctionHelpers`ColorWinding`Private`closedQ, ResourceFunctionHelpers`ColorWinding`Private`precisionQ, ResourceFunctionHelpers`ColorWinding`Private`goodRes = True, ResourceFunctionHelpers`ColorWinding`Private`resIncomplete = True, ResourceFunctionHelpers`ColorWinding`Private`res, ResourceFunctionHelpers`ColorWinding`Private`sideLengths, ResourceFunctionHelpers`ColorWinding`Private`perim, ResourceFunctionHelpers`ColorWinding`Private`loopList, ResourceFunctionHelpers`ColorWinding`Private`ptList, ResourceFunctionHelpers`ColorWinding`Private`tVar = ResourceFunctionHelpers`ColorWinding`Private`t, ResourceFunctionHelpers`ColorWinding`Private`orientVal, ResourceFunctionHelpers`ColorWinding`Private`sublistEnds = {}, ResourceFunctionHelpers`ColorWinding`Private`lowT = 0, ResourceFunctionHelpers`ColorWinding`Private`highT = 1, ResourceFunctionHelpers`ColorWinding`Private`domainScale = 1, ResourceFunctionHelpers`ColorWinding`Private`domainShift = 0, ResourceFunctionHelpers`ColorWinding`Private`listOfList = False, ResourceFunctionHelpers`ColorWinding`Private`newDomain = MatchQ[ResourceFunctionHelpers`ColorWinding`Private`t, {ResourceFunctionHelpers`ColorWinding`Private`a_., ResourceFunctionHelpers`ColorWinding`Private`b_., ResourceFunctionHelpers`ColorWinding`Private`c_.} \/; (Head[ResourceFunctionHelpers`ColorWinding`Private`a] === Symbol || NumericQ[N[ResourceFunctionHelpers`ColorWinding`Private`a]]) && NumericQ[N[ResourceFunctionHelpers`ColorWinding`Private`b]] && NumericQ[N[ResourceFunctionHelpers`ColorWinding`Private`c]] && ResourceFunctionHelpers`ColorWinding`Private`b != ResourceFunctionHelpers`ColorWinding`Private`c]}, {ResourceFunctionHelpers`ColorWinding`Private`closedQ, ResourceFunctionHelpers`ColorWinding`Private`precisionQ, ResourceFunctionHelpers`ColorWinding`Private`orientVal} = OptionValue[ResourceFunctionHelpers`ParameterizePolygon, {ResourceFunctionHelpers`ColorWinding`Private`opts}, {\"ClosedCurve\", \"ExactValues\", \"Orientation\"}]; {ResourceFunctionHelpers`ColorWinding`Private`ptList, ResourceFunctionHelpers`ColorWinding`Private`listOfList} = ResourceFunctionHelpers`ColorWinding`Private`PointListFilter[ResourceFunctionHelpers`ColorWinding`Private`ptListIn]; If[ResourceFunctionHelpers`ColorWinding`Private`listOfList, ResourceFunctionHelpers`ColorWinding`Private`closedQ = False]; If[ !(ListQ[ResourceFunctionHelpers`ColorWinding`Private`ptList] && If[ResourceFunctionHelpers`ColorWinding`Private`listOfList, AllTrue[ResourceFunctionHelpers`ColorWinding`Private`ptList, Length[#1] >= 2 & ],  !MemberQ[Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList, 1], _?ListQ]] && Length[ResourceFunctionHelpers`ColorWinding`Private`ptList] >= 2 && (If[ResourceFunctionHelpers`ColorWinding`Private`listOfList, AnyTrue[(MatchQ[Partition[Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList], #1], Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList, 1]] & ) \/@ DeleteDuplicates[Flatten[Divisors[(Length[Flatten[#1]] & ) \/@ ResourceFunctionHelpers`ColorWinding`Private`ptList]]], TrueQ], AnyTrue[(MatchQ[Partition[Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList], #1], ResourceFunctionHelpers`ColorWinding`Private`ptList] & ) \/@ Divisors[Length[Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList]]], TrueQ]] || Length[ResourceFunctionHelpers`ColorWinding`Private`ptList] == Length[Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList]])), ResourceFunctionHelpers`ColorWinding`Private`goodRes = False; ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`ParameterizePolygon::badPts]]; If[ResourceFunctionHelpers`ColorWinding`Private`goodRes && ResourceFunctionHelpers`ColorWinding`Private`listOfList, ResourceFunctionHelpers`ColorWinding`Private`ptList = (Append[#1, First[#1]] & ) \/@ ResourceFunctionHelpers`ColorWinding`Private`ptList; ResourceFunctionHelpers`ColorWinding`Private`ptList = (First \/@ Split[#1] & ) \/@ ResourceFunctionHelpers`ColorWinding`Private`ptList; ResourceFunctionHelpers`ColorWinding`Private`sublistEnds = Accumulate[Take[Length \/@ ResourceFunctionHelpers`ColorWinding`Private`ptList, 1 ;; -2]]; ResourceFunctionHelpers`ColorWinding`Private`ptList = Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList, 1], ResourceFunctionHelpers`ColorWinding`Private`ptList = First \/@ Split[ResourceFunctionHelpers`ColorWinding`Private`ptList]]; If[AnyTrue[{\"Backward\", \"Backwards\", \"Reverse\", -1}, #1 === ResourceFunctionHelpers`ColorWinding`Private`orientVal & ], ResourceFunctionHelpers`ColorWinding`Private`ptList = Reverse[ResourceFunctionHelpers`ColorWinding`Private`ptList]]; ResourceFunctionHelpers`ColorWinding`Private`loopList = ResourceFunctionHelpers`ColorWinding`Private`ptList; If[ResourceFunctionHelpers`ColorWinding`Private`goodRes &&  !(Head[ResourceFunctionHelpers`ColorWinding`Private`t] === Symbol || NumericQ[ResourceFunctionHelpers`ColorWinding`Private`t] || ResourceFunctionHelpers`ColorWinding`Private`newDomain), ResourceFunctionHelpers`ColorWinding`Private`goodRes = False; If[ListQ[ResourceFunctionHelpers`ColorWinding`Private`t], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`ParameterizePolygon::badList, ResourceFunctionHelpers`ColorWinding`Private`t], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`ParameterizePolygon::badVar, ResourceFunctionHelpers`ColorWinding`Private`t]]]; If[ResourceFunctionHelpers`ColorWinding`Private`newDomain, ResourceFunctionHelpers`ColorWinding`Private`lowT = Min[ResourceFunctionHelpers`ColorWinding`Private`t[[{2, 3}]]]; ResourceFunctionHelpers`ColorWinding`Private`highT = Max[ResourceFunctionHelpers`ColorWinding`Private`t[[{2, 3}]]]; ResourceFunctionHelpers`ColorWinding`Private`domainScale = 1\/(ResourceFunctionHelpers`ColorWinding`Private`highT - ResourceFunctionHelpers`ColorWinding`Private`lowT); ResourceFunctionHelpers`ColorWinding`Private`domainShift = ResourceFunctionHelpers`ColorWinding`Private`lowT; ResourceFunctionHelpers`ColorWinding`Private`tVar = ResourceFunctionHelpers`ColorWinding`Private`t[[1]]; ]; If[Length[ResourceFunctionHelpers`ColorWinding`Private`ptList] == 1, ResourceFunctionHelpers`ColorWinding`Private`res = Piecewise[{{Flatten[ResourceFunctionHelpers`ColorWinding`Private`ptList], ResourceFunctionHelpers`ColorWinding`Private`lowT <= ResourceFunctionHelpers`ColorWinding`Private`tVar <= ResourceFunctionHelpers`ColorWinding`Private`highT}}, {}]; ResourceFunctionHelpers`ColorWinding`Private`resIncomplete = False]; If[ResourceFunctionHelpers`ColorWinding`Private`goodRes && ResourceFunctionHelpers`ColorWinding`Private`resIncomplete, ResourceFunctionHelpers`ColorWinding`Private`numPts = Length[ResourceFunctionHelpers`ColorWinding`Private`ptList] - 1; If[ResourceFunctionHelpers`ColorWinding`Private`closedQ, ResourceFunctionHelpers`ColorWinding`Private`loopList = Append[ResourceFunctionHelpers`ColorWinding`Private`ptList, First[ResourceFunctionHelpers`ColorWinding`Private`ptList]]; ResourceFunctionHelpers`ColorWinding`Private`numPts += 1]; If[ !ResourceFunctionHelpers`ColorWinding`Private`precisionQ, ResourceFunctionHelpers`ColorWinding`Private`loopList = N[ResourceFunctionHelpers`ColorWinding`Private`loopList]]; ResourceFunctionHelpers`ColorWinding`Private`sideLengths = Apply[EuclideanDistance, Partition[ResourceFunctionHelpers`ColorWinding`Private`loopList, 2, 1], {1}]; If[ResourceFunctionHelpers`ColorWinding`Private`listOfList, ResourceFunctionHelpers`ColorWinding`Private`sideLengths = ReplacePart[ResourceFunctionHelpers`ColorWinding`Private`sideLengths, (#1 -> 0 & ) \/@ ResourceFunctionHelpers`ColorWinding`Private`sublistEnds]]; ResourceFunctionHelpers`ColorWinding`Private`perim = Total[ResourceFunctionHelpers`ColorWinding`Private`sideLengths]; Quiet[ResourceFunctionHelpers`ColorWinding`Private`pwTs = ResourceFunctionHelpers`ColorWinding`Private`domainShift + Accumulate[Prepend[ResourceFunctionHelpers`ColorWinding`Private`sideLengths, 0]]\/(ResourceFunctionHelpers`ColorWinding`Private`domainScale*ResourceFunctionHelpers`ColorWinding`Private`perim); ResourceFunctionHelpers`ColorWinding`Private`res = Piecewise[Table[{ResourceFunctionHelpers`ColorWinding`Private`PiecewisePart[ResourceFunctionHelpers`ColorWinding`Private`pwTs[[ResourceFunctionHelpers`ColorWinding`Private`k]], ResourceFunctionHelpers`ColorWinding`Private`pwTs[[ResourceFunctionHelpers`ColorWinding`Private`k + 1]], ResourceFunctionHelpers`ColorWinding`Private`loopList[[ResourceFunctionHelpers`ColorWinding`Private`k]], ResourceFunctionHelpers`ColorWinding`Private`loopList[[ResourceFunctionHelpers`ColorWinding`Private`k + 1]], ResourceFunctionHelpers`ColorWinding`Private`tVar], ResourceFunctionHelpers`ColorWinding`Private`pwTs[[ResourceFunctionHelpers`ColorWinding`Private`k]] <= ResourceFunctionHelpers`ColorWinding`Private`tVar <= ResourceFunctionHelpers`ColorWinding`Private`pwTs[[ResourceFunctionHelpers`ColorWinding`Private`k + 1]]}, {ResourceFunctionHelpers`ColorWinding`Private`k, 1, ResourceFunctionHelpers`ColorWinding`Private`numPts}], {}]]; ]; If[ResourceFunctionHelpers`ColorWinding`Private`listOfList, ResourceFunctionHelpers`ColorWinding`Private`res, Simplify[ResourceFunctionHelpers`ColorWinding`Private`res]] \/; ResourceFunctionHelpers`ColorWinding`Private`goodRes]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ClosedCurve -> True, ExactValues -> True, Orientation -> Automatic}\nAttributes: {}\nFullName: ResourceFunctionHelpers`ParameterizePolygon",
	"Statistics`Library`ParameterSpecifications":"ObjectType: Symbol\nUsage: Statistics`Library`ParameterSpecifications\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ParameterSpecifications",
	"Holonomic`Private`ParameterX":"None",
	"Holonomic`Private`ParameterY":"None",
	"SymbolicTensors`ParametricArcLength":"ObjectType: Symbol\nUsage: SymbolicTensors`ParametricArcLength\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`ParametricArcLength[SymbolicTensors`SymbolicTensorsDump`args___] := With[{SymbolicTensors`SymbolicTensorsDump`res = SymbolicTensors`SymbolicTensorsDump`ccArcLength[{SymbolicTensors`SymbolicTensorsDump`args}]}, If[FreeQ[SymbolicTensors`SymbolicTensorsDump`res, $Failed | SymbolicTensors`SymbolicTensorsDump`ccArcLength], SymbolicTensors`SymbolicTensorsDump`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions, Method -> Automatic, WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: SymbolicTensors`ParametricArcLength",
	"SymbolicTensors`ParametricArea":"ObjectType: Symbol\nUsage: SymbolicTensors`ParametricArea\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`ParametricArea[SymbolicTensors`SymbolicTensorsDump`args___] := With[{SymbolicTensors`SymbolicTensorsDump`res = SymbolicTensors`SymbolicTensorsDump`ccArea[{SymbolicTensors`SymbolicTensorsDump`args}]}, If[FreeQ[SymbolicTensors`SymbolicTensorsDump`res, $Failed | SymbolicTensors`SymbolicTensorsDump`ccArea], SymbolicTensors`SymbolicTensorsDump`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions, Method -> Automatic, WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: SymbolicTensors`ParametricArea",
	"Region`ParametricCentroid":"ObjectType: Symbol\nUsage: Region`ParametricCentroid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`ParametricCentroid[MeasureDump`reg_, MeasureDump`assum_] := Module[{MeasureDump`X, MeasureDump`P, MeasureDump`n, MeasureDump`vars, MeasureDump`pvs, MeasureDump`opts, MeasureDump`tmp, MeasureDump`ans}, MeasureDump`n = Quiet[Region`RegionProperty[MeasureDump`reg, \"SpaceDimension\"]]; If[ !IntegerQ[MeasureDump`n], Return[$Failed]]; MeasureDump`vars = MeasureDump`X \/@ Range[MeasureDump`n]; MeasureDump`pvs = MeasureDump`P \/@ Range[MeasureDump`n]; MeasureDump`opts = {Assumptions -> MeasureDump`assum, GenerateConditions -> Automatic, PrincipalValue -> False}; MeasureDump`tmp = Quiet[MeasureDump`paramcover[MeasureDump`reg, MeasureDump`pvs, MeasureDump`assum]]; If[ListQ[MeasureDump`tmp], MeasureDump`ans = Catch[(MeasureDump`parint[Prepend[MeasureDump`vars, 1]\/MeasureDump`tmp[[1]], MeasureDump`vars, #1, MeasureDump`opts, MeasureDump`assum] & ) \/@ MeasureDump`tmp[[2]]]; If[ListQ[MeasureDump`ans], Return[Plus @@ (Drop[#1, 1]\/#1[[1]] & ) \/@ MeasureDump`ans]]]; MeasureDump`tmp = Quiet[Region`RegionProperty[MeasureDump`reg, MeasureDump`vars, \"ImplicitDescription\"]]; If[Head[MeasureDump`tmp] === Region`RegionProperty, Return[$Failed]]; MeasureDump`ans = Catch[MeasureDump`pwregint[RegionCentroid, MeasureDump`vars, MeasureDump`tmp, MeasureDump`opts]]; If[MeasureDump`ans === $Failed, Return[$Failed]]; If[MeasureDump`assum =!= True, MeasureDump`ans = Refine[MeasureDump`ans, Assumptions -> MeasureDump`assum]]; Simplify`QuickSimplify[MeasureDump`ans]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ParametricCentroid",
	"SymbolicTensors`ParametricCovariantD":"ObjectType: Symbol\nUsage: SymbolicTensors`ParametricCovariantD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`ParametricCovariantD[SymbolicTensors`SymbolicTensorsDump`args__] := With[{SymbolicTensors`SymbolicTensorsDump`res = SymbolicTensors`SymbolicTensorsDump`ccParametricCovariantD[{SymbolicTensors`SymbolicTensorsDump`args}]}, SymbolicTensors`SymbolicTensorsDump`res \/; FreeQ[SymbolicTensors`SymbolicTensorsDump`res, $Failed | SymbolicTensors`SymbolicTensorsDump`ccParametricCovariantD]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SymbolicTensors`ParametricCovariantD",
	"SymbolicTensors`ParametricMeasure":"ObjectType: Symbol\nUsage: SymbolicTensors`ParametricMeasure\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`ParametricMeasure[SymbolicTensors`SymbolicTensorsDump`c_, SymbolicTensors`SymbolicTensorsDump`ti_, SymbolicTensors`SymbolicTensorsDump`metric:Repeated[Except[_?OptionQ], {0, 1}], SymbolicTensors`SymbolicTensorsDump`opts:OptionsPattern[]] := Module[{SymbolicTensors`SymbolicTensorsDump`tiNew, SymbolicTensors`SymbolicTensorsDump`cNew, SymbolicTensors`SymbolicTensorsDump`patch, SymbolicTensors`SymbolicTensorsDump`method, SymbolicTensors`SymbolicTensorsDump`wp}, Catch[If[ !MatchQ[SymbolicTensors`SymbolicTensorsDump`ti, {__List}], Message[RegionMeasure::varslst, SymbolicTensors`SymbolicTensorsDump`ti, HoldForm[RegionMeasure[SymbolicTensors`SymbolicTensorsDump`c, SymbolicTensors`SymbolicTensorsDump`ti, SymbolicTensors`SymbolicTensorsDump`metric, SymbolicTensors`SymbolicTensorsDump`opts]]]; Throw[$Failed]]; SymbolicTensors`SymbolicTensorsDump`tiNew = (If[SymbolicTensors`SymbolicTensorsDump`validateIteratorAndReturnVar[#1, RegionMeasure] === $Failed, Throw[$Failed], First[#1]] & ) \/@ SymbolicTensors`SymbolicTensorsDump`ti; If[Developer`ListRepresentationQ[SymbolicTensors`SymbolicTensorsDump`c], SymbolicTensors`SymbolicTensorsDump`cNew = SymbolicTensors`SymbolicTensorsDump`c, SymbolicTensors`SymbolicTensorsDump`cNew = Append[SymbolicTensors`SymbolicTensorsDump`tiNew, SymbolicTensors`SymbolicTensorsDump`c]]; SymbolicTensors`SymbolicTensorsDump`patch = SymbolicTensors`SymbolicTensorsDump`validateMappingPatchAndReturnPatch[SymbolicTensors`SymbolicTensorsDump`c, SymbolicTensors`SymbolicTensorsDump`cNew, RegionMeasure, SymbolicTensors`SymbolicTensorsDump`metric]; If[SymbolicTensors`SymbolicTensorsDump`patch === $Failed, Throw[$Failed]]; SymbolicTensors`SymbolicTensorsDump`method = Method \/. Flatten[{SymbolicTensors`SymbolicTensorsDump`opts}] \/. {Method -> Automatic}; SymbolicTensors`SymbolicTensorsDump`wp = WorkingPrecision \/. Flatten[{SymbolicTensors`SymbolicTensorsDump`opts}] \/. {WorkingPrecision -> Infinity, Automatic -> Infinity}; SymbolicTensors`SymbolicTensorsDump`method = SymbolicTensors`MeasureMethodParser[SymbolicTensors`SymbolicTensorsDump`cNew, SymbolicTensors`SymbolicTensorsDump`ti, SymbolicTensors`SymbolicTensorsDump`patch, SymbolicTensors`SymbolicTensorsDump`method, SymbolicTensors`SymbolicTensorsDump`wp, RegionMeasure]; If[SymbolicTensors`SymbolicTensorsDump`method === $Failed, $Failed, SymbolicTensors`SymbolicTensorsDump`iAreaVolume[SymbolicTensors`SymbolicTensorsDump`cNew, SymbolicTensors`SymbolicTensorsDump`ti, SymbolicTensors`SymbolicTensorsDump`patch, SymbolicTensors`SymbolicTensorsDump`method, SymbolicTensors`SymbolicTensorsDump`wp, Sequence @@ FilterRules[{SymbolicTensors`SymbolicTensorsDump`opts}, Assumptions]]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SymbolicTensors`ParametricMeasure",
	"ComputationalGeometry`Dump`ParametricMesh":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`ParametricMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`ParametricMesh",
	"Graphics`Legacy`ParametricPlot":"ObjectType: Symbol\nUsage: Graphics`Legacy`ParametricPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                      1\n{AspectRatio -> -----------, Axes -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> Automatic, Background -> Automatic, ColorOutput -> Automatic, Compiled -> True, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> $FormatType, Frame -> False, FrameLabel -> None, FrameStyle -> Automatic, FrameTicks -> Automatic, GridLines -> None, ImageSize -> Automatic, MaxBend -> 10., PlotDivision -> 30., PlotLabel -> None, PlotPoints -> 25, PlotRange -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, Prolog -> {}, RotateLabel -> True, TextStyle :> $TextStyle, Ticks -> Automatic}\n                GoldenRatio\nAttributes: {HoldAll}\nFullName: Graphics`Legacy`ParametricPlot",
	"Visualization`Core`ParametricPlot":"ObjectType: Symbol\nUsage: Visualization`Core`ParametricPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> True, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, ExclusionsStyle -> None, FormatType :> TraditionalForm, Frame -> Automatic, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, MaxRecursion -> Automatic, Mesh -> Automatic, MeshFunctions -> Automatic, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> Automatic, PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotateLabel -> True, TextureCoordinateFunction -> Automatic, TextureCoordinateScaling -> Automatic, Ticks -> Automatic, TicksStyle -> {}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`ParametricPlot",
	"Graphics`Legacy`ParametricPlot3D":"ObjectType: Symbol\nUsage: Graphics`Legacy`ParametricPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AmbientLight -> GrayLevel[0.], AspectRatio -> Automatic, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, AxesStyle -> Automatic, Background -> Automatic, Boxed -> True, BoxRatios -> Automatic, BoxStyle -> Automatic, ColorOutput -> Automatic, Compiled -> True, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FaceGrids -> None, FormatType :> $FormatType, ImageSize -> Automatic, Lighting -> True, LightSources -> {{{1., 0., 1.}, RGBColor[1, 0, 0]}, {{1., 1., 1.}, RGBColor[0, 1, 0]}, {{0., 1., 1.}, RGBColor[0, 0, 1]}}, Plot3Matrix -> Automatic, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> Automatic, PlotRegion -> Automatic, PolygonIntersections -> True, Prolog -> {}, RenderAll -> True, Shading -> True, SphericalRegion -> Automatic, TextStyle :> $TextStyle, Ticks -> Automatic, ViewCenter -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewVertical -> {0., 0., 1.}}\nAttributes: {HoldAll}\nFullName: Graphics`Legacy`ParametricPlot3D",
	"Visualization`Core`ParametricPlot3D":"ObjectType: Symbol\nUsage: Visualization`Core`ParametricPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, Boxed -> True, BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, ExclusionsStyle -> None, FaceGrids -> None, FaceGridsStyle -> {}, FormatType :> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxRecursion -> Automatic, Mesh -> Automatic, MeshFunctions -> Automatic, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> Automatic, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotationAction -> Fit, SphericalRegion -> Automatic, TextureCoordinateFunction -> Automatic, TextureCoordinateScaling -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`ParametricPlot3D",
	"Explore`ParametricPlotExplorer":"ObjectType: Symbol\nUsage: Explore`ParametricPlotExplorer\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Explore`ParametricPlotExplorer[Explore`ParametricPlotExplorerDump`f_String] := Symbol[StringJoin[\"Explore`ParametricPlotExplorerDump`\", Explore`ParametricPlotExplorerDump`f]]\nExplore`ParametricPlotExplorer[Explore`ParametricPlotExplorerDump`f_String, Explore`ParametricPlotExplorerDump`args__] := Explore`ParametricPlotExplorer[Explore`ParametricPlotExplorerDump`f][Explore`ParametricPlotExplorerDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Explore`ParametricPlotExplorer",
	"NDSolve`ParametricPlugInFunction":"ObjectType: Symbol\nUsage: NDSolve`ParametricPlugInFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ParametricPlugInFunction",
	"Region`ParametricRegionParameters":"ObjectType: Symbol\nUsage: Region`ParametricRegionParameters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ParametricRegionParameters",
	"Graphics`Region`ParametricRegionQ":"ObjectType: Symbol\nUsage: Graphics`Region`ParametricRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Region`ParametricRegionQ",
	"Region`ParametricRegionQ":"ObjectType: Symbol\nUsage: Region`ParametricRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ParametricRegionQ",
	"Charting`ParametricScale":"ObjectType: Symbol\nUsage: Charting`ParametricScale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`ParametricScale[Charting`AxisDump`x_, {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`ParametricScale, {\"Line\", {{Charting`AxisDump`x, Charting`AxisDump`min} -> Charting`AxisDump`min, {Charting`AxisDump`x, Charting`AxisDump`max} -> Charting`AxisDump`max}}, {Charting`AxisDump`min, Charting`AxisDump`max}, Charting`AxisDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Charting`AxisDump`DivisionAlignment -> Automatic, Charting`AxisDump`DivisionAnnotations -> None, Charting`AxisDump`DivisionLabelAlignment -> Automatic, Charting`AxisDump`DivisionLabels -> Automatic, Charting`AxisDump`DivisionLabelStyle -> Automatic, Charting`AxisDump`DivisionMarker -> Automatic, Charting`AxisDump`DivisionSizes -> Automatic, Charting`AxisDump`DivisionStyle -> Automatic, LabelingFunction -> Automatic, Method -> Automatic, Charting`AxisDump`ScaleAppearance -> Automatic, ScaleDivisions -> Automatic, Charting`AxisDump`ScaleFactor -> None, Charting`AxisDump`ScaleLabels -> Automatic, Charting`AxisDump`ScaleLabelStyle -> Automatic, ScaleRanges -> {}, ScaleRangeStyle -> Automatic, Charting`AxisDump`ScaleStyle -> Automatic, ScalingFunctions -> None}\nAttributes: {}\nFullName: Charting`ParametricScale",
	"Region`Mesh`ParametricSegmentsFromImplicitCurve":"ObjectType: Symbol\nUsage: Region`Mesh`ParametricSegmentsFromImplicitCurve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`ParametricSegmentsFromImplicitCurve[Region`Mesh`ImplicitToParametricDump`opfun_, {Region`Mesh`ImplicitToParametricDump`x_, Region`Mesh`ImplicitToParametricDump`oxmin_, Region`Mesh`ImplicitToParametricDump`oxmax_}, {Region`Mesh`ImplicitToParametricDump`y_, Region`Mesh`ImplicitToParametricDump`oymin_, Region`Mesh`ImplicitToParametricDump`oymax_}, OptionsPattern[]] := Module[{Region`Mesh`ImplicitToParametricDump`hmax, Region`Mesh`ImplicitToParametricDump`temp, Region`Mesh`ImplicitToParametricDump`res, Region`Mesh`ImplicitToParametricDump`startingpoints, Region`Mesh`ImplicitToParametricDump`pfun, Region`Mesh`ImplicitToParametricDump`xmin, Region`Mesh`ImplicitToParametricDump`xmax, Region`Mesh`ImplicitToParametricDump`ymin, Region`Mesh`ImplicitToParametricDump`ymax, Region`Mesh`ImplicitToParametricDump`xL, Region`Mesh`ImplicitToParametricDump`yL, Region`Mesh`ImplicitToParametricDump`bpts, Region`Mesh`ImplicitToParametricDump`PredicateFunction, Region`Mesh`ImplicitToParametricDump`dx, Region`Mesh`ImplicitToParametricDump`dy}, If[Region`Mesh`ImplicitToParametricDump`oxmax <= Region`Mesh`ImplicitToParametricDump`oxmin || Region`Mesh`ImplicitToParametricDump`oymax <= Region`Mesh`ImplicitToParametricDump`oymin, Return[$Failed]]; If[ !(MatchQ[Head[Region`Mesh`ImplicitToParametricDump`x], Symbol] || MatchQ[Head[Region`Mesh`ImplicitToParametricDump`y], Symbol]), Return[$Failed]]; Region`Mesh`ImplicitToParametricDump`dx = (0*Abs[Region`Mesh`ImplicitToParametricDump`oxmax - Region`Mesh`ImplicitToParametricDump`oxmin])\/15; Region`Mesh`ImplicitToParametricDump`dy = (0*Abs[Region`Mesh`ImplicitToParametricDump`oymax - Region`Mesh`ImplicitToParametricDump`oymin])\/15; Region`Mesh`ImplicitToParametricDump`pfun = Flatten[{Region`Mesh`ImplicitToParametricDump`opfun}]; If[Length[Region`Mesh`ImplicitToParametricDump`pfun] > 1, Return[$Failed], Region`Mesh`ImplicitToParametricDump`pfun = First[Region`Mesh`ImplicitToParametricDump`pfun]]; If[MatchQ[Head[Region`Mesh`ImplicitToParametricDump`pfun], Equal | LessEqual | GreaterEqual | Less | Greater], Region`Mesh`ImplicitToParametricDump`pfun = Subtract @@ Region`Mesh`ImplicitToParametricDump`pfun]; Region`Mesh`ImplicitToParametricDump`pfun = Numerator[Together[Region`Mesh`ImplicitToParametricDump`pfun]]; Region`Mesh`ImplicitToParametricDump`temp = Region`Mesh`ImplicitToParametricDump`pfun \/. {Region`Mesh`ImplicitToParametricDump`x :> Region`Mesh`ImplicitToParametricDump`oxmin, Region`Mesh`ImplicitToParametricDump`y :> Region`Mesh`ImplicitToParametricDump`oymin}; If[ !NumericQ[Region`Mesh`ImplicitToParametricDump`temp], Return[$Failed]]; Region`Mesh`ImplicitToParametricDump`xL = Abs[Region`Mesh`ImplicitToParametricDump`oxmax - Region`Mesh`ImplicitToParametricDump`oxmin]; Region`Mesh`ImplicitToParametricDump`yL = Abs[Region`Mesh`ImplicitToParametricDump`oymax - Region`Mesh`ImplicitToParametricDump`oymin]; {Region`Mesh`ImplicitToParametricDump`xmin, Region`Mesh`ImplicitToParametricDump`xmax} = {Region`Mesh`ImplicitToParametricDump`oxmin - Region`Mesh`ImplicitToParametricDump`dx, Region`Mesh`ImplicitToParametricDump`oxmax + Region`Mesh`ImplicitToParametricDump`dx}\/Region`Mesh`ImplicitToParametricDump`xL; {Region`Mesh`ImplicitToParametricDump`ymin, Region`Mesh`ImplicitToParametricDump`ymax} = {Region`Mesh`ImplicitToParametricDump`oymin - Region`Mesh`ImplicitToParametricDump`dx, Region`Mesh`ImplicitToParametricDump`oymax + Region`Mesh`ImplicitToParametricDump`dx}\/Region`Mesh`ImplicitToParametricDump`yL; Region`Mesh`ImplicitToParametricDump`pfun = Region`Mesh`ImplicitToParametricDump`pfun \/. {Region`Mesh`ImplicitToParametricDump`x :> Region`Mesh`ImplicitToParametricDump`x*Region`Mesh`ImplicitToParametricDump`xL, Region`Mesh`ImplicitToParametricDump`y :> Region`Mesh`ImplicitToParametricDump`y*Region`Mesh`ImplicitToParametricDump`yL}; Region`Mesh`ImplicitToParametricDump`dPrint[2, \" {xmin,xmax,ymin,ymax} ->\", {Region`Mesh`ImplicitToParametricDump`xmin, Region`Mesh`ImplicitToParametricDump`xmax, Region`Mesh`ImplicitToParametricDump`ymin, Region`Mesh`ImplicitToParametricDump`ymax}]; Region`Mesh`ImplicitToParametricDump`dPrint[2, \" xL,yL ->\", {Region`Mesh`ImplicitToParametricDump`xL, Region`Mesh`ImplicitToParametricDump`yL}]; Region`Mesh`ImplicitToParametricDump`dPrint[2, \" pfun after scaling ->\", Region`Mesh`ImplicitToParametricDump`pfun]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Curve\"] = Region`Mesh`ImplicitToParametricDump`pfun; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Variables\"] = {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Function\"] = Region`Mesh`Utilities`MakeListableCompiledFunction[Region`Mesh`ImplicitToParametricDump`pfun, {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"NumericalFunction\"] = Experimental`CreateNumericalFunction[{Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}, Region`Mesh`ImplicitToParametricDump`pfun, {}]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"AngleToValue\"] = Region`Mesh`ImplicitToParametricDump`AngleToFunctionValue[Region`Mesh`ImplicitToParametricDump`pfun, {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Bounds\"] = {{Region`Mesh`ImplicitToParametricDump`xmin, Region`Mesh`ImplicitToParametricDump`xmax}, {Region`Mesh`ImplicitToParametricDump`ymin, Region`Mesh`ImplicitToParametricDump`ymax}}; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"BoundFunction\"] = Function[{Region`Mesh`ImplicitToParametricDump`x$, Region`Mesh`ImplicitToParametricDump`y$}, Evaluate[Region`Mesh`ImplicitToParametricDump`xmin <= Region`Mesh`ImplicitToParametricDump`x$ <= Region`Mesh`ImplicitToParametricDump`xmax && Region`Mesh`ImplicitToParametricDump`ymin <= Region`Mesh`ImplicitToParametricDump`y$ <= Region`Mesh`ImplicitToParametricDump`ymax]]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Scales\"] = {Region`Mesh`ImplicitToParametricDump`xL, Region`Mesh`ImplicitToParametricDump`yL}; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Tangent\"] = Region`Mesh`ImplicitToParametricDump`MakeTangentVector[Region`Mesh`ImplicitToParametricDump`pfun, {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Gradient\"] = Region`Mesh`ImplicitToParametricDump`MakeGradientVector[Region`Mesh`ImplicitToParametricDump`pfun, {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Hessian\"] = Region`Mesh`ImplicitToParametricDump`MakeHessianMatrix[Region`Mesh`ImplicitToParametricDump`pfun, {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`y}]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"RootFunction\"] = Region`Mesh`CreateBrentRootFunction[Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Function\"], Method -> {\"CircleIntersection\", \"ReturnParameter\" -> False}, \"FindRoot\" -> True, \"FindBracket\" -> True]; Region`Mesh`ImplicitToParametricDump`PredicateFunction[\"Tolerance\"] = N[10^(-6)]; Region`Mesh`ImplicitToParametricDump`startingpoints = Quiet[Region`Mesh`ImplicitToParametricDump`SeedInitialConditions[Region`Mesh`ImplicitToParametricDump`PredicateFunction, {Region`Mesh`ImplicitToParametricDump`x, Region`Mesh`ImplicitToParametricDump`xmin, Region`Mesh`ImplicitToParametricDump`xmax}, {Region`Mesh`ImplicitToParametricDump`y, Region`Mesh`ImplicitToParametricDump`ymin, Region`Mesh`ImplicitToParametricDump`ymax}, 750, 750]]; Region`Mesh`ImplicitToParametricDump`dPrint[2, \" startingpoints ->\", Region`Mesh`ImplicitToParametricDump`startingpoints]; If[Region`Mesh`ImplicitToParametricDump`startingpoints === $Failed || Length[Region`Mesh`ImplicitToParametricDump`startingpoints] == 0, Return[$Failed]]; Region`Mesh`ImplicitToParametricDump`hmax = OptionValue[\"MaxStepSize\"]; If[NumericQ[Region`Mesh`ImplicitToParametricDump`hmax], Region`Mesh`ImplicitToParametricDump`hmax = Abs[Region`Mesh`ImplicitToParametricDump`hmax]]; If[MatchQ[Region`Mesh`ImplicitToParametricDump`hmax, Automatic | \"Automatic\"], Region`Mesh`ImplicitToParametricDump`hmax = N[Min[Max[Region`Mesh`ImplicitToParametricDump`xmax - Region`Mesh`ImplicitToParametricDump`xmin, Region`Mesh`ImplicitToParametricDump`ymax - Region`Mesh`ImplicitToParametricDump`ymin]\/200, Region`Mesh`ImplicitToParametricDump`$MaxRadius\/10, 10^(-3)]]]; Region`Mesh`ImplicitToParametricDump`res = Catch[Region`Mesh`ImplicitToParametricDump`ParametricSegmentsAngularMethod[Region`Mesh`ImplicitToParametricDump`PredicateFunction, Region`Mesh`ImplicitToParametricDump`startingpoints, Region`Mesh`ImplicitToParametricDump`hmax]]; If[Region`Mesh`ImplicitToParametricDump`res === $Failed, Region`Mesh`ImplicitToParametricDump`dPrint[2, \"!!!! FAILED TO GET THE CURVES !!!!!!\"]; Return[$Failed]]; {Region`Mesh`ImplicitToParametricDump`res, Region`Mesh`ImplicitToParametricDump`bpts} = Region`Mesh`ImplicitToParametricDump`res; Region`Mesh`ImplicitToParametricDump`res = Catch[Region`Mesh`ImplicitToParametricDump`ProcessSegmentData[Reverse[Region`Mesh`ImplicitToParametricDump`res], {Region`Mesh`ImplicitToParametricDump`xL, Region`Mesh`ImplicitToParametricDump`yL}]]; If[Region`Mesh`ImplicitToParametricDump`res === $Failed, Return[$Failed]]; Region`Mesh`ImplicitToParametricDump`PrintCurveSegments[Region`Mesh`ImplicitToParametricDump`$debugLevel, Region`Mesh`ImplicitToParametricDump`res, {{Region`Mesh`ImplicitToParametricDump`oxmin, Region`Mesh`ImplicitToParametricDump`oxmax}, {Region`Mesh`ImplicitToParametricDump`oymin, Region`Mesh`ImplicitToParametricDump`oymax}}]; {Region`Mesh`ImplicitToParametricDump`res, Region`Mesh`ImplicitToParametricDump`bpts}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxStepSize -> Automatic, PerformanceGoal -> Speed}\nAttributes: {}\nFullName: Region`Mesh`ParametricSegmentsFromImplicitCurve",
	"NDSolve`Shooting`Implementation`ParametricShooting":"ObjectType: Symbol\nUsage: NDSolve`Shooting`Implementation`ParametricShooting\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`Shooting`Implementation`ParametricShooting[NDSolve`Shooting`ShootingDump`DEs_, NDSolve`Shooting`ShootingDump`ICs_, NDSolve`Shooting`ShootingDump`BCs_, NDSolve`Shooting`ShootingDump`dvars_, NDSolve`Shooting`ShootingDump`ivspec_, {NDSolve`Shooting`ShootingDump`params__}, {NDSolve`Shooting`ShootingDump`startparams__}, NDSolve`Shooting`ShootingDump`prec_, NDSolve`Shooting`ShootingDump`flags_, NDSolve`Shooting`ShootingDump`optvals_, NDSolve`Shooting`ShootingDump`ndoptsin_] := Module[{NDSolve`Shooting`ShootingDump`delta, NDSolve`Shooting`ShootingDump`frmethod, NDSolve`Shooting`ShootingDump`maxit, NDSolve`Shooting`ShootingDump`J, NDSolve`Shooting`ShootingDump`lsf, NDSolve`Shooting`ShootingDump`mess, NDSolve`Shooting`ShootingDump`msghead, NDSolve`Shooting`ShootingDump`norm, NDSolve`Shooting`ShootingDump`pfun, NDSolve`Shooting`ShootingDump`p, NDSolve`Shooting`ShootingDump`rtol, NDSolve`Shooting`ShootingDump`atol, NDSolve`Shooting`ShootingDump`sresidual, NDSolve`Shooting`ShootingDump`residual, NDSolve`Shooting`ShootingDump`err, NDSolve`Shooting`ShootingDump`rel, NDSolve`Shooting`ShootingDump`res}, NDSolve`Shooting`ShootingDump`dPrint[3, \"ParametricShooting\"[NDSolve`Shooting`ShootingDump`DEs, NDSolve`Shooting`ShootingDump`ICs, NDSolve`Shooting`ShootingDump`BCs, NDSolve`Shooting`ShootingDump`dvars, NDSolve`Shooting`ShootingDump`ivspec, {NDSolve`Shooting`ShootingDump`params}, {NDSolve`Shooting`ShootingDump`startparams}, NDSolve`Shooting`ShootingDump`prec, NDSolve`Shooting`ShootingDump`flags, NDSolve`Shooting`ShootingDump`optvals, NDSolve`Shooting`ShootingDump`ndoptsin]]; {NDSolve`Shooting`ShootingDump`frmethod, NDSolve`Shooting`ShootingDump`maxit, NDSolve`Shooting`ShootingDump`norm} = NDSolve`Shooting`ShootingDump`optvals; NDSolve`Shooting`ShootingDump`pfun = ParametricNDSolveValue[{NDSolve`Shooting`ShootingDump`DEs, NDSolve`Shooting`ShootingDump`ICs}, NDSolve`Shooting`ShootingDump`BCs, NDSolve`Shooting`ShootingDump`ivspec, {NDSolve`Shooting`ShootingDump`params}, DependentVariables -> NDSolve`Shooting`ShootingDump`dvars, InterpolationOrder -> Automatic, NDSolve`Shooting`ShootingDump`ndoptsin]; NDSolve`Shooting`ShootingDump`msghead = OptionValue[NDSolve`Shooting`ShootingDump`ndoptsin, \"Caller\"]; {NDSolve`Shooting`ShootingDump`p, NDSolve`Shooting`ShootingDump`rtol, NDSolve`Shooting`ShootingDump`atol} = NDSolve`Shooting`ShootingDump`ScaledVectorNormData[NDSolve`Shooting`ShootingDump`norm, NDSolve`Shooting`ShootingDump`prec]; If[BitAnd[NDSolve`Shooting`ShootingDump`flags, NDSolve`Shooting`ShootingDump`LinearBVPBit] != 0, Block[{$Messages, $MessageList}, NDSolve`Shooting`ShootingDump`J = D[NDSolve`Shooting`ShootingDump`pfun[NDSolve`Shooting`ShootingDump`params], {{NDSolve`Shooting`ShootingDump`params}}]; NDSolve`Shooting`ShootingDump`J = Transpose[NDSolve`Shooting`ShootingDump`J \/. Thread[{NDSolve`Shooting`ShootingDump`params} -> {NDSolve`Shooting`ShootingDump`startparams}]]; NDSolve`Shooting`ShootingDump`lsf = LinearSolve[NDSolve`Shooting`ShootingDump`J]; NDSolve`Shooting`ShootingDump`sresidual = NDSolve`Shooting`ShootingDump`pfun[NDSolve`Shooting`ShootingDump`startparams]; NDSolve`Shooting`ShootingDump`dPrint[2, \"Linear J = \", NDSolve`Shooting`ShootingDump`J, \" sresidual = \", NDSolve`Shooting`ShootingDump`sresidual]; NDSolve`Shooting`ShootingDump`res = NDSolve`Shooting`ShootingDump`lsf[-NDSolve`Shooting`ShootingDump`sresidual]; NDSolve`Shooting`ShootingDump`mess = Cases[$MessageList, HoldPattern[MessageName[LinearSolve, _]], {2}]]; If[ !ListQ[NDSolve`Shooting`ShootingDump`res], If[Length[NDSolve`Shooting`ShootingDump`mess] > 0, NDSolve`NDSolveMessage[NDSolve`Shooting`ShootingDump`msghead, \"bvls\"]], If[Length[NDSolve`Shooting`ShootingDump`mess] > 0, NDSolve`NDSolveMessage[NDSolve`Shooting`ShootingDump`msghead, \"bvluc\"]]; NDSolve`Shooting`ShootingDump`res += {NDSolve`Shooting`ShootingDump`startparams}; Block[{$Messages, $MessageList}, NDSolve`Shooting`ShootingDump`sresidual = NDSolve`Shooting`ShootingDump`pfun @@ NDSolve`Shooting`ShootingDump`res; NDSolve`Shooting`ShootingDump`dPrint[2, \"residual = \", NDSolve`Shooting`ShootingDump`sresidual]; NDSolve`Shooting`ShootingDump`delta = NDSolve`Shooting`ShootingDump`lsf[-NDSolve`Shooting`ShootingDump`sresidual]; If[Length[NDSolve`Shooting`ShootingDump`mess] > 0, NDSolve`Shooting`ShootingDump`mess = {}, NDSolve`Shooting`ShootingDump`mess = Cases[$MessageList, HoldPattern[MessageName[LinearSolve, _]], {2}]]]; If[ListQ[NDSolve`Shooting`ShootingDump`delta], If[Length[NDSolve`Shooting`ShootingDump`mess] > 0, NDSolve`NDSolveMessage[NDSolve`Shooting`ShootingDump`msghead, \"bvluc\"]]; NDSolve`Shooting`ShootingDump`residual = NDSolve`Shooting`ShootingDump`pfun @@ (NDSolve`Shooting`ShootingDump`res + NDSolve`Shooting`ShootingDump`delta); If[TrueQ[Norm[NDSolve`Shooting`ShootingDump`residual, NDSolve`Shooting`ShootingDump`p] <= Norm[NDSolve`Shooting`ShootingDump`sresidual, NDSolve`Shooting`ShootingDump`p]], NDSolve`Shooting`ShootingDump`res += NDSolve`Shooting`ShootingDump`delta]; ]], If[NDSolve`Shooting`ShootingDump`frmethod === Automatic, NDSolve`Shooting`ShootingDump`frmethod = {\"Newton\", \"StepControl\" -> \"TrustRegion\"}]; NDSolve`Shooting`ShootingDump`res = FindRoot[Evaluate[NDSolve`Shooting`ShootingDump`pfun[NDSolve`Shooting`ShootingDump`params]], SetPrecision[Transpose[{{NDSolve`Shooting`ShootingDump`params}, {NDSolve`Shooting`ShootingDump`startparams}}], NDSolve`Shooting`ShootingDump`prec], \"AccuracyGoal\" -> NDSolve`Shooting`ShootingDump`Goal[NDSolve`Shooting`ShootingDump`atol], \"PrecisionGoal\" -> NDSolve`Shooting`ShootingDump`Goal[NDSolve`Shooting`ShootingDump`rtol], \"MaxIterations\" -> NDSolve`Shooting`ShootingDump`maxit, \"Method\" -> NDSolve`Shooting`ShootingDump`frmethod, \"WorkingPrecision\" -> NDSolve`Shooting`ShootingDump`prec]; If[MatchQ[NDSolve`Shooting`ShootingDump`res, {_Rule..}], NDSolve`Shooting`ShootingDump`res = {NDSolve`Shooting`ShootingDump`params} \/. NDSolve`Shooting`ShootingDump`res, NDSolve`Shooting`ShootingDump`res = $Failed]]; If[ListQ[NDSolve`Shooting`ShootingDump`res], NDSolve`Shooting`ShootingDump`err = NDSolve`Shooting`ShootingDump`pfun @@ NDSolve`Shooting`ShootingDump`res; NDSolve`Shooting`ShootingDump`rel = NDSolve`Shooting`ShootingDump`atol + NDSolve`Shooting`ShootingDump`rtol*Norm[NDSolve`Shooting`ShootingDump`res, NDSolve`Shooting`ShootingDump`p]; NDSolve`Shooting`ShootingDump`dPrint[1, \"res = \", NDSolve`Shooting`ShootingDump`res, \" err = \", NDSolve`Shooting`ShootingDump`err, \" scaled err = \", Norm[NDSolve`Shooting`ShootingDump`err, NDSolve`Shooting`ShootingDump`p]\/NDSolve`Shooting`ShootingDump`rel]; {NDSolve`Shooting`ShootingDump`res, Norm[NDSolve`Shooting`ShootingDump`err, NDSolve`Shooting`ShootingDump`p]\/NDSolve`Shooting`ShootingDump`rel}, NDSolve`Shooting`ShootingDump`dPrint[1, \"Shooting failure\"]; $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`Shooting`Implementation`ParametricShooting",
	"NMinimize`ParametricSubstitution":"ObjectType: Symbol\nUsage: NMinimize`ParametricSubstitution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NMinimize`ParametricSubstitution[Optimization`NMinimizeDump`fn_, Optimization`NMinimizeDump`cons_, Optimization`NMinimizeDump`vars_List] := Module[{Optimization`NMinimizeDump`pos, Optimization`NMinimizeDump`parcons, Optimization`NMinimizeDump`con, Optimization`NMinimizeDump`cvars, Optimization`NMinimizeDump`parreg, Optimization`NMinimizeDump`fastd, Optimization`NMinimizeDump`pars, Optimization`NMinimizeDump`regcons, Optimization`NMinimizeDump`parfuns, Optimization`NMinimizeDump`rrules, Optimization`NMinimizeDump`newfn, Optimization`NMinimizeDump`newcons}, Optimization`NMinimizeDump`pos = Position[Optimization`NMinimizeDump`cons, Element[_, _ParametricRegion]]; If[Length[Optimization`NMinimizeDump`pos] =!= 1, Return[$Failed]]; Optimization`NMinimizeDump`parcons = Extract[Optimization`NMinimizeDump`cons, Optimization`NMinimizeDump`pos]; Optimization`NMinimizeDump`con = Optimization`NMinimizeDump`parcons[[1]]; Optimization`NMinimizeDump`cvars = Optimization`NMinimizeDump`con[[1]]; If[Length[Optimization`NMinimizeDump`cvars] =!= Length[Optimization`NMinimizeDump`vars], Return[$Failed]; ]; Optimization`NMinimizeDump`parreg = Optimization`NMinimizeDump`con[[2]]; Optimization`NMinimizeDump`fastd = Region`RegionProperty[Optimization`NMinimizeDump`parreg, Optimization`NMinimizeDump`vars, \"FastDescription\"]; If[ !ListQ[Optimization`NMinimizeDump`fastd], Return[$Failed]]; Optimization`NMinimizeDump`fastd = Optimization`NMinimizeDump`fastd[[1]]; Optimization`NMinimizeDump`pars = Optimization`NMinimizeDump`fastd[[1]]; Optimization`NMinimizeDump`regcons = Optimization`NMinimizeDump`fastd[[2]]; Optimization`NMinimizeDump`parfuns = Optimization`NMinimizeDump`fastd[[3]]; Optimization`NMinimizeDump`rrules = Thread[Optimization`NMinimizeDump`vars -> Optimization`NMinimizeDump`parfuns]; {Optimization`NMinimizeDump`newfn, Optimization`NMinimizeDump`newcons} = {Optimization`NMinimizeDump`fn, Optimization`NMinimizeDump`cons} \/. Optimization`NMinimizeDump`rrules; Optimization`NMinimizeDump`newcons = ReplacePart[Optimization`NMinimizeDump`newcons, Optimization`NMinimizeDump`pos -> Optimization`NMinimizeDump`regcons]; {Optimization`NMinimizeDump`newfn, Optimization`NMinimizeDump`newcons, Optimization`NMinimizeDump`pars, Optimization`NMinimizeDump`parfuns}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NMinimize`ParametricSubstitution",
	"SymbolicTensors`ParametricVolume":"ObjectType: Symbol\nUsage: SymbolicTensors`ParametricVolume\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`ParametricVolume[SymbolicTensors`SymbolicTensorsDump`args___] := With[{SymbolicTensors`SymbolicTensorsDump`res = SymbolicTensors`SymbolicTensorsDump`ccVolume[{SymbolicTensors`SymbolicTensorsDump`args}]}, If[FreeQ[SymbolicTensors`SymbolicTensorsDump`res, $Failed | SymbolicTensors`SymbolicTensorsDump`ccVolume], SymbolicTensors`SymbolicTensorsDump`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions, Method -> Automatic, WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: SymbolicTensors`ParametricVolume",
	"Solve`ParamUnequal":"ObjectType: Symbol\nUsage: Solve`ParamUnequal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Solve`ParamUnequal",
	"NDSolve`Parareal":"ObjectType: Symbol\nUsage: NDSolve`Parareal\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`Parareal \/: NDSolve`InitializeMethod[NDSolve`Parareal, {NDSolve`PararealDump`stepmode_, NDSolve`PararealDump`stepcontrol_, NDSolve`PararealDump`denseoutput_}, NDSolve`PararealDump`sd_, NDSolve`PararealDump`nf_, NDSolve`PararealDump`ndstate_, NDSolve`PararealDump`rawmopts_] := Module[{NDSolve`PararealDump`errests, NDSolve`PararealDump`kernels, NDSolve`PararealDump`localkernels, NDSolve`PararealDump`methodp, NDSolve`PararealDump`methods, NDSolve`PararealDump`mode, NDSolve`PararealDump`ndstates, NDSolve`PararealDump`ndsatep, NDSolve`PararealDump`niter, NDSolve`PararealDump`norm, NDSolve`PararealDump`nkernels, NDSolve`PararealDump`prec, NDSolve`PararealDump`scparams, NDSolve`PararealDump`stepdata, NDSolve`PararealDump`steprb, NDSolve`PararealDump`stepsf, NDSolve`PararealDump`tbound, NDSolve`PararealDump`tgrid, NDSolve`PararealDump`workspaces}, {NDSolve`PararealDump`tbound, NDSolve`PararealDump`methodp, NDSolve`PararealDump`methods} = NDSolve`GetMethodOptionValues[NDSolve`Parareal, NDSolve`PararealDump`PararealProperties, NDSolve`PararealDump`rawmopts]; NDSolve`PararealDump`ndstates = {}; NDSolve`PararealDump`ndstatep = {}; NDSolve`PararealDump`prec = NDSolve`PararealDump`ndstate[\"WorkingPrecision\"]; NDSolve`PararealDump`norm = NDSolve`PararealDump`ndstate[\"Norm\"]; NDSolve`PararealDump`tbound = N[NDSolve`PararealDump`tbound, NDSolve`PararealDump`prec]; If[ !(NumberQ[NDSolve`PararealDump`tbound] && Positive[NDSolve`PararealDump`tbound]), Throw[$Failed]; ]; If[NDSolve`PararealDump`$UseParallelKernels, NDSolve`PararealDump`kernels = Kernels[]; If[NDSolve`PararealDump`kernels === {}, NDSolve`PararealDump`nkernels = $ProcessorCount; NDSolve`PararealDump`localkernels = LaunchKernels[NDSolve`PararealDump`nkernels]; , NDSolve`PararealDump`nkernels = Length[NDSolve`PararealDump`kernels]; NDSolve`PararealDump`localkernels = {}; ]; , NDSolve`PararealDump`localkernels = {}; NDSolve`PararealDump`nkernels = $ProcessorCount; ]; If[NDSolve`PararealDump`nkernels === 0, Throw[$Failed]; ]; NDSolve`PararealDump`tgrid = Table[0, {NDSolve`PararealDump`nkernels + 1}]; NDSolve`PararealDump`niter = NDSolve`PararealDump`nkernels; NDSolve`PararealDump`errests = Table[0, {NDSolve`PararealDump`nkernels}]; NDSolve`PararealDump`mode = Automatic; NDSolve`PararealDump`scparams = N[{1, 0}, NDSolve`PararealDump`prec]; NDSolve`PararealDump`steprb = N[{1, 1}, NDSolve`PararealDump`prec]; NDSolve`PararealDump`stepsf = N[{1, 1}, NDSolve`PararealDump`prec]; NDSolve`PararealDump`stepdata = NDSolve`StepSizeControlData[\"Parareal\", NDSolve`PararealDump`norm, NDSolve`PararealDump`nf, NDSolve`PararealDump`mode, NDSolve`PararealDump`scparams, NDSolve`PararealDump`steprb, NDSolve`PararealDump`stepsf, NDSolve`PararealDump`ndstate[\"Caller\"]]; NDSolve`PararealDump`workspaces = Table[NDSolve`CreateWorkspace[NDSolve`PararealDump`nf], {4}, {NDSolve`PararealDump`nkernels + 1}]; NDSolve`CreateMethodData[NDSolve`Parareal, {NDSolve`PararealDump`methods, NDSolve`PararealDump`methodp, NDSolve`PararealDump`ndstates, NDSolve`PararealDump`ndstatep, NDSolve`PararealDump`niter, NDSolve`PararealDump`errests, NDSolve`PararealDump`tbound, NDSolve`PararealDump`tgrid, NDSolve`PararealDump`stepdata, NDSolve`PararealDump`nkernels, NDSolve`PararealDump`localkernels, NDSolve`PararealDump`workspaces}]]\nNDSolve`FinalizeMethod[NDSolve`PararealDump`method:NDSolve`Parareal[__], NDSolve`PararealDump`ndstate_] ^:= If[NDSolve`PararealDump`$UseParallelKernels, Module[{NDSolve`PararealDump`localkernels}, If[Kernels[] =!= {}, NDSolve`PararealDump`localkernels = NDSolve`PararealDump`method[\"LocalKernels\"]; If[NDSolve`PararealDump`localkernels === {}, ParallelEvaluate[Clear[NDSolve`PararealStateData]]; , CloseKernels[NDSolve`PararealDump`localkernels]; ]; ]; ]; , Clear[NDSolve`PararealStateData]; ]\nDownValues: None\nSubValues: NDSolve`Parareal[NDSolve`MethodData[NDSolve`PararealDump`v_, __]][\"Version\"] := NDSolve`PararealDump`v\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"DenseOutputQ\"] := False\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"ErrorEstimate\"] := NDSolve`PararealDump`data[[9,7]]\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"StepMode\"] := Automatic\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"StepSize\"] := NDSolve`PararealDump`data[[9,5,1]]\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"Iterations\"] := NDSolve`PararealDump`data[[5]]\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"ErrorEstimates\"] := NDSolve`PararealDump`data[[6]]\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"TimeGrid\"] := NDSolve`PararealDump`data[[8]]\nNDSolve`Parareal[NDSolve`MethodData[__, NDSolve`PararealDump`data_]][\"LocalKernels\"] := NDSolve`PararealDump`data[[11]]\nNDSolve`Parareal[NDSolve`MethodData[__, {NDSolve`PararealDump`submdata_, __}]][NDSolve`PararealDump`prop_] := NDSolve`CheckMethodProperty[NDSolve`PararealDump`submdata, NDSolve`PararealDump`prop]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxTimeUnit -> 10, ParallelMethod -> None, SerialMethod -> None}\nAttributes: {HoldAllComplete}\nFullName: NDSolve`Parareal",
	"NDSolve`PararealInitialize":"ObjectType: Symbol\nUsage: NDSolve`PararealInitialize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`PararealInitialize[NDSolve`PararealDump`ndstate_] := If[NDSolve`PararealDump`$UseParallelKernels, ParallelEvaluate[NDSolve`PararealStateData = NDSolve`PararealDump`ndstate]; , NDSolve`PararealStateData = NDSolve`PararealDump`ndstate; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: NDSolve`PararealInitialize",
	"NDSolve`PararealParallelStep":"ObjectType: Symbol\nUsage: NDSolve`PararealParallelStep\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`PararealParallelStep",
	"NDSolve`PararealParallelSteps":"ObjectType: Symbol\nUsage: NDSolve`PararealParallelSteps\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`PararealParallelSteps[NDSolve`PararealDump`tgrid_, NDSolve`PararealDump`sols_, NDSolve`PararealDump`derivs_, NDSolve`PararealDump`start_, NDSolve`PararealDump`nkernels_] := If[NDSolve`PararealDump`$UseParallelKernels, ParallelTable[NDSolve`PararealParallelStep[NDSolve`PararealDump`tgrid[[NDSolve`PararealDump`i]], NDSolve`PararealDump`tgrid[[NDSolve`PararealDump`i + 1]], NDSolve`PararealDump`sols[[NDSolve`PararealDump`i]], NDSolve`PararealDump`derivs[[NDSolve`PararealDump`i]]], {NDSolve`PararealDump`i, NDSolve`PararealDump`start, NDSolve`PararealDump`nkernels}], Table[NDSolve`PararealParallelStep[NDSolve`PararealDump`tgrid[[NDSolve`PararealDump`i]], NDSolve`PararealDump`tgrid[[NDSolve`PararealDump`i + 1]], NDSolve`PararealDump`sols[[NDSolve`PararealDump`i]], NDSolve`PararealDump`derivs[[NDSolve`PararealDump`i]]], {NDSolve`PararealDump`i, NDSolve`PararealDump`start, NDSolve`PararealDump`nkernels}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: NDSolve`PararealParallelSteps",
	"NDSolve`PararealStateData":"ObjectType: Symbol\nUsage: NDSolve`PararealStateData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`PararealStateData",
	"System`Private`Pardiso":"ObjectType: Symbol\nUsage: System`Private`Pardiso\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, OOC -> False}\nAttributes: {}\nFullName: System`Private`Pardiso",
	"Reduce`PARealRoots":"ObjectType: Symbol\nUsage: Reduce`PARealRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PARealRoots",
	"Charting`Parent":"ObjectType: Symbol\nUsage: Charting`Parent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`Parent",
	"BoxForm`ParentList":"ObjectType: Symbol\nUsage: BoxForm`ParentList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`ParentList",
	"Experimental`ParentNotebook":"ObjectType: Symbol\nUsage: Experimental`ParentNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Experimental`ParentNotebook[] := Experimental`ParentNotebook[EvaluationCell[]]\nExperimental`ParentNotebook[NotebookTools`UtilitiesDump`cellobj_CellObject] := Notebooks[NotebookTools`UtilitiesDump`cellobj]\nExperimental`ParentNotebook[NotebookTools`UtilitiesDump`cellobjs:{___CellObject}] := Notebooks[NotebookTools`UtilitiesDump`cellobjs]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Experimental`ParentNotebook",
	"ResourceFunctionHelpers`ParityDecomposition":"ObjectType: Symbol\nUsage: ParityDecomposition[expr, var] returns the decomposition of expr into even and odd parts as an association.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`ParityDecomposition[ResourceFunctionHelpers`ParityDecomposition`Private`expr_, ResourceFunctionHelpers`ParityDecomposition`Private`var_, ResourceFunctionHelpers`ParityDecomposition`Private`opt:OptionsPattern[]] := ResourceFunctionHelpers`ParityDecomposition[ResourceFunctionHelpers`ParityDecomposition`Private`expr, ResourceFunctionHelpers`ParityDecomposition`Private`var, Association, ResourceFunctionHelpers`ParityDecomposition`Private`opt]\nResourceFunctionHelpers`ParityDecomposition[ResourceFunctionHelpers`ParityDecomposition`Private`expr_, ResourceFunctionHelpers`ParityDecomposition`Private`var:_Symbol | {__Symbol}, \"InactivatedSum\", ResourceFunctionHelpers`ParityDecomposition`Private`opt:OptionsPattern[]] := Inactive[Plus] @@ ResourceFunctionHelpers`ParityDecomposition`Private`iParDecomp[ResourceFunctionHelpers`ParityDecomposition`Private`expr, ResourceFunctionHelpers`ParityDecomposition`Private`var, ResourceFunctionHelpers`ParityDecomposition`Private`opt]\nResourceFunctionHelpers`ParityDecomposition[ResourceFunctionHelpers`ParityDecomposition`Private`expr_, ResourceFunctionHelpers`ParityDecomposition`Private`var:_Symbol | {__Symbol}, \"List\" | List, ResourceFunctionHelpers`ParityDecomposition`Private`opt:OptionsPattern[]] := ResourceFunctionHelpers`ParityDecomposition`Private`iParDecomp[ResourceFunctionHelpers`ParityDecomposition`Private`expr, ResourceFunctionHelpers`ParityDecomposition`Private`var, ResourceFunctionHelpers`ParityDecomposition`Private`opt]\nResourceFunctionHelpers`ParityDecomposition[ResourceFunctionHelpers`ParityDecomposition`Private`expr_, ResourceFunctionHelpers`ParityDecomposition`Private`var:_Symbol | {__Symbol}, \"Association\" | Association, ResourceFunctionHelpers`ParityDecomposition`Private`opt:OptionsPattern[]] := (AssociationThread[{\"EvenPart\", \"OddPart\"}, #1] & )[ResourceFunctionHelpers`ParityDecomposition`Private`iParDecomp[ResourceFunctionHelpers`ParityDecomposition`Private`expr, ResourceFunctionHelpers`ParityDecomposition`Private`var, ResourceFunctionHelpers`ParityDecomposition`Private`opt]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tooltip -> False}\nAttributes: {}\nFullName: ResourceFunctionHelpers`ParityDecomposition",
	"Solve`ParmVar":"ObjectType: Symbol\nUsage: Solve`ParmVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldAll}\nFullName: Solve`ParmVar",
	"NDSolve`ProcessEquations`ParseDependentVariables":"ObjectType: Symbol\nUsage: NDSolve`ProcessEquations`ParseDependentVariables\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ProcessEquations`ParseDependentVariables[NDSolve`ProcessEquations`ParseVariablesDump`specs_, NDSolve`ProcessEquations`ParseVariablesDump`dependentvars_, NDSolve`ProcessEquations`ParseVariablesDump`sfun_, NDSolve`ProcessEquations`ParseVariablesDump`invfun_, NDSolve`ProcessEquations`ParseVariablesDump`independent_, NDSolve`ProcessEquations`ParseVariablesDump`mhead_] := Block[{NDSolve`ProcessEquations`ParseVariablesDump`nspecs, NDSolve`ProcessEquations`ParseVariablesDump`vars, NDSolve`ProcessEquations`ParseVariablesDump`events, NDSolve`ProcessEquations`ParseVariablesDump`addind, NDSolve`ProcessEquations`ParseVariablesDump`varind, NDSolve`ProcessEquations`ParseVariablesDump`res}, NDSolve`ProcessEquations`ParseVariablesDump`print[\"ParseDependentVariables\"[NDSolve`ProcessEquations`ParseVariablesDump`specs, NDSolve`ProcessEquations`ParseVariablesDump`dependentvars, NDSolve`ProcessEquations`ParseVariablesDump`sfun, NDSolve`ProcessEquations`ParseVariablesDump`invfun, NDSolve`ProcessEquations`ParseVariablesDump`independent], \"->\"]; NDSolve`ProcessEquations`ParseVariablesDump`varind[NDSolve`ProcessEquations`ParseVariablesDump`el_Element] := Throw[$Failed]; NDSolve`ProcessEquations`ParseVariablesDump`varind[NDSolve`ProcessEquations`ParseVariablesDump`x_Symbol] := NDSolve`ProcessEquations`ParseVariablesDump`x[Sequence @@ NDSolve`ProcessEquations`ParseVariablesDump`independent]; NDSolve`ProcessEquations`ParseVariablesDump`varind[NDSolve`ProcessEquations`ParseVariablesDump`li_List] := NDSolve`ProcessEquations`ParseVariablesDump`varind \/@ NDSolve`ProcessEquations`ParseVariablesDump`li; NDSolve`ProcessEquations`ParseVariablesDump`varind[NDSolve`ProcessEquations`ParseVariablesDump`x___] := NDSolve`ProcessEquations`ParseVariablesDump`x; NDSolve`ProcessEquations`ParseVariablesDump`addind[{NDSolve`ProcessEquations`ParseVariablesDump`x_, NDSolve`ProcessEquations`ParseVariablesDump`x0_, NDSolve`ProcessEquations`ParseVariablesDump`x1_}] := {NDSolve`ProcessEquations`ParseVariablesDump`varind[NDSolve`ProcessEquations`ParseVariablesDump`x], NDSolve`ProcessEquations`ParseVariablesDump`x0, NDSolve`ProcessEquations`ParseVariablesDump`x1}; NDSolve`ProcessEquations`ParseVariablesDump`addind[Element[NDSolve`ProcessEquations`ParseVariablesDump`x_, NDSolve`ProcessEquations`ParseVariablesDump`r_]] := Element[NDSolve`ProcessEquations`ParseVariablesDump`varind[NDSolve`ProcessEquations`ParseVariablesDump`x], NDSolve`ProcessEquations`ParseVariablesDump`r]; NDSolve`ProcessEquations`ParseVariablesDump`addind[NDSolve`ProcessEquations`ParseVariablesDump`spec_ -> NDSolve`ProcessEquations`ParseVariablesDump`act_] := NDSolve`ProcessEquations`ParseVariablesDump`addind[NDSolve`ProcessEquations`ParseVariablesDump`spec] -> NDSolve`ProcessEquations`ParseVariablesDump`act; NDSolve`ProcessEquations`ParseVariablesDump`addind[NDSolve`ProcessEquations`ParseVariablesDump`spec_ :> NDSolve`ProcessEquations`ParseVariablesDump`act_] := NDSolve`ProcessEquations`ParseVariablesDump`addind[NDSolve`ProcessEquations`ParseVariablesDump`spec] :> NDSolve`ProcessEquations`ParseVariablesDump`act; NDSolve`ProcessEquations`ParseVariablesDump`addind[NDSolve`ProcessEquations`ParseVariablesDump`x___] := NDSolve`ProcessEquations`ParseVariablesDump`x; NDSolve`ProcessEquations`ParseVariablesDump`nspecs = NDSolve`ProcessEquations`ParseVariablesDump`addind \/@ NDSolve`ProcessEquations`ParseVariablesDump`specs; NDSolve`ProcessEquations`ParseVariablesDump`events = Flatten[Reap[Scan[NDSolve`ProcessEquations`ParseVariablesDump`sowevents[#1, NDSolve`ProcessEquations`ParseVariablesDump`sfun, NDSolve`ProcessEquations`ParseVariablesDump`mhead] & , NDSolve`ProcessEquations`ParseVariablesDump`nspecs]][[2]]]; NDSolve`ProcessEquations`ParseVariablesDump`res = {NDSolve`ProcessEquations`ParseVariablesDump`dependentvars, NDSolve`ProcessEquations`ParseVariablesDump`events}; NDSolve`ProcessEquations`ParseVariablesDump`print[NDSolve`ProcessEquations`ParseVariablesDump`res]; NDSolve`ProcessEquations`ParseVariablesDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ProcessEquations`ParseDependentVariables",
	"NDSolve`ProcessEquations`ParseDiscreteVariables":"ObjectType: Symbol\nUsage: NDSolve`ProcessEquations`ParseDiscreteVariables\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ProcessEquations`ParseDiscreteVariables[NDSolve`ProcessEquations`ParseVariablesDump`specs_, NDSolve`ProcessEquations`ParseVariablesDump`discretevars_, NDSolve`ProcessEquations`ParseVariablesDump`sfun_, NDSolve`ProcessEquations`ParseVariablesDump`depspecs_, NDSolve`ProcessEquations`ParseVariablesDump`independent_, NDSolve`ProcessEquations`ParseVariablesDump`mhead_] := Module[{NDSolve`ProcessEquations`ParseVariablesDump`check, NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars = NDSolve`ProcessEquations`ParseVariablesDump`discretevars, NDSolve`ProcessEquations`ParseVariablesDump`idvars, NDSolve`ProcessEquations`ParseVariablesDump`cdvars, NDSolve`ProcessEquations`ParseVariablesDump`relposcd, NDSolve`ProcessEquations`ParseVariablesDump`relposid, NDSolve`ProcessEquations`ParseVariablesDump`dtests, NDSolve`ProcessEquations`ParseVariablesDump`ctests, NDSolve`ProcessEquations`ParseVariablesDump`extratests, NDSolve`ProcessEquations`ParseVariablesDump`parseextratests, NDSolve`ProcessEquations`ParseVariablesDump`res}, NDSolve`ProcessEquations`ParseVariablesDump`print[\"ParseDiscreteVariables\"[NDSolve`ProcessEquations`ParseVariablesDump`specs, NDSolve`ProcessEquations`ParseVariablesDump`discretevars, NDSolve`ProcessEquations`ParseVariablesDump`sfun, NDSolve`ProcessEquations`ParseVariablesDump`depspecs, NDSolve`ProcessEquations`ParseVariablesDump`independent], \"->\"]; {NDSolve`ProcessEquations`ParseVariablesDump`cdvars, NDSolve`ProcessEquations`ParseVariablesDump`ctests, NDSolve`ProcessEquations`ParseVariablesDump`idvars, NDSolve`ProcessEquations`ParseVariablesDump`dtests, NDSolve`ProcessEquations`ParseVariablesDump`extratests} = Reap[NDSolve`ProcessEquations`ParseVariablesDump`splitvarbytest[NDSolve`ProcessEquations`ParseVariablesDump`specs, NDSolve`ProcessEquations`ParseVariablesDump`mhead], {\"C\", \"CT\", \"D\", \"DT\", \"EXTRA\"}, Sequence @@ #2 & ][[2]]; NDSolve`ProcessEquations`ParseVariablesDump`cdvars = (NDSolve`ProcessEquations`ParseVariablesDump`remindvars[#1, NDSolve`ProcessEquations`ParseVariablesDump`independent] & ) \/@ NDSolve`ProcessEquations`ParseVariablesDump`cdvars; NDSolve`ProcessEquations`ParseVariablesDump`idvars = (NDSolve`ProcessEquations`ParseVariablesDump`remindvars[#1, NDSolve`ProcessEquations`ParseVariablesDump`independent] & ) \/@ NDSolve`ProcessEquations`ParseVariablesDump`idvars; NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars = (NDSolve`ProcessEquations`ParseVariablesDump`remindvars[#1, NDSolve`ProcessEquations`ParseVariablesDump`independent] & ) \/@ NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars; If[Length[NDSolve`ProcessEquations`ParseVariablesDump`check = Complement[NDSolve`ProcessEquations`ParseVariablesDump`cdvars, NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars]] > 0, NDSolve`NDSolveMessage[NDSolve`ProcessEquations`ParseVariablesDump`mhead, \"disspec\", NDSolve`ProcessEquations`ParseVariablesDump`check]; Throw[$Failed]]; If[Length[NDSolve`ProcessEquations`ParseVariablesDump`check = Complement[NDSolve`ProcessEquations`ParseVariablesDump`idvars, NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars]] > 0, NDSolve`NDSolveMessage[NDSolve`ProcessEquations`ParseVariablesDump`mhead, \"disspec\", NDSolve`ProcessEquations`ParseVariablesDump`check]; Throw[$Failed]]; If[Length[NDSolve`ProcessEquations`ParseVariablesDump`ctests] != Length[NDSolve`ProcessEquations`ParseVariablesDump`cdvars], Throw[$Failed]]; If[Length[NDSolve`ProcessEquations`ParseVariablesDump`dtests] != Length[NDSolve`ProcessEquations`ParseVariablesDump`idvars], Throw[$Failed]]; {NDSolve`ProcessEquations`ParseVariablesDump`cdvars, NDSolve`ProcessEquations`ParseVariablesDump`ctests} = With[{NDSolve`ProcessEquations`ParseVariablesDump`uvars = DeleteDuplicates[NDSolve`ProcessEquations`ParseVariablesDump`cdvars]}, {NDSolve`ProcessEquations`ParseVariablesDump`uvars, Flatten \/@ Reap[MapThread[Sow[#1, #2] & , {NDSolve`ProcessEquations`ParseVariablesDump`ctests, NDSolve`ProcessEquations`ParseVariablesDump`cdvars}], NDSolve`ProcessEquations`ParseVariablesDump`uvars][[2]]}]; {NDSolve`ProcessEquations`ParseVariablesDump`idvars, NDSolve`ProcessEquations`ParseVariablesDump`dtests} = With[{NDSolve`ProcessEquations`ParseVariablesDump`uvars = DeleteDuplicates[NDSolve`ProcessEquations`ParseVariablesDump`idvars]}, {NDSolve`ProcessEquations`ParseVariablesDump`uvars, Flatten \/@ Reap[MapThread[Sow[#1, #2] & , {NDSolve`ProcessEquations`ParseVariablesDump`dtests, NDSolve`ProcessEquations`ParseVariablesDump`idvars}], NDSolve`ProcessEquations`ParseVariablesDump`uvars][[2]]}]; NDSolve`ProcessEquations`ParseVariablesDump`parseextratests[NDSolve`ProcessEquations`ParseVariablesDump`t:NDSolve`ProcessEquations`ParseVariablesDump`holdaction[NDSolve`ProcessEquations`ParseVariablesDump`action_, {NDSolve`ProcessEquations`ParseVariablesDump`vars_List, NDSolve`ProcessEquations`ParseVariablesDump`test_}, NDSolve`ProcessEquations`ParseVariablesDump`spec_]] := {(If[MemberQ[NDSolve`ProcessEquations`ParseVariablesDump`cdvars, #1], {NDSolve`SolutionDataIndex[\"Discrete\"], Position[NDSolve`ProcessEquations`ParseVariablesDump`cdvars, #1][[1,1]]}, {NDSolve`SolutionDataIndex[\"IndexedDiscrete\"], Position[NDSolve`ProcessEquations`ParseVariablesDump`idvars, #1][[1,1]]}] & ) \/@ (NDSolve`ProcessEquations`ParseVariablesDump`remindvars[#1, NDSolve`ProcessEquations`ParseVariablesDump`independent] & ) \/@ NDSolve`ProcessEquations`ParseVariablesDump`vars, NDSolve`ProcessEquations`ParseVariablesDump`test, NDSolve`ProcessEquations`ParseVariablesDump`t}; NDSolve`ProcessEquations`ParseVariablesDump`extratests = NDSolve`ProcessEquations`ParseVariablesDump`parseextratests \/@ NDSolve`ProcessEquations`ParseVariablesDump`extratests; NDSolve`ProcessEquations`ParseVariablesDump`cdvars = NDSolve`ProcessEquations`ParseVariablesDump`listposition[NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars, NDSolve`ProcessEquations`ParseVariablesDump`cdvars]; NDSolve`ProcessEquations`ParseVariablesDump`relposcd = ({NDSolve`SolutionDataIndex[\"Discrete\"], #1} & ) \/@ Range[Length[NDSolve`ProcessEquations`ParseVariablesDump`cdvars]]; NDSolve`ProcessEquations`ParseVariablesDump`idvars = NDSolve`ProcessEquations`ParseVariablesDump`listposition[NDSolve`ProcessEquations`ParseVariablesDump`ndiscretevars, NDSolve`ProcessEquations`ParseVariablesDump`idvars]; NDSolve`ProcessEquations`ParseVariablesDump`relposid = ({NDSolve`SolutionDataIndex[\"IndexedDiscrete\"], #1} & ) \/@ Range[Length[NDSolve`ProcessEquations`ParseVariablesDump`idvars]]; If[Length[NDSolve`ProcessEquations`ParseVariablesDump`relposcd] != Length[NDSolve`ProcessEquations`ParseVariablesDump`ctests], Throw[$Failed]]; If[Length[NDSolve`ProcessEquations`ParseVariablesDump`relposid] != Length[NDSolve`ProcessEquations`ParseVariablesDump`dtests], Throw[$Failed]]; NDSolve`ProcessEquations`ParseVariablesDump`ctests = MapThread[NDSolve`ProcessEquations`ParseVariablesDump`applycontainer[#1, #2, NDSolve`ProcessEquations`ParseVariablesDump`sfun] & , {NDSolve`ProcessEquations`ParseVariablesDump`relposcd, NDSolve`ProcessEquations`ParseVariablesDump`ctests}]; NDSolve`ProcessEquations`ParseVariablesDump`dtests = MapThread[NDSolve`ProcessEquations`ParseVariablesDump`applycontainer[#1, #2, NDSolve`ProcessEquations`ParseVariablesDump`sfun] & , {NDSolve`ProcessEquations`ParseVariablesDump`relposid, NDSolve`ProcessEquations`ParseVariablesDump`dtests}]; NDSolve`ProcessEquations`ParseVariablesDump`extratests = NDSolve`ProcessEquations`ParseVariablesDump`applycontainerextra \/@ NDSolve`ProcessEquations`ParseVariablesDump`extratests; NDSolve`ProcessEquations`ParseVariablesDump`res = {{NDSolve`ProcessEquations`ParseVariablesDump`cdvars, NDSolve`ProcessEquations`ParseVariablesDump`ctests}, {NDSolve`ProcessEquations`ParseVariablesDump`idvars, NDSolve`ProcessEquations`ParseVariablesDump`dtests}, NDSolve`ProcessEquations`ParseVariablesDump`extratests}; NDSolve`ProcessEquations`ParseVariablesDump`print[NDSolve`ProcessEquations`ParseVariablesDump`res]; NDSolve`ProcessEquations`ParseVariablesDump`res]\nNDSolve`ProcessEquations`ParseDiscreteVariables[NDSolve`ProcessEquations`ParseVariablesDump`args___] := (NDSolve`ProcessEquations`ParseVariablesDump`print[\"Error in ParseDiscreteVariables\"[NDSolve`ProcessEquations`ParseVariablesDump`args]]; Throw[$Failed])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ProcessEquations`ParseDiscreteVariables",
	"System`Convert`TableDump`ParseElement":"ObjectType: Symbol\nUsage: System`Convert`TableDump`ParseElement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`TableDump`ParseElement",
	"System`Dump`ParseFrameTicks":"ObjectType: Symbol\nUsage: System`Dump`ParseFrameTicks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ParseFrameTicks[System`Dump`a_] := System`Dump`ParseFrameTicks[System`Dump`a, 0]\nSystem`Dump`ParseFrameTicks[System`Dump`a:None | Automatic | True | False | All | _RawBoxes, System`Dump`level_] := System`Dump`FrameTicksSpec[System`Dump`a]\nSystem`Dump`ParseFrameTicks[{System`Dump`a_, System`Dump`b_}, System`Dump`level:0] := (System`Dump`ParseFrameTicks[#1, 1] & ) \/@ {System`Dump`a, System`Dump`b}\nSystem`Dump`ParseFrameTicks[System`Dump`a_List, System`Dump`level:0] := System`Dump`FrameTicksSpec \/@ System`Dump`a\nSystem`Dump`ParseFrameTicks[{(System`Dump`a_)?NumericQ, System`Dump`b_}, System`Dump`level:1] := System`Dump`FrameTicksSpec[{System`Dump`a, System`Dump`b}]\nSystem`Dump`ParseFrameTicks[{System`Dump`a_, System`Dump`b_}, System`Dump`level:1] := {System`Dump`FrameTicksSpec[System`Dump`a], System`Dump`FrameTicksSpec[System`Dump`b]}\nSystem`Dump`ParseFrameTicks[System`Dump`other_, System`Dump`level_] := System`Dump`FrameTicksSpec[System`Dump`other]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ParseFrameTicks",
	"GroupTheory`Symmetries`ParseGenerators":"ObjectType: Symbol\nUsage: GroupTheory`Symmetries`ParseGenerators\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroupTheory`Symmetries`ParseGenerators",
	"GIS`ParseGeoModel":"ObjectType: Symbol\nUsage: GIS`ParseGeoModel[m] converts a valid geo model m into its parsed form GIS`GeoModelObject[m, body, axes].\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`ParseGeoModel[\"ITRF00\"] = GIS`GeoModelObject[\"ITRF00\", \"Earth\", {6.378137*^6, 6.356752314140363*^6}]\nGIS`ParseGeoModel[\"ITRF00\", \"TrueAxes\"] = GIS`GeoModelObject[\"ITRF00\", \"Earth\", {6.378137*^6, 6.356752314140363*^6}]\nGIS`ParseGeoModel[GIS`GeoModelDump`model_] := Catch[GIS`GeoModelDump`checkGeoModel[GIS`GeoModelDump`parseGeoModel[GIS`GeoModelDump`model, \"TrueAxes\"]], \"GeoModelError\"]\nGIS`ParseGeoModel[GIS`GeoModelDump`model_, GIS`GeoModelDump`type_] := Catch[GIS`GeoModelDump`checkGeoModel[GIS`GeoModelDump`parseGeoModel[GIS`GeoModelDump`model, GIS`GeoModelDump`type]], \"GeoModelError\"]\nGIS`ParseGeoModel[GIS`GeoModelDump`model_, GIS`GeoModelDump`type_, GIS`GeoModelDump`errorhead_] := Catch[GIS`GeoModelDump`parseGeoModel[GIS`GeoModelDump`model, GIS`GeoModelDump`type, GIS`GeoModelDump`errorhead], \"GeoModelError\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`ParseGeoModel",
	"GIS`ParseGeoProjectionOptions":"ObjectType: Symbol\nUsage: GIS`ParseGeoProjectionOptions[{name, type}, params, opts] returns a list of values for the parameters in the list params, for the projection of the given name and type, and the sequence opts of options.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`ParseGeoProjectionOptions[{GIS`GeoMappingDump`name_String, GIS`GeoMappingDump`type_String}, GIS`GeoMappingDump`toprocess_List, GIS`GeoMappingDump`opts___] := Catch[Module[{GIS`GeoMappingDump`values, GIS`GeoMappingDump`result}, GIS`GeoMappingDump`values = {\"Obliqueness\", \"GeoRange\", \"LongitudeDetermination\", \"ReferenceModel\", \"StandardParallels\", \"Centering\", \"GridOrigin\", \"CentralScaleFactor\", \"Rectified\", \"OrbitParameters\"} \/. Flatten[{GIS`GeoMappingDump`opts}] \/. GIS`GeoMappingDump`geoProjectionDefaultParameters[GIS`GeoMappingDump`name] \/. GIS`GeoMappingDump`$GeoProjectionDefaultOptions; GIS`GeoMappingDump`result = (GIS`GeoMappingDump`ParseOneOption[{GIS`GeoMappingDump`name, GIS`GeoMappingDump`type}, #1, GIS`GeoMappingDump`values] & ) \/@ GIS`GeoMappingDump`toprocess; If[FreeQ[GIS`GeoMappingDump`result, $Failed], GIS`GeoMappingDump`result, $Failed]], \"ParseOneOptionError\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`ParseGeoProjectionOptions",
	"GIS`ParseGeoServer":"ObjectType: Symbol\nUsage: GIS`ParseGeoServer[geoserver] returns a parsed\/validated form of the given geo server.\nGIS`ParseGeoServer[geoserver, head] emits error messages associated to the given head.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`ParseGeoServer[GIS`GeoServerDump`args___] := Catch[GIS`GeoServerDump`iParseGeoServer[GIS`GeoServerDump`args], \"ParseGeoServerError\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`ParseGeoServer",
	"GeoGraphics`ParseGeoStyling":"ObjectType: Symbol\nUsage: GeoGraphics`ParseGeoStyling\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeoGraphics`ParseGeoStyling[System`GeoStylingDump`geoStyling_GeoGraphics`GeoStylingObject, System`GeoStylingDump`params_, System`GeoStylingDump`callerhead_] := System`GeoStylingDump`geoStyling\nGeoGraphics`ParseGeoStyling[System`GeoStylingDump`geostyling_, System`GeoStylingDump`map_Symbol, System`GeoStylingDump`callerhead_] := GeoGraphics`ParseGeoStyling[System`GeoStylingDump`geostyling, {System`GeoStylingDump`map[\"GeoModelParsed\"], System`GeoStylingDump`map[\"GeoServer\"], System`GeoStylingDump`map[\"GeoZoomLevel\"], System`GeoStylingDump`map[\"MapPixelDensities\"], System`GeoStylingDump`map[\"Method\"], System`GeoStylingDump`map[\"Background\"], System`GeoStylingDump`map[\"MapLonLatRange\"]}, System`GeoStylingDump`callerhead]\nGeoGraphics`ParseGeoStyling[System`GeoStylingDump`mapstyle_String, System`GeoStylingDump`params_, System`GeoStylingDump`callerhead_] := GeoGraphics`ParseGeoStyling[GeoStyling[System`GeoStylingDump`mapstyle], System`GeoStylingDump`params, System`GeoStylingDump`callerhead]\nGeoGraphics`ParseGeoStyling[System`GeoStylingDump`mapstyle:{\"Image\" | \"GeoImage\", _}, System`GeoStylingDump`params_, System`GeoStylingDump`callerhead_] := GeoGraphics`ParseGeoStyling[GeoStyling[System`GeoStylingDump`mapstyle], System`GeoStylingDump`params, System`GeoStylingDump`callerhead]\nGeoGraphics`ParseGeoStyling[System`GeoStylingDump`geoStyling_, {System`GeoStylingDump`geoModelParsedIn_, System`GeoStylingDump`geoserverIn_, System`GeoStylingDump`zoomIn_, System`GeoStylingDump`pixeldensities_, System`GeoStylingDump`methodIn_, System`GeoStylingDump`backgroundIn_, System`GeoStylingDump`lonlatboxIn_}, System`GeoStylingDump`callerhead_] := Module[{System`GeoStylingDump`mapstyle, System`GeoStylingDump`directive, System`GeoStylingDump`opts, System`GeoStylingDump`tmp, System`GeoStylingDump`type, System`GeoStylingDump`geoModelParsed, System`GeoStylingDump`geoserver, System`GeoStylingDump`zoom, System`GeoStylingDump`background, System`GeoStylingDump`lonlatbox, System`GeoStylingDump`imageEffect, System`GeoStylingDump`georange, System`GeoStylingDump`method, System`GeoStylingDump`gsparsed}, Which[System`GeoStylingDump`geoStyling === None, System`GeoStylingDump`mapstyle = \"OutlineMap\"; System`GeoStylingDump`directive = Directive[Opacity[0]]; System`GeoStylingDump`opts = {}, System`GeoStylingDump`geoStyling === Automatic, System`GeoStylingDump`mapstyle = Automatic; System`GeoStylingDump`directive = Directive[]; System`GeoStylingDump`opts = {}, ListQ[System`GeoStylingDump`geoStyling], Message[System`GeoStylingDump`callerhead::gslist, System`GeoStylingDump`geoStyling]; Return[$Failed], Head[System`GeoStylingDump`geoStyling] =!= GeoStyling, Message[System`GeoStylingDump`callerhead::geosty, System`GeoStylingDump`geoStyling]; Return[$Failed], VectorQ[Flatten[List @@ System`GeoStylingDump`geoStyling], System`Dump`ValidDirective], System`GeoStylingDump`mapstyle = \"OutlineMap\"; System`GeoStylingDump`directive = Directive @@ System`GeoStylingDump`geoStyling; System`GeoStylingDump`opts = {}, System`GeoStylingDump`mapstyle = First[System`GeoStylingDump`geoStyling]; System`GeoStylingDump`tmp = Rest[List @@ System`GeoStylingDump`geoStyling]; System`GeoStylingDump`directive = Directive @@ DeleteCases[System`GeoStylingDump`tmp, _?OptionQ]; System`GeoStylingDump`opts = Cases[System`GeoStylingDump`tmp, _?OptionQ]; System`GeoStylingDump`mapstyle === None, System`GeoStylingDump`mapstyle = \"OutlineMap\"; System`GeoStylingDump`directive = Directive[], System`GeoStylingDump`mapstyle === Automatic, System`GeoStylingDump`mapstyle = \"OutlineMap\"; If[System`GeoStylingDump`directive === Directive[], System`GeoStylingDump`directive = System`GeoStylingDump`$AutomaticGeoDirective], System`GeoStylingDump`mapstyle === \"OutlineMap\", If[System`GeoStylingDump`directive === Directive[], System`GeoStylingDump`directive = System`GeoStylingDump`$OutlineMapGeoDirective]]; GIS`Debug`print[\"GeoStyling mapstyle: \", System`GeoStylingDump`mapstyle]; GIS`Debug`print[\"GeoStyling directive: \", System`GeoStylingDump`directive]; GIS`Debug`print[\"GeoStyling options: \", System`GeoStylingDump`opts]; If[MatchQ[System`GeoStylingDump`mapstyle, _Image | _Graphics], System`GeoStylingDump`mapstyle = {\"Image\", System`GeoStylingDump`mapstyle}]; If[MatchQ[System`GeoStylingDump`mapstyle, {_Image | _Graphics, ___?OptionQ}], System`GeoStylingDump`mapstyle = Prepend[System`GeoStylingDump`mapstyle, \"Image\"]]; If[System`GeoStylingDump`outlineMapStyleQ[System`GeoStylingDump`mapstyle], System`GeoStylingDump`type = \"VectorMapStyle\", System`GeoStylingDump`type = \"RasterMapStyle\"]; If[ !System`Dump`ValidDirective @@ {System`GeoStylingDump`directive}, System`GeoStylingDump`directive = Directive[]]; System`GeoStylingDump`tmp = OptionValue[GeoStyling, System`GeoStylingDump`opts, GeoModel]; If[System`GeoStylingDump`tmp === Automatic, System`GeoStylingDump`geoModelParsed = System`GeoStylingDump`geoModelParsedIn, System`GeoStylingDump`geoModelParsed = GIS`ParseGeoModel[System`GeoStylingDump`tmp]; If[System`GeoStylingDump`geoModelParsed === $Failed, Message[System`GeoStylingDump`callerhead::invgm, System`GeoStylingDump`tmp]; System`GeoStylingDump`geoModelParsed = System`GeoStylingDump`geoModelParsedIn]]; System`GeoStylingDump`opts = FilterRules[System`GeoStylingDump`opts, Options[GeoStyling]]; System`GeoStylingDump`tmp = OptionValue[GeoStyling, System`GeoStylingDump`opts, GeoServer]; If[System`GeoStylingDump`tmp === Automatic, System`GeoStylingDump`geoserver = System`GeoStylingDump`geoserverIn, System`GeoStylingDump`geoserver = GIS`ParseGeoServer[System`GeoStylingDump`tmp, GeoStyling]; If[System`GeoStylingDump`geoserver === $Failed, Message[System`GeoStylingDump`callerhead::gsrv, System`GeoStylingDump`tmp]; System`GeoStylingDump`geoserver = System`GeoStylingDump`geoserverIn]]; System`GeoStylingDump`zoom = OptionValue[GeoStyling, System`GeoStylingDump`opts, GeoZoomLevel]; If[System`GeoStylingDump`zoom === Automatic, System`GeoStylingDump`zoom = System`GeoStylingDump`zoomIn, If[ !System`GeoStylingDump`validZoomQ[System`GeoStylingDump`zoom], Message[System`GeoStylingDump`callerhead::zoom, System`GeoStylingDump`zoom]; System`GeoStylingDump`zoom = System`GeoStylingDump`zoomIn]]; System`GeoStylingDump`tmp = OptionValue[GeoStyling, System`GeoStylingDump`opts, GeoRange]; System`GeoStylingDump`georange = System`GeoGraphicsDump`normalizeGeoRange[System`GeoStylingDump`tmp]; If[System`GeoStylingDump`georange === Automatic, System`GeoStylingDump`lonlatbox = System`GeoStylingDump`lonlatboxIn, If[GIS`NumericRangesQ[System`GeoStylingDump`georange], System`GeoStylingDump`lonlatbox = GIS`RangeReverse[System`GeoStylingDump`georange], Message[System`GeoStylingDump`callerhead::invgr, System`GeoStylingDump`tmp]; System`GeoStylingDump`lonlatbox = System`GeoStylingDump`lonlatboxIn]]; System`GeoStylingDump`imageEffect = OptionValue[GeoStyling, System`GeoStylingDump`opts, GeoStylingImageFunction]; System`GeoStylingDump`method = OptionValue[GeoStyling, System`GeoStylingDump`opts, Method]; If[System`GeoStylingDump`method === Automatic, System`GeoStylingDump`method = System`GeoStylingDump`methodIn, If[System`GeoStylingDump`methodIn =!= Automatic, System`GeoStylingDump`method = Flatten[{System`GeoStylingDump`method, System`GeoStylingDump`methodIn}]]]; System`GeoStylingDump`background = OptionValue[GeoStyling, System`GeoStylingDump`opts, Background]; If[System`GeoStylingDump`background === Automatic, System`GeoStylingDump`background = System`GeoStylingDump`backgroundIn; ]; System`GeoStylingDump`gsparsed = GeoGraphics`GeoStylingObject[System`GeoStylingDump`type, {System`GeoStylingDump`mapstyle, System`GeoStylingDump`directive, System`GeoStylingDump`opts}, Association[\"GeoModelParsed\" -> System`GeoStylingDump`geoModelParsed, \"GeoServer\" -> System`GeoStylingDump`geoserver, \"GeoZoomLevel\" -> System`GeoStylingDump`zoom, \"MapPixelDensities\" -> System`GeoStylingDump`pixeldensities, \"LonLatBox\" -> System`GeoStylingDump`lonlatbox, \"ImageFunction\" -> System`GeoStylingDump`imageEffect, \"Method\" -> System`GeoStylingDump`method, \"Background\" -> System`GeoStylingDump`background]]; GIS`Debug`print[\"Parsed geo styling: \", System`GeoStylingDump`gsparsed]; System`GeoStylingDump`gsparsed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeoGraphics`ParseGeoStyling",
	"SurfaceGraphics`Methods`ParseGlyphStyle":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`ParseGlyphStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`ParseGlyphStyle",
	"Statistics`Library`ParseMixedProductDistribution":"ObjectType: Symbol\nUsage: Statistics`Library`ParseMixedProductDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ParseMixedProductDistribution[Distributed[Statistics`SolversCommonDump`xvec_, HoldPattern[ProductDistribution][Statistics`SolversCommonDump`diseq__]]] := Module[{Statistics`SolversCommonDump`dist, Statistics`SolversCommonDump`pos, Statistics`SolversCommonDump`mds, Statistics`SolversCommonDump`weights, Statistics`SolversCommonDump`di}, Statistics`SolversCommonDump`dist = {Statistics`SolversCommonDump`diseq} \/. Statistics`SolversCommonDump`cd_CensoredDistribution :> With[{Statistics`SolversCommonDump`td = Statistics`Library`CensoredToTransformed[Statistics`SolversCommonDump`cd]}, Statistics`SolversCommonDump`td \/; Statistics`SolversCommonDump`td =!= $Failed]; Statistics`SolversCommonDump`pos = Position[Statistics`SolversCommonDump`dist, _MixtureDistribution, {1}, Heads -> False]; If[Statistics`SolversCommonDump`pos =!= {}, Statistics`SolversCommonDump`mds = Extract[Statistics`SolversCommonDump`dist, Statistics`SolversCommonDump`pos]; Statistics`SolversCommonDump`weights = (Outer[Times, ##1] & ) @@ Statistics`SolversCommonDump`mds[[All,1]]; Statistics`SolversCommonDump`di = (Outer[ProductDistribution @@ ReplacePart[Statistics`SolversCommonDump`dist, Thread[Statistics`SolversCommonDump`pos -> {##1}]] & , ##1] & ) @@ Statistics`SolversCommonDump`mds[[All,2]]; Distributed[Statistics`SolversCommonDump`xvec, MixtureDistribution[Flatten[Statistics`SolversCommonDump`weights], Flatten[Statistics`SolversCommonDump`di]]], Distributed[Statistics`SolversCommonDump`xvec, ProductDistribution @@ Statistics`SolversCommonDump`dist]]]\nStatistics`Library`ParseMixedProductDistribution[Statistics`SolversCommonDump`e_] := Statistics`SolversCommonDump`e\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ParseMixedProductDistribution",
	"NDSolve`ProcessEquations`ParseParameters":"ObjectType: Symbol\nUsage: NDSolve`ProcessEquations`ParseParameters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ProcessEquations`ParseParameters[NDSolve`ProcessEquations`ParseVariablesDump`specs_, NDSolve`ProcessEquations`ParseVariablesDump`independent_, NDSolve`ProcessEquations`ParseVariablesDump`mhead_] := Block[{NDSolve`ProcessEquations`ParseVariablesDump`extra = 0, NDSolve`ProcessEquations`ParseVariablesDump`sowtests, NDSolve`ProcessEquations`ParseVariablesDump`vars, NDSolve`ProcessEquations`ParseVariablesDump`tests, NDSolve`ProcessEquations`ParseVariablesDump`extratests}, NDSolve`ProcessEquations`ParseVariablesDump`sowtests[Element[NDSolve`ProcessEquations`ParseVariablesDump`v_List, NDSolve`ProcessEquations`ParseVariablesDump`set_]] := (NDSolve`ProcessEquations`ParseVariablesDump`extra++; Sow[{NDSolve`ProcessEquations`ParseVariablesDump`v, NDSolve`ProcessEquations`ParseVariablesDump`elementtest[NDSolve`ProcessEquations`ParseVariablesDump`set] \/. NDSolve`ProcessEquations`ParseVariablesDump`v -> #1}, \"EXTRA\"]; (Sow[NDSolve`ProcessEquations`ParseVariablesDump`extra, #1] & ) \/@ NDSolve`ProcessEquations`ParseVariablesDump`v); NDSolve`ProcessEquations`ParseVariablesDump`sowtests[Element[NDSolve`ProcessEquations`ParseVariablesDump`v_, NDSolve`ProcessEquations`ParseVariablesDump`set_]] := Sow[NDSolve`ProcessEquations`ParseVariablesDump`elementtest[NDSolve`ProcessEquations`ParseVariablesDump`set], NDSolve`ProcessEquations`ParseVariablesDump`v]; NDSolve`ProcessEquations`ParseVariablesDump`sowtests[NDSolve`ProcessEquations`ParseVariablesDump`x_List] := (Sow[#1, NDSolve`ProcessEquations`ParseVariablesDump`x[[1]]] & ) \/@ NDSolve`ProcessEquations`ParseVariablesDump`parsetest[NDSolve`ProcessEquations`ParseVariablesDump`x, NDSolve`ProcessEquations`ParseVariablesDump`mhead]; NDSolve`ProcessEquations`ParseVariablesDump`vars = Reap[Scan[NDSolve`ProcessEquations`ParseVariablesDump`sowvars, NDSolve`ProcessEquations`ParseVariablesDump`specs], _, #1 & ][[2]]; {NDSolve`ProcessEquations`ParseVariablesDump`tests, NDSolve`ProcessEquations`ParseVariablesDump`extratests} = Reap[Scan[NDSolve`ProcessEquations`ParseVariablesDump`sowtests, NDSolve`ProcessEquations`ParseVariablesDump`specs], {_?NDSolve`ProcessEquations`ParseVariablesDump`NDSolveVariableTest, \"EXTRA\"}, {#1, #2} & ][[2]]; {NDSolve`ProcessEquations`ParseVariablesDump`vars, NDSolve`ProcessEquations`ParseVariablesDump`tests, NDSolve`ProcessEquations`ParseVariablesDump`extratests[[1,2]]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ProcessEquations`ParseParameters",
	"Charting`ParsePlotLayout":"ObjectType: Symbol\nUsage: Charting`ParsePlotLayout\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`ParsePlotLayout[System`GroupedPlotDump`fn_, System`GroupedPlotDump`plotlayout_] := Switch[System`GroupedPlotDump`plotlayout, Automatic, \"Overlaid\", \"Stacked\" | \"Percentile\" | \"Overlaid\", System`GroupedPlotDump`plotlayout, \"Column\" | \"Row\", {\"Multicolumn\", {System`GroupedPlotDump`plotlayout, 1}}, {\"Column\" | \"Row\", _Integer?Positive | UpTo[_Integer?Positive]}, {\"Multicolumn\", System`GroupedPlotDump`plotlayout}, \"Grid\", {\"Multicolumn\", System`GroupedPlotDump`plotlayout}, {\"Grid\", __}, {\"Multicolumn\", System`GroupedPlotDump`plotlayout}, {\"Multicolumn\", __}, System`GroupedPlotDump`plotlayout, _, Message[System`GroupedPlotDump`fn::pllayt, HoldForm[System`GroupedPlotDump`plotlayout]]; \"Overlaid\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`ParsePlotLayout",
	"Graphics`Units`ParsePlotRangeLimits":"ObjectType: Symbol\nUsage: Graphics`Units`ParsePlotRangeLimits\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Units`ParsePlotRangeLimits[Graphics`Units`Private`limits_, Graphics`Units`Private`qsort_:True] \/; FreeQ[Graphics`Units`Private`limits, Quantity] := {Graphics`Units`Private`limits, None}\nGraphics`Units`ParsePlotRangeLimits[Graphics`Units`Private`limits_List, Graphics`Units`Private`qsort_:True] := Module[{Graphics`Units`Private`qlist, Graphics`Units`Private`units, Graphics`Units`Private`var, Graphics`Units`Private`nlimits}, Graphics`Units`Private`qlist = Select[Graphics`Units`Private`limits, Internal`PossibleQuantityQ]; If[Length[Graphics`Units`Private`qlist] == 0, Return[{Graphics`Units`Private`limits, None}]]; Graphics`Units`Private`units = Last[First[Graphics`Units`Private`qlist]]; Graphics`Units`Private`var = Graphics`Units`Private`getValue[First[Graphics`Units`Private`limits]]; Graphics`Units`Private`qlist = Rest[Graphics`Units`Private`limits]; Graphics`Units`Private`nlimits = Graphics`Units`ConvertUnitsVectorToValues[Graphics`Units`Private`qlist, Graphics`Units`Private`units, Graphics`Units`Private`qsort]; Graphics`Units`Private`nlimits = Prepend[Graphics`Units`Private`nlimits, Graphics`Units`Private`var]; {Graphics`Units`Private`nlimits, Graphics`Units`Private`units}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Units`ParsePlotRangeLimits",
	"NDSolve`FEM`ParsePreBoundaryConditions":"ObjectType: Symbol\nUsage: NDSolve`FEM`ParsePreBoundaryConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`ParsePreBoundaryConditions[NDSolve`FEM`PDEParserDump`bcs_List, NDSolve`FEM`PDEParserDump`vd_List, NDSolve`FEM`PDEParserDump`sd_List, NDSolve`FEM`PDEParserDump`sf_, NDSolve`FEM`PDEParserDump`msghead_Symbol] := Module[{NDSolve`FEM`PDEParserDump`nonBCs, NDSolve`FEM`PDEParserDump`fbcs, NDSolve`FEM`PDEParserDump`notParsableBCs, NDSolve`FEM`PDEParserDump`constraints, NDSolve`FEM`PDEParserDump`discontinuities, NDSolve`FEM`PDEParserDump`bcMarkers, NDSolve`FEM`PDEParserDump`tmp, NDSolve`FEM`PDEParserDump`depVars, NDSolve`FEM`PDEParserDump`timeVar}, NDSolve`FEM`PDEParserDump`depVars = NDSolve`FEM`PDEParserDump`vdComponent[NDSolve`FEM`PDEParserDump`vd, \"DependentVariables\"]; NDSolve`FEM`PDEParserDump`timeVar = NDSolve`FEM`PDEParserDump`vdComponent[NDSolve`FEM`PDEParserDump`vd, \"Time\"]; NDSolve`FEM`PDEParserDump`nonBCs = NDSolve`FEM`PDEParserDump`nonValidPreBCs[NDSolve`FEM`PDEParserDump`bcs]; NDSolve`FEM`FailIf[NDSolve`FEM`PDEParserDump`nonBCs =!= {}, NDSolve`FEM`PDEParserDump`msghead, \"fembpf\", NDSolve`FEM`GetBCUnparsed \/@ NDSolve`FEM`PDEParserDump`nonBCs]; NDSolve`FEM`PDEParserDump`fbcs = Flatten[NDSolve`FEM`PDEParserDump`bcs]; NDSolve`FEM`PDEParserDump`fbcs = NDSolve`FEM`PDEParserDump`processPreBCValues[NDSolve`FEM`PDEParserDump`fbcs, NDSolve`FEM`PDEParserDump`vd, NDSolve`FEM`PDEParserDump`sd, MachinePrecision, NDSolve`FEM`PDEParserDump`sf, NDSolve`FEM`PDEParserDump`msghead]; {NDSolve`FEM`PDEParserDump`fbcs, NDSolve`FEM`PDEParserDump`discontinuities} = NDSolve`FEM`PDEParserDump`processPreBCPostion[NDSolve`FEM`PDEParserDump`fbcs, NDSolve`FEM`PDEParserDump`vd, NDSolve`FEM`PDEParserDump`sd, NDSolve`FEM`PDEParserDump`msghead]; NDSolve`FEM`PDEParserDump`notParsableBCs = Cases[NDSolve`FEM`PDEParserDump`fbcs, _?( !MatchQ[#1, NDSolve`FEM`BoundaryCondition[{_String, _, _List, ___}, __]] & )]; If[Length[NDSolve`FEM`PDEParserDump`notParsableBCs] > 0, NDSolve`FEM`PDEParserDump`fbcs = Cases[NDSolve`FEM`PDEParserDump`fbcs, _?(MatchQ[#1, NDSolve`FEM`BoundaryCondition[{_String, _, _List, ___}, __]] & )]; NDSolve`FEM`WarnIf[True, NDSolve`FEM`PDEParserDump`msghead, \"fembpw\", NDSolve`FEM`GetBCUnparsed \/@ NDSolve`FEM`PDEParserDump`notParsableBCs]; ]; NDSolve`FEM`PDEParserDump`fbcs = Function[NDSolve`FEM`PDEParserDump`bcClass, (Select[NDSolve`FEM`PDEParserDump`bcClass, #1] & ) \/@ {NDSolve`FEM`PDEParserDump`dirichletBCQ, NDSolve`FEM`PDEParserDump`neumannBCQ, NDSolve`FEM`PDEParserDump`robinBCQ, NDSolve`FEM`PDEParserDump`periodicBCQ}] \/@ (Select[NDSolve`FEM`PDEParserDump`fbcs, #1] & ) \/@ {NDSolve`FEM`PDEParserDump`stationaryBCQ, NDSolve`FEM`PDEParserDump`discreteBCQ, NDSolve`FEM`PDEParserDump`indexeddiscreteQ, NDSolve`FEM`PDEParserDump`parametricBCQ, NDSolve`FEM`PDEParserDump`transientBCQ, NDSolve`FEM`NonlinearBCQ}; If[NDSolve`FEM`PDEParserDump`timeVar === None, NDSolve`FEM`PDEParserDump`tmp = Flatten[(Select[Flatten[NDSolve`FEM`PDEParserDump`fbcs], #1] & ) \/@ {NDSolve`FEM`PDEParserDump`dirichletBCQ, NDSolve`FEM`PDEParserDump`robinBCQ}]; NDSolve`FEM`PDEParserDump`tmp = Flatten[(Select[NDSolve`FEM`PDEParserDump`tmp, #1] & ) \/@ {NDSolve`FEM`PDEParserDump`stationaryBCQ, NDSolve`FEM`PDEParserDump`discreteBCQ, NDSolve`FEM`PDEParserDump`indexeddiscreteQ, NDSolve`FEM`PDEParserDump`parametricBCQ, NDSolve`FEM`NonlinearBCQ}]; NDSolve`FEM`PDEParserDump`tmp = Union[NDSolve`FEM`GetBCRow \/@ NDSolve`FEM`PDEParserDump`tmp]; If[Length[NDSolve`FEM`PDEParserDump`depVars] =!= Length[NDSolve`FEM`PDEParserDump`tmp], NDSolve`FEM`PDEParserDump`tmp = Complement[Range[Length[NDSolve`FEM`PDEParserDump`depVars]], NDSolve`FEM`PDEParserDump`tmp]; NDSolve`FEM`WarnIf[True, NDSolve`FEM`PDEParserDump`msghead, \"femibcnd\", NDSolve`FEM`PDEParserDump`depVars[[NDSolve`FEM`PDEParserDump`tmp]]]; ]; ]; NDSolve`FEM`PDEParserDump`bcMarkers = If[ !FreeQ[NDSolve`FEM`PDEParserDump`fbcs, NDSolve`FEM`ElementMarker], True, False]; NDSolve`FEM`PDEParserDump`constraints = {\"BoundaryConstraints\" -> NDSolve`FEM`PDEParserDump`discontinuities, \"BoundaryMarkers\" -> NDSolve`FEM`PDEParserDump`bcMarkers}; {NDSolve`FEM`PDEParserDump`fbcs, NDSolve`FEM`PDEParserDump`constraints}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ParsePreBoundaryConditions",
	"Statistics`Library`ParseProbabilityOptions":"ObjectType: Symbol\nUsage: Statistics`Library`ParseProbabilityOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ParseProbabilityOptions[Statistics`SolversCommonDump`caller:Expectation | NExpectation | Probability | NProbability, Statistics`SolversCommonDump`f_, Statistics`SolversCommonDump`g_, Statistics`SolversCommonDump`opts___] := Module[{Statistics`SolversCommonDump`testoptions = MatchQ[{Statistics`SolversCommonDump`opts}, OptionsPattern[]]}, If[Statistics`SolversCommonDump`testoptions, Statistics`SolversCommonDump`testoptions = FilterRules[{Statistics`SolversCommonDump`opts}, Except[Options[Statistics`SolversCommonDump`caller][[All,1]]]]; If[Statistics`SolversCommonDump`testoptions =!= {}, Message[Statistics`SolversCommonDump`caller::optx, Statistics`SolversCommonDump`testoptions[[1,1]], ToString[Statistics`SolversCommonDump`caller]]; $Failed, If[MatchQ[Statistics`SolversCommonDump`caller, NExpectation | NProbability] || Statistics`Library`ValidDistributedQ[Statistics`SolversCommonDump`g] === True, Flatten[{Statistics`SolversCommonDump`opts}], $Failed]], Message[Statistics`SolversCommonDump`caller::nonopt, First[{Statistics`SolversCommonDump`opts}], 2, HoldForm[Statistics`SolversCommonDump`caller[Statistics`SolversCommonDump`f, Statistics`SolversCommonDump`g, Statistics`SolversCommonDump`opts]]]; $Failed]]\nStatistics`Library`ParseProbabilityOptions[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ParseProbabilityOptions",
	"RandomProcesses`Library`ParseProcesses":"ObjectType: Symbol\nUsage: RandomProcesses`Library`ParseProcesses\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`ParseProcesses[RandomProcesses`Library`Dump`expr_, RandomProcesses`Library`Dump`g:_Distributed | _And | _List, OptionsPattern[]] := Module[{RandomProcesses`Library`Dump`gg, RandomProcesses`Library`Dump`f, RandomProcesses`Library`Dump`ru = {}, RandomProcesses`Library`Dump`newdist, RandomProcesses`Library`Dump`assumps = True, RandomProcesses`Library`Dump`newassump = True}, RandomProcesses`Library`Dump`gg = Cases[If[Head[RandomProcesses`Library`Dump`g] === Distributed, {RandomProcesses`Library`Dump`g}, RandomProcesses`Library`Dump`g], HoldPattern[Distributed][_, _?ProcessParameterQ], {1}]; Catch[If[RandomProcesses`Library`Dump`gg === {}, {RandomProcesses`Library`Dump`expr, RandomProcesses`Library`Dump`g, RandomProcesses`Library`Dump`assumps}, If[ !DuplicateFreeQ[Flatten[RandomProcesses`Library`Dump`gg[[All,1]]]], Throw[{$Failed, $Failed, True}, \"ParseProcessException\"]]; RandomProcesses`Library`Dump`f = RandomProcesses`Library`Dump`expr; Block[{$Assumptions = OptionValue[Assumptions]}, Do[{RandomProcesses`Library`Dump`f, RandomProcesses`Library`Dump`newdist, RandomProcesses`Library`Dump`newassump} = RandomProcesses`Library`Dump`ParseSingleProcessDistributed[RandomProcesses`Library`Dump`f, RandomProcesses`Library`Dump`disti]; If[RandomProcesses`Library`Dump`newdist === $Failed, Throw[{$Failed, $Failed, True, \"ParseProcessException\"}]]; RandomProcesses`Library`Dump`ru = {RandomProcesses`Library`Dump`ru, RandomProcesses`Library`Dump`disti -> RandomProcesses`Library`Dump`newdist}; RandomProcesses`Library`Dump`assumps = RandomProcesses`Library`Dump`assumps && RandomProcesses`Library`Dump`newassump; , {RandomProcesses`Library`Dump`disti, RandomProcesses`Library`Dump`gg}]; RandomProcesses`Library`Dump`ru = Flatten[RandomProcesses`Library`Dump`ru]; {RandomProcesses`Library`Dump`f, RandomProcesses`Library`Dump`g \/. RandomProcesses`Library`Dump`ru, RandomProcesses`Library`Dump`assumps}]], \"ParseProcessException\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: RandomProcesses`Library`ParseProcesses",
	"Statistics`Library`ParseProductTransformedDistributions":"ObjectType: Symbol\nUsage: Statistics`Library`ParseProductTransformedDistributions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ParseProductTransformedDistributions[Statistics`SolversCommonDump`expr_, Distributed[Statistics`SolversCommonDump`xvec_, ProductDistribution[Statistics`SolversCommonDump`tds:TransformedDistribution[_, __]..]]] := Module[{Statistics`SolversCommonDump`vars, Statistics`SolversCommonDump`len, Statistics`SolversCommonDump`newvars, Statistics`SolversCommonDump`assumps, Statistics`SolversCommonDump`z, Statistics`SolversCommonDump`subst, Statistics`SolversCommonDump`res, Statistics`SolversCommonDump`blacklist}, Statistics`SolversCommonDump`vars = Statistics`SolversCommonDump`TDImplicitVariables \/@ {Statistics`SolversCommonDump`tds}; (Statistics`SolversCommonDump`len = Total[Length \/@ Statistics`SolversCommonDump`vars]; Statistics`SolversCommonDump`newvars = Internal`PartitionRagged[Array[Statistics`SolversCommonDump`z, Statistics`SolversCommonDump`len], Length \/@ Statistics`SolversCommonDump`vars]; Statistics`SolversCommonDump`assumps = And @@ DistributionParameterAssumptions \/@ {Statistics`SolversCommonDump`tds}; Statistics`SolversCommonDump`subst = MapThread[Take[List @@ #1, 2] \/. Thread[#2 -> #3] & , {{Statistics`SolversCommonDump`tds}, Statistics`SolversCommonDump`vars, Statistics`SolversCommonDump`newvars}]; Statistics`SolversCommonDump`res = {Statistics`SolversCommonDump`expr \/. Thread[Statistics`SolversCommonDump`xvec -> Flatten[Statistics`SolversCommonDump`subst[[All,1]]]], Statistics`Library`ListToProductSpecification[Flatten[Statistics`SolversCommonDump`subst[[All,2]]]], Statistics`SolversCommonDump`assumps}; Statistics`SolversCommonDump`blacklist = DeleteDuplicates[Cases[Level[Statistics`SolversCommonDump`res, {-1}], _Symbol]]; Statistics`SolversCommonDump`res \/. Thread[Flatten[Statistics`SolversCommonDump`newvars] -> Statistics`Library`GenerateUniqueVariables[\"\", Statistics`SolversCommonDump`len, Statistics`SolversCommonDump`blacklist]]) \/; Internal`LiterallyAbsentQ[Statistics`SolversCommonDump`vars, $Failed]]\nStatistics`Library`ParseProductTransformedDistributions[Statistics`SolversCommonDump`expr_, Distributed[Statistics`SolversCommonDump`xvec_, Statistics`SolversCommonDump`tds:TransformedDistribution[_, __]]] := Module[{Statistics`SolversCommonDump`vars, Statistics`SolversCommonDump`len, Statistics`SolversCommonDump`newvars, Statistics`SolversCommonDump`assumps, Statistics`SolversCommonDump`z, Statistics`SolversCommonDump`subst, Statistics`SolversCommonDump`res, Statistics`SolversCommonDump`blacklist}, Statistics`SolversCommonDump`vars = Statistics`SolversCommonDump`TDImplicitVariables \/@ {Statistics`SolversCommonDump`tds}; (Statistics`SolversCommonDump`len = Total[Length \/@ Statistics`SolversCommonDump`vars]; Statistics`SolversCommonDump`newvars = Internal`PartitionRagged[Array[Statistics`SolversCommonDump`z, Statistics`SolversCommonDump`len], Length \/@ Statistics`SolversCommonDump`vars]; Statistics`SolversCommonDump`assumps = And @@ DistributionParameterAssumptions \/@ {Statistics`SolversCommonDump`tds}; Statistics`SolversCommonDump`subst = MapThread[Take[List @@ #1, 2] \/. Thread[#2 -> #3] & , {{Statistics`SolversCommonDump`tds}, Statistics`SolversCommonDump`vars, Statistics`SolversCommonDump`newvars}]; Statistics`SolversCommonDump`res = {Statistics`SolversCommonDump`expr \/. Thread[Statistics`SolversCommonDump`xvec -> Flatten[Statistics`SolversCommonDump`subst[[All,1]]]], Statistics`Library`ListToProductSpecification[Flatten[Statistics`SolversCommonDump`subst[[All,2]]]], Statistics`SolversCommonDump`assumps}; Statistics`SolversCommonDump`blacklist = DeleteDuplicates[Cases[Level[Statistics`SolversCommonDump`res, {-1}], _Symbol]]; Statistics`SolversCommonDump`res \/. Thread[Flatten[Statistics`SolversCommonDump`newvars] -> Statistics`Library`GenerateUniqueVariables[\"\", Statistics`SolversCommonDump`len, Statistics`SolversCommonDump`blacklist]]) \/; Internal`LiterallyAbsentQ[Statistics`SolversCommonDump`vars, $Failed]]\nStatistics`Library`ParseProductTransformedDistributions[___] := {$Failed, $Failed, False}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ParseProductTransformedDistributions",
	"Charting`ParseRegionFunction":"ObjectType: Symbol\nUsage: Charting`ParseRegionFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`ParseRegionFunction[Charting`ParserDump`fn_, Charting`ParserDump`rf_, Charting`ParserDump`geoproj_, Charting`ParserDump`georange_] := Module[{Charting`ParserDump`regionpolygon, Charting`ParserDump`georegionfunction, Charting`ParserDump`regionmember}, Switch[Charting`ParserDump`rf, _Entity | _GeoVariant | _GeoGroup, Charting`ParserDump`regionpolygon = EntityValue[Charting`ParserDump`rf, \"Polygon\"]; If[MatchQ[Charting`ParserDump`regionpolygon, _Polygon], Charting`ParserDump`regionpolygon = Polygon[First[GeoGridPosition[First[Charting`ParserDump`regionpolygon], Charting`ParserDump`geoproj]]]; Charting`ParserDump`regionmember = RegionMember[Charting`ParserDump`regionpolygon]; With[{Charting`ParserDump`regionmember = Charting`ParserDump`regionmember}, Switch[Charting`ParserDump`fn, GeoSmoothHistogram | GeoContourPlot | GeoDensityPlot, Function[{Charting`ParserDump`x, Charting`ParserDump`y, Charting`ParserDump`z}, Charting`ParserDump`regionmember[{Charting`ParserDump`x, Charting`ParserDump`y}]], GeoVectorPlot | GeoStreamPlot, Function[{Charting`ParserDump`x, Charting`ParserDump`y, Charting`ParserDump`vx, Charting`ParserDump`vy, Charting`ParserDump`n}, Charting`ParserDump`regionmember[{Charting`ParserDump`x, Charting`ParserDump`y}]], _, True & ]], Switch[Charting`ParserDump`fn, GeoSmoothHistogram | GeoContourPlot | GeoDensityPlot, With[{Charting`ParserDump`pos = GIS`GeoProjectArray[{#1, #2}, Charting`ParserDump`geoproj -> GeoPosition]}, GeoWithinQ[Charting`ParserDump`rf, GeoPosition[Charting`ParserDump`pos]]] & , GeoVectorPlot | GeoStreamPlot, With[{Charting`ParserDump`pos = GIS`GeoProjectArray[{#1, #2}, Charting`ParserDump`geoproj -> GeoPosition]}, GeoWithinQ[Charting`ParserDump`rf, GeoPosition[Charting`ParserDump`pos]]] & , _, True & ]], True & , Switch[Charting`ParserDump`fn, GeoSmoothHistogram, True & , GeoVectorPlot | GeoStreamPlot | GeoContourPlot | GeoDensityPlot, Module[{Charting`ParserDump`regfn, Charting`ParserDump`geobackgroundpolygon}, If[ !GIS`CylindricalProjectionQ[Charting`ParserDump`geoproj], Charting`ParserDump`geobackgroundpolygon = GIS`GeoRangeProjectedPolygon[Charting`ParserDump`georange, Charting`ParserDump`geoproj]; If[Charting`ParserDump`geobackgroundpolygon === $Failed, True & , Charting`ParserDump`regfn = RegionMember[Charting`ParserDump`geobackgroundpolygon]; Function[{Charting`ParserDump`x, Charting`ParserDump`y, Charting`ParserDump`vx, Charting`ParserDump`vy, Charting`ParserDump`n}, Charting`ParserDump`regfn[{Charting`ParserDump`x, Charting`ParserDump`y}]]], True & ]], _, True & ], _, Charting`ParserDump`georegionfunction = Charting`ParserDump`rf; Switch[Charting`ParserDump`fn, GeoSmoothHistogram | GeoContourPlot | GeoDensityPlot, With[{Charting`ParserDump`pos = GIS`GeoProjectArray[{#1, #2}, Charting`ParserDump`geoproj -> GeoPosition]}, Charting`ParserDump`georegionfunction[Charting`ParserDump`pos[[1]], Charting`ParserDump`pos[[2]], #3]] & , GeoVectorPlot | GeoStreamPlot, With[{Charting`ParserDump`pos = GIS`GeoProjectArray[{#1, #2}, Charting`ParserDump`geoproj -> GeoPosition]}, With[{Charting`ParserDump`vec = Quiet[GeoVectorENU[GeoGridVector[GeoPosition[Charting`ParserDump`pos] -> {#3, #4}, Charting`ParserDump`geoproj]][\"Vector\"]]}, With[{Charting`ParserDump`res = Charting`ParserDump`georegionfunction[Charting`ParserDump`pos[[1]], Charting`ParserDump`pos[[2]], Charting`ParserDump`vec[[1]], Charting`ParserDump`vec[[2]], Norm[{Charting`ParserDump`vec}]]}, If[MatchQ[Charting`ParserDump`res, True | False], Charting`ParserDump`res, True]]]] & , _, True & ]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`ParseRegionFunction",
	"RandomProcesses`TimeSeriesCommon`ParseSamplingInitialConditions":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`ParseSamplingInitialConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`ParseSamplingInitialConditions[RandomProcesses`TimeSeriesCommonDump`init_, {RandomProcesses`TimeSeriesCommonDump`t0_, RandomProcesses`TimeSeriesCommonDump`t1_}, RandomProcesses`TimeSeriesCommonDump`n_, {RandomProcesses`TimeSeriesCommonDump`lena_, RandomProcesses`TimeSeriesCommonDump`lenb_, RandomProcesses`TimeSeriesCommonDump`padval_}] := Block[{RandomProcesses`TimeSeriesCommonDump`s = RandomProcesses`TimeSeriesCommonDump`init, RandomProcesses`TimeSeriesCommonDump`tmin = RandomProcesses`TimeSeriesCommonDump`t0, RandomProcesses`TimeSeriesCommonDump`dt = 1, RandomProcesses`TimeSeriesCommonDump`urt, RandomProcesses`TimeSeriesCommonDump`f, RandomProcesses`TimeSeriesCommonDump`y0, RandomProcesses`TimeSeriesCommonDump`e0}, If[Head[RandomProcesses`TimeSeriesCommonDump`init] === TemporalData, RandomProcesses`TimeSeriesCommonDump`s = RandomProcesses`TimeSeriesCommonDump`init[\"PathStates\"]; RandomProcesses`TimeSeriesCommonDump`urt = First[RandomProcesses`TimeSeriesCommonDump`init[\"UnexpandedRawTimes\"]]; RandomProcesses`TimeSeriesCommonDump`dt = First[RandomProcesses`TimeSeriesCommonDump`init[\"MinimumTimeIncrement\"]]; Switch[RandomProcesses`TimeSeriesCommonDump`urt, _TemporalData`DateSpecification, If[Last[RandomProcesses`TimeSeriesCommonDump`urt] === \"DayRange\", RandomProcesses`TimeSeriesCommonDump`f = DayPlus[#1, RandomProcesses`TimeSeriesCommonDump`t0 + 1, #2] & , RandomProcesses`TimeSeriesCommonDump`f = DatePlus[#1, If[ListQ[#2], {(RandomProcesses`TimeSeriesCommonDump`t0 + 1)*First[#2], Last[#2]}, {RandomProcesses`TimeSeriesCommonDump`t0 + 1, #2}]] & ]; RandomProcesses`TimeSeriesCommonDump`tmin = RandomProcesses`TimeSeriesCommonDump`f[RandomProcesses`TimeSeriesCommonDump`urt[[2]], RandomProcesses`TimeSeriesCommonDump`dt], _, RandomProcesses`TimeSeriesCommonDump`tmin = Last[RandomProcesses`TimeSeriesCommonDump`init[\"PathTimes\"]] + (RandomProcesses`TimeSeriesCommonDump`t0 + 1)*RandomProcesses`TimeSeriesCommonDump`dt]; ]; RandomProcesses`TimeSeriesCommonDump`y0 = PadRight[Reverse[RandomProcesses`TimeSeriesCommonDump`s], RandomProcesses`TimeSeriesCommonDump`lena, {RandomProcesses`TimeSeriesCommonDump`padval}]; RandomProcesses`TimeSeriesCommonDump`e0 = ConstantArray[RandomProcesses`TimeSeriesCommonDump`padval, RandomProcesses`TimeSeriesCommonDump`lenb]; {RandomProcesses`TimeSeriesCommonDump`tmin, RandomProcesses`TimeSeriesCommonDump`t1 + 1, RandomProcesses`TimeSeriesCommonDump`dt, ConstantArray[RandomProcesses`TimeSeriesCommonDump`y0, RandomProcesses`TimeSeriesCommonDump`n], ConstantArray[RandomProcesses`TimeSeriesCommonDump`e0, RandomProcesses`TimeSeriesCommonDump`n]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`ParseSamplingInitialConditions",
	"Visualization`Utilities`ParseScalingFunctions":"ObjectType: Symbol\nUsage: Visualization`Utilities`ParseScalingFunctions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`ParseScalingFunctions[None | Automatic, Visualization`Utilities`ScalingDump`n_, Visualization`Utilities`ScalingDump`mhead_, Visualization`Utilities`ScalingDump`o:OptionsPattern[]] := Table[Identity, {Visualization`Utilities`ScalingDump`n}, {2}]\nVisualization`Utilities`ParseScalingFunctions[Visualization`Utilities`ScalingDump`l:{__?Visualization`Utilities`ScalingDump`scalingPairQ}, Visualization`Utilities`ScalingDump`n_, Visualization`Utilities`ScalingDump`mh_, Visualization`Utilities`ScalingDump`o:OptionsPattern[]] := Module[{Visualization`Utilities`ScalingDump`resolvenamedscl}, Visualization`Utilities`ScalingDump`resolvenamedscl = OptionValue[Visualization`Utilities`ParseScalingFunctions, {Visualization`Utilities`ScalingDump`o}, \"ResolveNamedScalingFunctions\"]; Which[Length[Visualization`Utilities`ScalingDump`l] <= Visualization`Utilities`ScalingDump`n, If[ !TrueQ[Visualization`Utilities`ScalingDump`resolvenamedscl], PadRight[Visualization`Utilities`ScalingDump`l, Visualization`Utilities`ScalingDump`n, Identity], Visualization`Utilities`ScalingDump`scalingPair \/@ PadRight[Visualization`Utilities`ScalingDump`l, Visualization`Utilities`ScalingDump`n, Identity]], True, Message[Visualization`Utilities`ScalingDump`mhead::sclfn, Visualization`Utilities`ScalingDump`l]; Visualization`Utilities`ParseScalingFunctions[None, Visualization`Utilities`ScalingDump`n, Visualization`Utilities`ScalingDump`mhead, Visualization`Utilities`ScalingDump`o]]]\nVisualization`Utilities`ParseScalingFunctions[(Charting`s_)?Visualization`Utilities`ScalingDump`scalingPairQ, Visualization`Utilities`ScalingDump`n_, Visualization`Utilities`ScalingDump`mhead_, Visualization`Utilities`ScalingDump`o:OptionsPattern[]] := Visualization`Utilities`ParseScalingFunctions[ReplacePart[Table[None, {Visualization`Utilities`ScalingDump`n}], Visualization`Utilities`ScalingDump`n -> Charting`s], Visualization`Utilities`ScalingDump`n, Visualization`Utilities`ScalingDump`mhead, Visualization`Utilities`ScalingDump`o]\nVisualization`Utilities`ParseScalingFunctions[Visualization`Utilities`ScalingDump`f_, Visualization`Utilities`ScalingDump`n_, Visualization`Utilities`ScalingDump`mh_, Visualization`Utilities`ScalingDump`o:OptionsPattern[]] := Block[{}, Message[Visualization`Utilities`ScalingDump`mh::sclfn, Visualization`Utilities`ScalingDump`f]; Visualization`Utilities`ParseScalingFunctions[None, Visualization`Utilities`ScalingDump`n, Visualization`Utilities`ScalingDump`mh, Visualization`Utilities`ScalingDump`o]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ResolveNamedScalingFunctions -> True}\nAttributes: {}\nFullName: Visualization`Utilities`ParseScalingFunctions",
	"Charting`ParseStreamPoints":"ObjectType: Symbol\nUsage: Charting`ParseStreamPoints\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`ParseStreamPoints[Charting`ParserDump`sp_, Charting`ParserDump`proj_] := Switch[Charting`ParserDump`sp, {_, _}, Charting`ParserDump`sp, {_, {_, _}}, Charting`ParserDump`sp, {_?Internal`PossibleEntityListQ | GeoPosition[__] | {GeoPosition[__]..}, _, _}, Block[{Charting`ParserDump`coords = Cases[Charting`ParserDump`ParseCoords[Charting`ParserDump`sp[[1]]], {_?Charting`realNumericQ, _?Charting`realNumericQ}]}, {Charting`ParserDump`GeoGridConvert[Charting`ParserDump`coords, None -> Charting`ParserDump`proj], Charting`ParserDump`sp[[2]], Charting`ParserDump`sp[[3]]}], {({{_?Charting`realNumericQ, _?Charting`realNumericQ} | GeoPosition[__], _} | Automatic)..}, Module[{Charting`ParserDump`pos, Charting`ParserDump`parsed}, Charting`ParserDump`pos = Position[Charting`ParserDump`sp, {{_?Charting`realNumericQ, _?Charting`realNumericQ} | GeoPosition[__], _}]; Charting`ParserDump`parsed = Map[Charting`ParserDump`ParseCoords, Transpose[Cases[Charting`ParserDump`sp, {_, _}]], 1]; {ReplacePart[Charting`ParserDump`sp, Thread[Flatten[Charting`ParserDump`pos] -> MapAt[Charting`ParserDump`GeoGridConvert[#1, None -> Charting`ParserDump`proj] & , Transpose[Charting`ParserDump`parsed], {All, 1}]]]}], _?Internal`PossibleEntityListQ | GeoPosition[__] | {GeoPosition[__]..}, Block[{Charting`ParserDump`coords = Cases[Charting`ParserDump`ParseCoords[Charting`ParserDump`sp], {_?Charting`realNumericQ, _?Charting`realNumericQ}]}, Charting`ParserDump`GeoGridConvert[Charting`ParserDump`coords, None -> Charting`ParserDump`proj]], _, Charting`ParserDump`sp]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`ParseStreamPoints",
	"ExternalService`ParseTable":"ObjectType: Symbol\nUsage: ExternalService`ParseTable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ExternalService`ParseTable[ExternalService`UtilitiesDump`data:{{___String}..}, ExternalService`UtilitiesDump`opts:OptionsPattern[]] := Module[{ExternalService`UtilitiesDump`prefix, ExternalService`UtilitiesDump`postfix, ExternalService`UtilitiesDump`signs, ExternalService`UtilitiesDump`decimal, ExternalService`UtilitiesDump`datefmt, ExternalService`UtilitiesDump`checkDates, ExternalService`UtilitiesDump`tryDate, ExternalService`UtilitiesDump`fromCForm}, ExternalService`UtilitiesDump`prefix = Quiet[OptionValue[\"Prefix\"]]; ExternalService`UtilitiesDump`postfix = Quiet[OptionValue[\"Postfix\"]]; ExternalService`UtilitiesDump`signs = Quiet[OptionValue[\"NumberSigns\"]]; ExternalService`UtilitiesDump`decimal = Quiet[OptionValue[\"DecimalPoint\"]]; ExternalService`UtilitiesDump`datefmt = Quiet[OptionValue[\"DateFormat\"]]; If[ !ExternalService`UtilitiesDump`listOfSingles[ExternalService`UtilitiesDump`prefix], Message[ExternalService`UtilitiesDump`ParseTable::optv, \"Prefix\", ExternalService`UtilitiesDump`prefix]; Return[$Failed]]; If[ !ExternalService`UtilitiesDump`listOfSingles[ExternalService`UtilitiesDump`postfix], Message[ExternalService`UtilitiesDump`ParseTable::optv, \"Postfix\", ExternalService`UtilitiesDump`postfix]; Return[$Failed]]; If[ !ExternalService`UtilitiesDump`listOfSingles[ExternalService`UtilitiesDump`signs], Message[ExternalService`UtilitiesDump`ParseTable::optv, \"NumberSigns\", ExternalService`UtilitiesDump`signs]; Return[$Failed]]; If[ !StringQ[ExternalService`UtilitiesDump`decimal] || StringLength[ExternalService`UtilitiesDump`decimal] =!= 1, Message[ExternalService`UtilitiesDump`ParseTable::optv, \"DecimalPoint\", ExternalService`UtilitiesDump`decimal]; Return[$Failed]]; If[ !MatchQ[ExternalService`UtilitiesDump`datefmt, ExternalService`UtilitiesDump`dateOptPat], Message[ExternalService`UtilitiesDump`ParseTable::optv, \"DateFormat\", ExternalService`UtilitiesDump`datefmt]; Return[$Failed]]; ExternalService`UtilitiesDump`checkDates = ExternalService`UtilitiesDump`datefmt =!= None; Block[{System`Convert`TableDump`TryDate, System`Convert`TableDump`FromCForm, System`Convert`TableDump`$datesf = ExternalService`UtilitiesDump`datefmt}, ExternalService`UtilitiesDump`tryDate = System`Convert`TableDump`TryDate; ExternalService`UtilitiesDump`fromCForm = System`Convert`TableDump`FromCForm; If[MatchQ[ExternalService`UtilitiesDump`datefmt, Automatic | \"Automatic\"], ExternalService`UtilitiesDump`tryDate[ExternalService`UtilitiesDump`str_String] := Module[{ExternalService`UtilitiesDump`res = Quiet[DateList[ExternalService`UtilitiesDump`str]]}, If[ListQ[ExternalService`UtilitiesDump`res], ExternalService`UtilitiesDump`res, ExternalService`UtilitiesDump`str]], ExternalService`UtilitiesDump`tryDate[ExternalService`UtilitiesDump`str_String] := If[StringMatchQ[ExternalService`UtilitiesDump`str, DatePattern[System`Convert`TableDump`$datesf]], DateList[{ExternalService`UtilitiesDump`str, System`Convert`TableDump`$datesf}], ExternalService`UtilitiesDump`str]]; ExternalService`UtilitiesDump`fromCForm[ExternalService`UtilitiesDump`str_String] := ToExpression[StringReplace[ExternalService`UtilitiesDump`str, \"E\" | \"e\" -> \"*10^\"]]; System`Convert`TableDump`ParseTable[ExternalService`UtilitiesDump`data, {{ExternalService`UtilitiesDump`prefix, ExternalService`UtilitiesDump`postfix}, ExternalService`UtilitiesDump`signs, ExternalService`UtilitiesDump`decimal}, ExternalService`UtilitiesDump`checkDates]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Prefix -> {$, £, ´, €}, Postfix -> {c, ¢, p, F}, NumberSigns -> {-, +}, DecimalPoint -> ., DateFormat -> None}\nAttributes: {}\nFullName: ExternalService`ParseTable",
	"System`Convert`TableDump`ParseTable":"ObjectType: Symbol\nUsage: System`Convert`TableDump`ParseTable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`TableDump`ParseTable",
	"Graphics`Units`ParseTargetUnits":"ObjectType: Symbol\nUsage: Graphics`Units`ParseTargetUnits\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Units`ParseTargetUnits[Graphics`Units`Private`f_, Graphics`Units`Private`uname_] \/; Graphics`Units`Private`testSymbolQ[Graphics`Units`Private`f, \"Plot\"] := Graphics`Units`Private`iParseTargetUnits[Graphics`Units`Private`funcParams[\"Plot\"], Graphics`Units`Private`uname]\nGraphics`Units`ParseTargetUnits[Graphics`Units`Private`f_, Graphics`Units`Private`uname_] \/; Graphics`Units`Private`testSymbolQ[Graphics`Units`Private`f, \"Plot3D\"] := Graphics`Units`Private`iParseTargetUnits[Graphics`Units`Private`funcParams[\"Plot3D\"], Graphics`Units`Private`uname]\nGraphics`Units`ParseTargetUnits[{Graphics`Units`Private`f_, 2}, Graphics`Units`Private`uname_] \/; Graphics`Units`Private`testSymbolQ[Graphics`Units`Private`f, \"ParametricPlot\"] := Graphics`Units`Private`iParseTargetUnits[Graphics`Units`Private`funcParams[\"ParametricPlot\", 2], Graphics`Units`Private`uname]\nGraphics`Units`ParseTargetUnits[{Graphics`Units`Private`f_, 3}, Graphics`Units`Private`uname_] \/; Graphics`Units`Private`testSymbolQ[Graphics`Units`Private`f, \"ParametricPlot\"] := Graphics`Units`Private`iParseTargetUnits[Graphics`Units`Private`funcParams[\"ParametricPlot\", 3], Graphics`Units`Private`uname]\nGraphics`Units`ParseTargetUnits[Graphics`Units`Private`f_, _] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Units`ParseTargetUnits",
	"Charting`ParseVolumeSlices":"ObjectType: Symbol\nUsage: Charting`ParseVolumeSlices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`planes_, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; Head[Graphics`VolumePlotPrivate`planes] === Equal || Head[Graphics`VolumePlotPrivate`planes] === LessEqual || Head[Graphics`VolumePlotPrivate`planes] === GreaterEqual := Graphics`VolumePlotPrivate`planes\nCharting`ParseVolumeSlices[{Charting`s_String, (Graphics`VolumePlotPrivate`n_Integer)?Positive}, Graphics`VolumePlotPrivate`range1_, Graphics`VolumePlotPrivate`range2_, Graphics`VolumePlotPrivate`range3_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`n]\nCharting`ParseVolumeSlices[Charting`s_String, {Graphics`VolumePlotPrivate`var1_, (Graphics`VolumePlotPrivate`xmin_)?NumericQ, (Graphics`VolumePlotPrivate`xmax_)?NumericQ}, {Graphics`VolumePlotPrivate`var2_, (Graphics`VolumePlotPrivate`ymin_)?NumericQ, (Graphics`VolumePlotPrivate`ymax_)?NumericQ}, {Graphics`VolumePlotPrivate`var3_, (Graphics`VolumePlotPrivate`zmin_)?NumericQ, (Graphics`VolumePlotPrivate`zmax_)?NumericQ}, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Module[{}, Visualization`Core`GetSliceSurfaces[Charting`s, {Graphics`VolumePlotPrivate`var1, Graphics`VolumePlotPrivate`var2, Graphics`VolumePlotPrivate`var3}, Graphics`VolumePlotPrivate`o]]\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`planes_, {Graphics`VolumePlotPrivate`var1_, (Graphics`VolumePlotPrivate`xmin_)?NumericQ, (Graphics`VolumePlotPrivate`xmax_)?NumericQ}, {Graphics`VolumePlotPrivate`var2_, (Graphics`VolumePlotPrivate`ymin_)?NumericQ, (Graphics`VolumePlotPrivate`ymax_)?NumericQ}, {Graphics`VolumePlotPrivate`var3_, (Graphics`VolumePlotPrivate`zmin_)?NumericQ, (Graphics`VolumePlotPrivate`zmax_)?NumericQ}, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; Head[Graphics`VolumePlotPrivate`planes] === Equal || Head[Graphics`VolumePlotPrivate`planes] === LessEqual || Head[Graphics`VolumePlotPrivate`planes] === GreaterEqual := Graphics`VolumePlotPrivate`planes\nCharting`ParseVolumeSlices[Charting`s_String, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Visualization`Core`GetSliceSurfaces[Charting`s, Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[Charting`s_String, Graphics`VolumePlotPrivate`range1_, Graphics`VolumePlotPrivate`range2_, Graphics`VolumePlotPrivate`range3_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s\nCharting`ParseVolumeSlices[{Charting`s_String, (Graphics`VolumePlotPrivate`n_Integer)?Positive}, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`n]\nCharting`ParseVolumeSlices[{Charting`s_String, Graphics`VolumePlotPrivate`n_Integer, (Graphics`VolumePlotPrivate`m_Integer)?Positive}, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`m]\nCharting`ParseVolumeSlices[{Charting`s_String, (Graphics`VolumePlotPrivate`v_)?VectorQ}, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`v]\nCharting`ParseVolumeSlices[{Charting`s_String, (Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`u_)?VectorQ}, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`u]\nCharting`ParseVolumeSlices[{Charting`s_String, Graphics`VolumePlotPrivate`a_MatrixQ, (Graphics`VolumePlotPrivate`l_)?VectorQ}, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`a, Graphics`VolumePlotPrivate`l]\nCharting`ParseVolumeSlices[{Charting`s_String, (Graphics`VolumePlotPrivate`l_Integer)?Positive, Graphics`VolumePlotPrivate`m_List}, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; MemberQ[Graphics`VolumePlotPrivate`namedSlices, Charting`s] := Charting`s[Graphics`VolumePlotPrivate`l, Graphics`VolumePlotPrivate`m]\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`spec_, Graphics`VolumePlotPrivate`vars_, {Graphics`VolumePlotPrivate`var1_Symbol, (Graphics`VolumePlotPrivate`xmin_)?NumericQ, (Graphics`VolumePlotPrivate`xmax_)?NumericQ}, {Graphics`VolumePlotPrivate`var2_Symbol, (Graphics`VolumePlotPrivate`ymin_)?NumericQ, (Graphics`VolumePlotPrivate`ymax_)?NumericQ}, {Graphics`VolumePlotPrivate`var3_Symbol, (Graphics`VolumePlotPrivate`zmin_)?NumericQ, (Graphics`VolumePlotPrivate`zmax_)?NumericQ}, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[Graphics`VolumePlotPrivate`spec, Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"XStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, 1], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"YStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, 2], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"ZStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, 3], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"XStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive, (Graphics`VolumePlotPrivate`m_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`m], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"YStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive, (Graphics`VolumePlotPrivate`m_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`m], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"ZStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive, (Graphics`VolumePlotPrivate`m_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`m], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"XStackedPlanes\"[(Graphics`VolumePlotPrivate`v_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`v, 1], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"YStackedPlanes\"[(Graphics`VolumePlotPrivate`v_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`v, 2], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"ZStackedPlanes\"[(Graphics`VolumePlotPrivate`v_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`v, 3], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"StackedPlanes\"[(Graphics`VolumePlotPrivate`planes_)?MatrixQ, (Graphics`VolumePlotPrivate`dir_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`planes, Graphics`VolumePlotPrivate`dir], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"StackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive, (Graphics`VolumePlotPrivate`dir_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"DiagonalStackedPlanes\"[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`dir], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n_Integer, Graphics`VolumePlotPrivate`m_Integer], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`m], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"StackedPlanes\"[(Graphics`VolumePlotPrivate`v_)?VectorQ, Graphics`VolumePlotPrivate`m_Integer], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`m], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"DiagonalStackedPlanes\"[(Graphics`VolumePlotPrivate`planes_)?MatrixQ, (Graphics`VolumePlotPrivate`dir_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"DiagonalStackedPlanes\"[Graphics`VolumePlotPrivate`planes, Graphics`VolumePlotPrivate`dir], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"DiagonalStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive, (Graphics`VolumePlotPrivate`dir_)?VectorQ], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"DiagonalStackedPlanes\"[Graphics`VolumePlotPrivate`n, Graphics`VolumePlotPrivate`dir], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"DiagonalStackedPlanes\"[(Graphics`VolumePlotPrivate`n_Integer)?Positive], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"DiagonalStackedPlanes\"[Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[Automatic, {Graphics`VolumePlotPrivate`var1_, (Graphics`VolumePlotPrivate`xmin_)?NumericQ, (Graphics`VolumePlotPrivate`xmax_)?NumericQ}, {Graphics`VolumePlotPrivate`var2_, (Graphics`VolumePlotPrivate`ymin_)?NumericQ, (Graphics`VolumePlotPrivate`ymax_)?NumericQ}, {Graphics`VolumePlotPrivate`var3_, (Graphics`VolumePlotPrivate`zmin_)?NumericQ, (Graphics`VolumePlotPrivate`zmax_)?NumericQ}, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Module[{}, Visualization`Core`GetSliceSurfaces[\"CenterPlanes\", {Graphics`VolumePlotPrivate`var1, Graphics`VolumePlotPrivate`var2, Graphics`VolumePlotPrivate`var3}, Graphics`VolumePlotPrivate`o]]\nCharting`ParseVolumeSlices[Automatic | \"CenterPlanes\", Graphics`VolumePlotPrivate`vars_List, Graphics`VolumePlotPrivate`dims_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Module[{}, Thread[Graphics`VolumePlotPrivate`vars == Graphics`VolumePlotPrivate`dims\/2]]\nCharting`ParseVolumeSlices[\"CenterPlanes\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Module[{}, Thread[Graphics`VolumePlotPrivate`vars == (Total[#1]\/2 & ) \/@ Graphics`VolumePlotPrivate`vars]]\nCharting`ParseVolumeSlices[\"BackPlanes\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"BackPlanes\", Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"XStackedPlanes\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[3, 1], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"YStackedPlanes\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[3, 2], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"ZStackedPlanes\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"StackedPlanes\"[3, 3], Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"DiagonalStackedPlanes\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := Visualization`Core`GetSliceSurfaces[\"DiagonalStackedPlanes\", Graphics`VolumePlotPrivate`vars, Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[\"CenterSphere\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := \"CenterSphere\"\nCharting`ParseVolumeSlices[\"CenterCutSphere\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := \"CenterCutSphere\"\nCharting`ParseVolumeSlices[\"CenterCutSphere\"[Graphics`VolumePlotPrivate`gap_], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := \"CenterCutSphere\"[Graphics`VolumePlotPrivate`gap]\nCharting`ParseVolumeSlices[\"CenterCutSphere\"[Graphics`VolumePlotPrivate`gap_, Graphics`VolumePlotPrivate`offset_], Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := \"CenterCutSphere\"[Graphics`VolumePlotPrivate`gap, Graphics`VolumePlotPrivate`offset]\nCharting`ParseVolumeSlices[\"CenterCutBox\", Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges__, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := \"CenterCutBox\"\nCharting`ParseVolumeSlices[Style[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`o__], Graphics`VolumePlotPrivate`args__] := Style[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[Annotation[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`tooltip__], Graphics`VolumePlotPrivate`args__] := Annotation[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`tooltip]\nCharting`ParseVolumeSlices[Button[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`action_, Graphics`VolumePlotPrivate`o___], Graphics`VolumePlotPrivate`args__] := Button[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`action, Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[EventHandler[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`o__], Graphics`VolumePlotPrivate`args_, _] := Charting`ParseVolumeSlices[EventHandler[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`slice], Graphics`VolumePlotPrivate`args]\nCharting`ParseVolumeSlices[Hyperlink[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`o___], Graphics`VolumePlotPrivate`args__] := Hyperlink[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[Labeled[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`o___], Graphics`VolumePlotPrivate`args__] := Labeled[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[PopupWindow[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`contents_], Graphics`VolumePlotPrivate`args_, Graphics`VolumePlotPrivate`o___] := PopupWindow[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args, Graphics`VolumePlotPrivate`o], Graphics`VolumePlotPrivate`contents]\nCharting`ParseVolumeSlices[StatusArea[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`o__], Graphics`VolumePlotPrivate`args__] := StatusArea[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`o]\nCharting`ParseVolumeSlices[Tooltip[Graphics`VolumePlotPrivate`slice_], Graphics`VolumePlotPrivate`args__] := Charting`ParseVolumeSlices[Tooltip[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`slice], Graphics`VolumePlotPrivate`args]\nCharting`ParseVolumeSlices[Tooltip[Graphics`VolumePlotPrivate`slice_, Graphics`VolumePlotPrivate`tooltip__], Graphics`VolumePlotPrivate`args__] := Tooltip[Charting`ParseVolumeSlices[Graphics`VolumePlotPrivate`slice, Graphics`VolumePlotPrivate`args], Graphics`VolumePlotPrivate`tooltip]\nCharting`ParseVolumeSlices[Annulus[(Graphics`VolumePlotPrivate`points_)?MatrixQ, Graphics`VolumePlotPrivate`r_Real], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Annulus[Graphics`VolumePlotPrivate`points, Graphics`VolumePlotPrivate`r], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Ball[Graphics`VolumePlotPrivate`n_Integer], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Ball[Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Ball[(Graphics`VolumePlotPrivate`v_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Ball[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Ball[(Graphics`VolumePlotPrivate`v_)?VectorQ, Graphics`VolumePlotPrivate`n_Integer], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Ball[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Ball[(Graphics`VolumePlotPrivate`points_)?MatrixQ, Graphics`VolumePlotPrivate`n_Integer], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Ball[Graphics`VolumePlotPrivate`points, Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`Capsule[(Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`w_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Graphics`VolumePlotPrivate`Capsule[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`w], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`Capsule[(Graphics`VolumePlotPrivate`u_)?VectorQ, (Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`w_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Graphics`VolumePlotPrivate`Capsule[Graphics`VolumePlotPrivate`u, Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`w], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Cone[(Graphics`VolumePlotPrivate`v_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Cone[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Cone[(Graphics`VolumePlotPrivate`v_)?MatrixQ, Graphics`VolumePlotPrivate`r_Real], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Cone[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`r], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Cuboid[(Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`w_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Cuboid[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`w], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Cylinder[(Graphics`VolumePlotPrivate`v_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Cylinder[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Cylinder[(Graphics`VolumePlotPrivate`v_)?MatrixQ, Graphics`VolumePlotPrivate`n_Integer], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Cylinder[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Ellipsoid[(Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`w_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Ellipsoid[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`w], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[HalfPlane[(Graphics`VolumePlotPrivate`points_)?MatrixQ, (Graphics`VolumePlotPrivate`v_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {HalfPlane[Graphics`VolumePlotPrivate`points, Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[HalfPlane[(Graphics`VolumePlotPrivate`points_)?MatrixQ, (Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`w_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {HalfPlane[Graphics`VolumePlotPrivate`points, Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`w], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Hexahedron[(Graphics`VolumePlotPrivate`v_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Hexahedron[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Hexahedron[{(Graphics`VolumePlotPrivate`m__)?MatrixQ}], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Hexahedron[{Graphics`VolumePlotPrivate`m}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[InfinitePlane[(Graphics`VolumePlotPrivate`points_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {InfinitePlane[Graphics`VolumePlotPrivate`points], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[InfinitePlane[(Graphics`VolumePlotPrivate`u_)?VectorQ, {(Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`w_)?VectorQ}], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {InfinitePlane[Graphics`VolumePlotPrivate`u, {Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`w}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Polygon[(Graphics`VolumePlotPrivate`points_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Polygon[Graphics`VolumePlotPrivate`points], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Polygon[{(Graphics`VolumePlotPrivate`m__)?MatrixQ}], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Polygon[{Graphics`VolumePlotPrivate`m}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Prism[(Graphics`VolumePlotPrivate`v_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Prism[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Pyramid[(Graphics`VolumePlotPrivate`v_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Pyramid[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Sphere[(Graphics`VolumePlotPrivate`v_)?VectorQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Sphere[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Sphere[(Graphics`VolumePlotPrivate`v_)?VectorQ, (Graphics`VolumePlotPrivate`n_)?NumericQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Sphere[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Sphere[(Graphics`VolumePlotPrivate`v_)?MatrixQ, (Graphics`VolumePlotPrivate`n_)?NumericQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Sphere[Graphics`VolumePlotPrivate`v, Graphics`VolumePlotPrivate`n], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Tetrahedron[(Graphics`VolumePlotPrivate`v_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Tetrahedron[Graphics`VolumePlotPrivate`v], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Tetrahedron[(Graphics`VolumePlotPrivate`v_)?MatrixQ..], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Tetrahedron[{Graphics`VolumePlotPrivate`v}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Triangle[(Graphics`VolumePlotPrivate`points_)?MatrixQ], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Triangle[Graphics`VolumePlotPrivate`points], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[Triangle[{(Graphics`VolumePlotPrivate`m__)?MatrixQ}], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {Triangle[{Graphics`VolumePlotPrivate`m}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[ImplicitRegion[Graphics`VolumePlotPrivate`cond_, {(Graphics`VolumePlotPrivate`m__)?MatrixQ}], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {ImplicitRegion[Graphics`VolumePlotPrivate`cond, {Graphics`VolumePlotPrivate`m}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[ParametricRegion[{(Graphics`VolumePlotPrivate`m__)?MatrixQ}], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {ParametricRegion[{Graphics`VolumePlotPrivate`m}], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[RegionUnion[Graphics`VolumePlotPrivate`reg__], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {RegionUnion[Graphics`VolumePlotPrivate`reg], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[RegionProduct[Graphics`VolumePlotPrivate`reg__], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := {RegionProduct[Graphics`VolumePlotPrivate`reg], Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o}\nCharting`ParseVolumeSlices[ImplicitRegion[Graphics`VolumePlotPrivate`eqs_, Graphics`VolumePlotPrivate`vars_], Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o___] := ImplicitRegion[Graphics`VolumePlotPrivate`eqs, Graphics`VolumePlotPrivate`vars]\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`list_List, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := (With[{Graphics`VolumePlotPrivate`reg = If[Head[#1] === List, #1[[1]], #1]}, If[MemberQ[Graphics`VolumePlotPrivate`validWrappers, Head[#1]], If[Head[#1[[1]]] === String || Head[#1[[1]]] === Equal, Graphics`VolumePlotPrivate`reg, Graphics`VolumePlotPrivate`reg], If[Head[#1] === String || Head[#1] === Equal || Head[#1] === LessEqual || Head[#1] === GreaterEqual, Graphics`VolumePlotPrivate`reg, Graphics`VolumePlotPrivate`reg]]] & ) \/@ Graphics`VolumePlotPrivate`list\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`list_List, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := (With[{Graphics`VolumePlotPrivate`reg = If[Head[#1] === List, #1[[1]], #1]}, If[MemberQ[Graphics`VolumePlotPrivate`validWrappers, Head[#1]], If[Head[#1[[1]]] === String || Head[#1[[1]]] === Equal, Graphics`VolumePlotPrivate`reg, Graphics`VolumePlotPrivate`reg], If[Head[#1] === String || Head[#1] === Equal || Head[#1] === LessEqual || Head[#1] === GreaterEqual, Graphics`VolumePlotPrivate`reg, Graphics`VolumePlotPrivate`reg]]] & ) \/@ Graphics`VolumePlotPrivate`list\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`list_List, Graphics`VolumePlotPrivate`range1_, Graphics`VolumePlotPrivate`range2_, Graphics`VolumePlotPrivate`range3_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] := (With[{Graphics`VolumePlotPrivate`reg = If[Head[#1] === List, #1[[1]], #1]}, If[MemberQ[Graphics`VolumePlotPrivate`validWrappers, Head[#1]], If[Head[#1[[1]]] === String || Head[#1[[1]]] === Equal, Graphics`VolumePlotPrivate`reg, Graphics`VolumePlotPrivate`reg], If[Head[#1] === String || Head[#1] === Equal || Head[#1] === LessEqual || Head[#1] === GreaterEqual, Graphics`VolumePlotPrivate`reg, Graphics`VolumePlotPrivate`reg]]] & ) \/@ Graphics`VolumePlotPrivate`list\nCharting`ParseVolumeSlices[Graphics`VolumePlotPrivate`planes_, Graphics`VolumePlotPrivate`vars_, Graphics`VolumePlotPrivate`ranges_, Graphics`VolumePlotPrivate`o:OptionsPattern[]] \/; (Head[Graphics`VolumePlotPrivate`planes] =!= List && Head[Graphics`VolumePlotPrivate`planes] =!= Equal) || Head[Graphics`VolumePlotPrivate`planes] =!= LessEqual || Head[Graphics`VolumePlotPrivate`planes] =!= GreaterEqual := DiscretizeRegion[Graphics`VolumePlotPrivate`planes, Graphics`VolumePlotPrivate`ranges, Graphics`VolumePlotPrivate`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AccuracyGoal -> Automatic, AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, Boxed -> False, BoxRatios -> Automatic, BoxStyle -> {}, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FaceGrids -> None, FaceGridsStyle -> {}, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxCellMeasure -> Automatic, MeshCellHighlight -> {}, MeshCellLabel -> Automatic, MeshCellMarker -> 0, MeshCellShapeFunction -> Automatic, MeshCellStyle -> Automatic, MeshQualityGoal -> Automatic, MeshRefinementFunction -> None, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, PrecisionGoal -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, RotationAction -> Fit, SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> Automatic, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, DataRange -> {{-1, 1}, {-1, 1}, {-1, 1}}}\nAttributes: {}\nFullName: Charting`ParseVolumeSlices",
	"FEPrivate`Part":"ObjectType: Symbol\nUsage: FEPrivate`Part\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FEPrivate`Part",
	"Reduce`PartiallyBoundedDiophantine":"ObjectType: Symbol\nUsage: Reduce`PartiallyBoundedDiophantine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PartiallyBoundedDiophantine[System`DiophantineDump`eqin_List, System`DiophantineDump`vars_List, System`DiophantineDump`qflag_] := Quiet[Module[{System`DiophantineDump`alg, System`DiophantineDump`bvs, System`DiophantineDump`v, System`DiophantineDump`i, System`DiophantineDump`n, System`DiophantineDump`a, System`DiophantineDump`b, System`DiophantineDump`c, System`DiophantineDump`pts, System`DiophantineDump`ans}, System`DiophantineDump`alg = And @@ Select[System`DiophantineDump`eqin, Head[#1] =!= Unequal && Reduce`AlgebraicConditionQ[#1, System`DiophantineDump`vars] & ]; If[System`DiophantineDump`alg === True, Return[$Failed]]; System`DiophantineDump`bvs = {}; Do[System`DiophantineDump`v = System`DiophantineDump`vars[[System`DiophantineDump`i]]; System`DiophantineDump`a = Ceiling[MinValue[{System`DiophantineDump`v, System`DiophantineDump`alg}, System`DiophantineDump`vars]]; If[IntegerQ[System`DiophantineDump`a], System`DiophantineDump`b = Floor[MaxValue[{System`DiophantineDump`v, System`DiophantineDump`alg}, System`DiophantineDump`vars]]; If[IntegerQ[System`DiophantineDump`b], System`DiophantineDump`c = System`DiophantineDump`b - System`DiophantineDump`a + 1; If[System`DiophantineDump`c <= 0, Return[If[System`DiophantineDump`qflag == 2, {}, False], Module]]; System`DiophantineDump`bvs = Append[System`DiophantineDump`bvs, {System`DiophantineDump`c, System`DiophantineDump`a, System`DiophantineDump`b, System`DiophantineDump`v}]]], {System`DiophantineDump`i, Length[System`DiophantineDump`vars]}]; System`DiophantineDump`n = Length[System`DiophantineDump`bvs]; If[System`DiophantineDump`n == 0, Return[$Failed]]; System`DiophantineDump`b = (\"ExhaustiveSearchMaxPoints\" \/. Internal`ReduceOptions[])[[2]]; System`DiophantineDump`bvs = Sort[System`DiophantineDump`bvs]; System`DiophantineDump`c = 1; System`DiophantineDump`i = 0; While[System`DiophantineDump`i < System`DiophantineDump`n && (System`DiophantineDump`c *= System`DiophantineDump`bvs[[System`DiophantineDump`i + 1,1]]) <= System`DiophantineDump`b, System`DiophantineDump`i++]; If[System`DiophantineDump`i == 0, Return[$Failed]]; System`DiophantineDump`bvs = Take[System`DiophantineDump`bvs, System`DiophantineDump`i]; System`DiophantineDump`pts = Reduce`CartesianProd @@ (Range[#1[[2]], #1[[3]]] & ) \/@ System`DiophantineDump`bvs; System`DiophantineDump`bvs = (#1[[4]] & ) \/@ System`DiophantineDump`bvs; System`DiophantineDump`v = Select[System`DiophantineDump`vars,  !MemberQ[System`DiophantineDump`bvs, #1] & ]; System`DiophantineDump`ans = If[System`DiophantineDump`qflag == 2, {}, False]; Do[System`DiophantineDump`a = And @@ (System`DiophantineDump`eqin \/. Thread[System`DiophantineDump`bvs -> System`DiophantineDump`pts[[System`DiophantineDump`i]]]); Switch[System`DiophantineDump`qflag, 0, System`DiophantineDump`b = Reduce`RecReduce[System`DiophantineDump`a && Element[System`DiophantineDump`v, Integers], System`DiophantineDump`v, Backsubstitution -> True]; If[System`DiophantineDump`b === $Failed, Return[$Failed, Module]]; System`DiophantineDump`ans = System`DiophantineDump`ans || (And @@ Thread[System`DiophantineDump`bvs == System`DiophantineDump`pts[[System`DiophantineDump`i]]] && System`DiophantineDump`b), 1, System`DiophantineDump`b = Reduce[Exists[System`DiophantineDump`v, Element[System`DiophantineDump`v, Integers], System`DiophantineDump`a]]; If[System`DiophantineDump`b === True, Return[True, Module]]; If[System`DiophantineDump`b =!= False, System`DiophantineDump`ans = $Failed], 2, System`DiophantineDump`b = FindInstance[System`DiophantineDump`a && Element[System`DiophantineDump`v, Integers], System`DiophantineDump`v]; If[ListQ[System`DiophantineDump`b], If[Length[System`DiophantineDump`b] == 1, System`DiophantineDump`c = System`DiophantineDump`vars \/. Join[System`DiophantineDump`b[[1]], Thread[System`DiophantineDump`bvs -> System`DiophantineDump`pts[[System`DiophantineDump`i]]]]; Return[Thread[System`DiophantineDump`vars -> System`DiophantineDump`c], Module]], System`DiophantineDump`ans = $Failed]], {System`DiophantineDump`i, Length[System`DiophantineDump`pts]}]; If[System`DiophantineDump`qflag != 0, System`DiophantineDump`ans, Reduce`SortAnswer[Reduce`ExpandReduce[System`DiophantineDump`ans], System`DiophantineDump`vars]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PartiallyBoundedDiophantine",
	"Algebra`PartialSquareFreeDecompositionModList":"ObjectType: Symbol\nUsage: Algebra`PartialSquareFreeDecompositionModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PartialSquareFreeDecompositionModList",
	"Optimization`PartialSuccess":"ObjectType: Symbol\nUsage: Optimization`PartialSuccess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[Optimization`OptimizationSolutionDataDump`s:Optimization`PartialSuccess[Optimization`OptimizationSolutionDataDump`tag_String, Optimization`OptimizationSolutionDataDump`a_Association], Optimization`OptimizationSolutionDataDump`form_] \/; AtomQ[Unevaluated[Optimization`OptimizationSolutionDataDump`tag]] && AssociationQ[Unevaluated[Optimization`OptimizationSolutionDataDump`a]] ^:= Module[{Optimization`OptimizationSolutionDataDump`items}, Optimization`OptimizationSolutionDataDump`items = Optimization`OptimizationSolutionDataDump`makeTypesetItemsFromAssociationAndTag[Optimization`OptimizationSolutionDataDump`tag, Optimization`OptimizationSolutionDataDump`a]; BoxForm`ArrangeSummaryBox[Optimization`PartialSuccess, Optimization`OptimizationSolutionDataDump`s, Optimization`OptimizationSolutionDataDump`$partialSuccessIcon, First[Optimization`OptimizationSolutionDataDump`items], Last[Optimization`OptimizationSolutionDataDump`items], Optimization`OptimizationSolutionDataDump`form]]\nOptions: None\nAttributes: {}\nFullName: Optimization`PartialSuccess",
	"Developer`PartitionMap":"ObjectType: Symbol\nUsage: PartitionMap[f, list, n] applies f to list after partitioning into nonoverlapping sublists of length n. PartitionMap[f, list, n, d] applies f to sublists obtained by partitioning with offset d. PartitionMap[f, list, {n , n , …}] applies f after partitioning a nested list into blocks of size n ×n ×…. PartitionMap[f, list, {n , n , …}, {d , d , …}] applies f after partitioning using offset d  at level i. PartitionMap[f, list, n, d, {k , k }] specifies where sublists should begin and end. PartitionMap[f, list, n, d, {k , k }, padding] specifies what padding should be used. \n                                                                                                                                                                                                                          1   2                                                                      1  2                            1   2        1   2                                                 i                                           L   R                                                                                L   R\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`PartitionMap",
	"Statistics`Library`PartitionOrdering":"ObjectType: Symbol\nUsage: Statistics`Library`PartitionOrdering\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`PartitionOrdering",
	"GroupTheory`Tools`PartitionRagged":"ObjectType: Symbol\nUsage: GroupTheory`Tools`PartitionRagged\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroupTheory`Tools`PartitionRagged",
	"Internal`PartitionRagged":"ObjectType: Symbol\nUsage: PartitionRagged[list, {n1,...,nk}] partitions list into ragged array with rows of\nlength n1, ..., nk. PartitionRagged[ array, {{n11,...,},...,{nm1,...}}] partitions\ndepth m array along each dimension. PartitionRagged[list, ns, fn] maps a function\nfn to the partitioned list.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PartitionRagged[System`LanguageEnhancements`array:_List | _?ArrayQ, System`LanguageEnhancements`dims:{__List}] \/; Dimensions[System`LanguageEnhancements`array] === Total[System`LanguageEnhancements`dims, {2}] := Module[{System`LanguageEnhancements`adm = (Outer[List, ##1] & ) @@ Accumulate \/@ System`LanguageEnhancements`dims, System`LanguageEnhancements`dm = (Outer[List, ##1] & ) @@ System`LanguageEnhancements`dims, System`LanguageEnhancements`lev = Length[Dimensions[System`LanguageEnhancements`array]] + 1}, Replace[MapThread[List, {System`LanguageEnhancements`adm - System`LanguageEnhancements`dm + 1, System`LanguageEnhancements`adm}, System`LanguageEnhancements`lev], List -> (Take[System`LanguageEnhancements`array, ##1] & ), {System`LanguageEnhancements`lev}, Heads -> True]]\nInternal`PartitionRagged[System`LanguageEnhancements`array:_List | _?ArrayQ, System`LanguageEnhancements`dims:{__List}, System`LanguageEnhancements`fn_] \/; Dimensions[System`LanguageEnhancements`array] === Total[System`LanguageEnhancements`dims, {2}] := Module[{System`LanguageEnhancements`adm = (Outer[List, ##1] & ) @@ Accumulate \/@ System`LanguageEnhancements`dims, System`LanguageEnhancements`dm = (Outer[List, ##1] & ) @@ System`LanguageEnhancements`dims, System`LanguageEnhancements`lev = Length[Dimensions[System`LanguageEnhancements`array]] + 1}, Replace[MapThread[List, {System`LanguageEnhancements`adm - System`LanguageEnhancements`dm + 1, System`LanguageEnhancements`adm}, System`LanguageEnhancements`lev], List -> (System`LanguageEnhancements`fn[Take[System`LanguageEnhancements`array, ##1]] & ), {System`LanguageEnhancements`lev}, Heads -> True]]\nInternal`PartitionRagged[System`LanguageEnhancements`v:_List | _?ArrayQ, (System`LanguageEnhancements`ns_)?VectorQ] := With[{System`LanguageEnhancements`res = Statistics`Library`PartitionRagged[System`LanguageEnhancements`v, System`LanguageEnhancements`ns]}, System`LanguageEnhancements`res \/; System`LanguageEnhancements`res =!= $Failed]\nInternal`PartitionRagged[System`LanguageEnhancements`v:_List | _?ArrayQ, (System`LanguageEnhancements`ns_)?VectorQ, System`LanguageEnhancements`fn_] := With[{System`LanguageEnhancements`ac = Accumulate[System`LanguageEnhancements`ns]}, MapThread[System`LanguageEnhancements`fn[Take[System`LanguageEnhancements`v, {#1, #2}]] & , {System`LanguageEnhancements`ac - System`LanguageEnhancements`ns + 1, System`LanguageEnhancements`ac}] \/; System`LanguageEnhancements`v === {} === System`LanguageEnhancements`ns || Quiet[Length[System`LanguageEnhancements`v] == Last[System`LanguageEnhancements`ac]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PartitionRagged",
	"Statistics`Library`PartitionRagged":"ObjectType: Symbol\nUsage: Statistics`Library`PartitionRagged\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`PartitionRagged",
	"Wavelets`WaveletUtilities`PartitionRagged":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`PartitionRagged\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`PartitionRagged[Wavelets`WaveletUtilities`Dump`list_, Wavelets`WaveletUtilities`Dump`dim_] := Block[{Wavelets`WaveletUtilities`Dump`i = 1}, Wavelets`WaveletUtilities`Dump`dim \/. Wavelets`WaveletUtilities`Dump`n_Integer :> (Wavelets`WaveletUtilities`Dump`i += Wavelets`WaveletUtilities`Dump`n; Take[Wavelets`WaveletUtilities`Dump`list, {Wavelets`WaveletUtilities`Dump`i - Wavelets`WaveletUtilities`Dump`n, Wavelets`WaveletUtilities`Dump`i - 1}])]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`PartitionRagged",
	"ResourceFunctionHelpers`PartitionRefinement":"ObjectType: Symbol\nUsage: PartitionRefinement[part: {__List}, piv_List] returns the refinement of the partition part by the pivot piv.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PartitionRefinement[ResourceFunctionHelpers`PartitionRefinement`Private`partition:{__List}, ResourceFunctionHelpers`PartitionRefinement`Private`pivot_List] \/; ResourceFunctionHelpers`PartitionRefinement`Private`pivotQ[ResourceFunctionHelpers`PartitionRefinement`Private`partition, ResourceFunctionHelpers`PartitionRefinement`Private`pivot] := Module[{ResourceFunctionHelpers`PartitionRefinement`Private`partFlag = ResourceFunctionHelpers`PartitionRefinement`Private`validPartitionQ[ResourceFunctionHelpers`PartitionRefinement`Private`partition]}, If[ !ResourceFunctionHelpers`PartitionRefinement`Private`partFlag, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`PartitionRefinement::invp, ResourceFunctionHelpers`PartitionRefinement`Private`partition]]; If[ !SubsetQ[Flatten[ResourceFunctionHelpers`PartitionRefinement`Private`partition, 1], ResourceFunctionHelpers`PartitionRefinement`Private`pivot], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`PartitionRefinement::pivels]]; Replace[DeleteDuplicates[Flatten[({Intersection[#1, ResourceFunctionHelpers`PartitionRefinement`Private`pivot], Complement[#1, ResourceFunctionHelpers`PartitionRefinement`Private`pivot]} & ) \/@ ResourceFunctionHelpers`PartitionRefinement`Private`partition, 1]], {} :> Nothing, 1]]\nResourceFunctionHelpers`PartitionRefinement[ResourceFunctionHelpers`PartitionRefinement`Private`partition:{__List}, ResourceFunctionHelpers`PartitionRefinement`Private`pivots:{__List}] := Fold[ResourceFunctionHelpers`PartitionRefinement[#1, #2] & , ResourceFunctionHelpers`PartitionRefinement`Private`partition, DeleteDuplicates[ResourceFunctionHelpers`PartitionRefinement`Private`pivots]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`PartitionRefinement",
	"Graphics`Mesh`PartitionSteps":"ObjectType: Symbol\nUsage: Graphics`Mesh`PartitionSteps\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PartitionSteps",
	"BinningUtilities`PartitionToBins":"ObjectType: Symbol\nUsage: BinningUtilities`PartitionToBins\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BinningUtilities`PartitionToBins",
	"Region`Mesh`Utilities`PartitionUsingList":"ObjectType: Symbol\nUsage: Region`Mesh`Utilities`PartitionUsingList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`Utilities`PartitionUsingList[(Region`Mesh`MeshUtilitiesDump`v_List) | (Region`Mesh`MeshUtilitiesDump`v_SparseArray), Region`Mesh`MeshUtilitiesDump`l_List] := MapThread[Region`Mesh`MeshUtilitiesDump`v[[#1 ;; #2]] & , With[{Region`Mesh`MeshUtilitiesDump`a = Accumulate[Region`Mesh`MeshUtilitiesDump`l]}, {Region`Mesh`MeshUtilitiesDump`a - Region`Mesh`MeshUtilitiesDump`l + 1, Region`Mesh`MeshUtilitiesDump`a}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`Utilities`PartitionUsingList",
	"LinearAlgebra`Private`PascalMatrix":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`PascalMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: LinearAlgebra`Private`PascalMatrix",
	"Manipulate`PasteBookmarks":"ObjectType: Symbol\nUsage: Manipulate`PasteBookmarks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Manipulate`PasteBookmarks[Manipulate`Dump`args___] := MessageDialog[Manipulate`Dump`$notAvailableInMathematicaPlayer, Evaluator -> None] \/; Manipulate`Dump`$MathematicaPlayerQ\nManipulate`PasteBookmarks[Hold[Manipulate`Dump`heldparams_], Manipulate`Dump`bookmarkList_] := Block[{Manipulate`Dump`toheldsym, Manipulate`Dump`fixedlist, Manipulate`Dump`cellPrint}, Manipulate`Dump`toheldsym[{_, Manipulate`Dump`ThisIsNotAControl}] := Sequence[]; Manipulate`Dump`toheldsym[{{Hold[Manipulate`Dump`sym_], __}, ___}] := Hold[Manipulate`Dump`sym]; Manipulate`Dump`toheldsym[{Hold[Manipulate`Dump`sym_], ___}] := Hold[Manipulate`Dump`sym]; Manipulate`Dump`fixedlist = Manipulate`Dump`demodularize[Automatic, \"\", Manipulate`Dump`toheldsym \/@ Manipulate`Dump`heldparams, Manipulate`Dump`bookmarkList]; If[ !MatchQ[Manipulate`Dump`fixedlist, {___RuleDelayed}], Return[$Failed]]; Manipulate`Dump`fixedlist = Manipulate`Dump`bookmarkToExpression \/@ Manipulate`Dump`fixedlist; If[AbsoluteCurrentValue[ButtonNotebook[], Deployed] === True, Manipulate`Dump`cellPrint = NotebookPut[Notebook[{#1}]] & , Manipulate`Dump`cellPrint = CellPrint]; Manipulate`Dump`cellPrint[Cell[BoxData[ToBoxes[Manipulate`Dump`fixedlist]], \"Input\", GeneratedCell -> False, CellAutoOverwrite -> False]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Manipulate`PasteBookmarks",
	"Manipulate`PasteSnapshot":"ObjectType: Symbol\nUsage: Manipulate`PasteSnapshot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Manipulate`PasteSnapshot[Manipulate`Dump`args___] := MessageDialog[Manipulate`Dump`$notAvailableInMathematicaPlayer, Evaluator -> None] \/; Manipulate`Dump`$MathematicaPlayerQ\nManipulate`PasteSnapshot[Hold[Manipulate`Dump`heldparams_], Hold[Manipulate`Dump`expr_]] := Module[{Manipulate`Dump`toheldvar, Manipulate`Dump`toheldinit, Manipulate`Dump`heldvars, Manipulate`Dump`heldinit, Manipulate`Dump`heldexpr}, Manipulate`Dump`toheldvar[{_, Manipulate`Dump`ThisIsNotAControl}] := Sequence[]; Manipulate`Dump`toheldvar[{Hold[Manipulate`Dump`var_], ___}] := Hold[Manipulate`Dump`var]; Manipulate`Dump`toheldvar[{{Hold[Manipulate`Dump`var_], ___}, ___}] := Hold[Manipulate`Dump`var]; Manipulate`Dump`heldvars = Union[Manipulate`Dump`toheldvar \/@ Manipulate`Dump`heldparams]; Manipulate`Dump`toheldinit[Hold[Manipulate`Dump`var_]] := If[ValueQ[Manipulate`Dump`var], Function[{Manipulate`Dump`x}, Hold[Manipulate`Dump`var = Manipulate`Dump`x]][Manipulate`Dump`var], Hold[FE`noValue]]; Manipulate`Dump`heldinit = Thread[Manipulate`Dump`toheldinit \/@ Manipulate`Dump`heldvars, Hold]; Manipulate`Dump`heldinit = DeleteCases[Manipulate`Dump`heldinit, FE`NoValue, {2}]; Manipulate`Dump`heldexpr = Thread[Manipulate`Dump`dummy[Manipulate`Dump`heldinit, Hold[Manipulate`Dump`expr]], Hold] \/. Manipulate`Dump`dummy -> DynamicModule; Manipulate`Dump`heldexpr = Manipulate`Dump`demodularize[Automatic, \"\", Manipulate`Dump`heldvars, Manipulate`Dump`heldexpr]; Manipulate`PasteSnapshot[Manipulate`Dump`heldexpr]]\nManipulate`PasteSnapshot[Manipulate`Dump`heldexpr_] := Module[{Manipulate`Dump`boxes, Manipulate`Dump`style, Manipulate`Dump`cellPrint}, Which[Manipulate`Dump`$PasteMode === \"Demonstrations\", Manipulate`Dump`boxes = ToBoxes[ReleaseHold[Manipulate`Dump`heldexpr]]; Manipulate`Dump`style = \"Output\"; Manipulate`Dump`cellPrint = If[ValueQ[Manipulate`Dump`$PasteFunction], Manipulate`Dump`$PasteFunction, CellPrint], AbsoluteCurrentValue[ButtonNotebook[], Deployed] === True, Manipulate`Dump`boxes = Manipulate`Dump`toInputFormString[Manipulate`Dump`heldexpr]; Manipulate`Dump`style = \"Input\"; Manipulate`Dump`cellPrint = NotebookPut[Notebook[{#1}]] & , True, Manipulate`Dump`boxes = Manipulate`Dump`toInputFormString[Manipulate`Dump`heldexpr]; Manipulate`Dump`style = \"Input\"; Manipulate`Dump`cellPrint = CellPrint]; Manipulate`Dump`cellPrint[Cell[BoxData[Manipulate`Dump`boxes], Manipulate`Dump`style, GeneratedCell -> False, CellAutoOverwrite -> False, If[StringQ[Manipulate`Dump`$PasteTag], CellTags -> Manipulate`Dump`$PasteTag, Unevaluated[Sequence[]]]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Manipulate`PasteSnapshot",
	"PlanetaryAstronomy`Private`PASystem":"ObjectType: Symbol\nUsage: PlanetaryAstronomy`Private`PASystem\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PlanetaryAstronomy`Private`PASystem",
	"ComputationalGeometry`Dump`PatchStyle":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`PatchStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`PatchStyle",
	"TemporalData`PathCompatibleQuantityTemporalDataQ":"ObjectType: Symbol\nUsage: TemporalData`PathCompatibleQuantityTemporalDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TemporalData`PathCompatibleQuantityTemporalDataQ[(RandomProcesses`TemporalDataDump`td_TemporalData)?TemporalData`TemporalDataQ] := AllTrue[RandomProcesses`TemporalDataDump`td[\"RawStates\"],  !Developer`PackedArrayQ[#1] && Internal`QuantityArrayQ[#1, _] && RandomProcesses`TemporalDataDump`iPathCompatibleUnitsQ[#1] & ]\nTemporalData`PathCompatibleQuantityTemporalDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: TemporalData`PathCompatibleQuantityTemporalDataQ",
	"GraphComputation`PathLength":"ObjectType: Symbol\nUsage: GraphComputation`PathLength\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`PathLength[GraphComputation`GraphMeasuresDump`expr_] := Block[{GraphComputation`GraphMeasuresDump`res}, GraphComputation`GraphMeasuresDump`res = GraphComputation`GraphMeasuresDump`pathLength[GraphComputation`GraphMeasuresDump`expr]; GraphComputation`GraphMeasuresDump`res \/; GraphComputation`GraphMeasuresDump`res =!= $Failed]\nGraphComputation`PathLength[GraphComputation`GraphMeasuresDump`expr___] := (GraphComputation`GraphMeasuresDump`messagePathLength[GraphComputation`GraphMeasuresDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PathLength",
	"Graphics`Glyphs`PathLengths":"ObjectType: Symbol\nUsage: Graphics`Glyphs`PathLengths\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Glyphs`PathLengths",
	"LocalObjects`PathName":"ObjectType: Symbol\nUsage: LocalObjects`PathName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LocalObjects`PathName",
	"SurfaceGraphics`Methods`PathPolygons":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PathPolygons\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PathPolygons",
	"LocalObjects`PathToURI":"ObjectType: Symbol\nUsage: LocalObjects`PathToURI\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: LocalObjects`PathToURI[LocalObjects`LocalObject`Dump`path_String, OptionsPattern[]] := With[{LocalObjects`LocalObject`Dump`os = OptionValue[OperatingSystem], LocalObjects`LocalObject`Dump`encode = OptionValue[URLEncode]}, Module[{LocalObjects`LocalObject`Dump`comps = FileNameSplit[FileNameJoin[LocalObjects`LocalObject`Dump`path, OperatingSystem -> LocalObjects`LocalObject`Dump`os], OperatingSystem -> LocalObjects`LocalObject`Dump`os], LocalObjects`LocalObject`Dump`domain = None, LocalObjects`LocalObject`Dump`uri, LocalObjects`LocalObject`Dump`root, LocalObjects`LocalObject`Dump`driveletter = False}, If[LocalObjects`LocalObject`Dump`os === \"Windows\", {LocalObjects`LocalObject`Dump`root, LocalObjects`LocalObject`Dump`comps} = {First[LocalObjects`LocalObject`Dump`comps], Rest[LocalObjects`LocalObject`Dump`comps]}; If[LocalObjects`LocalObject`Dump`encode, LocalObjects`LocalObject`Dump`comps = URLEncode \/@ LocalObjects`LocalObject`Dump`comps]; Which[StringMatchQ[LocalObjects`LocalObject`Dump`root, RegularExpression[\"\\\\\\\\{2}[^\\\\s\\\\\\\\]+\\\\\\\\[^\\\\s\\\\\\\\]+\"]], With[{LocalObjects`LocalObject`Dump`parts = StringSplit[LocalObjects`LocalObject`Dump`root, \"\\\\\"]}, LocalObjects`LocalObject`Dump`domain = LocalObjects`LocalObject`Dump`parts[[1]]; LocalObjects`LocalObject`Dump`root = LocalObjects`LocalObject`Dump`parts[[2]]; ], StringMatchQ[LocalObjects`LocalObject`Dump`root, RegularExpression[\".:\"]], LocalObjects`LocalObject`Dump`comps = Prepend[LocalObjects`LocalObject`Dump`comps, LocalObjects`LocalObject`Dump`root]; LocalObjects`LocalObject`Dump`root = \"\"; LocalObjects`LocalObject`Dump`driveletter = True, True, Message[LocalObjects`PathToURI::unknown, LocalObjects`LocalObject`Dump`path, LocalObjects`LocalObject`Dump`root]; Return[$Failed]]; LocalObjects`LocalObject`Dump`comps = Prepend[LocalObjects`LocalObject`Dump`comps, LocalObjects`LocalObject`Dump`root], If[Length[LocalObjects`LocalObject`Dump`comps] == 0, LocalObjects`LocalObject`Dump`comps = {\"\"}]; If[LocalObjects`LocalObject`Dump`encode, LocalObjects`LocalObject`Dump`comps = URLEncode \/@ LocalObjects`LocalObject`Dump`comps]; ]; LocalObjects`LocalObject`Dump`uri = URLBuild[Association[\"Scheme\" -> \"file\", \"Domain\" -> LocalObjects`LocalObject`Dump`domain, \"Path\" -> LocalObjects`LocalObject`Dump`comps]]; If[ !StringQ[LocalObjects`LocalObject`Dump`uri], Return[$Failed]]; If[LocalObjects`LocalObject`Dump`driveletter, LocalObjects`LocalObject`Dump`uri = StringReplace[LocalObjects`LocalObject`Dump`uri, StartOfString~~LocalObjects`LocalObject`Dump`a:\"file:\/\/\/\"~~LocalObjects`LocalObject`Dump`c_~~\"%3A\" :> LocalObjects`LocalObject`Dump`a~~LocalObjects`LocalObject`Dump`c~~\":\"]; ]; LocalObjects`LocalObject`Dump`uri]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {OperatingSystem -> Unix, URLEncode -> False}\nAttributes: {}\nFullName: LocalObjects`PathToURI",
	"PlanetaryAstronomy`Private`PATransformationX":"ObjectType: Symbol\nUsage: PlanetaryAstronomy`Private`PATransformationX\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PlanetaryAstronomy`Private`PATransformationX[PlanetaryAstronomy`Private`PASystem[PlanetaryAstronomy`Private`a_, PlanetaryAstronomy`Private`jd_, PlanetaryAstronomy`Private`a0_], PlanetaryAstronomy`Private`b_, PlanetaryAstronomy`Private`opts___] := ((PlanetaryAstronomy`Private`PASystem[PlanetaryAstronomy`Private`b, ##1] & ) @@ Fold[#1, {PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`a0}, Apply[Rule, Partition[PlanetaryAstronomy`Private`PAPathSystem[PlanetaryAstronomy`Private`a, PlanetaryAstronomy`Private`b], 2, 1], {1}]] & )[Replace[{\"Precision\", \"Apparent\"} \/. {PlanetaryAstronomy`Private`opts} \/. {\"Precision\" -> \"Medium\", \"Apparent\" -> \"Geometric\"}, {{\"Medium\", \"Earth\"} -> PlanetaryAstronomy`Private`PATransformation1, {\"Low\", \"Geometric\"} -> PlanetaryAstronomy`Private`PATransformation2, _ -> PlanetaryAstronomy`Private`PATransformation0}]]\nPlanetaryAstronomy`Private`PATransformationX[$Failed, ___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PlanetaryAstronomy`Private`PATransformationX",
	"StringPattern`PatternConvert":"ObjectType: Symbol\nUsage: StringPattern`PatternConvert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StringPattern`PatternConvert[StringPattern`Dump`patt_, StringPattern`Dump`rhs_:None, StringPattern`Dump`matchq_Integer:0, StringPattern`Dump`origPatt_:None] := Catch[Block[{StringPattern`Dump`n = 1, StringPattern`Dump`vars = {}, StringPattern`Dump`conditions = {}, StringPattern`Dump`callout = 1, StringPattern`Dump`$MatchQSyntax = StringPattern`Dump`matchq, StringPattern`Dump`capgroups = {}, StringPattern`Dump`pattvars, StringPattern`Dump`varsonly, StringPattern`Dump`heldrhs = Hold[StringPattern`Dump`rhs], StringPattern`Dump`new, StringPattern`Dump`res, StringPattern`Dump`perr, StringPattern`Dump`$Quantifier = \"\", StringPattern`Dump`$FullSP = StringPattern`Dump`patt, StringPattern`Dump`orig = If[StringPattern`Dump`origPatt =!= None, StringPattern`Dump`origPatt, StringPattern`Dump`patt]}, Block[{StringPattern`Dump`res = StringPattern`Dump`patt \/. StringPattern`Dump`ruleHoldPattern \/. StringPattern`Dump`expandDatePattern \/. StringPattern`Dump`rule0 \/. StringPattern`Dump`rule1 \/. StringPattern`Dump`rule1b \/. StringPattern`Dump`rule2 \/. If[StringPattern`Dump`matchq > 0, StringPattern`Dump`rule2b, {}] \/. StringPattern`Dump`rule3}, StringPattern`Dump`pattvars = DeleteCases[MapIndexed[{#1, #2[[1]]} & , StringPattern`Dump`vars], {Null, _}]; StringPattern`Dump`varsonly = First \/@ StringPattern`Dump`pattvars; StringPattern`Dump`conditions = Function[StringPattern`Dump`cond, {StringPattern`Dump`cond[[1]], If[ !ListQ[StringPattern`Dump`cond[[2]]], StringPattern`Dump`cond[[2]], (Position[StringPattern`Dump`pattvars, #1][[1,1]] & ) \/@ StringPattern`Dump`cond[[2]]]}] \/@ StringPattern`Dump`conditions; If[StringPattern`Dump`explosionDetector[HoldComplete[StringPattern`Dump`patt]] > StringPattern`Dump`$MaxAnyOrderSubPatterns, Message[StringExpression::anyorder, Replace[HoldForm[StringPattern`Dump`origPatt], HoldForm[None] -> HoldForm[StringPattern`Dump`patt]]]; Throw[$Failed]; ]; StringPattern`Dump`res = StringPattern`Dump`res \/\/. StringPattern`Dump`rules; If[StringQ[StringPattern`Dump`res], StringPattern`Dump`res = StringJoin[\"(?ms)\", StringPattern`Dump`res], With[{StringPattern`Dump`corepatt = If[StringPattern`Dump`matchq > 0 && Length[StringPattern`Dump`patt] >= 3, Take[StringPattern`Dump`patt, {2, -2}], StringPattern`Dump`patt] \/. StringPattern`Dump`ruleHoldPattern}, StringPattern`Dump`new = First[Select[StringExpression @@ Join[Cases[{StringPattern`Dump`corepatt}, StringExpression[___], Infinity], {StringPattern`Dump`corepatt}],  !StringQ[(StringPattern`Dump`vars = {}; StringPattern`Dump`capgroups = {}; StringExpression[#1] \/. StringPattern`Dump`expandDatePattern \/. StringPattern`Dump`rule0 \/. StringPattern`Dump`rule1 \/. StringPattern`Dump`rule1b \/. StringPattern`Dump`rule2 \/. If[StringPattern`Dump`matchq > 0, StringPattern`Dump`rule2b, {}] \/. StringPattern`Dump`rule3) \/\/. StringPattern`Dump`rules] & , 1]]; Message[StringExpression::invld, StringPattern`Dump`new, StringPattern`Dump`origPatt]; Throw[$Failed]; ]]; {StringPattern`Dump`res, StringPattern`Dump`pattvars, StringPattern`Dump`conditions, StringPattern`Dump`heldrhs}]]]\nStringPattern`PatternConvert[StringPattern`Dump`patt_String, None, {StringPattern`Dump`esc_, StringPattern`Dump`single_, StringPattern`Dump`multi_}, StringPattern`Dump`origPattern_:None] := Module[{StringPattern`Dump`skip, StringPattern`Dump`rule}, StringPattern`Dump`rule = Join[{StringPattern`Dump`single -> \".\", StringPattern`Dump`multi -> \".*\", StringPattern`Dump`esc :> (StringPattern`Dump`skip = True; \"\")}, StringPattern`Dump`$RegExpSpecialCharacters]; {StringJoin[\"(?s)\", StringPattern`Dump`skip = False; (If[StringPattern`Dump`skip, StringPattern`Dump`skip = False; #1 \/. StringPattern`Dump`$RegExpSpecialCharacters, #1 \/. StringPattern`Dump`rule] & ) \/@ Characters[StringPattern`Dump`patt]], {}, {}, {}}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: StringPattern`PatternConvert",
	"Graphics`PatternFillingDirective":"ObjectType: Symbol\nUsage: Graphics`PatternFillingDirective\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`a__]] \/; System`Private`CouldContainQ[{Graphics`PatternFillingDump`a}, Dynamic] := Dynamic @@ (Hold[PatternFilling[Graphics`PatternFillingDump`a]] \/. Dynamic[Graphics`PatternFillingDump`x_, ___] :> Graphics`PatternFillingDump`x) \/; Internal`LiteralPresentQ[{Graphics`PatternFillingDump`a}, Dynamic]\nGraphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`obj_, Graphics`PatternFillingDump`a:ImageScaled[Graphics`PatternFillingDump`d_], Graphics`PatternFillingDump`b:{0, 0}]] \/; Graphics`PatternFillingDump`validSizeQ[Unevaluated[Graphics`PatternFillingDump`d]] := SurfaceAppearance[\"PatternFilling\", \"Density\" -> {0.26, 0.26}\/Graphics`PatternFillingDump`d, \"Offset\" -> Graphics`PatternFillingDump`b, \"ScaledSize\" -> 1, \"Arguments\" -> {Graphics`PatternFillingDump`a, Graphics`PatternFillingDump`b}, Graphics`PatternFillingDump`iTexture[Graphics`PatternFillingDump`obj]]\nGraphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`obj_, Graphics`PatternFillingDump`a:ImageScaled[Graphics`PatternFillingDump`d_], Graphics`PatternFillingDump`b:ImageScaled[Graphics`PatternFillingDump`offset_]]] \/; Graphics`PatternFillingDump`validSizeQ[Unevaluated[Graphics`PatternFillingDump`d]] && Graphics`PatternFillingDump`validOffsetQ[Unevaluated[Graphics`PatternFillingDump`offset]] := SurfaceAppearance[\"PatternFilling\", \"Density\" -> {0.26, 0.26}\/Graphics`PatternFillingDump`d, \"Offset\" -> -Mod[{1., 1.}*Graphics`PatternFillingDump`offset, 1], \"ScaledSize\" -> 1, \"Arguments\" -> {Graphics`PatternFillingDump`a, Graphics`PatternFillingDump`b}, Graphics`PatternFillingDump`iTexture[Graphics`PatternFillingDump`obj]]\nGraphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`obj_, Graphics`PatternFillingDump`a:ImageScaled[Graphics`PatternFillingDump`d_], Graphics`PatternFillingDump`offset_]] \/; Graphics`PatternFillingDump`validSizeQ[Unevaluated[Graphics`PatternFillingDump`d]] && Graphics`PatternFillingDump`validOffsetQ[Unevaluated[Graphics`PatternFillingDump`offset]] := SurfaceAppearance[\"PatternFilling\", \"Density\" -> {0.26, 0.26}\/Graphics`PatternFillingDump`d, \"Offset\" -> -(Mod[{1., 1.}*Graphics`PatternFillingDump`offset, Graphics`PatternFillingDump`d]\/Graphics`PatternFillingDump`d), \"ScaledSize\" -> 1, \"Arguments\" -> {Graphics`PatternFillingDump`a, Graphics`PatternFillingDump`offset}, Graphics`PatternFillingDump`iTexture[Graphics`PatternFillingDump`obj]]\nGraphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`obj_, Graphics`PatternFillingDump`d_, Graphics`PatternFillingDump`b:{0, 0}]] \/; Graphics`PatternFillingDump`validSizeQ[Unevaluated[Graphics`PatternFillingDump`d]] := SurfaceAppearance[\"PatternFilling\", \"Density\" -> {93.6, 93.6}\/Graphics`PatternFillingDump`d, \"Offset\" -> Graphics`PatternFillingDump`b, \"ScaledSize\" -> -1, \"Arguments\" -> {Graphics`PatternFillingDump`d, Graphics`PatternFillingDump`b}, Graphics`PatternFillingDump`iTexture[Graphics`PatternFillingDump`obj]]\nGraphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`obj_, Graphics`PatternFillingDump`d_, Graphics`PatternFillingDump`b:ImageScaled[Graphics`PatternFillingDump`offset_]]] \/; Graphics`PatternFillingDump`validSizeQ[Unevaluated[Graphics`PatternFillingDump`d]] && Graphics`PatternFillingDump`validOffsetQ[Unevaluated[Graphics`PatternFillingDump`offset]] := SurfaceAppearance[\"PatternFilling\", \"Density\" -> {93.6, 93.6}\/Graphics`PatternFillingDump`d, \"Offset\" -> -Mod[{1., 1.}*Graphics`PatternFillingDump`offset, 1], \"ScaledSize\" -> -1, \"Arguments\" -> {Graphics`PatternFillingDump`d, Graphics`PatternFillingDump`b}, Graphics`PatternFillingDump`iTexture[Graphics`PatternFillingDump`obj]]\nGraphics`PatternFillingDirective[Directive[Graphics`PatternFillingDump`obj_, Graphics`PatternFillingDump`d_, Graphics`PatternFillingDump`offset_]] \/; Graphics`PatternFillingDump`validSizeQ[Unevaluated[Graphics`PatternFillingDump`d]] && Graphics`PatternFillingDump`validOffsetQ[Unevaluated[Graphics`PatternFillingDump`offset]] := SurfaceAppearance[\"PatternFilling\", \"Density\" -> {93.6, 93.6}\/Graphics`PatternFillingDump`d, \"Offset\" -> -(Mod[{1., 1.}*Graphics`PatternFillingDump`offset, Graphics`PatternFillingDump`d]\/Graphics`PatternFillingDump`d), \"ScaledSize\" -> -1, \"Arguments\" -> {Graphics`PatternFillingDump`d, Graphics`PatternFillingDump`offset}, Graphics`PatternFillingDump`iTexture[Graphics`PatternFillingDump`obj]]\nGraphics`PatternFillingDirective[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PatternFillingDirective",
	"Internal`PatternFreeQ":"ObjectType: Symbol\nUsage: Internal`PatternFreeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PatternFreeQ",
	"Internal`PatternPresentQ":"ObjectType: Symbol\nUsage: Internal`PatternPresentQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PatternPresentQ",
	"Charting`PatternsFunction":"ObjectType: Symbol\nUsage: Charting`PatternsFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PatternsFunction[Visualization`Utilities`FinancialUtilitiesDump`name_, Visualization`Utilities`FinancialUtilitiesDump`fn_, Visualization`Utilities`FinancialUtilitiesDump`para_, Visualization`Utilities`FinancialUtilitiesDump`arg_, Visualization`Utilities`FinancialUtilitiesDump`layout_, Visualization`Utilities`FinancialUtilitiesDump`o:OptionsPattern[]] := Block[{Visualization`Utilities`FinancialUtilitiesDump`linestyle, Visualization`Utilities`FinancialUtilitiesDump`shift, Visualization`Utilities`FinancialUtilitiesDump`height, Visualization`Utilities`FinancialUtilitiesDump`plotrangepadding, Visualization`Utilities`FinancialUtilitiesDump`indexline, Visualization`Utilities`FinancialUtilitiesDump`dspec, Visualization`Utilities`FinancialUtilitiesDump`dateformat, Visualization`Utilities`FinancialUtilitiesDump`coordinatesize, Visualization`Utilities`FinancialUtilitiesDump`d, Visualization`Utilities`FinancialUtilitiesDump`options, Visualization`Utilities`FinancialUtilitiesDump`symbolicQ, Visualization`Utilities`FinancialUtilitiesDump`modeldata, Visualization`Utilities`FinancialUtilitiesDump`sizes, Visualization`Utilities`FinancialUtilitiesDump`adjust, Visualization`Utilities`FinancialUtilitiesDump`space, Visualization`Utilities`FinancialUtilitiesDump`layoutdata, Visualization`Utilities`FinancialUtilitiesDump`drawing, Visualization`Utilities`FinancialUtilitiesDump`styledata, Visualization`Utilities`FinancialUtilitiesDump`front, Visualization`Utilities`FinancialUtilitiesDump`counter, Visualization`Utilities`FinancialUtilitiesDump`filling, Visualization`Utilities`FinancialUtilitiesDump`positionalignment, Visualization`Utilities`FinancialUtilitiesDump`renderingelement, Visualization`Utilities`FinancialUtilitiesDump`presizes, Visualization`Utilities`FinancialUtilitiesDump`secondindicator, Visualization`Utilities`FinancialUtilitiesDump`secfun, Visualization`Utilities`FinancialUtilitiesDump`indicatornames, Visualization`Utilities`FinancialUtilitiesDump`patternsrange, Visualization`Utilities`FinancialUtilitiesDump`parameterNames, Visualization`Utilities`FinancialUtilitiesDump`defaultparameters, Visualization`Utilities`FinancialUtilitiesDump`parameters, Visualization`Utilities`FinancialUtilitiesDump`parametervalues}, Switch[Length[Visualization`Utilities`FinancialUtilitiesDump`arg], 1, Visualization`Utilities`FinancialUtilitiesDump`d = First[Visualization`Utilities`FinancialUtilitiesDump`arg]; Visualization`Utilities`FinancialUtilitiesDump`options = {}, _, Visualization`Utilities`FinancialUtilitiesDump`d = First[Visualization`Utilities`FinancialUtilitiesDump`arg]; Visualization`Utilities`FinancialUtilitiesDump`options = Rest[Visualization`Utilities`FinancialUtilitiesDump`arg]]; If[MatchQ[Visualization`Utilities`FinancialUtilitiesDump`d, {{_?(Charting`dateQ[Automatic]), _}...}], Visualization`Utilities`FinancialUtilitiesDump`symbolicQ =  !MatchQ[Visualization`Utilities`FinancialUtilitiesDump`d[[All,2]], {{_?NumericQ..}...}]; , Visualization`Utilities`FinancialUtilitiesDump`symbolicQ =  !MatchQ[Visualization`Utilities`FinancialUtilitiesDump`d, {_?NumericQ..}]; ]; {Visualization`Utilities`FinancialUtilitiesDump`linestyle, Visualization`Utilities`FinancialUtilitiesDump`height, Visualization`Utilities`FinancialUtilitiesDump`renderingelement, Visualization`Utilities`FinancialUtilitiesDump`patternsrange} = Quiet[OptionValue[{Visualization`Utilities`FinancialUtilitiesDump`fn, Charting`PatternsFunction}, Flatten[{Visualization`Utilities`FinancialUtilitiesDump`options}], {\"LineStyle\", \"Height\", \"RenderingElement\", \"PatternsRange\"}]]; Visualization`Utilities`FinancialUtilitiesDump`parameterNames = FilterRules[Options[Visualization`Utilities`FinancialUtilitiesDump`fn], Except[{\"Method\", \"LineStyle\", \"Height\", \"RenderingElement\", \"PatternsRange\"}]][[All,1]]; Visualization`Utilities`FinancialUtilitiesDump`defaultparameters = Quiet[OptionValue[Options[Visualization`Utilities`FinancialUtilitiesDump`fn], Visualization`Utilities`FinancialUtilitiesDump`parameterNames]]; Visualization`Utilities`FinancialUtilitiesDump`parameters = Quiet[OptionValue[{Visualization`Utilities`FinancialUtilitiesDump`fn}, Flatten[{Visualization`Utilities`FinancialUtilitiesDump`o}], Visualization`Utilities`FinancialUtilitiesDump`parameterNames]]; If[ !Visualization`Utilities`FinancialUtilitiesDump`equalLengthQ[Visualization`Utilities`FinancialUtilitiesDump`defaultparameters, Visualization`Utilities`FinancialUtilitiesDump`parameters], Message[FinancialIndicator::optv, Visualization`Utilities`FinancialUtilitiesDump`parameters, Visualization`Utilities`FinancialUtilitiesDump`name]; Throw[$Failed, \"ParseNoData\"]]; Visualization`Utilities`FinancialUtilitiesDump`parameters = Visualization`Utilities`FinancialUtilitiesDump`checkParameter[Join[Visualization`Utilities`FinancialUtilitiesDump`para, Flatten[Visualization`Utilities`FinancialUtilitiesDump`parameters]], Visualization`Utilities`FinancialUtilitiesDump`defaultparameters]; Visualization`Utilities`FinancialUtilitiesDump`options = Append[FilterRules[Options[Visualization`Utilities`FinancialUtilitiesDump`fn], {\"Method\", \"LineStyle\", \"Height\", \"RenderingElement\", \"PatternsRange\"}], Table[Visualization`Utilities`FinancialUtilitiesDump`parameterNames[[Visualization`Utilities`FinancialUtilitiesDump`i]] -> Visualization`Utilities`FinancialUtilitiesDump`parameters[[Visualization`Utilities`FinancialUtilitiesDump`i]], {Visualization`Utilities`FinancialUtilitiesDump`i, 1, Length[Visualization`Utilities`FinancialUtilitiesDump`parameterNames]}]]; Visualization`Utilities`FinancialUtilitiesDump`parametervalues = Last[Reap[Sow[Flatten[Visualization`Utilities`FinancialUtilitiesDump`checkParameter[Flatten[Visualization`Utilities`FinancialUtilitiesDump`parameters], Visualization`Utilities`FinancialUtilitiesDump`defaultparameters]], \"ParameterValues\"]; Visualization`Utilities`FinancialUtilitiesDump`presizes = First[Reap[Visualization`Utilities`FinancialUtilitiesDump`fn[Visualization`Utilities`FinancialUtilitiesDump`d, Visualization`Utilities`FinancialUtilitiesDump`symbolicQ, Visualization`Utilities`FinancialUtilitiesDump`options], \"ParameterValues\"]]; {Visualization`Utilities`FinancialUtilitiesDump`sizes, Visualization`Utilities`FinancialUtilitiesDump`indicatornames} = Reap[Visualization`Utilities`FinancialUtilitiesDump`presizes, \"IndicatorNames\"]; , \"ParameterValues\"]]; Sow[Visualization`Utilities`FinancialUtilitiesDump`indicatornames, \"IndicatorNames\"]; Sow[First[Visualization`Utilities`FinancialUtilitiesDump`parametervalues], \"ParameterValues\"]; Visualization`Utilities`FinancialUtilitiesDump`indicatornames = Flatten[Append[{Visualization`Utilities`FinancialUtilitiesDump`name}, Visualization`Utilities`FinancialUtilitiesDump`indicatornames]]; If[Depth[Visualization`Utilities`FinancialUtilitiesDump`sizes] == 2, Visualization`Utilities`FinancialUtilitiesDump`sizes = {Visualization`Utilities`FinancialUtilitiesDump`sizes}]; Visualization`Utilities`FinancialUtilitiesDump`styledata[\"LineStyle\"] = Visualization`Utilities`FinancialUtilitiesDump`linestyle; Visualization`Utilities`FinancialUtilitiesDump`layoutdata[\"ParameterValues\"] = Visualization`Utilities`FinancialUtilitiesDump`parametervalues; Visualization`Utilities`FinancialUtilitiesDump`modeldata[\"Sizes\"] = Visualization`Utilities`FinancialUtilitiesDump`d; If[Visualization`Utilities`FinancialUtilitiesDump`layout =!= Visualization`Utilities`FinancialUtilitiesDump`nolayoutdata, Visualization`Utilities`FinancialUtilitiesDump`layout[\"Counter\"] = Visualization`Utilities`FinancialUtilitiesDump`layout[\"Counter\"] + 1]; Visualization`Utilities`FinancialUtilitiesDump`front = Switch[Visualization`Utilities`FinancialUtilitiesDump`layout, Visualization`Utilities`FinancialUtilitiesDump`nolayoutdata, Visualization`Utilities`FinancialUtilitiesDump`renderingPatterns[Visualization`Utilities`FinancialUtilitiesDump`indicatornames, Visualization`Utilities`FinancialUtilitiesDump`fn][Visualization`Utilities`FinancialUtilitiesDump`sizes, Visualization`Utilities`FinancialUtilitiesDump`styledata], _, Sow[Visualization`Utilities`FinancialUtilitiesDump`renderingPatterns[Visualization`Utilities`FinancialUtilitiesDump`indicatornames, Visualization`Utilities`FinancialUtilitiesDump`fn][Visualization`Utilities`FinancialUtilitiesDump`sizes, Visualization`Utilities`FinancialUtilitiesDump`layout, Visualization`Utilities`FinancialUtilitiesDump`layoutdata, Visualization`Utilities`FinancialUtilitiesDump`modeldata, Visualization`Utilities`FinancialUtilitiesDump`styledata, \"RenderingElement\" -> Visualization`Utilities`FinancialUtilitiesDump`renderingelement, \"IndicatorLayout\" -> \"Overlay\", \"PatternsRange\" -> Visualization`Utilities`FinancialUtilitiesDump`patternsrange], \"Overlay\"]]; If[Length[Visualization`Utilities`FinancialUtilitiesDump`front] == 1, Visualization`Utilities`FinancialUtilitiesDump`front[[1]], Visualization`Utilities`FinancialUtilitiesDump`front]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {LineStyle -> Automatic, RenderingElement -> Automatic, PatternsRange -> 1}\nAttributes: {}\nFullName: Charting`PatternsFunction",
	"NIntegrate`Patterson":"ObjectType: Symbol\nUsage: NIntegrate`Patterson\nDocumentation: None\nOwnValues: None\nUpValues: NIntegrate`InitializeIntegrationStrategy[NIntegrate`Patterson, NIntegrate`PattersonQuadratureDump`nfs_, NIntegrate`PattersonQuadratureDump`ranges_, NIntegrate`PattersonQuadratureDump`strOpts_, NIntegrate`PattersonQuadratureDump`allOpts_] ^:= Block[{NIntegrate`PattersonQuadratureDump`rule, NIntegrate`PattersonQuadratureDump`minrec, NIntegrate`PattersonQuadratureDump`maxrec, NIntegrate`PattersonQuadratureDump`ruleid, NIntegrate`PattersonQuadratureDump`ruleSpec, NIntegrate`PattersonQuadratureDump`t, NIntegrate`PattersonQuadratureDump`pos, NIntegrate`PattersonQuadratureDump`symbproctime, NIntegrate`PattersonQuadratureDump`pattersonRulesData}, If[Length[NIntegrate`PattersonQuadratureDump`ranges] > 1, Message[NIntegrate`Patterson::intdim]; Return[$Failed]; ]; NIntegrate`PattersonQuadratureDump`t = NIntegrate`GetMethodOptionValues[NIntegrate`Patterson, NIntegrate`PattersonQuadratureDump`PattersonProperties, NIntegrate`PattersonQuadratureDump`strOpts]; If[NIntegrate`PattersonQuadratureDump`t === $Failed, Return[$Failed]]; {NIntegrate`PattersonQuadratureDump`ruleSpec, NIntegrate`PattersonQuadratureDump`minrec, NIntegrate`PattersonQuadratureDump`maxrec, NIntegrate`PattersonQuadratureDump`symbproctime} = NIntegrate`PattersonQuadratureDump`t; If[NIntegrate`PattersonQuadratureDump`minrec === Automatic, NIntegrate`PattersonQuadratureDump`minrec = 2]; If[ !TrueQ[NIntegrate`PattersonQuadratureDump`minrec > 0], NIntegrate`PattersonQuadratureDump`pos = NIntegrate`OptionNamePosition[NIntegrate`PattersonQuadratureDump`strOpts, \"MinRecursion\"]; Message[NIntegrate::intpm, NIntegrate`PattersonQuadratureDump`strOpts[[NIntegrate`PattersonQuadratureDump`pos]], 2]; Return[$Failed]; ]; If[NIntegrate`PattersonQuadratureDump`maxrec === Automatic, NIntegrate`PattersonQuadratureDump`maxrec = 8]; If[ !TrueQ[NIntegrate`PattersonQuadratureDump`maxrec > 0], NIntegrate`PattersonQuadratureDump`pos = NIntegrate`OptionNamePosition[NIntegrate`PattersonQuadratureDump`strOpts, \"MaxRecursion\"]; Message[NIntegrate::intpm, NIntegrate`PattersonQuadratureDump`strOpts[[NIntegrate`PattersonQuadratureDump`pos]], 2]; Return[$Failed]; ]; If[ !TrueQ[NIntegrate`PattersonQuadratureDump`minrec <= NIntegrate`PattersonQuadratureDump`maxrec], Message[NIntegrate::minmax, NIntegrate`PattersonQuadratureDump`minrec, NIntegrate`PattersonQuadratureDump`maxrec]; Return[$Failed]; ]; If[NIntegrate`PattersonQuadratureDump`ruleSpec === Automatic, NIntegrate`PattersonQuadratureDump`ruleSpec = NIntegrate`GaussBerntsenEspelidRule]; If[NIntegrate`Integration1DRuleQ[NIntegrate`PattersonQuadratureDump`ruleSpec] && AtomQ[NIntegrate`PattersonQuadratureDump`ruleSpec], NIntegrate`PattersonQuadratureDump`rule = NIntegrate`MOptionValue[{NIntegrate`PattersonQuadratureDump`ruleSpec, \"Points\" -> 2^(NIntegrate`PattersonQuadratureDump`maxrec - 1)}, NIntegrate`PattersonQuadratureDump`nfs, NIntegrate`PattersonQuadratureDump`ranges, NIntegrate`PattersonQuadratureDump`allOpts, False], NIntegrate`PattersonQuadratureDump`rule = $Failed; ]; If[NIntegrate`PattersonQuadratureDump`rule === $Failed, Return[$Failed]]; If[Length[NIntegrate`PattersonQuadratureDump`rule[[1,1]]] != 2^NIntegrate`PattersonQuadratureDump`maxrec + 1, Return[$Failed]]; NIntegrate`PattersonQuadratureDump`pattersonRulesData = Reverse[NIntegrate`PattersonQuadratureDump`PattersonRulesData[NIntegrate`PattersonQuadratureDump`rule, 2^NIntegrate`PattersonQuadratureDump`minrec + 1, WorkingPrecision \/. NIntegrate`PattersonQuadratureDump`allOpts]]; NIntegrate`Patterson[{NIntegrate`PattersonQuadratureDump`pattersonRulesData, Floor[NIntegrate`PattersonQuadratureDump`minrec], Floor[NIntegrate`PattersonQuadratureDump`maxrec], NIntegrate`PattersonQuadratureDump`symbproctime}]]\nDownValues: None\nSubValues: NIntegrate`Patterson[{NIntegrate`PattersonQuadratureDump`pattersonRulesData_, NIntegrate`PattersonQuadratureDump`minRec_, NIntegrate`PattersonQuadratureDump`maxRec_, NIntegrate`PattersonQuadratureDump`symbproctime_}][\"Algorithm\"[NIntegrate`PattersonQuadratureDump`regionsArg_, NIntegrate`PattersonQuadratureDump`opts___]] := Block[{NIntegrate`PattersonQuadratureDump`regions = NIntegrate`PattersonQuadratureDump`regionsArg, NIntegrate`PattersonQuadratureDump`topregion, NIntegrate`PattersonQuadratureDump`newregions, NIntegrate`PattersonQuadratureDump`error, NIntegrate`PattersonQuadratureDump`integral, NIntegrate`PattersonQuadratureDump`axis, NIntegrate`PattersonQuadratureDump`k = 0, NIntegrate`PattersonQuadratureDump`wprec = WorkingPrecision \/. NIntegrate`PattersonQuadratureDump`opts, NIntegrate`PattersonQuadratureDump`reltol = PrecisionGoal \/. NIntegrate`PattersonQuadratureDump`opts, NIntegrate`PattersonQuadratureDump`res, NIntegrate`PattersonQuadratureDump`nf, NIntegrate`PattersonQuadratureDump`dim, NIntegrate`PattersonQuadratureDump`heap, NIntegrate`PattersonQuadratureDump`oldMinMaxPrec, NIntegrate`PattersonQuadratureDump`t, NIntegrate`PattersonQuadratureDump`tvars, NIntegrate`PattersonQuadratureDump`xmin, NIntegrate`PattersonQuadratureDump`xmax, NIntegrate`PattersonQuadratureDump`maxRuleNumber, NIntegrate`PattersonQuadratureDump`topIntErr}, NIntegrate`PattersonQuadratureDump`oldMinMaxPrec = {$MaxPrecision, $MinPrecision}; $MaxPrecision = $MinPrecision = NIntegrate`PattersonQuadratureDump`wprec; NIntegrate`PattersonQuadratureDump`dim = NIntegrate`PattersonQuadratureDump`regions[[1]][\"Dimension\"]; (#1[\"SetLevel\"[1, 0]] & ) \/@ NIntegrate`PattersonQuadratureDump`regions; NIntegrate`PattersonQuadratureDump`res = (NIntegrate`PattersonQuadratureDump`PattersonIntegration[#1, NIntegrate`PattersonQuadratureDump`pattersonRulesData] & ) \/@ NIntegrate`PattersonQuadratureDump`regions; NIntegrate`PattersonQuadratureDump`maxRuleNumber = 1; NIntegrate`PattersonQuadratureDump`error = Total[(#1[\"Error\"[]] & ) \/@ NIntegrate`PattersonQuadratureDump`regions, Method -> \"CompensatedSummation\"]; NIntegrate`PattersonQuadratureDump`integral = Total[(#1[\"Integral\"[]] & ) \/@ NIntegrate`PattersonQuadratureDump`regions, Method -> \"CompensatedSummation\"]; NIntegrate`PattersonQuadratureDump`heap = NIntegrate`Heap[#1[\"Error\"[]] > #2[\"Error\"[]] & ]; (NIntegrate`HeapInsert[NIntegrate`PattersonQuadratureDump`heap, #1] & ) \/@ NIntegrate`PattersonQuadratureDump`regions; If[NIntegrate`PattersonQuadratureDump`reltol == Automatic, NIntegrate`PattersonQuadratureDump`reltol = 6]; While[NIntegrate`PattersonQuadratureDump`error > Abs[NIntegrate`PattersonQuadratureDump`integral]\/10.^NIntegrate`PattersonQuadratureDump`reltol && NIntegrate`PattersonQuadratureDump`maxRuleNumber <= Length[NIntegrate`PattersonQuadratureDump`pattersonRulesData], NIntegrate`PattersonQuadratureDump`k++; NIntegrate`PattersonQuadratureDump`topregion = NIntegrate`HeapTopElement[NIntegrate`PattersonQuadratureDump`heap]; NIntegrate`HeapDelete[NIntegrate`PattersonQuadratureDump`heap]; NIntegrate`PattersonQuadratureDump`topIntErr = {NIntegrate`PattersonQuadratureDump`topregion[\"Integral\"[]], NIntegrate`PattersonQuadratureDump`topregion[\"Error\"[]]}; NIntegrate`PattersonQuadratureDump`error = NIntegrate`PattersonQuadratureDump`error - NIntegrate`PattersonQuadratureDump`topregion[\"Error\"[]]; NIntegrate`PattersonQuadratureDump`integral = NIntegrate`PattersonQuadratureDump`integral - NIntegrate`PattersonQuadratureDump`topregion[\"Integral\"[]]; If[NIntegrate`PattersonQuadratureDump`topregion[\"GetLevel\"[1]] < Length[NIntegrate`PattersonQuadratureDump`pattersonRulesData], NIntegrate`PattersonQuadratureDump`res = NIntegrate`PattersonQuadratureDump`PattersonIntegration[NIntegrate`PattersonQuadratureDump`topregion, NIntegrate`PattersonQuadratureDump`pattersonRulesData]; If[NIntegrate`PattersonQuadratureDump`maxRuleNumber < NIntegrate`PattersonQuadratureDump`topregion[\"GetLevel\"[1]], NIntegrate`PattersonQuadratureDump`maxRuleNumber = NIntegrate`PattersonQuadratureDump`topregion[\"GetLevel\"[1]]], NIntegrate`PattersonQuadratureDump`topregion[\"SetLevel\"[1, NIntegrate`PattersonQuadratureDump`topregion[\"GetLevel\"[1]] + 1]]; NIntegrate`PattersonQuadratureDump`maxRuleNumber = Length[NIntegrate`PattersonQuadratureDump`pattersonRulesData] + 1; ]; NIntegrate`PattersonQuadratureDump`error = Total[{NIntegrate`PattersonQuadratureDump`error, NIntegrate`PattersonQuadratureDump`topregion[\"Error\"[]]}, 2, Method -> \"CompensatedSummation\"]; NIntegrate`PattersonQuadratureDump`integral = Total[{NIntegrate`PattersonQuadratureDump`integral, NIntegrate`PattersonQuadratureDump`topregion[\"Integral\"[]]}, 2, Method -> \"CompensatedSummation\"]; NIntegrate`HeapInsert[NIntegrate`PattersonQuadratureDump`heap, NIntegrate`PattersonQuadratureDump`topregion]; ]; If[NIntegrate`PattersonQuadratureDump`maxRuleNumber > Length[NIntegrate`PattersonQuadratureDump`pattersonRulesData], NIntegrate`PattersonQuadratureDump`tvars = NIntegrate`PattersonQuadratureDump`topregion[\"Integrand\"][\"ArgumentNames\"[]]; Message[NIntegrate::ncvi, Length[NIntegrate`PattersonQuadratureDump`pattersonRulesData], NIntegrate`PattersonQuadratureDump`tvars[[1]], NIntegrate`PattersonQuadratureDump`topregion[\"Boundaries\"], NIntegrate`PattersonQuadratureDump`integral, NIntegrate`PattersonQuadratureDump`error]]; {$MaxPrecision, $MinPrecision} = NIntegrate`PattersonQuadratureDump`oldMinMaxPrec; NIntegrate`PattersonQuadratureDump`integral]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, MinRecursion -> Automatic, MaxRecursion -> Automatic, SymbolicProcessing -> 5}\nAttributes: {}\nFullName: NIntegrate`Patterson",
	"NIntegrate`PattersonRule":"ObjectType: Symbol\nUsage: NIntegrate`PattersonRule\nDocumentation: None\nOwnValues: None\nUpValues: NIntegrate`InitializeIntegrationRule[NIntegrate`PattersonRule, NIntegrate`PattersonQuadratureDump`nfs_, NIntegrate`PattersonQuadratureDump`ranges_, NIntegrate`PattersonQuadratureDump`ruleOpts_, NIntegrate`PattersonQuadratureDump`allOpts_] ^:= Module[{NIntegrate`PattersonQuadratureDump`t, NIntegrate`PattersonQuadratureDump`npnts, NIntegrate`PattersonQuadratureDump`pos, NIntegrate`PattersonQuadratureDump`absc, NIntegrate`PattersonQuadratureDump`weights, NIntegrate`PattersonQuadratureDump`errweights, NIntegrate`PattersonQuadratureDump`paramdata, NIntegrate`PattersonQuadratureDump`prec, NIntegrate`PattersonQuadratureDump`symbproctime}, NIntegrate`PattersonQuadratureDump`t = NIntegrate`GetMethodOptionValues[NIntegrate`PattersonRule, NIntegrate`PattersonQuadratureDump`PattersonRuleProperties, NIntegrate`PattersonQuadratureDump`ruleOpts]; If[NIntegrate`PattersonQuadratureDump`t === $Failed, Return[$Failed], {NIntegrate`PattersonQuadratureDump`npnts, NIntegrate`PattersonQuadratureDump`symbproctime} = NIntegrate`PattersonQuadratureDump`t]; NIntegrate`PattersonQuadratureDump`prec = WorkingPrecision \/. NIntegrate`PattersonQuadratureDump`allOpts; If[NIntegrate`PattersonQuadratureDump`prec =!= MachinePrecision, NIntegrate`PattersonQuadratureDump`prec = N[NIntegrate`PattersonQuadratureDump`prec]]; If[NIntegrate`PattersonQuadratureDump`npnts === Automatic, NIntegrate`PattersonQuadratureDump`npnts = If[NIntegrate`PattersonQuadratureDump`prec > 5, Min[200, Floor[N[NIntegrate`PattersonQuadratureDump`prec\/3]]], 5]]; If[ !TrueQ[NIntegrate`PattersonQuadratureDump`npnts > 1], NIntegrate`PattersonQuadratureDump`pos = NIntegrate`OptionNamePosition[NIntegrate`PattersonQuadratureDump`ruleOpts, \"Points\"]; Message[NIntegrate::gkrpts, NIntegrate`PattersonQuadratureDump`ruleOpts[[NIntegrate`PattersonQuadratureDump`pos]], 2, 1]; Return[$Failed]; ]; If[ !TrueQ[(NumberQ[NIntegrate`PattersonQuadratureDump`prec] && NIntegrate`PattersonQuadratureDump`prec > 0) || NIntegrate`PattersonQuadratureDump`prec == MachinePrecision], Message[NIntegrate::wprec, NIntegrate`PattersonQuadratureDump`prec]; Return[$Failed]; ]; NIntegrate`PattersonQuadratureDump`paramdata = NIntegrate`GaussRuleData[2*NIntegrate`PattersonQuadratureDump`npnts + 1, NIntegrate`PattersonQuadratureDump`prec]; If[NIntegrate`PattersonQuadratureDump`paramdata === $Failed, Return[$Failed]]; {NIntegrate`PattersonQuadratureDump`absc, NIntegrate`PattersonQuadratureDump`weights, NIntegrate`PattersonQuadratureDump`errweights} = NIntegrate`PattersonQuadratureDump`paramdata; NIntegrate`PattersonQuadratureDump`t = NIntegrate`PattersonQuadratureDump`PattersonWeights[Take[NIntegrate`PattersonQuadratureDump`absc, {1, -1, 2}], NIntegrate`PattersonQuadratureDump`prec]; NIntegrate`PattersonQuadratureDump`t = Rest[Flatten[({0, #1} & ) \/@ NIntegrate`PattersonQuadratureDump`t]]; NIntegrate`PattersonQuadratureDump`paramdata = {NIntegrate`PattersonQuadratureDump`absc, NIntegrate`PattersonQuadratureDump`weights, NIntegrate`PattersonQuadratureDump`weights - NIntegrate`PattersonQuadratureDump`t}; NIntegrate`InitializeIntegrationRule[NIntegrate`GeneralRule, NIntegrate`PattersonQuadratureDump`nfs, NIntegrate`PattersonQuadratureDump`ranges, {\"RuleData\" -> NIntegrate`PattersonQuadratureDump`paramdata}, NIntegrate`PattersonQuadratureDump`allOpts]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Points -> Automatic, SymbolicProcessing -> Automatic}\nAttributes: {}\nFullName: NIntegrate`PattersonRule",
	"Sound`PauseSound":"ObjectType: Symbol\nUsage: Sound`PauseSound\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`PauseSound[Sound`SoundDump`stream:_Sound`SoundOutputStream | _Sound`AudioOutputStream | _Sound`MIDIOutputStream] := Module[{Sound`SoundDump`audioOutputStream = None, Sound`SoundDump`midiOutputStream = None, Sound`SoundDump`playState}, Sound`SoundDump`playState = Sound`SoundDump`SoundStreamState[Sound`SoundDump`stream, Sound`PlayState]; If[Sound`SoundDump`playState =!= \"Play\", Return[Sound`SoundDump`stream]]; Which[MatchQ[Sound`SoundDump`stream, _Sound`SoundOutputStream], {Sound`SoundDump`audioOutputStream, Sound`SoundDump`midiOutputStream} = Replace[Sound`SoundDump`stream, Sound`SoundDump`$StreamStreamMap], MatchQ[Sound`SoundDump`stream, _Sound`AudioOutputStream], Sound`SoundDump`audioOutputStream = Sound`SoundDump`stream, MatchQ[Sound`SoundDump`stream, _Sound`MIDIOutputStream], Sound`SoundDump`audioOutputStream = Sound`SoundDump`stream]; If[Sound`SoundDump`audioOutputStream =!= None && Replace[Sound`SoundDump`audioOutputStream, Sound`SoundDump`$AudioTaskMap] =!= Null, Needs[\"AudioTools`\"]; AudioTools`StopAudioAsynchronousTask[Replace[Sound`SoundDump`audioOutputStream, Sound`SoundDump`$AudioTaskMap]]]; If[Sound`SoundDump`midiOutputStream =!= None, Replace[Sound`SoundDump`midiOutputStream, Sound`SoundDump`$MIDISeqMap][Sound`SoundDump`stop[]]]; Sound`SoundDump`SetSoundOutputStream[Sound`SoundDump`stream, Sound`PlayState -> \"Pause\"]; Sound`SoundDump`stream]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PauseSound",
	"PacletManager`Package`PCfindForDocResource":"ObjectType: Symbol\nUsage: PacletManager`Package`PCfindForDocResource\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCfindForDocResource[PacletManager`Collection`Private`opts:OptionsPattern[]] := Module[{PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language}, {PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language} = OptionValue[{\"LinkBase\", \"Context\", \"ResourceName\", \"Language\"}]; Assert[MatchQ[PacletManager`Collection`Private`linkBase, _String | All], {498, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; Assert[MatchQ[PacletManager`Collection`Private`context, _String | All], {499, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; Assert[MatchQ[PacletManager`Collection`Private`expandedResourceName, _String | All], {500, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; Assert[MatchQ[PacletManager`Collection`Private`language, _String], {501, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; Assert[PacletManager`Collection`Private`linkBase === All || PacletManager`Collection`Private`context === All, {503, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; (Sort[#1, PacletManager`Package`versionSortFunction[PacletManager`Package`getPIValue[First[#1], \"Version\"], PacletManager`Package`getPIValue[First[#2], \"Version\"]] & ] & )[(Select[#1, PacletManager`Package`isEnabled[First[#1]] & ] & )[Join[PacletManager`Package`LDCfindForDocResource[PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language], PacletManager`Package`MCfindForDocResource[PacletManager`Collection`Private`$layoutPacletCollection, PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language], If[PacletManager`Collection`Private`linkBase === \"WolframMathematica\" &&  !PacletManager`Package`hasSystemDocs[PacletManager`Collection`Private`language], {Nothing}, PacletManager`Package`MCfindForDocResource[PacletManager`Collection`Private`$userPacletCollection, PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language]], PacletManager`Package`MCfindForDocResource[PacletManager`Collection`Private`$legacyPacletCollection, PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language], PacletManager`Package`MCfindForDocResource[PacletManager`Collection`Private`$extraPacletCollection, PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language], PacletManager`Package`MCfindForDocResource[PacletManager`Collection`Private`$cachedPacletCollection, PacletManager`Collection`Private`linkBase, PacletManager`Collection`Private`context, PacletManager`Collection`Private`expandedResourceName, PacletManager`Collection`Private`language]]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {LinkBase -> All, Context -> All, ResourceName -> All, Language -> English}\nAttributes: {}\nFullName: PacletManager`Package`PCfindForDocResource",
	"PacletManager`Package`PCfindMatching":"ObjectType: Symbol\nUsage: PacletManager`Package`PCfindMatching\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCfindMatching[OptionsPattern[]] := Module[{PacletManager`Collection`Private`pc, PacletManager`Collection`Private`selectFunc, PacletManager`Collection`Private`name, PacletManager`Collection`Private`qualifier, PacletManager`Collection`Private`version, PacletManager`Collection`Private`systemID, PacletManager`Collection`Private`mVersion, PacletManager`Collection`Private`productID, PacletManager`Collection`Private`context, PacletManager`Collection`Private`extension, PacletManager`Collection`Private`location, PacletManager`Collection`Private`internal, PacletManager`Collection`Private`creator, PacletManager`Collection`Private`publisher, PacletManager`Collection`Private`collections, PacletManager`Collection`Private`paclets, PacletManager`Collection`Private`result}, {PacletManager`Collection`Private`name, PacletManager`Collection`Private`version, PacletManager`Collection`Private`qualifier, PacletManager`Collection`Private`systemID, PacletManager`Collection`Private`mVersion, PacletManager`Collection`Private`productID, PacletManager`Collection`Private`context, PacletManager`Collection`Private`extension, PacletManager`Collection`Private`location, PacletManager`Collection`Private`internal, PacletManager`Collection`Private`creator, PacletManager`Collection`Private`publisher, PacletManager`Collection`Private`collections, PacletManager`Collection`Private`paclets} = OptionValue[{\"Name\", \"Version\", \"Qualifier\", \"SystemID\", \"WolframVersion\", \"ProductID\", \"Context\", \"Extension\", \"Location\", \"Internal\", \"Creator\", \"Publisher\", \"Collections\", \"Paclets\"}]; PacletManager`Collection`Private`selectFunc = Hold[]; If[PacletManager`Collection`Private`context =!= All, With[{PacletManager`Collection`Private`context = PacletManager`Collection`Private`context}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[PacletManager`Package`PhasContext[#1, PacletManager`Collection`Private`context]]]]]; If[PacletManager`Collection`Private`extension =!= All, With[{PacletManager`Collection`Private`extension = Alternatives @@ Flatten[{PacletManager`Collection`Private`extension}]}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[Length[PacletManager`Package`PgetExtensions[#1, PacletManager`Collection`Private`extension]] > 0]]]]; If[PacletManager`Collection`Private`name =!= All, With[{PacletManager`Collection`Private`name = PacletManager`Collection`Private`name}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[StringMatchQ[PacletManager`Package`getPIValue[#1, \"Name\"], PacletManager`Collection`Private`name]]]]]; If[PacletManager`Collection`Private`qualifier =!= All, With[{PacletManager`Collection`Private`qualifier = PacletManager`Collection`Private`qualifier}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[PacletManager`Package`getPIValue[#1, \"Qualifier\"] === PacletManager`Collection`Private`qualifier]]]]; If[PacletManager`Collection`Private`version =!= All && PacletManager`Collection`Private`version =!= \"\", With[{PacletManager`Collection`Private`version = PacletManager`Collection`Private`version}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[StringMatchQ[PacletManager`Package`getPIValue[#1, \"Version\"], PacletManager`Collection`Private`version]]]]]; If[PacletManager`Collection`Private`systemID === Automatic, PacletManager`Collection`Private`systemID = $SystemID]; If[PacletManager`Collection`Private`systemID =!= All, With[{PacletManager`Collection`Private`systemID = PacletManager`Collection`Private`systemID}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[PacletManager`Package`systemIDMatches[PacletManager`Collection`Private`systemID, PacletManager`Package`getPIValue[#1, \"SystemID\"]]]]]]; If[PacletManager`Collection`Private`mVersion === Automatic, PacletManager`Collection`Private`mVersion = PacletManager`Package`getKernelVersionStringComplete[]]; If[PacletManager`Collection`Private`mVersion =!= All, With[{PacletManager`Collection`Private`mVersion = PacletManager`Collection`Private`mVersion}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[PacletManager`Package`kernelVersionMatches[PacletManager`Collection`Private`mVersion, PacletManager`Package`getPIValue[#1, \"WolframVersion\"]]]]]]; If[PacletManager`Collection`Private`productID === Automatic, PacletManager`Collection`Private`productID = PacletManager`Package`getProductID[]]; If[PacletManager`Collection`Private`productID =!= All, With[{PacletManager`Collection`Private`productID = PacletManager`Collection`Private`productID}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[PacletManager`Package`productIDMatches[PacletManager`Collection`Private`productID, PacletManager`Package`getPIValue[#1, \"ProductID\"]]]]]]; If[PacletManager`Collection`Private`internal =!= All, With[{PacletManager`Collection`Private`internal = PacletManager`Collection`Private`internal}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[PacletManager`Package`getPIValue[#1, \"Internal\"] === PacletManager`Collection`Private`internal]]]]; If[PacletManager`Collection`Private`location =!= All, With[{PacletManager`Collection`Private`strPatt = If[StringQ[PacletManager`Collection`Private`location], StringJoin[PacletManager`Collection`Private`location, \"*\"], PacletManager`Collection`Private`location]}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[StringMatchQ[PacletManager`Package`PgetLocation[#1], PacletManager`Collection`Private`strPatt]]]]]; If[PacletManager`Collection`Private`creator =!= All, With[{PacletManager`Collection`Private`creator = PacletManager`Collection`Private`creator}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[Function[{PacletManager`Collection`Private`c}, StringQ[PacletManager`Collection`Private`c] && StringMatchQ[PacletManager`Collection`Private`c, PacletManager`Collection`Private`creator]][PacletManager`Package`getPIValue[#1, \"Creator\"]]]]]]; If[PacletManager`Collection`Private`publisher =!= All, With[{PacletManager`Collection`Private`publisher = PacletManager`Collection`Private`publisher}, PacletManager`Collection`Private`selectFunc = Join[PacletManager`Collection`Private`selectFunc, Hold[Function[{PacletManager`Collection`Private`p}, StringQ[PacletManager`Collection`Private`p] && StringMatchQ[PacletManager`Collection`Private`p, PacletManager`Collection`Private`publisher]][PacletManager`Package`getPIValue[#1, \"Publisher\"]]]]]]; Which[ListQ[PacletManager`Collection`Private`paclets], PacletManager`Collection`Private`pc = PacletManager`Collection`Private`paclets, PacletManager`Collection`Private`collections === All, PacletManager`Collection`Private`pc = Join[PacletManager`Collection`Private`$extraPacletCollection, PacletManager`Collection`Private`$userPacletCollection, PacletManager`Collection`Private`$sharedPacletCollection, PacletManager`Collection`Private`$layoutPacletCollection, PacletManager`Collection`Private`$legacyPacletCollection, PacletManager`Collection`Private`$cloudExtraPacletCollection], True, PacletManager`Collection`Private`pc = Join[If[MemberQ[PacletManager`Collection`Private`collections, \"Extra\"], PacletManager`Collection`Private`$extraPacletCollection, {}], If[MemberQ[PacletManager`Collection`Private`collections, \"User\"], PacletManager`Collection`Private`$userPacletCollection, {}], If[MemberQ[PacletManager`Collection`Private`collections, \"Shared\"], PacletManager`Collection`Private`$sharedPacletCollection, {}], If[MemberQ[PacletManager`Collection`Private`collections, \"Layout\"], PacletManager`Collection`Private`$layoutPacletCollection, {}], If[MemberQ[PacletManager`Collection`Private`collections, \"Legacy\"], PacletManager`Collection`Private`$legacyPacletCollection, {}], If[MemberQ[PacletManager`Collection`Private`collections, \"Cached\"], PacletManager`Collection`Private`$cachedPacletCollection, {}], If[MemberQ[PacletManager`Collection`Private`collections, \"CloudExtra\"], PacletManager`Collection`Private`$cloudExtraPacletCollection, {}]]]; PacletManager`Collection`Private`result = Select[PacletManager`Collection`Private`pc, Function[{PacletManager`Collection`Private`heldSelectFunc}, Function[Null, And @@ PacletManager`Collection`Private`heldSelectFunc]][PacletManager`Collection`Private`selectFunc]]; If[MemberQ[PacletManager`Collection`Private`collections, \"LayoutDocs\"] && PacletManager`Collection`Private`paclets === Null && PacletManager`Collection`Private`context === All && PacletManager`Collection`Private`qualifier === All && PacletManager`Package`kernelVersionMatches[PacletManager`Collection`Private`mVersion] && PacletManager`Package`productIDMatches[PacletManager`Collection`Private`productID] && (PacletManager`Collection`Private`extension === All || MemberQ[Flatten[{PacletManager`Collection`Private`extension}], \"Documentation\"]) && PacletManager`Collection`Private`internal =!= True && PacletManager`Collection`Private`creator === All && PacletManager`Collection`Private`publisher === All && PacletManager`Collection`Private`location === All, PacletManager`Collection`Private`result = Join[PacletManager`Collection`Private`result, PacletManager`Package`LDCfindMatching[PacletManager`Collection`Private`name, PacletManager`Collection`Private`version, OptionValue[\"Language\"]]]]; PacletManager`Collection`Private`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Name -> All, Version -> All, Qualifier -> All, SystemID -> Automatic, WolframVersion -> Automatic, ProductID -> Automatic, Context -> All, Extension -> All, Location -> All, Internal -> All, Creator -> All, Publisher -> All, Collections -> {User, Shared, Layout, Legacy, Extra, CloudExtra}, Language -> All, Paclets -> Null}\nAttributes: {}\nFullName: PacletManager`Package`PCfindMatching",
	"PacletManager`Package`PCinitialize":"ObjectType: Symbol\nUsage: PacletManager`Package`PCinitialize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCinitialize[PacletManager`Collection`Private`freshStart:True | False] := PacletManager`Package`executionProtect[Module[{PacletManager`Collection`Private`foundFile, PacletManager`Collection`Private`strm, PacletManager`Collection`Private`serVersion, PacletManager`Collection`Private`pc, PacletManager`Collection`Private`oldHash, PacletManager`Collection`Private`newHash, PacletManager`Collection`Private`oldCreationDate, PacletManager`Collection`Private`lockFile, PacletManager`Collection`Private`hadToRebuild, PacletManager`Collection`Private`readSharedPacletCollection}, PacletManager`Collection`Private`$pacletsPersistentFile = ToFileName[PacletManager`Package`$userConfigurationDir, StringJoin[\"pacletData\", \"_\", PacletManager`Package`getKernelVersionString[], \"_\", ToString[Hash[$InstallationDirectory]], \".pmd3\"]]; PacletManager`Collection`Private`foundFile = FileExistsQ[PacletManager`Collection`Private`$pacletsPersistentFile] &&  !PacletManager`Collection`Private`freshStart; If[PacletManager`Collection`Private`foundFile, PacletManager`Collection`Private`lockFile = ToFileName[PacletManager`Package`$userTemporaryDir, StringJoin[FileNameTake[PacletManager`Collection`Private`$pacletsPersistentFile], \".lock\"]]; If[PacletManager`Package`acquireLock[PacletManager`Collection`Private`lockFile, 3, True], PacletManager`Package`using[{PacletManager`Collection`Private`strm = OpenRead[PacletManager`Collection`Private`$pacletsPersistentFile]}, PacletManager`Collection`Private`readSharedPacletCollection = True; PacletManager`Collection`Private`serVersion = Read[PacletManager`Collection`Private`strm, Expression]; If[PacletManager`Collection`Private`serVersion <= PacletManager`Collection`Private`$serializationVersion, Block[{$ContextPath = Prepend[$ContextPath, \"PacletManager`\"]}, PacletManager`Collection`Private`pc = Read[PacletManager`Collection`Private`strm, Expression]; If[ListQ[PacletManager`Collection`Private`pc], PacletManager`Collection`Private`$userPacletCollection = PacletManager`Collection`Private`pc]; PacletManager`Collection`Private`pc = Read[PacletManager`Collection`Private`strm, Expression]; If[ListQ[PacletManager`Collection`Private`pc], PacletManager`Collection`Private`$layoutPacletCollection = PacletManager`Collection`Private`pc]]; If[PacletManager`Collection`Private`serVersion > 1, PacletManager`Collection`Private`oldHash = Read[PacletManager`Collection`Private`strm, Expression]; If[IntegerQ[PacletManager`Collection`Private`oldHash], PacletManager`Collection`Private`newHash = Hash[Join[FileNames[\"*\", PacletManager`Package`$userRepositoryDir], FileNames[\"*\", PacletManager`Package`$sharedRepositoryDir]]]; If[PacletManager`Collection`Private`newHash =!= PacletManager`Collection`Private`oldHash, PacletManager`Collection`Private`$userPacletCollection =. ; PacletManager`Collection`Private`$sharedPacletCollection =. ; PacletManager`Collection`Private`readSharedPacletCollection = False]]]; If[PacletManager`Collection`Private`serVersion > 2, PacletManager`Collection`Private`oldCreationDate = Read[PacletManager`Collection`Private`strm, Expression]; If[N[PacletManager`Collection`Private`oldCreationDate] =!= N[DateList[$CreationDate]], PacletManager`Collection`Private`$userPacletCollection =. ; PacletManager`Collection`Private`$sharedPacletCollection =. ; PacletManager`Collection`Private`readSharedPacletCollection = False]]; If[PacletManager`Collection`Private`serVersion > 3 && PacletManager`Collection`Private`readSharedPacletCollection, Block[{$ContextPath = Prepend[$ContextPath, \"PacletManager`\"]}, PacletManager`Collection`Private`pc = Read[PacletManager`Collection`Private`strm, Expression]; If[ListQ[PacletManager`Collection`Private`pc], PacletManager`Collection`Private`$sharedPacletCollection = PacletManager`Collection`Private`pc]]]]]; PacletManager`Package`releaseLock[PacletManager`Collection`Private`lockFile]]]; PacletManager`Package`$extraPacletVisibleDirs = PacletManager`Package`$extraPacletHiddenDirs = {}; If[ !PacletManager`Collection`Private`foundFile ||  !ListQ[PacletManager`Collection`Private`$userPacletCollection] ||  !ListQ[PacletManager`Collection`Private`$sharedPacletCollection] ||  !ListQ[PacletManager`Collection`Private`$layoutPacletCollection], If[MemberQ[$CommandLine, \"-layoutpaclets\"], PacletManager`Package`PCrebuild[\"Collections\" -> {\"Layout\"}]; PacletManager`Collection`Private`$userPacletCollection = PacletManager`Collection`Private`$sharedPacletCollection = {}, PacletManager`Package`PCrebuild[\"Collections\" -> {\"User\", \"Shared\", \"Layout\"}]]; PacletManager`Package`PCwrite[]; PacletManager`Collection`Private`hadToRebuild = True]; If[MemberQ[$CommandLine, \"-layoutpaclets\"], PacletManager`Package`PCrebuild[\"Collections\" -> {\"Extra\", \"CloudExtra\", \"Cached\"}]; PacletManager`Collection`Private`$legacyPacletCollection = {}, PacletManager`Package`PCrebuild[\"Collections\" -> {\"Legacy\", \"Extra\", \"CloudExtra\", \"Cached\"}]]; PacletManager`Package`initializeLayoutDocsCollection[]; Assert[ListQ[PacletManager`Collection`Private`$userPacletCollection] && ListQ[PacletManager`Collection`Private`$sharedPacletCollection] && ListQ[PacletManager`Collection`Private`$layoutPacletCollection] && ListQ[PacletManager`Collection`Private`$legacyPacletCollection] && ListQ[PacletManager`Collection`Private`$extraPacletCollection] && ListQ[PacletManager`Collection`Private`$cloudExtraPacletCollection] && ListQ[PacletManager`Collection`Private`$cachedPacletCollection], {165, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; TrueQ[PacletManager`Collection`Private`hadToRebuild]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PCinitialize",
	"PacletManager`Package`PCinitializeCloud":"ObjectType: Symbol\nUsage: PacletManager`Package`PCinitializeCloud\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCinitializeCloud[PacletManager`Collection`Private`freshStart:True | False] := PacletManager`Package`executionProtect[Module[{PacletManager`Collection`Private`foundFile, PacletManager`Collection`Private`strm, PacletManager`Collection`Private`serVersion, PacletManager`Collection`Private`pc, PacletManager`Collection`Private`oldHash, PacletManager`Collection`Private`newHash, PacletManager`Collection`Private`lockFile, PacletManager`Collection`Private`hadToRebuild}, PacletManager`Collection`Private`$userPacletCollection = {}; PacletManager`Collection`Private`$pacletsPersistentFile = ToFileName[PacletManager`Package`$userConfigurationDir, StringJoin[\"pacletData\", \"_\", PacletManager`Package`getKernelVersionString[], \".pmd3\"]]; PacletManager`Collection`Private`foundFile = FileExistsQ[PacletManager`Collection`Private`$pacletsPersistentFile] &&  !PacletManager`Collection`Private`freshStart; If[PacletManager`Collection`Private`foundFile, PacletManager`Collection`Private`lockFile = ToFileName[PacletManager`Package`$userTemporaryDir, StringJoin[FileNameTake[PacletManager`Collection`Private`$pacletsPersistentFile], \".lock\"]]; If[PacletManager`Package`acquireLock[PacletManager`Collection`Private`lockFile, 0.25, True], PacletManager`Package`using[{PacletManager`Collection`Private`strm = OpenRead[PacletManager`Collection`Private`$pacletsPersistentFile]}, PacletManager`Collection`Private`serVersion = Read[PacletManager`Collection`Private`strm, Expression]; If[PacletManager`Collection`Private`serVersion <= PacletManager`Collection`Private`$serializationVersion, Block[{$ContextPath = Prepend[$ContextPath, \"PacletManager`\"]}, PacletManager`Collection`Private`pc = Read[PacletManager`Collection`Private`strm, Expression]; If[ListQ[PacletManager`Collection`Private`pc], PacletManager`Collection`Private`$userPacletCollection = PacletManager`Collection`Private`pc]]; PacletManager`Collection`Private`oldHash = Read[PacletManager`Collection`Private`strm, Expression]; If[IntegerQ[PacletManager`Collection`Private`oldHash], PacletManager`Collection`Private`newHash = Hash[FileNames[\"*\", PacletManager`Package`$userRepositoryDir]]; If[PacletManager`Collection`Private`newHash =!= PacletManager`Collection`Private`oldHash, PacletManager`Collection`Private`$userPacletCollection =. ; ]]]]; PacletManager`Package`releaseLock[PacletManager`Collection`Private`lockFile]]]; If[ !PacletManager`Collection`Private`foundFile ||  !ListQ[PacletManager`Collection`Private`$userPacletCollection], PacletManager`Package`PCrebuild[\"Collections\" -> {\"User\"}]; PacletManager`Package`PCwrite[]; PacletManager`Collection`Private`hadToRebuild = True]; Assert[ListQ[PacletManager`Collection`Private`$userPacletCollection] && ListQ[PacletManager`Collection`Private`$sharedPacletCollection] && ListQ[PacletManager`Collection`Private`$layoutPacletCollection] && ListQ[PacletManager`Collection`Private`$legacyPacletCollection] && ListQ[PacletManager`Collection`Private`$extraPacletCollection] && ListQ[PacletManager`Collection`Private`$cloudExtraPacletCollection] && ListQ[PacletManager`Collection`Private`$cachedPacletCollection], {227, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Collection.m\"}]; TrueQ[PacletManager`Collection`Private`hadToRebuild]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PCinitializeCloud",
	"PacletManager`Package`PCrebuild":"ObjectType: Symbol\nUsage: PacletManager`Package`PCrebuild\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCrebuild[OptionsPattern[]] := PacletManager`Package`executionProtect[Module[{PacletManager`Collection`Private`userRepositoryDir, PacletManager`Collection`Private`sharedRepositoryDir, PacletManager`Collection`Private`sysPacletDirs, PacletManager`Collection`Private`appDirs, PacletManager`Collection`Private`collections, PacletManager`Collection`Private`lockFile, PacletManager`Collection`Private`rebuildUser, PacletManager`Collection`Private`rebuildShared, PacletManager`Collection`Private`result}, PacletManager`Package`log[1, \"Rebuilding\"]; PacletManager`Collection`Private`result = True; {PacletManager`Collection`Private`userRepositoryDir, PacletManager`Collection`Private`sharedRepositoryDir, PacletManager`Collection`Private`sysPacletDirs, PacletManager`Collection`Private`appDirs, PacletManager`Collection`Private`collections} = OptionValue[{\"UserRepositoryDir\", \"SharedRepositoryDir\", \"SystemPacletDirs\", \"ApplicationDirs\", \"Collections\"}]; PacletManager`Collection`Private`collections = Flatten[{PacletManager`Collection`Private`collections}]; PacletManager`Collection`Private`rebuildUser = PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"User\"]; PacletManager`Collection`Private`rebuildShared = PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"Shared\"]; If[PacletManager`Collection`Private`rebuildUser || PacletManager`Collection`Private`rebuildShared, PacletManager`Collection`Private`lockFile = ToFileName[PacletManager`Package`$userTemporaryDir, \"repository.lock\"]; If[PacletManager`Package`isCloud[] || PacletManager`Package`acquireLock[PacletManager`Collection`Private`lockFile, 3, False], If[PacletManager`Collection`Private`rebuildUser, PacletManager`Collection`Private`$userPacletCollection = PacletManager`Package`createPacletsFromParentDirs[If[PacletManager`Collection`Private`userRepositoryDir === Automatic, PacletManager`Package`$userRepositoryDir, PacletManager`Collection`Private`userRepositoryDir], 3]]; If[PacletManager`Collection`Private`rebuildShared, PacletManager`Collection`Private`$sharedPacletCollection = PacletManager`Package`createPacletsFromParentDirs[If[PacletManager`Collection`Private`sharedRepositoryDir === Automatic, PacletManager`Package`$sharedRepositoryDir, PacletManager`Collection`Private`sharedRepositoryDir], 3]]; PacletManager`Package`releaseLock[PacletManager`Collection`Private`lockFile], If[FileInformation[$UserBasePacletsDirectory] === {}, Message[PacletDataRebuild::basedir, $UserBasePacletsDirectory], Message[PacletDataRebuild::lock]]; If[ !ListQ[PacletManager`Collection`Private`$userPacletCollection], PacletManager`Collection`Private`$userPacletCollection = {}]; If[ !ListQ[PacletManager`Collection`Private`$sharedPacletCollection], PacletManager`Collection`Private`$sharedPacletCollection = {}]; PacletManager`Collection`Private`result = False]]; If[PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"Layout\"], PacletManager`Collection`Private`$layoutPacletCollection = PacletManager`Package`createPacletsFromParentDirs[If[PacletManager`Collection`Private`sysPacletDirs === Automatic, PacletManager`Package`systemPacletDirs[], PacletManager`Collection`Private`sysPacletDirs], 2]]; If[PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"Legacy\"], PacletManager`Collection`Private`$legacyPacletCollection = PacletManager`Package`createPacletsFromParentDirs[If[PacletManager`Collection`Private`appDirs === Automatic, PacletManager`Package`applicationDirs[], PacletManager`Collection`Private`appDirs], 2]]; If[PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"Extra\"], PacletManager`Collection`Private`$extraPacletCollection = PacletManager`Package`createPacletsFromParentDirs[Join[PacletManager`Package`$extraPacletVisibleDirs, PacletManager`Package`$extraPacletHiddenDirs], 2]]; If[PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"Cached\"], PacletManager`Collection`Private`$cachedPacletCollection = PacletManager`Package`createPacletsFromParentDirs[PacletManager`Package`$userCachedPacletsDir, 2]]; If[PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"LayoutDocs\"], PacletManager`Package`initializeLayoutDocsCollection[]]; If[PacletManager`Collection`Private`collections === {All} || MemberQ[PacletManager`Collection`Private`collections, \"CloudExtra\"], PacletManager`Collection`Private`$cloudExtraPacletCollection = If[StringQ[PacletManager`Collection`Private`$cloudExtraDir], PacletManager`Package`createPacletsFromParentDirs[PacletManager`Collection`Private`$cloudExtraDir, 2], {}]]; PacletManager`Collection`Private`result]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {UserRepositoryDir -> Automatic, SharedRepositoryDir -> Automatic, SystemPacletDirs -> Automatic, ApplicationDirs -> Automatic, Collections -> All}\nAttributes: {}\nFullName: PacletManager`Package`PCrebuild",
	"Internal`PCREOptions":"ObjectType: Symbol\nUsage: Internal`PCREOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PCREOptions",
	"PacletManager`Package`PCuserCollectionIsEmpty":"ObjectType: Symbol\nUsage: PacletManager`Package`PCuserCollectionIsEmpty\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCuserCollectionIsEmpty[] := Length[PacletManager`Collection`Private`$userPacletCollection] == 0\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PCuserCollectionIsEmpty",
	"PacletManager`Package`PCwrite":"ObjectType: Symbol\nUsage: PacletManager`Package`PCwrite\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PCwrite[] := PacletManager`Package`executionProtect[Module[{PacletManager`Collection`Private`strm, PacletManager`Collection`Private`lockFile, PacletManager`Collection`Private`hash}, If[PacletManager`Package`isPMReadOnly[], Return[]]; PacletManager`Collection`Private`lockFile = ToFileName[PacletManager`Package`$userTemporaryDir, StringJoin[FileNameTake[PacletManager`Collection`Private`$pacletsPersistentFile], \".lock\"]]; If[PacletManager`Package`acquireLock[PacletManager`Collection`Private`lockFile, If[PacletManager`Package`isCloud[], 0.25, 3], True], PacletManager`Package`using[{PacletManager`Collection`Private`strm = OpenWrite[PacletManager`Collection`Private`$pacletsPersistentFile]}, Write[PacletManager`Collection`Private`strm, PacletManager`Collection`Private`$serializationVersion]; Write[PacletManager`Collection`Private`strm, PacletManager`Collection`Private`$userPacletCollection]; If[PacletManager`Package`isCloudUser[], PacletManager`Collection`Private`hash = Hash[FileNames[\"*\", PacletManager`Package`$userRepositoryDir]]; Write[PacletManager`Collection`Private`strm, PacletManager`Collection`Private`hash], Write[PacletManager`Collection`Private`strm, PacletManager`Collection`Private`$layoutPacletCollection]; PacletManager`Collection`Private`hash = Hash[Join[FileNames[\"*\", PacletManager`Package`$userRepositoryDir], FileNames[\"*\", PacletManager`Package`$sharedRepositoryDir]]]; Write[PacletManager`Collection`Private`strm, PacletManager`Collection`Private`hash]; Write[PacletManager`Collection`Private`strm, N[DateList[$CreationDate]]]; Write[PacletManager`Collection`Private`strm, PacletManager`Collection`Private`$sharedPacletCollection]]]; PacletManager`Package`releaseLock[PacletManager`Collection`Private`lockFile]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PCwrite",
	"Periodic`Private`PDComposition":"ObjectType: Symbol\nUsage: Periodic`Private`PDComposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDComposition[Periodic`Private`PeriodicToolsDump`f__] := Evaluate[(Composition[Periodic`Private`PeriodicToolsDump`f])[#1]] & \nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDComposition",
	"NDSolve`FEM`PDECoefficientData":"ObjectType: Symbol\nUsage: NDSolve`FEM`PDECoefficientData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: NDSolve`FEM`PDECoefficientData[NDSolve`FEM`FEMDiscretizationDump`if:{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, __][\"All\"] := NDSolve`FEM`FEMDiscretizationDump`if\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"SystemSize\"] := NDSolve`FEM`FEMDiscretizationDump`systemSize\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"SpatialDimension\"] := NDSolve`FEM`FEMDiscretizationDump`spaceSize\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"DomainType\"] := NDSolve`FEM`FEMDiscretizationDump`type\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"Stationary\"] := NDSolve`FEM`FEMDiscretizationDump`properties[[1,2]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"Discrete\"] := NDSolve`FEM`FEMDiscretizationDump`properties[[2,2]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"IndexedDiscrete\"] := NDSolve`FEM`FEMDiscretizationDump`properties[[3,2]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"Parametric\"] := NDSolve`FEM`FEMDiscretizationDump`properties[[4,2]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"Transient\"] := NDSolve`FEM`FEMDiscretizationDump`properties[[5,2]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"Nonlinear\"] := NDSolve`FEM`FEMDiscretizationDump`properties[[6,2]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"Constraints\"] := NDSolve`FEM`FEMDiscretizationDump`constraints\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"LoadCoefficients\"] := NDSolve`FEM`FEMDiscretizationDump`lif[[1]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"LoadDerivativeCoefficients\"] := NDSolve`FEM`FEMDiscretizationDump`lif[[2]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"DiffusionCoefficients\"] := -NDSolve`FEM`FEMDiscretizationDump`sif[[1]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"ConservativeConvectionCoefficients\"] := -NDSolve`FEM`FEMDiscretizationDump`sif[[2]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"ConvectionCoefficients\"] := NDSolve`FEM`FEMDiscretizationDump`sif[[3]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"ReactionCoefficients\"] := NDSolve`FEM`FEMDiscretizationDump`sif[[4]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"DampingCoefficients\"] := NDSolve`FEM`FEMDiscretizationDump`dif[[1]]\nNDSolve`FEM`PDECoefficientData[{NDSolve`FEM`FEMDiscretizationDump`lif_, NDSolve`FEM`FEMDiscretizationDump`sif_, NDSolve`FEM`FEMDiscretizationDump`dif_, NDSolve`FEM`FEMDiscretizationDump`mif_}, NDSolve`FEM`FEMDiscretizationDump`systemSize_, NDSolve`FEM`FEMDiscretizationDump`spaceSize_, NDSolve`FEM`FEMDiscretizationDump`properties_, NDSolve`FEM`FEMDiscretizationDump`constraints_, NDSolve`FEM`FEMDiscretizationDump`type_][\"MassCoefficients\"] := NDSolve`FEM`FEMDiscretizationDump`mif[[1]]\nNDSolve`FEM`PDECoefficientData[{_, _, _, _}, __][\"Properties\"] := {\"All\", \"ConservativeConvectionCoefficients\", \"Constraints\", \"ConvectionCoefficients\", \"DampingCoefficients\", \"DiffusionCoefficients\", \"Discrete\", \"DomainType\", \"IndexedDiscrete\", \"LoadCoefficients\", \"LoadDerivativeCoefficients\", \"MassCoefficients\", \"Nonlinear\", \"Parametric\", \"Properties\", \"ReactionCoefficients\", \"SpatialDimension\", \"Stationary\", \"SystemSize\", \"Transient\"}\nDefaultValues: None\nNValues: None\nFormatValues: NDSolve`FEM`FEMDiscretizationDump`form:NDSolve`FEM`PDECoefficientData[{_, _, _, _}, _Integer, _Integer, _, _List, _] := NDSolve`FEM`FEMDiscretizationDump`FormatPDECoefficientData[NDSolve`FEM`FEMDiscretizationDump`form]\nMakeBoxes[NDSolve`FEM`FEMDiscretizationDump`form:NDSolve`FEM`PDECoefficientData[{_, _, _, _}, _Integer, _Integer, _, _List, _], NDSolve`FEM`FEMDiscretizationDump`fmt_] ^:= BoxForm`SuppressedBoxForm[NDSolve`FEM`FEMDiscretizationDump`FormatPDECoefficientData[NDSolve`FEM`FEMDiscretizationDump`form], NDSolve`FEM`FEMDiscretizationDump`form, NDSolve`FEM`FEMDiscretizationDump`fmt]\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`PDECoefficientData",
	"NDSolve`FEM`PDEMethodDataQ":"ObjectType: Symbol\nUsage: NDSolve`FEM`PDEMethodDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`PDEMethodDataQ[NDSolve`FEM`FEMDiscretizationDump`d_] := Head[NDSolve`FEM`FEMDiscretizationDump`d] === NDSolve`FEM`FEMMethodData\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`PDEMethodDataQ",
	"Periodic`Private`PDEquivalencePartition":"ObjectType: Symbol\nUsage: Periodic`Private`PDEquivalencePartition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDEquivalencePartition[{}, _] := {}\nPeriodic`Private`PDEquivalencePartition[{Periodic`Private`PeriodicToolsDump`e_}, _] := {{Periodic`Private`PeriodicToolsDump`e}}\nPeriodic`Private`PDEquivalencePartition[Periodic`Private`PeriodicToolsDump`elts_List, Periodic`Private`PeriodicToolsDump`test_] := Fold[Periodic`Private`PeriodicToolsDump`updatePartition[#1, #2, Periodic`Private`PeriodicToolsDump`test] & , {{First[Periodic`Private`PeriodicToolsDump`elts]}}, Rest[Periodic`Private`PeriodicToolsDump`elts]]\nPeriodic`Private`PDEquivalencePartition[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDEquivalencePartition",
	"NDSolve`FEM`PDESolve":"ObjectType: Symbol\nUsage: NDSolve`FEM`PDESolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`PDESolve[NDSolve`FEM`NonlinearSolversDump`pdec_NDSolve`FEM`PDECoefficientData, NDSolve`FEM`NonlinearSolversDump`ibcs_NDSolve`FEM`BoundaryConditionData, (NDSolve`FEM`NonlinearSolversDump`vd_)?NDSolve`FEM`NonlinearSolversDump`vdQ, (NDSolve`FEM`NonlinearSolversDump`sdIn_)?NDSolve`FEM`NonlinearSolversDump`sdQ, NDSolve`FEM`NonlinearSolversDump`md_NDSolve`FEM`FEMMethodData, NDSolve`FEM`NonlinearSolversDump`msghead_Symbol:NDSolve`FEM`PDESolve, NDSolve`FEM`NonlinearSolversDump`opts:OptionsPattern[NDSolve`FEM`PDESolve]] := With[{NDSolve`FEM`NonlinearSolversDump`res = Catch[NDSolve`FEM`NonlinearSolversDump`iPDESolve[NDSolve`FEM`NonlinearSolversDump`pdec, NDSolve`FEM`NonlinearSolversDump`ibcs, NDSolve`FEM`NonlinearSolversDump`vd, NDSolve`FEM`NonlinearSolversDump`sdIn, NDSolve`FEM`NonlinearSolversDump`md, NDSolve`FEM`NonlinearSolversDump`msghead, NDSolve`FEM`NonlinearSolversDump`opts], NDSolve`FEM`FEMError[___]]}, NDSolve`FEM`NonlinearSolversDump`res \/; Head[Unevaluated[NDSolve`FEM`NonlinearSolversDump`res]] =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DeployBoundaryConditionsOptions -> Automatic, FindRootOptions -> Automatic, LinearSolver -> Automatic}\nAttributes: {}\nFullName: NDSolve`FEM`PDESolve",
	"Periodic`Private`PDLimit":"ObjectType: Symbol\nUsage: Periodic`Private`PDLimit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDLimit[Periodic`Private`PeriodicToolsDump`e__] := Block[{Periodic`Private`PeriodicToolsDump`res}, Periodic`Private`PeriodicToolsDump`res = TimeConstrained[Quiet[Asymptotics`ClassicLimit[Periodic`Private`PeriodicToolsDump`e]], Periodic`Private`PeriodicToolsDump`$PDTimeConstraint, $Failed]; Periodic`Private`PeriodicToolsDump`res \/; FreeQ[Periodic`Private`PeriodicToolsDump`res, $Failed | Limit | Interval | Indeterminate]]\nPeriodic`Private`PDLimit[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDLimit",
	"Periodic`Private`PDNotPossibleZeroQ":"ObjectType: Symbol\nUsage: Periodic`Private`PDNotPossibleZeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDNotPossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr_] \/;  !ListQ[Periodic`Private`PeriodicToolsDump`expr] := Quiet[Check[ !PossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr], False]]\nPeriodic`Private`PDNotPossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr_] \/; ListQ[Periodic`Private`PeriodicToolsDump`expr] := Quiet[Check[ !And @@ Flatten[PossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr]], False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDNotPossibleZeroQ",
	"Periodic`Private`PDPeriodicNotPresentQ":"ObjectType: Symbol\nUsage: Periodic`Private`PDPeriodicNotPresentQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDPeriodicNotPresentQ[Periodic`Private`PeriodicToolsDump`expr_] := Internal`LiterallyAbsentQ[Periodic`Private`PeriodicToolsDump`expr, Periodic`Private`PeriodicToolsDump`$AllPeriodicHeads]\nPeriodic`Private`PDPeriodicNotPresentQ[___] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDPeriodicNotPresentQ",
	"Periodic`Private`PDPolynomialDecompose":"ObjectType: Symbol\nUsage: Periodic`Private`PDPolynomialDecompose\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDPolynomialDecompose[Periodic`Private`PeriodicToolsDump`expr_, Periodic`Private`PeriodicToolsDump`vars_, Periodic`Private`PeriodicToolsDump`type_:0] := Block[{Periodic`Private`PeriodicToolsDump`res, Periodic`Private`PeriodicToolsDump`res1}, Periodic`Private`PeriodicToolsDump`res = Catch[Periodic`Private`PeriodicToolsDump`res1 = Periodic`Private`PeriodicToolsDump`SyntacticDecompose[Periodic`Private`PeriodicToolsDump`expr, Periodic`Private`PeriodicToolsDump`vars, Periodic`Private`PeriodicToolsDump`type]; If[FreeQ[Periodic`Private`PeriodicToolsDump`res1, $Failed], Throw[Periodic`Private`PeriodicToolsDump`res1]]; Throw[$Failed]]; Periodic`Private`PeriodicToolsDump`res \/; FreeQ[Periodic`Private`PeriodicToolsDump`res, $Failed]]\nPeriodic`Private`PDPolynomialDecompose[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDPolynomialDecompose",
	"Periodic`Private`PDPositiveDecreasingSequence":"ObjectType: Symbol\nUsage: Periodic`Private`PDPositiveDecreasingSequence\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDPositiveDecreasingSequence[Periodic`Private`PeriodicToolsDump`f_, Periodic`Private`PeriodicToolsDump`n_] \/; FreeQ[Periodic`Private`PeriodicToolsDump`f, Periodic`Private`PeriodicToolsDump`n] := False\nPeriodic`Private`PDPositiveDecreasingSequence[Periodic`Private`PeriodicToolsDump`f_, Periodic`Private`PeriodicToolsDump`n_] \/; PolynomialQ[Periodic`Private`PeriodicToolsDump`f, Periodic`Private`PeriodicToolsDump`n] := False\nPeriodic`Private`PDPositiveDecreasingSequence[Periodic`Private`PeriodicToolsDump`f_, Periodic`Private`PeriodicToolsDump`n_] \/; Periodic`Private`PeriodicToolsDump`PDRationalQ[Periodic`Private`PeriodicToolsDump`f, Periodic`Private`PeriodicToolsDump`n] := Block[{Periodic`Private`PeriodicToolsDump`res, Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`q}, {Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`q} = ({Numerator[#1], Denominator[#1]} & )[Together[Periodic`Private`PeriodicToolsDump`f]]; Periodic`Private`PeriodicToolsDump`res = Which[Exponent[Periodic`Private`PeriodicToolsDump`q, Periodic`Private`PeriodicToolsDump`n] < Exponent[Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`n], False, Exponent[Periodic`Private`PeriodicToolsDump`q, Periodic`Private`PeriodicToolsDump`n] == Exponent[Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`n], $Failed, Exponent[Periodic`Private`PeriodicToolsDump`q, Periodic`Private`PeriodicToolsDump`n] > Exponent[Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`n], Coefficient[Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`n, Exponent[Periodic`Private`PeriodicToolsDump`p, Periodic`Private`PeriodicToolsDump`n]]\/Coefficient[Periodic`Private`PeriodicToolsDump`q, Periodic`Private`PeriodicToolsDump`n, Exponent[Periodic`Private`PeriodicToolsDump`q, Periodic`Private`PeriodicToolsDump`n]] > 0, True, $Failed]; Periodic`Private`PeriodicToolsDump`res \/; FreeQ[Periodic`Private`PeriodicToolsDump`res, $Failed]]\nPeriodic`Private`PDPositiveDecreasingSequence[Periodic`Private`PeriodicToolsDump`f_, Periodic`Private`PeriodicToolsDump`n_] := Block[{Periodic`Private`PeriodicToolsDump`res, Periodic`Private`PeriodicToolsDump`res1, Periodic`Private`PeriodicToolsDump`g}, Periodic`Private`PeriodicToolsDump`g = Sum`SumCertificateForHypergeometricTerm[Periodic`Private`PeriodicToolsDump`f, Periodic`Private`PeriodicToolsDump`n]; (Periodic`Private`PeriodicToolsDump`res1 = Periodic`Private`PDReduce[Inequality[0, LessEqual, Periodic`Private`PeriodicToolsDump`g, Less, 1] && Element[Periodic`Private`PeriodicToolsDump`n, Integers], Periodic`Private`PeriodicToolsDump`n]; (Periodic`Private`PeriodicToolsDump`res = Periodic`Private`PeriodicToolsDump`res1 \/. {Element[Periodic`Private`PeriodicToolsDump`n, Integers] -> True, Periodic`Private`PeriodicToolsDump`n >= _ -> True, Periodic`Private`PeriodicToolsDump`n > _ -> True}; Periodic`Private`PeriodicToolsDump`res \/; FreeQ[Periodic`Private`PeriodicToolsDump`res, Periodic`Private`PeriodicToolsDump`n]) \/; FreeQ[Periodic`Private`PeriodicToolsDump`res1, $Failed]) \/; FreeQ[Periodic`Private`PeriodicToolsDump`g, $Failed]]\nPeriodic`Private`PDPositiveDecreasingSequence[Periodic`Private`PeriodicToolsDump`f_, Periodic`Private`PeriodicToolsDump`n_] := Block[{Periodic`Private`PeriodicToolsDump`res, Periodic`Private`PeriodicToolsDump`res1}, Periodic`Private`PeriodicToolsDump`res1 = Periodic`Private`PDReduce[0 <= (Periodic`Private`PeriodicToolsDump`f \/. Periodic`Private`PeriodicToolsDump`n -> Periodic`Private`PeriodicToolsDump`n + 1) <= Periodic`Private`PeriodicToolsDump`f && Element[Periodic`Private`PeriodicToolsDump`n, Integers], Periodic`Private`PeriodicToolsDump`n]; (Periodic`Private`PeriodicToolsDump`res = Periodic`Private`PeriodicToolsDump`res1 \/. {Element[Periodic`Private`PeriodicToolsDump`n, Integers] -> True, Periodic`Private`PeriodicToolsDump`n >= _ -> True, Periodic`Private`PeriodicToolsDump`n > _ -> True}; Periodic`Private`PeriodicToolsDump`res \/; FreeQ[Periodic`Private`PeriodicToolsDump`res, Periodic`Private`PeriodicToolsDump`n]) \/; FreeQ[Periodic`Private`PeriodicToolsDump`res1, $Failed]]\nPeriodic`Private`PDPositiveDecreasingSequence[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDPositiveDecreasingSequence",
	"Periodic`Private`PDPossibleZeroQ":"ObjectType: Symbol\nUsage: Periodic`Private`PDPossibleZeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDPossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr_] \/;  !ListQ[Periodic`Private`PeriodicToolsDump`expr] := Quiet[Check[PossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr], False]]\nPeriodic`Private`PDPossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr_] \/; ListQ[Periodic`Private`PeriodicToolsDump`expr] := Quiet[Check[And @@ Flatten[PossibleZeroQ[Periodic`Private`PeriodicToolsDump`expr]], False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDPossibleZeroQ",
	"Periodic`Private`PDReduce":"ObjectType: Symbol\nUsage: Periodic`Private`PDReduce\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDReduce[Periodic`Private`PeriodicToolsDump`e__] := TimeConstrained[Quiet[Reduce[Periodic`Private`PeriodicToolsDump`e]], Periodic`Private`PeriodicToolsDump`$PDTimeConstraint, $Failed]\nPeriodic`Private`PDReduce[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDReduce",
	"Periodic`Private`PDValidExpressionQ":"ObjectType: Symbol\nUsage: Periodic`Private`PDValidExpressionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDValidExpressionQ[Periodic`Private`PeriodicToolsDump`expr_] := Internal`PrecAccur[Periodic`Private`PeriodicToolsDump`expr] === Infinity && Internal`LiterallyAbsentQ[Periodic`Private`PeriodicToolsDump`expr, Periodic`Private`PeriodicToolsDump`$BlackList]\nPeriodic`Private`PDValidExpressionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDValidExpressionQ",
	"Periodic`Private`PDWellDefinedFunctionQ":"ObjectType: Symbol\nUsage: Periodic`Private`PDWellDefinedFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`Private`PDWellDefinedFunctionQ[Periodic`Private`PeriodicToolsDump`expr_, Periodic`Private`PeriodicToolsDump`x_] := Block[{Periodic`Private`PeriodicToolsDump`res}, Periodic`Private`PeriodicToolsDump`res = Visualization`VisualizationDiscontinuities[Periodic`Private`PeriodicToolsDump`expr, Periodic`Private`PeriodicToolsDump`x]; If[Periodic`Private`PeriodicToolsDump`res === {}, True, FreeQ[Refine[Periodic`Private`PeriodicToolsDump`res[[All,1]] \/. {LessEqual -> Less, GreaterEqual -> Greater}], Periodic`Private`PeriodicToolsDump`x]] \/; ListQ[Periodic`Private`PeriodicToolsDump`res]]\nPeriodic`Private`PDWellDefinedFunctionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`Private`PDWellDefinedFunctionQ",
	"Image`TransformsDump`PeaksComponents":"ObjectType: Symbol\nUsage: Image`TransformsDump`PeaksComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`PeaksComponents[Image`TransformsDump`img_, Image`TransformsDump`t_, Image`TransformsDump`antiCyclicQ_:True] := Module[{Image`TransformsDump`c, Image`TransformsDump`left, Image`TransformsDump`right, Image`TransformsDump`h2, Image`TransformsDump`rules}, Image`TransformsDump`c = MorphologicalComponents[MaxFilter[Binarize[Image`TransformsDump`img, Image`TransformsDump`t], 1]]; If[ !Image`TransformsDump`antiCyclicQ, Return[Image`TransformsDump`c]]; Image`TransformsDump`h2 = Floor[First[Dimensions[Image`TransformsDump`c]]\/2] + 1; Image`TransformsDump`left = Image`TransformsDump`c[[1 ;; Image`TransformsDump`h2,1]]; Image`TransformsDump`right = Reverse[Image`TransformsDump`c[[-Image`TransformsDump`h2 ;; All,-1]]]; Image`TransformsDump`right = Partition[Image`TransformsDump`right, 3, 1, {2, 2}, Image`TransformsDump`right[[{-1, 1}]]]; Image`TransformsDump`rules = DeleteDuplicates[Flatten[Cases[Transpose[{Image`TransformsDump`left, Image`TransformsDump`right}], {Image`TransformsDump`l:Except[0], Image`TransformsDump`r_} :> Thread[DeleteCases[Image`TransformsDump`r, 0] -> Image`TransformsDump`l]]]]; Image`TransformsDump`rules = Dispatch[Flatten[({First[#1], Thread[#1[[2 ;; All,2]] -> #1[[1,2]]]} & ) \/@ GatherBy[Image`TransformsDump`rules, First]]]; Image`TransformsDump`c \/. Image`TransformsDump`rules]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`PeaksComponents",
	"StochasticCalculus`PearsonDiffusionProcess":"ObjectType: Symbol\nUsage: StochasticCalculus`PearsonDiffusionProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StochasticCalculus`PearsonDiffusionProcess",
	"JLink`PeekClasses":"ObjectType: Symbol\nUsage: LoadedJavaClasses[] returns a list of the classes currently loaded into Java by the Wolfram Language. It is intended to be used only as a debugging aid.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: JLink`LoadedJavaClasses[] := JLink`LoadedJavaClasses[JLink`Package`getDefaultJVM[]]\nJLink`LoadedJavaClasses[JLink`Misc`Private`jvm:_JLink`JVM | Null] := If[JLink`Package`checkJVM[JLink`Misc`Private`jvm], JLink`Package`classFromID \/@ JLink`Package`jPeekClasses[JLink`Misc`Private`jvm], $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: JLink`LoadedJavaClasses",
	"Internal`PerfectPower":"ObjectType: Symbol\nUsage: Internal`PerfectPower\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PerfectPower",
	"SurfaceGraphics`Methods`Perimeter":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Perimeter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Perimeter",
	"Internal`Periodicals":"ObjectType: Symbol\nUsage: Internal`Periodicals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`Periodicals",
	"Periodic`PeriodicCommensurable":"ObjectType: Symbol\nUsage: Periodic`PeriodicCommensurable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicCommensurable[Periodic`PeriodicLibraryDump`x_] := Periodic`PeriodicLibraryDump`x\nPeriodic`PeriodicCommensurable[(Periodic`PeriodicLibraryDump`x_)..] := Periodic`PeriodicLibraryDump`x\nPeriodic`PeriodicCommensurable[Periodic`PeriodicLibraryDump`p__] \/; VectorQ[{Periodic`PeriodicLibraryDump`p},  !ListQ[#1] & ] := Block[{Periodic`PeriodicLibraryDump`res, Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`d, Periodic`PeriodicLibraryDump`n, Periodic`PeriodicLibraryDump`q}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`LCP[Periodic`PeriodicLibraryDump`p]; Periodic`PeriodicLibraryDump`res \/; FreeQ[Periodic`PeriodicLibraryDump`res, $Failed]]\nPeriodic`PeriodicCommensurable[Periodic`PeriodicLibraryDump`p__] \/; Or @@ ListQ \/@ {Periodic`PeriodicLibraryDump`p} := Block[{Periodic`PeriodicLibraryDump`res, Periodic`PeriodicLibraryDump`res1, Periodic`PeriodicLibraryDump`q}, Periodic`PeriodicLibraryDump`q = (If[ListQ[#1], #1, {#1}] & ) \/@ {Periodic`PeriodicLibraryDump`p}; Periodic`PeriodicLibraryDump`res1 = Flatten[Outer[Periodic`PeriodicCommensurable[##1] & , Sequence @@ Periodic`PeriodicLibraryDump`q], Length[Periodic`PeriodicLibraryDump`q] - 1]; (Periodic`PeriodicLibraryDump`res = Select[Periodic`PeriodicLibraryDump`res1, FreeQ[#1, $Failed] & ]; If[Length[Periodic`PeriodicLibraryDump`res] == 1, First[Periodic`PeriodicLibraryDump`res], Periodic`PeriodicLibraryDump`res] \/; Periodic`PeriodicLibraryDump`res =!= {}) \/; ListQ[Periodic`PeriodicLibraryDump`res1]]\nPeriodic`PeriodicCommensurable[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicCommensurable",
	"Periodic`PeriodicCommensurableQ":"ObjectType: Symbol\nUsage: Periodic`PeriodicCommensurableQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicCommensurableQ[_] := True\nPeriodic`PeriodicCommensurableQ[Periodic`PeriodicLibraryDump`x___, _?Periodic`Private`PDPossibleZeroQ, Periodic`PeriodicLibraryDump`z___] := Periodic`PeriodicCommensurableQ[Periodic`PeriodicLibraryDump`x, Periodic`PeriodicLibraryDump`z]\nPeriodic`PeriodicCommensurableQ[Periodic`PeriodicLibraryDump`x_, Periodic`PeriodicLibraryDump`y_] := Assumptions`ARationalQ[Periodic`PeriodicLibraryDump`x\/Periodic`PeriodicLibraryDump`y]\nPeriodic`PeriodicCommensurableQ[Periodic`PeriodicLibraryDump`x__] := VectorQ[Transpose[{Most[{Periodic`PeriodicLibraryDump`x}], Rest[{Periodic`PeriodicLibraryDump`x}]}], Assumptions`ARationalQ[Divide @@ #1] & ]\nPeriodic`PeriodicCommensurableQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicCommensurableQ",
	"Asymptotics`PeriodicDecomposition":"ObjectType: Symbol\nUsage: Asymptotics`PeriodicDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Asymptotics`PeriodicDecomposition[Asymptotics`AsymptoticsUtilsDump`e_, Asymptotics`AsymptoticsUtilsDump`x_, Asymptotics`AsymptoticsUtilsDump`asm_:False] := Module[{Asymptotics`AsymptoticsUtilsDump`T, Asymptotics`AsymptoticsUtilsDump`f, Asymptotics`AsymptoticsUtilsDump`g, Asymptotics`AsymptoticsUtilsDump`p, Asymptotics`AsymptoticsUtilsDump`ff, Asymptotics`AsymptoticsUtilsDump`k}, Asymptotics`AsymptoticsUtilsDump`p = Reduce`PositivePeriod[Asymptotics`AsymptoticsUtilsDump`e, Asymptotics`AsymptoticsUtilsDump`x]; If[Asymptotics`AsymptoticsUtilsDump`asm && Asymptotics`AsymptoticsUtilsDump`p === $Failed, Asymptotics`AsymptoticsUtilsDump`p = FunctionPeriod[Asymptotics`AsymptoticsUtilsDump`e, Asymptotics`AsymptoticsUtilsDump`x]; If[Head[Asymptotics`AsymptoticsUtilsDump`p] === FunctionPeriod ||  !Assumptions`APositive[Asymptotics`AsymptoticsUtilsDump`p], Asymptotics`AsymptoticsUtilsDump`p = $Failed]]; If[Asymptotics`AsymptoticsUtilsDump`p =!= $Failed, Return[{Asymptotics`AsymptoticsUtilsDump`e, Asymptotics`AsymptoticsUtilsDump`x, Asymptotics`AsymptoticsUtilsDump`p}]]; Asymptotics`AsymptoticsUtilsDump`ff = Catch[Asymptotics`AsymptoticsUtilsDump`unidec[Asymptotics`AsymptoticsUtilsDump`e, Asymptotics`AsymptoticsUtilsDump`x, Asymptotics`AsymptoticsUtilsDump`T]]; If[ !ListQ[Asymptotics`AsymptoticsUtilsDump`ff], Return[$Failed]]; Asymptotics`AsymptoticsUtilsDump`k = Length[Asymptotics`AsymptoticsUtilsDump`ff]; If[Asymptotics`AsymptoticsUtilsDump`k == 1, Return[$Failed]]; While[Asymptotics`AsymptoticsUtilsDump`k > 1 && Asymptotics`AsymptoticsUtilsDump`p === $Failed, Asymptotics`AsymptoticsUtilsDump`k--; Asymptotics`AsymptoticsUtilsDump`f = (Composition @@ Take[Asymptotics`AsymptoticsUtilsDump`ff, Asymptotics`AsymptoticsUtilsDump`k])[Asymptotics`AsymptoticsUtilsDump`x]; Asymptotics`AsymptoticsUtilsDump`p = Reduce`PositivePeriod[Asymptotics`AsymptoticsUtilsDump`f, Asymptotics`AsymptoticsUtilsDump`x]; If[Asymptotics`AsymptoticsUtilsDump`asm && Asymptotics`AsymptoticsUtilsDump`p === $Failed, Asymptotics`AsymptoticsUtilsDump`p = FunctionPeriod[Asymptotics`AsymptoticsUtilsDump`e, Asymptotics`AsymptoticsUtilsDump`x]; If[Head[Asymptotics`AsymptoticsUtilsDump`p] === FunctionPeriod ||  !Assumptions`APositive[Asymptotics`AsymptoticsUtilsDump`p], Asymptotics`AsymptoticsUtilsDump`p = $Failed]]]; If[Asymptotics`AsymptoticsUtilsDump`p === $Failed, Return[$Failed]]; Asymptotics`AsymptoticsUtilsDump`g = (Composition @@ Drop[Asymptotics`AsymptoticsUtilsDump`ff, Asymptotics`AsymptoticsUtilsDump`k])[Asymptotics`AsymptoticsUtilsDump`x]; If[Internal`SyntacticNegativeQ[Asymptotics`AsymptoticsUtilsDump`g], Asymptotics`AsymptoticsUtilsDump`g = -Asymptotics`AsymptoticsUtilsDump`g; Asymptotics`AsymptoticsUtilsDump`f = Asymptotics`AsymptoticsUtilsDump`f \/. Asymptotics`AsymptoticsUtilsDump`x -> -Asymptotics`AsymptoticsUtilsDump`x]; {Asymptotics`AsymptoticsUtilsDump`f, Asymptotics`AsymptoticsUtilsDump`g, Asymptotics`AsymptoticsUtilsDump`p}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Asymptotics`PeriodicDecomposition",
	"Reduce`PeriodicDiophantineReduce":"ObjectType: Symbol\nUsage: Reduce`PeriodicDiophantineReduce\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PeriodicDiophantineReduce[System`DiophantineDump`a_, System`DiophantineDump`vars_, System`DiophantineDump`qflag_] := If[System`DiophantineDump`PeriodicDiophantineReduceFlag, Block[{System`DiophantineDump`PeriodicDiophantineReduceFlag = False}, System`DiophantineDump`periodicDiophReduce[System`DiophantineDump`a, System`DiophantineDump`vars, System`DiophantineDump`qflag]], $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PeriodicDiophantineReduce",
	"Periodic`PeriodicEvaluation":"ObjectType: Symbol\nUsage: Periodic`PeriodicEvaluation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicEvaluation[Periodic`PeriodicEvaluationDump`expr_Periodic`PeriodicEvaluationDump`PeriodicFunction, Periodic`PeriodicEvaluationDump`x_] \/; System`Private`ValidQ[Periodic`PeriodicEvaluationDump`expr] := Block[{Periodic`PeriodicEvaluationDump`res}, Periodic`PeriodicEvaluationDump`res = Periodic`PeriodicEvaluationDump`PeriodicFunctionEvaluation[Periodic`PeriodicEvaluationDump`expr, Periodic`PeriodicEvaluationDump`x]; Periodic`PeriodicEvaluationDump`res \/; Periodic`PeriodicEvaluationDump`res =!= $Failed]\nPeriodic`PeriodicEvaluation[Periodic`PeriodicEvaluationDump`expr_Periodic`PeriodicEvaluationDump`PeriodicSequence, Periodic`PeriodicEvaluationDump`k_] \/; System`Private`ValidQ[Periodic`PeriodicEvaluationDump`expr] := Block[{Periodic`PeriodicEvaluationDump`res}, Periodic`PeriodicEvaluationDump`res = Periodic`PeriodicEvaluationDump`PeriodicSequenceEvaluation[Periodic`PeriodicEvaluationDump`expr, Periodic`PeriodicEvaluationDump`k]; Periodic`PeriodicEvaluationDump`res \/; Periodic`PeriodicEvaluationDump`res =!= $Failed]\nPeriodic`PeriodicEvaluation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicEvaluation",
	"Charting`PeriodicFrameTicks":"ObjectType: Symbol\nUsage: Charting`PeriodicFrameTicks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PeriodicFrameTicks[(System`SampledPlotsDump`period_)?NumberQ] := Automatic\nSubValues: Charting`PeriodicFrameTicks[System`SampledPlotsDump`period_][System`SampledPlotsDump`min_, System`SampledPlotsDump`max_] \/; System`SampledPlotsDump`max - System`SampledPlotsDump`min >= System`SampledPlotsDump`period := Block[{System`SampledPlotsDump`major, System`SampledPlotsDump`minor}, {System`SampledPlotsDump`major, System`SampledPlotsDump`minor} = FindDivisions[{System`SampledPlotsDump`min, System`SampledPlotsDump`max}\/System`SampledPlotsDump`period, {6, 2}]*System`SampledPlotsDump`period; System`SampledPlotsDump`minor = Complement[Union[Flatten[System`SampledPlotsDump`minor]], System`SampledPlotsDump`major]; Join[({#1, Spacer[{0, 0}]} & ) \/@ System`SampledPlotsDump`major, ({#1, Spacer[{0, 0}], {0.005, 0}} & ) \/@ System`SampledPlotsDump`minor]]\nCharting`PeriodicFrameTicks[System`SampledPlotsDump`period_][System`SampledPlotsDump`min_, System`SampledPlotsDump`max_] := Automatic\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PeriodicFrameTicks",
	"Periodic`PeriodicFunctionDecompose":"ObjectType: Symbol\nUsage: Periodic`PeriodicFunctionDecompose\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicFunctionDecompose[Periodic`PeriodicLibraryDump`expr_, Periodic`PeriodicLibraryDump`x_, Times] := Block[{Periodic`PeriodicLibraryDump`res}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`PeriodicFunctionHeadDecomposition[Periodic`PeriodicLibraryDump`expr, Periodic`PeriodicLibraryDump`x, Times]; Periodic`PeriodicLibraryDump`res \/; FreeQ[Periodic`PeriodicLibraryDump`res, $Failed]]\nPeriodic`PeriodicFunctionDecompose[Periodic`PeriodicLibraryDump`expr_, Periodic`PeriodicLibraryDump`x_, Plus] := Block[{Periodic`PeriodicLibraryDump`res}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`PeriodicFunctionHeadDecomposition[Periodic`PeriodicLibraryDump`expr, Periodic`PeriodicLibraryDump`x, Plus]; Periodic`PeriodicLibraryDump`res \/; FreeQ[Periodic`PeriodicLibraryDump`res, $Failed]]\nPeriodic`PeriodicFunctionDecompose[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicFunctionDecompose",
	"Periodic`PeriodicFunctionPeriod":"ObjectType: Symbol\nUsage: Periodic`PeriodicFunctionPeriod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicFunctionPeriod[Periodic`PeriodicFunctionDump`expr__] \/; Periodic`Private`PDValidExpressionQ[{Periodic`PeriodicFunctionDump`expr}] := Block[{Periodic`PeriodicFunctionDump`res}, Periodic`PeriodicFunctionDump`res = Periodic`PeriodicFunctionDump`periodicFunctionPeriod[Periodic`PeriodicFunctionDump`expr]; Periodic`PeriodicFunctionDump`res \/; FreeQ[Periodic`PeriodicFunctionDump`res, $Failed]]\nPeriodic`PeriodicFunctionPeriod[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicFunctionPeriod",
	"Periodic`PeriodicFunctionQ":"ObjectType: Symbol\nUsage: Periodic`PeriodicFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicFunctionQ[Periodic`PeriodicFunctionDump`expr__] := Periodic`PeriodicFunctionPeriod[Periodic`PeriodicFunctionDump`expr] =!= $Failed\nPeriodic`PeriodicFunctionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicFunctionQ",
	"Reduce`PeriodicityBounds":"ObjectType: Symbol\nUsage: Reduce`PeriodicityBounds\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PeriodicityBounds[System`ReduceUtilsDump`f_, System`ReduceUtilsDump`constr_, System`ReduceUtilsDump`vars_List] := With[{System`ReduceUtilsDump`bds = System`ReduceUtilsDump`fastbounds[System`ReduceUtilsDump`constr, System`ReduceUtilsDump`vars, Infinity]}, Which[ListQ[System`ReduceUtilsDump`bds], And @@ MapThread[System`ReduceUtilsDump`perbds[System`ReduceUtilsDump`f, System`ReduceUtilsDump`constr, #1, Ceiling[#2[[1]]], Floor[#2[[2]]]] & , {System`ReduceUtilsDump`vars, System`ReduceUtilsDump`bds}], System`ReduceUtilsDump`bds === False, False, True, True]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PeriodicityBounds",
	"GIS`PeriodicProjectionQ":"ObjectType: Symbol\nUsage: GIS`PeriodicProjection[proj] returns True if it is safe to use Mod with longitudes, and False otherwise. This includes all azimuthal projections and some more.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PeriodicProjectionQ[\"GinzburgI\"] = True\nGIS`PeriodicProjectionQ[\"Gnomonic\"] = True\nGIS`PeriodicProjectionQ[\"GottMugnoloElliptical\"] = True\nGIS`PeriodicProjectionQ[\"Stereographic\"] = True\nGIS`PeriodicProjectionQ[\"GottElliptical\"] = True\nGIS`PeriodicProjectionQ[\"CraigRetroazimuthal\"] = True\nGIS`PeriodicProjectionQ[\"Cassini\"] = True\nGIS`PeriodicProjectionQ[\"TiltedPerspective\"] = True\nGIS`PeriodicProjectionQ[\"Wiechel\"] = True\nGIS`PeriodicProjectionQ[\"LambertAzimuthal\"] = True\nGIS`PeriodicProjectionQ[\"PeirceQuincuncial\"] = True\nGIS`PeriodicProjectionQ[\"ObliqueMercator\"] = True\nGIS`PeriodicProjectionQ[\"Airy\"] = True\nGIS`PeriodicProjectionQ[\"AzimuthalEquidistant\"] = True\nGIS`PeriodicProjectionQ[\"Littrow\"] = True\nGIS`PeriodicProjectionQ[\"TransverseMercator\"] = True\nGIS`PeriodicProjectionQ[\"DenoyerSemielliptical\"] = True\nGIS`PeriodicProjectionQ[\"GinzburgII\"] = True\nGIS`PeriodicProjectionQ[\"VerticalPerspective\"] = True\nGIS`PeriodicProjectionQ[\"Orthographic\"] = True\nGIS`PeriodicProjectionQ[{GIS`GeoMappingDump`name_String, ___}] := GIS`PeriodicProjectionQ[GIS`GeoMappingDump`name]\nGIS`PeriodicProjectionQ[GIS`GeoMappingDump`projection_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PeriodicProjectionQ",
	"Periodic`PeriodicSequenceDecompose":"ObjectType: Symbol\nUsage: Periodic`PeriodicSequenceDecompose\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicSequenceDecompose[Periodic`PeriodicLibraryDump`expr_, Periodic`PeriodicLibraryDump`n_, Times, Periodic`PeriodicLibraryDump`flag_:False] := Block[{Periodic`PeriodicLibraryDump`res}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`PeriodicSequenceHeadDecomposition[Periodic`PeriodicLibraryDump`expr, Periodic`PeriodicLibraryDump`n, Times, Periodic`PeriodicLibraryDump`flag]; Periodic`PeriodicLibraryDump`res \/; FreeQ[Periodic`PeriodicLibraryDump`res, $Failed]]\nPeriodic`PeriodicSequenceDecompose[Periodic`PeriodicLibraryDump`expr_, Periodic`PeriodicLibraryDump`n_, Plus, Periodic`PeriodicLibraryDump`flag_:False] := Block[{Periodic`PeriodicLibraryDump`res}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`PeriodicSequenceHeadDecomposition[Periodic`PeriodicLibraryDump`expr, Periodic`PeriodicLibraryDump`n, Plus, Periodic`PeriodicLibraryDump`flag]; Periodic`PeriodicLibraryDump`res \/; FreeQ[Periodic`PeriodicLibraryDump`res, $Failed]]\nPeriodic`PeriodicSequenceDecompose[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicSequenceDecompose",
	"Periodic`PeriodicSequencePeriod":"ObjectType: Symbol\nUsage: Periodic`PeriodicSequencePeriod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicSequencePeriod[Periodic`PeriodicSequenceDump`expr___] \/; Periodic`Private`PDValidExpressionQ[{Periodic`PeriodicSequenceDump`expr}] := Block[{Periodic`PeriodicSequenceDump`res}, Periodic`PeriodicSequenceDump`res = Periodic`PeriodicSequenceDump`periodicSequencePeriod[Periodic`PeriodicSequenceDump`expr]; Periodic`PeriodicSequenceDump`res \/; FreeQ[Periodic`PeriodicSequenceDump`res, $Failed]]\nPeriodic`PeriodicSequencePeriod[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicSequencePeriod",
	"Periodic`PeriodicSequenceQ":"ObjectType: Symbol\nUsage: Periodic`PeriodicSequenceQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicSequenceQ[Periodic`PeriodicSequenceDump`expr_, Periodic`PeriodicSequenceDump`x_, Periodic`PeriodicSequenceDump`opts___] := Periodic`PeriodicSequencePeriod[Periodic`PeriodicSequenceDump`expr, Periodic`PeriodicSequenceDump`x, Periodic`PeriodicSequenceDump`opts] =!= $Failed\nPeriodic`PeriodicSequenceQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicSequenceQ",
	"Periodic`PeriodicSequenceToPolynomialExponential":"ObjectType: Symbol\nUsage: Periodic`PeriodicSequenceToPolynomialExponential\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicSequenceToPolynomialExponential[Periodic`PeriodicLibraryDump`expr_, Periodic`PeriodicLibraryDump`n_, Periodic`PeriodicLibraryDump`type_:0] := Block[{Periodic`PeriodicLibraryDump`res}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`toPolynomialExponential[Periodic`PeriodicLibraryDump`expr, Periodic`PeriodicLibraryDump`n, Periodic`PeriodicLibraryDump`type]; Periodic`PeriodicLibraryDump`res \/; FreeQ[Periodic`PeriodicLibraryDump`res, $Failed]]\nPeriodic`PeriodicSequenceToPolynomialExponential[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicSequenceToPolynomialExponential",
	"Periodic`PeriodicSpecialTransformations":"ObjectType: Symbol\nUsage: Periodic`PeriodicSpecialTransformations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Periodic`PeriodicSpecialTransformations[Periodic`PeriodicLibraryDump`expr_, Periodic`PeriodicLibraryDump`x_] \/; Internal`LiterallyOccurringQ[Periodic`PeriodicLibraryDump`expr, Periodic`PeriodicLibraryDump`integerFunctions] := Block[{Periodic`PeriodicLibraryDump`res}, Periodic`PeriodicLibraryDump`res = Periodic`PeriodicLibraryDump`expr \/\/. {Ceiling[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] :> -Floor[-Periodic`PeriodicLibraryDump`a], Ceiling[Periodic`PeriodicLibraryDump`a_, Periodic`PeriodicLibraryDump`b_] \/;  !FreeQ[{Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`b}, Periodic`PeriodicLibraryDump`x] && Periodic`Private`PDNotPossibleZeroQ[Periodic`PeriodicLibraryDump`b] :> Periodic`PeriodicLibraryDump`b*Ceiling[Periodic`PeriodicLibraryDump`a\/Periodic`PeriodicLibraryDump`b], Floor[Periodic`PeriodicLibraryDump`a_] :> Periodic`PeriodicLibraryDump`floorToMod[Periodic`PeriodicLibraryDump`a], Floor[Periodic`PeriodicLibraryDump`a_, Periodic`PeriodicLibraryDump`b_] \/;  !FreeQ[{Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`b}, Periodic`PeriodicLibraryDump`x] && Periodic`Private`PDNotPossibleZeroQ[Periodic`PeriodicLibraryDump`b] :> Periodic`PeriodicLibraryDump`b*Floor[Periodic`PeriodicLibraryDump`a\/Periodic`PeriodicLibraryDump`b], FractionalPart[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ANonNegative[Periodic`PeriodicLibraryDump`a] :> Periodic`PeriodicLibraryDump`a - Floor[Periodic`PeriodicLibraryDump`a], FractionalPart[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ANegative[Periodic`PeriodicLibraryDump`a] :> Periodic`PeriodicLibraryDump`a - Floor[Periodic`PeriodicLibraryDump`a] - 1, FractionalPart[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ARealQ[Periodic`PeriodicLibraryDump`a] :> Periodic`PeriodicLibraryDump`a - Floor[Periodic`PeriodicLibraryDump`a] - Piecewise[{{0, Periodic`PeriodicLibraryDump`a >= 0}}, 1], IntegerPart[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ANonNegative[Periodic`PeriodicLibraryDump`a] :> Floor[Periodic`PeriodicLibraryDump`a], IntegerPart[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ANegative[Periodic`PeriodicLibraryDump`a] :> Floor[Periodic`PeriodicLibraryDump`a] + 1, IntegerPart[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ARealQ[Periodic`PeriodicLibraryDump`a] :> Floor[Periodic`PeriodicLibraryDump`a] + Piecewise[{{0, Periodic`PeriodicLibraryDump`a >= 0}}, 1], Quotient[Periodic`PeriodicLibraryDump`a_, Periodic`PeriodicLibraryDump`b_, Periodic`PeriodicLibraryDump`c_:0] \/;  !FreeQ[{Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`b, Periodic`PeriodicLibraryDump`c}, Periodic`PeriodicLibraryDump`x] && Periodic`Private`PDNotPossibleZeroQ[Periodic`PeriodicLibraryDump`b] :> Floor[(Periodic`PeriodicLibraryDump`a - Periodic`PeriodicLibraryDump`c)\/Periodic`PeriodicLibraryDump`b], Round[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && TrueQ[Assumptions`AMod[Periodic`PeriodicLibraryDump`a - 1\/2, 2] == 1] :> Ceiling[Periodic`PeriodicLibraryDump`a - 1\/2] + 1, Round[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && TrueQ[(#1 =!= $Failed && #1 != 1 & )[Assumptions`AMod[Periodic`PeriodicLibraryDump`a - 1\/2, 2]]] :> Ceiling[Periodic`PeriodicLibraryDump`a - 1\/2], Round[Periodic`PeriodicLibraryDump`a_] \/;  !FreeQ[Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`x] && Assumptions`ARealQ[Periodic`PeriodicLibraryDump`a] :> Ceiling[Periodic`PeriodicLibraryDump`a - 1\/2] + Piecewise[{{1, Mod[Periodic`PeriodicLibraryDump`a - 1\/2, 2] == 1}}], Round[Periodic`PeriodicLibraryDump`a_, Periodic`PeriodicLibraryDump`b_] \/;  !FreeQ[{Periodic`PeriodicLibraryDump`a, Periodic`PeriodicLibraryDump`b}, Periodic`PeriodicLibraryDump`x] && Periodic`Private`PDNotPossibleZeroQ[Periodic`PeriodicLibraryDump`b] :> Periodic`PeriodicLibraryDump`b*Round[Periodic`PeriodicLibraryDump`a\/Periodic`PeriodicLibraryDump`b]}; Periodic`PeriodicLibraryDump`res \/; Internal`LiterallyAbsentQ[Periodic`PeriodicLibraryDump`res, Periodic`PeriodicLibraryDump`integerFunctions]]\nPeriodic`PeriodicSpecialTransformations[Periodic`PeriodicLibraryDump`expr_, ___] := Periodic`PeriodicLibraryDump`expr\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Periodic`PeriodicSpecialTransformations",
	"Charting`PeriodicTicks":"ObjectType: Symbol\nUsage: Charting`PeriodicTicks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PeriodicTicks[(System`SampledPlotsDump`period_)?NumberQ] := Automatic\nSubValues: Charting`PeriodicTicks[System`SampledPlotsDump`period_][System`SampledPlotsDump`min_, System`SampledPlotsDump`max_] \/; System`SampledPlotsDump`max - System`SampledPlotsDump`min >= System`SampledPlotsDump`period := Block[{System`SampledPlotsDump`major, System`SampledPlotsDump`minor}, {System`SampledPlotsDump`major, System`SampledPlotsDump`minor} = FindDivisions[{System`SampledPlotsDump`min, System`SampledPlotsDump`max}\/System`SampledPlotsDump`period, {6, 2}]*System`SampledPlotsDump`period; System`SampledPlotsDump`minor = Complement[Union[Flatten[System`SampledPlotsDump`minor]], System`SampledPlotsDump`major]; Join[({#1, #1} & ) \/@ System`SampledPlotsDump`major, ({#1, Spacer[{0, 0}], {0.005, 0}} & ) \/@ System`SampledPlotsDump`minor]]\nCharting`PeriodicTicks[System`SampledPlotsDump`period_][System`SampledPlotsDump`min_, System`SampledPlotsDump`max_] := Automatic\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PeriodicTicks",
	"System`InformationDump`Permissions":"ObjectType: Symbol\nUsage: System`InformationDump`Permissions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InformationDump`Permissions",
	"StructuredArray`PermutationMatrix":"ObjectType: Symbol\nUsage: StructuredArray`PermutationMatrix\nDocumentation: None\nOwnValues: None\nUpValues: StructuredArray`MakeStructuredData[StructuredArray`PermutationMatrix] ^= StructuredArray`PermutationMatrixDump`makeStructuredPermutationMatrixData\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Times, StructuredArray`PermutationMatrix, StructuredArray`ScalarQ] := StructuredArray`PermutationMatrixDump`PermutationTimesScalar\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[LinearSolve, StructuredArray`PermutationMatrix, VectorQ] = StructuredArray`PermutationMatrixDump`PermutationLinearSolve\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Inverse, StructuredArray`PermutationMatrix] = StructuredArray`PermutationMatrixDump`PermutationInverse\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Det, StructuredArray`PermutationMatrix] = Function[{StructuredArray`PermutationMatrixDump`fun, StructuredArray`PermutationMatrixDump`m}, Block[{StructuredArray`PermutationMatrixDump`c = StructuredArray`PermutationMatrixDump`m[\"Multiple\"], StructuredArray`PermutationMatrixDump`res = Signature[StructuredArray`PermutationMatrixDump`GetPermutation[StructuredArray`PermutationMatrixDump`m]]}, If[StructuredArray`PermutationMatrixDump`c === 1, StructuredArray`PermutationMatrixDump`res, StructuredArray`PermutationMatrixDump`res*StructuredArray`PermutationMatrixDump`c^Length[StructuredArray`PermutationMatrixDump`m]]]]\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Dot, StructuredArray`PermutationMatrix, StructuredArray`PermutationMatrix] = StructuredArray`PermutationMatrixDump`PermutationDot\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[D, StructuredArray`PermutationMatrix] = StructuredArray`PermutationMatrixDump`PermutationD\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Dot, StructuredArray`PermutationMatrix, StructuredArray`UnitaryMatrix] = StructuredArray`PermutationMatrixDump`PUDot\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Dot, StructuredArray`UnitaryMatrix, StructuredArray`PermutationMatrix] = StructuredArray`PermutationMatrixDump`PUDot\nStructuredArray`PermutationMatrix \/: StructuredArray`ValidateStructuredData[StructuredArray`PermutationMatrix, StructuredArray`StructuredData[StructuredArray`PermutationMatrixDump`dims_, StructuredArray`PermutationMatrixDump`data_]] := Module[{StructuredArray`PermutationMatrixDump`len = Length[StructuredArray`PermutationMatrixDump`data], StructuredArray`PermutationMatrixDump`n, StructuredArray`PermutationMatrixDump`p, StructuredArray`PermutationMatrixDump`c}, If[StructuredArray`PermutationMatrixDump`len < 1 || StructuredArray`PermutationMatrixDump`len > 2, Return[False, Module]]; StructuredArray`PermutationMatrixDump`p = First[StructuredArray`PermutationMatrixDump`data]; If[ !(VectorQ[StructuredArray`PermutationMatrixDump`p, Developer`MachineIntegerQ] && LinearAlgebra`Private`PermutationQ[StructuredArray`PermutationMatrixDump`p]), Return[False, Module]]; StructuredArray`PermutationMatrixDump`n = Length[StructuredArray`PermutationMatrixDump`p]; If[StructuredArray`PermutationMatrixDump`dims =!= {StructuredArray`PermutationMatrixDump`n, StructuredArray`PermutationMatrixDump`n}, Return[False, Module]]; If[StructuredArray`PermutationMatrixDump`len == 2, StructuredArray`PermutationMatrixDump`c = StructuredArray`PermutationMatrixDump`data[[2]]; If[ !StructuredArray`ScalarQ[StructuredArray`PermutationMatrixDump`c], Return[False, Module]]; ]; True]\nStructuredArray`StructuredPropertyList[StructuredArray`PermutationMatrix, _] ^= {}\nStructuredArray`CachedStructuredPropertyList[StructuredArray`PermutationMatrix, _] ^= {\"Multiple\", \"Permutation\"}\nStructuredArray`PermutationMatrix \/: StructuredArray`GetStructuredProperty[StructuredArray`PermutationMatrix, \"Permutation\", StructuredArray`StructuredData[_, {StructuredArray`PermutationMatrixDump`p_, ___}]] := StructuredArray`PermutationMatrixDump`p\nStructuredArray`PermutationMatrix \/: StructuredArray`GetStructuredProperty[StructuredArray`PermutationMatrix, \"Multiple\", StructuredArray`StructuredData[_, {_}]] := 1\nStructuredArray`PermutationMatrix \/: StructuredArray`GetStructuredProperty[StructuredArray`PermutationMatrix, \"Multiple\", StructuredArray`StructuredData[_, {StructuredArray`PermutationMatrixDump`p_, StructuredArray`PermutationMatrixDump`c_}]] := StructuredArray`PermutationMatrixDump`c\nStructuredArray`PermutationMatrix \/: StructuredArray`Destructure[StructuredArray`PermutationMatrix, StructuredArray`PermutationMatrixDump`m_StructuredArray, _] := Module[{StructuredArray`PermutationMatrixDump`p = StructuredArray`PermutationMatrixDump`m[\"Permutation\"], StructuredArray`PermutationMatrixDump`n, StructuredArray`PermutationMatrixDump`c = StructuredArray`PermutationMatrixDump`m[\"Multiple\"]}, StructuredArray`PermutationMatrixDump`n = Length[StructuredArray`PermutationMatrixDump`p]; SparseArray[Transpose[{Range[StructuredArray`PermutationMatrixDump`n], StructuredArray`PermutationMatrixDump`p}] -> StructuredArray`PermutationMatrixDump`c, {StructuredArray`PermutationMatrixDump`n, StructuredArray`PermutationMatrixDump`n}, N[0, Precision[StructuredArray`PermutationMatrixDump`c]]]]\nStructuredArray`StructuredElementFunction[StructuredArray`PermutationMatrix, StructuredArray`PermutationMatrixDump`sa_] ^:= With[{StructuredArray`PermutationMatrixDump`m = StructuredArray`PermutationMatrixDump`sa[\"Multiple\"], StructuredArray`PermutationMatrixDump`p = StructuredArray`PermutationMatrixDump`sa[\"Permutation\"]}, Function[{StructuredArray`PermutationMatrixDump`i, StructuredArray`PermutationMatrixDump`j}, StructuredArray`PermutationMatrixDump`m*Boole[Compile`GetElement[StructuredArray`PermutationMatrixDump`p, StructuredArray`PermutationMatrixDump`i] == StructuredArray`PermutationMatrixDump`j], Listable]]\nStructuredArray`StructuredTypeElements[StructuredArray`PermutationMatrix, StructuredArray`PermutationMatrixDump`sa_] ^:= StructuredArray`PermutationMatrixDump`sa[\"Multiple\"]*{0, 1}\nStructuredArray`StructuredN[StructuredArray`PermutationMatrix, StructuredArray`PermutationMatrixDump`f_, StructuredArray`PermutationMatrixDump`m_] ^:= Module[{StructuredArray`PermutationMatrixDump`c = StructuredArray`PermutationMatrixDump`m[\"Multiple\"], StructuredArray`PermutationMatrixDump`cn, StructuredArray`PermutationMatrixDump`res = StructuredArray`PermutationMatrixDump`m}, StructuredArray`PermutationMatrixDump`cn = StructuredArray`PermutationMatrixDump`f[StructuredArray`PermutationMatrixDump`c]; If[StructuredArray`PermutationMatrixDump`cn =!= StructuredArray`PermutationMatrixDump`c, StructuredArray`PermutationMatrixDump`res = StructuredArray`PermutationMatrixDump`SetMultiple[StructuredArray`PermutationMatrixDump`m, StructuredArray`PermutationMatrixDump`cn]]; StructuredArray`PermutationMatrixDump`res]\nStructuredArray`PermutationMatrix \/: StructuredArray`StructuredArrayAlgorithm[Dot, StructuredArray`PermutationMatrix, VectorQ | MatrixQ] = StructuredArray`PermutationMatrixDump`PermutationDot\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`a_StructuredArray`PermutationMatrix, BoxForm`fmt_] ^:= BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt] \/; Refresh[BoxForm`UseTextFormattingQ, None]\nMakeBoxes[StructuredArray`StructuredArrayBoxes`e:HoldPattern[StructuredArray`PermutationMatrix[___]], StructuredArray`StructuredArrayBoxes`fmt_] \/; BoxForm`UseIcons && StructuredArray`HeldStructuredArrayQ[StructuredArray`StructuredArrayBoxes`e] ^:= StructuredArray`MakeStructuredArrayBoxes[StructuredArray`StructuredArrayBoxes`e, StructuredArray`StructuredArrayBoxes`fmt]\nOptions: None\nAttributes: {}\nFullName: StructuredArray`PermutationMatrix",
	"GroupTheory`PermutationGroups`PermutationMaxWithError":"ObjectType: Symbol\nUsage: GroupTheory`PermutationGroups`PermutationMaxWithError\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroupTheory`PermutationGroups`PermutationMaxWithError",
	"LinearAlgebra`Private`PermutationQ":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`PermutationQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`PermutationQ",
	"SparseArray`PermutationQ":"ObjectType: Symbol\nUsage: SparseArray`PermutationQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`PermutationQ",
	"SparseArray`PermutationTolerance":"ObjectType: Symbol\nUsage: SparseArray`PermutationTolerance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`PermutationTolerance",
	"LinearAlgebra`LAPACK`PermutationToPivot":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`PermutationToPivot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`LAPACK`PermutationToPivot",
	"GroupTheory`PermutationGroups`PermutationWordSimplify":"ObjectType: Symbol\nUsage: GroupTheory`PermutationGroups`PermutationWordSimplify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroupTheory`PermutationGroups`PermutationWordSimplify",
	"ComputationalGeometry`Surface`Permute":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`Permute\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`Permute",
	"Finance`Solvers`PERPETUALLBFLSTACO":"ObjectType: Symbol\nUsage: Finance`Solvers`PERPETUALLBFLSTACO\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Finance`Solvers`PERPETUALLBFLSTACO[Finance`SolversDump`S_, Finance`SolversDump`Smin_, Finance`SolversDump`vol_, Finance`SolversDump`r_, Finance`SolversDump`d_] := Module[{Finance`SolversDump`partial, Finance`SolversDump`lambda1, Finance`SolversDump`lambda2, Finance`SolversDump`ff, Finance`SolversDump`x, Finance`SolversDump`xcritical, Finance`SolversDump`scritical, Finance`SolversDump`A1, Finance`SolversDump`A2}, Quiet[If[Finance`SolversDump`S <= 0 || Finance`SolversDump`Smin <= 0 || Finance`SolversDump`S < Finance`SolversDump`Smin || Finance`SolversDump`vol <= 0 || Finance`SolversDump`r < 0 || Finance`SolversDump`d <= 0, Indeterminate, Finance`SolversDump`partial = (Finance`SolversDump`r - Finance`SolversDump`d)\/Finance`SolversDump`vol^2; {Finance`SolversDump`lambda1, Finance`SolversDump`lambda2} = Finance`SolversDump`partial + 0.5 + {1, -1}*Sqrt[(Finance`SolversDump`partial + 0.5)^2 + (2*Finance`SolversDump`d)\/Finance`SolversDump`vol^2]; Finance`SolversDump`ff[Finance`SolversDump`z_] := Finance`SolversDump`z^(Finance`SolversDump`lambda1 - Finance`SolversDump`lambda2) - (Finance`SolversDump`lambda1*(1 - Finance`SolversDump`lambda2)*Finance`SolversDump`z + Finance`SolversDump`lambda1*Finance`SolversDump`lambda2)\/(Finance`SolversDump`lambda2*(1 - Finance`SolversDump`lambda1)*Finance`SolversDump`z + Finance`SolversDump`lambda1*Finance`SolversDump`lambda2); Finance`SolversDump`xcritical = Finance`SolversDump`x \/. FindRoot[Finance`SolversDump`ff[Finance`SolversDump`x] == 0, {Finance`SolversDump`x, 0.5}]; Finance`SolversDump`scritical = Finance`SolversDump`Smin\/Finance`SolversDump`xcritical; Finance`SolversDump`A1 = ((1 - Finance`SolversDump`lambda2)*Finance`SolversDump`xcritical + Finance`SolversDump`lambda2)\/((Finance`SolversDump`lambda2 - Finance`SolversDump`lambda1)*Finance`SolversDump`xcritical^Finance`SolversDump`lambda1); Finance`SolversDump`A2 = ((1 - Finance`SolversDump`lambda1)*Finance`SolversDump`xcritical + Finance`SolversDump`lambda1)\/((Finance`SolversDump`lambda1 - Finance`SolversDump`lambda2)*Finance`SolversDump`xcritical^Finance`SolversDump`lambda2); If[Finance`SolversDump`scritical <= Finance`SolversDump`S, Finance`SolversDump`S - Finance`SolversDump`Smin, Finance`SolversDump`S*Finance`SolversDump`A1*(Finance`SolversDump`Smin\/Finance`SolversDump`S)^Finance`SolversDump`lambda1 + Finance`SolversDump`S*Finance`SolversDump`A2*(Finance`SolversDump`Smin\/Finance`SolversDump`S)^Finance`SolversDump`lambda2]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Finance`Solvers`PERPETUALLBFLSTACO",
	"Finance`Solvers`PERPETUALLBFLSTAPO":"ObjectType: Symbol\nUsage: Finance`Solvers`PERPETUALLBFLSTAPO\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Finance`Solvers`PERPETUALLBFLSTAPO[Finance`SolversDump`S_, Finance`SolversDump`Smax_, Finance`SolversDump`vol_, Finance`SolversDump`r_, Finance`SolversDump`d_] := Module[{Finance`SolversDump`partial, Finance`SolversDump`lambda1, Finance`SolversDump`lambda2, Finance`SolversDump`ff, Finance`SolversDump`x, Finance`SolversDump`xcritical, Finance`SolversDump`scritical, Finance`SolversDump`B1, Finance`SolversDump`B2}, Quiet[If[Finance`SolversDump`S <= 0 || Finance`SolversDump`Smax <= 0 || Finance`SolversDump`Smax < Finance`SolversDump`S || Finance`SolversDump`vol <= 0 || Finance`SolversDump`r < 0 || Finance`SolversDump`d <= 0, Indeterminate, Finance`SolversDump`partial = (Finance`SolversDump`r - Finance`SolversDump`d)\/Finance`SolversDump`vol^2; {Finance`SolversDump`lambda1, Finance`SolversDump`lambda2} = (Finance`SolversDump`partial + 0.5) + {1, -1}*Sqrt[(Finance`SolversDump`partial + 0.5)^2 + (2*Finance`SolversDump`d)\/Finance`SolversDump`vol^2]; Finance`SolversDump`ff[Finance`SolversDump`z_] := Finance`SolversDump`z^(Finance`SolversDump`lambda1 - Finance`SolversDump`lambda2) - (Finance`SolversDump`lambda1*(1 - Finance`SolversDump`lambda2)*Finance`SolversDump`z + Finance`SolversDump`lambda1*Finance`SolversDump`lambda2)\/(Finance`SolversDump`lambda2*(1 - Finance`SolversDump`lambda1)*Finance`SolversDump`z + Finance`SolversDump`lambda1*Finance`SolversDump`lambda2); Finance`SolversDump`xcritical = Finance`SolversDump`x \/. FindRoot[Finance`SolversDump`ff[Finance`SolversDump`x] == 0, {Finance`SolversDump`x, 10}]; Finance`SolversDump`scritical = Finance`SolversDump`Smax\/Finance`SolversDump`xcritical; Finance`SolversDump`B1 = ((1 - Finance`SolversDump`lambda2)*Finance`SolversDump`xcritical + Finance`SolversDump`lambda2)\/((Finance`SolversDump`lambda1 - Finance`SolversDump`lambda2)*Finance`SolversDump`xcritical^Finance`SolversDump`lambda1); Finance`SolversDump`B2 = ((1 - Finance`SolversDump`lambda1)*Finance`SolversDump`xcritical + Finance`SolversDump`lambda1)\/((Finance`SolversDump`lambda2 - Finance`SolversDump`lambda1)*Finance`SolversDump`xcritical^Finance`SolversDump`lambda2); If[Finance`SolversDump`S <= Finance`SolversDump`scritical, Finance`SolversDump`Smax - Finance`SolversDump`S, Finance`SolversDump`S*Finance`SolversDump`B1*(Finance`SolversDump`Smax\/Finance`SolversDump`S)^Finance`SolversDump`lambda1 + Finance`SolversDump`S*Finance`SolversDump`B2*(Finance`SolversDump`Smax\/Finance`SolversDump`S)^Finance`SolversDump`lambda2]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Finance`Solvers`PERPETUALLBFLSTAPO",
	"SurfaceGraphics`Methods`PerturbateFrame":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PerturbateFrame\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PerturbateFrame",
	"Graphics`Mesh`PerturbateMesh":"ObjectType: Symbol\nUsage: Graphics`Mesh`PerturbateMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> None}\nAttributes: {}\nFullName: Graphics`Mesh`PerturbateMesh",
	"SurfaceGraphics`Methods`PerturbateSeeds":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PerturbateSeeds\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PerturbateSeeds",
	"GraphComputation`PetersenEmbedding":"ObjectType: Symbol\nUsage: GraphComputation`PetersenEmbedding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`PetersenEmbedding[(GraphComputation`GraphEmbeddingDump`n_Integer)?Positive] := Block[{GraphComputation`GraphEmbeddingDump`res}, GraphComputation`GraphEmbeddingDump`res = GraphComputation`CircularEmbedding[GraphComputation`GraphEmbeddingDump`n]; GraphComputation`GraphEmbeddingDump`res = Join[GraphComputation`GraphEmbeddingDump`res, 2*GraphComputation`GraphEmbeddingDump`res]; GraphComputation`GraphEmbeddingDump`res \/; ListQ[GraphComputation`GraphEmbeddingDump`res]]\nGraphComputation`PetersenEmbedding[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PetersenEmbedding",
	"Algebra`Polynomial`PExactQuotient":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PExactQuotient\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PExactQuotient",
	"System`Private`PExpClassic":"ObjectType: Symbol\nUsage: System`Private`PExpClassic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`PExpClassic[System`Dump`expr_] := System`Dump`expr \/\/. {((System`Dump`a_)*(System`Dump`b_))^(System`Dump`c_) :> System`Dump`a^System`Dump`c*System`Dump`b^System`Dump`c, ((System`Dump`a_)^(System`Dump`b_))^(System`Dump`c_) :> System`Dump`a^(System`Dump`b*System`Dump`c), Log[(System`Dump`a_)^(System`Dump`b_)] :> System`Dump`b*Log[System`Dump`a], Log[(System`Dump`a_)*(System`Dump`b_)] \/;  !TrueQ[Positive[System`Dump`a*System`Dump`b]] || (System`Dump`a =!= -1 && System`Dump`b =!= -1) :> Log[System`Dump`a] + Log[System`Dump`b], System`Dump`numlogrule, System`Dump`surdRule, Log[Rational[System`Dump`a_, System`Dump`b_]] :> Log[System`Dump`a] - Log[System`Dump`b], (System`Dump`g_)[(System`Dump`f_)[System`Dump`a_]] \/; Quiet[InverseFunction[System`Dump`f]] === System`Dump`g :> System`Dump`a, HoldPattern[ProductLog[(System`Dump`z_)*E^(System`Dump`z_)]] \/;  !NumericQ[System`Dump`z] :> System`Dump`z, HoldPattern[(System`Dump`f_)[System`Dump`a___, (System`Dump`g_)[System`Dump`a___, System`Dump`z_, System`Dump`b___], System`Dump`b___]] \/; Quiet[InverseFunction[System`Dump`g, Length[{System`Dump`a}] + 1, Length[{System`Dump`a, System`Dump`z, System`Dump`b}]]] === System`Dump`f :> System`Dump`z}\nSystem`Private`PExpClassic[System`Dump`expr_, {}] := System`Dump`expr\nSystem`Private`PExpClassic[System`Dump`expr_, {System`Dump`a_}] := System`Dump`expr \/\/. {((System`Dump`w_)*System`Dump`a^(System`Dump`k_.))^(System`Dump`m_) :> System`Dump`w^System`Dump`m*System`Dump`a^(System`Dump`k*System`Dump`m), (System`Dump`a^(System`Dump`k_))^(System`Dump`m_) :> System`Dump`a^(System`Dump`k*System`Dump`m), Log[(System`Dump`w_)*System`Dump`a^(System`Dump`k_.)] \/;  !TrueQ[Positive[System`Dump`a^System`Dump`k*System`Dump`w]] || (System`Dump`a^System`Dump`k =!= -1 && System`Dump`w =!= -1) :> System`Dump`k*Log[System`Dump`a] + Log[System`Dump`w], Log[System`Dump`a^(System`Dump`k_)] :> System`Dump`k*Log[System`Dump`a], Log[Rational[System`Dump`w_, System`Dump`b_]] :> Log[System`Dump`w] - Log[System`Dump`b], (System`Dump`g_)[(System`Dump`f_)[System`Dump`w_]] \/; Quiet[InverseFunction[System`Dump`f]] === System`Dump`g :> System`Dump`w, HoldPattern[ProductLog[(System`Dump`z_)*E^(System`Dump`z_)]] \/;  !NumericQ[System`Dump`z] :> System`Dump`z, HoldPattern[(System`Dump`f_)[System`Dump`aa___, (System`Dump`g_)[System`Dump`aa___, System`Dump`z_, System`Dump`b___], System`Dump`b___]] \/; Quiet[InverseFunction[System`Dump`g, Length[{System`Dump`aa}] + 1, Length[{System`Dump`aa, System`Dump`z, System`Dump`b}]]] === System`Dump`f :> System`Dump`z}\nSystem`Private`PExpClassic[System`Dump`expr_, {System`Dump`a_, System`Dump`r__}] := System`Private`PExpClassic[System`Private`PExpClassic[System`Dump`expr, {System`Dump`a}], {System`Dump`r}]\nSystem`Private`PExpClassic[System`Dump`expr_, System`Dump`a_] := System`Private`PExpClassic[System`Dump`expr, {System`Dump`a}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PExpClassic",
	"System`Private`PExpExact":"ObjectType: Symbol\nUsage: System`Private`PExpExact\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`PExpExact[System`Dump`e_, System`Dump`assum_] := Module[{System`Dump`as}, System`Dump`as = If[MatchQ[Head[System`Dump`assum], Rule | RuleDelayed], Last[System`Dump`assum], System`Dump`assum]; If[ListQ[System`Dump`as], System`Dump`as = And @@ System`Dump`as]; Block[{$Assumptions = System`Dump`as && (System`Dump`as \/\/. System`Dump`argrules)}, FixedPoint[System`Dump`PowerECSinglePass, System`Dump`e]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PExpExact",
	"Charting`PFLP":"ObjectType: Symbol\nUsage: Charting`PFLP\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PFLP[Charting`ChartLabelingDump`ipoints_, Charting`ChartLabelingDump`labels_, Charting`ChartLabelingDump`o:OptionsPattern[]] := Module[{Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`oList, Charting`ChartLabelingDump`globaloverlapcount, Charting`ChartLabelingDump`index, Charting`ChartLabelingDump`subsolutionlabel, Charting`ChartLabelingDump`subsolutiontriple, Charting`ChartLabelingDump`overlapcount, Charting`ChartLabelingDump`newoverlapcount, Charting`ChartLabelingDump`subproblempoints, Charting`ChartLabelingDump`borders, Charting`ChartLabelingDump`optimizedsolution, Charting`ChartLabelingDump`iter, Charting`ChartLabelingDump`labelposition, Charting`ChartLabelingDump`solutionrule, Charting`ChartLabelingDump`pointpos, Charting`ChartLabelingDump`oldS, Charting`ChartLabelingDump`newsolutionlabel, Charting`ChartLabelingDump`globalcost, Charting`ChartLabelingDump`costslist, Charting`ChartLabelingDump`newglobalcost, Charting`ChartLabelingDump`tabulistlength, Charting`ChartLabelingDump`candidatelistlength, Charting`ChartLabelingDump`newsubcost, Charting`ChartLabelingDump`subcost, Charting`ChartLabelingDump`boundaryData, Charting`ChartLabelingDump`density, Charting`ChartLabelingDump`allpoints, Charting`ChartLabelingDump`type, Charting`ChartLabelingDump`np, Charting`ChartLabelingDump`sortedlabels, Charting`ChartLabelingDump`starttime, Charting`ChartLabelingDump`joined, Charting`ChartLabelingDump`axesorigin, Charting`ChartLabelingDump`imagesize, Charting`ChartLabelingDump`plotrange, Charting`ChartLabelingDump`performancegoal, Charting`ChartLabelingDump`transformfunc, Charting`ChartLabelingDump`labeltype, Charting`ChartLabelingDump`aspectratio, Charting`ChartLabelingDump`goodpos, Charting`ChartLabelingDump`badpos, Charting`ChartLabelingDump`minlabel, Charting`ChartLabelingDump`regionfunction, Charting`ChartLabelingDump`rawpoints, Charting`ChartLabelingDump`pointsizeoffsets, Charting`ChartLabelingDump`labelvisibilities, Charting`ChartLabelingDump`weightedpoints, Charting`ChartLabelingDump`order, Charting`ChartLabelingDump`partpoints, Charting`ChartLabelingDump`partlabels, Charting`ChartLabelingDump`t, Charting`ChartLabelingDump`threshold}, {Charting`ChartLabelingDump`joined, Charting`ChartLabelingDump`axesorigin, Charting`ChartLabelingDump`imagesize, Charting`ChartLabelingDump`plotrange, Charting`ChartLabelingDump`performancegoal, Charting`ChartLabelingDump`aspectratio, Charting`ChartLabelingDump`regionfunction, Charting`ChartLabelingDump`transformfunc, Charting`ChartLabelingDump`labeltype, Charting`ChartLabelingDump`minlabel, Charting`ChartLabelingDump`rawpoints, Charting`ChartLabelingDump`pointsizeoffsets, Charting`ChartLabelingDump`labelvisibilities} = OptionValue[Charting`PFLP, {Charting`ChartLabelingDump`o}, {Joined, AxesOrigin, ImageSize, PlotRange, PerformanceGoal, AspectRatio, RegionFunction, \"MappingFunction\", \"LabelType\", \"MinimumLabels\", \"RawPoints\", \"PointSizeOffsets\", LabelVisibility}]; If[Length[Charting`ChartLabelingDump`ipoints] != Length[Charting`ChartLabelingDump`labels], Message[Charting`PFLP::ldata, Charting`ChartLabelingDump`labels]; Return[{Table[1\/100, Length[Charting`ChartLabelingDump`ipoints]], Table[Center, Length[Charting`ChartLabelingDump`ipoints]]}]]; If[Charting`ChartLabelingDump`rawpoints === Automatic, Charting`ChartLabelingDump`rawpoints = Charting`ChartLabelingDump`ipoints]; {Charting`ChartLabelingDump`weightedpoints, Charting`ChartLabelingDump`sortedlabels, Charting`ChartLabelingDump`order, Charting`ChartLabelingDump`labelvisibilities} = Charting`ChartLabelingDump`weightedLabel[Charting`ChartLabelingDump`ipoints, Charting`ChartLabelingDump`labels, Charting`ChartLabelingDump`labelvisibilities]; If[VectorQ[Flatten[Charting`ChartLabelingDump`ipoints], NumericQ] && Charting`ChartLabelingDump`regionfunction === (True & ), Charting`ChartLabelingDump`allpoints = Charting`ChartLabelingDump`weightedpoints; Charting`ChartLabelingDump`badpos = {}, Charting`ChartLabelingDump`partpoints = Charting`ChartLabelingDump`weightedpoints[[Ordering[Charting`ChartLabelingDump`order]]]; Charting`ChartLabelingDump`partlabels = Charting`ChartLabelingDump`sortedlabels[[Ordering[Charting`ChartLabelingDump`order]]]; {Charting`ChartLabelingDump`allpoints, Charting`ChartLabelingDump`sortedlabels, Charting`ChartLabelingDump`goodpos} = Charting`ChartLabelingDump`dataRegion[Charting`ChartLabelingDump`labeltype, Charting`ChartLabelingDump`partpoints, Charting`ChartLabelingDump`partlabels, Charting`ChartLabelingDump`regionfunction, Charting`ChartLabelingDump`rawpoints]; Charting`ChartLabelingDump`badpos = If[Charting`ChartLabelingDump`goodpos === All, {}, Complement[Range[Length[Charting`ChartLabelingDump`labels]], Flatten[Charting`ChartLabelingDump`goodpos]]]; If[Length[Charting`ChartLabelingDump`badpos] > 0, Do[Charting`ChartLabelingDump`allpoints = Insert[Charting`ChartLabelingDump`allpoints, Missing[], Charting`ChartLabelingDump`badpos[[Charting`ChartLabelingDump`i]]], {Charting`ChartLabelingDump`i, Length[Charting`ChartLabelingDump`badpos]}]; Do[Charting`ChartLabelingDump`sortedlabels = Insert[Charting`ChartLabelingDump`sortedlabels, Missing[], Charting`ChartLabelingDump`badpos[[Charting`ChartLabelingDump`i]]], {Charting`ChartLabelingDump`i, Length[Charting`ChartLabelingDump`badpos]}]; ]; Charting`ChartLabelingDump`order = If[Charting`ChartLabelingDump`goodpos === All, Charting`ChartLabelingDump`order, Select[Charting`ChartLabelingDump`order, MemberQ[Charting`ChartLabelingDump`goodpos, #1] & ]]; Charting`ChartLabelingDump`allpoints = Charting`ChartLabelingDump`allpoints[[Charting`ChartLabelingDump`order]]; Charting`ChartLabelingDump`sortedlabels = Charting`ChartLabelingDump`sortedlabels[[Charting`ChartLabelingDump`order]]; ]; If[TensorRank[Charting`ChartLabelingDump`allpoints] =!= Switch[Charting`ChartLabelingDump`labeltype, \"BubbleCallout\", 3, _, 2], Return[{Table[1\/100, Length[Charting`ChartLabelingDump`labels]], Table[Center, Length[Charting`ChartLabelingDump`labels]], Charting`ChartLabelingDump`order}]]; Charting`ChartLabelingDump`axesorigin = If[MatchQ[Charting`ChartLabelingDump`axesorigin, {_?Charting`realNumericQ..}], Charting`ChartLabelingDump`axesorigin, {0, 0}]; Charting`ChartLabelingDump`plotrange = If[MatchQ[Charting`ChartLabelingDump`plotrange, {{_?Charting`realNumericQ..}, {_?Charting`realNumericQ..}}], Charting`ChartLabelingDump`plotrange, {{0, 1}, {0, 1}}]; Charting`ChartLabelingDump`plotrange = Charting`FixEqualRange \/@ Charting`ChartLabelingDump`plotrange; Charting`ChartLabelingDump`aspectratio = If[Charting`realNumericQ[Charting`ChartLabelingDump`aspectratio], Charting`ChartLabelingDump`aspectratio, 1\/GoldenRatio]; Charting`ChartLabelingDump`imagesize = N[Visualization`Utilities`ApproximateImageSize[Charting`ChartLabelingDump`imagesize, Charting`ChartLabelingDump`aspectratio]]; If[Charting`ChartLabelingDump`pointsizeoffsets === {}, Charting`ChartLabelingDump`pointsizeoffsets = Join @@ Charting`ChartLabelingDump`generateOffsets[{}, Length \/@ Charting`ChartLabelingDump`allpoints, Charting`ChartLabelingDump`plotrange, Charting`ChartLabelingDump`imagesize, Charting`ChartLabelingDump`joined]; ]; Charting`ChartLabelingDump`labeltype = If[MatchQ[Charting`ChartLabelingDump`labeltype, \"Callout\" | \"Generic\" | \"BubbleCallout\" | \"LFLP\"], Charting`ChartLabelingDump`labeltype, \"Generic\"]; Charting`ChartLabelingDump`TimingSow[Charting`ChartLabelingDump`t]; Charting`ChartLabelingDump`starttime = AbsoluteTime[]; Charting`ChartLabelingDump`overlapData[_] := {}; Charting`ChartLabelingDump`overlapData[_, \"AxesOverlap\"] := False; Charting`ChartLabelingDump`overlapData[_, \"ExtendedOverlap\"] := {}; Charting`ChartLabelingDump`overlapData[_, \"CurvesOverlap\"] := False; Charting`ChartLabelingDump`overlapData[_, \"PointOverlap\"] := 0; Charting`ChartLabelingDump`overlapData[_, \"LabelAreaOverlap\"] := {}; Charting`ChartLabelingDump`overlapData[_, \"All\"] := {}; Charting`ChartLabelingDump`boundaryData[\"TransformationFunction\"] = Charting`ChartLabelingDump`transformfunc; Charting`ChartLabelingDump`overlapData[\"Joined\"] = TrueQ[Charting`ChartLabelingDump`joined]; Charting`ChartLabelingDump`type = Switch[Charting`ChartLabelingDump`joined, 1 | 2 | 3, Charting`ChartLabelingDump`setType[Charting`ChartLabelingDump`joined], _, Charting`ChartLabelingDump`setType[3]]; Charting`ChartLabelingDump`np = Charting`ChartLabelingDump`setNP[Charting`ChartLabelingDump`type]; Sow[Charting`ChartLabelingDump`type, \"PFLPType\"]; Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] = {}; Charting`ChartLabelingDump`overlapData[\"NoShowPoints\"] = {}; If[Charting`ChartLabelingDump`labeltype === \"BubbleCallout\", Charting`ChartLabelingDump`sortedlabels = Charting`ChartLabelingDump`bubbleOverlap[Charting`ChartLabelingDump`labeltype, Charting`ChartLabelingDump`boundaryData, Charting`ChartLabelingDump`overlapData, N[Charting`ChartLabelingDump`allpoints], Charting`ChartLabelingDump`sortedlabels, Charting`ChartLabelingDump`type, Charting`ChartLabelingDump`np, Charting`ChartLabelingDump`plotrange, Charting`ChartLabelingDump`axesorigin, Charting`ChartLabelingDump`imagesize]; ]; Charting`ChartLabelingDump`minlabel = If[ !MatchQ[Charting`ChartLabelingDump`minlabel, All] && Length[Charting`ChartLabelingDump`labels] <= 50, Automatic, Charting`ChartLabelingDump`minlabel]; If[Length[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"]] === Length[Charting`ChartLabelingDump`labels], Return[{Table[1\/100, Length[Charting`ChartLabelingDump`labels]], Table[Center, Length[Charting`ChartLabelingDump`labels]], Charting`ChartLabelingDump`order}]]; Charting`ChartLabelingDump`dbTimingReap[Charting`ChartLabelingDump`t, \"Finding overlapping bubbles\"]; Charting`ChartLabelingDump`TimingSow[Charting`ChartLabelingDump`t]; Charting`ChartLabelingDump`fOverlap[Charting`ChartLabelingDump`labeltype, Charting`ChartLabelingDump`boundaryData, Charting`ChartLabelingDump`overlapData, N[Charting`ChartLabelingDump`allpoints], {}, Charting`ChartLabelingDump`sortedlabels, Charting`ChartLabelingDump`type, Charting`ChartLabelingDump`np, Charting`ChartLabelingDump`minlabel, Charting`ChartLabelingDump`pointsizeoffsets, Charting`ChartLabelingDump`plotrange, Charting`ChartLabelingDump`axesorigin, Charting`ChartLabelingDump`imagesize]; Charting`ChartLabelingDump`dbTimingReap[Charting`ChartLabelingDump`t, \"Finding overlapping information\"]; If[Charting`ChartLabelingDump`boundaryData[\"AllPositionsList\"] === {}, Return[{ReplacePart[Table[0, Length[Charting`ChartLabelingDump`labels]], Thread[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] -> 1\/100]], ReplacePart[Table[0, Length[Charting`ChartLabelingDump`labels]], Thread[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] -> Center]], Charting`ChartLabelingDump`order}]]; Charting`ChartLabelingDump`TimingSow[Charting`ChartLabelingDump`t]; Charting`ChartLabelingDump`solutionlabel = Charting`ChartLabelingDump`findInitialSolution[Charting`ChartLabelingDump`allpoints, Charting`ChartLabelingDump`boundaryData, Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`labelposition, Charting`ChartLabelingDump`np]; Charting`ChartLabelingDump`dbTimingReap[Charting`ChartLabelingDump`t, \"Finding initial solution\"]; Charting`ChartLabelingDump`overlapData[\"Weights\"] = 0*Charting`ChartLabelingDump`labelvisibilities[[Charting`ChartLabelingDump`order]]; Charting`ChartLabelingDump`overlapData[\"AllPositions\"] = Charting`ChartLabelingDump`boundaryData[\"AllPositions\"]; Charting`ChartLabelingDump`overlapData[\"AllPositionsList\"] = Charting`ChartLabelingDump`boundaryData[\"AllPositionsList\"]; Charting`ChartLabelingDump`oList = {}; Charting`ChartLabelingDump`iter = 0; Charting`ChartLabelingDump`oldS = Charting`ChartLabelingDump`solutionlabel; Charting`ChartLabelingDump`TimingSow[Charting`ChartLabelingDump`t]; Charting`ChartLabelingDump`costslist = (Charting`ChartLabelingDump`costFunction[Charting`ChartLabelingDump`labeltype, #1, Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`np] & ) \/@ Charting`ChartLabelingDump`solutionlabel; Charting`ChartLabelingDump`dbTimingReap[Charting`ChartLabelingDump`t, \"Before Tabu search\"]; Charting`ChartLabelingDump`globalcost = Plus @@ Charting`ChartLabelingDump`costslist; Charting`ChartLabelingDump`globaloverlapcount = Charting`ChartLabelingDump`overlapCount[Charting`ChartLabelingDump`costslist]; Charting`ChartLabelingDump`tabulistlength = 7 + IntegerPart[Charting`ChartLabelingDump`globaloverlapcount]; Charting`ChartLabelingDump`candidatelistlength = 5 + IntegerPart[Charting`ChartLabelingDump`globaloverlapcount]; Charting`ChartLabelingDump`density = N[Length[Charting`ChartLabelingDump`allpoints]]\/Total[Charting`padList[Charting`ChartLabelingDump`imagesize, 2]]; Charting`ChartLabelingDump`TimingSow[Charting`ChartLabelingDump`t]; Charting`ChartLabelingDump`threshold = Round[Rescale[Times @@ Charting`ChartLabelingDump`imagesize, {6000, 618034}, {60, 600}]]; If[Length[Charting`ChartLabelingDump`allpoints] <= Charting`ChartLabelingDump`threshold && Charting`ChartLabelingDump`minlabel === Automatic, While[Charting`ChartLabelingDump`oList =!= Charting`ChartLabelingDump`solutionlabel && Charting`ChartLabelingDump`globaloverlapcount > 0 && Charting`ChartLabelingDump`iter < Charting`ChartLabelingDump`threshold, Charting`ChartLabelingDump`index = First[DeleteCases[Charting`ChartLabelingDump`solutionlabel, Alternatives @@ Charting`ChartLabelingDump`oList]]; Charting`ChartLabelingDump`pointpos = Charting`ChartLabelingDump`pointIndex[Charting`ChartLabelingDump`index, Charting`ChartLabelingDump`np]; {Charting`ChartLabelingDump`subproblempoints, Charting`ChartLabelingDump`borders} = Charting`ChartLabelingDump`subpartProblem[Clip[Round[Length[Charting`ChartLabelingDump`allpoints]\/25], {4, 20}], Charting`ChartLabelingDump`np, Charting`ChartLabelingDump`pointpos, Charting`ChartLabelingDump`overlapData]; Charting`ChartLabelingDump`subsolutionlabel = Flatten[(Take[Charting`ChartLabelingDump`solutionlabel, {#1}] & ) \/@ Charting`ChartLabelingDump`subproblempoints]; Charting`ChartLabelingDump`subsolutiontriple = MapThread[{#1, #2, Charting`ChartLabelingDump`costFunction[Charting`ChartLabelingDump`labeltype, #2, Charting`ChartLabelingDump`subsolutionlabel, Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`np]} & , {Charting`ChartLabelingDump`subproblempoints, Charting`ChartLabelingDump`subsolutionlabel}]; Charting`ChartLabelingDump`overlapcount = Charting`ChartLabelingDump`overlapCount[Charting`ChartLabelingDump`subsolutiontriple[[All,3]]]; Charting`ChartLabelingDump`subcost = Total[Charting`ChartLabelingDump`subsolutiontriple[[All,3]]]; If[Charting`ChartLabelingDump`overlapcount > 0, Charting`ChartLabelingDump`iter = Charting`ChartLabelingDump`iter + 1; If[Charting`ChartLabelingDump`candidatelistlength > Length[Charting`ChartLabelingDump`subsolutiontriple], Charting`ChartLabelingDump`candidatelistlength = Length[Charting`ChartLabelingDump`subsolutiontriple]]; {Charting`ChartLabelingDump`optimizedsolution, Charting`ChartLabelingDump`newoverlapcount} = Charting`ChartLabelingDump`optimizeTabuSearch[Charting`ChartLabelingDump`labeltype, 8, Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`subsolutiontriple, Charting`ChartLabelingDump`borders, Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`tabulistlength, Charting`ChartLabelingDump`candidatelistlength, Charting`ChartLabelingDump`np]; Charting`ChartLabelingDump`newsubcost = Total[Charting`ChartLabelingDump`optimizedsolution[[All,3]]]; , {Charting`ChartLabelingDump`optimizedsolution, Charting`ChartLabelingDump`newoverlapcount} = {Charting`ChartLabelingDump`subsolutiontriple, Charting`ChartLabelingDump`overlapcount}; Charting`ChartLabelingDump`newsubcost = Charting`ChartLabelingDump`subcost]; Charting`dbPrint[\"newsubcost: \", Charting`ChartLabelingDump`newsubcost]; Charting`dbPrint[\"newoverlapcount: \", Charting`ChartLabelingDump`newoverlapcount]; If[Charting`ChartLabelingDump`newsubcost < Charting`ChartLabelingDump`subcost || Charting`ChartLabelingDump`newoverlapcount < Charting`ChartLabelingDump`overlapcount, Charting`ChartLabelingDump`solutionrule = (#1[[1]] -> #1[[2]] & ) \/@ Charting`ChartLabelingDump`optimizedsolution; Charting`ChartLabelingDump`newsolutionlabel = ReplacePart[Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`solutionrule]; Charting`ChartLabelingDump`costslist = (Charting`ChartLabelingDump`costFunction[Charting`ChartLabelingDump`labeltype, #1, Charting`ChartLabelingDump`newsolutionlabel, Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`np] & ) \/@ Charting`ChartLabelingDump`newsolutionlabel; Charting`ChartLabelingDump`newglobalcost = Plus @@ Charting`ChartLabelingDump`costslist; If[Charting`ChartLabelingDump`newglobalcost < Charting`ChartLabelingDump`globalcost, Charting`ChartLabelingDump`solutionlabel = Charting`ChartLabelingDump`newsolutionlabel; Charting`ChartLabelingDump`globalcost = Charting`ChartLabelingDump`newglobalcost; Charting`ChartLabelingDump`globaloverlapcount = Charting`ChartLabelingDump`overlapCount[Charting`ChartLabelingDump`costslist]; Charting`ChartLabelingDump`tabulistlength = 7 + IntegerPart[Charting`ChartLabelingDump`globaloverlapcount]; Charting`ChartLabelingDump`candidatelistlength = 5 + IntegerPart[Charting`ChartLabelingDump`globaloverlapcount]; Charting`ChartLabelingDump`oList = DeleteCases[Charting`ChartLabelingDump`oList, _?(MemberQ[(#1[[2]] & ) \/@ Charting`ChartLabelingDump`subsolutiontriple, #1] & )]; , Charting`ChartLabelingDump`oList = Union[Charting`ChartLabelingDump`oList, (#1[[2]] & ) \/@ Charting`ChartLabelingDump`subsolutiontriple]], Charting`ChartLabelingDump`oList = Union[Charting`ChartLabelingDump`oList, (#1[[2]] & ) \/@ Charting`ChartLabelingDump`subsolutiontriple]; ]; ]]; Charting`ChartLabelingDump`dbTimingReap[Charting`ChartLabelingDump`t, \"Tabu Search\"]; Charting`ChartLabelingDump`TimingSow[Charting`ChartLabelingDump`t]; If[Charting`ChartLabelingDump`labeltype === \"BubbleCallout\", Charting`ChartLabelingDump`solutionlabel = ReplacePart[Charting`ChartLabelingDump`solutionlabel, Thread[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] -> 0]]; Charting`ChartLabelingDump`costslist = ReplacePart[Charting`ChartLabelingDump`costslist, Thread[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] -> 0]]; ]; Charting`ChartLabelingDump`solutionlabel = ReplacePart[Charting`ChartLabelingDump`solutionlabel, Thread[Charting`ChartLabelingDump`overlapData[\"NoShowPoints\"] -> 0]]; Charting`ChartLabelingDump`costslist = ReplacePart[Charting`ChartLabelingDump`costslist, Thread[Charting`ChartLabelingDump`overlapData[\"NoShowPoints\"] -> 0]]; If[Charting`ChartLabelingDump`minlabel === Automatic, Charting`ChartLabelingDump`overlapData[\"RemovedLabels\"] = {}; {Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`costslist} = Charting`ChartLabelingDump`thiningLabels[Charting`ChartLabelingDump`labeltype, Charting`ChartLabelingDump`overlapData, Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`costslist, Charting`ChartLabelingDump`np]]; Charting`ChartLabelingDump`solutionlabel = ReplacePart[Charting`ChartLabelingDump`solutionlabel, (#1 -> {0, \"Point\"} & ) \/@ Charting`ChartLabelingDump`overlapData[\"NoShowPoints\"]]; Charting`ChartLabelingDump`solutionlabel = ReplacePart[Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`overlapData[\"RemovedLabels\"]]; If[Charting`ChartLabelingDump`labeltype === \"BubbleCallout\", Charting`ChartLabelingDump`solutionlabel = Charting`ChartLabelingDump`partIndex[Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`np]; Charting`ChartLabelingDump`solutionlabel = ReplacePart[Charting`ChartLabelingDump`solutionlabel, Thread[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] -> Center]]; Charting`ChartLabelingDump`costslist = ReplacePart[Charting`ChartLabelingDump`costslist, Thread[Charting`ChartLabelingDump`overlapData[\"CenterLabel\"] -> 1\/100]]; ]; Charting`ChartLabelingDump`solutionlabel = Charting`ChartLabelingDump`solutionlabel[[Ordering[Charting`ChartLabelingDump`order]]]; Charting`ChartLabelingDump`costslist = Charting`ChartLabelingDump`costslist[[Ordering[Charting`ChartLabelingDump`order]]]; Charting`ChartLabelingDump`dbTimingReap[Charting`ChartLabelingDump`t, \"Label thinning\"]; Switch[Charting`ChartLabelingDump`labeltype, \"LFLP\", {Charting`ChartLabelingDump`costslist, Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`overlapData}, \"BubbleCallout\", If[Length[Charting`ChartLabelingDump`badpos] > 0, Do[Charting`ChartLabelingDump`costslist = Insert[Charting`ChartLabelingDump`costslist, 0, Charting`ChartLabelingDump`badpos[[Charting`ChartLabelingDump`i]]], {Charting`ChartLabelingDump`i, Length[Charting`ChartLabelingDump`badpos]}]; Do[Charting`ChartLabelingDump`solutionlabel = Insert[Charting`ChartLabelingDump`solutionlabel, 0, Charting`ChartLabelingDump`badpos[[Charting`ChartLabelingDump`i]]], {Charting`ChartLabelingDump`i, Length[Charting`ChartLabelingDump`badpos]}]; ]; {Charting`ChartLabelingDump`costslist, Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`order}, _, If[Length[Charting`ChartLabelingDump`badpos] > 0, Do[Charting`ChartLabelingDump`costslist = Insert[Charting`ChartLabelingDump`costslist, 0, Charting`ChartLabelingDump`badpos[[Charting`ChartLabelingDump`i]]], {Charting`ChartLabelingDump`i, Length[Charting`ChartLabelingDump`badpos]}]; Do[Charting`ChartLabelingDump`solutionlabel = Insert[Charting`ChartLabelingDump`solutionlabel, 0, Charting`ChartLabelingDump`badpos[[Charting`ChartLabelingDump`i]]], {Charting`ChartLabelingDump`i, Length[Charting`ChartLabelingDump`badpos]}]; ]; {Charting`ChartLabelingDump`costslist, Charting`ChartLabelingDump`partIndex[Charting`ChartLabelingDump`solutionlabel, Charting`ChartLabelingDump`np], Charting`ChartLabelingDump`order}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                                                                                                              1\n{Joined -> False, AxesOrigin -> Automatic, ImageSize -> Automatic, PlotRange -> Automatic, PerformanceGoal -> Automatic, AspectRatio -> -----------, RegionFunction -> (True & ), PointSizeOffsets -> {}, RawPoints -> Automatic, MinimumLabels -> Automatic, Priority -> Automatic, MappingFunction -> Identity, LabelType -> Generic, LabelVisibility -> Automatic}\n                                                                                                                                        GoldenRatio\nAttributes: {}\nFullName: Charting`PFLP",
	"PacletManager`Package`PgetContexts":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetContexts\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetContexts[PacletManager`Paclet`Private`paclet_PacletObject] := Module[{PacletManager`Paclet`Private`kernelExt}, Flatten[PacletManager`Package`forEach[PacletManager`Paclet`Private`kernelExt, PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, \"Kernel\" | \"Application\"], {\"WolframVersion\", \"SystemID\", \"ProductID\"}], Replace[PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"Context\", {}], {PacletManager`Paclet`Private`ctxt_String, PacletManager`Paclet`Private`path_String} :> PacletManager`Paclet`Private`ctxt, {1}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetContexts",
	"PacletManager`Package`PgetDeclareLoadData":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetDeclareLoadData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetDeclareLoadData[PacletManager`Paclet`Private`paclet_PacletObject] := Block[{PacletManager`Paclet`Private`kernelExt, PacletManager`Paclet`Private`ctxts, PacletManager`Paclet`Private`firstCtxt, PacletManager`Paclet`Private`symbols, PacletManager`Paclet`Private`hiddenImport, PacletManager`Paclet`Private`result}, PacletManager`Paclet`Private`result = {}; PacletManager`Package`forEach[PacletManager`Paclet`Private`kernelExt, PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, \"Kernel\" | \"Application\"], {\"WolframVersion\", \"SystemID\", \"ProductID\"}], PacletManager`Paclet`Private`ctxts = Flatten[{PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"Context\", {}]}]; If[Length[PacletManager`Paclet`Private`ctxts] > 0, PacletManager`Paclet`Private`firstCtxt = First[Flatten[PacletManager`Paclet`Private`ctxts]]; PacletManager`Paclet`Private`symbols = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"Symbols\", {}]; PacletManager`Paclet`Private`hiddenImport = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"HiddenImport\"]; Which[StringQ[PacletManager`Paclet`Private`hiddenImport] && StringEndsQ[PacletManager`Paclet`Private`hiddenImport, \"`\"], Null, MatchQ[PacletManager`Paclet`Private`hiddenImport, {_String}], PacletManager`Paclet`Private`hiddenImport = First[PacletManager`Paclet`Private`hiddenImport], PacletManager`Paclet`Private`hiddenImport === {} || PacletManager`Paclet`Private`hiddenImport === None, PacletManager`Paclet`Private`hiddenImport = None, TrueQ[PacletManager`Paclet`Private`hiddenImport], Null, True, PacletManager`Paclet`Private`hiddenImport = False]; If[Length[PacletManager`Paclet`Private`symbols] > 0, AppendTo[PacletManager`Paclet`Private`result, {PacletManager`Paclet`Private`firstCtxt, PacletManager`Paclet`Private`hiddenImport, (If[StringMatchQ[#1, \"*`*\"], #1, StringJoin[PacletManager`Paclet`Private`firstCtxt, #1]] & ) \/@ PacletManager`Paclet`Private`symbols}]]]]; PacletManager`Paclet`Private`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetDeclareLoadData",
	"PacletManager`Package`PgetDocResourcePath":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetDocResourcePath\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetDocResourcePath[PacletManager`Paclet`Private`paclet_PacletObject, PacletManager`Paclet`Private`linkBase_, PacletManager`Paclet`Private`context_, PacletManager`Paclet`Private`expandedResourceName_, PacletManager`Paclet`Private`lang_] := Module[{PacletManager`Paclet`Private`linkBaseMatchesPacletName, PacletManager`Paclet`Private`pacletRootPath, PacletManager`Paclet`Private`extLinkBase, PacletManager`Paclet`Private`extLanguage, PacletManager`Paclet`Private`docRoot, PacletManager`Paclet`Private`resPath, PacletManager`Paclet`Private`fullPath, PacletManager`Paclet`Private`isContextBasedLookup, PacletManager`Paclet`Private`ext}, Assert[(StringQ[PacletManager`Paclet`Private`linkBase] || StringQ[PacletManager`Paclet`Private`context]) &&  !(StringQ[PacletManager`Paclet`Private`linkBase] && StringQ[PacletManager`Paclet`Private`context]), {818, \"\/home\/w\/.WolframEngine\/Paclets\/Repository\/PacletManager-6.5.0\/Kernel\/Paclet.m\"}]; If[ !PacletManager`Package`systemIDMatches[PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"SystemID\"]] ||  !PacletManager`Package`kernelVersionMatches[PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"WolframVersion\"]] ||  !PacletManager`Package`languageMatches[PacletManager`Paclet`Private`lang, PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Language\"]] ||  !PacletManager`Package`productIDMatches[PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"ProductID\"]], Return[Null]]; PacletManager`Paclet`Private`linkBaseMatchesPacletName = PacletManager`Paclet`Private`linkBase === PacletManager`Paclet`Private`paclet[\"Name\"]; PacletManager`Paclet`Private`isContextBasedLookup = StringQ[PacletManager`Paclet`Private`context]; PacletManager`Package`doForEach[PacletManager`Paclet`Private`ext, PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, PacletManager`Package`$linkableExtensions], {\"WolframVersion\", \"SystemID\", \"ProductID\"}], PacletManager`Paclet`Private`extLanguage = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`ext, \"Language\", \"English\"] \/. All -> PacletManager`Paclet`Private`lang; PacletManager`Paclet`Private`extLinkBase = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`ext, \"LinkBase\", Null]; If[((PacletManager`Paclet`Private`extLinkBase === Null && PacletManager`Paclet`Private`linkBaseMatchesPacletName) || PacletManager`Paclet`Private`extLinkBase === PacletManager`Paclet`Private`linkBase || (PacletManager`Paclet`Private`isContextBasedLookup && (PacletManager`Package`PhasContext[PacletManager`Paclet`Private`paclet, PacletManager`Paclet`Private`context] || PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`ext, \"Context\"] === PacletManager`Paclet`Private`context))) && (PacletManager`Paclet`Private`lang === All || PacletManager`Package`languageMatches[PacletManager`Paclet`Private`lang, PacletManager`Paclet`Private`extLanguage]), PacletManager`Paclet`Private`pacletRootPath = PacletManager`Package`PgetPathToRoot[PacletManager`Paclet`Private`paclet]; PacletManager`Paclet`Private`docRoot = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`ext, \"Root\", \"Documentation\"]; PacletManager`Paclet`Private`resPath = PacletManager`Package`EXTgetAssetPath[PacletManager`Paclet`Private`ext, PacletManager`Paclet`Private`expandedResourceName]; If[StringMatchQ[PacletManager`Paclet`Private`resPath, \"file:*\"] || StringMatchQ[PacletManager`Paclet`Private`resPath, \"http*:*\"], Return[PacletManager`Paclet`Private`resPath], PacletManager`Paclet`Private`fullPath = ToFileName[{PacletManager`Paclet`Private`pacletRootPath, PacletManager`Paclet`Private`docRoot, PacletManager`Paclet`Private`extLanguage}, PacletManager`Paclet`Private`resPath]; If[FileExistsQ[PacletManager`Paclet`Private`fullPath], Return[ExpandFileName[PacletManager`Paclet`Private`fullPath]]]; PacletManager`Paclet`Private`fullPath = ToFileName[{PacletManager`Paclet`Private`pacletRootPath, PacletManager`Paclet`Private`docRoot}, PacletManager`Paclet`Private`resPath]; If[FileExistsQ[PacletManager`Paclet`Private`fullPath], Return[ExpandFileName[PacletManager`Paclet`Private`fullPath]]]; If[StringStartsQ[PacletManager`Paclet`Private`paclet[\"Name\"], \"SystemDocs_\"] && StringStartsQ[PacletManager`Paclet`Private`resPath, \"Packages\/\"], PacletManager`Paclet`Private`fullPath = ToFileName[{PacletManager`Paclet`Private`pacletRootPath, PacletManager`Paclet`Private`docRoot}, StringReplace[PacletManager`Paclet`Private`resPath, StringJoin[\"\/Documentation\/\", PacletManager`Paclet`Private`lang] -> \"\"]]; If[FileExistsQ[PacletManager`Paclet`Private`fullPath], Return[ExpandFileName[PacletManager`Paclet`Private`fullPath]]]]]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetDocResourcePath",
	"PacletManager`Package`PgetExtensions":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetExtensions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet_PacletObject] := PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Extensions\"]\nPacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet_PacletObject, PacletManager`Paclet`Private`extTypes:_String | _Alternatives] := Cases[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet], {PacletManager`Paclet`Private`extTypes, ___}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetExtensions",
	"PacletManager`Package`PgetFunctionInformation":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetFunctionInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetFunctionInformation[PacletManager`Paclet`Private`paclet_PacletObject] := Block[{PacletManager`Paclet`Private`kernelExt, PacletManager`Paclet`Private`funcInfoFile, PacletManager`Paclet`Private`funcInfo, PacletManager`Paclet`Private`pacletRootPath, PacletManager`Paclet`Private`kernelRoot, PacletManager`Paclet`Private`strm, PacletManager`Paclet`Private`fullPath, PacletManager`Paclet`Private`result}, PacletManager`Paclet`Private`result = {}; PacletManager`Package`forEach[PacletManager`Paclet`Private`kernelExt, PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, \"Kernel\" | \"Application\"], {\"WolframVersion\", \"SystemID\", \"ProductID\"}], PacletManager`Paclet`Private`funcInfoFile = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"FunctionInformation\", \"FunctionInformation.m\"]; If[StringQ[PacletManager`Paclet`Private`funcInfoFile], PacletManager`Paclet`Private`pacletRootPath = PacletManager`Package`PgetPathToRoot[PacletManager`Paclet`Private`paclet]; PacletManager`Paclet`Private`kernelRoot = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"Root\"]; PacletManager`Paclet`Private`fullPath = ToFileName[{PacletManager`Paclet`Private`pacletRootPath, PacletManager`Paclet`Private`kernelRoot}, PacletManager`Paclet`Private`funcInfoFile]; If[FileExistsQ[PacletManager`Paclet`Private`fullPath], PacletManager`Package`using[{PacletManager`Paclet`Private`strm = OpenRead[PacletManager`Paclet`Private`fullPath]}, PacletManager`Paclet`Private`funcInfo = Read[PacletManager`Paclet`Private`strm, Expression]]]]; If[MatchQ[PacletManager`Paclet`Private`funcInfo, {{_String, {_List...}}...}], PacletManager`Paclet`Private`result = Join[PacletManager`Paclet`Private`result, PacletManager`Paclet`Private`funcInfo]]]; PacletManager`Paclet`Private`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetFunctionInformation",
	"PacletManager`Package`PgetKey":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetKey\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetKey[PacletManager`Paclet`Private`paclet_PacletObject] := {PacletManager`Package`PgetQualifiedName[PacletManager`Paclet`Private`paclet], PacletManager`Package`PgetLocation[PacletManager`Paclet`Private`paclet]}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetKey",
	"PacletManager`Package`PgetLoadingState":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetLoadingState\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetLoadingState[PacletManager`Paclet`Private`paclet_PacletObject] := PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Loading\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetLoadingState",
	"PacletManager`Package`PgetLocation":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetLocation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetLocation[PacletManager`Paclet`Private`paclet_PacletObject] := PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Location\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetLocation",
	"PacletManager`Package`PgetMainLink":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetMainLink\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetMainLink[PacletManager`Paclet`Private`paclet_PacletObject] := Module[{PacletManager`Paclet`Private`name, PacletManager`Paclet`Private`extLinkBase}, PacletManager`Paclet`Private`name = PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Name\"]; If[StringQ[PacletManager`Package`PgetDocResourcePath[PacletManager`Paclet`Private`paclet, PacletManager`Paclet`Private`name, All, \"\", $Language]] || ($Language != \"English\" && StringQ[PacletManager`Package`PgetDocResourcePath[PacletManager`Paclet`Private`paclet, PacletManager`Paclet`Private`name, All, \"\", \"English\"]]), StringJoin[\"paclet:\", PacletManager`Paclet`Private`name], Scan[Function[{PacletManager`Paclet`Private`docExt}, PacletManager`Paclet`Private`extLinkBase = PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`docExt, \"LinkBase\"]; If[PacletManager`Paclet`Private`extLinkBase =!= Null && (StringQ[PacletManager`Package`PgetDocResourcePath[PacletManager`Paclet`Private`paclet, PacletManager`Paclet`Private`extLinkBase, All, \"\", $Language]] || ($Language != \"English\" && StringQ[PacletManager`Package`PgetDocResourcePath[PacletManager`Paclet`Private`paclet, PacletManager`Paclet`Private`extLinkBase, All, \"\", \"English\"]])), Return[StringJoin[\"paclet:\", PacletManager`Paclet`Private`extLinkBase]]]], PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, \"Documentation\"], {\"WolframVersion\", \"SystemID\", \"ProductID\"}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetMainLink",
	"PacletManager`Package`PgetPathToRoot":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetPathToRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetPathToRoot[PacletManager`Paclet`Private`paclet_PacletObject] := ToFileName[PacletManager`Package`PgetLocation[PacletManager`Paclet`Private`paclet], PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Root\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetPathToRoot",
	"PacletManager`Package`PgetPreloadData":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetPreloadData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetPreloadData[PacletManager`Paclet`Private`paclet_PacletObject] := Block[{PacletManager`Paclet`Private`kernelExt, PacletManager`Paclet`Private`ctxt, PacletManager`Paclet`Private`result}, PacletManager`Paclet`Private`result = {}; PacletManager`Package`forEach[PacletManager`Paclet`Private`kernelExt, PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, \"Kernel\" | \"Application\"], {\"WolframVersion\", \"SystemID\", \"ProductID\"}], PacletManager`Package`forEach[PacletManager`Paclet`Private`ctxt, PacletManager`Package`EXTgetProperty[PacletManager`Paclet`Private`kernelExt, \"Context\", {}], (If[ListQ[#1] && StringQ[First[#1]], AppendTo[PacletManager`Paclet`Private`result, First[#1]]] & )[PacletManager`Package`contextToFileName[PacletManager`Paclet`Private`paclet, First[Flatten[{PacletManager`Paclet`Private`ctxt}]]]]]]; PacletManager`Paclet`Private`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetPreloadData",
	"PacletManager`Package`PgetQualifiedName":"ObjectType: Symbol\nUsage: PacletManager`Package`PgetQualifiedName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PgetQualifiedName[PacletManager`Paclet`Private`paclet_PacletObject] := Block[{PacletManager`Paclet`Private`n, PacletManager`Paclet`Private`q, PacletManager`Paclet`Private`v}, {PacletManager`Paclet`Private`n, PacletManager`Paclet`Private`q, PacletManager`Paclet`Private`v} = PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, {\"Name\", \"Qualifier\", \"Version\"}]; PacletManager`Paclet`Private`n = ExternalService`EncodeString[StringReplace[PacletManager`Paclet`Private`n, \"\/\" -> \"__\"], \"UTF-8\"]; If[PacletManager`Paclet`Private`q == \"\", StringJoin[PacletManager`Paclet`Private`n, \"-\", PacletManager`Paclet`Private`v], StringJoin[PacletManager`Paclet`Private`n, \"-\", PacletManager`Paclet`Private`q, \"-\", PacletManager`Paclet`Private`v]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PgetQualifiedName",
	"Statistics`Library`PGFDistribution":"ObjectType: Symbol\nUsage: Statistics`Library`PGFDistribution\nDocumentation: None\nOwnValues: None\nUpValues: (DistributionParameterQ | Statistics`Library`DistributionNParameterQ)[Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_]] ^:=  !NumericQ[Statistics`ProbabilityDistributionDump`s] && Internal`RationalFunctionQ[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s] && Quiet[With[{Statistics`ProbabilityDistributionDump`fs1 = Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> 1}, Statistics`ProbabilityDistributionDump`iEqualToOneQ[Statistics`ProbabilityDistributionDump`fs1] && Statistics`ProbabilityDistributionDump`fs1 =!= Indeterminate] || With[{Statistics`ProbabilityDistributionDump`fs1 = SeriesCoefficient[Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> Statistics`ProbabilityDistributionDump`s + 1, {Statistics`ProbabilityDistributionDump`s, 0, 0}]}, Internal`LiterallyAbsentQ[Statistics`ProbabilityDistributionDump`fs1, SeriesCoefficient] && Statistics`ProbabilityDistributionDump`iEqualToOneQ[Statistics`ProbabilityDistributionDump`fs1] && Statistics`ProbabilityDistributionDump`fs1 =!= Indeterminate]]\nDistributionParameterAssumptions[Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_]] ^:=  !NumericQ[Statistics`ProbabilityDistributionDump`s] && Internal`RationalFunctionQ[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s] && Quiet[SeriesCoefficient[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1, 0}] == 1]\nStatistics`Library`DistributionDimensionality[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= 1\nDistributionDomain[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= Module[{Statistics`ProbabilityDistributionDump`degs, Statistics`ProbabilityDistributionDump`ff}, Statistics`ProbabilityDistributionDump`ff = Together[Statistics`ProbabilityDistributionDump`f]; Statistics`ProbabilityDistributionDump`degs = Exponent[Denominator[Statistics`ProbabilityDistributionDump`ff], Statistics`ProbabilityDistributionDump`s, List]; Quiet[Min[Statistics`ProbabilityDistributionDump`degs] ;; If[Max[Statistics`ProbabilityDistributionDump`degs] > Min[Statistics`ProbabilityDistributionDump`degs], Infinity, Exponent[Numerator[Statistics`ProbabilityDistributionDump`ff], Statistics`ProbabilityDistributionDump`s, Max] - Min[Statistics`ProbabilityDistributionDump`degs]]]]\nHoldPattern[Statistics`Library`DiscreteUnivariateDistributionQ[(Statistics`Library`PGFDistribution[_, _])?DistributionParameterQ]] ^:= True\nHoldPattern[Statistics`Library`ContinuousUnivariateDistributionQ[(Statistics`Library`PGFDistribution[_, _])?DistributionParameterQ]] ^:= False\nPDF[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`k_)?Statistics`Library`AdmissibleUnivariateIntegerInputQ] ^:= Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 0}, Statistics`ProbabilityDistributionDump`k]\nCDF[Statistics`ProbabilityDistributionDump`dist:(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ] ^:= Module[{Statistics`ProbabilityDistributionDump`cdf}, Statistics`ProbabilityDistributionDump`cdf = Statistics`ProbabilityDistributionDump`PGFDistributionCDFExprStore[Statistics`ProbabilityDistributionDump`get[Statistics`ProbabilityDistributionDump`dist, CDF]]; If[Statistics`ProbabilityDistributionDump`cdf === Null, If[NumericQ[Statistics`ProbabilityDistributionDump`x], Statistics`ProbabilityDistributionDump`cdf = Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f\/(1 - Statistics`ProbabilityDistributionDump`s), {Statistics`ProbabilityDistributionDump`s, 0}, #1] & ; , Statistics`ProbabilityDistributionDump`cdf = Function @@ {Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f\/(1 - Statistics`ProbabilityDistributionDump`s), {Statistics`ProbabilityDistributionDump`s, 0}, #1]}; Statistics`ProbabilityDistributionDump`PGFDistributionCDFExprStore[Statistics`ProbabilityDistributionDump`put[Statistics`ProbabilityDistributionDump`dist, CDF, Statistics`ProbabilityDistributionDump`cdf]]]]; Statistics`ProbabilityDistributionDump`cdf[Floor[Statistics`ProbabilityDistributionDump`x]]]\nSurvivalFunction[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ] ^:= Module[{Statistics`ProbabilityDistributionDump`k = Floor[Statistics`ProbabilityDistributionDump`x]}, Statistics`Library`SLPiecewiseExpand[Piecewise[{{Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`iSurvivalFunctionPGF[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s], {Statistics`ProbabilityDistributionDump`s, 0}, Statistics`ProbabilityDistributionDump`k], Statistics`ProbabilityDistributionDump`k >= 0}, {1, Statistics`ProbabilityDistributionDump`k < 0}}]]]\nHazardFunction[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`k_)?Statistics`Library`AdmissibleUnivariateIntegerInputQ] ^:= Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 0}, Statistics`ProbabilityDistributionDump`k], Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`s*Statistics`ProbabilityDistributionDump`iSurvivalFunctionPGF[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s], {Statistics`ProbabilityDistributionDump`s, 0}, Statistics`ProbabilityDistributionDump`k]]\nMean[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1]\nVariance[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= (2*#2 + #1*(1 - #1) & ) @@ Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1, 2]\nStandardDeviation[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= (Sqrt[2*#2 + #1*(1 - #1)] & ) @@ Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1, 2]\nSkewness[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= ((#1 - 3*#1^2 + 2*#1^3 + 6*#2 - 6*#1*#2 + 6*#3)\/(2*#2 + #1*(1 - #1))^(3\/2) & ) @@ Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1, 3]\nKurtosis[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= ((#1 - 4*#1^2 + 6*#1^3 - 3*#1^4 + 14*#2 - 24*#1*#2 + 12*#1^2*#2 + 36*#3 - 24*#1*#3 + 24*#4)\/(2*#2 + #1*(1 - #1))^2 & ) @@ Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1, 4]\nCharacteristicFunction[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, Statistics`ProbabilityDistributionDump`t_] ^:= Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> Exp[I*Statistics`ProbabilityDistributionDump`t]\nMomentGeneratingFunction[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, Statistics`ProbabilityDistributionDump`t_] ^:= Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> Exp[Statistics`ProbabilityDistributionDump`t]\nFactorialMomentGeneratingFunction[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, Statistics`ProbabilityDistributionDump`t_] ^:= Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> Statistics`ProbabilityDistributionDump`t\nCumulantGeneratingFunction[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, Statistics`ProbabilityDistributionDump`t_] ^:= Log[Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> Exp[Statistics`ProbabilityDistributionDump`t]]\nFactorialMoment[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`r_)?Statistics`Library`AdmissibleUnivariateNonNegativeIntegerInputQ] ^:= Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, Statistics`ProbabilityDistributionDump`r]*Statistics`ProbabilityDistributionDump`r!\nStatistics`Library`PGFDistribution \/: Moment[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`r_Integer)?NonNegative] := Module[{Statistics`ProbabilityDistributionDump`fms}, If[Statistics`ProbabilityDistributionDump`r === 0, 1, Statistics`ProbabilityDistributionDump`fms = Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1, Statistics`ProbabilityDistributionDump`r]*Range[Statistics`ProbabilityDistributionDump`r]!; Statistics`Library`UnivariateMomentsConvert[First[Statistics`ProbabilityDistributionDump`fms], Rest[Statistics`ProbabilityDistributionDump`fms], Statistics`ProbabilityDistributionDump`r, FactorialMoment -> Moment]]]\nStatistics`Library`PGFDistribution \/: CentralMoment[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`r_Integer)?NonNegative] := Module[{Statistics`ProbabilityDistributionDump`fms}, Which[Statistics`ProbabilityDistributionDump`r === 0, 1, Statistics`ProbabilityDistributionDump`r === 1, 0, True, Statistics`ProbabilityDistributionDump`fms = Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1, Statistics`ProbabilityDistributionDump`r]*Range[Statistics`ProbabilityDistributionDump`r]!; Statistics`Library`UnivariateMomentsConvert[First[Statistics`ProbabilityDistributionDump`fms], Rest[Statistics`ProbabilityDistributionDump`fms], Statistics`ProbabilityDistributionDump`r, FactorialMoment -> CentralMoment]]]\nStatistics`Library`PGFDistribution \/: Cumulant[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`r_Integer)?NonNegative] := Module[{Statistics`ProbabilityDistributionDump`fcums, Statistics`ProbabilityDistributionDump`f2}, Which[Statistics`ProbabilityDistributionDump`r === 0, 0, Statistics`ProbabilityDistributionDump`r === 1, Statistics`ProbabilityDistributionDump`RationalSeriesCoefficient[Statistics`ProbabilityDistributionDump`f, {Statistics`ProbabilityDistributionDump`s, 1}, 1], True, Statistics`ProbabilityDistributionDump`f2 = Together[D[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s]\/Statistics`ProbabilityDistributionDump`f]; Statistics`ProbabilityDistributionDump`fcums = Statistics`ProbabilityDistributionDump`RationalSeriesCoefficientList[Statistics`ProbabilityDistributionDump`f2, {Statistics`ProbabilityDistributionDump`s, 1}, 1, Statistics`ProbabilityDistributionDump`r - 1]*Range[Statistics`ProbabilityDistributionDump`r - 1]!; Statistics`Library`UnivariateMomentsConvert[Statistics`ProbabilityDistributionDump`f2 \/. Statistics`ProbabilityDistributionDump`s -> 1, Statistics`ProbabilityDistributionDump`fcums, Statistics`ProbabilityDistributionDump`r, FactorialMoment -> Moment]]]\n(Quantile | InverseCDF)[(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, Statistics`ProbabilityDistributionDump`q_] ^:= Module[{Statistics`ProbabilityDistributionDump`res = $Failed, Statistics`ProbabilityDistributionDump`qmin, Statistics`ProbabilityDistributionDump`qmax}, Catch[Switch[Statistics`ProbabilityDistributionDump`q, _?Statistics`Library`QuantileQ, If[Statistics`ProbabilityDistributionDump`q == 0, Throw[Statistics`ProbabilityDistributionDump`res = 0]]; If[Statistics`ProbabilityDistributionDump`q == 1, If[PolynomialQ[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s], Throw[Statistics`ProbabilityDistributionDump`res = Exponent[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s]], Throw[Statistics`ProbabilityDistributionDump`res = Infinity]]]; If[Variables[Statistics`ProbabilityDistributionDump`f] === {Statistics`ProbabilityDistributionDump`s}, Statistics`ProbabilityDistributionDump`res = Statistics`ProbabilityDistributionDump`iPGFQuantile[Together[Statistics`ProbabilityDistributionDump`f], Statistics`ProbabilityDistributionDump`s, Statistics`ProbabilityDistributionDump`q]], _List?Statistics`Library`RealVectorQ, {Statistics`ProbabilityDistributionDump`qmin, Statistics`ProbabilityDistributionDump`qmax} = MinMax[Statistics`ProbabilityDistributionDump`q]; If[Statistics`ProbabilityDistributionDump`qmin < 0 || Statistics`ProbabilityDistributionDump`qmax > 1, Throw[$Failed]]; If[Variables[Statistics`ProbabilityDistributionDump`f] === {Statistics`ProbabilityDistributionDump`s}, Statistics`ProbabilityDistributionDump`res = Statistics`ProbabilityDistributionDump`iPGFQuantile[Together[Statistics`ProbabilityDistributionDump`f], Statistics`ProbabilityDistributionDump`s, Statistics`ProbabilityDistributionDump`q]]]]; Statistics`ProbabilityDistributionDump`res \/; Statistics`ProbabilityDistributionDump`res =!= $Failed]\nMedian[Statistics`ProbabilityDistributionDump`di:(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ] ^:= Module[{Statistics`ProbabilityDistributionDump`res}, Statistics`ProbabilityDistributionDump`res = Statistics`ProbabilityDistributionDump`iPGFQuantile[Together[Statistics`ProbabilityDistributionDump`f], Statistics`ProbabilityDistributionDump`s, 1\/2]; Statistics`ProbabilityDistributionDump`res \/; Statistics`ProbabilityDistributionDump`res =!= $Failed] \/; Variables[Statistics`ProbabilityDistributionDump`f] === {Statistics`ProbabilityDistributionDump`s}\nInverseSurvivalFunction[Statistics`ProbabilityDistributionDump`di:(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, (Statistics`ProbabilityDistributionDump`q_)?Statistics`Library`QuantileQ] ^:= Module[{Statistics`ProbabilityDistributionDump`res, Statistics`ProbabilityDistributionDump`degs, Statistics`ProbabilityDistributionDump`ff}, Statistics`ProbabilityDistributionDump`ff = Together[Statistics`ProbabilityDistributionDump`f]; If[PolynomialQ[Statistics`ProbabilityDistributionDump`ff, Statistics`ProbabilityDistributionDump`s], Statistics`ProbabilityDistributionDump`degs = Exponent[Statistics`ProbabilityDistributionDump`ff, Statistics`ProbabilityDistributionDump`s, List]; Statistics`ProbabilityDistributionDump`res = Statistics`Library`BinaryInverseSFSearch[Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`ff, Statistics`ProbabilityDistributionDump`s], Statistics`ProbabilityDistributionDump`q, Min[Statistics`ProbabilityDistributionDump`degs], Max[Statistics`ProbabilityDistributionDump`degs]], Statistics`ProbabilityDistributionDump`degs = Exponent[Numerator[Statistics`ProbabilityDistributionDump`ff], Statistics`ProbabilityDistributionDump`s, Min] - Exponent[Denominator[Statistics`ProbabilityDistributionDump`ff], Statistics`ProbabilityDistributionDump`s, Min]; If[Statistics`ProbabilityDistributionDump`q == 0 === True, Statistics`ProbabilityDistributionDump`res = Statistics`ProbabilityDistributionDump`degs, If[Statistics`ProbabilityDistributionDump`q == 1 === True, Statistics`ProbabilityDistributionDump`res = Infinity, If[Variables[Statistics`ProbabilityDistributionDump`ff] === {Statistics`ProbabilityDistributionDump`s}, Statistics`ProbabilityDistributionDump`res = Statistics`Library`BinaryInverseSFSearch[Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`ff, Statistics`ProbabilityDistributionDump`s], Statistics`ProbabilityDistributionDump`q, Statistics`ProbabilityDistributionDump`degs, Infinity], Statistics`ProbabilityDistributionDump`res = $Failed]]]]; Statistics`ProbabilityDistributionDump`res \/; Statistics`ProbabilityDistributionDump`res =!= $Failed]\nStatistics`Library`PGFDistribution \/: Random`DistributionVector[Statistics`ProbabilityDistributionDump`dist:(Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`f_, Statistics`ProbabilityDistributionDump`s_])?DistributionParameterQ, Statistics`ProbabilityDistributionDump`m_Integer, Statistics`ProbabilityDistributionDump`prec_] \/; NumericQ[Statistics`ProbabilityDistributionDump`f \/. Statistics`ProbabilityDistributionDump`s -> 1.1] := Module[{}, If[PolynomialQ[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s], RandomChoice[N[CoefficientList[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s], Statistics`ProbabilityDistributionDump`prec \/. Automatic -> MachinePrecision] -> Range[Exponent[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s, Min], Exponent[Statistics`ProbabilityDistributionDump`f, Statistics`ProbabilityDistributionDump`s, Max]], Statistics`ProbabilityDistributionDump`m], InverseCDF[Statistics`ProbabilityDistributionDump`dist, RandomReal[1, Statistics`ProbabilityDistributionDump`m, WorkingPrecision -> (Statistics`ProbabilityDistributionDump`prec \/. Automatic | Infinity -> MachinePrecision)]]]]\nHoldPattern[Random`DistributionVector[Statistics`Library`PGFDistribution[_, _], _, _]] ^:= $Failed\nDownValues: Except[HoldPattern[Statistics`Library`PGFDistribution][_, _], HoldPattern[Statistics`Library`PGFDistribution][System`Dump`ParameterValidation`args___]] := (ArgumentCountQ[Statistics`Library`PGFDistribution, Length[{System`Dump`ParameterValidation`args}], 2, 2]; 1 \/; False)\nSubValues: Statistics`Library`PGFDistribution[Statistics`ProbabilityDistributionDump`alpha_, Statistics`ProbabilityDistributionDump`beta_][\"RandomType\"] = RandomInteger\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`PGFDistribution",
	"PacletManager`Package`PhasContext":"ObjectType: Symbol\nUsage: PacletManager`Package`PhasContext\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PhasContext[PacletManager`Paclet`Private`paclet_PacletObject, PacletManager`Paclet`Private`context_String] := Block[{PacletManager`Paclet`Private`listedContexts, PacletManager`Paclet`Private`contextPos}, PacletManager`Paclet`Private`listedContexts = ReplaceList[\"Context\", Flatten[Rest \/@ PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, \"Kernel\" | \"Application\"], {\"WolframVersion\", \"SystemID\", \"ProductID\"}]]]; PacletManager`Paclet`Private`listedContexts = Flatten[Replace[PacletManager`Paclet`Private`listedContexts, {PacletManager`Paclet`Private`ctxt_String, PacletManager`Paclet`Private`path_String} :> PacletManager`Paclet`Private`ctxt, {2}]]; Which[Length[PacletManager`Paclet`Private`listedContexts] == 0, False, MemberQ[PacletManager`Paclet`Private`listedContexts, PacletManager`Paclet`Private`context], True, True, PacletManager`Paclet`Private`contextPos = StringPosition[PacletManager`Paclet`Private`context, \"`\"]; Length[PacletManager`Paclet`Private`contextPos] > 1 && MemberQ[PacletManager`Paclet`Private`listedContexts, StringTake[PacletManager`Paclet`Private`context, PacletManager`Paclet`Private`contextPos[[1,1]]]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PhasContext",
	"StartUp`Initialization`Phase0":"None",
	"StartUp`Initialization`Phase1":"None",
	"StartUp`Initialization`Phase2":"None",
	"StartUp`Initialization`PhaseB":"None",
	"Control`PhaseCrossoverFrequency":"ObjectType: Symbol\nUsage: Control`PhaseCrossoverFrequency\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PhaseCrossoverFrequency[Control`PlotUtilitiesDump`tf_, Control`PlotUtilitiesDump`complexVar_Symbol:Automatic, Control`PlotUtilitiesDump`opts:OptionsPattern[]] := Block[{Control`PlotUtilitiesDump`sTf, Control`PlotUtilitiesDump`vars, Control`PlotUtilitiesDump`cVar, Control`PlotUtilitiesDump`freq, Control`PlotUtilitiesDump`ans}, If[NonNegative[Control`PlotUtilitiesDump`tf], Return[{None}]]; If[Negative[Control`PlotUtilitiesDump`tf], Return[{All}]]; If[Head[Control`PlotUtilitiesDump`tf] === Complex, Return[{Indeterminate}]]; If[Control`PlotUtilitiesDump`complexVar === Automatic, Control`PlotUtilitiesDump`vars = Control`Utilities`listVariables[Control`PlotUtilitiesDump`tf], Control`PlotUtilitiesDump`vars = {Control`PlotUtilitiesDump`complexVar}]; Switch[Length[Control`PlotUtilitiesDump`vars], 0, Return[{}], 1, Control`PlotUtilitiesDump`cVar = Control`PlotUtilitiesDump`vars[[1]], _, Return[HoldForm[Control`PhaseCrossoverFrequency[Control`PlotUtilitiesDump`tf, Control`PlotUtilitiesDump`complexVar, Control`PlotUtilitiesDump`opts]]]]; Control`PlotUtilitiesDump`sTf = Control`PlotUtilities`sinusoidalTransferFunction[Control`PlotUtilitiesDump`tf, Control`PlotUtilitiesDump`cVar, Sequence @@ FilterRules[{Control`PlotUtilitiesDump`opts}, Options[Control`PlotUtilities`sinusoidalTransferFunction]]][Control`PlotUtilitiesDump`freq]; Control`PlotUtilitiesDump`ans = Control`PhaseCrossoverFrequency[Control`PhaseCrossoverFrequency, Control`PlotUtilitiesDump`tf, Control`PlotUtilitiesDump`cVar, {Control`PlotUtilitiesDump`sTf, Control`PlotUtilitiesDump`freq}, Control`PlotUtilitiesDump`opts]; Switch[Control`PlotUtilitiesDump`ans, {}, {None}, _, Control`PlotUtilitiesDump`ans]]\nControl`PhaseCrossoverFrequency[Control`PlotUtilitiesDump`f_, Control`PlotUtilitiesDump`tf_, Control`PlotUtilitiesDump`complexVar_Symbol, {Control`PlotUtilitiesDump`sTf_, Control`PlotUtilitiesDump`freq_Symbol}, Control`PlotUtilitiesDump`opts:OptionsPattern[]] := Block[{Control`PlotUtilitiesDump`$phase360 = True, Control`PlotUtilitiesDump`vSolsQ, Control`PlotUtilitiesDump`sPeriod, Control`PlotUtilitiesDump`meth, Control`PlotUtilitiesDump`fr, Control`PlotUtilitiesDump`plotOpts, Control`PlotUtilitiesDump`eqFn, Control`PlotUtilitiesDump`invFn, Control`PlotUtilitiesDump`eqns, Control`PlotUtilitiesDump`eqn0, Control`PlotUtilitiesDump`allAns, Control`PlotUtilitiesDump`sTfSimp, Control`PlotUtilitiesDump`ans}, If[ !MatchQ[Control`PlotUtilitiesDump`vSolsQ = OptionValue[Control`PlotUtilitiesDump`f, {Control`PlotUtilitiesDump`opts}, VerifySolutions], True | False], Message[Control`PlotUtilitiesDump`f::wrgopt, Control`PlotUtilitiesDump`vSolsQ, VerifySolutions]; Return[$Failed]]; Control`PlotUtilitiesDump`sPeriod = OptionValue[Control`PlotUtilitiesDump`f, {Control`PlotUtilitiesDump`opts}, SamplingPeriod]; Control`PlotUtilitiesDump`meth = Method \/. Join[{Control`PlotUtilitiesDump`opts}, {Method -> Automatic}]; If[ !FreeQ[Control`PlotUtilitiesDump`tf, Control`Utilities`delayelempattern[Control`PlotUtilitiesDump`complexVar]] && Control`PlotUtilitiesDump`meth === Automatic, Control`PlotUtilitiesDump`meth = \"Plot\"]; Control`PlotUtilitiesDump`meth = Control`PlotUtilitiesDump`parsegpmOptions[Control`PlotUtilitiesDump`f, Control`PlotUtilitiesDump`meth]; If[MatchQ[First[Control`PlotUtilitiesDump`meth], Automatic | \"NSolveOrSolve\"], Control`PlotUtilitiesDump`meth[[1]] = Switch[Count[{Control`PlotUtilitiesDump`tf, Control`PlotUtilitiesDump`sPeriod}, Control`PlotUtilitiesDump`x_ \/; InexactNumberQ[Control`PlotUtilitiesDump`x], {0, Infinity}], 0, \"Solve\", _, \"NSolve\"]]; {Control`PlotUtilitiesDump`eqFn, Control`PlotUtilitiesDump`invFn, Control`PlotUtilitiesDump`eqns} = Switch[N[Control`PlotUtilitiesDump`sPeriod], None | 0., {-#1 & , #1\/I & , {Re[Control`PlotUtilitiesDump`complexVar] == 0, Im[Control`PlotUtilitiesDump`complexVar] >= 0}}, _, {1\/#1 & , Log[#1]\/(I*Control`PlotUtilitiesDump`sPeriod) & , {Abs[Control`PlotUtilitiesDump`complexVar] == 1, Element[Control`PlotUtilitiesDump`complexVar, Complexes]}}]; Control`PlotUtilitiesDump`eqn0 = {Control`PlotUtilitiesDump`tf == (Control`PlotUtilitiesDump`tf \/. Control`PlotUtilitiesDump`complexVar -> Control`PlotUtilitiesDump`eqFn[Control`PlotUtilitiesDump`complexVar])}; If[Simplify[Control`PlotUtilitiesDump`eqn0] === {True}, Return[{{}}]]; If[First[Control`PlotUtilitiesDump`meth] === \"Plot\", {Control`PlotUtilitiesDump`fr, Control`PlotUtilitiesDump`plotOpts} = Rest[Control`PlotUtilitiesDump`meth]; If[ !MatchQ[Control`PlotUtilitiesDump`fr, {_?NumericQ | Infinity | -Infinity, _?NumericQ | Infinity | -Infinity}], Control`PlotUtilitiesDump`fr = Quiet[Control`PlotUtilities`defaultFrequencyRange[Control`PlotUtilitiesDump`tf, Control`PlotUtilitiesDump`complexVar, SamplingPeriod -> Control`PlotUtilitiesDump`sPeriod]]]; Return[Control`PlotUtilitiesDump`crossoverFrequencies[\"PhaseCrossover\", {Control`PlotUtilitiesDump`sTf, Control`PlotUtilities`phase}, {Control`PlotUtilitiesDump`freq, Sequence @@ Control`PlotUtilitiesDump`fr}, 180, Sequence @@ FilterRules[Control`PlotUtilitiesDump`plotOpts, Options[Plot]]]]]; Control`PlotUtilitiesDump`eqns = Switch[First[Control`PlotUtilitiesDump`meth], \"NSolve\", Control`PlotUtilitiesDump`eqn0, \"Solve\", Switch[Control`PlotUtilitiesDump`vSolsQ, True, Join[Control`PlotUtilitiesDump`eqn0, Control`PlotUtilitiesDump`eqns], _, Control`PlotUtilitiesDump`eqn0], _, Message[Control`PhaseCrossoverFrequency::optv, Method \/. {Control`PlotUtilitiesDump`opts}, Method]; Return[$Failed]]; Control`PlotUtilitiesDump`allAns = Control`PlotUtilities`genericSolve[Control`PlotUtilitiesDump`eqns, Control`PlotUtilitiesDump`complexVar, Sequence @@ Control`PlotUtilitiesDump`meth]; Control`PlotUtilitiesDump`CrossoverFrequencyFilter[Control`PlotUtilitiesDump`f, Control`PlotUtilitiesDump`allAns, Control`PlotUtilitiesDump`sTf, Control`PlotUtilitiesDump`freq, Control`PlotUtilitiesDump`complexVar, Control`PlotUtilitiesDump`invFn, {Control`PlotUtilities`phase, 180}, Control`PlotUtilitiesDump`vSolsQ, OptionValue[Control`PlotUtilitiesDump`f, {Control`PlotUtilitiesDump`opts}, Tolerance]]]\nControl`PhaseCrossoverFrequency[(Control`PlotUtilitiesDump`tf_)?NumericQ, __] := Which[NonNegative[Control`PlotUtilitiesDump`tf], None, Negative[Control`PlotUtilitiesDump`tf], All, True, Indeterminate]\nControl`PhaseCrossoverFrequency[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FeedbackType -> Negative, Method -> Automatic, SamplingPeriod -> None, Tolerance -> Automatic, VerifySolutions -> True}\nAttributes: {}\nFullName: Control`PhaseCrossoverFrequency",
	"Statistics`Library`PhaseTypeDistribution":"ObjectType: Symbol\nUsage: Statistics`Library`PhaseTypeDistribution\nDocumentation: None\nOwnValues: None\nUpValues: Statistics`Library`ParameterSpecifications[Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_]] ^= {{Statistics`GammaDistributionsDump`alvec, \"VectorProbability\"}, {{Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat}, {\"EqualLength\", {1, 2}}}}\nDistributionParameterQ[System`Dump`ParameterValidation`distHandle:Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_]] ^:= Statistics`Utilities`CheckValidOrValidate[System`Dump`ParameterValidation`distHandle, ((Developer`PackedArrayQ[Statistics`GammaDistributionsDump`alvec, Real, 1] && Min[Statistics`GammaDistributionsDump`alvec] >= 0 && System`Dump`ParameterValidation`iTotal[Statistics`GammaDistributionsDump`alvec] == 1) || (VectorQ[Statistics`GammaDistributionsDump`alvec, System`Dump`ParameterValidation`FiniteScalarQ[#1] && ( !NumericQ[#1] || (NonNegative[#1] =!= False && #1 <= 1)) & ] && Quiet[System`Dump`ParameterValidation`iTotal[Statistics`GammaDistributionsDump`alvec] == 1 =!= False]) || Statistics`Library`iComplain[Statistics`Library`PhaseTypeDistribution::vprobprm, Statistics`GammaDistributionsDump`alvec, 1, Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]]) && (Length[Statistics`GammaDistributionsDump`alvec] === Length[Statistics`GammaDistributionsDump`smat] || Statistics`Library`iComplain[Statistics`Library`PhaseTypeDistribution::eqln, Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, 1, 2, Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]]), True]\nStatistics`Library`DistributionNParameterQ[Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_]] ^:= ((Developer`PackedArrayQ[Statistics`GammaDistributionsDump`alvec, Real, 1] && Min[Statistics`GammaDistributionsDump`alvec] >= 0 && System`Dump`ParameterValidation`iTotal[Statistics`GammaDistributionsDump`alvec] == 1) || (VectorQ[Statistics`GammaDistributionsDump`alvec, NumericQ] && VectorQ[Statistics`GammaDistributionsDump`alvec, NonNegative] && Quiet[System`Dump`ParameterValidation`iTotal[Statistics`GammaDistributionsDump`alvec] == 1]) || Statistics`Library`iComplain[Statistics`Library`PhaseTypeDistribution::vprobprm, Statistics`GammaDistributionsDump`alvec, 1, Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]]) && ((Length[Statistics`GammaDistributionsDump`alvec] === Length[Statistics`GammaDistributionsDump`smat] && Statistics`Library`RealVectorQ[Flatten[{Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat}]]) || Statistics`Library`iComplain[Statistics`Library`PhaseTypeDistribution::eqln, Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, 1, 2, Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]])\nDistributionParameterAssumptions[Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_]] ^:= (VectorQ[Statistics`GammaDistributionsDump`alvec] && System`Dump`ParameterValidation`iElement[Statistics`GammaDistributionsDump`alvec, Reals] =!= False && And @@ Thread[Statistics`GammaDistributionsDump`alvec >= 0] && System`Dump`ParameterValidation`iTotal[Statistics`GammaDistributionsDump`alvec] == 1) && Length[Statistics`GammaDistributionsDump`alvec] === Length[Statistics`GammaDistributionsDump`smat]\nDistributionDomain[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^= Interval[{0, Infinity}]\nPDF[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ] ^:= Statistics`GammaDistributionsDump`MatrixPhaseTypePDF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`x]\nCDF[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ] ^:= Statistics`GammaDistributionsDump`MatrixPhaseTypeCDF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`x]\nSurvivalFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ] ^:= Statistics`GammaDistributionsDump`MatrixPhaseTypeSF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`x]\nHazardFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ] ^:= Statistics`GammaDistributionsDump`MatrixPhaseTypeHF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`x]\nCharacteristicFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, Statistics`GammaDistributionsDump`t_] ^:= Statistics`GammaDistributionsDump`iPhaseTypeMGF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, I*Statistics`GammaDistributionsDump`t]\nMomentGeneratingFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, Statistics`GammaDistributionsDump`t_] ^:= Statistics`GammaDistributionsDump`iPhaseTypeMGF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`t]\nFactorialMomentGeneratingFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, Statistics`GammaDistributionsDump`t_] ^:= Statistics`GammaDistributionsDump`iPhaseTypeMGF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Log[Statistics`GammaDistributionsDump`t]]\nCentralMomentGeneratingFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, Statistics`GammaDistributionsDump`t_] ^:= Statistics`GammaDistributionsDump`iPhaseTypeMGF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`t]*Exp[-(Statistics`GammaDistributionsDump`t*Statistics`GammaDistributionsDump`iPhaseTypeMean[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat])]\nCumulantGeneratingFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, Statistics`GammaDistributionsDump`t_] ^:= Log[Statistics`GammaDistributionsDump`iPhaseTypeMGF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`t]]\nMean[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^:= Statistics`GammaDistributionsDump`iPhaseTypeMean[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]\nVariance[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^:= Statistics`GammaDistributionsDump`iPhaseTypeVariance[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]\nStandardDeviation[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^:= Sqrt[Statistics`GammaDistributionsDump`iPhaseTypeVariance[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat]]\nSkewness[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^:= Module[{Statistics`GammaDistributionsDump`sinv, Statistics`GammaDistributionsDump`m1, Statistics`GammaDistributionsDump`m2, Statistics`GammaDistributionsDump`m3}, Statistics`GammaDistributionsDump`sinv = Inverse[Statistics`GammaDistributionsDump`smat]; Statistics`GammaDistributionsDump`m1 = -(1!*Total[Statistics`GammaDistributionsDump`alvec . Statistics`GammaDistributionsDump`sinv]); Statistics`GammaDistributionsDump`m2 = (Plus[2!])*Total[Statistics`GammaDistributionsDump`alvec . MatrixPower[Statistics`GammaDistributionsDump`sinv, 2]]; Statistics`GammaDistributionsDump`m3 = -(3!*Total[Statistics`GammaDistributionsDump`alvec . MatrixPower[Statistics`GammaDistributionsDump`sinv, 3]]); (Statistics`GammaDistributionsDump`m3 + Statistics`GammaDistributionsDump`m1*(2*Statistics`GammaDistributionsDump`m1^2 - 3*Statistics`GammaDistributionsDump`m2))\/(Statistics`GammaDistributionsDump`m2 - Statistics`GammaDistributionsDump`m1^2)^(3\/2)]\nKurtosis[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^:= Module[{Statistics`GammaDistributionsDump`sinv, Statistics`GammaDistributionsDump`m1, Statistics`GammaDistributionsDump`m2, Statistics`GammaDistributionsDump`m3, Statistics`GammaDistributionsDump`m4, Statistics`GammaDistributionsDump`sinv2}, Statistics`GammaDistributionsDump`sinv = Inverse[Statistics`GammaDistributionsDump`smat]; Statistics`GammaDistributionsDump`m1 = -(1!*Total[Statistics`GammaDistributionsDump`alvec . Statistics`GammaDistributionsDump`sinv]); Statistics`GammaDistributionsDump`m2 = (Plus[2!])*Total[Statistics`GammaDistributionsDump`alvec . (Statistics`GammaDistributionsDump`sinv2 = MatrixPower[Statistics`GammaDistributionsDump`sinv, 2])]; Statistics`GammaDistributionsDump`m3 = -(3!*Total[Statistics`GammaDistributionsDump`alvec . Statistics`GammaDistributionsDump`sinv2 . Statistics`GammaDistributionsDump`sinv]); Statistics`GammaDistributionsDump`m4 = (Plus[4!])*Total[Statistics`GammaDistributionsDump`alvec . MatrixPower[Statistics`GammaDistributionsDump`sinv2, 2]]; (Statistics`GammaDistributionsDump`m4 - 4*Statistics`GammaDistributionsDump`m1*Statistics`GammaDistributionsDump`m3 + 3*Statistics`GammaDistributionsDump`m2^2)\/(Statistics`GammaDistributionsDump`m2 - Statistics`GammaDistributionsDump`m1^2)^2 - 3]\nStatistics`Library`PhaseTypeDistribution \/: Moment[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`r_Integer)?NonNegative] := Statistics`GammaDistributionsDump`iPhaseTypeMoment[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`r]\nStatistics`Library`PhaseTypeDistribution \/: CentralMoment[Statistics`GammaDistributionsDump`di:(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`r_Integer)?NonNegative] := Statistics`Library`UnivariateMomentsConvert[Statistics`GammaDistributionsDump`di, Statistics`GammaDistributionsDump`r, Moment -> CentralMoment]\nStatistics`Library`PhaseTypeDistribution \/: FactorialMoment[Statistics`GammaDistributionsDump`di:(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`r_Integer)?NonNegative] := Statistics`Library`UnivariateMomentsConvert[Statistics`GammaDistributionsDump`di, Statistics`GammaDistributionsDump`r, Moment -> FactorialMoment]\nStatistics`Library`PhaseTypeDistribution \/: Cumulant[Statistics`GammaDistributionsDump`di:(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`r_Integer)?NonNegative] := Statistics`Library`UnivariateMomentsConvert[Statistics`GammaDistributionsDump`di, Statistics`GammaDistributionsDump`r, Moment -> Cumulant]\nQuantile[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`q_)?Statistics`Library`QuantileQ] ^:= With[{Statistics`GammaDistributionsDump`res = Statistics`GammaDistributionsDump`iPhaseTypeQuantile[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`q]}, Statistics`GammaDistributionsDump`res \/; Statistics`GammaDistributionsDump`res =!= $Failed]\nInverseCDF[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`q_)?Statistics`Library`QuantileQ] ^:= With[{Statistics`GammaDistributionsDump`res = Statistics`GammaDistributionsDump`iPhaseTypeQuantile[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`q]}, Statistics`GammaDistributionsDump`res \/; Statistics`GammaDistributionsDump`res =!= $Failed]\nMedian[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ] ^:= With[{Statistics`GammaDistributionsDump`res = Statistics`GammaDistributionsDump`iPhaseTypeQuantile[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, SetPrecision[1\/2, Internal`PrecAccur[{Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat}]]]}, Statistics`GammaDistributionsDump`res \/; Statistics`GammaDistributionsDump`res =!= $Failed]\nInverseSurvivalFunction[(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_])?DistributionParameterQ, (Statistics`GammaDistributionsDump`q_)?Statistics`Library`QuantileQ] ^:= With[{Statistics`GammaDistributionsDump`res = Statistics`GammaDistributionsDump`iPhaseTypeInverseSF[Statistics`GammaDistributionsDump`alvec, Statistics`GammaDistributionsDump`smat, Statistics`GammaDistributionsDump`q]}, Statistics`GammaDistributionsDump`res \/; Statistics`GammaDistributionsDump`res =!= $Failed]\nStatistics`Library`PhaseTypeDistribution \/: Random`DistributionVector[Statistics`GammaDistributionsDump`dist:(Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`p0_, Statistics`GammaDistributionsDump`qm_])?DistributionParameterQ, Statistics`GammaDistributionsDump`m_Integer, Statistics`GammaDistributionsDump`prec_] := Module[{Statistics`GammaDistributionsDump`res = Statistics`GammaDistributionsDump`StandardizePhaseTypeParameters @@ N[{Statistics`GammaDistributionsDump`p0, Statistics`GammaDistributionsDump`qm}, Statistics`GammaDistributionsDump`prec], Statistics`GammaDistributionsDump`evals, Statistics`GammaDistributionsDump`dists}, If[Statistics`GammaDistributionsDump`res =!= $Failed, Statistics`GammaDistributionsDump`evals = -Diagonal[Statistics`GammaDistributionsDump`res[[2]]]; Statistics`GammaDistributionsDump`dists = With[{Statistics`GammaDistributionsDump`n = Length[Statistics`GammaDistributionsDump`evals]}, Join[Table[HypoexponentialDistribution[Drop[Statistics`GammaDistributionsDump`evals, Statistics`GammaDistributionsDump`k]], {Statistics`GammaDistributionsDump`k, 0, Statistics`GammaDistributionsDump`n - 2}], {ExponentialDistribution[Last[Statistics`GammaDistributionsDump`evals]]}]]; Random`MixtureDistributionVector[First[Statistics`GammaDistributionsDump`res], Statistics`GammaDistributionsDump`dists, Statistics`GammaDistributionsDump`m, Statistics`GammaDistributionsDump`prec], InverseCDF[Statistics`GammaDistributionsDump`dist, RandomReal[1, Statistics`GammaDistributionsDump`m, WorkingPrecision -> Statistics`GammaDistributionsDump`prec]]]]\nDownValues: Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_SparseArray, Statistics`GammaDistributionsDump`smat_List] \/; VectorQ[Statistics`GammaDistributionsDump`alvec] && MatrixQ[Statistics`GammaDistributionsDump`smat] && Length[Statistics`GammaDistributionsDump`alvec] == Length[Statistics`GammaDistributionsDump`smat] := Statistics`Library`PhaseTypeDistribution[Normal[Statistics`GammaDistributionsDump`alvec, SparseArray], Statistics`GammaDistributionsDump`smat]\nStatistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_List, Statistics`GammaDistributionsDump`smat_SparseArray] \/; VectorQ[Statistics`GammaDistributionsDump`alvec] && MatrixQ[Statistics`GammaDistributionsDump`smat] && Length[Statistics`GammaDistributionsDump`alvec] == Length[Statistics`GammaDistributionsDump`smat] := Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec, Normal[Statistics`GammaDistributionsDump`smat, SparseArray]]\nStatistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_SparseArray, Statistics`GammaDistributionsDump`smat_SparseArray] \/; VectorQ[Statistics`GammaDistributionsDump`alvec] && MatrixQ[Statistics`GammaDistributionsDump`smat] && Length[Statistics`GammaDistributionsDump`alvec] == Length[Statistics`GammaDistributionsDump`smat] := Statistics`Library`PhaseTypeDistribution[Normal[Statistics`GammaDistributionsDump`alvec, SparseArray], Normal[Statistics`GammaDistributionsDump`smat, SparseArray]]\nSubValues: Statistics`Library`PhaseTypeDistribution[Statistics`GammaDistributionsDump`alvec_, Statistics`GammaDistributionsDump`smat_][\"RandomType\"] = RandomReal\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`PhaseTypeDistribution",
	"Audio`EffectsDump`PhaseVocoder":"ObjectType: Symbol\nUsage: Audio`EffectsDump`PhaseVocoder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`EffectsDump`PhaseVocoder",
	"PacletManager`Package`PhasLinkBase":"ObjectType: Symbol\nUsage: PacletManager`Package`PhasLinkBase\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PhasLinkBase[PacletManager`Paclet`Private`paclet_PacletObject, PacletManager`Paclet`Private`linkBase_String] := If[PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, \"Name\"] == PacletManager`Paclet`Private`linkBase, True, MemberQ[ReplaceList[\"LinkBase\", Flatten[Rest \/@ PacletManager`Package`cullExtensionsFor[PacletManager`Package`PgetExtensions[PacletManager`Paclet`Private`paclet, PacletManager`Package`$linkableExtensions], {\"WolframVersion\", \"SystemID\", \"ProductID\"}]]], PacletManager`Paclet`Private`linkBase]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PhasLinkBase",
	"RandomProcesses`PhPhQueueingProcess":"ObjectType: Symbol\nUsage: RandomProcesses`PhPhQueueingProcess\nDocumentation: None\nOwnValues: None\nUpValues: DistributionParameterQ[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`adist_, RandomProcesses`PhPhQueueingProcessDump`sdist_, 1, Infinity, RandomProcesses`PhPhQueueingProcessDump`i_][RandomProcesses`PhPhQueueingProcessDump`t_]] ^:= Block[{RandomProcesses`PhPhQueueingProcessDump`a1, RandomProcesses`PhPhQueueingProcessDump`s1}, RandomProcesses`PhPhQueueingProcessDump`a1 = Mean[RandomProcesses`PhPhQueueingProcessDump`adist]; RandomProcesses`PhPhQueueingProcessDump`s1 = Mean[RandomProcesses`PhPhQueueingProcessDump`sdist]; Quiet[Internal`LiterallyAbsentQ[1\/RandomProcesses`PhPhQueueingProcessDump`a1 > 0 && 1\/RandomProcesses`PhPhQueueingProcessDump`s1 > 0 && RandomProcesses`PhPhQueueingProcessDump`t >= 0 && Element[RandomProcesses`PhPhQueueingProcessDump`i, Integers] && RandomProcesses`PhPhQueueingProcessDump`i >= 0, False]] \/; Internal`LiterallyAbsentQ[{RandomProcesses`PhPhQueueingProcessDump`a1, RandomProcesses`PhPhQueueingProcessDump`s1}, Mean]]\nStatistics`Library`DiscreteUnivariateDistributionQ[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`adist_, RandomProcesses`PhPhQueueingProcessDump`sdist_, 1, Infinity, RandomProcesses`PhPhQueueingProcessDump`i_][RandomProcesses`PhPhQueueingProcessDump`t_]] \/; RandomProcesses`PhPhQueueingProcessDump`AIq[RandomProcesses`PhPhQueueingProcessDump`t] && DistributionParameterQ[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`adist, RandomProcesses`PhPhQueueingProcessDump`sdist, 1, Infinity, RandomProcesses`PhPhQueueingProcessDump`i][RandomProcesses`PhPhQueueingProcessDump`t]] ^:= True\nStatistics`Library`DistributionNParameterQ[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`adist_, RandomProcesses`PhPhQueueingProcessDump`sdist_, 1, Infinity, (RandomProcesses`PhPhQueueingProcessDump`i_)?IntegerQ][RandomProcesses`PhPhQueueingProcessDump`t_]] ^:= Block[{RandomProcesses`PhPhQueueingProcessDump`a1, RandomProcesses`PhPhQueueingProcessDump`s1}, RandomProcesses`PhPhQueueingProcessDump`a1 = Mean[RandomProcesses`PhPhQueueingProcessDump`adist]; RandomProcesses`PhPhQueueingProcessDump`s1 = Mean[RandomProcesses`PhPhQueueingProcessDump`sdist]; Quiet[TrueQ[1\/RandomProcesses`PhPhQueueingProcessDump`a1 > 0 && 1\/RandomProcesses`PhPhQueueingProcessDump`s1 > 0 && RandomProcesses`PhPhQueueingProcessDump`t >= 0 && Element[RandomProcesses`PhPhQueueingProcessDump`i, Integers] && RandomProcesses`PhPhQueueingProcessDump`i >= 0]] \/; Internal`LiterallyAbsentQ[{RandomProcesses`PhPhQueueingProcessDump`a1, RandomProcesses`PhPhQueueingProcessDump`s1}, Mean]]\nRandomProcesses`MeanQueueSystemSize[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1_, RandomProcesses`PhPhQueueingProcessDump`dist2_, 1, Infinity, 0][Infinity]] \/; Mean[RandomProcesses`PhPhQueueingProcessDump`dist1] > Mean[RandomProcesses`PhPhQueueingProcessDump`dist2] ^:= Block[{RandomProcesses`PhPhQueueingProcessDump`p1, RandomProcesses`PhPhQueueingProcessDump`t, RandomProcesses`PhPhQueueingProcessDump`t0, RandomProcesses`PhPhQueueingProcessDump`xi, RandomProcesses`PhPhQueueingProcessDump`p2, RandomProcesses`PhPhQueueingProcessDump`s, RandomProcesses`PhPhQueueingProcessDump`s0, RandomProcesses`PhPhQueueingProcessDump`sigma, RandomProcesses`PhPhQueueingProcessDump`res}, RandomProcesses`PhPhQueueingProcessDump`p1 = Statistics`Library`ToPhaseTypeParameters[RandomProcesses`PhPhQueueingProcessDump`dist1]; (RandomProcesses`PhPhQueueingProcessDump`p1 = RandomProcesses`PhPhQueueingProcessDump`p1[[All,2]]; RandomProcesses`PhPhQueueingProcessDump`xi = {RandomProcesses`PhPhQueueingProcessDump`p1[[1]]}; RandomProcesses`PhPhQueueingProcessDump`t = RandomProcesses`PhPhQueueingProcessDump`p1[[2]]; RandomProcesses`PhPhQueueingProcessDump`t0 = RandomProcesses`PhPhQueueingProcessDump`p1[[3]]; RandomProcesses`PhPhQueueingProcessDump`p2 = Statistics`Library`ToPhaseTypeParameters[RandomProcesses`PhPhQueueingProcessDump`dist2]; (RandomProcesses`PhPhQueueingProcessDump`p2 = RandomProcesses`PhPhQueueingProcessDump`p2[[All,2]]; RandomProcesses`PhPhQueueingProcessDump`sigma = {RandomProcesses`PhPhQueueingProcessDump`p2[[1]]}; RandomProcesses`PhPhQueueingProcessDump`s = RandomProcesses`PhPhQueueingProcessDump`p2[[2]]; RandomProcesses`PhPhQueueingProcessDump`s0 = RandomProcesses`PhPhQueueingProcessDump`p2[[3]]; RandomProcesses`PhPhQueueingProcessDump`res = RandomProcesses`PhPhQueueingProcessDump`QueueSystemSize[RandomProcesses`PhPhQueueingProcessDump`t, RandomProcesses`PhPhQueueingProcessDump`t0, RandomProcesses`PhPhQueueingProcessDump`s, RandomProcesses`PhPhQueueingProcessDump`s0, RandomProcesses`PhPhQueueingProcessDump`xi, RandomProcesses`PhPhQueueingProcessDump`sigma]; RandomProcesses`PhPhQueueingProcessDump`res \/; NumericQ[RandomProcesses`PhPhQueueingProcessDump`res]) \/; VectorQ[RandomProcesses`PhPhQueueingProcessDump`p2]) \/; VectorQ[RandomProcesses`PhPhQueueingProcessDump`p1]]\nRandomProcesses`MeanQueueSystemTime[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1_, RandomProcesses`PhPhQueueingProcessDump`dist2_, 1, Infinity, 0][Infinity]] ^:= Block[{RandomProcesses`PhPhQueueingProcessDump`res, RandomProcesses`PhPhQueueingProcessDump`m}, RandomProcesses`PhPhQueueingProcessDump`res = RandomProcesses`MeanQueueSystemSize[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1, RandomProcesses`PhPhQueueingProcessDump`dist2, 1, Infinity, 0][Infinity]]; (RandomProcesses`PhPhQueueingProcessDump`m = Mean[RandomProcesses`PhPhQueueingProcessDump`dist1]; RandomProcesses`PhPhQueueingProcessDump`m*RandomProcesses`PhPhQueueingProcessDump`res \/; Internal`LiterallyAbsentQ[RandomProcesses`PhPhQueueingProcessDump`m, Mean]) \/; Internal`LiterallyAbsentQ[RandomProcesses`PhPhQueueingProcessDump`res, RandomProcesses`MeanQueueSystemSize]]\nRandomProcesses`MeanQueueWaitingTime[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1_, RandomProcesses`PhPhQueueingProcessDump`dist2_, 1, Infinity, 0][Infinity]] ^:= Block[{RandomProcesses`PhPhQueueingProcessDump`res, RandomProcesses`PhPhQueueingProcessDump`m}, RandomProcesses`PhPhQueueingProcessDump`res = RandomProcesses`MeanQueueSystemTime[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1, RandomProcesses`PhPhQueueingProcessDump`dist2, 1, Infinity, 0][Infinity]]; (RandomProcesses`PhPhQueueingProcessDump`m = Mean[RandomProcesses`PhPhQueueingProcessDump`dist2]; RandomProcesses`PhPhQueueingProcessDump`res - RandomProcesses`PhPhQueueingProcessDump`m \/; Internal`LiterallyAbsentQ[RandomProcesses`PhPhQueueingProcessDump`m, Mean]) \/; Internal`LiterallyAbsentQ[RandomProcesses`PhPhQueueingProcessDump`res, RandomProcesses`MeanQueueSystemSize]]\nRandomProcesses`MeanQueueLength[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1_, RandomProcesses`PhPhQueueingProcessDump`dist2_, 1, Infinity, 0][Infinity]] ^:= Block[{RandomProcesses`PhPhQueueingProcessDump`res, RandomProcesses`PhPhQueueingProcessDump`m}, RandomProcesses`PhPhQueueingProcessDump`res = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1, RandomProcesses`PhPhQueueingProcessDump`dist2, 1, Infinity, 0][Infinity]]; (RandomProcesses`PhPhQueueingProcessDump`m = Mean[RandomProcesses`PhPhQueueingProcessDump`dist1]; RandomProcesses`PhPhQueueingProcessDump`res\/RandomProcesses`PhPhQueueingProcessDump`m \/; Internal`LiterallyAbsentQ[RandomProcesses`PhPhQueueingProcessDump`m, Mean]) \/; Internal`LiterallyAbsentQ[RandomProcesses`PhPhQueueingProcessDump`res, RandomProcesses`MeanQueueSystemSize]]\nDownValues: Except[HoldPattern[RandomProcesses`PhPhQueueingProcess][_, __], HoldPattern[RandomProcesses`PhPhQueueingProcess][RandomProcesses`PhPhQueueingProcessDump`expr___]] \/; ArgumentCountQ[RandomProcesses`PhPhQueueingProcess, Length[{RandomProcesses`PhPhQueueingProcessDump`expr}], 2, Infinity] := Null\nRandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`a_, RandomProcesses`PhPhQueueingProcessDump`dist2_, RandomProcesses`PhPhQueueingProcessDump`c_, RandomProcesses`PhPhQueueingProcessDump`k_, RandomProcesses`PhPhQueueingProcessDump`i_] \/; Statistics`Library`AdmissibleUnivariateInputQ[RandomProcesses`PhPhQueueingProcessDump`a] := RandomProcesses`PhPhQueueingProcess[ExponentialDistribution[RandomProcesses`PhPhQueueingProcessDump`a], RandomProcesses`PhPhQueueingProcessDump`dist2, RandomProcesses`PhPhQueueingProcessDump`c, RandomProcesses`PhPhQueueingProcessDump`k, RandomProcesses`PhPhQueueingProcessDump`i]\nRandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1_, RandomProcesses`PhPhQueueingProcessDump`s_, RandomProcesses`PhPhQueueingProcessDump`c_, RandomProcesses`PhPhQueueingProcessDump`k_, RandomProcesses`PhPhQueueingProcessDump`i_] \/; Statistics`Library`AdmissibleUnivariateInputQ[RandomProcesses`PhPhQueueingProcessDump`s] := RandomProcesses`PhPhQueueingProcess[RandomProcesses`PhPhQueueingProcessDump`dist1, ExponentialDistribution[RandomProcesses`PhPhQueueingProcessDump`s], RandomProcesses`PhPhQueueingProcessDump`c, RandomProcesses`PhPhQueueingProcessDump`k, RandomProcesses`PhPhQueueingProcessDump`i]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {}\nAttributes: {}\nFullName: RandomProcesses`PhPhQueueingProcess",
	"QuantityUnits`Private`PhysicalConstantValue":"ObjectType: Symbol\nUsage: QuantityUnits`Private`PhysicalConstantValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityUnits`Private`PhysicalConstantValue",
	"Charting`PictorialBar":"ObjectType: Symbol\nUsage: Charting`PictorialBar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PictorialBar[None] := None\nCharting`PictorialBar[Automatic] := Automatic\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {System`BarFunctionDump`a_, All}}] := Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`a, Scaled[1]}}]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {All, System`BarFunctionDump`a_}}] := Charting`PictorialBar[{System`BarFunctionDump`marker, {Scaled[1], System`BarFunctionDump`a}}]\nCharting`PictorialBar[System`BarFunctionDump`marker:Except[_List]] := Charting`PictorialBar[{System`BarFunctionDump`marker, {Automatic, Automatic}}]\nCharting`PictorialBar[{System`BarFunctionDump`marker:Except[_List]}] := Charting`PictorialBar[{System`BarFunctionDump`marker, {Automatic, Automatic}}]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, Automatic}] := Charting`PictorialBar[{System`BarFunctionDump`marker, {Automatic, Automatic}}]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, All}] := Charting`PictorialBar[{System`BarFunctionDump`marker, {All, All}}]\nSubValues: Charting`PictorialBar[{System`BarFunctionDump`marker_, {Scaled[System`BarFunctionDump`sw_], Scaled[System`BarFunctionDump`sh_]}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`w, System`BarFunctionDump`h, System`BarFunctionDump`stretch}, If[System`BarFunctionDump`sw === 1 || System`BarFunctionDump`sh === 1, System`BarFunctionDump`stretch = True, System`BarFunctionDump`stretch = False]; System`BarFunctionDump`w = System`BarFunctionDump`sw*(System`BarFunctionDump`x1 - System`BarFunctionDump`x0); System`BarFunctionDump`h = System`BarFunctionDump`sh*(System`BarFunctionDump`y1 - System`BarFunctionDump`y0); Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, Append[Flatten[{System`BarFunctionDump`o}], \"Stretch\" -> True]]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {(System`BarFunctionDump`w_)?Positive, Scaled[System`BarFunctionDump`sh_]}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`h}, System`BarFunctionDump`h = System`BarFunctionDump`sh*(System`BarFunctionDump`y1 - System`BarFunctionDump`y0); Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, Append[Flatten[{System`BarFunctionDump`o}], \"Stretch\" -> True]]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {Scaled[System`BarFunctionDump`sw_], (System`BarFunctionDump`h_)?Positive}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`w}, System`BarFunctionDump`w = System`BarFunctionDump`sw*(System`BarFunctionDump`x1 - System`BarFunctionDump`x0); Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, Append[Flatten[{System`BarFunctionDump`o}], \"Stretch\" -> True]]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {Automatic, Automatic}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Switch[System`Utilities`StringName[Charting`ChartStyleInformation[\"BarOrigin\"]], \"Left\" | \"Right\", Charting`PictorialBar[{System`BarFunctionDump`marker, {Automatic, All}}], _, Charting`PictorialBar[{System`BarFunctionDump`marker, {All, Automatic}}]][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {Automatic, Scaled[(System`BarFunctionDump`sy_)?Positive]}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sx}, System`BarFunctionDump`sx = (System`BarFunctionDump`sy*(System`BarFunctionDump`y1 - System`BarFunctionDump`y0))\/System`BarFunctionDump`ar; Charting`PictorialBar[{System`BarFunctionDump`marker, {Automatic, System`BarFunctionDump`sy*Abs[System`BarFunctionDump`y1 - System`BarFunctionDump`y0]}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {Scaled[(System`BarFunctionDump`sx_)?Positive], Automatic}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sy}, System`BarFunctionDump`sy = System`BarFunctionDump`sx*(System`BarFunctionDump`x1 - System`BarFunctionDump`x0)*System`BarFunctionDump`ar; Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`sx*Abs[System`BarFunctionDump`x1 - System`BarFunctionDump`x0], Automatic}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {Automatic, (System`BarFunctionDump`sy_)?Positive}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sx, System`BarFunctionDump`chartRatio, System`BarFunctionDump`boxRatio, System`BarFunctionDump`style, System`BarFunctionDump`origin}, System`BarFunctionDump`chartRatio = Charting`ChartStyleInformation[\"AspectRatio\"]; System`BarFunctionDump`boxRatio = Charting`ChartStyleInformation[\"BoundingBox\"]; System`BarFunctionDump`boxRatio = System`BarFunctionDump`boxRatio[[All,2]] - System`BarFunctionDump`boxRatio[[All,1]]; System`BarFunctionDump`boxRatio = Last[System`BarFunctionDump`boxRatio]\/First[System`BarFunctionDump`boxRatio]; System`BarFunctionDump`sx = (System`BarFunctionDump`chartRatio*System`BarFunctionDump`sy)\/(System`BarFunctionDump`ar*System`BarFunctionDump`boxRatio); Charting`dbPrint[{System`BarFunctionDump`sx, System`BarFunctionDump`sy, System`BarFunctionDump`ar, System`BarFunctionDump`boxRatio, System`BarFunctionDump`chartRatio}]; Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {(System`BarFunctionDump`sx_)?Positive, Automatic}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sy, System`BarFunctionDump`chartRatio, System`BarFunctionDump`boxRatio}, System`BarFunctionDump`chartRatio = Charting`ChartStyleInformation[\"AspectRatio\"]; System`BarFunctionDump`boxRatio = Charting`ChartStyleInformation[\"BoundingBox\"]; System`BarFunctionDump`boxRatio = System`BarFunctionDump`boxRatio[[All,2]] - System`BarFunctionDump`boxRatio[[All,1]]; System`BarFunctionDump`boxRatio = Last[System`BarFunctionDump`boxRatio]\/First[System`BarFunctionDump`boxRatio]; System`BarFunctionDump`sy = (System`BarFunctionDump`sx*System`BarFunctionDump`ar*System`BarFunctionDump`boxRatio)\/System`BarFunctionDump`chartRatio; Charting`dbPrint[{System`BarFunctionDump`sx, System`BarFunctionDump`sy, System`BarFunctionDump`ar, System`BarFunctionDump`boxRatio, System`BarFunctionDump`chartRatio}]; Charting`PictorialBar[{System`BarFunctionDump`marker, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBar[{System`BarFunctionDump`marker_, {(System`BarFunctionDump`sx_)?NumericQ, (System`BarFunctionDump`sy_)?NumericQ}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`h = System`BarFunctionDump`y1 - System`BarFunctionDump`y0, System`BarFunctionDump`w = System`BarFunctionDump`x1 - System`BarFunctionDump`x0, System`BarFunctionDump`style, System`BarFunctionDump`picture, System`BarFunctionDump`origin, System`BarFunctionDump`ysign, System`BarFunctionDump`xsign, System`BarFunctionDump`corner, System`BarFunctionDump`sign, System`BarFunctionDump`offsets}, System`BarFunctionDump`style = Charting`ChartStyleInformation[\"Style\"]; System`BarFunctionDump`origin = Charting`ChartStyleInformation[\"BarOrigin\"]; System`BarFunctionDump`origin = System`Utilities`StringName[System`BarFunctionDump`origin]; {System`BarFunctionDump`xsign, System`BarFunctionDump`ysign} = Switch[System`BarFunctionDump`origin, \"Left\", {1, 1}, \"Right\", {-1, 1}, \"Top\", {1, -1}, _ | \"Bottom\", {1, 1}]; System`BarFunctionDump`corner = Switch[System`BarFunctionDump`origin, \"Left\", {Left, Bottom}, \"Right\", {Right, Bottom}, \"Top\", {Left, Top}, _ | \"Bottom\", {Left, Bottom}]; System`BarFunctionDump`picture = System`BarFunctionDump`manglePicture[System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}, System`BarFunctionDump`style, System`BarFunctionDump`o]; Charting`dbPrint[\"sx, sy, w, h: \", {System`BarFunctionDump`sx, System`BarFunctionDump`sy, System`BarFunctionDump`w, System`BarFunctionDump`h}]; {System`BarFunctionDump`offsets = Flatten[Table[N[{{System`BarFunctionDump`xsign*System`BarFunctionDump`sx*(System`BarFunctionDump`i - 1), System`BarFunctionDump`ysign*System`BarFunctionDump`sy*(System`BarFunctionDump`j - 1)}}], {System`BarFunctionDump`i, Ceiling[Abs[System`BarFunctionDump`w\/System`BarFunctionDump`sx]]}, {System`BarFunctionDump`j, Ceiling[Abs[System`BarFunctionDump`h\/System`BarFunctionDump`sy]]}], 1]; If[Length[System`BarFunctionDump`offsets] === 0, {}, Inset[Graphics[GeometricTransformation[Inset[System`BarFunctionDump`picture, {0, 0}, System`BarFunctionDump`corner, {System`BarFunctionDump`xsign*System`BarFunctionDump`sx, System`BarFunctionDump`ysign*System`BarFunctionDump`sy}], System`BarFunctionDump`offsets], PlotRange -> {{0, System`BarFunctionDump`xsign*Abs[System`BarFunctionDump`w]}, {0, System`BarFunctionDump`ysign*Abs[System`BarFunctionDump`h]}}, AspectRatio -> Full, ImagePadding -> None], {System`BarFunctionDump`x0, System`BarFunctionDump`y0}, {Left, Bottom}, {Abs[System`BarFunctionDump`x1 - System`BarFunctionDump`x0], Abs[System`BarFunctionDump`y1 - System`BarFunctionDump`y0]}, If[System`BarFunctionDump`h >= 0, {{Sign[System`BarFunctionDump`w]*1, 0}, {0, 1}}, {{Sign[System`BarFunctionDump`w]*1, 0}, {0, -1}}]]], {Opacity[0], Point[{System`BarFunctionDump`x1, System`BarFunctionDump`y1}]}}]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PictorialBar",
	"Charting`PictorialBar3D":"ObjectType: Symbol\nUsage: Charting`PictorialBar3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PictorialBar3D[None] := Charting`AutomaticBar3D\nCharting`PictorialBar3D[{System`BarFunctionDump`marker:Except[_List]}, System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {Automatic, Automatic}}, System`BarFunctionDump`getrange]\nCharting`PictorialBar3D[{System`BarFunctionDump`marker_}, System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBar3D[{System`BarFunctionDump`marker_, All}, System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBar3D[{System`BarFunctionDump`marker_, {Automatic, _}}, System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBar3D[{System`BarFunctionDump`marker_, {_, Automatic}}, System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBar3D[System`BarFunctionDump`marker:Except[_List], System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {Automatic, Automatic}}, System`BarFunctionDump`getrange]\nCharting`PictorialBar3D[{System`BarFunctionDump`marker_, Automatic}, System`BarFunctionDump`getrange_] := Charting`PictorialBar3D[{System`BarFunctionDump`marker, {Automatic, Automatic}}, System`BarFunctionDump`getrange]\nSubValues: Charting`PictorialBar3D[{System`BarFunctionDump`marker_, {All, All}}, System`BarFunctionDump`getrange_][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}, {System`BarFunctionDump`z0_, System`BarFunctionDump`z1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`temp}, {If[Head[System`BarFunctionDump`marker] =!= Graphics3D, Charting`AutomaticBar3D[{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}, {System`BarFunctionDump`z0, System`BarFunctionDump`z1}}, System`BarFunctionDump`data, System`BarFunctionDump`o], GeometricTransformation[First[System`BarFunctionDump`marker], RescalingTransform[System`BarFunctionDump`getrange, {{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}, {System`BarFunctionDump`z0, System`BarFunctionDump`z1}}]]]}]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PictorialBar3D",
	"Charting`PictorialBubble":"ObjectType: Symbol\nUsage: Charting`PictorialBubble\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PictorialBubble[None] := Charting`AutomaticBubble\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {System`BarFunctionDump`a_, All}}] := Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`a, Scaled[1]}}]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {All, System`BarFunctionDump`a_}}] := Charting`PictorialBubble[{System`BarFunctionDump`marker, {Scaled[1], System`BarFunctionDump`a}}]\nCharting`PictorialBubble[System`BarFunctionDump`marker:Except[_List]] := Charting`PictorialBubble[{System`BarFunctionDump`marker, {Automatic, Automatic}}]\nCharting`PictorialBubble[{System`BarFunctionDump`marker:Except[_List]}] := Charting`PictorialBubble[{System`BarFunctionDump`marker, {Automatic, Automatic}}]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, Automatic}] := Charting`PictorialBubble[{System`BarFunctionDump`marker, {Automatic, Automatic}}]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, All}] := Charting`PictorialBubble[{System`BarFunctionDump`marker, {All, All}}]\nSubValues: Charting`PictorialBubble[{System`BarFunctionDump`marker_, {Scaled[System`BarFunctionDump`sw_], Scaled[System`BarFunctionDump`sh_]}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`w, System`BarFunctionDump`h}, System`BarFunctionDump`w = System`BarFunctionDump`sw*(System`BarFunctionDump`x1 - System`BarFunctionDump`x0); System`BarFunctionDump`h = System`BarFunctionDump`sh*(System`BarFunctionDump`y1 - System`BarFunctionDump`y0); Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, Append[Flatten[{System`BarFunctionDump`o}], \"Stretch\" -> True]]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {(System`BarFunctionDump`w_)?Positive, Scaled[System`BarFunctionDump`sh_]}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`h}, System`BarFunctionDump`h = System`BarFunctionDump`sh*(System`BarFunctionDump`y1 - System`BarFunctionDump`y0); Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, Append[Flatten[{System`BarFunctionDump`o}], \"Stretch\" -> True]]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {Scaled[System`BarFunctionDump`sw_], (System`BarFunctionDump`h_)?Positive}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`w}, System`BarFunctionDump`w = System`BarFunctionDump`sw*(System`BarFunctionDump`x1 - System`BarFunctionDump`x0); Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, Append[Flatten[{System`BarFunctionDump`o}], \"Stretch\" -> True]]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {Automatic, Automatic}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Switch[Charting`ChartStyleInformation[\"BarOrigin\"], Left | Right, Charting`PictorialBubble[{System`BarFunctionDump`marker, {All, All}}], _, Charting`PictorialBubble[{System`BarFunctionDump`marker, {All, All}}]][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {Automatic, Scaled[(System`BarFunctionDump`sy_)?Positive]}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sx}, System`BarFunctionDump`sx = (System`BarFunctionDump`sy*(System`BarFunctionDump`y1 - System`BarFunctionDump`y0))\/System`BarFunctionDump`ar; Charting`PictorialBubble[{System`BarFunctionDump`marker, {Automatic, System`BarFunctionDump`sy*Abs[System`BarFunctionDump`y1 - System`BarFunctionDump`y0]}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {Scaled[(System`BarFunctionDump`sx_)?Positive], Automatic}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sy}, System`BarFunctionDump`sy = System`BarFunctionDump`sx*(System`BarFunctionDump`x1 - System`BarFunctionDump`x0)*System`BarFunctionDump`ar; Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`sx*Abs[System`BarFunctionDump`x1 - System`BarFunctionDump`x0], Automatic}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {Automatic, (System`BarFunctionDump`sy_)?Positive}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sx, System`BarFunctionDump`chartRatio, System`BarFunctionDump`boxRatio, System`BarFunctionDump`style}, System`BarFunctionDump`chartRatio = Charting`ChartStyleInformation[\"AspectRatio\"]; System`BarFunctionDump`boxRatio = Charting`ChartStyleInformation[\"BoundingBox\"]; System`BarFunctionDump`boxRatio = System`BarFunctionDump`boxRatio[[All,2]] - System`BarFunctionDump`boxRatio[[All,1]]; System`BarFunctionDump`boxRatio = Last[System`BarFunctionDump`boxRatio]\/First[System`BarFunctionDump`boxRatio]; System`BarFunctionDump`sx = (System`BarFunctionDump`chartRatio*System`BarFunctionDump`sy)\/(System`BarFunctionDump`ar*System`BarFunctionDump`boxRatio); Charting`dbPrint[{System`BarFunctionDump`sx, System`BarFunctionDump`sy, System`BarFunctionDump`ar, System`BarFunctionDump`boxRatio, System`BarFunctionDump`chartRatio}]; Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {(System`BarFunctionDump`sx_)?Positive, Automatic}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`ar = System`BarFunctionDump`getAspectRatio[System`BarFunctionDump`marker], System`BarFunctionDump`sy, System`BarFunctionDump`chartRatio, System`BarFunctionDump`boxRatio}, System`BarFunctionDump`chartRatio = Charting`ChartStyleInformation[\"AspectRatio\"]; System`BarFunctionDump`boxRatio = Charting`ChartStyleInformation[\"BoundingBox\"]; System`BarFunctionDump`boxRatio = System`BarFunctionDump`boxRatio[[All,2]] - System`BarFunctionDump`boxRatio[[All,1]]; System`BarFunctionDump`boxRatio = Last[System`BarFunctionDump`boxRatio]\/First[System`BarFunctionDump`boxRatio]; System`BarFunctionDump`sy = (System`BarFunctionDump`sx*System`BarFunctionDump`ar*System`BarFunctionDump`boxRatio)\/System`BarFunctionDump`chartRatio; Charting`dbPrint[{System`BarFunctionDump`sx, System`BarFunctionDump`sy, System`BarFunctionDump`ar, System`BarFunctionDump`boxRatio, System`BarFunctionDump`chartRatio}]; Charting`PictorialBubble[{System`BarFunctionDump`marker, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}}][{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}}, System`BarFunctionDump`data, System`BarFunctionDump`o]]\nCharting`PictorialBubble[{System`BarFunctionDump`marker_, {(System`BarFunctionDump`sx_)?NumericQ, (System`BarFunctionDump`sy_)?NumericQ}}][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`h = System`BarFunctionDump`y1 - System`BarFunctionDump`y0, System`BarFunctionDump`w = System`BarFunctionDump`x1 - System`BarFunctionDump`x0, System`BarFunctionDump`style}, System`BarFunctionDump`style = Charting`ChartStyleInformation[\"Style\"]; Charting`dbPrint[\"sx, sy, w, h\", {System`BarFunctionDump`sx, System`BarFunctionDump`sy, System`BarFunctionDump`w, System`BarFunctionDump`h}]; {Inset[Graphics[Inset[System`BarFunctionDump`manglePicture[System`BarFunctionDump`marker, {System`BarFunctionDump`w, System`BarFunctionDump`h}, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}, System`BarFunctionDump`style, System`BarFunctionDump`o], {0, 0}, {Left, Bottom}, {System`BarFunctionDump`sx, System`BarFunctionDump`sy}], PlotRange -> {{0, System`BarFunctionDump`w}, {0, System`BarFunctionDump`h}}, AspectRatio -> Full, ImagePadding -> None], {System`BarFunctionDump`x0, System`BarFunctionDump`y0}, {Left, Bottom}, {System`BarFunctionDump`x1 - System`BarFunctionDump`x0, System`BarFunctionDump`y1 - System`BarFunctionDump`y0}, If[System`BarFunctionDump`h >= 0, {{1, 0}, {0, 1}}, {{1, 0}, {0, -1}}]], {Opacity[0], Point[{System`BarFunctionDump`x1, System`BarFunctionDump`y1}]}}]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PictorialBubble",
	"Charting`PictorialBubble3D":"ObjectType: Symbol\nUsage: Charting`PictorialBubble3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PictorialBubble3D[None] := Charting`AutomaticBar3D\nCharting`PictorialBubble3D[{System`BarFunctionDump`marker:Except[_List]}, System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {Automatic, Automatic}}, System`BarFunctionDump`getrange]\nCharting`PictorialBubble3D[{System`BarFunctionDump`marker_}, System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBubble3D[{System`BarFunctionDump`marker_, All}, System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBubble3D[{System`BarFunctionDump`marker_, {Automatic, _}}, System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBubble3D[{System`BarFunctionDump`marker_, {_, Automatic}}, System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {All, All}}, System`BarFunctionDump`getrange]\nCharting`PictorialBubble3D[System`BarFunctionDump`marker:Except[_List], System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {Automatic, Automatic}}, System`BarFunctionDump`getrange]\nCharting`PictorialBubble3D[{System`BarFunctionDump`marker_, Automatic}, System`BarFunctionDump`getrange_] := Charting`PictorialBubble3D[{System`BarFunctionDump`marker, {Automatic, Automatic}}, System`BarFunctionDump`getrange]\nSubValues: Charting`PictorialBubble3D[{System`BarFunctionDump`marker_, {All, All}}, System`BarFunctionDump`getrange_][{{System`BarFunctionDump`x0_, System`BarFunctionDump`x1_}, {System`BarFunctionDump`y0_, System`BarFunctionDump`y1_}, {System`BarFunctionDump`z0_, System`BarFunctionDump`z1_}}, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`temp, System`BarFunctionDump`image}, {If[Head[System`BarFunctionDump`marker] =!= Graphics3D, Charting`AutomaticBar3D[{{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}, {System`BarFunctionDump`z0, System`BarFunctionDump`z1}}, System`BarFunctionDump`data, System`BarFunctionDump`o], GeometricTransformation[First[System`BarFunctionDump`marker], RescalingTransform[System`BarFunctionDump`getrange, {{System`BarFunctionDump`x0, System`BarFunctionDump`x1}, {System`BarFunctionDump`y0, System`BarFunctionDump`y1}, {System`BarFunctionDump`z0, System`BarFunctionDump`z1}}]]]}]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PictorialBubble3D",
	"Charting`PictorialTrap":"ObjectType: Symbol\nUsage: Charting`PictorialTrap\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PictorialTrap",
	"BoxForm`PiecewiseDefault":"ObjectType: Symbol\nUsage: BoxForm`PiecewiseDefault\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`PiecewiseDefault",
	"Simplify`PiecewiseGerm":"ObjectType: Symbol\nUsage: Simplify`PiecewiseGerm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PiecewiseGerm[PiecewiseDump`f_, PiecewiseDump`x_, PiecewiseDump`x0_, PiecewiseDump`dir_, PiecewiseDump`assum_, PiecewiseDump`weak_] := Module[{PiecewiseDump`ff, PiecewiseDump`rec}, PiecewiseDump`ff = Simplify`PWReplaceProgrammatic[PiecewiseDump`f]; Internal`WithLocalSettings[PiecewiseDump`rec = \"TranscendentalRecursionLimit\" \/. Internal`ReduceOptions[]; Internal`SetReduceOptions[\"TranscendentalRecursionLimit\" -> 1], PiecewiseDump`PWGermNoProg[PiecewiseDump`ff, PiecewiseDump`x, PiecewiseDump`x0, PiecewiseDump`dir, PiecewiseDump`assum, PiecewiseDump`weak], Internal`SetReduceOptions[\"TranscendentalRecursionLimit\" -> PiecewiseDump`rec]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PiecewiseGerm",
	"Image`SegmentationDump`PiecewiseLinearlySeparableContour":"ObjectType: Symbol\nUsage: Image`SegmentationDump`PiecewiseLinearlySeparableContour\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SegmentationDump`PiecewiseLinearlySeparableContour",
	"BoxForm`PiecewiseMakeExpression":"ObjectType: Symbol\nUsage: BoxForm`PiecewiseMakeExpression\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`PiecewiseMakeExpression",
	"Simplify`PiecewiseNIntegrate":"ObjectType: Symbol\nUsage: Simplify`PiecewiseNIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PiecewiseNIntegrate[PiecewiseDump`f_, PiecewiseDump`lims_, PiecewiseDump`opts_, PiecewiseDump`pwopts_] := If[PiecewiseDump`$PiecewiseNIntegrateFlag, PiecewiseDump`PWNIntegrateNoProg[Simplify`PWReplaceProgrammatic[PiecewiseDump`f], PiecewiseDump`lims, PiecewiseDump`opts, PiecewiseDump`pwopts], $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PiecewiseNIntegrate",
	"NIntegrate`PiecewiseNIntegrateMultipleRanges":"ObjectType: Symbol\nUsage: NIntegrate`PiecewiseNIntegrateMultipleRanges\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NIntegrate`PiecewiseNIntegrateMultipleRanges[NIntegrate`StrategiesDump`expr_, NIntegrate`StrategiesDump`ranges_, NIntegrate`StrategiesDump`opts_, NIntegrate`StrategiesDump`piecewiseopts_] := Block[{NIntegrate`StrategiesDump`vars, NIntegrate`StrategiesDump`waypoints, NIntegrate`StrategiesDump`separatedwaypoints, NIntegrate`StrategiesDump`separatedranges, NIntegrate`StrategiesDump`dim, NIntegrate`StrategiesDump`rangeargs, NIntegrate`StrategiesDump`res}, NIntegrate`StrategiesDump`vars = NIntegrate`StrategiesDump`ranges[[All,1]]; NIntegrate`StrategiesDump`waypoints = NIntegrate`StrategiesDump`ranges[[All,2 ;; All]]; NIntegrate`StrategiesDump`waypoints = (Partition[#1, 2, 1] & ) \/@ NIntegrate`StrategiesDump`waypoints; NIntegrate`StrategiesDump`separatedranges = MapThread[Function[{NIntegrate`StrategiesDump`var, NIntegrate`StrategiesDump`bounds}, (Prepend[#1, NIntegrate`StrategiesDump`var] & ) \/@ NIntegrate`StrategiesDump`bounds], {NIntegrate`StrategiesDump`vars, NIntegrate`StrategiesDump`waypoints}]; NIntegrate`StrategiesDump`dim = Length[NIntegrate`StrategiesDump`ranges]; NIntegrate`StrategiesDump`rangeargs = Flatten[Outer[List, Sequence @@ NIntegrate`StrategiesDump`separatedranges, 1], NIntegrate`StrategiesDump`dim - 1]; NIntegrate`StrategiesDump`res = Join @@ (NIntegrate`StrategiesDump`PiecewiseNIntegrateComplexRanges[NIntegrate`StrategiesDump`expr, #1, NIntegrate`StrategiesDump`opts, NIntegrate`StrategiesDump`piecewiseopts] & ) \/@ NIntegrate`StrategiesDump`rangeargs; NIntegrate`StrategiesDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`PiecewiseNIntegrateMultipleRanges",
	"Internal`PiecewiseOptions":"ObjectType: Symbol\nUsage: Internal`PiecewiseOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PiecewiseOptions",
	"Internal`PiecewiseOrderless":"ObjectType: Symbol\nUsage: Internal`PiecewiseOrderless\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PiecewiseOrderless",
	"Random`PiecewisePolynomialDistributionVector":"ObjectType: Symbol\nUsage: Random`PiecewisePolynomialDistributionVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`PiecewisePolynomialDistributionVector[Statistics`RandomNumberGenerationDump`pwi_, {Statistics`RandomNumberGenerationDump`x_, Statistics`RandomNumberGenerationDump`a_, Statistics`RandomNumberGenerationDump`b_}, Statistics`RandomNumberGenerationDump`n_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`pts, Statistics`RandomNumberGenerationDump`rpts, Statistics`RandomNumberGenerationDump`polys, Statistics`RandomNumberGenerationDump`ws, Statistics`RandomNumberGenerationDump`widths, Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`choices, Statistics`RandomNumberGenerationDump`counts, Statistics`RandomNumberGenerationDump`m, Statistics`RandomNumberGenerationDump`sample}, {Statistics`RandomNumberGenerationDump`pts, Statistics`RandomNumberGenerationDump`polys} = Statistics`RandomNumberGenerationDump`pwi; If[Statistics`RandomNumberGenerationDump`a < First[Statistics`RandomNumberGenerationDump`pts], Statistics`RandomNumberGenerationDump`pts = Prepend[Statistics`RandomNumberGenerationDump`pts, Statistics`RandomNumberGenerationDump`a]; Statistics`RandomNumberGenerationDump`polys = Join[{0, 0}, Statistics`RandomNumberGenerationDump`polys]; ]; If[Statistics`RandomNumberGenerationDump`b > Last[Statistics`RandomNumberGenerationDump`pts], Statistics`RandomNumberGenerationDump`pts = Append[Statistics`RandomNumberGenerationDump`pts, Statistics`RandomNumberGenerationDump`b]; Statistics`RandomNumberGenerationDump`polys = Join[Statistics`RandomNumberGenerationDump`polys, {0, 0}]; ]; If[First[Statistics`RandomNumberGenerationDump`polys] == Last[Statistics`RandomNumberGenerationDump`polys] == 0 === True, Statistics`RandomNumberGenerationDump`polys = Take[Statistics`RandomNumberGenerationDump`polys, {3, -3, 2}]]; Statistics`RandomNumberGenerationDump`widths = Differences[Statistics`RandomNumberGenerationDump`pts]; Statistics`RandomNumberGenerationDump`len = Length[Statistics`RandomNumberGenerationDump`widths]; Statistics`RandomNumberGenerationDump`ws = MapThread[#3*Statistics`RandomNumberGenerationDump`polyInt[CoefficientList[#1 \/. Statistics`RandomNumberGenerationDump`x -> #2 + Statistics`RandomNumberGenerationDump`u*#3, Statistics`RandomNumberGenerationDump`u]] & , {Statistics`RandomNumberGenerationDump`polys, Most[Statistics`RandomNumberGenerationDump`pts], Statistics`RandomNumberGenerationDump`widths}]; Statistics`RandomNumberGenerationDump`choices = RandomChoice[Statistics`RandomNumberGenerationDump`ws -> Range[Statistics`RandomNumberGenerationDump`len], Statistics`RandomNumberGenerationDump`n]; If[ !VectorQ[Statistics`RandomNumberGenerationDump`choices, IntegerQ], Return[$Failed, Module]]; Random`Private`OrderingAndCounts[{Statistics`RandomNumberGenerationDump`choices, Statistics`RandomNumberGenerationDump`counts}, Statistics`RandomNumberGenerationDump`choices, Statistics`RandomNumberGenerationDump`len]; Statistics`RandomNumberGenerationDump`sample = Internal`Bag[]; Do[Statistics`RandomNumberGenerationDump`m = Statistics`RandomNumberGenerationDump`counts[[Statistics`RandomNumberGenerationDump`r]]; If[Statistics`RandomNumberGenerationDump`m > 0, Statistics`RandomNumberGenerationDump`rpts = Random`PolynomialDistributionVector[(Statistics`RandomNumberGenerationDump`polys[[Statistics`RandomNumberGenerationDump`r]] \/. Statistics`RandomNumberGenerationDump`x -> Statistics`RandomNumberGenerationDump`pts[[Statistics`RandomNumberGenerationDump`r]] + Statistics`RandomNumberGenerationDump`u)\/Statistics`RandomNumberGenerationDump`ws[[Statistics`RandomNumberGenerationDump`r]], {Statistics`RandomNumberGenerationDump`u, 0, Statistics`RandomNumberGenerationDump`widths[[Statistics`RandomNumberGenerationDump`r]]}, Statistics`RandomNumberGenerationDump`m, Statistics`RandomNumberGenerationDump`prec]; If[VectorQ[Statistics`RandomNumberGenerationDump`rpts] && Length[Statistics`RandomNumberGenerationDump`rpts] === Statistics`RandomNumberGenerationDump`m, Internal`StuffBag[Statistics`RandomNumberGenerationDump`sample, Statistics`RandomNumberGenerationDump`pts[[Statistics`RandomNumberGenerationDump`r]] + Statistics`RandomNumberGenerationDump`rpts, 1], Return[$Failed, Module]]], {Statistics`RandomNumberGenerationDump`r, Statistics`RandomNumberGenerationDump`len}]; Internal`BagPart[Statistics`RandomNumberGenerationDump`sample, All][[Statistics`RandomNumberGenerationDump`choices]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`PiecewisePolynomialDistributionVector",
	"Simplify`PiecewiseThread":"ObjectType: Symbol\nUsage: Simplify`PiecewiseThread\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PiecewiseThread[PiecewiseDump`head_, PiecewiseDump`f_, PiecewiseDump`lims_, PiecewiseDump`opts_] := If[PiecewiseDump`$PiecewiseThreadFlag, Block[{PiecewiseDump`InterFunRules = {}}, PiecewiseDump`PWThreadNoProg[PiecewiseDump`head, PiecewiseDump`PWThreadPrep[PiecewiseDump`f], PiecewiseDump`lims, PiecewiseDump`opts] \/. PiecewiseDump`InterFunRules], $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PiecewiseThread",
	"SurfaceGraphics`Methods`PiecewiseTimeConstraint":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PiecewiseTimeConstraint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PiecewiseTimeConstraint",
	"ComputationalGeometry`Surface`PinchEdgeE":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`PinchEdgeE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`PinchEdgeE",
	"ComputationalGeometry`Surface`PinchEdgeV":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`PinchEdgeV\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`PinchEdgeV",
	"PacletManager`Package`PisPacked":"ObjectType: Symbol\nUsage: PacletManager`Package`PisPacked\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`Package`PisPacked[PacletManager`Paclet`Private`paclet_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Package`PisPacked",
	"Sound`PitchNameToNumber":"ObjectType: Symbol\nUsage: Sound`PitchNameToNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`PitchNameToNumber[Sound`MIDIDump`name_String] := Module[{Sound`MIDIDump`temp, Sound`MIDIDump`key, Sound`MIDIDump`sign, Sound`MIDIDump`octave}, Sound`MIDIDump`temp = StringCases[Sound`MIDIDump`name, RegularExpression[\"(?i)^([abcdefg])(sharp|♯|#|b|flat|♭|♮)?([+-]?\\\\d*)$\"] :> ToLowerCase \/@ {\"$1\", \"$2\", \"$3\"}]; If[Length[Sound`MIDIDump`temp] == 0, Sound`MIDIDump`temp = Sound`MIDIDump`name \/. Reverse \/@ Sound`MIDIDump`PercussionNames; If[NumberQ[Sound`MIDIDump`temp], Return[Sound`MIDIDump`temp - 60], Message[SoundNote::invnote, Sound`MIDIDump`name]; Return[$Failed]]; ]; {Sound`MIDIDump`key, Sound`MIDIDump`sign, Sound`MIDIDump`octave} = First[Sound`MIDIDump`temp]; Sound`MIDIDump`temp = (Sound`MIDIDump`key \/. {\"c\" -> 0, \"d\" -> 2, \"e\" -> 4, \"f\" -> 5, \"g\" -> 7, \"a\" -> 9, \"b\" -> 11}) + (Sound`MIDIDump`sign \/. {\"sharp\" | \"♯\" | \"#\" -> 1, \"flat\" | \"♭\" | \"b\" -> -1, _ -> 0}) + (ToExpression[Sound`MIDIDump`octave \/. \"\" -> 4]*12 + 12); If[Inequality[0, LessEqual, Sound`MIDIDump`temp, Less, 128], Sound`MIDIDump`temp - 60, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PitchNameToNumber",
	"Sound`PitchNumberToName":"ObjectType: Symbol\nUsage: Sound`PitchNumberToName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`PitchNumberToName[Sound`MIDIDump`num_Integer \/; -60 <= Sound`MIDIDump`num <= 67] := (StringJoin[Last[#1] \/. {0 -> \"C\", 1 -> \"CSharp\", 2 -> \"D\", 3 -> \"DSharp\", 4 -> \"E\", 5 -> \"F\", 6 -> \"FSharp\", 7 -> \"G\", 8 -> \"GSharp\", 9 -> \"A\", 10 -> \"ASharp\", 11 -> \"B\"}, ToString[First[#1] - 1]] & )[IntegerDigits[Sound`MIDIDump`num + 60, 12, 2]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PitchNumberToName",
	"Sound`PitchToNumber":"ObjectType: Symbol\nUsage: Sound`PitchToNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`PitchToNumber[Sound`MIDIDump`note_String] := Sound`PitchNameToNumber[Sound`MIDIDump`note] + 60\nSound`PitchToNumber[Sound`MIDIDump`note_Integer] := Sound`MIDIDump`note + 60\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PitchToNumber",
	"LinearAlgebra`LAPACK`PivotToPermutation":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`PivotToPermutation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`LAPACK`PivotToPermutation",
	"System`ConvertersDump`PixelNumber":"ObjectType: Symbol\nUsage: System`ConvertersDump`PixelNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`PixelNumber[System`ConvertersDump`file_] := Module[{System`ConvertersDump`strm, System`ConvertersDump`w, System`ConvertersDump`h}, System`ConvertersDump`strm = OpenRead[System`ConvertersDump`file]; Skip[System`ConvertersDump`strm, Record, 2]; {System`ConvertersDump`w, System`ConvertersDump`h} = Read[System`ConvertersDump`strm, {Number, Number}]; Close[System`ConvertersDump`strm]; System`ConvertersDump`w*System`ConvertersDump`h]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PixelNumber",
	"Image`SpatialOperationsDump`PixelPositions":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`PixelPositions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`PixelPositions",
	"Manipulate`Place":"ObjectType: Symbol\nUsage: Manipulate`Place\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`a_Manipulate`Place, BoxForm`fmt_] ^:= BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt] \/; Refresh[BoxForm`UseTextFormattingQ, None]\nMakeBoxes[Manipulate`Place[Manipulate`Dump`n_], Manipulate`Dump`fmt_] ^:= \"\"\nOptions: None\nAttributes: {}\nFullName: Manipulate`Place",
	"PredictiveInterface`PlaceholderMenu":"ObjectType: Symbol\nUsage: PredictiveInterface`PlaceholderMenu\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PredictiveInterface`PlaceholderMenu[PredictionStartupDump`args___] := Module[{PredictionStartupDump`vals, PredictionStartupDump`form}, PredictionStartupDump`vals = DownValues[PredictiveInterface`PlaceholderMenu]; PredictionStartupDump`form = FormatValues[PredictiveInterface`PlaceholderMenu]; PredictionStartupDump`LoadPredictiveInterface[]; If[PredictionStartupDump`vals =!= DownValues[PredictiveInterface`PlaceholderMenu] || PredictionStartupDump`form =!= FormatValues[PredictiveInterface`PlaceholderMenu], PredictiveInterface`PlaceholderMenu[PredictionStartupDump`args]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PredictiveInterface`PlaceholderMenu",
	"Charting`PlainAutomaticBar3D":"ObjectType: Symbol\nUsage: Charting`PlainAutomaticBar3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PlainAutomaticBar3D[System`BarFunctionDump`rect_, System`BarFunctionDump`sz_, System`BarFunctionDump`d:{___, Charting`s_String}, System`BarFunctionDump`o:OptionsPattern[]] := {ChartElementData[\"Cube\", \"ChartElementFunction\", \"Shading\" -> \"Solid\"][System`BarFunctionDump`rect, System`BarFunctionDump`sz, System`BarFunctionDump`d, System`BarFunctionDump`o], {Black, Text[Charting`s, {Mean[System`BarFunctionDump`rect[[1]]], Mean[System`BarFunctionDump`rect[[2]]], System`BarFunctionDump`rect[[3,2]]}, {0, 1.1}, Background -> White]}}\nCharting`PlainAutomaticBar3D[System`BarFunctionDump`rect_, System`BarFunctionDump`sz_, System`BarFunctionDump`d:{___, (Charting`s_)?Charting`polygonDirective}, System`BarFunctionDump`o:OptionsPattern[]] := {Charting`s, ChartElementData[\"Cube\", \"ChartElementFunction\", \"Shading\" -> \"Solid\"][System`BarFunctionDump`rect, System`BarFunctionDump`sz, System`BarFunctionDump`d, System`BarFunctionDump`o]}\nCharting`PlainAutomaticBar3D[System`BarFunctionDump`rect_, System`BarFunctionDump`data__, System`BarFunctionDump`o:OptionsPattern[]] := ChartElementData[\"Cube\", \"ChartElementFunction\", \"Shading\" -> \"Solid\"][System`BarFunctionDump`rect, System`BarFunctionDump`data, System`BarFunctionDump`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PlainAutomaticBar3D",
	"SpecialFunctions`Private`PlainSeriesPFQ":"ObjectType: Symbol\nUsage: SpecialFunctions`Private`PlainSeriesPFQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SpecialFunctions`Private`PlainSeriesPFQ",
	"GraphComputation`PlanarAdjacencyList":"ObjectType: Symbol\nUsage: GraphComputation`PlanarAdjacencyList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PlanarAdjacencyList",
	"GraphComputation`PlanarEmbedding":"ObjectType: Symbol\nUsage: GraphComputation`PlanarEmbedding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PlanarEmbedding",
	"SurfaceGraphics`Methods`PlanarRectangular":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PlanarRectangular\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PlanarRectangular",
	"Region`Mesh`PlanePolygonInclusionQ":"ObjectType: Symbol\nUsage: Region`Mesh`PlanePolygonInclusionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tolerance -> Automatic, WorkingPrecision -> Automatic, ZeroTest -> Automatic}\nAttributes: {}\nFullName: Region`Mesh`PlanePolygonInclusionQ",
	"Region`Mesh`PlanePolygonOverlapQ":"ObjectType: Symbol\nUsage: Region`Mesh`PlanePolygonOverlapQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tolerance -> Automatic, WorkingPrecision -> Automatic, ZeroTest -> Automatic}\nAttributes: {}\nFullName: Region`Mesh`PlanePolygonOverlapQ",
	"PacletManager`Paclet`Private`PlatformQualifier":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`PlatformQualifier\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`PlatformQualifier",
	"System`ConvertersDump`PlatformTest":"ObjectType: Symbol\nUsage: System`ConvertersDump`PlatformTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: System`ConvertersDump`PlatformTest[System`ConvertersDump`mode_][System`ConvertersDump`fmt_] := Module[{System`ConvertersDump`intenv, System`ConvertersDump`sysid}, System`ConvertersDump`sysid = $SystemID; System`ConvertersDump`intenv = ToExpression[\"$InterfaceEnvironment\"]; If[ !StringQ[System`ConvertersDump`intenv], Remove[\"$InterfaceEnvironment\"]; System`ConvertersDump`intenv = Which[$OperatingSystem === \"Windows\", \"Windows\", $OperatingSystem === \"MacOSX\", \"Macintosh\", True, \"X\"]]; StringMatchQ[System`ConvertersDump`intenv, System`ConvertersDump`InterfaceEnvironment[System`ConvertersDump`mode, System`ConvertersDump`fmt]] && StringMatchQ[System`ConvertersDump`sysid, System`ConvertersDump`SystemID[System`ConvertersDump`mode, System`ConvertersDump`fmt]]]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PlatformTest",
	"Region`Polyhedron`PlatonicSolidQ":"ObjectType: Symbol\nUsage: Region`Polyhedron`PlatonicSolidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[Except[_List | _StringQ], ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[{Except[_List], Except[_List]}, ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[{Except[_List], Except[_List], Except[_List]}, ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[{Except[_List], Except[_List]}, Except[_List | _StringQ], ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[{Except[_List], Except[_List], Except[_List]}, Except[_List | _StringQ], ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[{Except[_List], Except[_List], Except[_List]}, {Except[_List], Except[_List]}, ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[(Hexahedron | Cube | Dodecahedron | Icosahedron | Octahedron | Tetrahedron)[{Except[_List], Except[_List], Except[_List]}, {Except[_List], Except[_List]}, Except[_List | _StringQ], ___?OptionQ]] := True\nRegion`Polyhedron`PlatonicSolidQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Polyhedron`PlatonicSolidQ",
	"Audio`AudioGUIDump`PlaybackEnabledQ":"ObjectType: Symbol\nUsage: Audio`AudioGUIDump`PlaybackEnabledQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`AudioGUIDump`PlaybackEnabledQ[] := With[{Audio`AudioGUIDump`res = Audio`AudioGUIDump`EnableGUIForOSQ[] && Audio`AudioGUIDump`OutputDevicesAvailableQ[]}, Audio`AudioGUIDump`$playbackEnabled = Audio`AudioGUIDump`res; Audio`AudioGUIDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`AudioGUIDump`PlaybackEnabledQ",
	"Audio`AudioGUIDump`PlaybackWaveform":"ObjectType: Symbol\nUsage: Audio`AudioGUIDump`PlaybackWaveform\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`AudioGUIDump`PlaybackWaveform[Dynamic[Audio`AudioGUIDump`mngr_], Dynamic[Audio`AudioGUIDump`playState_], Dynamic[Audio`AudioGUIDump`audioPosition_]] := DynamicModule[{Audio`AudioGUIDump`sampleRate = Audio`Internals`getGUIInfo[Audio`AudioGUIDump`mngr, \"SampleRate\"], Audio`AudioGUIDump`bufferSize = Audio`Internals`GetInformation[Audio`AudioGUIDump`mngr, \"BufferSize\"], Audio`AudioGUIDump`channels = Audio`Internals`GetInformation[Audio`AudioGUIDump`mngr, \"Channels\"]}, PaneSelector[{{True, \"Play\"} -> Audio`Viz`VizAudio[Dynamic[Audio`AudioGUIDump`GetVizData[Dynamic[Audio`AudioGUIDump`mngr], Audio`AudioGUIDump`bufferSize, Audio`AudioGUIDump`channels]], Audio`AudioGUIDump`sampleRate, Dynamic[Audio`AudioGUIDump`mngr]], {True, \"Pause\"} -> Audio`Viz`VizAudio[Dynamic[ConstantArray[0., {Audio`AudioGUIDump`channels, Audio`AudioGUIDump`bufferSize}]], Audio`AudioGUIDump`sampleRate, Dynamic[Audio`AudioGUIDump`mngr]], {False, \"Pause\"} -> Audio`Viz`VizAudio[Dynamic[ConstantArray[0., {2, 4000}]], 44100, Dynamic[Audio`AudioGUIDump`mngr]], {False, \"Pause\"} -> Audio`Viz`VizAudio[Dynamic[ConstantArray[0., {2, 4000}]], 44100, Dynamic[Audio`AudioGUIDump`mngr]]}, Dynamic[{Audio`Internals`AudioManagerQ[Audio`AudioGUIDump`mngr], Replace[Audio`AudioGUIDump`playState, {\"Suspend\" | \"Stop\" -> \"Pause\"}]}], ImageSize -> Automatic]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`AudioGUIDump`PlaybackWaveform",
	"Sound`PlaySound":"ObjectType: Symbol\nUsage: Sound`PlaySound\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`PlaySound[Sound`SoundDump`stream:_Sound`SoundOutputStream | _Sound`AudioOutputStream | _Sound`MIDIOutputStream, Sound`SoundDump`pos_Real:0.] := Module[{Sound`SoundDump`audioOutputStream = None, Sound`SoundDump`midiOutputStream = None, Sound`SoundDump`playState, Sound`SoundDump`parent}, Sound`SoundDump`playState = Sound`SoundDump`SoundStreamState[Sound`SoundDump`stream, Sound`PlayState]; If[Sound`SoundDump`playState === \"Play\", Return[Sound`SoundDump`stream]]; Which[MatchQ[Sound`SoundDump`stream, _Sound`SoundOutputStream], {Sound`SoundDump`audioOutputStream, Sound`SoundDump`midiOutputStream} = Replace[Sound`SoundDump`stream, Sound`SoundDump`$StreamStreamMap]; Sound`SoundDump`parent = Sound`SoundDump`stream, MatchQ[Sound`SoundDump`stream, _Sound`AudioOutputStream], Sound`SoundDump`audioOutputStream = Sound`SoundDump`stream; Sound`SoundDump`parent = None, MatchQ[Sound`SoundDump`stream, _Sound`MIDIOutputStream], Sound`SoundDump`audioOutputStream = Sound`SoundDump`stream; Sound`SoundDump`parent = None]; If[Replace[Sound`SoundDump`audioOutputStream, Sound`SoundDump`$AudioTaskMap] === Null, Sound`SoundDump`CreateAsyncTask[Sound`SoundDump`audioOutputStream, Sound`SoundDump`parent]; Sound`SeekSound[Sound`SoundDump`stream, Sound`SoundDump`SoundStreamState[Sound`SoundDump`stream, Sound`SoundStreamPosition]]; ]; If[Sound`SoundDump`audioOutputStream =!= None && Replace[Sound`SoundDump`audioOutputStream, Sound`SoundDump`$AudioTaskMap] =!= Null, Needs[\"AudioTools`\"]; AudioTools`StartAudioAsynchronousTask[Replace[Sound`SoundDump`audioOutputStream, Sound`SoundDump`$AudioTaskMap]]]; If[Sound`SoundDump`midiOutputStream =!= None, Replace[Sound`SoundDump`midiOutputStream, Sound`SoundDump`$MIDISeqMap][Sound`SoundDump`start[]]]; Sound`SoundDump`SetSoundOutputStream[Sound`SoundDump`stream, Sound`PlayState -> \"Play\"]; Sound`SoundDump`stream]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PlaySound",
	"Sound`PlayState":"ObjectType: Symbol\nUsage: Sound`PlayState\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`PlayState",
	"Semantic`PLIDump`PLICompress":"ObjectType: Symbol\nUsage: Semantic`PLIDump`PLICompress\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Semantic`PLIDump`PLICompress[Semantic`PLIDump`tag_, Semantic`PLIDump`expr_, Semantic`PLIDump`contextPath_:{\"System`\"}, Semantic`PLIDump`context_:\"Semantic`PLIDump`Temporary`\"] := (Semantic`PLIDump`checkCompressContext[Semantic`PLIDump`tag, Semantic`PLIDump`contextPath, Semantic`PLIDump`context]; If[ !StringFreeQ[Semantic`PLIDump`context, \"Temporary\"], Quiet[Remove[Evaluate[StringJoin[Semantic`PLIDump`context, \"*\"]]]]]; Block[{$ContextPath = Semantic`PLIDump`contextPath, $Context = Semantic`PLIDump`context}, Compress[Semantic`PLIDump`expr]])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Semantic`PLIDump`PLICompress",
	"System`VectorPlotsDump`PLineIntegralConvolutionPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PLineIntegralConvolutionPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, VectorMarkers -> Automatic, StreamMarkers -> Automatic, VectorAspectRatio -> Automatic, VectorScaling -> None}\nAttributes: {}\nFullName: System`VectorPlotsDump`PLineIntegralConvolutionPlot",
	"System`VectorPlotsDump`PListLineIntegralConvolutionPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PListLineIntegralConvolutionPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, VectorAspectRatio -> Automatic, VectorScaling -> None}\nAttributes: {}\nFullName: System`VectorPlotsDump`PListLineIntegralConvolutionPlot",
	"System`VectorPlotsDump`PListStreamDensityPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PListStreamDensityPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic, VectorScaling -> None, VectorAspectRatio -> Automatic}\nAttributes: {}\nFullName: System`VectorPlotsDump`PListStreamDensityPlot",
	"System`VectorPlotsDump`PListStreamPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PListStreamPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic, VectorAspectRatio -> Automatic, VectorScaling -> None}\nAttributes: {}\nFullName: System`VectorPlotsDump`PListStreamPlot",
	"System`VectorPlotsDump`PListVectorDensityPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PListVectorDensityPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic, System`VectorPlotsDump`VectorAspectratio -> Automatic, VectorScaling -> None}\nAttributes: {}\nFullName: System`VectorPlotsDump`PListVectorDensityPlot",
	"System`VectorPlotsDump`PListVectorPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PListVectorPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic, VectorAspectRatio -> Automatic, VectorScaling -> None}\nAttributes: {}\nFullName: System`VectorPlotsDump`PListVectorPlot",
	"System`VectorPlotsDump`PListVectorPlot3D":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PListVectorPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, VectorAspectRatio -> Automatic, VectorScaling -> None, VectorMarkers -> Automatic}\nAttributes: {}\nFullName: System`VectorPlotsDump`PListVectorPlot3D",
	"Semantic`PLIDump`PLIUncompress":"ObjectType: Symbol\nUsage: Semantic`PLIDump`PLIUncompress\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Semantic`PLIDump`PLIUncompress[Semantic`PLIDump`tag_, Semantic`PLIDump`expr_, Semantic`PLIDump`contextPath_:{\"System`\"}, Semantic`PLIDump`context_:\"Semantic`PLIDump`Temporary`\"] := Module[{Semantic`PLIDump`res}, Semantic`PLIDump`checkCompressContext[Semantic`PLIDump`tag, Semantic`PLIDump`contextPath, Semantic`PLIDump`context]; Semantic`PLIDump`res = Quiet[Check[Uncompress[Semantic`PLIDump`expr, HoldComplete], Semantic`PLIDump`$UncompressFailed, Uncompress::corrupt], {Uncompress::corrupt, General::shdw}]; If[ !FreeQ[Semantic`PLIDump`res, Semantic`PLIDump`SandboxTarget], Function[Semantic`PLIDump`sbTargetPos, Block[{Semantic`PLIDump`sbTarget = Semantic`PLIDump`SandboxTarget[Extract[Semantic`PLIDump`res, Join[Semantic`PLIDump`sbTargetPos, {1}], Hold]]}, Function[Semantic`PLIDump`sandboxPos, With[{Semantic`PLIDump`sandBoxSym = Extract[Semantic`PLIDump`sbTarget, Semantic`PLIDump`sandboxPos, Function[Null, SymbolName[Unevaluated[#1]], {HoldAllComplete}]]}, Semantic`PLIDump`sbTarget[[Sequence @@ Semantic`PLIDump`sandboxPos]] = ToExpression[StringJoin[Semantic`PLIDump`context, Semantic`PLIDump`sandBoxSym], InputForm, Semantic`PLIDump`PliSymbolHold]]] \/@ Position[Semantic`PLIDump`sbTarget, Semantic`PLIDump`s_Symbol \/; MatchQ[Context[Unevaluated[Semantic`PLIDump`s]], \"Semantic`PLIDump`Sandbox`\"]]; Semantic`PLIDump`res[[Sequence @@ Semantic`PLIDump`sbTargetPos]] = Semantic`PLIDump`sbTarget \/. Semantic`PLIDump`PliSymbolHold[Semantic`PLIDump`e_] :> Semantic`PLIDump`e]] \/@ Position[Semantic`PLIDump`res, _Semantic`PLIDump`SandboxTarget]; Semantic`PLIDump`res = Semantic`PLIDump`res \/. Semantic`PLIDump`SandboxTarget[Hold[Semantic`PLIDump`e_]] :> Semantic`PLIDump`e]; Semantic`PLIDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Semantic`PLIDump`PLIUncompress",
	"Graphics`Legacy`Plot":"ObjectType: Symbol\nUsage: Graphics`Legacy`Plot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                      1\n{AspectRatio -> -----------, Axes -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> Automatic, Background -> Automatic, ColorOutput -> Automatic, Compiled -> True, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> $FormatType, Frame -> False, FrameLabel -> None, FrameStyle -> Automatic, FrameTicks -> Automatic, GridLines -> None, ImageSize -> Automatic, MaxBend -> 10., PlotDivision -> 30., PlotLabel -> None, PlotPoints -> 25, PlotRange -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, Prolog -> {}, RotateLabel -> True, TextStyle :> $TextStyle, Ticks -> Automatic}\n                GoldenRatio\nAttributes: {HoldAll}\nFullName: Graphics`Legacy`Plot",
	"Visualization`Core`Plot":"ObjectType: Symbol\nUsage: Visualization`Core`Plot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                1\n{AlignmentPoint -> Center, AspectRatio -> -----------, Axes -> True, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, ExclusionsStyle -> None, Filling -> None, FillingStyle -> Automatic, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> {#1 & }, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> {Full, Automatic}, PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, WorkingPrecision -> MachinePrecision}\n                                          GoldenRatio\nAttributes: {HoldAll}\nFullName: Visualization`Core`Plot",
	"Graphics`Legacy`Plot3D":"ObjectType: Symbol\nUsage: Graphics`Legacy`Plot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AmbientLight -> GrayLevel[0], AspectRatio -> Automatic, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, AxesStyle -> Automatic, Background -> Automatic, Boxed -> True, BoxRatios -> {1, 1, 0.4}, BoxStyle -> Automatic, ClipFill -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, Compiled -> True, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FaceGrids -> None, FormatType :> $FormatType, HiddenSurface -> True, ImageSize -> Automatic, Lighting -> True, LightSources -> {{{1., 0., 1.}, RGBColor[1, 0, 0]}, {{1., 1., 1.}, RGBColor[0, 1, 0]}, {{0., 1., 1.}, RGBColor[0, 0, 1]}}, Mesh -> True, MeshStyle -> Automatic, Plot3Matrix -> Automatic, PlotLabel -> None, PlotPoints -> 25, PlotRange -> Automatic, PlotRegion -> Automatic, Prolog -> {}, Shading -> True, SphericalRegion -> Automatic, TextStyle :> $TextStyle, Ticks -> Automatic, ViewCenter -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewVertical -> {0., 0., 1.}}\nAttributes: {HoldAll}\nFullName: Graphics`Legacy`Plot3D",
	"Visualization`Core`Plot3D":"ObjectType: Symbol\nUsage: Visualization`Core`Plot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> GrayLevel[0], Boxed -> True, BoxRatios -> {1, 1, 0.4}, BoxStyle -> {}, ClippingStyle -> Automatic, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, Exclusions -> Automatic, ExclusionsStyle -> None, FaceGrids -> None, FaceGridsStyle -> {}, Filling -> None, FillingStyle -> Opacity[0.5], FormatType :> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxRecursion -> Automatic, Mesh -> Automatic, MeshFunctions -> {#1 & , #2 & }, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> {Full, Full, Automatic}, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotationAction -> Fit, SphericalRegion -> Automatic, TextureCoordinateFunction -> Automatic, TextureCoordinateScaling -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`Plot3D",
	"Charting`PlotArgCheck":"ObjectType: Symbol\nUsage: Charting`PlotArgCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PlotArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args___, Charting`CommonDump`opts:OptionsPattern[]], Charting`CommonDump`ifn_, Charting`CommonDump`narg_] := Charting`PlotArgCheck[Charting`CommonDump`b, Charting`CommonDump`ifn, Charting`CommonDump`narg, Charting`CommonDump`narg - 1]\nCharting`PlotArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args___, Charting`CommonDump`opts:OptionsPattern[]], Charting`CommonDump`ifn_, Charting`CommonDump`narg_, Charting`CommonDump`dim_] := Block[{Charting`CommonDump`len, Charting`CommonDump`min, Charting`CommonDump`max, Charting`CommonDump`regionmin, Charting`CommonDump`regionmax, Charting`CommonDump`dmin, Charting`CommonDump`dmax}, {Charting`CommonDump`min, Charting`CommonDump`max} = Charting`padList[Flatten[{Charting`CommonDump`narg}], 2]; {Charting`CommonDump`dmin, Charting`CommonDump`dmax} = Charting`padList[Flatten[{Charting`CommonDump`dim}], 2]; Charting`CommonDump`len = Length[Unevaluated[{Charting`CommonDump`args}]]; If[Charting`CommonDump`len <= Charting`CommonDump`max, Charting`CommonDump`validateVarspec[{{Charting`CommonDump`min, Charting`CommonDump`max}, {Charting`CommonDump`dmin, Charting`CommonDump`dmax}}, Charting`CommonDump`f, Charting`CommonDump`args], Message[Charting`CommonDump`f::nonopt, Last[Function[Charting`CommonDump`z, HoldForm[Charting`CommonDump`z], HoldAll] \/@ Unevaluated[{Charting`CommonDump`args}]], Charting`CommonDump`max, HoldForm[Charting`CommonDump`b]]; False, False]] && Charting`CommonDump`plotOptCheck[Charting`CommonDump`b, Charting`CommonDump`ifn]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Charting`PlotArgCheck",
	"Explore`PlotExplorer":"ObjectType: Symbol\nUsage: Explore`PlotExplorer\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Explore`PlotExplorer[] := Information[\"Explore`PlotExplorerDump`*\"]\nExplore`PlotExplorer[Explore`PlotExplorerDump`f_String] := Symbol[StringJoin[\"Explore`PlotExplorerDump`\", Explore`PlotExplorerDump`f]]\nExplore`PlotExplorer[Explore`PlotExplorerDump`f_String, Explore`PlotExplorerDump`args__] := Explore`PlotExplorer[Explore`PlotExplorerDump`f][Explore`PlotExplorerDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Explore`PlotExplorer",
	"Legending`PlotLegendParser":"ObjectType: Symbol\nUsage: Legending`PlotLegendParser\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: Legending`PlotLegendParser[Legending`LegendDump`tag_][Legending`LegendDump`fn_, Legending`LegendDump`legendData_, Legending`LegendDump`inLegends_] := Module[{Legending`LegendDump`legends, Legending`LegendDump`count, Legending`LegendDump`legend, Legending`LegendDump`pos, Legending`LegendDump`fun, Legending`LegendDump`result}, If[ListQ[Legending`LegendDump`inLegends] && Legending`LegendDump`legendSpecQ[Legending`LegendDump`inLegends], Legending`LegendDump`legends = Legending`LegendDump`resolvePlotLegends \/@ Legending`LegendDump`inLegends; Legending`LegendDump`count = 0; Legending`LegendDump`legends = Table[{Legending`LegendDump`legend, Legending`LegendDump`pos, Legending`LegendDump`fun} = List @@ Legending`LegendDump`legends[[Legending`LegendDump`i]]; Legending`LegendDump`pos = Switch[Legending`LegendDump`pos, Automatic, Legending`LegendDump`count++; Last[Charting`padList[Legending`LegendDump`$DefaultAutomatic[\"Vertical\"], Legending`LegendDump`count]], _, Legending`LegendDump`pos]; Placed[Legending`LegendDump`legend, Legending`LegendDump`pos, Legending`LegendDump`fun], {Legending`LegendDump`i, Length[Legending`LegendDump`legends]}]; Legending`LegendDump`result = (Legending`LegendDump`plotLegendParser[\"Generic\"][Legending`LegendDump`fn, Legending`LegendDump`legendData, #1] & ) \/@ Legending`LegendDump`legends; Legending`LegendDump`result = Flatten[Legending`LegendDump`result, 1]; , Legending`LegendDump`result = Legending`LegendDump`plotLegendParser[\"Generic\"][Legending`LegendDump`fn, Legending`LegendDump`legendData, Legending`LegendDump`inLegends]; ]; Return[Legending`LegendDump`result]]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Legending`PlotLegendParser",
	"Graphics`PlotMarkers":"ObjectType: Symbol\nUsage: Graphics`PlotMarkers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PlotMarkers[] = {{\"●\", 10.96}, {\"■\", 8.96}, {\"◆\", 10.88}, {\"▲\", 10.24}, {\"▼\", 10.24}, {\"○\", 10.24}, {\"□\", 10.24}, {\"◇\", 10.24}, {\"△\", 11.136}, {\"▽\", 11.136}}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PlotMarkers",
	"Charting`PlotOrigin":"ObjectType: Symbol\nUsage: Charting`PlotOrigin\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PlotOrigin",
	"Charting`PlotParser":"ObjectType: Symbol\nUsage: Charting`PlotParser\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PlotParser[Charting`ParserDump`fn_, Charting`ParserDump`model_, Charting`ParserDump`f_, Charting`ParserDump`spec_, Charting`ParserDump`coordSize_:1, Charting`ParserDump`o:OptionsPattern[]] := Quiet[Module[{Charting`ParserDump`units, Charting`ParserDump`syswrappers, Charting`ParserDump`appwrappers, Charting`ParserDump`apppos, Charting`ParserDump`unitfunction, Charting`ParserDump`functions, Charting`ParserDump`convertunitsQ, Charting`ParserDump`scalefns}, {Charting`ParserDump`units, Charting`ParserDump`convertunitsQ, Charting`ParserDump`scalefns} = Quiet[OptionValue[{Charting`PlotParser}, {Charting`ParserDump`o}, {\"TargetUnits\", \"ConvertUnitsInFunction\", \"ScalingFunctions\"}]]; Charting`ParserDump`initProperty[Charting`ParserDump`model, {{\"RawData\", {}}, {\"Data\", {}}, {\"Expressions\", {}}, {\"CoordinateSizes\", Charting`ParserDump`coordSize}}]; Charting`ParserDump`initProperty[Charting`ParserDump`model, {{\"HasWrapperQ\", {}}, {\"EmptyDataQ\", {}}, {\"DataDimensions\", {}}, {\"DataDepth\", {}}, {\"Attributes\", {}}, {\"Expressions\", {}}}]; Charting`ParserDump`initProperty[Charting`ParserDump`model, {{\"Units\", Automatic}}]; Charting`ParserDump`initProperty[Charting`ParserDump`model, {{\"WrappedValues\", {}}, {\"WrapperFunctions\", {}}, {\"WrapperGroups\", {}}}]; Charting`ParserDump`initPList[Charting`ParserDump`model, \"SystemWrappers\"]; Charting`ParserDump`initPList[Charting`ParserDump`model, \"ApplicationWrappers\"]; Charting`ParserDump`initPList[Charting`ParserDump`model, \"MetaWrappers\"]; Charting`ParserDump`initPList[Charting`ParserDump`model, \"ModelWrappers\"]; Charting`ParserDump`initPList[Charting`ParserDump`model, \"QuantityWrappers\"]; Charting`ParserDump`initPList[Charting`ParserDump`model, \"ErrorWrappers\"]; Charting`ParserDump`initProperty[Charting`ParserDump`model, {{\"fnSymbolName\", {}}, {\"LocalizedVars\", {}}, {\"HeldLocalizedVars\", {}}, {\"ScalingFunctions\", {}}, {\"ScaleFnDims\", {}}, {\"ScaleFlag\", {}}, {\"UniqueTag\", {}}, {\"Varspec\", {}}, {\"VarspecRegion\", {}}}]; Charting`ParserDump`units = Which[Charting`ParserDump`knownUnitQ[Charting`ParserDump`units], Charting`ParserDump`units, True, Automatic]; Charting`ParserDump`model[\"Units\"] = Charting`ParserDump`units; Charting`ParserDump`model[\"ConvertUnitsInFunction\"] = TrueQ[Charting`ParserDump`convertunitsQ]; Charting`ParserDump`model[\"RawData\"] = Hold[Charting`ParserDump`f]; Charting`ParserDump`model[\"fnSymbolName\"] = Charting`ParserDump`symbolName[Charting`ParserDump`fn]; Charting`ParserDump`VarspecParser[Charting`ParserDump`fn, Charting`ParserDump`model, Charting`ParserDump`spec, Charting`ParserDump`coordSize, Charting`ParserDump`o]; Charting`ParserDump`model[\"ScaleFnDims\"] = Charting`ParserDump`resolveScalingFnDims[Charting`ParserDump`symbolName[Charting`ParserDump`fn], Length[Charting`ParserDump`model[\"LocalizedVars\"]]]; Charting`ParserDump`scalefns = Visualization`Utilities`ParseScalingFunctions[Charting`ParserDump`scalefns, Charting`ParserDump`model[\"ScaleFnDims\"], Charting`ParserDump`symbolName[Charting`ParserDump`fn]]; Charting`ParserDump`model[\"ScalingFunctions\"] = Charting`ParserDump`scalefns; Charting`ParserDump`model[\"HoldAttributes\"] =  !FreeQ[Attributes[Charting`ParserDump`fn], HoldAll | HoldFirst | HoldAllComplete]; Charting`ParserDump`model[\"Data\"] = With[{Charting`ParserDump`wrapperlists = Charting`ParserDump`$pAllWrappers}, Charting`ParserDump`plotStripWrappers[Charting`ParserDump`coordSize, Charting`ParserDump`model, Charting`ParserDump`f, Charting`ParserDump`spec, {}, Charting`ParserDump`wrapperlists]]; Charting`ParserDump`unitfunction = Transpose[{Charting`ParserDump`model[\"QuantityWrappers\", \"Keys\"], Charting`ParserDump`model[\"QuantityWrappers\", \"Values\"]}]; Charting`ParserDump`functions = Charting`ParserDump`model[\"Data\"]; If[Length[Charting`ParserDump`unitfunction] > 0, Apply[Function[{Charting`ParserDump`pos, Charting`ParserDump`ucf}, If[Charting`ParserDump`pos === {}, Charting`ParserDump`functions = Charting`ParserDump`ucf[Charting`ParserDump`functions], Charting`ParserDump`functions[[Charting`ParserDump`pos]] = Charting`ParserDump`ucf[Charting`ParserDump`functions[[Charting`ParserDump`pos]]]]], Charting`ParserDump`unitfunction, {1}]]; Charting`ParserDump`model[\"Functions\"] = Charting`ParserDump`functions; Charting`ParserDump`model[\"HasWrapperQ\"] = Length[Join[Join[Join[Join[Join[Charting`ParserDump`model[\"SystemWrappers\", \"Keys\"], Charting`ParserDump`model[\"ApplicationWrappers\", \"Keys\"]], Charting`ParserDump`model[\"MetaWrappers\", \"Keys\"]], Charting`ParserDump`model[\"ModelWrappers\", \"Keys\"]], Charting`ParserDump`model[\"QuantityWrappers\", \"Keys\"]], Charting`ParserDump`model[\"ErrorWrappers\", \"Keys\"]]] > 0; Charting`ParserDump`model[\"WrappedFunctions\"] := Charting`ParserDump`model[\"WrappedFunctions\", Charting`ParserDump`model[\"Functions\"]]; Charting`ParserDump`model[\"WrappedFunctions\", Charting`ParserDump`v_, Charting`ParserDump`tag_:Charting`ParserDump`model[\"UniqueTag\"]] := Quiet[Charting`ParserDump`model[\"WrappedFunctions\", Charting`ParserDump`v, Charting`ParserDump`tag] = Module[{Charting`ParserDump`wp, Charting`ParserDump`indextag}, Charting`ParserDump`syswrappers = Transpose[{Charting`ParserDump`model[\"SystemWrappers\", \"Keys\"], Charting`ParserDump`model[\"SystemWrappers\", \"Values\"]}]; Charting`ParserDump`appwrappers = Transpose[{Charting`ParserDump`model[\"ApplicationWrappers\", \"Keys\"], Charting`ParserDump`model[\"ApplicationWrappers\", \"Values\"]}]; Charting`ParserDump`apppos = DeleteDuplicates[Charting`ParserDump`appwrappers[[All,1]]]; Charting`ParserDump`syswrappers = Join[Charting`ParserDump`syswrappers, If[ !MatchQ[Charting`ParserDump`symbolName[Charting`ParserDump`fn], \"RegionPlot3D\"], Table[Charting`ParserDump`wp = Cases[Charting`ParserDump`appwrappers, {Charting`ParserDump`p, {Charting`ParserDump`wrapper_, ___}} :> Charting`ParserDump`wrapper]; With[{Charting`ParserDump`p = Charting`ParserDump`p, Charting`ParserDump`wp = Charting`ParserDump`wp}, {Charting`ParserDump`p, {\"AWAnnotation\", Charting`AddWrapper[Annotation[#1, {Charting`ParserDump`wp, Charting`ParserDump`tag, Charting`ParserDump`p}]] & }}], {Charting`ParserDump`p, Charting`ParserDump`apppos}], {}]]; Charting`ParserDump`syswrappers = GatherBy[Charting`ParserDump`syswrappers, First]; Charting`ParserDump`syswrappers = Transpose \/@ Charting`ParserDump`syswrappers; Charting`ParserDump`syswrappers = Apply[{First[#1], Composition @@ Last \/@ #2} & , Charting`ParserDump`syswrappers, {1}]; Charting`ParserDump`syswrappers = SortBy[Charting`ParserDump`syswrappers, Length[First[#1]] & ]; Charting`ParserDump`syswrappers = Reverse[Charting`ParserDump`syswrappers]; Charting`ParserDump`indextag = If[ !ListQ[Charting`ParserDump`v], With[{Charting`ParserDump`newtag = StringJoin[ToString[Charting`ParserDump`tag], \"#1\"]}, Switch[Charting`ParserDump`symbolName[Charting`ParserDump`fn], \"RegionPlot\" | \"RegionPlot3D\" | \"StreamPlot\" | \"StreamDensityPlot\" | \"VectorPlot\" | \"VectorDensityPlot\" | \"VectorPlot3D\", {{{}, Charting`AddWrapper[#1] & }}, _, {{{}, Charting`AddWrapper[Annotation[#1, Charting`ParserDump`newtag]] & }}]], Table[With[{Charting`ParserDump`newtag = StringJoin[ToString[Charting`ParserDump`tag], \"#\", ToString[Charting`ParserDump`i]]}, Switch[Charting`ParserDump`symbolName[Charting`ParserDump`fn], \"RegionPlot\" | \"RegionPlot3D\" | \"StreamPlot\" | \"StreamDensityPlot\" | \"VectorPlot\" | \"VectorDensityPlot\" | \"VectorPlot3D\", {{Charting`ParserDump`i}, Charting`AddWrapper[#1] & }, _, {{Charting`ParserDump`i}, Charting`AddWrapper[Annotation[#1, Charting`ParserDump`newtag]] & }]], {Charting`ParserDump`i, Reverse[Range[Length[Charting`ParserDump`v]]]}]]; Charting`ParserDump`syswrappers = Join[Charting`ParserDump`syswrappers, Charting`ParserDump`indextag]; With[{Charting`ParserDump`res = Fold[Function[{Charting`ParserDump`d, Charting`ParserDump`w}, If[First[Charting`ParserDump`w] === {}, Last[Charting`ParserDump`w][Charting`ParserDump`d], MapAt[Last[Charting`ParserDump`w], Charting`ParserDump`d, First[Charting`ParserDump`w]]], HoldFirst], Charting`ParserDump`v, Charting`ParserDump`syswrappers]}, Charting`ParserDump`res]]]; Return[Charting`ParserDump`model]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ConvertUnitsInFunction -> False, ScalingFunctions -> None, TargetUnits -> None}\nAttributes: {HoldAll}\nFullName: Charting`PlotParser",
	"Visualization`VectorFields`VectorFieldsDump`PlotPointsList":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldsDump`PlotPointsList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldsDump`PlotPointsList[Visualization`VectorFields`VectorFieldsDump`lpts_] := Visualization`VectorFields`VectorFieldsDump`lpts\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Visualization`VectorFields`VectorFieldsDump`PlotPointsList",
	"Visualization`VectorFields`VectorFieldsDump`PlotPointsParse":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldsDump`PlotPointsParse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldsDump`PlotPointsParse[Visualization`VectorFields`VectorFieldsDump`vizfunction_, Visualization`VectorFields`VectorFieldsDump`edim_Integer, Visualization`VectorFields`VectorFieldsDump`autopts_Integer, Visualization`VectorFields`VectorFieldsDump`plotpoints_] \/; MemberQ[{\"Plot\", \"ParametricPlot\", \"Plot3D\", \"DensityPlot\", \"ContourPlot\", \"RegionPlot\"}, SymbolName[Visualization`VectorFields`VectorFieldsDump`vizfunction]] := Module[{Visualization`VectorFields`VectorFieldsDump`ppts, Visualization`VectorFields`VectorFieldsDump`lpts, Visualization`VectorFields`VectorFieldsDump`spts}, {Visualization`VectorFields`VectorFieldsDump`ppts, Visualization`VectorFields`VectorFieldsDump`lpts} = Visualization`VectorFields`VectorFieldsDump`initPlotPoints[Visualization`VectorFields`VectorFieldsDump`edim, Visualization`VectorFields`VectorFieldsDump`autopts, Visualization`VectorFields`VectorFieldsDump`plotpoints]; If[Visualization`VectorFields`VectorFieldsDump`ppts === $Failed, Return[$Failed]]; Visualization`VectorFields`VectorFieldsDump`ppts = Visualization`VectorFields`VectorFieldsDump`toList[Visualization`VectorFields`VectorFieldsDump`ppts]; {Visualization`VectorFields`VectorFieldsDump`lpts, Visualization`VectorFields`VectorFieldsDump`spts} = Visualization`VectorFields`VectorFieldsDump`validatePointsList[Visualization`VectorFields`VectorFieldsDump`edim, Visualization`VectorFields`VectorFieldsDump`lpts]; {Visualization`VectorFields`VectorFieldsDump`ppts, Visualization`VectorFields`VectorFieldsDump`lpts, Visualization`VectorFields`VectorFieldsDump`spts}]\nVisualization`VectorFields`VectorFieldsDump`PlotPointsParse[__] := Automatic\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Visualization`VectorFields`VectorFieldsDump`PlotPointsParse",
	"SurfaceGraphics`Methods`PlotRandomSeed":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PlotRandomSeed\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PlotRandomSeed",
	"Visualization`Utilities`PlotRangeClippingExpand":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeClippingExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeClippingExpand[(Visualization`Utilities`OptionsDump`p_)?Visualization`Utilities`OptionsDump`clippingQ] := {{Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}, {Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}}\nVisualization`Utilities`PlotRangeClippingExpand[{(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`clippingQ, Visualization`Utilities`OptionsDump`y:{_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}}] := {{Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`x}, Visualization`Utilities`OptionsDump`y}\nVisualization`Utilities`PlotRangeClippingExpand[{Visualization`Utilities`OptionsDump`x:{_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`clippingQ}] := {Visualization`Utilities`OptionsDump`x, {Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`y}}\nVisualization`Utilities`PlotRangeClippingExpand[Visualization`Utilities`OptionsDump`p:{{_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}, {_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}}] := Visualization`Utilities`OptionsDump`p\nVisualization`Utilities`PlotRangeClippingExpand[_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeClippingExpand",
	"Graphics`Mesh`PlotRangeClippingMesh":"ObjectType: Symbol\nUsage: Graphics`Mesh`PlotRangeClippingMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Filling -> False, Graphics`Mesh`FillingOrder -> Automatic}\nAttributes: {}\nFullName: Graphics`Mesh`PlotRangeClippingMesh",
	"Visualization`Utilities`PlotRangeClippingQ":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeClippingQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeClippingQ[_?Visualization`Utilities`OptionsDump`clippingQ] := True\nVisualization`Utilities`PlotRangeClippingQ[{_?Visualization`Utilities`OptionsDump`clippingQ, {_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}}] := True\nVisualization`Utilities`PlotRangeClippingQ[{{_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}, _?Visualization`Utilities`OptionsDump`clippingQ}] := True\nVisualization`Utilities`PlotRangeClippingQ[{{_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}, {_?Visualization`Utilities`OptionsDump`clippingQ, _?Visualization`Utilities`OptionsDump`clippingQ}}] := True\nVisualization`Utilities`PlotRangeClippingQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeClippingQ",
	"Visualization`Utilities`PlotRangeExpand":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`pr_] := Visualization`Utilities`PlotRangeExpand[\"Graphics\", Visualization`Utilities`OptionsDump`pr]\nVisualization`Utilities`PlotRangeExpand[_, {(Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeMinMaxQ}] := {{Automatic, Automatic}, {Visualization`Utilities`OptionsDump`y[[1]], Visualization`Utilities`OptionsDump`y[[2]]}}\nVisualization`Utilities`PlotRangeExpand[_, (Visualization`Utilities`OptionsDump`pr_)?(MatrixQ[#1, Visualization`Utilities`OptionsDump`PlotRangeLimitQ] && Dimensions[#1] === {2, 2} & )] := Visualization`Utilities`OptionsDump`pr\nVisualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`type_, {Visualization`Utilities`OptionsDump`xrange:Full | Automatic | All, (Visualization`Utilities`OptionsDump`yrange_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := Visualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`type, {{Visualization`Utilities`OptionsDump`xrange, Visualization`Utilities`OptionsDump`xrange}, Visualization`Utilities`OptionsDump`yrange}]\nVisualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`xrange_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, Visualization`Utilities`OptionsDump`yrange:Full | Automatic | All}] := Visualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`type, {Visualization`Utilities`OptionsDump`xrange, {Visualization`Utilities`OptionsDump`yrange, Visualization`Utilities`OptionsDump`yrange}}]\nVisualization`Utilities`PlotRangeExpand[_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := {{Automatic, Automatic}, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}\nVisualization`Utilities`PlotRangeExpand[_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ}] := {{Automatic, Automatic}, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}\nVisualization`Utilities`PlotRangeExpand[_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := {{Automatic, Automatic}, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}\nVisualization`Utilities`PlotRangeExpand[_, {Visualization`Utilities`OptionsDump`x:All | Automatic | Full, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeMinMaxQ}] := {{Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`x}, Visualization`Utilities`OptionsDump`y}\nVisualization`Utilities`PlotRangeExpand[_, {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeMinMaxQ, Visualization`Utilities`OptionsDump`y:All | Automatic | Full}] := {Visualization`Utilities`OptionsDump`x, {Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`y}}\nVisualization`Utilities`PlotRangeExpand[\"Plot\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{Full, Full}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand[\"ListPlot\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{Automatic, Automatic}, {0, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand[\"CategoricalChart\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{Automatic, Automatic}, {All, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand[\"Graphics\" | _, (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand[_, Visualization`Utilities`OptionsDump`pr:All | Automatic | Full] := {{Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`t_, Visualization`Utilities`OptionsDump`pr_] := Block[{}, Message[General::prng, Visualization`Utilities`OptionsDump`pr]; Visualization`Utilities`PlotRangeExpand[Visualization`Utilities`OptionsDump`t, Automatic]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeExpand",
	"Visualization`Utilities`PlotRangeExpand3D":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeExpand3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`pr_] := Visualization`Utilities`PlotRangeExpand3D[\"Graphics3D\", Visualization`Utilities`OptionsDump`pr]\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", (Visualization`Utilities`OptionsDump`pr_)?(MatrixQ[#1, Visualization`Utilities`OptionsDump`PlotRangeLimitQ] && Dimensions[#1] === {4, 2} & )] := Visualization`Utilities`OptionsDump`pr\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type_, (Visualization`Utilities`OptionsDump`pr_)?(MatrixQ[#1, Visualization`Utilities`OptionsDump`PlotRangeLimitQ] && Dimensions[#1] === {3, 2} & )] := Visualization`Utilities`OptionsDump`pr\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := {If[ListQ[Visualization`Utilities`OptionsDump`x], Visualization`Utilities`OptionsDump`x, {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`x}], If[ListQ[Visualization`Utilities`OptionsDump`y], Visualization`Utilities`OptionsDump`y, {Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`y}], {Automatic, Automatic}}\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`z_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := (If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`z}\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`z_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`f_)?Visualization`Utilities`PlotRangeQ}] := (If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`z, Visualization`Utilities`OptionsDump`f}\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := Visualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {Automatic, Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ}] := Visualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {Automatic, Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := Visualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {Automatic, Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := Visualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type, {Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ}] := Visualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type, {Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := Visualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`type, {Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand3D[\"Graphics3D\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand3D[\"Plot3D\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{Full, Full}, {Full, Full}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand3D[\"ArrayPlot\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{Full, Full}, {Full, Full}, {0, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand3D[\"Graphics3D\", {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ}] := Append[(If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}]\nVisualization`Utilities`PlotRangeExpand3D[\"Plot3D\", {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ}] := Append[(If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}]\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`z_)?Visualization`Utilities`PlotRangeQ, (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ}] := Append[(If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}]\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", Visualization`Utilities`OptionsDump`pr:All | Automatic | Full] := {{Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", Visualization`Utilities`OptionsDump`pr_] := Block[{}, Message[General::prng, Visualization`Utilities`OptionsDump`pr]; Visualization`Utilities`PlotRangeExpand3D[\"ContourPlot3D\", Automatic]]\nVisualization`Utilities`PlotRangeExpand3D[\"ArrayPlot\", {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ}] := Append[(If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y}, {0, Visualization`Utilities`OptionsDump`pr}]\nVisualization`Utilities`PlotRangeExpand3D[_, Visualization`Utilities`OptionsDump`pr:All | Automatic | Full] := {{Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`t_, Visualization`Utilities`OptionsDump`pr_] := Block[{}, Message[General::prng, Visualization`Utilities`OptionsDump`pr]; Visualization`Utilities`PlotRangeExpand3D[Visualization`Utilities`OptionsDump`t, Automatic]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeExpand3D",
	"Visualization`Utilities`PlotRangeExpand4D":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeExpand4D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, (Visualization`Utilities`OptionsDump`pr_)?(MatrixQ[#1, Visualization`Utilities`OptionsDump`PlotRangeLimitQ] && Dimensions[#1] === {4, 2} & )] := Visualization`Utilities`OptionsDump`pr\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := {If[ListQ[Visualization`Utilities`OptionsDump`x], Visualization`Utilities`OptionsDump`x, {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`x}], If[ListQ[Visualization`Utilities`OptionsDump`y], Visualization`Utilities`OptionsDump`y, {Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`y}], {Automatic, Automatic}, {Automatic, Automatic}}\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`z_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := Append[(If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`z}, {Automatic, Automatic}]\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`z_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, (Visualization`Utilities`OptionsDump`w_)?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := (If[ListQ[#1], #1, {#1, #1}] & ) \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`z, Visualization`Utilities`OptionsDump`w}\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := Visualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type, {Automatic, Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ}] := Visualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type, {Automatic, Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type_, {(Visualization`Utilities`OptionsDump`min_)?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ, (Visualization`Utilities`OptionsDump`max_)?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := Visualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`type, {Automatic, Automatic, Automatic, {Visualization`Utilities`OptionsDump`min, Visualization`Utilities`OptionsDump`max}}]\nVisualization`Utilities`PlotRangeExpand4D[_, Visualization`Utilities`OptionsDump`pr:All | Automatic | Full] := {{Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}, {Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand4D[\"VolumePlot\", (Visualization`Utilities`OptionsDump`pr_)?Charting`realNumericQ] := {{Full, Full}, {Full, Full}, {Full, Full}, {-Visualization`Utilities`OptionsDump`pr, Visualization`Utilities`OptionsDump`pr}}\nVisualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`t_, Visualization`Utilities`OptionsDump`pr_] := Block[{}, Message[General::prng, Visualization`Utilities`OptionsDump`pr]; Visualization`Utilities`PlotRangeExpand4D[Visualization`Utilities`OptionsDump`t, Automatic]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeExpand4D",
	"Visualization`Utilities`PlotRangePaddingExpand":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangePaddingExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangePaddingExpand[(Visualization`Utilities`OptionsDump`p_)?Visualization`Utilities`OptionsDump`paddingValueQ] := {{Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}, {Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}}\nVisualization`Utilities`PlotRangePaddingExpand[{(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`paddingPairQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`paddingPairQ}] := Visualization`Utilities`OptionsDump`expandPadding \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y}\nVisualization`Utilities`PlotRangePaddingExpand[_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangePaddingExpand",
	"Visualization`Utilities`PlotRangePaddingExpand3D":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangePaddingExpand3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangePaddingExpand3D[(Visualization`Utilities`OptionsDump`p_)?Visualization`Utilities`OptionsDump`paddingValueQ] := {{Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}, {Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}, {Visualization`Utilities`OptionsDump`p, Visualization`Utilities`OptionsDump`p}}\nVisualization`Utilities`PlotRangePaddingExpand3D[{(Visualization`Utilities`OptionsDump`x_)?Visualization`Utilities`OptionsDump`paddingPairQ, (Visualization`Utilities`OptionsDump`y_)?Visualization`Utilities`OptionsDump`paddingPairQ, (Visualization`Utilities`OptionsDump`z_)?Visualization`Utilities`OptionsDump`paddingPairQ}] := Visualization`Utilities`OptionsDump`expandPadding \/@ {Visualization`Utilities`OptionsDump`x, Visualization`Utilities`OptionsDump`y, Visualization`Utilities`OptionsDump`z}\nVisualization`Utilities`PlotRangePaddingExpand3D[_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangePaddingExpand3D",
	"Charting`PlotRangePaddingExtension":"ObjectType: Symbol\nUsage: Charting`PlotRangePaddingExtension\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PlotRangePaddingExtension[Charting`ChartLabelingDump`type_, Charting`ChartLabelingDump`data_, Charting`ChartLabelingDump`calloutData_, Charting`ChartLabelingDump`plotrange_, Charting`ChartLabelingDump`labelwrappersQ_, Charting`ChartLabelingDump`labelingfunctionQ_, Charting`ChartLabelingDump`imgsize_, Charting`ChartLabelingDump`aspectratio_, Charting`ChartLabelingDump`datadepth_] := Quiet[Module[{Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`toppadding, Charting`ChartLabelingDump`imagesize = Charting`ChartLabelingDump`imgsize, Charting`ChartLabelingDump`aboveloc, Charting`ChartLabelingDump`belowloc, Charting`ChartLabelingDump`beforeloc, Charting`ChartLabelingDump`afterloc, Charting`ChartLabelingDump`poslabels, Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after, Charting`ChartLabelingDump`length, Charting`ChartLabelingDump`ar, Charting`ChartLabelingDump`calloutQ, Charting`ChartLabelingDump`abovepos, Charting`ChartLabelingDump`belowpos, Charting`ChartLabelingDump`beforepos, Charting`ChartLabelingDump`afterpos, Charting`ChartLabelingDump`pointcallout, Charting`ChartLabelingDump`autocalloutQ, Charting`ChartLabelingDump`pointlabeling, Charting`ChartLabelingDump`autolabelingQ, Charting`ChartLabelingDump`grouppos, Charting`ChartLabelingDump`rightautopadding}, If[Head[Charting`ChartLabelingDump`calloutData[\"PositionedCalloutLabeling\"]] === Charting`ChartLabelingDump`calloutData, Charting`ChartLabelingDump`calloutData[\"AutomaticCalloutLabeling\"] = Charting`ChartLabelingDump`calloutData[\"PositionedCalloutLabeling\"] = {{}, {}}]; Charting`ChartLabelingDump`calloutQ = Which[Flatten[First[Charting`ChartLabelingDump`calloutData[\"PositionedCallout\"]]] =!= {}, True, Flatten[First[Charting`ChartLabelingDump`calloutData[\"PositionedCalloutLabeling\"]]] =!= {}, True, True, False]; Charting`ChartLabelingDump`grouppos = Table[_, {Charting`ChartLabelingDump`datadepth - 1}] | {}; Charting`ChartLabelingDump`autocalloutQ = Flatten[DeleteCases[Transpose[Charting`ChartLabelingDump`calloutData[\"AutomaticCallout\"]], {{{}, {}, _}, _} | {_, Charting`ChartLabelingDump`grouppos}]] =!= {}; Charting`ChartLabelingDump`autolabelingQ = Flatten[DeleteCases[Transpose[Charting`ChartLabelingDump`calloutData[\"AutomaticCalloutLabeling\"]], {{{}, {}, _}, _} | {_, Charting`ChartLabelingDump`grouppos}]] =!= {}; Charting`ChartLabelingDump`pointcallout = DeleteCases[Transpose[Charting`ChartLabelingDump`calloutData[\"PositionedCallout\"]], {{{}, {}, _}, _} | {{_, {{Before | After, __}, ___}, _}, Charting`ChartLabelingDump`grouppos}]; Charting`ChartLabelingDump`pointlabeling = DeleteCases[Transpose[Charting`ChartLabelingDump`calloutData[\"PositionedCalloutLabeling\"]], {{{}, {}, _}, _} | {{_, {{Before | After, __}, ___}, _}, Charting`ChartLabelingDump`grouppos}]; Charting`ChartLabelingDump`poslabels = DeleteCases[Join[Charting`ChartLabelingDump`pointcallout, Charting`ChartLabelingDump`pointlabeling], {}]; Charting`ChartLabelingDump`poslabels = Apply[Append, Charting`ChartLabelingDump`poslabels, {1}]; Charting`ChartLabelingDump`poslabels = Function[Charting`ChartLabelingDump`in, Join[(Charting`padList[#1, Length[First[Charting`ChartLabelingDump`in]]] & ) \/@ Charting`ChartLabelingDump`in[[1 ;; -2]], {Charting`padList[{Last[Charting`ChartLabelingDump`in]}, Length[First[Charting`ChartLabelingDump`in]]]}]] \/@ Charting`ChartLabelingDump`poslabels; Charting`ChartLabelingDump`poslabels = Flatten[Transpose \/@ Charting`ChartLabelingDump`poslabels, 1]; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = GroupBy[Charting`ChartLabelingDump`poslabels, (Which[Internal`LiteralPresentQ[#1[[2,1]], Above], Above, Internal`LiteralPresentQ[#1[[2,1]], Below], Below, Internal`LiteralPresentQ[#1[[2,1]], Before], Before, Internal`LiteralPresentQ[#1[[2,1]], After], After, True, None] & ) -> ({#1[[1]], #1[[2]], #1[[-1]]} & )] \/@ {Above, Below, Before, After}; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} \/. _Missing -> {}; Charting`ChartLabelingDump`length = Length \/@ {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}; Charting`ChartLabelingDump`ar = Quiet[Check[Switch[Charting`ChartLabelingDump`aspectratio, _?Charting`realNumericQ, Charting`ChartLabelingDump`aspectratio, _, 1], 1]]; Charting`ChartLabelingDump`rightautopadding = If[Charting`ChartLabelingDump`type === \"RectangularBox\", Automatic, Which[Charting`ChartLabelingDump`autocalloutQ || Charting`ChartLabelingDump`autolabelingQ, Scaled[0.08*Max[1, Charting`ChartLabelingDump`ar]], True, Automatic]]; Charting`ChartLabelingDump`imagesize = Visualization`Utilities`ApproximateImageSize[Charting`ChartLabelingDump`imagesize, Charting`ChartLabelingDump`ar]; If[Flatten[{Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}] === {}, If[Charting`ChartLabelingDump`autocalloutQ || Charting`ChartLabelingDump`autolabelingQ, Return[{{Automatic, Charting`ChartLabelingDump`rightautopadding}, {Automatic, Scaled[0.06\/(Min[1, Charting`ChartLabelingDump`ar]*(First[Charting`ChartLabelingDump`imagesize]\/360))]}}], Return[{{Automatic, Scaled[0.02]}, {Automatic, Scaled[0.05\/Min[1, Charting`ChartLabelingDump`ar]]}}]]]; {Charting`ChartLabelingDump`aboveloc, Charting`ChartLabelingDump`belowloc, Charting`ChartLabelingDump`beforeloc, Charting`ChartLabelingDump`afterloc} = (If[#1 =!= {}, #1[[All,2]], {}] & ) \/@ {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}; {Charting`ChartLabelingDump`abovepos, Charting`ChartLabelingDump`belowpos, Charting`ChartLabelingDump`beforepos, Charting`ChartLabelingDump`afterpos} = (If[#1 =!= {}, Last \/@ #1, {}] & ) \/@ {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}; {Charting`ChartLabelingDump`abovepos, Charting`ChartLabelingDump`belowpos, Charting`ChartLabelingDump`beforepos, Charting`ChartLabelingDump`afterpos} = (If[#1 =!= {}, (If[#1 === {}, Charting`ChartLabelingDump`data, Charting`ChartLabelingDump`data[[Sequence @@ #1]]] & ) \/@ #1, {}] & ) \/@ {Charting`ChartLabelingDump`abovepos, Charting`ChartLabelingDump`belowpos, Charting`ChartLabelingDump`beforepos, Charting`ChartLabelingDump`afterpos}; If[ !MatchQ[Charting`ChartLabelingDump`type, \"RectangularBox\" | \"Disk\" | \"SphericalBox\"], Charting`ChartLabelingDump`abovepos = MapThread[Charting`ChartLabelingDump`extractLinePoints[#1, #2] & , {Charting`ChartLabelingDump`abovepos, Charting`ChartLabelingDump`aboveloc}]; Charting`ChartLabelingDump`belowpos = MapThread[Charting`ChartLabelingDump`extractLinePoints[#1, #2] & , {Charting`ChartLabelingDump`belowpos, Charting`ChartLabelingDump`belowloc}]; Charting`ChartLabelingDump`beforepos = MapThread[Charting`ChartLabelingDump`extractLinePoints[#1, #2] & , {Charting`ChartLabelingDump`beforepos, Charting`ChartLabelingDump`beforeloc}]; Charting`ChartLabelingDump`afterpos = MapThread[Charting`ChartLabelingDump`extractLinePoints[#1, #2] & , {Charting`ChartLabelingDump`afterpos, Charting`ChartLabelingDump`afterloc}]; ]; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = (If[#1 =!= {}, (#1[[1,2]] & ) \/@ #1, {}] & ) \/@ {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = Map[ImageDimensions, {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}, {2}]; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below} = (If[#1 != {}, (#1 + {15, If[Charting`ChartLabelingDump`calloutQ, (1.25*#1[[2]]*1)\/Charting`ChartLabelingDump`ar + 35, 15]} & ) \/@ #1, {}] & ) \/@ {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below}; {Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = (If[#1 != {}, (#1 + {If[Charting`ChartLabelingDump`calloutQ, 1.25*#1[[2]]*Charting`ChartLabelingDump`ar + 35, 15], 15} & ) \/@ #1, {}] & ) \/@ {Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = Map[Charting`ChartLabelingDump`calculateLabelSizeInGraphics[#1, Charting`ChartLabelingDump`plotrange, N[Charting`ChartLabelingDump`imagesize]] & , {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}, {2}]; Charting`ChartLabelingDump`above = MapThread[Charting`ChartLabelingDump`padAbove[#1, #2, Charting`ChartLabelingDump`plotrange] & , {Charting`ChartLabelingDump`abovepos, Charting`ChartLabelingDump`above}]; Charting`ChartLabelingDump`below = MapThread[Charting`ChartLabelingDump`padBelow[#1, #2, Charting`ChartLabelingDump`plotrange] & , {Charting`ChartLabelingDump`belowpos, Charting`ChartLabelingDump`below}]; Charting`ChartLabelingDump`before = MapThread[Charting`ChartLabelingDump`padBefore[#1, #2, Charting`ChartLabelingDump`plotrange] & , {Charting`ChartLabelingDump`beforepos, Charting`ChartLabelingDump`before}]; Charting`ChartLabelingDump`after = MapThread[Charting`ChartLabelingDump`padAfter[#1, #2, Charting`ChartLabelingDump`plotrange] & , {Charting`ChartLabelingDump`afterpos, Charting`ChartLabelingDump`after}]; {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after} = (If[#1 =!= {}, Map[Max, Transpose \/@ Transpose[#1], {2}], {{0, 0}, {0, 0}}] & ) \/@ {Charting`ChartLabelingDump`above, Charting`ChartLabelingDump`below, Charting`ChartLabelingDump`before, Charting`ChartLabelingDump`after}; Charting`ChartLabelingDump`leftpadding = Charting`ChartLabelingDump`rightpadding = Charting`ChartLabelingDump`botpadding = Charting`ChartLabelingDump`toppadding = 0; If[Charting`ChartLabelingDump`before != {{0., 0.}, {0., 0.}}, Charting`ChartLabelingDump`leftpadding = Charting`ChartLabelingDump`before[[1,1]]; Charting`ChartLabelingDump`botpadding = Charting`ChartLabelingDump`before[[2,1]]; Charting`ChartLabelingDump`toppadding = Charting`ChartLabelingDump`before[[2,2]]; ]; If[Charting`ChartLabelingDump`after =!= {{0., 0.}, {0., 0.}}, Charting`ChartLabelingDump`rightpadding = Max[Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`after[[1,2]]]; Charting`ChartLabelingDump`botpadding = Max[Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`after[[2,1]]]; Charting`ChartLabelingDump`toppadding = Max[Charting`ChartLabelingDump`toppadding, Charting`ChartLabelingDump`after[[2,2]]]; ]; If[Charting`ChartLabelingDump`below =!= {{0., 0.}, {0., 0.}}, Charting`ChartLabelingDump`botpadding = Max[Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`below[[2,1]]]; Charting`ChartLabelingDump`leftpadding = Max[Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`below[[1,1]]]; Charting`ChartLabelingDump`rightpadding = Max[Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`below[[1,2]]]; ]; If[Charting`ChartLabelingDump`above =!= {{0., 0.}, {0., 0.}}, Charting`ChartLabelingDump`toppadding = Max[Charting`ChartLabelingDump`toppadding, Charting`ChartLabelingDump`above[[2,2]]]; Charting`ChartLabelingDump`rightpadding = Max[Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`above[[1,2]]]; Charting`ChartLabelingDump`leftpadding = Max[Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`above[[1,1]]]; ]; {Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`toppadding} = N[{Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`toppadding}] \/. 0. -> Automatic; {Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`toppadding} = (If[NumericQ[#1], Scaled[#1], #1] & ) \/@ {Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`rightpadding, Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`toppadding}; If[Charting`ChartLabelingDump`labelwrappersQ, Charting`ChartLabelingDump`rightpadding = Charting`ChartLabelingDump`rightpadding \/. Automatic -> Scaled[0.05*Max[1, Charting`ChartLabelingDump`ar]]]; If[Charting`ChartLabelingDump`labelwrappersQ, Charting`ChartLabelingDump`toppadding = Charting`ChartLabelingDump`toppadding \/. Automatic -> Scaled[0.05\/Min[1, Charting`ChartLabelingDump`ar]]]; {{Charting`ChartLabelingDump`leftpadding, Charting`ChartLabelingDump`rightpadding}, {Charting`ChartLabelingDump`botpadding, Charting`ChartLabelingDump`toppadding}}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PlotRangePaddingExtension",
	"Visualization`Utilities`PlotRangePaddingQ":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangePaddingQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangePaddingQ[_?Visualization`Utilities`OptionsDump`paddingValueQ] := True\nVisualization`Utilities`PlotRangePaddingQ[{_?Visualization`Utilities`OptionsDump`paddingPairQ, _?Visualization`Utilities`OptionsDump`paddingPairQ}] := True\nVisualization`Utilities`PlotRangePaddingQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangePaddingQ",
	"Visualization`Utilities`PlotRangePaddingQ3D":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangePaddingQ3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangePaddingQ3D[_?Visualization`Utilities`OptionsDump`paddingValueQ] := True\nVisualization`Utilities`PlotRangePaddingQ3D[{_?Visualization`Utilities`OptionsDump`paddingPairQ, _?Visualization`Utilities`OptionsDump`paddingPairQ, _?Visualization`Utilities`OptionsDump`paddingPairQ}] := True\nVisualization`Utilities`PlotRangePaddingQ3D[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangePaddingQ3D",
	"Visualization`Utilities`PlotRangeQ":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeQ[_?(MatrixQ[#1, Visualization`Utilities`OptionsDump`PlotRangeLimitQ] & )] := True\nVisualization`Utilities`PlotRangeQ[{_?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, _?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := True\nVisualization`Utilities`PlotRangeQ[{_?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, _?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ}] := True\nVisualization`Utilities`PlotRangeQ[{_?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ, _?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := True\nVisualization`Utilities`PlotRangeQ[{All | Automatic | Full, _?Visualization`Utilities`OptionsDump`PlotRangeMinMaxQ}] := True\nVisualization`Utilities`PlotRangeQ[{_?Visualization`Utilities`OptionsDump`PlotRangeMinMaxQ, All | Automatic | Full}] := True\nVisualization`Utilities`PlotRangeQ[_?Visualization`Utilities`OptionsDump`PlotRangeLimitQ] := True\nVisualization`Utilities`PlotRangeQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeQ",
	"Visualization`Utilities`PlotRangeQ3D":"ObjectType: Symbol\nUsage: Visualization`Utilities`PlotRangeQ3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`PlotRangeQ3D[_?(MatrixQ[#1, Visualization`Utilities`OptionsDump`PlotRangeLimitQ] && Dimensions[#1] == {3, 2} & )] := True\nVisualization`Utilities`PlotRangeQ3D[{_?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, _?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := True\nVisualization`Utilities`PlotRangeQ3D[{_?Visualization`Utilities`OptionsDump`PlotRangeLimitQ, _?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ}] := True\nVisualization`Utilities`PlotRangeQ3D[{_?Visualization`Utilities`OptionsDump`PlotRangeQuantileLimitQ, _?Visualization`Utilities`OptionsDump`PlotRangeLimitQ}] := True\nVisualization`Utilities`PlotRangeQ3D[{_?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, _?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := True\nVisualization`Utilities`PlotRangeQ3D[{_?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, _?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, _?Visualization`Utilities`OptionsDump`PlotRangeRangeQ}] := True\nVisualization`Utilities`PlotRangeQ3D[{_?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, _?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, _?Visualization`Utilities`OptionsDump`PlotRangeRangeQ, _?Visualization`Utilities`PlotRangeQ}] := True\nVisualization`Utilities`PlotRangeQ3D[_?Visualization`Utilities`OptionsDump`PlotRangeLimitQ] := True\nVisualization`Utilities`PlotRangeQ3D[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`PlotRangeQ3D",
	"SurfaceGraphics`Methods`PlotTheme":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PlotTheme\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PlotTheme",
	"PersistenceLocations`PLSyntaxQ":"ObjectType: Symbol\nUsage: PersistenceLocations`PLSyntaxQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PersistenceLocations`PLSyntaxQ[_String | (_String -> _)] := True\nPersistenceLocations`PLSyntaxQ[_PersistenceLocation] := True\nPersistenceLocations`PLSyntaxQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`PLSyntaxQ",
	"System`Private`PLt":"ObjectType: Symbol\nUsage: System`Private`PLt\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PLt",
	"Region`PointBooleanOperation":"ObjectType: Symbol\nUsage: Region`PointBooleanOperation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PointBooleanOperation[\"Intersection\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res, Region`MeshBooleanOperationsDump`res1, Region`MeshBooleanOperationsDump`inters}, Region`MeshBooleanOperationsDump`inters = Region`MeshBooleanOperationsDump`toPoint \/@ Region`MeshBooleanOperationsDump`expr; (Region`MeshBooleanOperationsDump`res1 = (Intersection[##1, SameTest -> Region`MeshBooleanOperationsDump`iSamePointQ] & ) @@ Region`MeshBooleanOperationsDump`inters; (Region`MeshBooleanOperationsDump`res = If[Region`MeshBooleanOperationsDump`res1 === {}, EmptyRegion[1], DiscretizeRegion[Point[Region`MeshBooleanOperationsDump`res1], Region`MeshBooleanOperationsDump`opts]]; Region`MeshBooleanOperationsDump`res \/; RegionQ[Region`MeshBooleanOperationsDump`res]) \/; ListQ[Region`MeshBooleanOperationsDump`res1]) \/; FreeQ[Region`MeshBooleanOperationsDump`inters, $Failed]]\nRegion`PointBooleanOperation[\"Union\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res, Region`MeshBooleanOperationsDump`res1, Region`MeshBooleanOperationsDump`inters}, Region`MeshBooleanOperationsDump`inters = Region`MeshBooleanOperationsDump`toPoint \/@ Region`MeshBooleanOperationsDump`expr; (Region`MeshBooleanOperationsDump`res1 = (Union[##1, SameTest -> Region`MeshBooleanOperationsDump`iSamePointQ] & ) @@ Region`MeshBooleanOperationsDump`inters; (Region`MeshBooleanOperationsDump`res = If[Region`MeshBooleanOperationsDump`res1 === {}, EmptyRegion[1], DiscretizeRegion[Point[Region`MeshBooleanOperationsDump`res1], Region`MeshBooleanOperationsDump`opts]]; Region`MeshBooleanOperationsDump`res \/; RegionQ[Region`MeshBooleanOperationsDump`res]) \/; ListQ[Region`MeshBooleanOperationsDump`res1]) \/; FreeQ[Region`MeshBooleanOperationsDump`inters, $Failed]]\nRegion`PointBooleanOperation[\"Difference\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res, Region`MeshBooleanOperationsDump`res1, Region`MeshBooleanOperationsDump`inters}, Region`MeshBooleanOperationsDump`inters = Region`MeshBooleanOperationsDump`toPoint \/@ Region`MeshBooleanOperationsDump`expr; (Region`MeshBooleanOperationsDump`res1 = (Complement[##1, SameTest -> Region`MeshBooleanOperationsDump`iSamePointQ] & ) @@ Region`MeshBooleanOperationsDump`inters; (Region`MeshBooleanOperationsDump`res = If[Region`MeshBooleanOperationsDump`res1 === {}, EmptyRegion[1], DiscretizeRegion[Point[Region`MeshBooleanOperationsDump`res1], Region`MeshBooleanOperationsDump`opts]]; Region`MeshBooleanOperationsDump`res \/; RegionQ[Region`MeshBooleanOperationsDump`res]) \/; ListQ[Region`MeshBooleanOperationsDump`res1]) \/; FreeQ[Region`MeshBooleanOperationsDump`inters, $Failed]]\nRegion`PointBooleanOperation[\"SymmetricDifference\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`a, Region`MeshBooleanOperationsDump`b, Region`MeshBooleanOperationsDump`res, Region`MeshBooleanOperationsDump`inters1, Region`MeshBooleanOperationsDump`inters2}, Region`MeshBooleanOperationsDump`a = Region`MeshBooleanOperationsDump`toPoint[Region`MeshBooleanOperationsDump`expr[[1]]]; Region`MeshBooleanOperationsDump`b = Region`MeshBooleanOperationsDump`toPoint[Region`MeshBooleanOperationsDump`expr[[2]]]; Region`MeshBooleanOperationsDump`inters1 = Complement[Region`MeshBooleanOperationsDump`a, Region`MeshBooleanOperationsDump`b, SameTest -> Region`MeshBooleanOperationsDump`iSamePointQ]; Region`MeshBooleanOperationsDump`inters2 = Complement[Region`MeshBooleanOperationsDump`b, Region`MeshBooleanOperationsDump`a, SameTest -> Region`MeshBooleanOperationsDump`iSamePointQ]; (Region`MeshBooleanOperationsDump`res = Union[Region`MeshBooleanOperationsDump`inters1, Region`MeshBooleanOperationsDump`inters2, SameTest -> Region`MeshBooleanOperationsDump`iSamePointQ]; (Region`MeshBooleanOperationsDump`res = If[Region`MeshBooleanOperationsDump`res === {}, EmptyRegion[1], DiscretizeRegion[Point[Region`MeshBooleanOperationsDump`res], Region`MeshBooleanOperationsDump`opts]]; Region`MeshBooleanOperationsDump`res \/; RegionQ[Region`MeshBooleanOperationsDump`res]) \/; ListQ[Region`MeshBooleanOperationsDump`res]) \/; AllTrue[{Region`MeshBooleanOperationsDump`inters1, Region`MeshBooleanOperationsDump`inters2}, ListQ]]\nRegion`PointBooleanOperation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PointBooleanOperation",
	"ComputationalGeometry`Methods`PointCloudDistanceFunction":"ObjectType: Symbol\nUsage: ComputationalGeometry`Methods`PointCloudDistanceFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Methods`PointCloudDistanceFunction",
	"NDSolve`FEM`PointElement":"ObjectType: Symbol\nUsage: NDSolve`FEM`PointElement\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`FEM`MeshElementDimensionality[_NDSolve`FEM`PointElement] ^= 0\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`PointElement",
	"Graphics`Mesh`PointForm":"ObjectType: Symbol\nUsage: Graphics`Mesh`PointForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PointForm",
	"SurfaceGraphics`Methods`PointPlacement":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PointPlacement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PointPlacement",
	"Graphics`PolygonUtils`PointPolygonDistance":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PointPolygonDistance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PointPolygonDistance",
	"ComputationalGeometry`Surface`Points":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`Points\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`Points",
	"GIS`PointsClip":"ObjectType: Symbol\nUsage: GIS`PointsClip\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PointsClip",
	"GIS`PointsMinMax":"ObjectType: Symbol\nUsage: GIS`PointsMinMax[pointarray] returns the minmax pairs for the respective coordinates of the\npoints in the point array. This function is essentially identical to CoordinateBounds, except for the fact that it\naccepts empty lists {} of points, while CoordinateBounds interprets them as 0D points and complains about non-homogeneity\nof dimensions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PointsMinMax[{}] := {}\nGIS`PointsMinMax[GIS`GeoRangesDump`list_List] := Module[{GIS`GeoRangesDump`ranges}, GIS`GeoRangesDump`ranges = Quiet[CoordinateBounds[GIS`GeoRangesDump`list]]; If[MatrixQ[GIS`GeoRangesDump`ranges, NumericQ] && Length[GIS`GeoRangesDump`ranges] >= 2, Take[GIS`GeoRangesDump`ranges, 2], GIS`GeoRangesDump`ranges = GIS`GeoRangesDump`pointsMinMax[GIS`GeoRangesDump`list]; If[MatrixQ[GIS`GeoRangesDump`ranges], GIS`GeoRangesDump`ranges, {}]]]\nGIS`PointsMinMax[GIS`GeoRangesDump`lhs_ -> GIS`GeoRangesDump`rhs_] := GIS`RangesUnion[GIS`PointsMinMax[GIS`GeoRangesDump`lhs], GIS`PointsMinMax[GIS`GeoRangesDump`rhs]]\nGIS`PointsMinMax[_] := {}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PointsMinMax",
	"SurfaceGraphics`Methods`PointsToSpheres":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PointsToSpheres\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PointsToSpheres",
	"Region`PointUnion":"ObjectType: Symbol\nUsage: Region`PointUnion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PointUnion",
	"Graphics`PolygonUtils`PointWindingNumber":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PointWindingNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PointWindingNumber",
	"RandomProcesses`Library`PoissonDataValidation":"ObjectType: Symbol\nUsage: RandomProcesses`Library`PoissonDataValidation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`PoissonDataValidation[RandomProcesses`PoissonProcessDump`data_, RandomProcesses`PoissonProcessDump`proc_, {RandomProcesses`PoissonProcessDump`pars_, RandomProcesses`PoissonProcessDump`upars_}, RandomProcesses`PoissonProcessDump`caller_] := Module[{RandomProcesses`PoissonProcessDump`jumps, RandomProcesses`PoissonProcessDump`tmp, RandomProcesses`PoissonProcessDump`check = True}, If[Max[RandomProcesses`PoissonProcessDump`data[\"PathLengths\"]] <= 1, Message[RandomProcesses`PoissonProcessDump`caller::insffdt, 2]; Return[$Failed]]; RandomProcesses`PoissonProcessDump`jumps = Catch[Table[If[Length[RandomProcesses`PoissonProcessDump`dat] > 1, RandomProcesses`PoissonProcessDump`tmp = Differences[RandomProcesses`PoissonProcessDump`dat]; RandomProcesses`PoissonProcessDump`check = VectorQ[RandomProcesses`PoissonProcessDump`tmp, IntegerQ] && Min[RandomProcesses`PoissonProcessDump`tmp] >= 0; If[ !RandomProcesses`PoissonProcessDump`check, Throw[$Failed]]]; RandomProcesses`PoissonProcessDump`tmp, {RandomProcesses`PoissonProcessDump`dat, RandomProcesses`PoissonProcessDump`data[\"ValueList\"]}]]; If[RandomProcesses`PoissonProcessDump`check, RandomProcesses`PoissonProcessDump`jumps, Message[RandomProcesses`PoissonProcessDump`caller::ntsprt, RandomProcesses`PoissonProcessDump`proc \/. Thread[RandomProcesses`PoissonProcessDump`upars -> RandomProcesses`PoissonProcessDump`pars]]; $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`PoissonDataValidation",
	"ResourceFunctionHelpers`PolarToCartesian":"ObjectType: Symbol\nUsage: PolarToCartesian[{r,θ}] returns the Cartesian coordinates {x, y} corresponding to the polar coordinates {r,θ}.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PolarToCartesian[ResourceFunctionHelpers`PolarToCartesian`Private`lis:{{{_, _}..}..}] := ResourceFunctionHelpers`PolarToCartesian \/@ ResourceFunctionHelpers`PolarToCartesian`Private`lis\nResourceFunctionHelpers`PolarToCartesian[ResourceFunctionHelpers`PolarToCartesian`Private`lis:{{_, _}..}] := ResourceFunctionHelpers`PolarToCartesian \/@ ResourceFunctionHelpers`PolarToCartesian`Private`lis\nResourceFunctionHelpers`PolarToCartesian[{0, _}] := {0, 0}\nResourceFunctionHelpers`PolarToCartesian[{(ResourceFunctionHelpers`PolarToCartesian`Private`radius_)?NumericQ, ResourceFunctionHelpers`PolarToCartesian`Private`angle:Quantity[ResourceFunctionHelpers`PolarToCartesian`Private`magnitude_, ResourceFunctionHelpers`PolarToCartesian`Private`unit_]}] := Switch[ResourceFunctionHelpers`PolarToCartesian`Private`unit, \"Radians\", ResourceFunctionHelpers`PolarToCartesian[{ResourceFunctionHelpers`PolarToCartesian`Private`radius, ResourceFunctionHelpers`PolarToCartesian`Private`magnitude}], \"AngularDegrees\", ResourceFunctionHelpers`PolarToCartesian[{ResourceFunctionHelpers`PolarToCartesian`Private`radius, QuantityMagnitude[UnitConvert[ResourceFunctionHelpers`PolarToCartesian`Private`angle, \"Radians\"]]}], _, $Failed]\nResourceFunctionHelpers`PolarToCartesian[{(ResourceFunctionHelpers`PolarToCartesian`Private`radius_)?NumericQ, (ResourceFunctionHelpers`PolarToCartesian`Private`angle_)?NumericQ}] := Module[{ResourceFunctionHelpers`PolarToCartesian`Private`goodRadius, ResourceFunctionHelpers`PolarToCartesian`Private`goodAngle}, {ResourceFunctionHelpers`PolarToCartesian`Private`goodRadius, ResourceFunctionHelpers`PolarToCartesian`Private`goodAngle} = If[TrueQ[Negative[ResourceFunctionHelpers`PolarToCartesian`Private`radius]], {-ResourceFunctionHelpers`PolarToCartesian`Private`radius, ResourceFunctionHelpers`PolarToCartesian`Private`angleReduction[ResourceFunctionHelpers`PolarToCartesian`Private`angle - Pi]}, {ResourceFunctionHelpers`PolarToCartesian`Private`radius, ResourceFunctionHelpers`PolarToCartesian`Private`angleReduction[ResourceFunctionHelpers`PolarToCartesian`Private`angle]}]; FromPolarCoordinates[{ResourceFunctionHelpers`PolarToCartesian`Private`goodRadius, ResourceFunctionHelpers`PolarToCartesian`Private`goodAngle}]]\nResourceFunctionHelpers`PolarToCartesian[{ResourceFunctionHelpers`PolarToCartesian`Private`radius_, ResourceFunctionHelpers`PolarToCartesian`Private`angle_}] := FromPolarCoordinates[{ResourceFunctionHelpers`PolarToCartesian`Private`radius, ResourceFunctionHelpers`PolarToCartesian`Private`angle}]\nResourceFunctionHelpers`PolarToCartesian[(ResourceFunctionHelpers`PolarToCartesian`Private`array_)?ArrayQ] := ResourceFunctionHelpers`PolarToCartesian`Private`array \/. {ResourceFunctionHelpers`PolarToCartesian`Private`r_, ResourceFunctionHelpers`PolarToCartesian`Private`a_} :> ResourceFunctionHelpers`PolarToCartesian[{ResourceFunctionHelpers`PolarToCartesian`Private`r, ResourceFunctionHelpers`PolarToCartesian`Private`a}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`PolarToCartesian",
	"Internal`PoleAssignment":"ObjectType: Symbol\nUsage: Internal`PoleAssignment\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Internal`PoleAssignment",
	"Control`PID`PolePlacementTuning":"ObjectType: Symbol\nUsage: Control`PID`PolePlacementTuning\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PIDRulesDump`in:Control`PID`PolePlacementTuning[Control`PIDRulesDump`args__, Control`PIDRulesDump`opts:OptionsPattern[]] := With[{Control`PIDRulesDump`result = Control`PIDRulesDump`polePlacementGains[Control`PIDRulesDump`args, Control`PIDRulesDump`opts]}, Control`PIDRulesDump`result \/; Control`PIDRulesDump`result =!= $Failed] \/; Control`Utilities`validOptionsQ[Control`PIDRulesDump`in, Control`PID`PolePlacementTuning, Control`PIDRulesDump`args, Control`PIDRulesDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Control`PIDRulesDump`ControllerType -> Automatic, Control`PIDRulesDump`SetPointWeighting -> None, Method -> Automatic}\nAttributes: {}\nFullName: Control`PID`PolePlacementTuning",
	"Control`PoleZeroCancellation":"ObjectType: Symbol\nUsage: Control`PoleZeroCancellation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`PoleZeroCancellation",
	"Control`PoleZeroPlot":"ObjectType: Symbol\nUsage: Control`PoleZeroPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PoleZeroPlot[Control`RootLocusDump`args___] := With[{Control`RootLocusDump`res = Control`RootLocusDump`pzPlot[Control`PoleZeroPlot, Control`RootLocusDump`args]}, Control`RootLocusDump`res \/; Control`RootLocusDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> True, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> Automatic, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLegends -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PlotTheme :> $PlotTheme, PoleZeroMarkers -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, SamplingPeriod -> None, Ticks -> Automatic, TicksStyle -> {}}\nAttributes: {}\nFullName: Control`PoleZeroPlot",
	"Reduce`PolyCAD":"ObjectType: Symbol\nUsage: Reduce`PolyCAD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PolyCAD",
	"Wavelets`WaveletUtilities`PolyCoeff":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`PolyCoeff\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`PolyCoeff[Wavelets`WaveletUtilities`Dump`n_, Wavelets`WaveletUtilities`Dump`z_] := Block[{Wavelets`WaveletUtilities`Dump`k}, Sum[Binomial[Wavelets`WaveletUtilities`Dump`n + Wavelets`WaveletUtilities`Dump`k - 1, Wavelets`WaveletUtilities`Dump`k]*((1 - (Wavelets`WaveletUtilities`Dump`z + 1\/Wavelets`WaveletUtilities`Dump`z)\/2)\/2)^Wavelets`WaveletUtilities`Dump`k, {Wavelets`WaveletUtilities`Dump`k, 0, Wavelets`WaveletUtilities`Dump`n - 1}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`PolyCoeff",
	"Developer`PolyGammaSimplify":"ObjectType: Symbol\nUsage: PolyGammaSimplify[expr] transforms polygamma functions in expr, trying to either decrease the number of polygamma functions, or convert combinations of them into more elementary functions. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Developer`PolyGammaSimplify",
	"Internal`PolyGCDCacheHead":"ObjectType: Symbol\nUsage: Internal`PolyGCDCacheHead\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PolyGCDCacheHead",
	"ILD`PolygonalNumberQ":"ObjectType: Symbol\nUsage: ILD`PolygonalNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ILD`PolygonalNumberQ[(Language`NumbersDump`x_Integer)?NonNegative] := IntegerQ[(Sqrt[8*Language`NumbersDump`x + 1] - 1)\/2]\nILD`PolygonalNumberQ[(Language`NumbersDump`r_Integer) | RegularPolygon[Repeated[_, {0, 2}], Language`NumbersDump`r_Integer], (Language`NumbersDump`x_Integer)?NonNegative] \/; Language`NumbersDump`r >= 3 := IntegerQ[(Sqrt[8*(Language`NumbersDump`r - 2)*Language`NumbersDump`x + (Language`NumbersDump`r - 4)^2] + (Language`NumbersDump`r - 4))\/(2*Language`NumbersDump`r - 4)]\nILD`PolygonalNumberQ[_] = False\nILD`PolygonalNumberQ[_, _] = False\nILD`PolygonalNumberQ[Language`NumbersDump`args___] := $Failed \/; (System`Private`Arguments[ILD`PolygonalNumberQ[Language`NumbersDump`args], {1, 2}]; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ILD`PolygonalNumberQ",
	"Graphics`PolygonUtils`PolygonArea":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonArea\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonArea",
	"Region`Polygon`PolygonArea":"ObjectType: Symbol\nUsage: Region`Polygon`PolygonArea\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Polygon`PolygonArea[(Region`PolygonLibraryDump`poly_)?Region`Polygon`SimplyConnectedPolygonQ] := Block[{Region`PolygonLibraryDump`res, Region`PolygonLibraryDump`coords, Region`PolygonLibraryDump`indices}, Region`PolygonLibraryDump`coords = PolygonCoordinates[Region`PolygonLibraryDump`poly]; Region`PolygonLibraryDump`indices = Region`PolygonIndices[Region`PolygonLibraryDump`poly, 2]; (Region`PolygonLibraryDump`res = Total[(Region`PolygonLibraryDump`area[Region`PolygonLibraryDump`coords[[#1]]] & ) \/@ Region`PolygonLibraryDump`indices]; Region`PolygonLibraryDump`res \/; Internal`LiterallyAbsentQ[Region`PolygonLibraryDump`res, $Failed]) \/; ListQ[Region`PolygonLibraryDump`coords] && ListQ[Region`PolygonLibraryDump`indices]]\nRegion`Polygon`PolygonArea[Region`PolygonLibraryDump`poly_] := Block[{Region`PolygonLibraryDump`res, Region`PolygonLibraryDump`outer, Region`PolygonLibraryDump`inner}, Region`PolygonLibraryDump`outer = OuterPolygon[Region`PolygonLibraryDump`poly]; Region`PolygonLibraryDump`inner = InnerPolygon[Region`PolygonLibraryDump`poly]; (Region`PolygonLibraryDump`res = Region`Polygon`PolygonArea[Region`PolygonLibraryDump`outer] - Region`Polygon`PolygonArea[Region`PolygonLibraryDump`inner]; Region`PolygonLibraryDump`res \/; Internal`LiterallyAbsentQ[Region`PolygonLibraryDump`res, $Failed]) \/; RegionQ[Region`PolygonLibraryDump`outer] && RegionQ[Region`PolygonLibraryDump`inner] &&  !Region`EmptyRegionQ[Region`PolygonLibraryDump`inner]]\nRegion`Polygon`PolygonArea[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Polygon`PolygonArea",
	"Graphics`PolygonUtils`PolygonBooleanComponents":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonBooleanComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`PolygonBooleanComponents[Graphics`PolygonUtils`PolygonUtilsDump`op1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`olpoly__, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] \/; Graphics`PolygonUtils`PolygonUtilsDump`validPoly[Graphics`PolygonUtils`PolygonUtilsDump`op1] && Graphics`PolygonUtils`PolygonUtilsDump`validPoly[{Graphics`PolygonUtils`PolygonUtilsDump`olpoly}] := Module[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Graphics`PolygonUtils`PolygonUtilsDump`alltri, Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgdata, Graphics`PolygonUtils`PolygonUtilsDump`mesh, Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`polys1, Graphics`PolygonUtils`PolygonUtilsDump`polys2, Graphics`PolygonUtils`PolygonUtilsDump`polys3, Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod}, Graphics`PolygonUtils`PolygonUtilsDump`alltri = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles]; Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod]; Graphics`PolygonUtils`PolygonUtilsDump`p1 = Graphics`PolygonUtils`CurveToPolygon[Graphics`PolygonUtils`PolygonUtilsDump`op1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True]; Graphics`PolygonUtils`PolygonUtilsDump`lpolys = (Graphics`PolygonUtils`CurveToPolygon[#1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True] & ) \/@ {Graphics`PolygonUtils`PolygonUtilsDump`olpoly}; Graphics`PolygonUtils`PolygonUtilsDump`hullsegments = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, All, Automatic]; Graphics`PolygonUtils`PolygonUtilsDump`p1markers = Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[Graphics`PolygonUtils`PolygonUtilsDump`p1, 1]; Graphics`PolygonUtils`PolygonUtilsDump`plmarkers = (Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[#1, 2] & ) \/@ Graphics`PolygonUtils`PolygonUtilsDump`lpolys; Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers = Flatten[Join[Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers]]; Graphics`PolygonUtils`PolygonUtilsDump`pslgdata = Graphics`PolygonUtils`PolygonUtilsDump`findIntersections[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys}, Method -> \"PSLGData\", Graphics`PolygonUtils`PolygonUtilsDump`AllPoints -> False]; If[ !ListQ[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] || Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] != 2, Return[$Failed]]; If[Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]]] != Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`mesh = Graphics`PolygonUtils`PolygonUtilsDump`constrainTriangulation[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[1]], Graphics`PolygonUtils`PolygonUtilsDump`PSLG -> Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]], Graphics`PolygonUtils`PolygonUtilsDump`Convex -> False, Graphics`PolygonUtils`PolygonUtilsDump`AreaConstraintFunction -> None, Graphics`PolygonUtils`PolygonUtilsDump`HullSegments -> Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`PSLGMarkers -> Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod -> Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod]; If[ !Graphics`PolygonUtils`PolygonUtilsDump`meshObjectQ[Graphics`PolygonUtils`PolygonUtilsDump`mesh], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`polys1 = Graphics`PolygonUtils`PolygonUtilsDump`getPolysFromMesh[Graphics`PolygonUtils`PolygonUtilsDump`mesh, {0, 1}, Graphics`PolygonUtils`PolygonUtilsDump`alltri]; Graphics`PolygonUtils`PolygonUtilsDump`polys2 = Graphics`PolygonUtils`PolygonUtilsDump`getPolysFromMesh[Graphics`PolygonUtils`PolygonUtilsDump`mesh, {1, 0}, Graphics`PolygonUtils`PolygonUtilsDump`alltri]; Graphics`PolygonUtils`PolygonUtilsDump`polys3 = Graphics`PolygonUtils`PolygonUtilsDump`getPolysFromMesh[Graphics`PolygonUtils`PolygonUtilsDump`mesh, {1, 1}, Graphics`PolygonUtils`PolygonUtilsDump`alltri]; {Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polys1], Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polys2], Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polys3]}]\nGraphics`PolygonUtils`PolygonBooleanComponents[{Graphics`PolygonUtils`PolygonUtilsDump`p1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`lpoly__}, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] := Graphics`PolygonUtils`PolygonBooleanComponents[Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpoly, Graphics`PolygonUtils`PolygonUtilsDump`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`AllTriangles -> True, Graphics`Mesh`FillingMethod -> All}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonBooleanComponents",
	"Region`PolygonBooleanOperation":"ObjectType: Symbol\nUsage: Region`PolygonBooleanOperation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolygonBooleanOperation[\"Intersection\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res}, Region`MeshBooleanOperationsDump`res = Region`MeshBooleanOperationsDump`GeometryEvaluate[Region`MeshBooleanOperationsDump`iMeshRegionIntersection[Region`MeshBooleanOperationsDump`expr]]; Region`MeshBooleanOperationsDump`res \/; Region`MeshBooleanOperationsDump`res =!= $Failed]\nRegion`PolygonBooleanOperation[\"Union\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res}, Region`MeshBooleanOperationsDump`res = Region`MeshBooleanOperationsDump`GeometryEvaluate[Region`MeshBooleanOperationsDump`iMeshRegionUnion[Region`MeshBooleanOperationsDump`expr]]; Region`MeshBooleanOperationsDump`res \/; Region`MeshBooleanOperationsDump`res =!= $Failed]\nRegion`PolygonBooleanOperation[\"Difference\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res}, Region`MeshBooleanOperationsDump`res = Region`MeshBooleanOperationsDump`GeometryEvaluate[Region`MeshBooleanOperationsDump`iMeshRegionDifference[Region`MeshBooleanOperationsDump`expr]]; Region`MeshBooleanOperationsDump`res \/; Region`MeshBooleanOperationsDump`res =!= $Failed]\nRegion`PolygonBooleanOperation[\"SymmetricDifference\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res}, Region`MeshBooleanOperationsDump`res = Region`MeshBooleanOperationsDump`GeometryEvaluate[Region`MeshBooleanOperationsDump`iMeshRegionSymmetricDifference[Region`MeshBooleanOperationsDump`expr]]; Region`MeshBooleanOperationsDump`res \/; Region`MeshBooleanOperationsDump`res =!= $Failed]\nRegion`PolygonBooleanOperation[\"DisjointUnion\", Region`MeshBooleanOperationsDump`expr_, Region`MeshBooleanOperationsDump`opts_] := Block[{Region`MeshBooleanOperationsDump`res}, Region`MeshBooleanOperationsDump`res = Region`MeshBooleanOperationsDump`iMeshRegionDisjointUnion[Region`MeshBooleanOperationsDump`expr]; Region`MeshBooleanOperationsDump`res \/; Region`MeshBooleanOperationsDump`res =!= $Failed]\nRegion`PolygonBooleanOperation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolygonBooleanOperation",
	"SurfaceGraphics`Methods`PolygonColoring":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PolygonColoring\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PolygonColoring",
	"Graphics`PolygonUtils`PolygonCombine":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonCombine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`PolygonCombine[Polygon[{{}}]] := Polygon[{}]\nGraphics`PolygonUtils`PolygonCombine[Graphics`PolygonUtils`PolygonUtilsDump`op1_] \/; Graphics`PolygonUtils`PolygonUtilsDump`validPoly[Graphics`PolygonUtils`PolygonUtilsDump`op1] := Module[{Graphics`PolygonUtils`PolygonUtilsDump`mesh, Graphics`PolygonUtils`PolygonUtilsDump`boundaries}, Graphics`PolygonUtils`PolygonUtilsDump`mesh = Graphics`PolygonUtils`PolygonUtilsDump`meshObject[Graphics[{Graphics`PolygonUtils`PolygonUtilsDump`op1}]]; If[ !Graphics`PolygonUtils`PolygonUtilsDump`meshObjectQ[Graphics`PolygonUtils`PolygonUtilsDump`mesh], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`boundaries = Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"Coordinates\"[Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"BoundaryVertices\"]]]; Polygon[Graphics`PolygonUtils`PolygonUtilsDump`boundaries]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonCombine",
	"Graphics`PolygonUtils`PolygonComplement":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonComplement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`PolygonComplement[Graphics`PolygonUtils`PolygonUtilsDump`op1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`olpoly__, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] \/; Graphics`PolygonUtils`PolygonUtilsDump`validPoly[Graphics`PolygonUtils`PolygonUtilsDump`op1] && Graphics`PolygonUtils`PolygonUtilsDump`validPoly[{Graphics`PolygonUtils`PolygonUtilsDump`olpoly}] := Module[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Graphics`PolygonUtils`PolygonUtilsDump`alltri, Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgdata, Graphics`PolygonUtils`PolygonUtilsDump`mesh, Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`polysdata, Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod, Graphics`PolygonUtils`PolygonUtilsDump`result}, Graphics`PolygonUtils`PolygonUtilsDump`alltri = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles]; Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod]; Graphics`PolygonUtils`PolygonUtilsDump`p1 = Graphics`PolygonUtils`CurveToPolygon[Graphics`PolygonUtils`PolygonUtilsDump`op1]; Graphics`PolygonUtils`PolygonUtilsDump`lpolys = (Graphics`PolygonUtils`CurveToPolygon[#1] & ) \/@ {Graphics`PolygonUtils`PolygonUtilsDump`olpoly}; Graphics`PolygonUtils`PolygonUtilsDump`hullsegments = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, All, Automatic]; Graphics`PolygonUtils`PolygonUtilsDump`p1markers = Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[Graphics`PolygonUtils`PolygonUtilsDump`p1, 1]; Graphics`PolygonUtils`PolygonUtilsDump`plmarkers = (Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[#1, 2] & ) \/@ Graphics`PolygonUtils`PolygonUtilsDump`lpolys; Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers = Flatten[Join[Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers]]; Graphics`PolygonUtils`PolygonUtilsDump`pslgdata = Graphics`PolygonUtils`PolygonUtilsDump`findIntersections[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys}, Method -> \"PSLGData\", Graphics`PolygonUtils`PolygonUtilsDump`AllPoints -> False]; If[ !ListQ[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] || Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] != 2, Return[$Failed]]; If[Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]]] != Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`mesh = Graphics`PolygonUtils`PolygonUtilsDump`constrainTriangulation[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[1]], Graphics`PolygonUtils`PolygonUtilsDump`PSLG -> Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]], Graphics`PolygonUtils`PolygonUtilsDump`Convex -> False, Graphics`PolygonUtils`PolygonUtilsDump`AreaConstraintFunction -> None, Graphics`PolygonUtils`PolygonUtilsDump`HullSegments -> Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`PSLGMarkers -> Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod -> Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod]; If[ !Graphics`PolygonUtils`PolygonUtilsDump`meshObjectQ[Graphics`PolygonUtils`PolygonUtilsDump`mesh], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`polysdata = Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"FaceCoordinates\"[Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"MeshElementsMarker\"[2, Automatic, {1, 0}]]]]; Graphics`PolygonUtils`PolygonUtilsDump`result = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, Polygon[Developer`ToPackedArray[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]], Graphics`PolygonUtils`PolygonCombine[Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]]]; Graphics`PolygonUtils`PolygonUtilsDump`result]\nGraphics`PolygonUtils`PolygonComplement[{Graphics`PolygonUtils`PolygonUtilsDump`p1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`lpoly__}, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] := Graphics`PolygonUtils`PolygonComplement[Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpoly, Graphics`PolygonUtils`PolygonUtilsDump`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`AllTriangles -> True, Graphics`Mesh`FillingMethod -> All}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonComplement",
	"Region`PolygonComponents":"ObjectType: Symbol\nUsage: Region`PolygonComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolygonComponents[(Region`PolygonLibraryDump`expr_Polygon)?RegionQ, Region`PolygonLibraryDump`n_:All] := Block[{Region`PolygonLibraryDump`res, Region`PolygonLibraryDump`p}, Region`PolygonLibraryDump`p = CanonicalizePolygon[Region`PolygonLibraryDump`expr]; (Region`PolygonLibraryDump`res = Region`PolygonLibraryDump`iPolygonComponents[Region`PolygonLibraryDump`p, Region`PolygonLibraryDump`n]; Region`PolygonLibraryDump`res \/; Region`PolygonLibraryDump`res =!= $Failed) \/; Region`PolygonLibraryDump`p =!= $Failed]\nRegion`PolygonComponents[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolygonComponents",
	"SurfaceGraphics`Methods`PolygonContraction":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PolygonContraction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PolygonContraction",
	"Graphics`PolygonUtils`PolygonConvexComponents":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonConvexComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonConvexComponents",
	"Graphics`PolygonUtils`PolygonConvexQ":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonConvexQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonConvexQ",
	"Graphics`PolygonUtils`PolygonData":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`PolygonData[] := Sort[{\"Test01\", \"RandomWalk\", \"HexaSpiral\", \"HeptaSpiral\", \"PentaSpiral\", \"TriSpiral\", \"FractalCross\", \"Blob\", \"LSystem01\", \"ChvatalComb\"}]\nGraphics`PolygonUtils`PolygonData[\"Properties\"] := Sort[{\"Polygon\", \"GraphicsPolygon\", \"Data\", \"Line\", \"Point\", \"GraphicsLine\", \"GraphicsPoint\", \"Graphics\", \"MeshObject\"}]\nGraphics`PolygonUtils`PolygonData[{Graphics`PolygonUtils`PolygonUtilsDump`dataset_, $Failed}, Graphics`PolygonUtils`PolygonUtilsDump`property_] := $Failed\nGraphics`PolygonUtils`PolygonData[{Graphics`PolygonUtils`PolygonUtilsDump`dataset_String, Graphics`PolygonUtils`PolygonUtilsDump`size_Integer}, Graphics`PolygonUtils`PolygonUtilsDump`property_String:\"Graphics\"] := Graphics`PolygonUtils`PolygonUtilsDump`polygonmeshdataproperty[Graphics`PolygonUtils`PolygonUtilsDump`polygonmeshdata[Graphics`PolygonUtils`PolygonUtilsDump`dataset, Graphics`PolygonUtils`PolygonUtilsDump`size], Graphics`PolygonUtils`PolygonUtilsDump`property]\nGraphics`PolygonUtils`PolygonData[{Graphics`PolygonUtils`PolygonUtilsDump`dataset_String}, Graphics`PolygonUtils`PolygonUtilsDump`property_String:\"Graphics\"] := Graphics`PolygonUtils`PolygonData[{Graphics`PolygonUtils`PolygonUtilsDump`dataset, Graphics`PolygonUtils`PolygonUtilsDump`polygondatasize[Graphics`PolygonUtils`PolygonUtilsDump`dataset]}]\nGraphics`PolygonUtils`PolygonData[Graphics`PolygonUtils`PolygonUtilsDump`dataset_String, Graphics`PolygonUtils`PolygonUtilsDump`property_String:\"Graphics\"] := Graphics`PolygonUtils`PolygonData[{Graphics`PolygonUtils`PolygonUtilsDump`dataset, Graphics`PolygonUtils`PolygonUtilsDump`polygondatasize[Graphics`PolygonUtils`PolygonUtilsDump`dataset]}, Graphics`PolygonUtils`PolygonUtilsDump`property]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonData",
	"Graphics`PolygonUtils`PolygonDiameter":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonDiameter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonDiameter",
	"Graphics`PolygonUtils`PolygonInclusions":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonInclusions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`TestIntersections -> True}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonInclusions",
	"Graphics`PolygonUtils`PolygonInclusionsTree":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonInclusionsTree\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`TestIntersections -> True}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonInclusionsTree",
	"Region`PolygonIndices":"ObjectType: Symbol\nUsage: Region`PolygonIndices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolygonIndices[(Region`PolygonLibraryDump`expr_Polygon)?RegionQ, Region`PolygonLibraryDump`n_:All] := Block[{Region`PolygonLibraryDump`res, Region`PolygonLibraryDump`p}, Region`PolygonLibraryDump`p = Region`CanonicalizeRegion[Region`PolygonLibraryDump`expr]; (Region`PolygonLibraryDump`res = Region`PolygonLibraryDump`iPolygonIndices[Region`PolygonLibraryDump`p, Region`PolygonLibraryDump`n]; Region`PolygonLibraryDump`res \/; Region`PolygonLibraryDump`res =!= $Failed) \/; Region`PolygonLibraryDump`p =!= $Failed]\nRegion`PolygonIndices[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolygonIndices",
	"Graphics`PolygonUtils`PolygonIntersection":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonIntersection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`PolygonIntersection[Graphics`PolygonUtils`PolygonUtilsDump`op1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`olpoly__, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] \/; Graphics`PolygonUtils`PolygonUtilsDump`validPoly[Graphics`PolygonUtils`PolygonUtilsDump`op1] && Graphics`PolygonUtils`PolygonUtilsDump`validPoly[{Graphics`PolygonUtils`PolygonUtilsDump`olpoly}] := Module[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Graphics`PolygonUtils`PolygonUtilsDump`alltri, Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgdata, Graphics`PolygonUtils`PolygonUtilsDump`mesh, Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`polysdata, Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod, Graphics`PolygonUtils`PolygonUtilsDump`result}, Graphics`PolygonUtils`PolygonUtilsDump`alltri = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles]; Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod]; Graphics`PolygonUtils`PolygonUtilsDump`p1 = Graphics`PolygonUtils`CurveToPolygon[Graphics`PolygonUtils`PolygonUtilsDump`op1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True]; Graphics`PolygonUtils`PolygonUtilsDump`lpolys = (Graphics`PolygonUtils`CurveToPolygon[#1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True] & ) \/@ {Graphics`PolygonUtils`PolygonUtilsDump`olpoly}; Graphics`PolygonUtils`PolygonUtilsDump`hullsegments = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, All, Automatic]; Graphics`PolygonUtils`PolygonUtilsDump`p1markers = Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[Graphics`PolygonUtils`PolygonUtilsDump`p1, 1]; Graphics`PolygonUtils`PolygonUtilsDump`plmarkers = (Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[#1, 2] & ) \/@ Graphics`PolygonUtils`PolygonUtilsDump`lpolys; Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers = Flatten[Join[Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers]]; Graphics`PolygonUtils`PolygonUtilsDump`pslgdata = Graphics`PolygonUtils`PolygonUtilsDump`findIntersections[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys}, Method -> \"PSLGData\", Graphics`PolygonUtils`PolygonUtilsDump`AllPoints -> False]; If[ !ListQ[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] || Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] != 2, Return[$Failed]]; If[Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]]] != Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`mesh = Graphics`PolygonUtils`PolygonUtilsDump`constrainTriangulation[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[1]], Graphics`PolygonUtils`PolygonUtilsDump`PSLG -> Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]], Graphics`PolygonUtils`PolygonUtilsDump`Convex -> False, Graphics`PolygonUtils`PolygonUtilsDump`AreaConstraintFunction -> None, Graphics`PolygonUtils`PolygonUtilsDump`HullSegments -> Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`PSLGMarkers -> Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod -> Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod]; If[ !Graphics`PolygonUtils`PolygonUtilsDump`meshObjectQ[Graphics`PolygonUtils`PolygonUtilsDump`mesh], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`polysdata = Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"FaceCoordinates\"[Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"MeshElementsMarker\"[2, Automatic, {1, 1}]]]]; Graphics`PolygonUtils`PolygonUtilsDump`result = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, Polygon[Developer`ToPackedArray[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]], Graphics`PolygonUtils`PolygonCombine[Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]]]; Graphics`PolygonUtils`PolygonUtilsDump`result]\nGraphics`PolygonUtils`PolygonIntersection[{Graphics`PolygonUtils`PolygonUtilsDump`op1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`olpoly__}, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] \/; Graphics`PolygonUtils`PolygonUtilsDump`validPoly[Graphics`PolygonUtils`PolygonUtilsDump`op1] && Graphics`PolygonUtils`PolygonUtilsDump`validPoly[{Graphics`PolygonUtils`PolygonUtilsDump`olpoly}] := Module[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Graphics`PolygonUtils`PolygonUtilsDump`alltri, Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgdata, Graphics`PolygonUtils`PolygonUtilsDump`mesh, Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`polysdata, Graphics`PolygonUtils`PolygonUtilsDump`polys, Graphics`PolygonUtils`PolygonUtilsDump`mvector, Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod, Graphics`PolygonUtils`PolygonUtilsDump`result}, Graphics`PolygonUtils`PolygonUtilsDump`alltri = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles]; Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod]; Graphics`PolygonUtils`PolygonUtilsDump`p1 = Graphics`PolygonUtils`CurveToPolygon[Graphics`PolygonUtils`PolygonUtilsDump`op1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True]; Graphics`PolygonUtils`PolygonUtilsDump`lpolys = (Graphics`PolygonUtils`CurveToPolygon[#1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True] & ) \/@ {Graphics`PolygonUtils`PolygonUtilsDump`olpoly}; Graphics`PolygonUtils`PolygonUtilsDump`hullsegments = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, All, Automatic]; Graphics`PolygonUtils`PolygonUtilsDump`polys = Flatten[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys}]; Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers = Flatten[Table[Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[Graphics`PolygonUtils`PolygonUtilsDump`polys[[Graphics`PolygonUtils`PolygonUtilsDump`i]], Graphics`PolygonUtils`PolygonUtilsDump`i], {Graphics`PolygonUtils`PolygonUtilsDump`i, 1, Length[Graphics`PolygonUtils`PolygonUtilsDump`polys], 1}]]; Graphics`PolygonUtils`PolygonUtilsDump`mvector = Table[1, {Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers]}]; Graphics`PolygonUtils`PolygonUtilsDump`pslgdata = Graphics`PolygonUtils`PolygonUtilsDump`findIntersections[Graphics`PolygonUtils`PolygonUtilsDump`polys, Method -> \"PSLGData\", Graphics`PolygonUtils`PolygonUtilsDump`AllPoints -> False]; If[ !ListQ[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] || Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] != 2, Return[$Failed]]; If[Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]]] != Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`mesh = Graphics`PolygonUtils`PolygonUtilsDump`constrainTriangulation[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[1]], Graphics`PolygonUtils`PolygonUtilsDump`PSLG -> Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]], Graphics`PolygonUtils`PolygonUtilsDump`Convex -> False, Graphics`PolygonUtils`PolygonUtilsDump`AreaConstraintFunction -> None, Graphics`PolygonUtils`PolygonUtilsDump`HullSegments -> Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`PSLGMarkers -> Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod -> Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod]; If[ !Graphics`PolygonUtils`PolygonUtilsDump`meshObjectQ[Graphics`PolygonUtils`PolygonUtilsDump`mesh], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`polysdata = Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"FaceCoordinates\"[Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"MeshElementsMarker\"[2, Automatic, Graphics`PolygonUtils`PolygonUtilsDump`mvector]]]]; Graphics`PolygonUtils`PolygonUtilsDump`result = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, Polygon[Developer`ToPackedArray[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]], Graphics`PolygonUtils`PolygonCombine[Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]]]; Graphics`PolygonUtils`PolygonUtilsDump`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`AllTriangles -> True, Graphics`Mesh`FillingMethod -> All}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonIntersection",
	"GIS`PolygonMatrix":"ObjectType: Symbol\nUsage: GIS`PolygonMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PolygonMatrix",
	"Graphics`PolygonUtils`PolygonMemberQ":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonMemberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonMemberQ",
	"Graphics`PolygonUtils`PolygonMonotoneComponents":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonMonotoneComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonMonotoneComponents",
	"Region`PolygonOptions":"ObjectType: Symbol\nUsage: Region`PolygonOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolygonOptions[(Region`PolygonLibraryDump`expr_Polygon)?RegionQ] := Block[{Region`PolygonLibraryDump`res, Region`PolygonLibraryDump`p}, Region`PolygonLibraryDump`p = Region`CanonicalizeRegion[Region`PolygonLibraryDump`expr]; (Region`PolygonLibraryDump`res = Region`PolygonLibraryDump`iPolygonOptions[Region`PolygonLibraryDump`p]; Region`PolygonLibraryDump`res \/; Region`PolygonLibraryDump`res =!= $Failed) \/; Region`PolygonLibraryDump`p =!= $Failed]\nRegion`PolygonOptions[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolygonOptions",
	"Region`PolygonQ":"ObjectType: Symbol\nUsage: Region`PolygonQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolygonQ[Simplex[2]] := True\nRegion`PolygonQ[_Triangle | _Polygon | _Rectangle | _Parallelogram | _RegularPolygon] := True\nRegion`PolygonQ[Simplex[Region`PolygonLibraryDump`pts_]] \/; Dimensions[Region`PolygonLibraryDump`pts] == {3, 2} := True\nRegion`PolygonQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolygonQ",
	"SurfaceGraphics`Methods`PolygonReduction":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PolygonReduction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PolygonReduction",
	"Graphics`Mesh`PolygonReverse":"ObjectType: Symbol\nUsage: Graphics`Mesh`PolygonReverse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PolygonReverse",
	"SurfaceGraphics`Methods`PolygonReverse":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PolygonReverse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PolygonReverse",
	"ComputationalGeometry`Surface`Polygons":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`Polygons\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`Polygons",
	"SurfaceGraphics`Methods`Polygons":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Polygons\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Polygons",
	"Graphics`PolygonUtils`PolygonTriangulate":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonTriangulate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonTriangulate",
	"Graphics`PolygonUtils`PolygonUnion":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonUnion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`PolygonUnion[Graphics`PolygonUtils`PolygonUtilsDump`op1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`olpoly__, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] \/; Graphics`PolygonUtils`PolygonUtilsDump`validPoly[Graphics`PolygonUtils`PolygonUtilsDump`op1] && Graphics`PolygonUtils`PolygonUtilsDump`validPoly[{Graphics`PolygonUtils`PolygonUtilsDump`olpoly}] := Module[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Graphics`PolygonUtils`PolygonUtilsDump`alltri, Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`pslgdata, Graphics`PolygonUtils`PolygonUtilsDump`mesh, Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`polysdata, Graphics`PolygonUtils`PolygonUtilsDump`nullids, Graphics`PolygonUtils`PolygonUtilsDump`zvector, Graphics`PolygonUtils`PolygonUtilsDump`fids, Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod, Graphics`PolygonUtils`PolygonUtilsDump`result}, Graphics`PolygonUtils`PolygonUtilsDump`alltri = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles]; Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod = OptionValue[Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod]; Graphics`PolygonUtils`PolygonUtilsDump`p1 = Graphics`PolygonUtils`CurveToPolygon[Graphics`PolygonUtils`PolygonUtilsDump`op1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True]; Graphics`PolygonUtils`PolygonUtilsDump`lpolys = (Graphics`PolygonUtils`CurveToPolygon[#1, Graphics`PolygonUtils`PolygonUtilsDump`AllTriangles -> True] & ) \/@ {Graphics`PolygonUtils`PolygonUtilsDump`olpoly}; Graphics`PolygonUtils`PolygonUtilsDump`hullsegments = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, All, Automatic]; Graphics`PolygonUtils`PolygonUtilsDump`p1markers = Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[Graphics`PolygonUtils`PolygonUtilsDump`p1, 1]; Graphics`PolygonUtils`PolygonUtilsDump`plmarkers = (Graphics`PolygonUtils`PolygonUtilsDump`polygonMarkers[#1, 1] & ) \/@ Graphics`PolygonUtils`PolygonUtilsDump`lpolys; Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers = Range[Length[Flatten[Join[Graphics`PolygonUtils`PolygonUtilsDump`p1markers, Graphics`PolygonUtils`PolygonUtilsDump`plmarkers]]]]; Graphics`PolygonUtils`PolygonUtilsDump`pslgdata = Graphics`PolygonUtils`PolygonUtilsDump`findIntersections[{Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpolys}, Method -> \"PSLGData\", Graphics`PolygonUtils`PolygonUtilsDump`AllPoints -> False]; If[ !ListQ[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] || Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata] != 2, Return[$Failed]]; If[Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]]] != Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`mesh = Graphics`PolygonUtils`PolygonUtilsDump`constrainTriangulation[Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[1]], Graphics`PolygonUtils`PolygonUtilsDump`PSLG -> Graphics`PolygonUtils`PolygonUtilsDump`pslgdata[[2]], Graphics`PolygonUtils`PolygonUtilsDump`Convex -> False, Graphics`PolygonUtils`PolygonUtilsDump`AreaConstraintFunction -> None, Graphics`PolygonUtils`PolygonUtilsDump`HullSegments -> Graphics`PolygonUtils`PolygonUtilsDump`hullsegments, Graphics`PolygonUtils`PolygonUtilsDump`PSLGMarkers -> Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers, Graphics`PolygonUtils`PolygonUtilsDump`FillingMethod -> Graphics`PolygonUtils`PolygonUtilsDump`fillingmethod]; If[ !Graphics`PolygonUtils`PolygonUtilsDump`meshObjectQ[Graphics`PolygonUtils`PolygonUtilsDump`mesh], Return[$Failed]]; Graphics`PolygonUtils`PolygonUtilsDump`zvector = Table[0, {Length[Graphics`PolygonUtils`PolygonUtilsDump`pslgmarkers]}]; Graphics`PolygonUtils`PolygonUtilsDump`nullids = Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"MeshElementsMarker\"[2, Automatic, Graphics`PolygonUtils`PolygonUtilsDump`zvector]]; Graphics`PolygonUtils`PolygonUtilsDump`fids = Complement[Range[Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"Elements\"][[3]]], Graphics`PolygonUtils`PolygonUtilsDump`nullids]; Graphics`PolygonUtils`PolygonUtilsDump`polysdata = Graphics`PolygonUtils`PolygonUtilsDump`mesh[\"FaceCoordinates\"[Graphics`PolygonUtils`PolygonUtilsDump`fids]]; Graphics`PolygonUtils`PolygonUtilsDump`result = If[Graphics`PolygonUtils`PolygonUtilsDump`alltri, Polygon[Developer`ToPackedArray[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]], Graphics`PolygonUtils`PolygonCombine[Polygon[Graphics`PolygonUtils`PolygonUtilsDump`polysdata]]]; Graphics`PolygonUtils`PolygonUtilsDump`result]\nGraphics`PolygonUtils`PolygonUnion[{Graphics`PolygonUtils`PolygonUtilsDump`p1:_Polygon | _Graphics`PolygonUtils`Curve, Graphics`PolygonUtils`PolygonUtilsDump`lpoly__}, Graphics`PolygonUtils`PolygonUtilsDump`o:OptionsPattern[]] := Graphics`PolygonUtils`PolygonUnion[Graphics`PolygonUtils`PolygonUtilsDump`p1, Graphics`PolygonUtils`PolygonUtilsDump`lpoly, Graphics`PolygonUtils`PolygonUtilsDump`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`AllTriangles -> True, Graphics`Mesh`FillingMethod -> All}\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonUnion",
	"Graphics`PolygonUtils`PolygonWidth":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonWidth\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonWidth",
	"Graphics`PolygonUtils`PolygonWindingNumber":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`PolygonWindingNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`PolygonWindingNumber",
	"Region`PolyhedronAdjacencyMatrix":"ObjectType: Symbol\nUsage: Region`PolyhedronAdjacencyMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolyhedronAdjacencyMatrix[Region`PolyhedronAdjacencyMatrixDump`expr__] := Block[{Region`PolyhedronAdjacencyMatrixDump`res}, Region`PolyhedronAdjacencyMatrixDump`res = Region`PolyhedronAdjacencyMatrixDump`dPolyhedronAdjacencyMatrix[Region`PolyhedronAdjacencyMatrixDump`expr]; Region`PolyhedronAdjacencyMatrixDump`res \/; Region`PolyhedronAdjacencyMatrixDump`res =!= $Failed]\nRegion`PolyhedronAdjacencyMatrix[Region`PolyhedronAdjacencyMatrixDump`expr___] := (Region`PolyhedronAdjacencyMatrixDump`mPolyhedronAdjacencyMatrix[Region`PolyhedronAdjacencyMatrixDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolyhedronAdjacencyMatrix",
	"Region`PolyhedronBooleanOperation":"ObjectType: Symbol\nUsage: Region`PolyhedronBooleanOperation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolyhedronBooleanOperation[\"Intersection\", Region`PolyhedronBooleanOperationsDump`expr_, Region`PolyhedronBooleanOperationsDump`opts:OptionsPattern[]] := Block[{Region`PolyhedronBooleanOperationsDump`res}, Region`PolyhedronBooleanOperationsDump`res = Region`PolyhedronBooleanOperationsDump`iPolyhedronIntersection[Region`PolyhedronBooleanOperationsDump`expr, Region`PolyhedronBooleanOperationsDump`opts]; Region`PolyhedronBooleanOperationsDump`res \/; RegionQ[Region`PolyhedronBooleanOperationsDump`res]]\nRegion`PolyhedronBooleanOperation[\"Union\", Region`PolyhedronBooleanOperationsDump`expr_, Region`PolyhedronBooleanOperationsDump`opts:OptionsPattern[]] := Block[{Region`PolyhedronBooleanOperationsDump`res}, Region`PolyhedronBooleanOperationsDump`res = Region`PolyhedronBooleanOperationsDump`iPolyhedronUnion[Region`PolyhedronBooleanOperationsDump`expr, Region`PolyhedronBooleanOperationsDump`opts]; Region`PolyhedronBooleanOperationsDump`res \/; RegionQ[Region`PolyhedronBooleanOperationsDump`res]]\nRegion`PolyhedronBooleanOperation[\"Difference\", Region`PolyhedronBooleanOperationsDump`expr_, Region`PolyhedronBooleanOperationsDump`opts:OptionsPattern[]] := Block[{Region`PolyhedronBooleanOperationsDump`res}, Region`PolyhedronBooleanOperationsDump`res = Region`PolyhedronBooleanOperationsDump`iPolyhedronDifference[Region`PolyhedronBooleanOperationsDump`expr, Region`PolyhedronBooleanOperationsDump`opts]; Region`PolyhedronBooleanOperationsDump`res \/; RegionQ[Region`PolyhedronBooleanOperationsDump`res]]\nRegion`PolyhedronBooleanOperation[\"SymmetricDifference\", Region`PolyhedronBooleanOperationsDump`expr_, Region`PolyhedronBooleanOperationsDump`opts:OptionsPattern[]] := Block[{Region`PolyhedronBooleanOperationsDump`res}, Region`PolyhedronBooleanOperationsDump`res = Region`PolyhedronBooleanOperationsDump`iPolyhedronSymmetricDifference[Region`PolyhedronBooleanOperationsDump`expr, Region`PolyhedronBooleanOperationsDump`opts]; Region`PolyhedronBooleanOperationsDump`res \/; RegionQ[Region`PolyhedronBooleanOperationsDump`res]]\nRegion`PolyhedronBooleanOperation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolyhedronBooleanOperation",
	"Region`PolyhedronFaceIndices":"ObjectType: Symbol\nUsage: Region`PolyhedronFaceIndices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PolyhedronFaceIndices[Region`CanonicalPolyhedronDump`expr_] := Block[{Region`CanonicalPolyhedronDump`res}, Region`CanonicalPolyhedronDump`res = Region`CanonicalPolyhedronDump`dPolyhedronFaceIndices[Region`CanonicalPolyhedronDump`expr]; Region`CanonicalPolyhedronDump`res \/; Region`CanonicalPolyhedronDump`res =!= $Failed]\nRegion`PolyhedronFaceIndices[Region`CanonicalPolyhedronDump`expr___] := (Region`CanonicalPolyhedronDump`mPolyhedronFaceIndices[Region`CanonicalPolyhedronDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PolyhedronFaceIndices",
	"Reduce`PolyhedronIntegerPoints":"ObjectType: Symbol\nUsage: Reduce`PolyhedronIntegerPoints\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PolyhedronIntegerPoints",
	"Region`Polyhedron`PolyhedronQ":"ObjectType: Symbol\nUsage: Region`Polyhedron`PolyhedronQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Polyhedron`PolyhedronQ[Region`PolyhedronLibraryDump`expr:_Polyhedron | _Hexahedron | _Cube | _Dodecahedron | _Icosahedron | _Octahedron | _Tetrahedron | _Pyramid | _Prism | _Cuboid | _Parallelepiped] := RegionQ[Region`PolyhedronLibraryDump`expr]\nRegion`Polyhedron`PolyhedronQ[Region`PolyhedronLibraryDump`expr:Simplex[Region`PolyhedronLibraryDump`pts_]] \/; Dimensions[Region`PolyhedronLibraryDump`pts] == {4, 3} := RegionQ[Region`PolyhedronLibraryDump`expr]\nRegion`Polyhedron`PolyhedronQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Polyhedron`PolyhedronQ",
	"GIS`PolylineClip":"ObjectType: Symbol\nUsage: GIS`PolylineClip\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PolylineClip",
	"GIS`PolylineResample":"ObjectType: Symbol\nUsage: GIS`PolylineResample\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PolylineResample",
	"System`Private`PolyLogDerivative":"ObjectType: Symbol\nUsage: System`Private`PolyLogDerivative\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`PolyLogDerivative[System`ZetaDerivativeDump`ord_Integer, {(System`ZetaDerivativeDump`s_)?NumberQ, (System`ZetaDerivativeDump`z_)?NumberQ}, System`ZetaDerivativeDump`prec_] \/; Precision[{System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`z}] < Infinity && (Abs[System`ZetaDerivativeDump`z] < 1 || (Abs[System`ZetaDerivativeDump`z] == 1 && Re[System`ZetaDerivativeDump`s] > 1)) := Module[{System`ZetaDerivativeDump`res = $Failed}, Catch[If[System`ZetaDerivativeDump`s == 1 && System`ZetaDerivativeDump`z == 1, Throw[System`ZetaDerivativeDump`res = ComplexInfinity]]; If[System`ZetaDerivativeDump`z == 0, Throw[System`ZetaDerivativeDump`res = System`ZetaDerivativeDump`z]]; System`ZetaDerivativeDump`res = System`ZetaDerivativeDump`EMPolyLog[{System`ZetaDerivativeDump`z, System`ZetaDerivativeDump`s, SetPrecision[1, System`ZetaDerivativeDump`prec]}, System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`prec]; If[Head[System`ZetaDerivativeDump`res] === System`ZetaDerivativeDump`EMPolyLog, System`ZetaDerivativeDump`res = $Failed]; ]; System`ZetaDerivativeDump`res \/; System`ZetaDerivativeDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PolyLogDerivative",
	"Integrate`PolylogIntegrals":"ObjectType: Symbol\nUsage: Integrate`PolylogIntegrals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Integrate`PolylogIntegrals[___] := Integrate`PolylogDump`FailInt1[] \/; Integrate`$IntegrateAssumptions === False\nIntegrate`PolylogIntegrals[Integrate`ImproperDump`integrand_, Integrate`ImproperDump`oexpr_, {Integrate`ImproperDump`x_, Integrate`PolylogDump`omin_, Integrate`PolylogDump`omax_}] := Module[{Integrate`ImproperDump`tmp, Integrate`ImproperDump`res, Integrate`ImproperDump`expr = Integrate`ImproperDump`oexpr, Integrate`ImproperDump`min = Integrate`PolylogDump`omin, Integrate`ImproperDump`max = Integrate`PolylogDump`omax}, Integrate`IntegrateG; Integrate`PolylogDump`dbgPrintplog[\"PolylogIntegrals called, integrand and rec is \", InputForm[{Integrate`ImproperDump`integrand, Integrate`$AlgTransRecursionCounter}]]; {Integrate`ImproperDump`min, Integrate`ImproperDump`max} = Integrate`ImproperDump`CSimplify[{Integrate`ImproperDump`min, Integrate`ImproperDump`max}, Integrate`$IntegrateAssumptions]; If[Integrate`$AlgTransRecursionCounter > 4 ||  !FreeQ[Integrate`ImproperDump`expr, Integrate], Return[Integrate`PolylogDump`FailInt1[]]]; If[LeafCount[Integrate`ImproperDump`expr] > 1200 &&  !FreeQ[Integrate`ImproperDump`expr, MeijerG | ExpIntegralEi | EllipticPi | EllipticF | SinIntegral | CosIntegral], Return[Integrate`PolylogDump`FailInt1[]]]; If[ !FreeQ[{Integrate`ImproperDump`min, Integrate`ImproperDump`max}, DirectedInfinity], Integrate`PolylogDump`dbgPrintplog[\"start PolylogIntegrals \", {Integrate`ImproperDump`real[Integrate`ImproperDump`min], Integrate`ImproperDump`real[Integrate`ImproperDump`max]}]; If[MatchQ[Integrate`ImproperDump`integrand, Log[(Integrate`ImproperDump`c_) + (Integrate`ImproperDump`a_.)*Integrate`ImproperDump`x^(Integrate`ImproperDump`p_.)]*Log[(Integrate`ImproperDump`d_) + (Integrate`ImproperDump`b_.)*Integrate`ImproperDump`x^(Integrate`ImproperDump`q_.)] \/;  !Internal`DependsOnQ[{Integrate`ImproperDump`a, Integrate`ImproperDump`b, Integrate`ImproperDump`c, Integrate`ImproperDump`d}, Integrate`ImproperDump`x]] || MatchQ[Integrate`ImproperDump`integrand, Integrate`ImproperDump`x^(Integrate`ImproperDump`r_.)*Log[(Integrate`ImproperDump`c_) + (Integrate`ImproperDump`a_.)*Integrate`ImproperDump`x^(Integrate`ImproperDump`p_.)]*Log[(Integrate`ImproperDump`d_) + (Integrate`ImproperDump`b_.)*Integrate`ImproperDump`x^(Integrate`ImproperDump`q_.)] \/;  !Internal`DependsOnQ[{Integrate`ImproperDump`a, Integrate`ImproperDump`b, Integrate`ImproperDump`c, Integrate`ImproperDump`d}, Integrate`ImproperDump`x]], Return[Integrate`PolylogDump`FailInt1[]]]; ]; Quiet[Integrate`ImproperDump`tmp = TimeConstrained[Simplify[Integrate`ImproperDump`expr, Integrate`ImproperDump`removeElementAssumptions[Integrate`$IntegrateAssumptions]], 1]]; If[FreeQ[Integrate`ImproperDump`tmp, $Aborted | $Failed | Overflow[] | Underflow[] | Indeterminate | DirectedInfinity | Simplify | FullSimplify] && FreeQ[Integrate`ImproperDump`tmp, HoldPattern[Beta[Integrate`ImproperDump`w__]] \/; Internal`DependsOnQ[{Integrate`ImproperDump`w}, Integrate`ImproperDump`x]], Integrate`ImproperDump`expr = Integrate`ImproperDump`tmp]; If[ !Integrate`PolylogDump`numberQ[Integrate`ImproperDump`min] ||  !Integrate`PolylogDump`numberQ[Integrate`ImproperDump`max], Integrate`ImproperDump`tmp = Position[Integrate`ImproperDump`expr, HoldPattern[Gamma[Integrate`ImproperDump`w__]] \/; Internal`DependsOnQ[{Integrate`ImproperDump`w}, Integrate`ImproperDump`x], 1]; If[Length[Integrate`ImproperDump`tmp] != 0, Return[Integrate`PolylogDump`FailInt1[]]]; ]; Integrate`ImproperDump`res = Integrate`PolylogDump`PolylogIntSingular[Integrate`ImproperDump`integrand, Integrate`ImproperDump`expr, {Integrate`ImproperDump`x, Integrate`ImproperDump`min, Integrate`ImproperDump`max}]; Integrate`ImproperDump`res \/. {Root -> Integrate`ImproperDump`rroot, Function -> Integrate`ImproperDump`func, RootSum -> Integrate`PolylogDump`rootsum} \/. Integrate`PolylogDump`gammarule \/. {Integrate`ImproperDump`func -> Function, Integrate`ImproperDump`rroot -> Root, Integrate`PolylogDump`rootsum -> RootSum}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`PolylogIntegrals",
	"Developer`PolyLogSimplify":"ObjectType: Symbol\nUsage: PolyLogSimplify[expr] transforms polylogarithm functions in expr, trying to either decrease the number of polylogarithm functions, or convert combinations of them into more elementary functions. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Developer`PolyLogSimplify",
	"System`Private`PolyModInverse":"ObjectType: Symbol\nUsage: System`Private`PolyModInverse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PolyModInverse",
	"NRoots`PolynomialDerivative":"ObjectType: Symbol\nUsage: NRoots`PolynomialDerivative\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NRoots`PolynomialDerivative",
	"Algebra`PolynomialDerivativeModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialDerivativeModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialDerivativeModList",
	"Random`PolynomialDistributionVector":"ObjectType: Symbol\nUsage: Random`PolynomialDistributionVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`PolynomialDistributionVector[Statistics`RandomNumberGenerationDump`poly_, {Statistics`RandomNumberGenerationDump`t_, (Statistics`RandomNumberGenerationDump`a_)?Internal`RealValuedNumericQ, (Statistics`RandomNumberGenerationDump`b_)?Internal`RealValuedNumericQ}, Statistics`RandomNumberGenerationDump`len_, Statistics`RandomNumberGenerationDump`prec_] \/; PolynomialQ[Statistics`RandomNumberGenerationDump`poly, Statistics`RandomNumberGenerationDump`t] && Statistics`RandomNumberGenerationDump`b > Statistics`RandomNumberGenerationDump`a := Module[{Statistics`RandomNumberGenerationDump`pdf, Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`cl, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`w, Statistics`RandomNumberGenerationDump`pi, Statistics`RandomNumberGenerationDump`pw, Statistics`RandomNumberGenerationDump`dists, Statistics`RandomNumberGenerationDump`hfun, Statistics`RandomNumberGenerationDump`ffun, Statistics`RandomNumberGenerationDump`totw}, Statistics`RandomNumberGenerationDump`pdf = (Statistics`RandomNumberGenerationDump`b - Statistics`RandomNumberGenerationDump`a)*Statistics`RandomNumberGenerationDump`poly \/. Statistics`RandomNumberGenerationDump`t -> Statistics`RandomNumberGenerationDump`a + (Statistics`RandomNumberGenerationDump`b - Statistics`RandomNumberGenerationDump`a)*Statistics`RandomNumberGenerationDump`x; Statistics`RandomNumberGenerationDump`cl = Reverse[CoefficientList[Statistics`RandomNumberGenerationDump`pdf, Statistics`RandomNumberGenerationDump`x]]; If[Min[Statistics`RandomNumberGenerationDump`w = Statistics`RandomNumberGenerationDump`PowerToBernsteinList[Statistics`RandomNumberGenerationDump`cl]] >= 0, Statistics`RandomNumberGenerationDump`n = Length[Statistics`RandomNumberGenerationDump`w]; Statistics`RandomNumberGenerationDump`totw = Total[Statistics`RandomNumberGenerationDump`w]; If[Statistics`RandomNumberGenerationDump`totw > 0, Statistics`RandomNumberGenerationDump`a + (Statistics`RandomNumberGenerationDump`b - Statistics`RandomNumberGenerationDump`a)*Random`MixtureDistributionVector[Statistics`RandomNumberGenerationDump`w\/Statistics`RandomNumberGenerationDump`totw, Table[BetaDistribution[Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`n - Statistics`RandomNumberGenerationDump`i + 1], {Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`n}], Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`prec], $Failed], Statistics`RandomNumberGenerationDump`n = Length[Statistics`RandomNumberGenerationDump`w]; Statistics`RandomNumberGenerationDump`pi = Random`Private`PositionsOf[Sign[Statistics`RandomNumberGenerationDump`w], Positive]; If[Statistics`RandomNumberGenerationDump`pi =!= {}, Statistics`RandomNumberGenerationDump`totw = Total[Statistics`RandomNumberGenerationDump`w]; If[Statistics`RandomNumberGenerationDump`totw > 0, Statistics`RandomNumberGenerationDump`pw = Statistics`RandomNumberGenerationDump`w[[Statistics`RandomNumberGenerationDump`pi]]; Statistics`RandomNumberGenerationDump`dists = Table[BetaDistribution[Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`n - Statistics`RandomNumberGenerationDump`i + 1], {Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`pi}]; Statistics`RandomNumberGenerationDump`hfun = Function @@ {Statistics`RandomNumberGenerationDump`x, (Statistics`RandomNumberGenerationDump`pw\/Statistics`RandomNumberGenerationDump`totw) . Table[Statistics`RandomNumberGenerationDump`n*Binomial[Statistics`RandomNumberGenerationDump`n - 1, Statistics`RandomNumberGenerationDump`i - 1]*Statistics`RandomNumberGenerationDump`x^(Statistics`RandomNumberGenerationDump`i - 1)*(1 - Statistics`RandomNumberGenerationDump`x)^(Statistics`RandomNumberGenerationDump`n - Statistics`RandomNumberGenerationDump`i), {Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`pi}]}; Statistics`RandomNumberGenerationDump`ffun = Function @@ {Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`pdf}; Statistics`RandomNumberGenerationDump`a + (Statistics`RandomNumberGenerationDump`b - Statistics`RandomNumberGenerationDump`a)*Random`RandomRealRejection[Statistics`RandomNumberGenerationDump`ffun, {Statistics`RandomNumberGenerationDump`hfun, Function[{Statistics`RandomNumberGenerationDump`ln, Statistics`RandomNumberGenerationDump`wpr}, Random`MixtureDistributionVector[Statistics`RandomNumberGenerationDump`pw, Statistics`RandomNumberGenerationDump`dists, Statistics`RandomNumberGenerationDump`ln, Statistics`RandomNumberGenerationDump`wpr]]}, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`prec], $Failed, $Failed], $Failed], $Failed]]\nRandom`PolynomialDistributionVector[Statistics`RandomNumberGenerationDump`poly_, Statistics`RandomNumberGenerationDump`rspec:{{Statistics`RandomNumberGenerationDump`t_, (Statistics`RandomNumberGenerationDump`a_)?Internal`RealValuedNumericQ, (Statistics`RandomNumberGenerationDump`b_)?Internal`RealValuedNumericQ}}, Statistics`RandomNumberGenerationDump`len_, Statistics`RandomNumberGenerationDump`prec_] := Random`PolynomialDistributionVector[Statistics`RandomNumberGenerationDump`poly, First[Statistics`RandomNumberGenerationDump`rspec], Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`prec]\nRandom`PolynomialDistributionVector[Statistics`RandomNumberGenerationDump`poly_, Statistics`RandomNumberGenerationDump`rspec:{{_, _?Internal`RealValuedNumericQ, _?Internal`RealValuedNumericQ}..}, Statistics`RandomNumberGenerationDump`len_, Statistics`RandomNumberGenerationDump`prec_] \/; Length[Statistics`RandomNumberGenerationDump`rspec] > 1 := Module[{Statistics`RandomNumberGenerationDump`pdf, Statistics`RandomNumberGenerationDump`vars, Statistics`RandomNumberGenerationDump`avec, Statistics`RandomNumberGenerationDump`bvec, Statistics`RandomNumberGenerationDump`wvec, Statistics`RandomNumberGenerationDump`coeffar, Statistics`RandomNumberGenerationDump`w, Statistics`RandomNumberGenerationDump`nvec, Statistics`RandomNumberGenerationDump`mdv, Statistics`RandomNumberGenerationDump`prdists, Statistics`RandomNumberGenerationDump`pi, Statistics`RandomNumberGenerationDump`pw, Statistics`RandomNumberGenerationDump`ffun, Statistics`RandomNumberGenerationDump`hfun, Statistics`RandomNumberGenerationDump`totw}, {Statistics`RandomNumberGenerationDump`vars, Statistics`RandomNumberGenerationDump`avec, Statistics`RandomNumberGenerationDump`bvec} = Transpose[Statistics`RandomNumberGenerationDump`rspec]; Statistics`RandomNumberGenerationDump`wvec = Statistics`RandomNumberGenerationDump`bvec - Statistics`RandomNumberGenerationDump`avec; If[Min[Statistics`RandomNumberGenerationDump`wvec] > 0 =!= True, Return[$Failed]]; Statistics`RandomNumberGenerationDump`pdf = Fold[Times, Statistics`RandomNumberGenerationDump`poly \/. Thread[Statistics`RandomNumberGenerationDump`vars -> Statistics`RandomNumberGenerationDump`avec + Statistics`RandomNumberGenerationDump`wvec*Statistics`RandomNumberGenerationDump`vars], Statistics`RandomNumberGenerationDump`wvec]; Statistics`RandomNumberGenerationDump`coeffar = Array[{-1, 1, -1} & , Length[Statistics`RandomNumberGenerationDump`vars], 1, Take[CoefficientList[Statistics`RandomNumberGenerationDump`pdf, Statistics`RandomNumberGenerationDump`vars], ##1] & ]; If[Min[Statistics`RandomNumberGenerationDump`w = Statistics`RandomNumberGenerationDump`PowerToBernsteinList[Statistics`RandomNumberGenerationDump`coeffar]] >= 0, Statistics`RandomNumberGenerationDump`nvec = Dimensions[Statistics`RandomNumberGenerationDump`w]; Statistics`RandomNumberGenerationDump`prdists = Flatten[(Outer[ProductDistribution, ##1] & ) @@ Table[Table[BetaDistribution[Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`n - Statistics`RandomNumberGenerationDump`i + 1], {Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`n}], {Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`nvec}]]; Statistics`RandomNumberGenerationDump`mdv = Random`MixtureDistributionVector[Flatten[Statistics`RandomNumberGenerationDump`w]\/Total[Statistics`RandomNumberGenerationDump`w, Infinity, Method -> \"CompensatedSummation\"], Statistics`RandomNumberGenerationDump`prdists, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`prec]; , Statistics`RandomNumberGenerationDump`nvec = Dimensions[Statistics`RandomNumberGenerationDump`w]; Statistics`RandomNumberGenerationDump`pi = Position[Sign[Statistics`RandomNumberGenerationDump`w], 1, {Length[Statistics`RandomNumberGenerationDump`nvec]}, Heads -> False]; Statistics`RandomNumberGenerationDump`pw = Extract[Statistics`RandomNumberGenerationDump`w, Statistics`RandomNumberGenerationDump`pi]; If[Statistics`RandomNumberGenerationDump`pw =!= {}, Statistics`RandomNumberGenerationDump`totw = Total[Statistics`RandomNumberGenerationDump`w, Infinity]; If[Statistics`RandomNumberGenerationDump`totw > 0, Statistics`RandomNumberGenerationDump`prdists = Table[ProductDistribution @@ MapThread[BetaDistribution, {Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`nvec - Statistics`RandomNumberGenerationDump`i + 1}], {Statistics`RandomNumberGenerationDump`i, Statistics`RandomNumberGenerationDump`pi}]; Statistics`RandomNumberGenerationDump`hfun = Statistics`Library`LocalizeAndEvaluate[Function @@ {Statistics`RandomNumberGenerationDump`vars, (Statistics`RandomNumberGenerationDump`pw\/Total[Statistics`RandomNumberGenerationDump`w, Infinity]) . Table[Refine[PDF[Statistics`RandomNumberGenerationDump`di, Statistics`RandomNumberGenerationDump`vars], And @@ Thread[0 < Statistics`RandomNumberGenerationDump`vars < 1]], {Statistics`RandomNumberGenerationDump`di, Statistics`RandomNumberGenerationDump`prdists}]}, Statistics`RandomNumberGenerationDump`vars]; Statistics`RandomNumberGenerationDump`ffun = Statistics`Library`LocalizeAndEvaluate[Function @@ {Statistics`RandomNumberGenerationDump`vars, Statistics`RandomNumberGenerationDump`pdf}, Statistics`RandomNumberGenerationDump`vars]; Statistics`RandomNumberGenerationDump`mdv = Random`RandomRealRejection[Statistics`RandomNumberGenerationDump`ffun, {Statistics`RandomNumberGenerationDump`hfun, Function[{Statistics`RandomNumberGenerationDump`ln, Statistics`RandomNumberGenerationDump`wpr}, Random`MixtureDistributionVector[Statistics`RandomNumberGenerationDump`pw, Statistics`RandomNumberGenerationDump`prdists, Statistics`RandomNumberGenerationDump`ln, Statistics`RandomNumberGenerationDump`wpr]]}, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`prec], Statistics`RandomNumberGenerationDump`mdv = $Failed, Statistics`RandomNumberGenerationDump`mdv = $Failed], Statistics`RandomNumberGenerationDump`mdv = $Failed], Statistics`RandomNumberGenerationDump`mdv = $Failed]; Statistics`Library`MatrixRowAffineTransform[Statistics`RandomNumberGenerationDump`mdv, Statistics`RandomNumberGenerationDump`wvec, Statistics`RandomNumberGenerationDump`avec]; Statistics`RandomNumberGenerationDump`mdv]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`PolynomialDistributionVector",
	"Developer`PolynomialDivision":"ObjectType: Symbol\nUsage: Developer`PolynomialDivision\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`PolynomialDivision",
	"Algebra`PolynomialDivisionModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialDivisionModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialDivisionModList",
	"Control`PCS`PolynomialDoublyCoprimeFactorization":"ObjectType: Symbol\nUsage: Control`PCS`PolynomialDoublyCoprimeFactorization\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PCSAnalysisDump`in:Control`PCS`PolynomialDoublyCoprimeFactorization[Control`PCSAnalysisDump`args___] := With[{Control`PCSAnalysisDump`result = Catch[Control`PCSAnalysisDump`polynomialdoublycoprimefactorization[Control`PCSAnalysisDump`args]]}, Control`PCSAnalysisDump`result \/; Control`PCSAnalysisDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialDoublyCoprimeFactorization, Control`Utilities`NonOptionArgCount[{Control`PCSAnalysisDump`args}], 1, 1] && Control`Utilities`validOptionsQ[Control`PCSAnalysisDump`in, Control`PCS`PolynomialDoublyCoprimeFactorization, Control`PCSAnalysisDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`PCS`PolynomialDoublyCoprimeFactorization",
	"NumericalMath`PolynomialEvaluate":"ObjectType: Symbol\nUsage: NumericalMath`PolynomialEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NumericalMath`PolynomialEvaluate",
	"Algebra`PolynomialExtendedGCDModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialExtendedGCDModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialExtendedGCDModList",
	"Control`PCS`PolynomialExtendedGCLD":"ObjectType: Symbol\nUsage: Control`PCS`PolynomialExtendedGCLD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PCSAnalysisDump`in:Control`PCS`PolynomialExtendedGCLD[Control`PCSAnalysisDump`args___] := With[{Control`PCSAnalysisDump`result = Catch[Control`PCSAnalysisDump`polynomialextendedgcld[Control`PCSAnalysisDump`args]]}, Control`PCSAnalysisDump`result \/; Control`PCSAnalysisDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialExtendedGCLD, Control`Utilities`NonOptionArgCount[{Control`PCSAnalysisDump`args}], 2, 2] && Control`Utilities`validOptionsQ[Control`PCSAnalysisDump`in, Control`PCS`PolynomialExtendedGCLD, Control`PCSAnalysisDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: Control`PCS`PolynomialExtendedGCLD",
	"Control`PCS`PolynomialExtendedGCRD":"ObjectType: Symbol\nUsage: Control`PCS`PolynomialExtendedGCRD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PCSAnalysisDump`in:Control`PCS`PolynomialExtendedGCRD[Control`PCSAnalysisDump`args___] := With[{Control`PCSAnalysisDump`result = Catch[Control`PCSAnalysisDump`polynomialextendedgcrd[Control`PCSAnalysisDump`args]]}, Control`PCSAnalysisDump`result \/; Control`PCSAnalysisDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialExtendedGCRD, Control`Utilities`NonOptionArgCount[{Control`PCSAnalysisDump`args}], 2, 2] && Control`Utilities`validOptionsQ[Control`PCSAnalysisDump`in, Control`PCS`PolynomialExtendedGCRD, Control`PCSAnalysisDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: Control`PCS`PolynomialExtendedGCRD",
	"Algebra`PolynomialFactorModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialFactorModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialFactorModList",
	"Internal`PolynomialFunctionQ":"ObjectType: Symbol\nUsage: Internal`PolynomialFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PolynomialFunctionQ",
	"Algebra`PolynomialGCDModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialGCDModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialGCDModList",
	"Control`PCS`PolynomialHermiteDecomposition":"ObjectType: Symbol\nUsage: PolynomialHermiteDecomposition[m, x] yields the Hermite decomposition for a matrix of polynomials in x. The result is a list {u, r} where u is a unimodular matrix, r is an upper-triangular matrix (the Hermite normal form of m), and u.m == r.\nDocumentation: None\nOwnValues: None\nUpValues: Control`Utilities`undocumentedOptions[Control`PCS`PolynomialHermiteDecomposition] ^= {VerifySolutions -> True, \"TrimPrecision\" -> Automatic}\nDownValues: Control`PolynomialSmithDump`in:Control`PCS`PolynomialHermiteDecomposition[Control`PolynomialSmithDump`args___] := Module[{Control`PolynomialSmithDump`result = Catch[Control`PolynomialSmithDump`hermitedecomposition[Control`PolynomialSmithDump`args]]}, Control`PolynomialSmithDump`result \/; Control`PolynomialSmithDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialHermiteDecomposition, Control`Utilities`NonOptionArgCount[{Control`PolynomialSmithDump`args}], 1, 2] && Control`Utilities`validOptionsQ[Control`PolynomialSmithDump`in, Control`PCS`PolynomialHermiteDecomposition, Control`PolynomialSmithDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: Control`PCS`PolynomialHermiteDecomposition",
	"System`Private`PolynomialIrreducibilityTest":"ObjectType: Symbol\nUsage: System`Private`PolynomialIrreducibilityTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`PolynomialIrreducibilityTest[System`IrreduciblePolyDump`f_, System`IrreduciblePolyDump`ext_, System`IrreduciblePolyDump`gauss_, System`IrreduciblePolyDump`mod_] := Module[{System`IrreduciblePolyDump`X, System`IrreduciblePolyDump`vars, System`IrreduciblePolyDump`dtl, System`IrreduciblePolyDump`supp, System`IrreduciblePolyDump`n, System`IrreduciblePolyDump`g, System`IrreduciblePolyDump`fl, System`IrreduciblePolyDump`res}, If[NumericQ[System`IrreduciblePolyDump`f], Return[False]]; System`IrreduciblePolyDump`vars = Variables[System`IrreduciblePolyDump`f]; If[ !ListQ[System`IrreduciblePolyDump`vars] || (System`IrreduciblePolyDump`n = Length[System`IrreduciblePolyDump`vars]) < 1, Message[IrreduciblePolynomialQ::poly, System`IrreduciblePolyDump`f]; Return[$Failed]]; If[Head[System`IrreduciblePolyDump`f] === Power && Length[System`IrreduciblePolyDump`f] == 2, System`IrreduciblePolyDump`dtl = If[ !IntegerQ[System`IrreduciblePolyDump`f[[2]]] || System`IrreduciblePolyDump`f[[2]] < 0, $Failed, System`IrreduciblePolyDump`dtlist[System`IrreduciblePolyDump`f[[1]], System`IrreduciblePolyDump`vars, System`IrreduciblePolyDump`mod]]; If[ !System`IrreduciblePolyDump`checkdtl[System`IrreduciblePolyDump`dtl, System`IrreduciblePolyDump`f, System`IrreduciblePolyDump`mod, System`IrreduciblePolyDump`gauss], Return[$Failed]]; Return[False]]; If[Head[System`IrreduciblePolyDump`f] === Times, System`IrreduciblePolyDump`dtl = (System`IrreduciblePolyDump`dtlist[#1, System`IrreduciblePolyDump`vars, System`IrreduciblePolyDump`mod] & ) \/@ List @@ System`IrreduciblePolyDump`f; If[ !System`IrreduciblePolyDump`checkdtl[System`IrreduciblePolyDump`dtl, System`IrreduciblePolyDump`f, System`IrreduciblePolyDump`mod, System`IrreduciblePolyDump`gauss], Return[$Failed]]; System`IrreduciblePolyDump`dtl = Select[System`IrreduciblePolyDump`dtl, Length[#1] =!= 1 || Union[#1[[1,1]]] =!= {0} & ]; If[Length[System`IrreduciblePolyDump`dtl] != 1, Return[False]]; System`IrreduciblePolyDump`dtl = First[System`IrreduciblePolyDump`dtl], System`IrreduciblePolyDump`dtl = System`IrreduciblePolyDump`dtlist[System`IrreduciblePolyDump`f, System`IrreduciblePolyDump`vars, System`IrreduciblePolyDump`mod]; If[ !System`IrreduciblePolyDump`checkdtl[System`IrreduciblePolyDump`dtl, System`IrreduciblePolyDump`f, System`IrreduciblePolyDump`mod, System`IrreduciblePolyDump`gauss], Return[$Failed]]]; If[System`IrreduciblePolyDump`dtl === {}, Return[False]]; System`IrreduciblePolyDump`supp = First \/@ System`IrreduciblePolyDump`dtl; If[Length[System`IrreduciblePolyDump`supp] == 1, Return[Select[System`IrreduciblePolyDump`supp[[1]], #1 != 0 & ] === {1}]]; If[Max[Min \/@ Transpose[System`IrreduciblePolyDump`supp]] > 0, Return[False]]; If[Max[Apply[Plus, System`IrreduciblePolyDump`supp, {1}]] == 1, Return[True]]; If[System`IrreduciblePolyDump`n == 1, If[System`IrreduciblePolyDump`ext === All, Return[False]]; System`IrreduciblePolyDump`g = GroebnerBasis`FromDistributedTermsList[{System`IrreduciblePolyDump`dtl, {System`IrreduciblePolyDump`X}}]; System`IrreduciblePolyDump`fl = Quiet[FactorList[System`IrreduciblePolyDump`g, Extension -> System`IrreduciblePolyDump`ext, GaussianIntegers -> System`IrreduciblePolyDump`gauss, Modulus -> System`IrreduciblePolyDump`mod]]; If[ !ListQ[System`IrreduciblePolyDump`fl], If[System`IrreduciblePolyDump`mod == 0, Message[IrreduciblePolynomialQ::undec, System`IrreduciblePolyDump`f], Message[IrreduciblePolynomialQ::mundec, System`IrreduciblePolyDump`f, System`IrreduciblePolyDump`mod]]; Return[$Failed]]; System`IrreduciblePolyDump`fl = Select[System`IrreduciblePolyDump`fl,  !NumericQ[First[#1]] & ]; If[System`IrreduciblePolyDump`ext === All, If[Length[System`IrreduciblePolyDump`fl] != 1 || System`IrreduciblePolyDump`fl[[1,2]] != 1, Return[False]]; Message[IrreduciblePolynomialQ::aundec, System`IrreduciblePolyDump`f]; Return[$Failed]]; Return[Length[System`IrreduciblePolyDump`fl] == 1 && System`IrreduciblePolyDump`fl[[1,2]] == 1]]; System`IrreduciblePolyDump`DPrint[\"support is \", System`IrreduciblePolyDump`supp]; If[System`IrreduciblePolyDump`UseAbsIrrTestQ[System`IrreduciblePolyDump`n, Max[System`IrreduciblePolyDump`supp], Length[System`IrreduciblePolyDump`supp]] && System`IrreduciblePolyDump`IndecomposableSupportQ[System`IrreduciblePolyDump`supp, System`IrreduciblePolyDump`SmallProjectionBound, False], Return[True]]; System`IrreduciblePolyDump`g = GroebnerBasis`FromDistributedTermsList[{System`IrreduciblePolyDump`dtl, Table[Unique[System`IrreduciblePolyDump`X], {Length[System`IrreduciblePolyDump`vars]}]}]; System`IrreduciblePolyDump`fl = Quiet[FactorSquareFreeList[System`IrreduciblePolyDump`g, Extension -> If[System`IrreduciblePolyDump`ext === All, If[System`IrreduciblePolyDump`mod == 0, Automatic, None], System`IrreduciblePolyDump`ext], Modulus -> System`IrreduciblePolyDump`mod]]; If[ListQ[System`IrreduciblePolyDump`fl], System`IrreduciblePolyDump`fl = Select[System`IrreduciblePolyDump`fl,  !NumericQ[First[#1]] & ]; If[Length[System`IrreduciblePolyDump`fl] != 1 || System`IrreduciblePolyDump`fl[[1,2]] != 1, Return[False]]]; If[System`IrreduciblePolyDump`ext === All || System`IrreduciblePolyDump`mod != 0, If[System`IrreduciblePolyDump`IndecomposableSupportQ[System`IrreduciblePolyDump`supp, System`IrreduciblePolyDump`LargeProjectionBound, False], Return[True]]; System`IrreduciblePolyDump`fl = Quiet[FactorList[System`IrreduciblePolyDump`g, Extension -> If[System`IrreduciblePolyDump`mod == 0, Automatic, None], GaussianIntegers -> If[System`IrreduciblePolyDump`mod == 0, System`IrreduciblePolyDump`gauss, False], Modulus -> 0]]; If[ListQ[System`IrreduciblePolyDump`fl], If[System`IrreduciblePolyDump`mod != 0, System`IrreduciblePolyDump`fl = ({PolynomialMod[#1[[1]], System`IrreduciblePolyDump`mod], #1[[2]]} & ) \/@ System`IrreduciblePolyDump`fl; If[MemberQ[First \/@ System`IrreduciblePolyDump`fl, 0], Return[False]]]; System`IrreduciblePolyDump`fl = Select[System`IrreduciblePolyDump`fl,  !NumericQ[First[#1]] & ]; If[Length[System`IrreduciblePolyDump`fl] != 1 || System`IrreduciblePolyDump`fl[[1,2]] != 1, Return[False]]]; If[System`IrreduciblePolyDump`mod == 0, If[System`IrreduciblePolyDump`IndecomposableSupportQ[System`IrreduciblePolyDump`supp, System`IrreduciblePolyDump`SmallProjectionBound, True], Return[True]]; System`IrreduciblePolyDump`res = System`IrreduciblePolyDump`irreducibleQByApproxFactoring[System`IrreduciblePolyDump`g, Variables[System`IrreduciblePolyDump`g]]; System`IrreduciblePolyDump`DPrint[\"res \", System`IrreduciblePolyDump`res]; If[System`IrreduciblePolyDump`res =!= $Failed, Return[System`IrreduciblePolyDump`res]]; Message[IrreduciblePolynomialQ::aundec, System`IrreduciblePolyDump`f], Message[IrreduciblePolynomialQ::mundec, System`IrreduciblePolyDump`f, System`IrreduciblePolyDump`mod]]; Return[$Failed]]; System`IrreduciblePolyDump`fl = Quiet[FactorList[System`IrreduciblePolyDump`g, Extension -> System`IrreduciblePolyDump`ext, GaussianIntegers -> System`IrreduciblePolyDump`gauss, Modulus -> 0]]; If[ !ListQ[System`IrreduciblePolyDump`fl], Message[IrreduciblePolynomialQ::undec, System`IrreduciblePolyDump`f]; Return[$Failed]]; System`IrreduciblePolyDump`fl = Select[System`IrreduciblePolyDump`fl,  !NumericQ[First[#1]] & ]; Length[System`IrreduciblePolyDump`fl] == 1 && System`IrreduciblePolyDump`fl[[1,2]] == 1]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PolynomialIrreducibilityTest",
	"Control`PCS`PolynomialLeftDiophantineSolve":"ObjectType: Symbol\nUsage: Control`PCS`PolynomialLeftDiophantineSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PCSAnalysisDump`in:Control`PCS`PolynomialLeftDiophantineSolve[Control`PCSAnalysisDump`args___] := With[{Control`PCSAnalysisDump`result = Catch[Control`PCSAnalysisDump`polynomialleftdiophantinesolve[Control`PCSAnalysisDump`args]]}, Control`PCSAnalysisDump`result \/; Control`PCSAnalysisDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialLeftDiophantineSolve, Control`Utilities`NonOptionArgCount[{Control`PCSAnalysisDump`args}], 2, 2] && Control`Utilities`validOptionsQ[Control`PCSAnalysisDump`in, Control`PCS`PolynomialLeftDiophantineSolve, Control`PCSAnalysisDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: Control`PCS`PolynomialLeftDiophantineSolve",
	"Control`PolynomialLeftFractionModel":"ObjectType: Symbol\nUsage: Control`PolynomialLeftFractionModel\nDocumentation: None\nOwnValues: None\nUpValues: Normal[HoldPattern[Control`PolynomialLeftFractionModel][{(Control`CommonDump`d_)?SquareMatrixQ, (Control`CommonDump`n_)?MatrixQ}, (Control`CommonDump`var_)?Control`Utilities`pVariableQ, (Control`CommonDump`opts___)?OptionQ]] ^:= {Control`CommonDump`d, Control`CommonDump`n}\nHoldPattern[Shallow][Control`CommonDump`sys$_Control`PolynomialLeftFractionModel, Control`CommonDump`rest$___] ^:= Shallow[\"PolynomialLeftFractionModel\" @@ Control`CommonDump`sys$, Control`CommonDump`rest$]\nDownValues: Control`CommonDump`in:HoldPattern[Control`PolynomialLeftFractionModel[Control`CommonDump`f_, Control`CommonDump`rest___]] := With[{Control`CommonDump`result = Catch[Control`PCS`leftmatrixfraction[Control`CommonDump`f, Control`CommonDump`rest]]}, Control`CommonDump`result \/; Control`CommonDump`result =!= $Failed] \/; ArgumentCountQ[Control`PolynomialLeftFractionModel, Control`Utilities`NonOptionArgCount[{Control`CommonDump`f, Control`CommonDump`rest}], 1, 2] && Control`Utilities`validOptionsQ[Control`CommonDump`in, Control`PolynomialLeftFractionModel, Control`CommonDump`rest] && ( !MatchQ[Control`CommonDump`f, {_?SquareMatrixQ, _?MatrixQ}] || Length[{Control`CommonDump`rest}] == 0 ||  !Control`Utilities`pVariableQ[First[{Control`CommonDump`rest}]] ||  !OptionQ[Rest[{Control`CommonDump`rest}]])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: Control`PolynomialLeftFractionModel \/: MakeBoxes[Control`CommonDump`system:(System`Dump`CommonPatterns`in$21908:HoldPattern[Control`PolynomialLeftFractionModel][{_?SquareMatrixQ, _?MatrixQ}, _?Control`Utilities`pVariableQ, (System`Dump`CommonPatterns`opts$21909___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$21908, Control`PolynomialLeftFractionModel, System`Dump`CommonPatterns`opts$21909]]), Control`CommonDump`form:StandardForm | TraditionalForm] := With[{Control`CommonDump`result = Control`CommonDump`makeboxescontrolobject[Control`CommonDump`system, Control`CommonDump`form]}, Control`CommonDump`result \/; Control`CommonDump`result =!= $Failed] \/; Control`$TypesetStandardFormObjects || Control`CommonDump`form === TraditionalForm\nOptions: {Appearance -> Automatic, SystemsModelLabels -> Automatic, SamplingPeriod -> Automatic, ExternalTypeSignature -> Automatic}\nAttributes: {}\nFullName: Control`PolynomialLeftFractionModel",
	"Algebra`PolynomialMakeMonicModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialMakeMonicModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialMakeMonicModList",
	"Algebra`PolynomialMinusModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialMinusModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialMinusModList",
	"Algebra`PolynomialPlusModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialPlusModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialPlusModList",
	"Algebra`PolynomialPowerMod`PolynomialPowerMod":"ObjectType: Symbol\nUsage: Algebra`PolynomialPowerMod`PolynomialPowerMod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Algebra`PolynomialPowerMod`PolynomialPowerMod[System`PolynomialPowerModDump`f_, System`PolynomialPowerModDump`n_, System`PolynomialPowerModDump`x_, System`PolynomialPowerModDump`mod_] := With[{System`PolynomialPowerModDump`ans = System`PolynomialPowerModDump`PPowerMod[System`PolynomialPowerModDump`f, System`PolynomialPowerModDump`n, System`PolynomialPowerModDump`x, System`PolynomialPowerModDump`mod]}, System`PolynomialPowerModDump`ans \/; System`PolynomialPowerModDump`ans =!= $Failed]\nAlgebra`PolynomialPowerMod`PolynomialPowerMod[System`PolynomialPowerModDump`f_, System`PolynomialPowerModDump`n_, System`PolynomialPowerModDump`mod_] := With[{System`PolynomialPowerModDump`ans = System`PolynomialPowerModDump`PPowerMod[System`PolynomialPowerModDump`f, System`PolynomialPowerModDump`n, System`PolynomialPowerModDump`mod]}, System`PolynomialPowerModDump`ans \/; System`PolynomialPowerModDump`ans =!= $Failed]\nAlgebra`PolynomialPowerMod`PolynomialPowerMod[] \/; (Message[Algebra`PolynomialPowerMod`PolynomialPowerMod::argt, Algebra`PolynomialPowerMod`PolynomialPowerMod, 0, 3, 4]; False) := Null\nAlgebra`PolynomialPowerMod`PolynomialPowerMod[_] \/; (Message[Algebra`PolynomialPowerMod`PolynomialPowerMod::argtu, Algebra`PolynomialPowerMod`PolynomialPowerMod, 3, 4]; False) := Null\nAlgebra`PolynomialPowerMod`PolynomialPowerMod[_, _] \/; (Message[Algebra`PolynomialPowerMod`PolynomialPowerMod::argt, Algebra`PolynomialPowerMod`PolynomialPowerMod, 2, 3, 4]; False) := Null\nAlgebra`PolynomialPowerMod`PolynomialPowerMod[_, _, _, _, System`PolynomialPowerModDump`a__] \/; (Message[Algebra`PolynomialPowerMod`PolynomialPowerMod::argt, Algebra`PolynomialPowerMod`PolynomialPowerMod, Length[{System`PolynomialPowerModDump`a}] + 4, 3, 4]; False) := Null\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialPowerMod`PolynomialPowerMod",
	"Algebra`PolynomialPowerModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialPowerModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialPowerModList",
	"Algebra`PolynomialPthRootModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialPthRootModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialPthRootModList",
	"Algebra`PolynomialQuotientModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialQuotientModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialQuotientModList",
	"Algebra`PolynomialRemainderModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialRemainderModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialRemainderModList",
	"Control`PCS`PolynomialRightDiophantineSolve":"ObjectType: Symbol\nUsage: Control`PCS`PolynomialRightDiophantineSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PCSAnalysisDump`in:Control`PCS`PolynomialRightDiophantineSolve[Control`PCSAnalysisDump`args___] := With[{Control`PCSAnalysisDump`result = Catch[Control`PCSAnalysisDump`polynomialrightdiophantinesolve[Control`PCSAnalysisDump`args]]}, Control`PCSAnalysisDump`result \/; Control`PCSAnalysisDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialRightDiophantineSolve, Control`Utilities`NonOptionArgCount[{Control`PCSAnalysisDump`args}], 2, 2] && Control`Utilities`validOptionsQ[Control`PCSAnalysisDump`in, Control`PCS`PolynomialRightDiophantineSolve, Control`PCSAnalysisDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: Control`PCS`PolynomialRightDiophantineSolve",
	"Control`PolynomialRightFractionModel":"ObjectType: Symbol\nUsage: Control`PolynomialRightFractionModel\nDocumentation: None\nOwnValues: None\nUpValues: Normal[HoldPattern[Control`PolynomialRightFractionModel][{(Control`CommonDump`n_)?MatrixQ, (Control`CommonDump`d_)?SquareMatrixQ}, (Control`CommonDump`var_)?Control`Utilities`pVariableQ, (Control`CommonDump`opts___)?OptionQ]] ^:= {Control`CommonDump`n, Control`CommonDump`d}\nHoldPattern[Shallow][Control`CommonDump`sys$_Control`PolynomialRightFractionModel, Control`CommonDump`rest$___] ^:= Shallow[\"PolynomialRightFractionModel\" @@ Control`CommonDump`sys$, Control`CommonDump`rest$]\nDownValues: Control`CommonDump`in:HoldPattern[Control`PolynomialRightFractionModel[Control`CommonDump`f_, Control`CommonDump`rest___]] := With[{Control`CommonDump`result = Catch[Control`PCS`rightmatrixfraction[Control`CommonDump`f, Control`CommonDump`rest]]}, Control`CommonDump`result \/; Control`CommonDump`result =!= $Failed] \/; ArgumentCountQ[Control`PolynomialRightFractionModel, Control`Utilities`NonOptionArgCount[{Control`CommonDump`f, Control`CommonDump`rest}], 1, 2] && Control`Utilities`validOptionsQ[Control`CommonDump`in, Control`PolynomialRightFractionModel, Control`CommonDump`rest] && ( !MatchQ[Control`CommonDump`f, {_?MatrixQ, _?SquareMatrixQ}] || Length[{Control`CommonDump`rest}] == 0 ||  !Control`Utilities`pVariableQ[First[{Control`CommonDump`rest}]] ||  !OptionQ[Rest[{Control`CommonDump`rest}]])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: Control`PolynomialRightFractionModel \/: MakeBoxes[Control`CommonDump`system:(System`Dump`CommonPatterns`in$21910:HoldPattern[Control`PolynomialRightFractionModel][{_?MatrixQ, _?SquareMatrixQ}, _?Control`Utilities`pVariableQ, (System`Dump`CommonPatterns`opts$21911___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$21910, Control`PolynomialRightFractionModel, System`Dump`CommonPatterns`opts$21911]]), Control`CommonDump`form:StandardForm | TraditionalForm] := With[{Control`CommonDump`result = Control`CommonDump`makeboxescontrolobject[Control`CommonDump`system, Control`CommonDump`form]}, Control`CommonDump`result \/; Control`CommonDump`result =!= $Failed] \/; Control`$TypesetStandardFormObjects || Control`CommonDump`form === TraditionalForm\nOptions: {Appearance -> Automatic, SystemsModelLabels -> Automatic, SamplingPeriod -> Automatic, ExternalTypeSignature -> Automatic}\nAttributes: {}\nFullName: Control`PolynomialRightFractionModel",
	"Control`PCS`PolynomialSmithDecomposition":"ObjectType: Symbol\nUsage: PolynomialSmithDecomposition[m, x] yields the Smith decomposition for a matrix of polynomials in x. The result is a list {u, s, v} where u and v are unimodular matrices, s is a diagonal matrix (the Smith normal form of m), and u.m.v == s.\nDocumentation: None\nOwnValues: None\nUpValues: Control`Utilities`undocumentedOptions[Control`PCS`PolynomialSmithDecomposition] ^= {WorkingPrecision -> 0, Factor -> False, VerifySolutions -> True, \"TrimPrecision\" -> Automatic}\nDownValues: Control`PolynomialSmithDump`in:Control`PCS`PolynomialSmithDecomposition[Control`PolynomialSmithDump`args___] := Module[{Control`PolynomialSmithDump`result = Catch[Control`PolynomialSmithDump`smithdecomposition[Control`PolynomialSmithDump`args]]}, Control`PolynomialSmithDump`result \/; Control`PolynomialSmithDump`result =!= $Failed] \/; ArgumentCountQ[Control`PCS`PolynomialSmithDecomposition, Control`Utilities`NonOptionArgCount[{Control`PolynomialSmithDump`args}], 1, 2] && Control`Utilities`validOptionsQ[Control`PolynomialSmithDump`in, Control`PCS`PolynomialSmithDecomposition, Control`PolynomialSmithDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: Control`PCS`PolynomialSmithDecomposition",
	"Algebra`PolynomialSubtractModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialSubtractModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialSubtractModList",
	"Reduce`PolynomialSumOfSquares":"ObjectType: Symbol\nUsage: Reduce`PolynomialSumOfSquares\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PolynomialSumOfSquares[System`SumOfSquaresDump`f_, System`SumOfSquaresDump`vars_] := With[{System`SumOfSquaresDump`ans = Quiet[System`SumOfSquaresDump`sosrep[System`SumOfSquaresDump`f, System`SumOfSquaresDump`vars, True]]}, System`SumOfSquaresDump`ans \/; ListQ[System`SumOfSquaresDump`ans]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PolynomialSumOfSquares",
	"Reduce`PolynomialSumOfSquaresQ":"ObjectType: Symbol\nUsage: Reduce`PolynomialSumOfSquaresQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PolynomialSumOfSquaresQ[System`SumOfSquaresDump`f_, System`SumOfSquaresDump`vars_, System`SumOfSquaresDump`opts___] := ListQ[Quiet[System`SumOfSquaresDump`sosrep[System`SumOfSquaresDump`f, System`SumOfSquaresDump`vars, False]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PolynomialSumOfSquaresQ",
	"Algebra`PolynomialTimesModList":"ObjectType: Symbol\nUsage: Algebra`PolynomialTimesModList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`PolynomialTimesModList",
	"Control`PCS`PolySmithDecomposition":"ObjectType: Symbol\nUsage: Control`PCS`PolySmithDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PCS`PolySmithDecomposition[Control`PCSAnalysisDump`A_, Control`PCSAnalysisDump`var_] := Block[{Control`PCSAnalysisDump`x, Control`PCSAnalysisDump`nA = Expand[Control`PCSAnalysisDump`A, Control`PCSAnalysisDump`var], Control`Utilities`rows, Control`PCSAnalysisDump`cols, Control`PCSAnalysisDump`MinEntry = 0, Control`PCSAnalysisDump`Loc, Control`PCSAnalysisDump`ZeroMatrixQ, Control`PCSAnalysisDump`NonZeroRowQ = True, Control`PCSAnalysisDump`NonZeroColQ = True}, Control`PCSAnalysisDump`nA = Control`PCSAnalysisDump`nA \/. Control`PCSAnalysisDump`var -> Control`PCSAnalysisDump`x; {Control`Utilities`rows, Control`PCSAnalysisDump`cols} = Dimensions[Control`PCSAnalysisDump`A]; Control`PCSAnalysisDump`nP = IdentityMatrix[Control`Utilities`rows]; Control`PCSAnalysisDump`nQ = IdentityMatrix[Control`PCSAnalysisDump`cols]; Do[Control`PCSAnalysisDump`Loc = {Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`m}; Control`PCSAnalysisDump`ZeroMatrixQ = True; Do[Which[Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`i,Control`PCSAnalysisDump`j]] =!= 0 && Control`PCSAnalysisDump`ZeroMatrixQ, Control`PCSAnalysisDump`MinEntry = Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`i,Control`PCSAnalysisDump`j]]; Control`PCSAnalysisDump`Loc = {Control`PCSAnalysisDump`i, Control`PCSAnalysisDump`j}; Control`PCSAnalysisDump`ZeroMatrixQ = False, Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`i,Control`PCSAnalysisDump`j]] =!= 0 && Exponent[Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`i,Control`PCSAnalysisDump`j]], Control`PCSAnalysisDump`x] < Exponent[Control`PCSAnalysisDump`MinEntry, Control`PCSAnalysisDump`x], Control`PCSAnalysisDump`MinEntry = Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`i,Control`PCSAnalysisDump`j]]; Control`PCSAnalysisDump`Loc = {Control`PCSAnalysisDump`i, Control`PCSAnalysisDump`j}, True, Continue[]], {Control`PCSAnalysisDump`i, Control`PCSAnalysisDump`m, Control`Utilities`rows}, {Control`PCSAnalysisDump`j, Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`cols}]; If[Control`PCSAnalysisDump`ZeroMatrixQ, Break[]]; If[Control`PCSAnalysisDump`Loc[[1]] != Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`nA = Control`PCSAnalysisDump`R3[Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`Loc[[1]], Control`PCSAnalysisDump`nA]; Control`PCSAnalysisDump`nP = Control`PCSAnalysisDump`R3[Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`Loc[[1]], Control`PCSAnalysisDump`nP]]; If[Control`PCSAnalysisDump`Loc[[2]] != Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`nA = Control`PCSAnalysisDump`C3[Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`Loc[[2]], Control`PCSAnalysisDump`nA]; Control`PCSAnalysisDump`nQ = Control`PCSAnalysisDump`C3[Control`PCSAnalysisDump`m, Control`PCSAnalysisDump`Loc[[2]], Control`PCSAnalysisDump`nQ]]; Control`PCSAnalysisDump`leadcoeff = Control`Utilities`leadingCoefficient[Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`m,Control`PCSAnalysisDump`m]], Control`PCSAnalysisDump`x]; If[Control`PCSAnalysisDump`leadcoeff != 1, Control`PCSAnalysisDump`nP = Expand[Control`PCSAnalysisDump`R1[Control`PCSAnalysisDump`m, 1\/Control`PCSAnalysisDump`leadcoeff, Control`PCSAnalysisDump`nP], Control`PCSAnalysisDump`x]; Control`PCSAnalysisDump`nA = Expand[Control`PCSAnalysisDump`R1[Control`PCSAnalysisDump`m, 1\/Control`PCSAnalysisDump`leadcoeff, Control`PCSAnalysisDump`nA], Control`PCSAnalysisDump`x]]; If[Control`PCSAnalysisDump`m < Min[Control`Utilities`rows, Control`PCSAnalysisDump`cols], While[Do[If[Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`i,Control`PCSAnalysisDump`m]] =!= 0, Control`PCSAnalysisDump`NonZeroRowQ = True; Break[], Continue[]], {Control`PCSAnalysisDump`i, Control`PCSAnalysisDump`m + 1, Control`Utilities`rows}]; If[ !Control`PCSAnalysisDump`NonZeroRowQ, Do[If[Control`PCSAnalysisDump`nA[[Control`PCSAnalysisDump`m,Control`PCSAnalysisDump`j]] =!= 0, Control`PCSAnalysisDump`NonZeroColQ = True; Break[], Continue[]], {Control`PCSAnalysisDump`j, Control`PCSAnalysisDump`m + 1, Control`PCSAnalysisDump`cols}]]; Control`PCSAnalysisDump`NonZeroRowQ || Control`PCSAnalysisDump`NonZeroColQ, If[Control`PCSAnalysisDump`NonZeroRowQ, {Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ} = Control`PCSAnalysisDump`ExtendedPolynomialEliminateRow[Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ, Control`PCSAnalysisDump`x]]; {Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ} = Control`PCSAnalysisDump`ExtendedPolynomialEliminateCol[Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ, Control`PCSAnalysisDump`x]; Control`PCSAnalysisDump`NonZeroRowQ = False; Control`PCSAnalysisDump`NonZeroColQ = False]; {Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ} = Control`PCSAnalysisDump`ExtendedPolynomialThirdStep[Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ, Control`PCSAnalysisDump`x]; , Which[Control`Utilities`rows < Control`PCSAnalysisDump`cols, {Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ} = Control`PCSAnalysisDump`ExtendedPolynomialEliminateCol[Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ, Control`PCSAnalysisDump`x], Control`Utilities`rows > Control`PCSAnalysisDump`cols, {Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ} = Control`PCSAnalysisDump`ExtendedPolynomialEliminateRow[Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ, Control`PCSAnalysisDump`x], Control`Utilities`rows == Control`PCSAnalysisDump`cols, Break[]]], {Control`PCSAnalysisDump`m, 1, Min[Control`Utilities`rows, Control`PCSAnalysisDump`cols]}]; {Control`PCSAnalysisDump`nP, Control`PCSAnalysisDump`nA, Control`PCSAnalysisDump`nQ} \/. Control`PCSAnalysisDump`x -> Control`PCSAnalysisDump`var]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`PCS`PolySmithDecomposition",
	"Statistics`Library`PooledKSampleRanks":"ObjectType: Symbol\nUsage: Statistics`Library`PooledKSampleRanks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`PooledKSampleRanks[Statistics`HypothesisTestingUtilitiesDump`data__] := Internal`PartitionRagged[Statistics`Library`GetDataRankings[Join[Statistics`HypothesisTestingUtilitiesDump`data]], Length \/@ {Statistics`HypothesisTestingUtilitiesDump`data}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`PooledKSampleRanks",
	"Control`PopovPlot":"ObjectType: Symbol\nUsage: Control`PopovPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: (Control`NyquistNicholsDump`fn:Control`PopovPlot)[Control`NyquistNicholsDump`args___] := With[{Control`NyquistNicholsDump`res = Control`NyquistNicholsDump`nyquistPlot[Control`NyquistNicholsDump`fn, Sequence @@ Control`PlotUtilities`preprocessingFn[Control`NyquistNicholsDump`fn, Control`NyquistNicholsDump`args]]}, Control`NyquistNicholsDump`res \/; Control`NyquistNicholsDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> True, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, EvaluationMonitor -> None, Exclusions -> True, ExclusionsStyle -> Automatic, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, MaxRecursion -> Automatic, Mesh -> Automatic, MeshFunctions -> {#3 & }, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotLegends -> None, PlotPoints -> Automatic, PlotRange -> Automatic, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> Automatic, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Control`PopovPlot",
	"ResourceFunctionHelpers`PopulationStandardDeviation":"ObjectType: Symbol\nUsage: Population standard variance of a set of data.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PopulationStandardDeviation[ResourceFunctionHelpers`PopulationStandardDeviation`Private`a_List] := Sqrt[ResourceFunctionHelpers`PopulationVariance[ResourceFunctionHelpers`PopulationStandardDeviation`Private`a]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`PopulationStandardDeviation",
	"ResourceFunctionHelpers`PopulationVariance":"ObjectType: Symbol\nUsage: Population standard variance of a set of data.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PopulationVariance[ResourceFunctionHelpers`PopulationStandardDeviation`Private`a_List] := Mean[(ResourceFunctionHelpers`PopulationStandardDeviation`Private`a - Mean[ResourceFunctionHelpers`PopulationStandardDeviation`Private`a])^2]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`PopulationVariance",
	"Internal`PopupWindowNotebook":"ObjectType: Symbol\nUsage: Internal`PopupWindowNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PopupWindowNotebook[System`FEDump`data_, System`FEDump`opts___] := DocumentNotebook[{System`FEDump`$popupWindowPadding, TextCell[System`FEDump`data, NotebookDefault, \"DialogStyle\", Sequence @@ System`FEDump`$popupWindowCellOptions], System`FEDump`$popupWindowPadding}, System`FEDump`opts, Sequence @@ System`FEDump`$popupWindowNotebookOptions]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PopupWindowNotebook",
	"System`VectorPlotsDump`PosIntegerQ":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PosIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`VectorPlotsDump`PosIntegerQ[] := True\nSystem`VectorPlotsDump`PosIntegerQ[System`VectorPlotsDump`n_List] \/; Flatten[System`VectorPlotsDump`n] === {} := False\nSystem`VectorPlotsDump`PosIntegerQ[System`VectorPlotsDump`n_List] := And @@ (Internal`NonNegativeIntegerQ[#1] && #1 > 1 & ) \/@ Flatten[System`VectorPlotsDump`n]\nSystem`VectorPlotsDump`PosIntegerQ[System`VectorPlotsDump`n_] := System`VectorPlotsDump`PosIntegerQ[Charting`padList[System`VectorPlotsDump`n]]\nSystem`VectorPlotsDump`PosIntegerQ[System`VectorPlotsDump`n__] := System`VectorPlotsDump`PosIntegerQ[{System`VectorPlotsDump`n}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`PosIntegerQ",
	"Random`Private`PositionsOf":"ObjectType: Symbol\nUsage: Random`Private`PositionsOf\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`PositionsOf",
	"SparseArray`PositiveDefiniteQ":"ObjectType: Symbol\nUsage: SparseArray`PositiveDefiniteQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`PositiveDefiniteQ",
	"Image`MatricesDump`PositiveIntegerOrListThereofQ":"ObjectType: Symbol\nUsage: Image`MatricesDump`PositiveIntegerOrListThereofQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`MatricesDump`PositiveIntegerOrListThereofQ[Image`MatricesDump`others_:Except[_]] := Image`MatricesDump`PositiveIntegerQ[Image`MatricesDump`others][#1] || VectorQ[#1, Image`MatricesDump`PositiveIntegerQ[Image`MatricesDump`others]] & \nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`MatricesDump`PositiveIntegerOrListThereofQ",
	"GraphComputation`PositiveIntegerQ":"ObjectType: Symbol\nUsage: GraphComputation`PositiveIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PositiveIntegerQ",
	"Image`MatricesDump`PositiveIntegerQ":"ObjectType: Symbol\nUsage: Image`MatricesDump`PositiveIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`MatricesDump`PositiveIntegerQ[Image`MatricesDump`others_:Except[_]] := (IntegerQ[#1] && Positive[#1]) || MatchQ[#1, Image`MatricesDump`others] & \nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`MatricesDump`PositiveIntegerQ",
	"Internal`PositiveIntegerQ":"ObjectType: Symbol\nUsage: Internal`PositiveIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PositiveIntegerQ",
	"Internal`PositiveMachineIntegerQ":"ObjectType: Symbol\nUsage: Internal`PositiveMachineIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PositiveMachineIntegerQ",
	"Reduce`PositivePeriod":"ObjectType: Symbol\nUsage: Reduce`PositivePeriod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PositivePeriod[System`ReduceUtilsDump`f_, System`ReduceUtilsDump`x_] := Module[{System`ReduceUtilsDump`pp, System`ReduceUtilsDump`rat}, System`ReduceUtilsDump`pp = Periodic`PeriodicFunctionPeriod[System`ReduceUtilsDump`f, System`ReduceUtilsDump`x]; If[System`ReduceUtilsDump`pp === $Failed, System`ReduceUtilsDump`pp = FunctionPeriod[System`ReduceUtilsDump`f, System`ReduceUtilsDump`x]; If[System`ReduceUtilsDump`pp === 0 || System`ReduceUtilsDump`pp === $Failed, Return[$Failed]]]; If[ListQ[System`ReduceUtilsDump`pp] && Length[System`ReduceUtilsDump`pp] == 2, Which[Reduce`PzeroQ[Im[System`ReduceUtilsDump`pp[[1]]]], System`ReduceUtilsDump`pp = System`ReduceUtilsDump`pp[[1]], Reduce`PzeroQ[Im[System`ReduceUtilsDump`pp[[2]]]], System`ReduceUtilsDump`pp = System`ReduceUtilsDump`pp[[2]], True, System`ReduceUtilsDump`rat = Rationalize[N[Im[System`ReduceUtilsDump`pp[[1]]]\/Im[System`ReduceUtilsDump`pp[[2]]], 20]]; If[ !Reduce`RationalNumberQ[System`ReduceUtilsDump`rat] ||  !Reduce`PzeroQ[Im[System`ReduceUtilsDump`pp[[1]]]\/Im[System`ReduceUtilsDump`pp[[2]]] - System`ReduceUtilsDump`rat], Return[$Failed, Module]]; System`ReduceUtilsDump`pp = Denominator[System`ReduceUtilsDump`rat]*System`ReduceUtilsDump`pp[[1]] - Numerator[System`ReduceUtilsDump`rat]*System`ReduceUtilsDump`pp[[2]]]]; If[ !NumericQ[System`ReduceUtilsDump`pp], Return[$Failed]]; If[Positive[System`ReduceUtilsDump`pp], Return[System`ReduceUtilsDump`pp]]; If[Negative[System`ReduceUtilsDump`pp], Return[-System`ReduceUtilsDump`pp]]; If[ !Reduce`PzeroQ[Im[System`ReduceUtilsDump`pp]], Return[$Failed]]; System`ReduceUtilsDump`pp = Re[System`ReduceUtilsDump`pp]; Which[Positive[System`ReduceUtilsDump`pp], System`ReduceUtilsDump`pp, Negative[System`ReduceUtilsDump`pp], -System`ReduceUtilsDump`pp, True, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PositivePeriod",
	"Graphics`Mesh`SoS`PositiveQ":"ObjectType: Symbol\nUsage: Graphics`Mesh`SoS`PositiveQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`SoS`PositiveQ",
	"System`Private`PositiveRootLBD":"ObjectType: Symbol\nUsage: System`Private`PositiveRootLBD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`PositiveRootLBD",
	"Audio`PossibleAudioQ":"ObjectType: Symbol\nUsage: Audio`PossibleAudioQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`PossibleAudioQ[(Audio`AudioDump`a_)?Audio`ValidAudioQHold] := True\nAudio`PossibleAudioQ[Audio`AudioDump`a_ \/; Sound`ValidSoundPrimitive[Audio`AudioDump`a] &&  !ListQ[Audio`AudioDump`a]] := True\nAudio`PossibleAudioQ[__] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`PossibleAudioQ",
	"Developer`PossibleByteArrayQ":"ObjectType: Symbol\nUsage: Developer`PossibleByteArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`PossibleByteArrayQ",
	"GraphComputation`PossibleCompleteGraphQ":"ObjectType: Symbol\nUsage: GraphComputation`PossibleCompleteGraphQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`PossibleCompleteGraphQ[(GraphComputation`GraphLibraryDump`g_)?UndirectedGraphQ] := Block[{GraphComputation`GraphLibraryDump`n = VertexCount[GraphComputation`GraphLibraryDump`g]}, EdgeCount[GraphComputation`GraphLibraryDump`g] === (GraphComputation`GraphLibraryDump`n*(GraphComputation`GraphLibraryDump`n - 1))\/2]\nGraphComputation`PossibleCompleteGraphQ[(GraphComputation`GraphLibraryDump`g_)?DirectedGraphQ] := Block[{GraphComputation`GraphLibraryDump`n = VertexCount[GraphComputation`GraphLibraryDump`g]}, EdgeCount[GraphComputation`GraphLibraryDump`g] === GraphComputation`GraphLibraryDump`n*(GraphComputation`GraphLibraryDump`n - 1)]\nGraphComputation`PossibleCompleteGraphQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PossibleCompleteGraphQ",
	"Internal`PossibleDateQ":"ObjectType: Symbol\nUsage: Internal`PossibleDateQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleDateQ",
	"Holonomic`PossibleDifferenceRootQ":"ObjectType: Symbol\nUsage: Holonomic`PossibleDifferenceRootQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`PossibleDifferenceRootQ[Holonomic`Private`HolonomicLibraryExtDump`expr_, Holonomic`Private`HolonomicLibraryExtDump`k_] \/; Internal`PrecAccur[{Holonomic`Private`HolonomicLibraryExtDump`expr, Holonomic`Private`HolonomicLibraryExtDump`k}] === Infinity := Block[{Holonomic`Private`HolonomicLibraryExtDump`res}, Holonomic`Private`HolonomicLibraryExtDump`res = Holonomic`Private`HolonomicLibraryExtDump`possibleDifferenceRootQ[Holonomic`Private`HolonomicLibraryExtDump`expr, Holonomic`Private`HolonomicLibraryExtDump`k]; Holonomic`Private`HolonomicLibraryExtDump`res \/; Holonomic`Private`HolonomicLibraryExtDump`res =!= $Failed]\nHolonomic`PossibleDifferenceRootQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`PossibleDifferenceRootQ",
	"Holonomic`PossibleDifferentialRootQ":"ObjectType: Symbol\nUsage: Holonomic`PossibleDifferentialRootQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`PossibleDifferentialRootQ[Holonomic`Private`HolonomicLibraryExtDump`expr_, Holonomic`Private`HolonomicLibraryExtDump`x_] \/; Internal`PrecAccur[{Holonomic`Private`HolonomicLibraryExtDump`expr, Holonomic`Private`HolonomicLibraryExtDump`x}] === Infinity := Block[{Holonomic`Private`HolonomicLibraryExtDump`res}, Holonomic`Private`HolonomicLibraryExtDump`res = Holonomic`Private`HolonomicLibraryExtDump`possibleDifferentialRootQ[Holonomic`Private`HolonomicLibraryExtDump`expr, Holonomic`Private`HolonomicLibraryExtDump`x]; Holonomic`Private`HolonomicLibraryExtDump`res \/; Holonomic`Private`HolonomicLibraryExtDump`res =!= $Failed]\nHolonomic`PossibleDifferentialRootQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`PossibleDifferentialRootQ",
	"Internal`PossibleEntityListQ":"ObjectType: Symbol\nUsage: Internal`PossibleEntityListQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PossibleEntityListQ[{}] := True\nInternal`PossibleEntityListQ[{Entity[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _]..}] := True\nInternal`PossibleEntityListQ[{_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityQ])..}] := True\nInternal`PossibleEntityListQ[EntityClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _String | {(_String | _Integer | _List)..} | _?(EntityFramework`Predicates`Private`unev[EntityFramework`ConditionQ]), Repeated[All | _Integer ;; _Integer, {0, 1}]]] := True\nInternal`PossibleEntityListQ[EntityClass[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _?(EntityFramework`Predicates`Private`unev[EntityFramework`ConditionQ])]] := True\nInternal`PossibleEntityListQ[AggregatedEntityClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), __]] := True\nInternal`PossibleEntityListQ[ExtendedEntityClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _]] := True\nInternal`PossibleEntityListQ[(Dated | HoldPattern[GeoVariant] | EntityFramework`Qualified)[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _]] := True\nInternal`PossibleEntityListQ[CombinedEntityClass[Repeated[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]) | (Rule | RuleDelayed)[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ])], {2}], ___]] := True\nInternal`PossibleEntityListQ[FilteredEntityClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityPropertyQ])]] := True\nInternal`PossibleEntityListQ[SampledEntityClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _]] := True\nInternal`PossibleEntityListQ[SortedEntityClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), __]] := True\nInternal`PossibleEntityListQ[UnionedEntityClass[(_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ])).., ___]] := True\nInternal`PossibleEntityListQ[ComplementedEntityClass[(_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ])).., __]] := True\nInternal`PossibleEntityListQ[IntersectedEntityClass[(_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ])).., __]] := True\nInternal`PossibleEntityListQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleEntityListQ",
	"Internal`PossibleEntityPropertyListQ":"ObjectType: Symbol\nUsage: Internal`PossibleEntityPropertyListQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PossibleEntityPropertyListQ[{}] := True\nInternal`PossibleEntityPropertyListQ[{EntityProperty[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _String?(EntityFramework`Predicates`Private`unev[StringQ])]..}] := True\nInternal`PossibleEntityPropertyListQ[{_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityPropertyQ])..}] := True\nInternal`PossibleEntityPropertyListQ[EntityPropertyClass[_String?(EntityFramework`Predicates`Private`unev[StringQ]), All | _String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[EntityFramework`ConditionQ]), Repeated[All | _Integer ;; _Integer, {0, 1}]]] := True\nInternal`PossibleEntityPropertyListQ[(Dated | HoldPattern[GeoVariant] | EntityFramework`Qualified)[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityPropertyListQ]), _]] := True\nInternal`PossibleEntityPropertyListQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleEntityPropertyListQ",
	"Internal`PossibleEntityPropertyQ":"ObjectType: Symbol\nUsage: Internal`PossibleEntityPropertyQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PossibleEntityPropertyQ[_String?(EntityFramework`Predicates`Private`unev[StringQ])] := True\nInternal`PossibleEntityPropertyQ[EntityProperty[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _String?(EntityFramework`Predicates`Private`unev[StringQ]), Repeated[_?(EntityFramework`Predicates`Private`unev[EntityFramework`QualifierQ]), {0, 1}]]] := True\nInternal`PossibleEntityPropertyQ[EntityProperty[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _String?(EntityFramework`Predicates`Private`unev[StringQ]), _?(EntityFramework`Predicates`Private`unev[EntityFramework`QualifierQ]), _String?(EntityFramework`Predicates`Private`unev[StringQ])]] := True\nInternal`PossibleEntityPropertyQ[EntityProperty[_String?(EntityFramework`Predicates`Private`unev[StringQ]) | _?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _?(EntityFramework`Predicates`Private`unev[EntityFramework`ConditionQ])]] := True\nInternal`PossibleEntityPropertyQ[EntityProperty[(Rule | RuleDelayed)[_String?(EntityFramework`Predicates`Private`unev[StringQ]), EntityFramework`Predicates`Private`type_], EntityFramework`Predicates`Private`rest__]] := Internal`PossibleEntityPropertyQ[Unevaluated[EntityProperty[EntityFramework`Predicates`Private`type, EntityFramework`Predicates`Private`rest]]]\nInternal`PossibleEntityPropertyQ[EntityFunction[_Symbol | {_Symbol}, _]] := True\nInternal`PossibleEntityPropertyQ[Dated[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityPropertyQ]), _]] := True\nInternal`PossibleEntityPropertyQ[EntityFramework`Qualified[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityPropertyQ]), _]] := True\nInternal`PossibleEntityPropertyQ[EntityFramework`EntityPropertySequence[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityPropertyQ])...]] := True\nInternal`PossibleEntityPropertyQ[EntityFramework`InverseEntityProperty[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _String?(EntityFramework`Predicates`Private`unev[StringQ]), Repeated[_?(EntityFramework`Predicates`Private`unev[EntityFramework`QualifierQ]), {0, 1}]]] := True\nInternal`PossibleEntityPropertyQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleEntityPropertyQ",
	"Internal`PossibleEntityQ":"ObjectType: Symbol\nUsage: Internal`PossibleEntityQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PossibleEntityQ[Entity[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _String | _Integer | _List]] := True\nInternal`PossibleEntityQ[Entity[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ]), _]] := True\nInternal`PossibleEntityQ[EntityFramework`AverageEntity[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ])]] := True\nInternal`PossibleEntityQ[Dated[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityQ]), _]] := True\nInternal`PossibleEntityQ[EntityCopies[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityQ]), _]] := True\nInternal`PossibleEntityQ[EntityGroup[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityListQ])]] := True\nInternal`PossibleEntityQ[EntityInstance[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityQ]), _]] := True\nInternal`PossibleEntityQ[EntityFramework`ParameterizedEntity[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _?(EntityFramework`Predicates`Private`unev[EntityFramework`ConditionQ])]] := True\nInternal`PossibleEntityQ[EntityFramework`Qualified[_?(EntityFramework`Predicates`Private`unev[Internal`PossibleEntityQ]), _]] := True\nInternal`PossibleEntityQ[HoldPattern[GeoVariant][Entity[_String?(EntityFramework`Predicates`Private`unev[StringQ]), _], _]] := True\nInternal`PossibleEntityQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleEntityQ",
	"System`ConvertersDump`PossibleExportQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`PossibleExportQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`PossibleExportQ[System`ConvertersDump`fmt_String] := Or @@ (FileExistsQ[FileNameJoin[{#1, System`ConvertersDump`fmt, \"Export.m\"}]] & ) \/@ System`ConvertersDump`$FormatsDirectory\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PossibleExportQ",
	"System`ConvertersDump`PossibleFiles":"ObjectType: Symbol\nUsage: System`ConvertersDump`PossibleFiles\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PossibleFiles",
	"System`ConvertersDump`PossibleFiles$":"ObjectType: Symbol\nUsage: System`ConvertersDump`PossibleFiles$\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Temporary}\nFullName: System`ConvertersDump`PossibleFiles$",
	"Signal`FilterDesignDump`PossibleFrequencyQ":"ObjectType: Symbol\nUsage: Signal`FilterDesignDump`PossibleFrequencyQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Signal`FilterDesignDump`PossibleFrequencyQ[Signal`FilterDesignDump`freq_] := Quiet[(Internal`PossibleQuantityQ[Signal`FilterDesignDump`freq] && With[{Signal`FilterDesignDump`m = Signal`FilterDesignDump`GetQuantityMagnitude[Signal`FilterDesignDump`freq]}, Internal`RealValuedNumericQ[Signal`FilterDesignDump`m] && Signal`FilterDesignDump`m >= 0]) || (Internal`RealValuedNumericQ[Signal`FilterDesignDump`freq] && Signal`FilterDesignDump`freq >= 0) || (Head[Signal`FilterDesignDump`freq] === Symbol &&  !Internal`RealValuedNumericQ[Signal`FilterDesignDump`freq])]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`FilterDesignDump`PossibleFrequencyQ",
	"GIS`PossibleGeoEntityClassQ":"ObjectType: Symbol\nUsage: GIS`PossibleGeoEntityClassQ[e] returns True if e could be a geo entity class, and False otherwise. This is just a structural test. Use GIS`GeoEntityClassQ to check the domain too.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_EntityClass] := True\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_SortedEntityClass] := True\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_ExtendedEntityClass] := True\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_FilteredEntityClass] := True\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_SampledEntityClass] := True\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_CombinedEntityClass] := False\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_AggregatedEntityClass] := False\nGIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PossibleGeoEntityClassQ",
	"GIS`PossibleGeoEntityListOrClassQ":"ObjectType: Symbol\nUsage: GIS`PossibleGeoEntityListOrClassQ[e] is equivalent to Or[VectorQ[e, GIS`PossibleGeoEntityQ], GIS`PossibleGeoEntityClassQ[e]].\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PossibleGeoEntityListOrClassQ[{___?GIS`PossibleGeoEntityQ}] := True\nGIS`PossibleGeoEntityListOrClassQ[GIS`GeoEntityDump`e_] := GIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PossibleGeoEntityListOrClassQ",
	"GIS`PossibleGeoEntityOrClassQ":"ObjectType: Symbol\nUsage: GIS`PossibleGeoEntityOrClassQ[e] is equivalent to Or[GIS`PossibleGeoEntityQ[e], GIS`PossibleGeoEntityClassQ[e]].\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PossibleGeoEntityOrClassQ[GIS`GeoEntityDump`e_] := GIS`PossibleGeoEntityQ[GIS`GeoEntityDump`e] || GIS`PossibleGeoEntityClassQ[GIS`GeoEntityDump`e]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PossibleGeoEntityOrClassQ",
	"GIS`PossibleGeoEntityQ":"ObjectType: Symbol\nUsage: GIS`PossibleGeoEntityQ[e] returns True if e could be a geo entity, and False otherwise. This is just a structural test. Use GIS`GeoEntityQ to check the domain too.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`PossibleGeoEntityQ[GIS`GeoEntityDump`e_Entity] := True\nGIS`PossibleGeoEntityQ[GIS`GeoEntityDump`e_EntityInstance] := True\nGIS`PossibleGeoEntityQ[GIS`GeoEntityDump`e_GeoVariant] := True\nGIS`PossibleGeoEntityQ[GIS`GeoEntityDump`e_Dated] := True\nGIS`PossibleGeoEntityQ[GIS`GeoEntityDump`e_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PossibleGeoEntityQ",
	"GraphComputation`PossibleGraphBoxQ":"ObjectType: Symbol\nUsage: GraphComputation`PossibleGraphBoxQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`PossibleGraphBoxQ[HoldPattern[(GraphicsBox | Graphics3DBox)[NamespaceBox[\"NetworkGraphics\", _, ___], ___]]] := True\nGraphComputation`PossibleGraphBoxQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PossibleGraphBoxQ",
	"GraphComputation`PossibleGraphQ":"ObjectType: Symbol\nUsage: GraphComputation`PossibleGraphQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`PossibleGraphQ[GraphComputation`GraphDeveloperDump`entity:Entity[\"Graph\", _]] := True\nGraphComputation`PossibleGraphQ[GraphComputation`GraphDeveloperDump`list_List] := True\nGraphComputation`PossibleGraphQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PossibleGraphQ",
	"Image`PossibleImage3DQ":"ObjectType: Symbol\nUsage: Image`PossibleImage3DQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`PossibleImage3DQ[(Image`Utilities`img_)?Image`ValidImage3DQHold] := True\nImage`PossibleImage3DQ[__] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`PossibleImage3DQ",
	"Image`PossibleImageQ":"ObjectType: Symbol\nUsage: Image`PossibleImageQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`PossibleImageQ[(Image`Utilities`img_)?Image`ValidImageQHold] := True\nImage`PossibleImageQ[_Graphics] := True\nImage`PossibleImageQ[_Graphics3D] := True\nImage`PossibleImageQ[_GeoGraphics] := True\nImage`PossibleImageQ[__] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`PossibleImageQ",
	"System`ConvertersDump`PossibleImportQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`PossibleImportQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`PossibleImportQ[System`ConvertersDump`fmt_String] := Or @@ (FileExistsQ[FileNameJoin[{#1, System`ConvertersDump`fmt, \"Import.m\"}]] & ) \/@ System`ConvertersDump`$FormatsDirectory\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PossibleImportQ",
	"Region`Mesh`PossibleMeshGraphicsBoxQ":"ObjectType: Symbol\nUsage: Region`Mesh`PossibleMeshGraphicsBoxQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PossibleMeshGraphicsBoxQ[HoldPattern[GraphicsBox[TagBox[_, \"MeshGraphics\", ___], ___]]] := True\nRegion`Mesh`PossibleMeshGraphicsBoxQ[HoldPattern[Graphics3DBox[TagBox[_, \"MeshGraphics3D\", ___], ___]]] := True\nRegion`Mesh`PossibleMeshGraphicsBoxQ[HoldPattern[Graphics3DBox[TagBox[_, \"MeshGraphics\", ___], ___]]] := True\nRegion`Mesh`PossibleMeshGraphicsBoxQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PossibleMeshGraphicsBoxQ",
	"Internal`PossibleQuantityQ":"ObjectType: Symbol\nUsage: Internal`PossibleQuantityQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PossibleQuantityQ[QuantityUnits`Private`args__] := QuantityQ[QuantityUnits`Private`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleQuantityQ",
	"Region`PossibleRegionGraphicsBoxQ":"ObjectType: Symbol\nUsage: Region`PossibleRegionGraphicsBoxQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PossibleRegionGraphicsBoxQ[HoldPattern[GraphicsBox[TagBox[_, \"RegionGraphics\", ___], ___]]] := True\nRegion`PossibleRegionGraphicsBoxQ[HoldPattern[Graphics3DBox[TagBox[_, \"RegionGraphics3D\", ___], ___]]] := True\nRegion`PossibleRegionGraphicsBoxQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PossibleRegionGraphicsBoxQ",
	"Region`PossibleRegionQ":"ObjectType: Symbol\nUsage: Region`PossibleRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`PossibleRegionQ[Region[Region`RegionUtilitiesDump`reg_]] := Region`PossibleRegionQ[Region`RegionUtilitiesDump`reg]\nRegion`PossibleRegionQ[_String | _?NumericQ | _List] := False\nRegion`PossibleRegionQ[(Region`RegionUtilitiesDump`expr_)?Internal`PatternPresentQ] := True\nRegion`PossibleRegionQ[(Region`RegionUtilitiesDump`head_)[___]] \/;  !Internal`LiteralPresentQ[Region`RegionUtilitiesDump`$RegionHead, Region`RegionUtilitiesDump`head] := False\nRegion`PossibleRegionQ[Region`RegionUtilitiesDump`a_] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PossibleRegionQ",
	"System`ConvertersDump`Utilities`PossibleTimeIntervalQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`PossibleTimeIntervalQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`PossibleTimeIntervalQ[All | \"All\" | Span[Repeated[_?Internal`PossibleQuantityQ, 2]]] := True\nSystem`ConvertersDump`Utilities`PossibleTimeIntervalQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`PossibleTimeIntervalQ",
	"System`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ[System`ConvertersDump`Utilities`Private`interval_] := System`ConvertersDump`Utilities`PossibleTimeIntervalQ[System`ConvertersDump`Utilities`Private`interval] || System`ConvertersDump`Utilities`SampleIntervalQ[System`ConvertersDump`Utilities`Private`interval]\nSystem`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ",
	"System`ConvertersDump`Utilities`PossibleTimeToSampleInterval":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`PossibleTimeToSampleInterval\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: System`ConvertersDump`Utilities`PossibleTimeToSampleInterval[_][All | \"All\", _] := All\nSystem`ConvertersDump`Utilities`PossibleTimeToSampleInterval[System`ConvertersDump`Utilities`Private`type:\"Frames\" | \"Samples\"][(System`ConvertersDump`Utilities`Private`timeInterval_)?System`ConvertersDump`Utilities`PossibleTimeIntervalQ, System`ConvertersDump`Utilities`Private`rate_ \/; Internal`PositiveMachineIntegerQ[System`ConvertersDump`Utilities`Private`rate] || (Assumptions`ARationalQ[System`ConvertersDump`Utilities`Private`rate] && System`ConvertersDump`Utilities`Private`rate > 0)] := Block[{System`ConvertersDump`Utilities`Private`minSample, System`ConvertersDump`Utilities`Private`maxSample, System`ConvertersDump`Utilities`Private`sampleInterval}, {System`ConvertersDump`Utilities`Private`minSample, System`ConvertersDump`Utilities`Private`maxSample} = List @@ If[System`ConvertersDump`Utilities`Private`type === \"Frames\", (Video`Utilities`GetFrameCount[#1, System`ConvertersDump`Utilities`Private`rate] & ) \/@ System`ConvertersDump`Utilities`Private`timeInterval, (Audio`Utilities`GetSamples[#1, System`ConvertersDump`Utilities`Private`rate] & ) \/@ System`ConvertersDump`Utilities`Private`timeInterval]; If[FailureQ[System`ConvertersDump`Utilities`Private`minSample] || FailureQ[System`ConvertersDump`Utilities`Private`maxSample], Return[$Failed]]; Which[System`ConvertersDump`Utilities`Private`minSample == 0, System`ConvertersDump`Utilities`Private`minSample = 1; , System`ConvertersDump`Utilities`Private`minSample < 0, Return[$Failed]; ]; Which[System`ConvertersDump`Utilities`Private`maxSample == 0, System`ConvertersDump`Utilities`Private`maxSample = 1; , System`ConvertersDump`Utilities`Private`maxSample < 0, Return[$Failed]; ]; System`ConvertersDump`Utilities`Private`sampleInterval = System`ConvertersDump`Utilities`Private`minSample ;; System`ConvertersDump`Utilities`Private`maxSample; If[System`ConvertersDump`Utilities`SampleIntervalQ[System`ConvertersDump`Utilities`Private`sampleInterval], Return[System`ConvertersDump`Utilities`Private`sampleInterval], Return[$Failed]]; ]\nSystem`ConvertersDump`Utilities`PossibleTimeToSampleInterval[___][___] := $Failed\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`PossibleTimeToSampleInterval",
	"Internal`PossibleTimeZoneQ":"ObjectType: Symbol\nUsage: Internal`PossibleTimeZoneQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PossibleTimeZoneQ[_Integer] := True\nInternal`PossibleTimeZoneQ[_Real] := True\nInternal`PossibleTimeZoneQ[HoldPattern[_Entity]] := True\nInternal`PossibleTimeZoneQ[System`TimeZonesDump`s_String] := System`Utilities`TimeZoneStringQ[System`TimeZonesDump`s]\nInternal`PossibleTimeZoneQ[__] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PossibleTimeZoneQ",
	"ResourceFunctionHelpers`PossiblyDifferentiableQ":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`PossiblyDifferentiableQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PossiblyDifferentiableQ[ResourceFunctionHelpers`FunctionDifferentiability`Private`expr:{ResourceFunctionHelpers`FunctionDifferentiability`Private`fnc_, ResourceFunctionHelpers`FunctionDifferentiability`Private`constraint_} | (ResourceFunctionHelpers`FunctionDifferentiability`Private`fnc:Except[_List]), ResourceFunctionHelpers`FunctionDifferentiability`Private`var:(ResourceFunctionHelpers`FunctionDifferentiability`Private`x_Symbol) | {ResourceFunctionHelpers`FunctionDifferentiability`Private`x_Symbol, (ResourceFunctionHelpers`FunctionDifferentiability`Private`n_Integer)?Positive}] := Module[{ResourceFunctionHelpers`FunctionDifferentiability`Private`iconstraint}, If[ListQ[ResourceFunctionHelpers`FunctionDifferentiability`Private`expr], ResourceFunctionHelpers`FunctionDifferentiability`Private`iconstraint = Reduce[ResourceFunctionHelpers`FunctionDifferentiability`Private`constraint]; MatchQ[Reduce[ResourceFunctionHelpers`FunctionDifferentiability[ResourceFunctionHelpers`FunctionDifferentiability`Private`expr, ResourceFunctionHelpers`FunctionDifferentiability`Private`var] && ResourceFunctionHelpers`FunctionDifferentiability`Private`iconstraint], ResourceFunctionHelpers`FunctionDifferentiability`Private`iconstraint], TrueQ[ResourceFunctionHelpers`FunctionDifferentiability[ResourceFunctionHelpers`FunctionDifferentiability`Private`expr, ResourceFunctionHelpers`FunctionDifferentiability`Private`var]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: ResourceFunctionHelpers`PossiblyDifferentiableQ",
	"System`ConvertersDump`PostImport":"ObjectType: Symbol\nUsage: System`ConvertersDump`PostImport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: System`ConvertersDump`PostImport[System`ConvertersDump`format_, {}][System`ConvertersDump`rules_, System`ConvertersDump`opts___] := System`ConvertersDump`PostImport[System`ConvertersDump`format, System`ConvertersDump`defaultElement[Import][System`ConvertersDump`format]][System`ConvertersDump`rules, System`ConvertersDump`opts]\nSystem`ConvertersDump`PostImport[System`ConvertersDump`format_, {\"Rules\"}][System`ConvertersDump`rules_, System`ConvertersDump`opts___] := System`ConvertersDump`PostImport[System`ConvertersDump`format, {All}][System`ConvertersDump`rules, \"ElementRules\" -> True, System`ConvertersDump`opts]\nSystem`ConvertersDump`PostImport[System`ConvertersDump`format_, {\"Rules\", System`ConvertersDump`origel__}][System`ConvertersDump`rules_, System`ConvertersDump`opts___] := System`ConvertersDump`PostImport[System`ConvertersDump`format, {System`ConvertersDump`origel}][System`ConvertersDump`rules, \"ElementRules\" -> True, System`ConvertersDump`opts]\nSystem`ConvertersDump`PostImport[System`ConvertersDump`format_, {\"Options\" | Options}][System`ConvertersDump`rules_, System`ConvertersDump`opts___] := System`ConvertersDump`PostImport[System`ConvertersDump`format, {System`ConvertersDump`importOptions[System`ConvertersDump`format]}][System`ConvertersDump`rules, \"ElementRules\" -> True, System`ConvertersDump`opts]\nSystem`ConvertersDump`PostImport[System`ConvertersDump`format_, {\"Options\" | Options, System`ConvertersDump`origel__}][System`ConvertersDump`rules_, System`ConvertersDump`opts___] := System`ConvertersDump`PostImport[System`ConvertersDump`format, {System`ConvertersDump`origel}][System`ConvertersDump`rules, \"ElementRules\" -> True, System`ConvertersDump`opts]\nSystem`ConvertersDump`PostImport[System`ConvertersDump`format_, System`ConvertersDump`origel_List][System`ConvertersDump`rules_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`elements, System`ConvertersDump`elementrules}, System`ConvertersDump`elementrules = \"ElementRules\" \/. {System`ConvertersDump`opts} \/. \"ElementRules\" -> False; System`ConvertersDump`elements = System`ConvertersDump`AllElements[System`ConvertersDump`origel, System`ConvertersDump`format, System`ConvertersDump`rules]; If[System`ConvertersDump`elementrules, System`ConvertersDump`UnifyData[Flatten[{System`ConvertersDump`elements \/. System`ConvertersDump`ElementList[System`ConvertersDump`el__] :> System`ConvertersDump`ElementRule[System`ConvertersDump`el, System`ConvertersDump`postImport[System`ConvertersDump`format, {System`ConvertersDump`el}][System`ConvertersDump`rules, System`ConvertersDump`opts]]}]], System`ConvertersDump`elements \/. System`ConvertersDump`ElementList[System`ConvertersDump`el__] :> System`ConvertersDump`postImport[System`ConvertersDump`format, {System`ConvertersDump`el}][System`ConvertersDump`rules, System`ConvertersDump`opts]]]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PostImport",
	"System`ConvertersDump`PostImportSkips":"ObjectType: Symbol\nUsage: System`ConvertersDump`PostImportSkips\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`PostImportSkips[_] = None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`PostImportSkips",
	"Region`Mesh`PostProcess2DMarchingCells":"ObjectType: Symbol\nUsage: Region`Mesh`PostProcess2DMarchingCells\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PostProcess2DMarchingCells[Region`Mesh`PostProcessDiscretizeRegionDump`bmr_, Region`Mesh`PostProcessDiscretizeRegionDump`f_CompiledFunction, Region`Mesh`PostProcessDiscretizeRegionDump`ograd_, Region`Mesh`PostProcessDiscretizeRegionDump`bounds_, Region`Mesh`PostProcessDiscretizeRegionDump`strategies_, Region`Mesh`PostProcessDiscretizeRegionDump`mhead_] := Block[{Region`Mesh`PostProcessDiscretizeRegionDump`res, Region`Mesh`PostProcessDiscretizeRegionDump`g = Region`Mesh`PostProcessDiscretizeRegionDump`ograd, Region`Mesh`PostProcessDiscretizeRegionDump`tol}, If[ !Region`Mesh`PostProcessDiscretizeRegionDump`CompiledFunctionCheck[Region`Mesh`PostProcessDiscretizeRegionDump`f, Region`Mesh`PostProcessDiscretizeRegionDump`bounds], Return[$Failed]]; If[ !Region`Mesh`PostProcessDiscretizeRegionDump`CompiledGradientCheck[Region`Mesh`PostProcessDiscretizeRegionDump`g, Region`Mesh`PostProcessDiscretizeRegionDump`bounds], Region`Mesh`PostProcessDiscretizeRegionDump`g = {}]; Region`Mesh`PostProcessDiscretizeRegionDump`tol = Region`Mesh`Utilities`ProcessTolerance[Region`Mesh`PostProcessDiscretizeRegionDump`bounds]; Region`Mesh`PostProcessDiscretizeRegionDump`iResampleCurves[Region`Mesh`PostProcessDiscretizeRegionDump`bmr, Region`Mesh`PostProcessDiscretizeRegionDump`bounds, {Region`Mesh`PostProcessDiscretizeRegionDump`f, Region`Mesh`PostProcessDiscretizeRegionDump`g}, Region`Mesh`PostProcessDiscretizeRegionDump`tol, Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"MaxCellMeasureData\"], Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"MeshOrder\"], {Region`Mesh`PostProcessDiscretizeRegionDump`mhead, True}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PostProcess2DMarchingCells",
	"Region`Mesh`PostProcessingMethodQ":"ObjectType: Symbol\nUsage: Region`Mesh`PostProcessingMethodQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PostProcessingMethodQ[Region`Mesh`DiscretizeRegionStrategiesDump`n_Integer, Region`Mesh`DiscretizeRegionStrategiesDump`m_, Region`Mesh`DiscretizeRegionStrategiesDump`pname_Symbol, Region`Mesh`DiscretizeRegionStrategiesDump`exposed_] := Region`Mesh`PostProcessingMethodQ[Region`Mesh`DiscretizeRegionStrategiesDump`n, Region`Mesh`DiscretizeRegionStrategiesDump`m, System`Utilities`StringName[Region`Mesh`DiscretizeRegionStrategiesDump`pname], TrueQ[Region`Mesh`DiscretizeRegionStrategiesDump`exposed]]\nRegion`Mesh`PostProcessingMethodQ[1 | 2 | 3, 0 | 1 | 2 | 3, \"Automatic\" | \"None\" | \"False\" | \"True\", True] = True\nRegion`Mesh`PostProcessingMethodQ[1 | 2, 1 | 2, \"ResampleCurves\", True] = True\nRegion`Mesh`PostProcessingMethodQ[2 | 3, 2 | 3, \"SmoothMesh\", True] = True\nRegion`Mesh`PostProcessingMethodQ[1 | 2 | 3, 1 | 2 | 3, \"ImproveBoundaries\", True] = True\nRegion`Mesh`PostProcessingMethodQ[___] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PostProcessingMethodQ",
	"Region`Mesh`PostProcessMesh":"ObjectType: Symbol\nUsage: Region`Mesh`PostProcessMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PostProcessMesh[Region`Mesh`PostProcessDiscretizeRegionDump`mesh_, Region`Mesh`PostProcessDiscretizeRegionDump`strategies_ \/; TrueQ[Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"PostProcessingDone\"]] || Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"PostProcessingMethod\"] === None] := Region`Mesh`PostProcessDiscretizeRegionDump`mesh\nRegion`Mesh`PostProcessMesh[Region`Mesh`PostProcessDiscretizeRegionDump`mesh_, Region`Mesh`PostProcessDiscretizeRegionDump`strategies_] := Region`Mesh`PostProcessDiscretizeRegionDump`dUnquiet[1, Module[{Region`Mesh`PostProcessDiscretizeRegionDump`pmethod = Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"PostProcessingMethod\"], Region`Mesh`PostProcessDiscretizeRegionDump`d, Region`Mesh`PostProcessDiscretizeRegionDump`res}, Region`Mesh`PostProcessDiscretizeRegionDump`dPrint[1, \"Starting postprocessing \", Region`Mesh`PostProcessDiscretizeRegionDump`mesh]; Region`Mesh`PostProcessDiscretizeRegionDump`d = RegionEmbeddingDimension[Region`Mesh`PostProcessDiscretizeRegionDump`mesh]; If[MatchQ[Region`Mesh`PostProcessDiscretizeRegionDump`pmethod, Automatic | True], Region`Mesh`PostProcessDiscretizeRegionDump`pmethod = Switch[Region`Mesh`PostProcessDiscretizeRegionDump`d, 2, \"ResampleCurves\", 3, If[Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"DiscretizationMethod\"] =!= \"Legacy\", \"SmoothMesh\", None], _, None]; ]; Region`Mesh`PostProcessDiscretizeRegionDump`dPrint[1, \"Starting postprocessing with method \", Region`Mesh`PostProcessDiscretizeRegionDump`pmethod, \" on \", Region`Mesh`PostProcessDiscretizeRegionDump`mesh]; Region`Mesh`PostProcessDiscretizeRegionDump`res = Switch[Region`Mesh`PostProcessDiscretizeRegionDump`pmethod, \"ResampleCurves\", Region`Mesh`PostProcessDiscretizeRegionDump`mesh, \"SmoothMesh\", Region`Mesh`PostProcessDiscretizeRegionDump`CallMeshRelaxation[Region`Mesh`PostProcessDiscretizeRegionDump`mesh, Region`Mesh`PostProcessDiscretizeRegionDump`strategies], None, Region`Mesh`PostProcessDiscretizeRegionDump`mesh, _, $Failed]; Region`Mesh`PostProcessDiscretizeRegionDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PostProcessMesh",
	"Region`Mesh`PostProcessMeshComponent":"ObjectType: Symbol\nUsage: Region`Mesh`PostProcessMeshComponent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PostProcessMeshComponent[Region`Mesh`PostProcessDiscretizeRegionDump`mesh_, Region`Mesh`PostProcessDiscretizeRegionDump`cdim_, Region`Mesh`PostProcessDiscretizeRegionDump`pfuns_, Region`Mesh`PostProcessDiscretizeRegionDump`strategies_ \/; Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"PostProcessingMethod\"] === None] := Region`Mesh`PostProcessDiscretizeRegionDump`mesh\nRegion`Mesh`PostProcessMeshComponent[Region`Mesh`PostProcessDiscretizeRegionDump`mesh_, Region`Mesh`PostProcessDiscretizeRegionDump`cdim_, Region`Mesh`PostProcessDiscretizeRegionDump`pfuns_, Region`Mesh`PostProcessDiscretizeRegionDump`strategies_] := Module[{Region`Mesh`PostProcessDiscretizeRegionDump`pmethod = Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"PostProcessingMethod\"], Region`Mesh`PostProcessDiscretizeRegionDump`d, Region`Mesh`PostProcessDiscretizeRegionDump`res}, Region`Mesh`PostProcessDiscretizeRegionDump`dPrint[1, \"Starting postprocessing dimension \", Region`Mesh`PostProcessDiscretizeRegionDump`cdim, \" component \", Region`Mesh`PostProcessDiscretizeRegionDump`mesh]; Region`Mesh`PostProcessDiscretizeRegionDump`d = RegionEmbeddingDimension[Region`Mesh`PostProcessDiscretizeRegionDump`mesh]; If[MatchQ[Region`Mesh`PostProcessDiscretizeRegionDump`pmethod, Automatic | True], Region`Mesh`PostProcessDiscretizeRegionDump`pmethod = Switch[Region`Mesh`PostProcessDiscretizeRegionDump`d, 2, \"ResampleCurves\", 3, If[Region`Mesh`PostProcessDiscretizeRegionDump`cdim >= 2 && Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"DiscretizationMethod\"] =!= \"Legacy\", \"SmoothMesh\", None], _, None]; ]; Region`Mesh`PostProcessDiscretizeRegionDump`dPrint[1, \"Starting postprocessing with method \", Region`Mesh`PostProcessDiscretizeRegionDump`pmethod, \" on \", Region`Mesh`PostProcessDiscretizeRegionDump`mesh]; Region`Mesh`PostProcessDiscretizeRegionDump`res = Switch[Region`Mesh`PostProcessDiscretizeRegionDump`pmethod, \"ResampleCurves\", Region`Mesh`PostProcessDiscretizeRegionDump`mesh, \"SmoothMesh\", Region`Mesh`PostProcessDiscretizeRegionDump`CallMeshComponentRelaxation[Region`Mesh`PostProcessDiscretizeRegionDump`mesh, Region`Mesh`PostProcessDiscretizeRegionDump`cdim, Region`Mesh`PostProcessDiscretizeRegionDump`pfuns, Region`Mesh`PostProcessDiscretizeRegionDump`strategies], None, Region`Mesh`PostProcessDiscretizeRegionDump`mesh, _, $Failed]; Region`Mesh`PostProcessDiscretizeRegionDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PostProcessMeshComponent",
	"Region`Mesh`PostProcessSemialgebraicRegion":"ObjectType: Symbol\nUsage: Region`Mesh`PostProcessSemialgebraicRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PostProcessSemialgebraicRegion[Region`Mesh`PostProcessDiscretizeRegionDump`mr_, Region`Mesh`PostProcessDiscretizeRegionDump`strategies_] := Block[{Region`Mesh`PostProcessDiscretizeRegionDump`bbox, Region`Mesh`PostProcessDiscretizeRegionDump`mhead, Region`Mesh`PostProcessDiscretizeRegionDump`mord, Region`Mesh`PostProcessDiscretizeRegionDump`rspec, Region`Mesh`PostProcessDiscretizeRegionDump`mlen, Region`Mesh`PostProcessDiscretizeRegionDump`tol, Region`Mesh`PostProcessDiscretizeRegionDump`preds, Region`Mesh`PostProcessDiscretizeRegionDump`pvars, Region`Mesh`PostProcessDiscretizeRegionDump`f, Region`Mesh`PostProcessDiscretizeRegionDump`g, Region`Mesh`PostProcessDiscretizeRegionDump`tflag, Region`Mesh`PostProcessDiscretizeRegionDump`topts}, If[ !(BoundaryMeshRegionQ[Region`Mesh`PostProcessDiscretizeRegionDump`mr] || MeshRegionQ[Region`Mesh`PostProcessDiscretizeRegionDump`mr]), Return[$Failed]]; If[RegionEmbeddingDimension[Region`Mesh`PostProcessDiscretizeRegionDump`mr] != 2, Return[$Failed]]; Region`Mesh`PostProcessDiscretizeRegionDump`mhead = Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"MessageHead\"]; Region`Mesh`PostProcessDiscretizeRegionDump`mhead = If[MatchQ[Region`Mesh`PostProcessDiscretizeRegionDump`mhead, DiscretizeRegion | \"DiscretizeRegion\"], MeshRegion, If[MatchQ[Region`Mesh`PostProcessDiscretizeRegionDump`mhead, BoundaryDiscretizeRegion | \"BoundaryDiscretizeRegion\"], BoundaryMeshRegion, $Failed]]; If[Region`Mesh`PostProcessDiscretizeRegionDump`mhead === $Failed, Return[$Failed]]; Region`Mesh`PostProcessDiscretizeRegionDump`rspec = Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"RegionSpecificationData\"]; Region`Mesh`PostProcessDiscretizeRegionDump`preds = Region`Mesh`PostProcessDiscretizeRegionDump`rspec[\"Predicates\"[2]]; Region`Mesh`PostProcessDiscretizeRegionDump`pvars = Region`Mesh`PostProcessDiscretizeRegionDump`rspec[\"PredicateVariables\"]; Region`Mesh`PostProcessDiscretizeRegionDump`bbox = Region`Mesh`PostProcessDiscretizeRegionDump`rspec[\"Bounds\"]; Region`Mesh`PostProcessDiscretizeRegionDump`f = Region`Mesh`CompilePredicateBoundaryFunction[Region`Mesh`PostProcessDiscretizeRegionDump`preds, Region`Mesh`PostProcessDiscretizeRegionDump`pvars, \"AllowEqualities\" -> True]; If[ !Region`Mesh`PostProcessDiscretizeRegionDump`CompiledFunctionCheck[Region`Mesh`PostProcessDiscretizeRegionDump`f, Region`Mesh`PostProcessDiscretizeRegionDump`bbox], Return[$Failed]]; Region`Mesh`PostProcessDiscretizeRegionDump`g = Region`Mesh`CompilePredicateBoundaryGradient[Region`Mesh`PostProcessDiscretizeRegionDump`preds, Region`Mesh`PostProcessDiscretizeRegionDump`pvars, \"AllowEqualities\" -> True]; If[ !Region`Mesh`PostProcessDiscretizeRegionDump`CompiledGradientCheck[Region`Mesh`PostProcessDiscretizeRegionDump`g, Region`Mesh`PostProcessDiscretizeRegionDump`bbox], Region`Mesh`PostProcessDiscretizeRegionDump`g = {}]; Region`Mesh`PostProcessDiscretizeRegionDump`tol = Region`Mesh`PostProcessDiscretizeRegionDump`strategies[Tolerance]; If[ !NumericQ[Region`Mesh`PostProcessDiscretizeRegionDump`tol], Region`Mesh`PostProcessDiscretizeRegionDump`tol = Region`Mesh`Utilities`ProcessTolerance[Region`Mesh`PostProcessDiscretizeRegionDump`bbox]]; Region`Mesh`PostProcessDiscretizeRegionDump`tflag = MatchQ[Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"TriangulationMethod\"], Automatic | \"Automatic\" | True] && Region`Mesh`PostProcessDiscretizeRegionDump`mhead === MeshRegion; Region`Mesh`PostProcessDiscretizeRegionDump`topts = If[Region`Mesh`PostProcessDiscretizeRegionDump`tflag, Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"TriangulationMethodOptions\"], {}]; Region`Mesh`PostProcessDiscretizeRegionDump`iResampleCurves[Region`Mesh`PostProcessDiscretizeRegionDump`mr, Region`Mesh`PostProcessDiscretizeRegionDump`bbox, {Region`Mesh`PostProcessDiscretizeRegionDump`f, Region`Mesh`PostProcessDiscretizeRegionDump`g}, Region`Mesh`PostProcessDiscretizeRegionDump`tol, Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"MaxCellMeasureData\"], Region`Mesh`PostProcessDiscretizeRegionDump`strategies[\"MeshOrder\"], {Region`Mesh`PostProcessDiscretizeRegionDump`mhead, {Region`Mesh`PostProcessDiscretizeRegionDump`tflag, Region`Mesh`PostProcessDiscretizeRegionDump`topts}}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PostProcessSemialgebraicRegion",
	"LinearAlgebra`LAPACK`POSV":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`POSV\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`LAPACK`POSV",
	"LinearAlgebra`LAPACK`POTRF":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`POTRF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`LAPACK`POTRF",
	"LinearAlgebra`LAPACK`POTRS":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`POTRS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`LAPACK`POTRS",
	"System`Dump`PowerECSinglePass":"ObjectType: Symbol\nUsage: System`Dump`PowerECSinglePass\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`PowerECSinglePass[System`Dump`f_] := Module[{System`Dump`r1, System`Dump`r2, System`Dump`r3, System`Dump`r4, System`Dump`r5, System`Dump`r6, System`Dump`r7, System`Dump`r71, System`Dump`r8, System`Dump`r9, System`Dump`r10, System`Dump`r11, System`Dump`r12, System`Dump`r13, System`Dump`r14, System`Dump`r15, System`Dump`r16}, System`Dump`r1 = Refine[Developer`ReplaceAllUnheld[System`Dump`f, System`Dump`numlogrule]]; System`Dump`r2 = If[FreeQ[System`Dump`f, Arg], System`Dump`RRUnheld[System`Dump`r1, System`Dump`ru1], System`Dump`PowerECSinglePassArg[System`Dump`r1]]; System`Dump`r3 = System`Dump`RRUnheld[System`Dump`r2, System`Dump`ru2]; System`Dump`r4 = System`Dump`RRUnheld[System`Dump`r3, System`Dump`ru3]; System`Dump`r5 = System`Dump`RRUnheld[System`Dump`r4, System`Dump`ru4]; System`Dump`r6 = System`Dump`RRUnheld[System`Dump`r5, System`Dump`ru5]; System`Dump`r7 = System`Dump`RRUnheld[System`Dump`r6, System`Dump`ru6]; System`Dump`r71 = System`Dump`RRUnheld[System`Dump`r7, System`Dump`ru71]; System`Dump`r8 = System`Dump`flexp[System`Dump`r71]; System`Dump`r9 = System`Dump`RRUnheld[System`Dump`r8, {(System`Dump`a_.)*Floor[(System`Dump`y___) + (System`Dump`r_.)*Floor[System`Dump`c_] + (System`Dump`x___)] :> System`Dump`a*System`Dump`r*Floor[System`Dump`c] + System`Dump`a*Floor[System`Dump`x + System`Dump`y] \/; IntegerQ[System`Dump`r]}]; System`Dump`r10 = System`Dump`RRUnheld[System`Dump`r9, System`Dump`ru7]; System`Dump`r11 = System`Dump`RRUnheld[System`Dump`r10, {Im[Log[Abs[System`Dump`w_]]] :> 0, Im[Log[System`Dump`w_]] :> Arg[System`Dump`w]}]; System`Dump`r12 = System`Dump`RRUnheld[System`Dump`r11, Floor[(Pi + (System`Dump`c_)*Arg[System`Dump`w_])\/(2*Pi)] :> 0 \/; Refine[Element[1\/System`Dump`c, Integers] && 1\/System`Dump`c != 0 && System`Dump`c != 1]]; System`Dump`r13 = System`Dump`RRUnheld[System`Dump`r12, Floor[(Pi - Arg[System`Dump`a_] + Arg[System`Dump`b_])\/(2*Pi)] :> Floor[(Pi + Arg[System`Dump`b])\/(2*Pi)] \/; System`Dump`NonNegative1[System`Dump`a + System`Dump`b] || Assumptions`ANonNegative[System`Dump`a + System`Dump`b]]; System`Dump`r14 = Developer`ReplaceAllUnheld[Refine[System`Dump`r13], System`Dump`aa_Floor :> With[{System`Dump`ans = PiecewiseExpand[System`Dump`aa]}, System`Dump`ans \/; Head[System`Dump`ans] =!= Piecewise]]; System`Dump`r15 = System`Dump`RRUnheld[System`Dump`r14, (-1)^(System`Dump`w_) :> Exp[Pi*I*System`Dump`w]]; System`Dump`r16 = System`Dump`RRUnheld[System`Dump`r15, System`Dump`ru2]; Distribute[System`Dump`ArcTrigOfTrig[System`Dump`r16], Plus, Times]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`PowerECSinglePass",
	"System`Dump`PowerECSinglePassArg":"ObjectType: Symbol\nUsage: System`Dump`PowerECSinglePassArg\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`PowerECSinglePassArg[System`Dump`f1_] := Module[{System`Dump`a1, System`Dump`a2, System`Dump`a3, System`Dump`a4, System`Dump`a5, System`Dump`a6, System`Dump`a7, System`Dump`a8, System`Dump`a9, System`Dump`a10, System`Dump`a11}, System`Dump`a1 = System`Dump`RRUnheld[System`Dump`f1, System`Dump`ruA1]; System`Dump`a2 = System`Dump`RRUnheld[System`Dump`a1, System`Dump`ruA2]; System`Dump`a3 = System`Dump`RRUnheld[System`Dump`a2, System`Dump`ruA3]; System`Dump`a4 = System`Dump`flexp[System`Dump`a3]; System`Dump`a5 = System`Dump`RRUnheld[System`Dump`a4, {(System`Dump`a_.)*Floor[(System`Dump`y___) + (System`Dump`r_.)*Floor[System`Dump`c_] + (System`Dump`x___)] :> System`Dump`a*System`Dump`r*Floor[System`Dump`c] + System`Dump`a*Floor[System`Dump`x + System`Dump`y] \/; IntegerQ[System`Dump`r]}]; System`Dump`a6 = System`Dump`RRUnheld[System`Dump`a5, System`Dump`ru7]; System`Dump`a7 = System`Dump`RRUnheld[System`Dump`a6, {Im[Log[Abs[System`Dump`w_]]] :> 0, Im[Log[System`Dump`w_]] :> Arg[System`Dump`w]}]; System`Dump`a8 = System`Dump`RRUnheld[System`Dump`a7, Floor[(Pi + (System`Dump`c_)*Arg[System`Dump`w_])\/(2*Pi)] :> 0 \/; Refine[Element[1\/System`Dump`c, Integers] && 1\/System`Dump`c != 0 && System`Dump`c != 1]]; System`Dump`a9 = System`Dump`RRUnheld[System`Dump`a8, Floor[(Pi - Arg[System`Dump`a_] + Arg[System`Dump`b_])\/(2*Pi)] :> Floor[(Pi + Arg[System`Dump`b])\/(2*Pi)] \/; System`Dump`NonNegative1[System`Dump`a + System`Dump`b]]; System`Dump`a10 = Developer`ReplaceAllUnheld[Refine[System`Dump`a9], System`Dump`aa_Floor :> With[{System`Dump`ans = PiecewiseExpand[System`Dump`aa]}, System`Dump`ans \/; Head[System`Dump`ans] =!= Piecewise]]; System`Dump`a11 = System`Dump`RRUnheld[System`Dump`a10, (-1)^(System`Dump`w_) :> Exp[Pi*I*System`Dump`w]]; System`Dump`RRUnheld[System`Dump`a11, System`Dump`ruA2]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`PowerECSinglePassArg",
	"Series`Private`PowerFloor":"ObjectType: Symbol\nUsage: Series`Private`PowerFloor\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Series`Private`PowerFloor[System`SeriesDump`w_, System`SeriesDump`cc_, System`SeriesDump`r_, System`SeriesDump`b_, System`SeriesDump`z_, System`SeriesDump`p_, System`SeriesDump`n_] := First[System`SeriesDump`PLFloor[System`SeriesDump`w, System`SeriesDump`cc, System`SeriesDump`r, System`SeriesDump`b, System`SeriesDump`z, System`SeriesDump`p, System`SeriesDump`n]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Series`Private`PowerFloor",
	"Internal`PowerMatrix":"ObjectType: Symbol\nUsage: Internal`PowerMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PowerMatrix",
	"Internal`PowerMatrix1":"ObjectType: Symbol\nUsage: Internal`PowerMatrix1\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PowerMatrix1",
	"Internal`PowerMatrix2":"ObjectType: Symbol\nUsage: Internal`PowerMatrix2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PowerMatrix2",
	"Wavelets`PowerOfTwoPadding":"ObjectType: Symbol\nUsage: Wavelets`PowerOfTwoPadding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`PowerOfTwoPadding",
	"System`PowerReduceDump`PowerReduce":"ObjectType: Symbol\nUsage: System`PowerReduceDump`PowerReduce\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`PowerReduceDump`PowerReduce[System`PowerReduceDump`f_, System`PowerReduceDump`as___] := Module[{System`PowerReduceDump`res, System`PowerReduceDump`res1, System`PowerReduceDump`rl, System`PowerReduceDump`alt}, System`PowerReduceDump`res = System`PowerReduceDump`f \/\/. {(System`PowerReduceDump`e_.)*(System`PowerReduceDump`a_)^(System`PowerReduceDump`b_)*(System`PowerReduceDump`c_)^(System`PowerReduceDump`d_) \/;  !IntegerQ[System`PowerReduceDump`b] &&  !IntegerQ[System`PowerReduceDump`d] &&  !(NumericQ[System`PowerReduceDump`a] && Re[System`PowerReduceDump`a] > 0 && Im[System`PowerReduceDump`a] === 0) &&  !(NumericQ[System`PowerReduceDump`c] && Re[System`PowerReduceDump`c] > 0 && Im[System`PowerReduceDump`c] === 0) && NumberQ[System`PowerReduceDump`e] :> System`PowerReduceDump`e*System`PowerReduceDump`PowerR1[System`PowerReduceDump`a^System`PowerReduceDump`b*System`PowerReduceDump`c^System`PowerReduceDump`d, System`PowerReduceDump`as]}; System`PowerReduceDump`res = System`PowerReduceDump`res \/. {System`PowerReduceDump`ex_Times :> Block[{System`PowerReduceDump`parsedExpr}, System`PowerReduceDump`PowerR1[System`PowerReduceDump`ex, System`PowerReduceDump`as]]}; System`PowerReduceDump`alt = Alternatives @@ Blank \/@ System`PowerReduceDump`ArcList; System`PowerReduceDump`rl = (System`PowerReduceDump`a___) + (System`PowerReduceDump`b1_.)*(System`PowerReduceDump`b:System`PowerReduceDump`alt) + (System`PowerReduceDump`c___) + (System`PowerReduceDump`d1_.)*(System`PowerReduceDump`d:System`PowerReduceDump`alt) + (System`PowerReduceDump`e___) \/; FreeQ[{System`PowerReduceDump`b1, System`PowerReduceDump`b2}, Evaluate[Alternatives @@ System`PowerReduceDump`ArcList]] && LeafCount[System`PowerReduceDump`b] + LeafCount[System`PowerReduceDump`d] < System`PowerReduceDump`$LeafCountBound :> With[{System`PowerReduceDump`ress = System`PowerReduceDump`PowerR1[System`PowerReduceDump`b1*System`PowerReduceDump`b + System`PowerReduceDump`d1*System`PowerReduceDump`d, System`PowerReduceDump`as]}, System`PowerReduceDump`ress + System`PowerReduceDump`a + System`PowerReduceDump`c + System`PowerReduceDump`e \/; System`PowerReduceDump`ress =!= System`PowerReduceDump`b1*System`PowerReduceDump`b + System`PowerReduceDump`d1*System`PowerReduceDump`d]; System`PowerReduceDump`res = FixedPoint[#1 \/. System`PowerReduceDump`rl & , System`PowerReduceDump`res]; System`PowerReduceDump`res1 = System`PowerReduceDump`res \/. {System`PowerReduceDump`Log1 -> Log}; System`PowerReduceDump`res1 = System`PowerReduceDump`res1 \/. {System`PowerReduceDump`Floor1 -> Floor}; System`PowerReduceDump`res1 \/; FreeQ[System`PowerReduceDump`res, System`PowerReduceDump`PowerR1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PowerReduceDump`PowerReduce",
	"ResourceFunctionHelpers`PowerRule":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`PowerRule\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PowerRule[ResourceFunctionHelpers`DerivativeRules`Private`e_Plus, ResourceFunctionHelpers`DerivativeRules`Private`x_Symbol, ResourceFunctionHelpers`DerivativeRules`Private`opts:OptionsPattern[]] := Plus @@ ResourceFunctionHelpers`DerivativeRules`Private`iderivRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x, \"power\", ResourceFunctionHelpers`DerivativeRules`Private`opts]\nResourceFunctionHelpers`PowerRule[ResourceFunctionHelpers`DerivativeRules`Private`e_, ResourceFunctionHelpers`DerivativeRules`Private`x_, ResourceFunctionHelpers`DerivativeRules`Private`opts:OptionsPattern[]] \/; ResourceFunctionHelpers`DerivativeRules`Private`powerRuleQ[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x] := ResourceFunctionHelpers`DerivativeRules`Private`iderivRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x, \"power\", ResourceFunctionHelpers`DerivativeRules`Private`opts]\nResourceFunctionHelpers`PowerRule[ResourceFunctionHelpers`DerivativeRules`Private`e_, ResourceFunctionHelpers`DerivativeRules`Private`x_Symbol, OptionsPattern[]] := With[{ResourceFunctionHelpers`DerivativeRules`Private`res = ResourceFunctionHelpers`DerivativeRules`Private`powerRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x]}, ResourceFunctionHelpers`DerivativeRules`Private`res \/; FreeQ[ResourceFunctionHelpers`DerivativeRules`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PrintRule -> False, PrintNapkin -> False, InactiveInnerDerivatives -> False}\nAttributes: {HoldFirst}\nFullName: ResourceFunctionHelpers`PowerRule",
	"Integrate`Powers":"None",
	"Algebra`Polynomial`PPlus":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PPlus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PPlus",
	"Algebra`Polynomial`PPlusVector":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PPlusVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PPlusVector",
	"Algebra`Polynomial`PPower":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PPower\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PPower",
	"Algebra`Polynomial`PQuotient":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PQuotient\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PQuotient",
	"PlanetaryAstronomy`PreAstronomyData":"ObjectType: Symbol\nUsage: PlanetaryAstronomy`PreAstronomyData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PlanetaryAstronomy`PreAstronomyData[\"Sun\", PlanetaryAstronomy`Private`datelistUT_List, PlanetaryAstronomy`Private`prop_String, PlanetaryAstronomy`Private`opts___] := Module[{PlanetaryAstronomy`Private`jd = PlanetaryAstronomy`Private`DateListToJulianTime[PlanetaryAstronomy`Private`datelistUT], PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, If[PlanetaryAstronomy`Private`jd === $Failed, Return[$Failed]]; {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt} = {\"Longitude\", \"Latitude\", \"Altitude\"} \/. {PlanetaryAstronomy`Private`opts} \/. Quiet[Check[Thread[{\"Latitude\", \"Longitude\", \"Altitude\"} -> PadRight[$GeoLocation \/. {GeoPosition[PlanetaryAstronomy`Private`x_] :> PlanetaryAstronomy`Private`x}, 3]], {\"Altitude\" -> 0}]]; If[MatchQ[PlanetaryAstronomy`Private`prop, \"Altitude\" | \"Azimuth\" | \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\"] &&  !And @@ NumberQ \/@ {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Return[Missing[\"UnknownLocation\"]]]; Replace[PlanetaryAstronomy`Private`FixPAPrecision[Switch[PlanetaryAstronomy`Private`prop, \"RightAscension\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Sun\", \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], \"Declination\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Sun\", \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d], \"Distance\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Sun\", \"EarthEquatorialHourDegree\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"DistanceFromSun\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Sun\", \"SunLBR\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"Position\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Sun\", \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r], \"PositionLightYears\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Sun\", \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> (PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r)\/9460730472580800], \"ApparentMagnitude\", PlanetaryAstronomy`Private`ApparentMagnitudeLP[PlanetaryAstronomy`Private`jd, \"Sun\"], \"Altitude\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Sun\", {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {_, PlanetaryAstronomy`Private`altitude_} :> PlanetaryAstronomy`Private`altitude\/Degree], $Failed], \"Azimuth\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Sun\", {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {PlanetaryAstronomy`Private`azimuth_, _} :> Mod[180 + PlanetaryAstronomy`Private`azimuth\/Degree, 360]], Missing[\"Variable\"]], \"Constellation\", (If[NumberQ[#1] && NumberQ[#2], PlanetaryAstronomy`Private`PAFindConstellation[##1], $Failed] & )[Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Sun\", \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Sun\", \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d]], \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\", Replace[If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], PlanetaryAstronomy`Private`RiseSetsX[\"Sun\", PlanetaryAstronomy`Private`datelistUT, {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> -1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> 1}], 1\/3660, \"Number\" -> Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> 1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> -1}]], $Failed], {_Missing | $Failed -> Missing[\"NotApplicable\"], PlanetaryAstronomy`Private`dl:{__} :> DatePlus[PlanetaryAstronomy`Private`dl, {TimeZone \/. {PlanetaryAstronomy`Private`opts} \/. TimeZone -> $TimeZone, \"Hour\"}]}], \"Speed\", $Failed, _, Missing[\"Variable\"]], (PlanetaryAstronomy`Private`jd - PlanetaryAstronomy`Private`JD2000)\/365250, \"Sun\", PlanetaryAstronomy`Private`prop], $Failed -> Missing[\"Variable\"]]]\nPlanetaryAstronomy`PreAstronomyData[\"Moon\", PlanetaryAstronomy`Private`datelistUT_List, PlanetaryAstronomy`Private`prop_String, PlanetaryAstronomy`Private`opts___] := Module[{PlanetaryAstronomy`Private`jd = PlanetaryAstronomy`Private`DateListToJulianTime[PlanetaryAstronomy`Private`datelistUT], PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, If[PlanetaryAstronomy`Private`jd === $Failed, Return[$Failed]]; {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt} = {\"Longitude\", \"Latitude\", \"Altitude\"} \/. {PlanetaryAstronomy`Private`opts} \/. Quiet[Check[Thread[{\"Latitude\", \"Longitude\", \"Altitude\"} -> PadRight[$GeoLocation \/. {GeoPosition[PlanetaryAstronomy`Private`x_] :> PlanetaryAstronomy`Private`x}, 3]], {\"Altitude\" -> 0}]]; If[MatchQ[PlanetaryAstronomy`Private`prop, \"Altitude\" | \"Azimuth\" | \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\"] &&  !And @@ NumberQ \/@ {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Return[Missing[\"UnknownLocation\"]]]; Replace[PlanetaryAstronomy`Private`FixPAPrecision[Switch[PlanetaryAstronomy`Private`prop, \"RightAscension\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Moon\", \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], \"Declination\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Moon\", \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d], \"Distance\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Moon\", \"EarthEquatorialHourDegree\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"DistanceFromSun\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Moon\", \"SunLBR\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"Position\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Moon\", \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r], \"PositionLightYears\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, \"Moon\", \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> (PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r)\/9460730472580800], \"ApparentMagnitude\", PlanetaryAstronomy`Private`ApparentMagnitudeLP[PlanetaryAstronomy`Private`jd, \"Moon\"], \"Altitude\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Moon\", {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {_, PlanetaryAstronomy`Private`altitude_} :> PlanetaryAstronomy`Private`altitude\/Degree], $Failed], \"Azimuth\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Moon\", {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {PlanetaryAstronomy`Private`azimuth_, _} :> Mod[180 + PlanetaryAstronomy`Private`azimuth\/Degree, 360]], Missing[\"Variable\"]], \"Constellation\", (If[NumberQ[#1] && NumberQ[#2], PlanetaryAstronomy`Private`PAFindConstellation[##1], $Failed] & )[Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Moon\", \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, \"Moon\", \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d]], \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\", Replace[If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], PlanetaryAstronomy`Private`RiseSetsX[\"Moon\", PlanetaryAstronomy`Private`datelistUT, {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> -1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> 1}], 1\/3660, \"Number\" -> Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> 1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> -1}]], $Failed], {_Missing | $Failed -> Missing[\"NotApplicable\"], PlanetaryAstronomy`Private`dl:{__} :> DatePlus[PlanetaryAstronomy`Private`dl, {TimeZone \/. {PlanetaryAstronomy`Private`opts} \/. TimeZone -> $TimeZone, \"Hour\"}]}], \"Speed\", $Failed, _, Missing[\"Variable\"]], (PlanetaryAstronomy`Private`jd - PlanetaryAstronomy`Private`JD2000)\/365250, \"Moon\", PlanetaryAstronomy`Private`prop], $Failed -> Missing[\"Variable\"]]]\nPlanetaryAstronomy`PreAstronomyData[PlanetaryAstronomy`Private`obj:\"Mercury\" | \"Venus\" | \"Earth\" | \"Mars\" | \"Jupiter\" | \"Saturn\" | \"Uranus\" | \"Neptune\" | \"Pluto\", PlanetaryAstronomy`Private`datelistUT_List, PlanetaryAstronomy`Private`prop_String, PlanetaryAstronomy`Private`opts___] := Module[{PlanetaryAstronomy`Private`jd = PlanetaryAstronomy`Private`DateListToJulianTime[PlanetaryAstronomy`Private`datelistUT], PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, If[PlanetaryAstronomy`Private`jd === $Failed, Return[$Failed]]; {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt} = {\"Longitude\", \"Latitude\", \"Altitude\"} \/. {PlanetaryAstronomy`Private`opts} \/. Quiet[Check[Thread[{\"Latitude\", \"Longitude\", \"Altitude\"} -> PadRight[$GeoLocation \/. {GeoPosition[PlanetaryAstronomy`Private`x_] :> PlanetaryAstronomy`Private`x}, 3]], {\"Altitude\" -> 0}]]; If[MatchQ[PlanetaryAstronomy`Private`prop, \"Altitude\" | \"Azimuth\" | \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\"] &&  !And @@ NumberQ \/@ {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Return[Missing[\"UnknownLocation\"]]]; Replace[PlanetaryAstronomy`Private`FixPAPrecision[Switch[PlanetaryAstronomy`Private`prop, \"RightAscension\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], \"Declination\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d], \"Distance\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"DistanceFromSun\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"SunLBR\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"Position\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r], \"PositionLightYears\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> (PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r)\/9460730472580800], \"ApparentMagnitude\", PlanetaryAstronomy`Private`ApparentMagnitudeLP[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj], \"Altitude\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {_, PlanetaryAstronomy`Private`altitude_} :> PlanetaryAstronomy`Private`altitude\/Degree], $Failed], \"Azimuth\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {PlanetaryAstronomy`Private`azimuth_, _} :> Mod[180 + PlanetaryAstronomy`Private`azimuth\/Degree, 360]], Missing[\"Variable\"]], \"Constellation\", (If[NumberQ[#1] && NumberQ[#2], PlanetaryAstronomy`Private`PAFindConstellation[##1], $Failed] & )[Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d]], \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\", Replace[If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], PlanetaryAstronomy`Private`RiseSetsX[PlanetaryAstronomy`Private`obj, PlanetaryAstronomy`Private`datelistUT, {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> -1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> 1}], 1\/3660, \"Number\" -> Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> 1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> -1}]], $Failed], {_Missing | $Failed -> Missing[\"NotApplicable\"], PlanetaryAstronomy`Private`dl:{__} :> DatePlus[PlanetaryAstronomy`Private`dl, {TimeZone \/. {PlanetaryAstronomy`Private`opts} \/. TimeZone -> $TimeZone, \"Hour\"}]}], \"Speed\", PlanetaryAstronomy`Private`InstantaneousVelocityAroundSun[PlanetaryAstronomy`Private`obj, PlanetaryAstronomy`Private`jd], _, Missing[\"Variable\"]], (PlanetaryAstronomy`Private`jd - PlanetaryAstronomy`Private`JD2000)\/365250, PlanetaryAstronomy`Private`obj, PlanetaryAstronomy`Private`prop], $Failed -> Missing[\"Variable\"]]]\nPlanetaryAstronomy`PreAstronomyData[PlanetaryAstronomy`Private`obj_, PlanetaryAstronomy`Private`datelistUT_List, PlanetaryAstronomy`Private`prop_String, PlanetaryAstronomy`Private`opts___] := Module[{PlanetaryAstronomy`Private`jd = PlanetaryAstronomy`Private`DateListToJulianTime[PlanetaryAstronomy`Private`datelistUT], PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, If[PlanetaryAstronomy`Private`jd === $Failed, Return[$Failed]]; {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt} = {\"Longitude\", \"Latitude\", \"Altitude\"} \/. {PlanetaryAstronomy`Private`opts} \/. Quiet[Check[Thread[{\"Latitude\", \"Longitude\", \"Altitude\"} -> PadRight[$GeoLocation \/. {GeoPosition[PlanetaryAstronomy`Private`x_] :> PlanetaryAstronomy`Private`x}, 3]], {\"Altitude\" -> 0}]]; If[MatchQ[PlanetaryAstronomy`Private`prop, \"Altitude\" | \"Azimuth\" | \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\"] &&  !And @@ NumberQ \/@ {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Return[Missing[\"UnknownLocation\"]]]; Replace[PlanetaryAstronomy`Private`FixPAPrecision[Switch[PlanetaryAstronomy`Private`prop, \"RightAscension\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], \"Declination\", Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d], \"Distance\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"DistanceFromSun\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"SunLBR\"], PlanetaryAstronomy`Private`PASystem[_, _, {_, _, PlanetaryAstronomy`Private`d_}] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`d], \"Position\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r], \"PositionLightYears\", Replace[PlanetaryAstronomy`Private`PACoordinatesX[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"Sun\"], PlanetaryAstronomy`Private`PASystem[_, _, PlanetaryAstronomy`Private`r_] :> (PlanetaryAstronomy`Private`AUInMeters*PlanetaryAstronomy`Private`r)\/9460730472580800], \"ApparentMagnitude\", PlanetaryAstronomy`Private`ApparentMagnitudeLP[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj], \"Altitude\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {_, PlanetaryAstronomy`Private`altitude_} :> PlanetaryAstronomy`Private`altitude\/Degree], $Failed], \"Azimuth\", If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, {\"EarthApparent\", {PlanetaryAstronomy`Private`long*Degree, PlanetaryAstronomy`Private`lat*Degree, PlanetaryAstronomy`Private`alt}}], {PlanetaryAstronomy`Private`azimuth_, _} :> Mod[180 + PlanetaryAstronomy`Private`azimuth\/Degree, 360]], Missing[\"Variable\"]], \"Constellation\", (If[NumberQ[#1] && NumberQ[#2], PlanetaryAstronomy`Private`PAFindConstellation[##1], $Failed] & )[Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {PlanetaryAstronomy`Private`r_, _} :> PlanetaryAstronomy`Private`r], Replace[PlanetaryAstronomy`Private`PACoordinatesY[PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`obj, \"EarthEquatorialHourDegree\"], {_, PlanetaryAstronomy`Private`d_} :> PlanetaryAstronomy`Private`d]], \"NextRiseTime\" | \"NextSetTime\" | \"LastRiseTime\" | \"LastSetTime\", Replace[If[NumberQ[PlanetaryAstronomy`Private`long] && NumberQ[PlanetaryAstronomy`Private`lat], PlanetaryAstronomy`Private`RiseSetsX[PlanetaryAstronomy`Private`obj, PlanetaryAstronomy`Private`datelistUT, {PlanetaryAstronomy`Private`long, PlanetaryAstronomy`Private`lat, PlanetaryAstronomy`Private`alt}, Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> -1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> 1}], 1\/3660, \"Number\" -> Replace[PlanetaryAstronomy`Private`prop, {\"NextRiseTime\" -> 1, \"NextSetTime\" -> 1, \"LastRiseTime\" -> -1, \"LastSetTime\" -> -1}]], $Failed], {_Missing | $Failed -> Missing[\"NotApplicable\"], PlanetaryAstronomy`Private`dl:{__} :> DatePlus[PlanetaryAstronomy`Private`dl, {TimeZone \/. {PlanetaryAstronomy`Private`opts} \/. TimeZone -> $TimeZone, \"Hour\"}]}], \"Speed\", If[AstronomicalData[PlanetaryAstronomy`Private`obj, \"OrbitCenter\"] === \"Sun\", PlanetaryAstronomy`Private`InstantaneousVelocityAroundSun[PlanetaryAstronomy`Private`obj, PlanetaryAstronomy`Private`jd], $Failed], _, Missing[\"Variable\"]], (PlanetaryAstronomy`Private`jd - PlanetaryAstronomy`Private`JD2000)\/365250, PlanetaryAstronomy`Private`obj, PlanetaryAstronomy`Private`prop], $Failed -> Missing[\"Variable\"]]]\nPlanetaryAstronomy`PreAstronomyData[___] := Missing[\"Variable\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PlanetaryAstronomy`PreAstronomyData",
	"NDSolve`FEM`PreBoundaryCondition":"ObjectType: Symbol\nUsage: NDSolve`FEM`PreBoundaryCondition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`PreBoundaryCondition",
	"Internal`PrecAccur":"ObjectType: Symbol\nUsage: Internal`PrecAccur\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PrecAccur",
	"SurfaceGraphics`Methods`PrecisionGoal":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PrecisionGoal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PrecisionGoal",
	"Wavelets`WaveletUtilities`PrecisionQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`PrecisionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`PrecisionQ[Wavelets`WaveletUtilities`Dump`p_] := $MinPrecision <= Wavelets`WaveletUtilities`Dump`p <= $MaxPrecision\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`PrecisionQ",
	"LinearAlgebra`LinearSolve`PreconditionerMethod":"ObjectType: Symbol\nUsage: LinearAlgebra`LinearSolve`PreconditionerMethod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FillIn -> Automatic, PermutationTolerance -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: LinearAlgebra`LinearSolve`PreconditionerMethod",
	"IMAQ`Driver`Preconfigure":"ObjectType: Symbol\nUsage: IMAQ`Driver`Preconfigure\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: IMAQ`Driver`Preconfigure[ImageAcquisition`CaptureDump`dev_] := Module[{ImageAcquisition`CaptureDump`index, ImageAcquisition`CaptureDump`devProps, ImageAcquisition`CaptureDump`props, ImageAcquisition`CaptureDump`args}, ImageAcquisition`CaptureDump`index = First[DeviceFramework`DeviceHandle[ImageAcquisition`CaptureDump`dev]]; ImageAcquisition`CaptureDump`devProps = IMAQ`GetInternalDevProp[ImageAcquisition`CaptureDump`index]; DeviceFramework`DeviceSetProperty[ImageAcquisition`CaptureDump`dev, \"DeviceName\", Lookup[ImageAcquisition`CaptureDump`devProps, \"ProductName\", \"\"]]; DeviceFramework`DeviceSetProperty[ImageAcquisition`CaptureDump`dev, \"SupportedCameraResolutions\", Lookup[ImageAcquisition`CaptureDump`devProps, \"SupportedResolutions\", {}]]; ImageAcquisition`CaptureDump`props = {\"FrameRate\", \"RasterSize\", \"Timeout\", \"ImageCaptureFunction\"}; ImageAcquisition`CaptureDump`args = Select[DeviceFramework`DeviceOpenArguments[ImageAcquisition`CaptureDump`dev], MatchQ[#1, _Rule] & ]; MapThread[DeviceFramework`DeviceSetProperty[ImageAcquisition`CaptureDump`dev, #1, #2] & , {ImageAcquisition`CaptureDump`props, Lookup[KeyMap[ToString, Association[Join[IMAQ`Driver`$Properties, ImageAcquisition`CaptureDump`args]]], ImageAcquisition`CaptureDump`props]}]; Return[All]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: IMAQ`Driver`Preconfigure",
	"NDSolve`PredicateBoundaryFunction":"ObjectType: Symbol\nUsage: NDSolve`PredicateBoundaryFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: NDSolve`PredicateBoundaryFunction",
	"PredictiveInterface`PredictionControls":"ObjectType: Symbol\nUsage: PredictiveInterface`PredictionControls\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PredictiveInterface`PredictionControls[PredictionStartupDump`args___] := Module[{PredictionStartupDump`vals, PredictionStartupDump`form}, PredictionStartupDump`vals = DownValues[PredictiveInterface`PredictionControls]; PredictionStartupDump`form = FormatValues[PredictiveInterface`PredictionControls]; PredictionStartupDump`LoadPredictiveInterface[]; If[PredictionStartupDump`vals =!= DownValues[PredictiveInterface`PredictionControls] || PredictionStartupDump`form =!= FormatValues[PredictiveInterface`PredictionControls], PredictiveInterface`PredictionControls[PredictionStartupDump`args]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PredictiveInterface`PredictionControls",
	"MathLink`PreemptionEnabledQ":"ObjectType: Symbol\nUsage: MathLink`PreemptionEnabledQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MathLink`PreemptionEnabledQ",
	"MathLink`PreemptProtect":"ObjectType: Symbol\nUsage: MathLink`PreemptProtect\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: MathLink`PreemptProtect",
	"ResourceLocator`PreferencesDelete":"ObjectType: Symbol\nUsage: PreferencesDelete[ appname] deletes the preference expression for the given application.PreferencesDelete[ appname, categeory delets the preferences for a given category.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceLocator`PreferencesDelete[ResourceLocator`Private`name_String, ResourceLocator`Private`category_String:\"Default\"] := Module[{ResourceLocator`Private`prefFile}, ResourceLocator`Private`prefFile = ResourceLocator`Private`getPreferenceFile[ResourceLocator`Private`name, ResourceLocator`Private`category, ResourceLocator`PreferencesDelete]; If[ResourceLocator`Private`prefFile === $Failed, Return[$Failed]]; If[FileType[ResourceLocator`Private`prefFile] === File, DeleteFile[ResourceLocator`Private`prefFile]]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceLocator`PreferencesDelete",
	"ResourceLocator`PreferencesRead":"ObjectType: Symbol\nUsage: PreferencesRead[ appname] returns the preference expression for the given application.PreferencesRead[ appname, categeory] returns the preferences for a given category.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceLocator`PreferencesRead[ResourceLocator`Private`name_String, ResourceLocator`Private`category_String:\"Default\"] := Module[{ResourceLocator`Private`prefFile}, ResourceLocator`Private`prefFile = ResourceLocator`Private`getPreferenceFile[ResourceLocator`Private`name, ResourceLocator`Private`category, ResourceLocator`PreferencesRead]; If[ResourceLocator`Private`prefFile === $Failed, Return[$Failed]]; If[FileType[ResourceLocator`Private`prefFile] === None, {}, Get[ResourceLocator`Private`prefFile]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceLocator`PreferencesRead",
	"FrontEnd`PreferencesSettings":"ObjectType: Symbol\nUsage: FrontEnd`PreferencesSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FrontEnd`PreferencesSettings",
	"ResourceLocator`PreferencesWrite":"ObjectType: Symbol\nUsage: PreferencesWrite[ appname, expr] saves the preference expression for the given application.PreferencesWrite[ appname, categeory, expr] writes the preferences for a given category.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceLocator`PreferencesWrite[ResourceLocator`Private`name_String, ResourceLocator`Private`category_String:\"Default\", ResourceLocator`Private`expr_] := Module[{ResourceLocator`Private`prefFile}, ResourceLocator`Private`prefFile = ResourceLocator`Private`getPreferenceFile[ResourceLocator`Private`name, ResourceLocator`Private`category, ResourceLocator`PreferencesWrite]; If[ResourceLocator`Private`prefFile === $Failed, Return[$Failed]]; Write[ResourceLocator`Private`prefFile, ResourceLocator`Private`expr]; Close[ResourceLocator`Private`prefFile]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceLocator`PreferencesWrite",
	"StartUp`Initialization`PreInitialization":"ObjectType: Symbol\nUsage: StartUp`Initialization`PreInitialization\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StartUp`Initialization`PreInitialization[] := With[{}, StartUp`Initialization`PhaseB = Initialize[\"StartUp`Initialization`$BootstrapPath\", {\"Installation\"}]; With[{StartUp`Initialization`KernelInit`Dump`initPath = PersistenceLocations`ValidateLocations[StartUp`Initialization`$BootstrapPath]}, StartUp`Initialization`Phase0 = (Initialize[#1, StartUp`Initialization`KernelInit`Dump`initPath] & ) \/@ {\"System`$PersistenceBase\", \"System`$PersistencePath\", Nothing}; ]; StartUp`Initialization`Phase1 = (Initialize[#1, $PersistencePath] & ) \/@ {\"System`$PreInitialization\", \"System`$PersistenceBase\", \"System`$PersistencePath\", Nothing}; StartUp`Initialization`KernelInit`Dump`doInitList[$PreInitialization]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StartUp`Initialization`PreInitialization",
	"Internal`PreloadEntityNameCache":"ObjectType: Symbol\nUsage: Internal`PreloadEntityNameCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PreloadEntityNameCache[EntityFramework`Private`expr_] := (CommonName[Cases[Hold[EntityFramework`Private`expr], _Entity, Infinity]]; )\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PreloadEntityNameCache",
	"System`Utilities`PreloadICULibraries":"ObjectType: Symbol\nUsage: System`Utilities`PreloadICULibraries\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Utilities`PreloadICULibraries[System`DateStringDump`caller_] := Block[{System`DateStringDump`res}, System`DateStringDump`res = Quiet[Check[Switch[$OperatingSystem, \"Windows\", LibraryLoad[\"icudt62\"]; LibraryLoad[\"icuuc62\"]; LibraryLoad[\"icuin62\"], \"Unix\", If[$SystemID === \"Linux-ARM\", True, LibraryLoad[\"libicudata\"]; LibraryLoad[\"libicuuc\"]; LibraryLoad[\"libicui18n\"]; LibraryLoad[\"libicuio\"]; LibraryLoad[\"libicutu\"]; Quiet[LibraryLoad[\"libicutest\"]]; ], \"MacOSX\", LibraryLoad[\"libicudata\"]; LibraryLoad[\"libicuuc\"]; LibraryLoad[\"libicui18n\"]; LibraryLoad[\"libicuio\"]; LibraryLoad[\"libicutu\"]; Quiet[LibraryLoad[\"libicutest\"]]; , \"iOS\", LibraryLoad[\"icu\"], _, {$Failed}], $Failed]]; If[FreeQ[System`DateStringDump`res, $Failed] && FreeQ[System`DateStringDump`res, LibraryLoad], True, Message[System`DateStringDump`caller::prs]; $Failed, Message[System`DateStringDump`caller::prs]; $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`PreloadICULibraries",
	"PlaneGeometry`PrepareInputForProver":"ObjectType: Symbol\nUsage: PlaneGeometry`PrepareInputForProver\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PlaneGeometry`PrepareInputForProver[HoldPattern[GeometricScene[{PlaneGeometry`GeometrySceneDrawerDump`points_, PlaneGeometry`GeometrySceneDrawerDump`quantities_}, PlaneGeometry`GeometrySceneDrawerDump`scene_List, PlaneGeometry`GeometrySceneDrawerDump`con___]]] := With[{PlaneGeometry`GeometrySceneDrawerDump`geoDescription = PlaneGeometry`GeometrySceneDrawerDump`legalizeScene[{{PlaneGeometry`GeometrySceneDrawerDump`points, PlaneGeometry`GeometrySceneDrawerDump`quantities}, Hold[PlaneGeometry`GeometrySceneDrawerDump`scene]}, {}][[5]]}, Module[{PlaneGeometry`GeometrySceneDrawerDump`headAssoc, PlaneGeometry`GeometrySceneDrawerDump`equalityInfo, PlaneGeometry`GeometrySceneDrawerDump`equalityInfoAssoc, PlaneGeometry`GeometrySceneDrawerDump`sceneInputs, PlaneGeometry`GeometrySceneDrawerDump`proverAssoc}, PlaneGeometry`GeometrySceneDrawerDump`headAssoc = PlaneGeometry`GeometrySceneDrawerDump`createHeadAssoc[PlaneGeometry`GeometrySceneDrawerDump`geoDescription]; PlaneGeometry`GeometrySceneDrawerDump`equalityInfo = PlaneGeometry`GeometrySceneDrawerDump`createEqualityInfo[PlaneGeometry`GeometrySceneDrawerDump`headAssoc[\"equal\"]] \/@ Position[Apply[List, PlaneGeometry`GeometrySceneDrawerDump`headAssoc[\"equal\"], {1}], _?PlaneGeometry`GeometrySceneDrawerDump`placeholderQ, 2]; PlaneGeometry`GeometrySceneDrawerDump`equalityInfoAssoc = Association @@ Cases[PlaneGeometry`GeometrySceneDrawerDump`equalityInfo, HoldPattern[_ -> {_, PlaneGeometry`GeometrySceneDrawerDump`geoCircleThrough | PlaneGeometry`GeometrySceneDrawerDump`geoArc | Disk | PlaneGeometry`GeometrySceneDrawerDump`geoSlice | C[\"GeometricPoint\"] | PlaneGeometry`GeometrySceneDrawerDump`geoHalfLine | PlaneGeometry`GeometrySceneDrawerDump`geoInfiniteLine | Line | List | Point | Polygon, _}]]; PlaneGeometry`GeometrySceneDrawerDump`sceneInputs = DeleteCases[PlaneGeometry`GeometrySceneDrawerDump`createSceneInputs[PlaneGeometry`GeometrySceneDrawerDump`headAssoc, PlaneGeometry`GeometrySceneDrawerDump`equalityInfo, PlaneGeometry`GeometrySceneDrawerDump`equalityInfoAssoc], True]; PlaneGeometry`GeometrySceneDrawerDump`proverAssoc = Join[Association[\"names\" -> {}, \"relations\" -> {}, \"hypotheses\" -> {}], GroupBy[PlaneGeometry`GeometrySceneDrawerDump`sceneInputs, Switch[Head[#1], Rule, \"relations\", PlaneGeometry`GeometrySceneDrawerDump`tooltipRule, \"names\", _, \"hypotheses\"] & ]] \/\/. Join[{C[\"GeometricPoint\"][PlaneGeometry`GeometrySceneDrawerDump`args___][PlaneGeometry`GeometrySceneDrawerDump`i_Integer] :> Indexed[C[\"GeometricPoint\"][PlaneGeometry`GeometrySceneDrawerDump`args], PlaneGeometry`GeometrySceneDrawerDump`i]}, Thread[C[\"GeometricPoint\"] \/@ PlaneGeometry`GeometrySceneDrawerDump`points -> PlaneGeometry`GeometrySceneDrawerDump`points], Thread[C[\"GeometricQuantity\"] \/@ PlaneGeometry`GeometrySceneDrawerDump`quantities -> PlaneGeometry`GeometrySceneDrawerDump`quantities], {PlaneGeometry`GeometrySceneDrawerDump`tooltipRule[PlaneGeometry`GeometrySceneDrawerDump`x_] :> PlaneGeometry`GeometrySceneDrawerDump`x}]; PlaneGeometry`GeometrySceneDrawerDump`proverAssoc = PlaneGeometry`GeometrySceneDrawerDump`proverAssoc \/\/. DeleteCases[PlaneGeometry`GeometrySceneDrawerDump`proverAssoc[\"relations\"], HoldPattern[_?NumericQ | (PlaneGeometry`GeometrySceneDrawerDump`param_ \/; MemberQ[Join[PlaneGeometry`GeometrySceneDrawerDump`points, PlaneGeometry`GeometrySceneDrawerDump`quantities], PlaneGeometry`GeometrySceneDrawerDump`param]) | (PlaneGeometry`GeometrySceneDrawerDump`coords:{_, _} \/; AllTrue[PlaneGeometry`GeometrySceneDrawerDump`coords, NumericQ[#1] || MemberQ[Join[PlaneGeometry`GeometrySceneDrawerDump`points, PlaneGeometry`GeometrySceneDrawerDump`quantities], #1] & ]) -> _] | HoldPattern[_ -> PlaneGeometry`GeometrySceneDrawerDump`geoStyle[___]]]; PlaneGeometry`GeometrySceneDrawerDump`proverAssoc[\"hypotheses\"] = DeleteDuplicates[Complement[Join[PlaneGeometry`GeometrySceneDrawerDump`proverAssoc[\"hypotheses\"], PlaneGeometry`GeometrySceneDrawerDump`proverAssoc[\"relations\"] \/. {HoldPattern[PlaneGeometry`GeometrySceneDrawerDump`a_ -> PlaneGeometry`GeometrySceneDrawerDump`a_] :> PlaneGeometry`GeometrySceneDrawerDump`a, HoldPattern[PlaneGeometry`GeometrySceneDrawerDump`a_ -> PlaneGeometry`GeometrySceneDrawerDump`b_] :> PlaneGeometry`GeometrySceneDrawerDump`a == PlaneGeometry`GeometrySceneDrawerDump`b}], PlaneGeometry`GeometrySceneDrawerDump`points, PlaneGeometry`GeometrySceneDrawerDump`quantities]]; (PlaneGeometry`GeometrySceneDrawerDump`proverAssoc \/. C[_][___] :> Sequence[]) \/@ {\"names\", \"hypotheses\"} \/. {GeometricAssertion[{PlaneGeometry`GeometrySceneDrawerDump`prop_}] :> GeometricAssertion[PlaneGeometry`GeometrySceneDrawerDump`prop], HoldPattern[(PlaneGeometry`GeometrySceneDrawerDump`x_) == PlaneGeometry`GeometrySceneDrawerDump`geoStyle[___]] :> PlaneGeometry`GeometrySceneDrawerDump`x, PlaneGeometry`GeometrySceneDrawerDump`geoArcLength -> Inactive[ArcLength], PlaneGeometry`GeometrySceneDrawerDump`geoArea -> Inactive[Area], PlaneGeometry`GeometrySceneDrawerDump`geoPerimeter -> Inactive[Perimeter], PlaneGeometry`GeometrySceneDrawerDump`geoEuclideanDistance -> Inactive[EuclideanDistance], PlaneGeometry`GeometrySceneDrawerDump`geoInfiniteLine -> Inactive[InfiniteLine], PlaneGeometry`GeometrySceneDrawerDump`geoHalfLine -> Inactive[HalfLine], PlaneGeometry`GeometrySceneDrawerDump`geoTriangleData -> Inactive[\"TriangleData\"], PlaneGeometry`GeometrySceneDrawerDump`geoRegionBoundary -> Inactive[RegionBoundary], PlaneGeometry`GeometrySceneDrawerDump`geoRegionCentroid -> Inactive[RegionCentroid], PlaneGeometry`GeometrySceneDrawerDump`geoRegionDistance -> Inactive[RegionDistance], PlaneGeometry`GeometrySceneDrawerDump`geoCircleThrough -> Inactive[CircleThrough], PlaneGeometry`GeometrySceneDrawerDump`geoRegionMember -> Inactive[RegionMember], PlaneGeometry`GeometrySceneDrawerDump`geoRegionNearest -> Inactive[RegionNearest], PlaneGeometry`GeometrySceneDrawerDump`geoRegionMeasure -> Inactive[RegionMeasure], PlaneGeometry`GeometrySceneDrawerDump`geoSignedRegionDistance -> Inactive[SignedRegionDistance], PlaneGeometry`GeometrySceneDrawerDump`geoCircumsphere -> Inactive[Circumsphere], PlaneGeometry`GeometrySceneDrawerDump`geoInsphere -> Inactive[Insphere], PlaneGeometry`GeometrySceneDrawerDump`geoRectangle -> Inactive[Rectangle], PlaneGeometry`GeometrySceneDrawerDump`geoParallelogram -> Inactive[Parallelogram], PlaneGeometry`GeometrySceneDrawerDump`geoRegularPolygon -> Inactive[RegularPolygon], PlaneGeometry`GeometrySceneDrawerDump`geoVectorAngle -> Inactive[VectorAngle], PlaneGeometry`GeometrySceneDrawerDump`geoPlanarAngle -> Inactive[PlanarAngle], PlaneGeometry`GeometrySceneDrawerDump`geoPolygonAngle -> Inactive[PolygonAngle], PlaneGeometry`GeometrySceneDrawerDump`geoAngleBisector -> Inactive[AngleBisector], PlaneGeometry`GeometrySceneDrawerDump`geoPerpendicularBisector -> Inactive[PerpendicularBisector], PlaneGeometry`GeometrySceneDrawerDump`geoMidpoint -> Inactive[Midpoint], PlaneGeometry`GeometrySceneDrawerDump`geoArc -> Circle, PlaneGeometry`GeometrySceneDrawerDump`geoSlice -> Disk}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PlaneGeometry`PrepareInputForProver",
	"Reduce`PrepElem":"ObjectType: Symbol\nUsage: Reduce`PrepElem\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PrepElem[System`PrepElemDump`elems_, System`PrepElemDump`assum_, System`PrepElemDump`vars_, False] := Module[{System`PrepElemDump`erls, System`PrepElemDump`nerls, System`PrepElemDump`nelem, System`PrepElemDump`tmp, System`PrepElemDump`pp, System`PrepElemDump`Z}, System`PrepElemDump`erls = Select[System`PrepElemDump`elems, Length[#1] == 2 && #1[[2]] === Reals & ]; System`PrepElemDump`nelem = Complement[System`PrepElemDump`elems, System`PrepElemDump`erls]; System`PrepElemDump`nerls = Select[System`PrepElemDump`erls, Head[#1] === NotElement & ]; System`PrepElemDump`erls = Select[System`PrepElemDump`erls, Head[#1] =!= NotElement & ]; System`PrepElemDump`erls = (If[Head[#1[[1]]] === Alternatives, Sequence @@ #1[[1]], #1[[1]]] & ) \/@ System`PrepElemDump`erls; System`PrepElemDump`nerls = (If[Head[#1[[1]]] === Alternatives, Sequence @@ #1[[1]], #1[[1]]] & ) \/@ System`PrepElemDump`nerls; System`PrepElemDump`tmp = Select[System`PrepElemDump`erls, Head[#1] === Reduce`ProductExp && Length[#1] == 1 & ]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`erls = Complement[System`PrepElemDump`erls, System`PrepElemDump`tmp]; System`PrepElemDump`tmp = First \/@ System`PrepElemDump`tmp; Block[{$Assumptions = System`PrepElemDump`assum && Element[System`PrepElemDump`erls, Reals]}, System`PrepElemDump`tmp = Select[System`PrepElemDump`tmp, Refine[Element[#1, Reals]] =!= True & ]]; System`PrepElemDump`erls = Join[System`PrepElemDump`erls, Reduce`ProductExp \/@ System`PrepElemDump`tmp]]; System`PrepElemDump`tmp = System`PrepElemDump`Z \/@ Range[Length[System`PrepElemDump`erls] + Length[System`PrepElemDump`nerls]]; Block[{$Assumptions = System`PrepElemDump`assum}, System`PrepElemDump`nelem = Select[System`PrepElemDump`nelem, Refine[#1] =!= True & ]; System`PrepElemDump`erls = Refine[MapThread[System`PrepElemDump`prelem, {System`PrepElemDump`erls, Take[System`PrepElemDump`tmp, Length[System`PrepElemDump`erls]]}]]; System`PrepElemDump`nerls = Refine[MapThread[System`PrepElemDump`prnelem, {System`PrepElemDump`nerls, Drop[System`PrepElemDump`tmp, Length[System`PrepElemDump`erls]]}]]]; If[MemberQ[System`PrepElemDump`nelem, False] || MemberQ[System`PrepElemDump`erls, False] || MemberQ[System`PrepElemDump`nerls, False], Return[{{}, False, System`PrepElemDump`Z}]]; System`PrepElemDump`tmp = Union @@ Select[System`PrepElemDump`erls, ListQ]; System`PrepElemDump`erls = And @@ Select[System`PrepElemDump`erls,  !ListQ[#1] & ]; If[System`PrepElemDump`erls === False, Return[{{}, False, System`PrepElemDump`Z}]]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`pp = Select[System`PrepElemDump`tmp, PolynomialQ[#1, System`PrepElemDump`vars] & ]; If[Length[System`PrepElemDump`pp] > 0, System`PrepElemDump`erls = System`PrepElemDump`erls && And @@ (Im[#1] == 0 & ) \/@ System`PrepElemDump`pp; System`PrepElemDump`tmp = Complement[System`PrepElemDump`tmp, System`PrepElemDump`pp]]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`nelem = Append[System`PrepElemDump`nelem, Element[System`PrepElemDump`tmp, Reals]]]]; System`PrepElemDump`erls = If[Head[System`PrepElemDump`erls] === And, List @@ System`PrepElemDump`erls, {System`PrepElemDump`erls}]; System`PrepElemDump`tmp = Select[System`PrepElemDump`erls, Head[#1] === NotElement & ]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`nelem = Join[System`PrepElemDump`nelem, System`PrepElemDump`tmp]]; System`PrepElemDump`erls = And @@ Select[System`PrepElemDump`erls, Head[#1] =!= NotElement & ]; System`PrepElemDump`tmp = Union @@ Select[System`PrepElemDump`nerls, ListQ]; System`PrepElemDump`nerls = And @@ Select[System`PrepElemDump`nerls,  !ListQ[#1] & ]; If[System`PrepElemDump`nerls === False, Return[{{}, False, System`PrepElemDump`Z}]]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`pp = Select[System`PrepElemDump`tmp, PolynomialQ[#1, System`PrepElemDump`vars] & ]; If[Length[System`PrepElemDump`pp] > 0, System`PrepElemDump`nerls = System`PrepElemDump`nerls && And @@ (Im[#1] != 0 & ) \/@ System`PrepElemDump`pp; System`PrepElemDump`tmp = Complement[System`PrepElemDump`tmp, System`PrepElemDump`pp]]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`nelem = Append[System`PrepElemDump`nelem, NotElement[System`PrepElemDump`tmp, Reals]]]]; System`PrepElemDump`nerls = If[Head[System`PrepElemDump`nerls] === And, List @@ System`PrepElemDump`nerls, {System`PrepElemDump`nerls}]; System`PrepElemDump`tmp = Select[System`PrepElemDump`nerls, Head[#1] === NotElement & ]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`nelem = Join[System`PrepElemDump`nelem, System`PrepElemDump`tmp]]; System`PrepElemDump`nerls = And @@ Select[System`PrepElemDump`nerls, Head[#1] =!= NotElement & ]; System`PrepElemDump`tmp = System`PrepElemDump`erls && System`PrepElemDump`nerls; {System`PrepElemDump`nelem, System`PrepElemDump`tmp, System`PrepElemDump`Z}]\nReduce`PrepElem[System`PrepElemDump`elems_, System`PrepElemDump`assum_, System`PrepElemDump`vars_, True] := Module[{System`PrepElemDump`erls, System`PrepElemDump`nelem, System`PrepElemDump`tmp, System`PrepElemDump`Z}, System`PrepElemDump`erls = Select[System`PrepElemDump`elems, Length[#1] == 2 && #1[[2]] === Reals & ]; System`PrepElemDump`nelem = Complement[System`PrepElemDump`elems, System`PrepElemDump`erls]; If[Select[System`PrepElemDump`erls, Head[#1] === NotElement & ] =!= {}, Return[{{}, False, System`PrepElemDump`Z}]]; System`PrepElemDump`erls = (If[Head[#1[[1]]] === Alternatives, Sequence @@ #1[[1]], #1[[1]]] & ) \/@ System`PrepElemDump`erls; Block[{$Assumptions = System`PrepElemDump`assum}, System`PrepElemDump`nelem = Select[System`PrepElemDump`nelem, Refine[#1] =!= True & ]; System`PrepElemDump`erls = Refine[(System`PrepElemDump`ddrealcondext[#1, System`PrepElemDump`vars, System`PrepElemDump`Z] & ) \/@ System`PrepElemDump`erls]]; If[MemberQ[System`PrepElemDump`nelem, False], Return[{{}, False, System`PrepElemDump`Z}]]; System`PrepElemDump`tmp = Union @@ Select[System`PrepElemDump`erls, ListQ]; System`PrepElemDump`erls = And @@ Select[System`PrepElemDump`erls,  !ListQ[#1] & ]; If[System`PrepElemDump`erls === False, Return[{{}, False, System`PrepElemDump`Z}]]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`nelem = Append[System`PrepElemDump`nelem, Element[System`PrepElemDump`tmp, Reals]]]; If[System`PrepElemDump`erls === True, Return[{System`PrepElemDump`nelem, True, System`PrepElemDump`Z}]]; System`PrepElemDump`erls = If[Head[System`PrepElemDump`erls] === And, List @@ System`PrepElemDump`erls, {System`PrepElemDump`erls}]; System`PrepElemDump`tmp = Select[System`PrepElemDump`erls, Head[#1] === NotElement & ]; If[Length[System`PrepElemDump`tmp] > 0, System`PrepElemDump`nelem = Join[System`PrepElemDump`nelem, System`PrepElemDump`tmp]]; System`PrepElemDump`erls = And @@ Select[System`PrepElemDump`erls, Head[#1] =!= NotElement & ]; System`PrepElemDump`tmp = 1; System`PrepElemDump`erls = System`PrepElemDump`erls \/. System`PrepElemDump`Z :> System`PrepElemDump`Z[System`PrepElemDump`tmp++]; {System`PrepElemDump`nelem, System`PrepElemDump`erls, System`PrepElemDump`Z}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PrepElem",
	"Compile`PrependCompileValue":"ObjectType: Symbol\nUsage: Compile`PrependCompileValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Compile`PrependCompileValue",
	"OutputSizeLimit`PrePrint":"ObjectType: Symbol\nUsage: OutputSizeLimit`PrePrint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: OutputSizeLimit`PrePrint[OutputSizeLimit`Dump`x_] := With[{OutputSizeLimit`Dump`fmt = FormatType \/. Options[$Output, FormatType], OutputSizeLimit`Dump`outputsizelimit = If[$OutputSizeLimit === Infinity || Internal`RealValuedNumericQ[$OutputSizeLimit], $OutputSizeLimit, 2^20]}, If[ !MemberQ[$BoxForms, OutputSizeLimit`Dump`fmt] || MatchQ[HoldComplete[OutputSizeLimit`Dump`x], _[OutputSizeLimit`Dump`$unlimitedTextPattern]] || MatchQ[HoldComplete[OutputSizeLimit`Dump`x], _[OutputSizeLimit`Dump`$unlimitedBoxPattern]], Unevaluated[OutputSizeLimit`Dump`x], With[{OutputSizeLimit`Dump`boxes = Block[{$RecursionLimit = Typeset`$RecursionLimit}, MakeBoxes[OutputSizeLimit`Dump`x, OutputSizeLimit`Dump`fmt]]}, OutputSizeLimit`Dump`loadSizeCountRules[]; If[TrueQ[BoxForm`SizeCount[OutputSizeLimit`Dump`boxes, OutputSizeLimit`Dump`outputsizelimit]], BoxForm`AbsoluteRawBoxes[OutputSizeLimit`Dump`boxes], OutputSizeLimit`Dump`encapsulateOutput[FE`Boxes[OutputSizeLimit`Dump`boxes], OutputSizeLimit`Dump`outputFormWrappers[OutputSizeLimit`Dump`x], $Line, $SessionID, 5]]], Unevaluated[OutputSizeLimit`Dump`x]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: OutputSizeLimit`PrePrint",
	"Internal`PreprocessEquations":"ObjectType: Symbol\nUsage: Internal`PreprocessEquations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PreprocessEquations",
	"Region`Mesh`PreProcessingMethodQ":"ObjectType: Symbol\nUsage: Region`Mesh`PreProcessingMethodQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`PreProcessingMethodQ[Region`Mesh`DiscretizeRegionStrategiesDump`n_Integer, Region`Mesh`DiscretizeRegionStrategiesDump`m_, Region`Mesh`DiscretizeRegionStrategiesDump`pname_Symbol, Region`Mesh`DiscretizeRegionStrategiesDump`exposed_] := Region`Mesh`PreProcessingMethodQ[Region`Mesh`DiscretizeRegionStrategiesDump`n, Region`Mesh`DiscretizeRegionStrategiesDump`m, System`Utilities`StringName[Region`Mesh`DiscretizeRegionStrategiesDump`pname], TrueQ[Region`Mesh`DiscretizeRegionStrategiesDump`exposed]]\nRegion`Mesh`PreProcessingMethodQ[1 | 2 | 3, 0 | 1 | 2 | 3, \"Automatic\" | \"None\" | \"False\" | \"True\", True] = True\nRegion`Mesh`PreProcessingMethodQ[___] = True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`PreProcessingMethodQ",
	"Reduce`PreprocessLinearDiophantine":"ObjectType: Symbol\nUsage: Reduce`PreprocessLinearDiophantine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PreprocessLinearDiophantine[System`IntegerLinearDump`form_, System`IntegerLinearDump`vars_] := System`IntegerLinearDump`preplindioph[System`IntegerLinearDump`form, System`IntegerLinearDump`vars]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PreprocessLinearDiophantine",
	"Reduce`PresburgerAtom":"ObjectType: Symbol\nUsage: Reduce`PresburgerAtom\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PresburgerAtom",
	"Graphics`Mesh`PreserveInteriorFaces":"ObjectType: Symbol\nUsage: Graphics`Mesh`PreserveInteriorFaces\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PreserveInteriorFaces",
	"SurfaceGraphics`Methods`PreserveInteriorFaces":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`PreserveInteriorFaces\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`PreserveInteriorFaces",
	"System`ConvertersDump`FormatUtilities`PreserveManipulateInitializationPatternQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`PreserveManipulateInitializationPatternQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`PreserveManipulateInitializationPatternQ[Automatic | True | False] := True\nSystem`ConvertersDump`FormatUtilities`PreserveManipulateInitializationPatternQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`PreserveManipulateInitializationPatternQ",
	"BoxForm`PreserveOldOutputGraphicsAttributes":"ObjectType: Symbol\nUsage: BoxForm`PreserveOldOutputGraphicsAttributes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`PreserveOldOutputGraphicsAttributes",
	"JSONTools`Private`PRESERVEORDER":"None",
	"Developer`PreserveStyleSheet":"ObjectType: Symbol\nUsage: Developer`PreserveStyleSheet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`PreserveStyleSheet",
	"Experimental`PreviousCell":"ObjectType: Symbol\nUsage: Experimental`PreviousCell\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Experimental`PreviousCell[NotebookTools`UtilitiesDump`args___] := PreviousCell[NotebookTools`UtilitiesDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CellID -> Automatic, CellLabel -> Automatic, CellStyle -> Automatic, CellTags -> Automatic, CounterAssignments -> Automatic, CounterIncrements -> Automatic, Evaluator -> Automatic, ExpressionUUID -> Automatic, GeneratedCell -> Automatic}\nAttributes: {}\nFullName: Experimental`PreviousCell",
	"Internal`PreviousIntegerPartition":"ObjectType: Symbol\nUsage: Internal`PreviousIntegerPartition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PreviousIntegerPartition",
	"Wavelets`WaveletUtilities`PrimalScalingFunction":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`PrimalScalingFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`PrimalScalingFunction[Wavelets`WaveletUtilities`Dump`fwave_, {Wavelets`WaveletUtilities`Dump`J_Integer, Wavelets`WaveletUtilities`Dump`IntOrd_Integer, (Wavelets`WaveletUtilities`Dump`prec_)?Wavelets`WaveletUtilities`PrecisionQ}] := Block[{Wavelets`WaveletUtilities`Dump`Phi, Wavelets`WaveletUtilities`Dump`IntFunc}, Wavelets`WaveletUtilities`Dump`Phi = Wavelets`ScalingAndWaveletFunction[Wavelets`WaveletUtilities`Dump`fwave, \"PrimalScalingFunction\", Wavelets`WaveletUtilities`Dump`J, WorkingPrecision -> Wavelets`WaveletUtilities`Dump`prec]; If[ !ListQ[Wavelets`WaveletUtilities`Dump`Phi], Throw[$Failed]]; Wavelets`WaveletUtilities`Dump`IntFunc = Interpolation[Wavelets`WaveletUtilities`Dump`Phi, InterpolationOrder -> Wavelets`WaveletUtilities`Dump`IntOrd]; Evaluate[Piecewise[{{Wavelets`WaveletUtilities`Dump`IntFunc[#1], Wavelets`WaveletUtilities`Dump`Phi[[1,1]] <= #1 <= Wavelets`WaveletUtilities`Dump`Phi[[-1,1]]}}, 0]] & ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`PrimalScalingFunction",
	"Wavelets`WaveletUtilities`PrimalWaveletFunction":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`PrimalWaveletFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`PrimalWaveletFunction[Wavelets`WaveletUtilities`Dump`fwave_, {Wavelets`WaveletUtilities`Dump`J_Integer, Wavelets`WaveletUtilities`Dump`IntOrd_Integer, (Wavelets`WaveletUtilities`Dump`prec_)?Wavelets`WaveletUtilities`PrecisionQ}] := Block[{Wavelets`WaveletUtilities`Dump`Psi, Wavelets`WaveletUtilities`Dump`IntFunc}, Wavelets`WaveletUtilities`Dump`Psi = Wavelets`ScalingAndWaveletFunction[Wavelets`WaveletUtilities`Dump`fwave, \"PrimalWaveletFunction\", Wavelets`WaveletUtilities`Dump`J, WorkingPrecision -> Wavelets`WaveletUtilities`Dump`prec]; If[ !ListQ[Wavelets`WaveletUtilities`Dump`Psi], Throw[$Failed]]; Wavelets`WaveletUtilities`Dump`IntFunc = Interpolation[Wavelets`WaveletUtilities`Dump`Psi, InterpolationOrder -> Wavelets`WaveletUtilities`Dump`IntOrd]; Evaluate[Piecewise[{{Wavelets`WaveletUtilities`Dump`IntFunc[#1], Round[Wavelets`WaveletUtilities`Dump`Psi[[1,1]]] <= #1 <= Round[Wavelets`WaveletUtilities`Dump`Psi[[-1,1]]]}}, 0]] & ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`PrimalWaveletFunction",
	"DiscreteMath`DecisionDiagram`PrimeClausesImplicants":"ObjectType: Symbol\nUsage: DiscreteMath`DecisionDiagram`PrimeClausesImplicants\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DiscreteMath`DecisionDiagram`PrimeClausesImplicants",
	"DiscreteMath`DecisionDiagram`PrimeImplicants":"ObjectType: Symbol\nUsage: DiscreteMath`DecisionDiagram`PrimeImplicants\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: DiscreteMath`DecisionDiagram`PrimeImplicants",
	"NumberTheory`PrimePower":"ObjectType: Symbol\nUsage: NumberTheory`PrimePower\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: NumberTheory`PrimePower",
	"Internal`PrimePowerDecomposition":"ObjectType: Symbol\nUsage: Internal`PrimePowerDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: Internal`PrimePowerDecomposition",
	"GIS`PrimitiveClip":"ObjectType: Symbol\nUsage: GIS`PrimitiveClip\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`PrimitiveClip",
	"NumberTheory`PrimitiveRootQ":"ObjectType: Symbol\nUsage: NumberTheory`PrimitiveRootQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: NumberTheory`PrimitiveRootQ",
	"Integrate`Primitives":"None",
	"Graphics`Region`PrimitivesMeshRegion":"ObjectType: Symbol\nUsage: Graphics`Region`PrimitivesMeshRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Region`PrimitivesMeshRegion[Point[Graphics`Region`RegionDump`pt_], Graphics`Region`RegionDump`opts:OptionsPattern[]] := MeshRegion[{Graphics`Region`RegionDump`pt}, {Point[{1}]}]\nGraphics`Region`PrimitivesMeshRegion[Line[Graphics`Region`RegionDump`pts_], Graphics`Region`RegionDump`opts:OptionsPattern[]] := MeshRegion[Graphics`Region`RegionDump`pts, {Line[Range[Length[Graphics`Region`RegionDump`pts]]]}]\nGraphics`Region`PrimitivesMeshRegion[Polygon[Graphics`Region`RegionDump`pts_], Graphics`Region`RegionDump`opts:OptionsPattern[]] := MeshRegion[Graphics`Region`RegionDump`pts, {Polygon[Range[Length[Graphics`Region`RegionDump`pts]]]}]\nGraphics`Region`PrimitivesMeshRegion[(Graphics`Region`RegionDump`p_)?Region`Polyhedron`PolyhedronQ, Graphics`Region`RegionDump`opts:OptionsPattern[]] := Block[{Graphics`Region`RegionDump`res, Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget]}, If[Graphics`Region`RegionDump`target === \"BoundaryMeshRegion\", Graphics`Region`RegionDump`res = Region`BoundaryDiscretizePolyhedron[Graphics`Region`RegionDump`p], Graphics`Region`RegionDump`res = Region`DiscretizePolyhedron[Graphics`Region`RegionDump`p]]; Graphics`Region`RegionDump`res \/; MeshRegionQ[Graphics`Region`RegionDump`res] || BoundaryMeshRegionQ[Graphics`Region`RegionDump`res] || Region`EmptyRegionQ[Graphics`Region`RegionDump`res]]\nGraphics`Region`PrimitivesMeshRegion[Rectangle[{Graphics`Region`RegionDump`xmin_, Graphics`Region`RegionDump`ymin_}, {Graphics`Region`RegionDump`xmax_, Graphics`Region`RegionDump`ymax_}], Graphics`Region`RegionDump`opts:OptionsPattern[]] := MeshRegion[{{Graphics`Region`RegionDump`xmin, Graphics`Region`RegionDump`ymin}, {Graphics`Region`RegionDump`xmax, Graphics`Region`RegionDump`ymin}, {Graphics`Region`RegionDump`xmax, Graphics`Region`RegionDump`ymax}, {Graphics`Region`RegionDump`xmin, Graphics`Region`RegionDump`ymax}}, {Polygon[{1, 2, 3, 4}]}]\nGraphics`Region`PrimitivesMeshRegion[Rectangle[{0, 0}], Graphics`Region`RegionDump`opts:OptionsPattern[]] := Graphics`Region`PrimitivesMeshRegion[Rectangle[{0, 0}, {1, 1}], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Rectangle[{Graphics`Region`RegionDump`xmin_, Graphics`Region`RegionDump`ymin_}], Graphics`Region`RegionDump`opts:OptionsPattern[]] := Graphics`Region`PrimitivesMeshRegion[Rectangle[{Graphics`Region`RegionDump`xmin, Graphics`Region`RegionDump`ymin}, {Graphics`Region`RegionDump`xmin + 1, Graphics`Region`RegionDump`ymin + 1}], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`a_Cuboid, Graphics`Region`RegionDump`opts:OptionsPattern[]] := Graphics`Region`RegionDump`iPrimitivesMeshRegion[Graphics`Region`RegionDump`a, Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Tetrahedron[Graphics`Region`RegionDump`pts_List], Graphics`Region`RegionDump`opts:OptionsPattern[]] := With[{Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget], Graphics`Region`RegionDump`mr = MeshRegion[Graphics`Region`RegionDump`pts, {Tetrahedron[{1, 2, 3, 4}]}]}, Graphics`Region`RegionDump`makeReturnMeshRegion[Tetrahedron[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`target, Graphics`Region`RegionDump`opts]]\nGraphics`Region`PrimitivesMeshRegion[Hexahedron[Graphics`Region`RegionDump`pts_List], Graphics`Region`RegionDump`opts:OptionsPattern[]] := With[{Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget], Graphics`Region`RegionDump`mr = MeshRegion[Graphics`Region`RegionDump`pts, {Hexahedron[{1, 2, 3, 4, 5, 6, 7, 8}]}]}, Graphics`Region`RegionDump`makeReturnMeshRegion[Hexahedron[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`target, Graphics`Region`RegionDump`opts]]\nGraphics`Region`PrimitivesMeshRegion[Prism[Graphics`Region`RegionDump`pts_List], Graphics`Region`RegionDump`opts:OptionsPattern[]] := With[{Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget], Graphics`Region`RegionDump`mr = MeshRegion[Graphics`Region`RegionDump`pts, {Prism[{1, 2, 3, 4, 5, 6}]}]}, Graphics`Region`RegionDump`makeReturnMeshRegion[Prism[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`target, Graphics`Region`RegionDump`opts]]\nGraphics`Region`PrimitivesMeshRegion[Pyramid[Graphics`Region`RegionDump`pts_List], Graphics`Region`RegionDump`opts:OptionsPattern[]] := With[{Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget], Graphics`Region`RegionDump`mr = MeshRegion[Graphics`Region`RegionDump`pts, {Pyramid[{1, 2, 3, 4, 5}]}]}, Graphics`Region`RegionDump`makeReturnMeshRegion[Pyramid[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`target, Graphics`Region`RegionDump`opts]]\nGraphics`Region`PrimitivesMeshRegion[Simplex[Graphics`Region`RegionDump`pts_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`pts] == 1 := Graphics`Region`PrimitivesMeshRegion[Point[First[Graphics`Region`RegionDump`pts]], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Simplex[Graphics`Region`RegionDump`pts_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`pts] == 2 := Graphics`Region`PrimitivesMeshRegion[Line[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Simplex[Graphics`Region`RegionDump`pts_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`pts] == 3 := Graphics`Region`PrimitivesMeshRegion[Polygon[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Simplex[Graphics`Region`RegionDump`pts_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`pts] == 4 := Graphics`Region`PrimitivesMeshRegion[Tetrahedron[Graphics`Region`RegionDump`pts], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Simplex[(Graphics`Region`RegionDump`n_)?NumericQ], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Graphics`Region`RegionDump`n == 3 := Graphics`Region`PrimitivesMeshRegion[Simplex[{{0, 0, 0}, {1, 0, 0}, {0, 1, 0}, {0, 0, 1}}], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`BoxRegion[Graphics`Region`RegionDump`low_, Graphics`Region`RegionDump`high_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`low] == 2 := Graphics`Region`RegionDump`PrimitiveMeshRegion[Rectangle[Graphics`Region`RegionDump`low, Graphics`Region`RegionDump`high]]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`BoxRegion[Graphics`Region`RegionDump`low_, Graphics`Region`RegionDump`high_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`low] == 3 := Graphics`Region`PrimitivesMeshRegion[Cuboid[Graphics`Region`RegionDump`low, Graphics`Region`RegionDump`high], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Parallelogram[Graphics`Region`RegionDump`base_, Graphics`Region`RegionDump`sides_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`sides] == 2 := Graphics`Region`PrimitivesMeshRegion[Polygon[{Graphics`Region`RegionDump`base, Graphics`Region`RegionDump`base + Graphics`Region`RegionDump`sides[[1]], Graphics`Region`RegionDump`base + (Graphics`Region`RegionDump`sides[[1]] + Graphics`Region`RegionDump`sides[[2]]), Graphics`Region`RegionDump`base + Graphics`Region`RegionDump`sides[[2]]}], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Parallelepiped[Graphics`Region`RegionDump`base_, Graphics`Region`RegionDump`sides_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Length[Graphics`Region`RegionDump`sides] == 3 := Graphics`Region`PrimitivesMeshRegion[Hexahedron[{Graphics`Region`RegionDump`base, Graphics`Region`RegionDump`base + Graphics`Region`RegionDump`sides[[1]], Graphics`Region`RegionDump`base + (Graphics`Region`RegionDump`sides[[1]] + Graphics`Region`RegionDump`sides[[2]]), Graphics`Region`RegionDump`base + Graphics`Region`RegionDump`sides[[2]], Graphics`Region`RegionDump`base + Graphics`Region`RegionDump`sides[[3]], Graphics`Region`RegionDump`base + (Graphics`Region`RegionDump`sides[[1]] + Graphics`Region`RegionDump`sides[[3]]), Graphics`Region`RegionDump`base + (Graphics`Region`RegionDump`sides[[1]] + Graphics`Region`RegionDump`sides[[2]] + Graphics`Region`RegionDump`sides[[3]]), Graphics`Region`RegionDump`base + (Graphics`Region`RegionDump`sides[[2]] + Graphics`Region`RegionDump`sides[[3]])}], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Ball[(Graphics`Region`RegionDump`n_)?NumericQ], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Graphics`Region`RegionDump`n == 3 := Graphics`Region`PrimitivesMeshRegion[Ball[{0, 0, 0}], Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`a_Ball, Graphics`Region`RegionDump`opts:OptionsPattern[]] := Graphics`Region`RegionDump`iPrimitivesMeshRegion[Graphics`Region`RegionDump`a, Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Ellipsoid[Graphics`Region`RegionDump`p_, Graphics`Region`RegionDump`r_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; VectorQ[Graphics`Region`RegionDump`p] && VectorQ[Graphics`Region`RegionDump`r] && Length[Graphics`Region`RegionDump`p] == Length[Graphics`Region`RegionDump`r] := Module[{Graphics`Region`RegionDump`tr1, Graphics`Region`RegionDump`tr2, Graphics`Region`RegionDump`dd, Graphics`Region`RegionDump`tdd, Graphics`Region`RegionDump`maxcellmeasure, Graphics`Region`RegionDump`target}, Graphics`Region`RegionDump`maxcellmeasure = OptionValue[MaxCellMeasure]; Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget]; Graphics`Region`RegionDump`tr1 = TranslationTransform[Graphics`Region`RegionDump`p]; Graphics`Region`RegionDump`tr2 = ScalingTransform[Graphics`Region`RegionDump`r]; Graphics`Region`RegionDump`dd = If[Graphics`Region`RegionDump`target == \"MeshRegion\", DiscretizeGraphics[Ball[{0, 0, 0}], MaxCellMeasure -> Graphics`Region`RegionDump`maxcellmeasure], BoundaryDiscretizeGraphics[Ball[{0, 0, 0}], MaxCellMeasure -> Graphics`Region`RegionDump`maxcellmeasure]]; Graphics`Region`RegionDump`tdd = TransformedRegion[Graphics`Region`RegionDump`dd, Graphics`Region`RegionDump`tr1 . Graphics`Region`RegionDump`tr2]; Graphics`Region`RegionDump`tdd]\nGraphics`Region`PrimitivesMeshRegion[Ellipsoid[Graphics`Region`RegionDump`p_, Graphics`Region`RegionDump`m_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; VectorQ[Graphics`Region`RegionDump`p] && MatrixQ[Graphics`Region`RegionDump`m] && Length[Graphics`Region`RegionDump`p] == Length[Graphics`Region`RegionDump`m] := Module[{Graphics`Region`RegionDump`dd, Graphics`Region`RegionDump`tdd, Graphics`Region`RegionDump`geot, Graphics`Region`RegionDump`aff, Graphics`Region`RegionDump`target, Graphics`Region`RegionDump`maxcellmeasure}, Graphics`Region`RegionDump`maxcellmeasure = OptionValue[MaxCellMeasure]; Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget]; Graphics`Region`RegionDump`geot = Region`SpecialRegionProperty[Ellipsoid[Graphics`Region`RegionDump`p, Graphics`Region`RegionDump`m], \"Primitive\"]; If[Head[Graphics`Region`RegionDump`geot] =!= GeometricTransformation, Return[$Failed]]; Graphics`Region`RegionDump`aff = AffineTransform[Graphics`Region`RegionDump`geot[[2]]]; Graphics`Region`RegionDump`dd = If[Graphics`Region`RegionDump`target == \"MeshRegion\", DiscretizeGraphics[Ball[{0, 0, 0}], MaxCellMeasure -> Graphics`Region`RegionDump`maxcellmeasure], BoundaryDiscretizeGraphics[Ball[{0, 0, 0}], MaxCellMeasure -> Graphics`Region`RegionDump`maxcellmeasure]]; Graphics`Region`RegionDump`tdd = TransformedRegion[Graphics`Region`RegionDump`dd, Graphics`Region`RegionDump`aff]; Graphics`Region`RegionDump`tdd]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`a_Cylinder, Graphics`Region`RegionDump`opts:OptionsPattern[]] := Graphics`Region`RegionDump`iPrimitivesMeshRegion[Graphics`Region`RegionDump`a, Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`a_Cone, Graphics`Region`RegionDump`opts:OptionsPattern[]] := Graphics`Region`RegionDump`iPrimitivesMeshRegion[Graphics`Region`RegionDump`a, Graphics`Region`RegionDump`opts]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`a_ConicHullRegion, Graphics`Region`RegionDump`unbounds_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Graphics`Mesh`PrimitiveVolumeQ[Graphics`Region`RegionDump`a] := Module[{Graphics`Region`RegionDump`polys, Graphics`Region`RegionDump`plotrange, Graphics`Region`RegionDump`mo, Graphics`Region`RegionDump`mregion, Graphics`Region`RegionDump`target}, Graphics`Region`RegionDump`plotrange = OptionValue[PlotRange]; Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget]; Graphics`Region`RegionDump`polys = Graphics`Mesh`DiscretizeGraphicsPrimitive[Graphics`Region`RegionDump`a, PlotRange -> Graphics`Region`RegionDump`unbounds]; If[Head[Graphics`Region`RegionDump`polys] =!= Polygon, Return[]]; Graphics`Region`RegionDump`mo = Graphics`Mesh`MeshObject[Graphics`Region`RegionDump`polys]; Graphics`Region`RegionDump`mo = Quiet[Graphics`Mesh`PlotRangeClippingMesh[Graphics`Region`RegionDump`mo, Graphics`Region`RegionDump`plotrange, Filling -> True]]; Graphics`Region`RegionDump`mregion = Graphics`Region`RegionDump`makeReturnMeshRegion[Graphics`Region`RegionDump`a, Graphics`Region`RegionDump`mo, Graphics`Region`RegionDump`target, Sequence[Flatten[{Graphics`Region`RegionDump`opts}]]]; Graphics`Region`RegionDump`mregion]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`reg:CapsuleShape[{Graphics`Region`RegionDump`p1_, Graphics`Region`RegionDump`p2_}, Graphics`Region`RegionDump`r_], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; VectorQ[Graphics`Region`RegionDump`p1] && VectorQ[Graphics`Region`RegionDump`p2] && Length[Graphics`Region`RegionDump`p1] == Length[Graphics`Region`RegionDump`p2] := Module[{Graphics`Region`RegionDump`dr, Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`target}, Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget]; Graphics`Region`RegionDump`dr = If[Graphics`Region`RegionDump`target == \"MeshRegion\", DiscretizeRegion, BoundaryDiscretizeRegion]; Graphics`Region`RegionDump`mr = Graphics`Region`RegionDump`dr[Graphics`Region`RegionDump`reg, Method -> \"MarchingCubes\"]; Graphics`Region`RegionDump`mr]\nGraphics`Region`PrimitivesMeshRegion[Graphics`Region`RegionDump`reg:SphericalShell[Graphics`Region`RegionDump`p_, {Graphics`Region`RegionDump`r1_, Graphics`Region`RegionDump`r2_}], Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; VectorQ[Graphics`Region`RegionDump`p] && Graphics`Region`RegionDump`r1 < Graphics`Region`RegionDump`r2 := Module[{Graphics`Region`RegionDump`shell, Graphics`Region`RegionDump`ball, Graphics`Region`RegionDump`X, Graphics`Region`RegionDump`XX, Graphics`Region`RegionDump`nx, Graphics`Region`RegionDump`cells, Graphics`Region`RegionDump`target}, Graphics`Region`RegionDump`target = OptionValue[Graphics`Region`MeshRegionTarget]; Graphics`Region`RegionDump`ball = BoundaryDiscretizeGraphics[Ball[]]; If[BoundaryMeshRegionQ[Graphics`Region`RegionDump`ball], Graphics`Region`RegionDump`X = MeshCoordinates[Graphics`Region`RegionDump`ball]; Graphics`Region`RegionDump`cells = MeshCells[Graphics`Region`RegionDump`ball, 2, \"Multicells\" -> True][[1,1]]; Graphics`Region`RegionDump`nx = Length[Graphics`Region`RegionDump`X]; Graphics`Region`RegionDump`XX = (Graphics`Region`RegionDump`p + #1 & ) \/@ Join[Graphics`Region`RegionDump`X*Graphics`Region`RegionDump`r1, Graphics`Region`RegionDump`X*Graphics`Region`RegionDump`r2]; Graphics`Region`RegionDump`shell = BoundaryMeshRegion[Graphics`Region`RegionDump`XX, Polygon[Graphics`Region`RegionDump`cells], Polygon[Graphics`Region`RegionDump`cells + Graphics`Region`RegionDump`nx]]; If[Graphics`Region`RegionDump`target == \"MeshRegion\", Graphics`Region`RegionDump`shell = TriangulateMesh[Graphics`Region`RegionDump`shell]]; ]; Graphics`Region`RegionDump`shell]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AccuracyGoal -> Automatic, AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, Boxed -> False, BoxRatios -> Automatic, BoxStyle -> {}, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FaceGrids -> None, FaceGridsStyle -> {}, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxCellMeasure -> Automatic, MeshCellHighlight -> {}, MeshCellLabel -> Automatic, MeshCellMarker -> 0, MeshCellShapeFunction -> Automatic, MeshCellStyle -> Automatic, MeshQualityGoal -> Automatic, MeshRefinementFunction -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> Automatic, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, PrecisionGoal -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, RotationAction -> Fit, SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> Automatic, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, Graphics`Region`MeshRegionTarget -> MeshRegion}\nAttributes: {}\nFullName: Graphics`Region`PrimitivesMeshRegion",
	"Graphics`Mesh`PrimitiveVolumeQ":"ObjectType: Symbol\nUsage: Graphics`Mesh`PrimitiveVolumeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Mesh`PrimitiveVolumeQ[ConicHullRegion[{Graphics`Mesh`MeshDump`p_}, Graphics`Mesh`MeshDump`w_List]] \/; Length[Graphics`Mesh`MeshDump`w] > 2 && ArrayQ[Graphics`Mesh`MeshDump`w, 2] && Graphics`Mesh`MeshDump`testSameDimension[Append[Graphics`Mesh`MeshDump`w, Graphics`Mesh`MeshDump`p]] && Length[Graphics`Mesh`MeshDump`p] == 3 := True\nGraphics`Mesh`PrimitiveVolumeQ[ConicHullRegion[Graphics`Mesh`MeshDump`p_, {}, Graphics`Mesh`MeshDump`w_List]] \/; Length[Graphics`Mesh`MeshDump`w] > 2 && ArrayQ[Graphics`Mesh`MeshDump`w, 2] && Graphics`Mesh`MeshDump`testSameDimension[Append[Graphics`Mesh`MeshDump`w, Graphics`Mesh`MeshDump`p]] && Length[Graphics`Mesh`MeshDump`p] == 3 := True\nGraphics`Mesh`PrimitiveVolumeQ[ConicHullRegion[{Graphics`Mesh`MeshDump`p1_, Graphics`Mesh`MeshDump`p2_}, {Graphics`Mesh`MeshDump`w1_, Graphics`Mesh`MeshDump`w2_}]] \/; Graphics`Mesh`MeshDump`testSameDimension[{Graphics`Mesh`MeshDump`p1, Graphics`Mesh`MeshDump`p2, Graphics`Mesh`MeshDump`w1, Graphics`Mesh`MeshDump`w2}] && Length[Graphics`Mesh`MeshDump`p1] == 3 := True\nGraphics`Mesh`PrimitiveVolumeQ[ConicHullRegion[Graphics`Mesh`MeshDump`p_, {Graphics`Mesh`MeshDump`v_}, {Graphics`Mesh`MeshDump`w1_, Graphics`Mesh`MeshDump`w2_}]] \/; Graphics`Mesh`MeshDump`testSameDimension[{Graphics`Mesh`MeshDump`p, Graphics`Mesh`MeshDump`v, Graphics`Mesh`MeshDump`w1, Graphics`Mesh`MeshDump`w2}] && Length[Graphics`Mesh`MeshDump`p] == 3 := True\nGraphics`Mesh`PrimitiveVolumeQ[ConicHullRegion[{Graphics`Mesh`MeshDump`p1_, Graphics`Mesh`MeshDump`p2_, Graphics`Mesh`MeshDump`p3_}, {Graphics`Mesh`MeshDump`w_}]] \/; Graphics`Mesh`MeshDump`testSameDimension[{Graphics`Mesh`MeshDump`p1, Graphics`Mesh`MeshDump`p2, Graphics`Mesh`MeshDump`p3, Graphics`Mesh`MeshDump`w}] && Length[Graphics`Mesh`MeshDump`p1] == 3 := True\nGraphics`Mesh`PrimitiveVolumeQ[ConicHullRegion[Graphics`Mesh`MeshDump`p_, {Graphics`Mesh`MeshDump`v1_, Graphics`Mesh`MeshDump`v2_}, {Graphics`Mesh`MeshDump`w_}]] \/; Graphics`Mesh`MeshDump`testSameDimension[{Graphics`Mesh`MeshDump`p, Graphics`Mesh`MeshDump`v1, Graphics`Mesh`MeshDump`v2, Graphics`Mesh`MeshDump`w}] && Length[Graphics`Mesh`MeshDump`p] == 3 := True\nGraphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`MeshDump`h_Hyperplane] := Graphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`NormalizeGraphicsPrimitive[Graphics`Mesh`MeshDump`h]]\nGraphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`MeshDump`h_HalfSpace] := Graphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`NormalizeGraphicsPrimitive[Graphics`Mesh`MeshDump`h]]\nGraphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`MeshDump`h_AffineSpace] := Graphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`NormalizeGraphicsPrimitive[Graphics`Mesh`MeshDump`h]]\nGraphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`MeshDump`h_AffineHalfSpace] := Graphics`Mesh`PrimitiveVolumeQ[Graphics`Mesh`NormalizeGraphicsPrimitive[Graphics`Mesh`MeshDump`h]]\nGraphics`Mesh`PrimitiveVolumeQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PrimitiveVolumeQ",
	"NIntegrate`PrincipalValue":"ObjectType: Symbol\nUsage: NIntegrate`PrincipalValue\nDocumentation: None\nOwnValues: None\nUpValues: NIntegrate`InitializeIntegrationStrategy[NIntegrate`PrincipalValue, NIntegrate`PrincipalValueDump`nfs_, NIntegrate`PrincipalValueDump`ranges_, NIntegrate`PrincipalValueDump`strOpts_, NIntegrate`PrincipalValueDump`allOpts_] ^:= Block[{NIntegrate`PrincipalValueDump`t, NIntegrate`PrincipalValueDump`method, NIntegrate`PrincipalValueDump`eps, NIntegrate`PrincipalValueDump`symbproctime}, NIntegrate`PrincipalValueDump`t = NIntegrate`GetMethodOptionValues[NIntegrate`PrincipalValue, NIntegrate`PrincipalValueDump`PrincipalValueProperties, NIntegrate`PrincipalValueDump`strOpts]; If[NIntegrate`PrincipalValueDump`t === $Failed, Return[$Failed]]; {NIntegrate`PrincipalValueDump`method, NIntegrate`PrincipalValueDump`eps, NIntegrate`PrincipalValueDump`symbproctime} = NIntegrate`PrincipalValueDump`t; If[Length[NIntegrate`PrincipalValueDump`ranges] > 1, Message[NIntegrate::pvdim]; Return[$Failed]]; If[Length[NIntegrate`PrincipalValueDump`ranges[[1]]] < 4, Message[NIntegrate::pvrng]; Return[$Failed]]; If[NumericQ[NIntegrate`PrincipalValueDump`eps], NIntegrate`PrincipalValueDump`eps = Table[NIntegrate`PrincipalValueDump`eps, {Length[NIntegrate`PrincipalValueDump`ranges[[1]]] - 3}]]; If[TrueQ[NIntegrate`PrincipalValueDump`eps =!= Automatic && ( !VectorQ[NIntegrate`PrincipalValueDump`eps, NumericQ[#1] || #1 === Automatic & ] || Length[NIntegrate`PrincipalValueDump`eps] != Length[NIntegrate`PrincipalValueDump`ranges[[1]]] - 3)], Message[NIntegrate::pvspr, \"SingularPointIntegrationRadius\"]; Return[$Failed]; ]; NIntegrate`PrincipalValue[{NIntegrate`PrincipalValueDump`eps, NIntegrate`PrincipalValueDump`ranges[[1]], NIntegrate`PrincipalValueDump`method}]]\nDownValues: None\nSubValues: NIntegrate`PrincipalValue[{NIntegrate`PrincipalValueDump`eps_, NIntegrate`PrincipalValueDump`rangeSpec_, NIntegrate`PrincipalValueDump`methodSpec_}][\"Algorithm\"[NIntegrate`PrincipalValueDump`simplexesArg_, NIntegrate`PrincipalValueDump`optsArg___]] := Module[{NIntegrate`PrincipalValueDump`ranges, NIntegrate`PrincipalValueDump`singpoints, NIntegrate`PrincipalValueDump`f, NIntegrate`PrincipalValueDump`x = First[NIntegrate`PrincipalValueDump`rangeSpec], NIntegrate`PrincipalValueDump`integral, NIntegrate`PrincipalValueDump`opts}, NIntegrate`PrincipalValueDump`f = NIntegrate`PrincipalValueDump`simplexesArg[[1]][\"Integrand\"[]][\"FunctionExpression\"[]]; NIntegrate`PrincipalValueDump`singpoints = Take[NIntegrate`PrincipalValueDump`rangeSpec, {3, -2}]; If[NIntegrate`PrincipalValueDump`eps === Automatic, NIntegrate`PrincipalValueDump`ranges = Sequence @@ ({#1} & ) \/@ NIntegrate`PrincipalValueDump`singpoints, NIntegrate`PrincipalValueDump`ranges = Sequence @@ MapThread[If[#2 === Automatic, {#1}, {#1, #2}] & , {NIntegrate`PrincipalValueDump`singpoints, NIntegrate`PrincipalValueDump`eps}]]; NIntegrate`PrincipalValueDump`opts = NIntegrate`PrincipalValueDump`optsArg \/. {(Method -> NIntegrate`PrincipalValueDump`s_) -> Method -> NIntegrate`PrincipalValueDump`methodSpec, (\"Method\" -> NIntegrate`PrincipalValueDump`s_) -> Method -> NIntegrate`PrincipalValueDump`methodSpec}; NIntegrate`PrincipalValueDump`integral = NIntegrate`PrincipalValueDump`CauchyPrincipalValue[NIntegrate`PrincipalValueDump`f, {NIntegrate`PrincipalValueDump`x, NIntegrate`PrincipalValueDump`rangeSpec[[2]], NIntegrate`PrincipalValueDump`ranges, NIntegrate`PrincipalValueDump`rangeSpec[[-1]]}, NIntegrate`PrincipalValueDump`opts]; If[ !NumberQ[NIntegrate`PrincipalValueDump`integral], $Failed, NIntegrate`PrincipalValueDump`integral]]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, SingularPointIntegrationRadius -> Automatic, SymbolicProcessing -> Automatic}\nAttributes: {}\nFullName: NIntegrate`PrincipalValue",
	"DataPaclets`PrintInitializationStatus":"ObjectType: Symbol\nUsage: DataPaclets`PrintInitializationStatus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DataPaclets`PrintInitializationStatus[DataPaclets`CommonDump`name_String] := DisplayTemporary[Internal`LoadingPanel[StringForm[If[StringQ[General::datainit], General::datainit, \"Initializing `1` indices...\"], DataPaclets`CommonDump`name]]] \/; DataPaclets`CommonDump`HaveFEQ[6.]\nDataPaclets`PrintInitializationStatus[DataPaclets`CommonDump`name_String] := Print[StringForm[If[StringQ[General::datainit], General::datainit, \"Initializing `1` indices...\"], DataPaclets`CommonDump`name]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DataPaclets`PrintInitializationStatus",
	"JSONTools`Private`PRINTPRECISION":"None",
	"Progress`PrintProgressString":"ObjectType: Symbol\nUsage: Progress`PrintProgressString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Progress`PrintProgressString[Progress`ConsoleDump`main_, Progress`ConsoleDump`detail_, Progress`ConsoleDump`progress_] := Module[{Progress`ConsoleDump`maxBarLength, Progress`ConsoleDump`currentBarLength, Progress`ConsoleDump`str}, Progress`ConsoleDump`maxBarLength = 60; Progress`ConsoleDump`currentBarLength = Round[Progress`ConsoleDump`maxBarLength*Clip[Progress`ConsoleDump`progress]]; Progress`ConsoleDump`str = StringJoin[If[Progress`ConsoleDump`main =!= None, {Progress`ConsoleDump`StyleTerminal[Cyan], ToString[Progress`ConsoleDump`main], Progress`ConsoleDump`StyleTerminal[Automatic]}, \"\"], If[IntegerQ[Progress`ConsoleDump`currentBarLength], {\" [\", Progress`ConsoleDump`StyleTerminal[Lighter, Blue], ConstantArray[\"=\", Progress`ConsoleDump`currentBarLength], ConstantArray[\" \", Progress`ConsoleDump`maxBarLength - Progress`ConsoleDump`currentBarLength], Progress`ConsoleDump`StyleTerminal[Automatic], \"] \"}, \"\"], If[ !IntegerQ[Progress`ConsoleDump`currentBarLength] && Progress`ConsoleDump`detail =!= None, \" | \", \"\"], If[Progress`ConsoleDump`detail =!= None, {Progress`ConsoleDump`StyleTerminal[Cyan], ToString[Progress`ConsoleDump`detail], Progress`ConsoleDump`StyleTerminal[Automatic]}, \"\"]]; Progress`ConsoleDump`$MaxLength = Max[Replace[Progress`ConsoleDump`$MaxLength, Progress`ConsoleDump`n_ \/;  !IntegerQ[Progress`ConsoleDump`n] :> 0], StringLength[Progress`ConsoleDump`str]]; WriteString[\"stdout\", \"\\r\"]; WriteString[\"stdout\", StringPadRight[Progress`ConsoleDump`str, Progress`ConsoleDump`$MaxLength]]; Progress`ConsoleDump`$MaxLength = StringLength[Progress`ConsoleDump`str]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Progress`PrintProgressString",
	"Internal`PrintSwitchSettings":"ObjectType: Symbol\nUsage: Internal`PrintSwitchSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PrintSwitchSettings",
	"Internal`PrintSystemCache":"ObjectType: Symbol\nUsage: Internal`PrintSystemCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PrintSystemCache",
	"BoxForm`PrivateNames":"ObjectType: Symbol\nUsage: BoxForm`PrivateNames\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`PrivateNames",
	"GraphComputation`ProbableIntegerQ":"ObjectType: Symbol\nUsage: GraphComputation`ProbableIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_Integer] := True\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_Rational] := False\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_Complex] := False\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_List] := False\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_] \/; Internal`PrecAccur[GraphComputation`GraphLibraryDump`n] =!= Infinity := False\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_] \/; Internal`PrecAccur[Rationalize[N[GraphComputation`GraphLibraryDump`n]]] =!= Infinity := False\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_] \/; Assumptions`AComplexQ[GraphComputation`GraphLibraryDump`n] &&  !Assumptions`AIntegerQ[GraphComputation`GraphLibraryDump`n] := False\nGraphComputation`ProbableIntegerQ[GraphComputation`GraphLibraryDump`n_] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`ProbableIntegerQ",
	"GraphComputation`ProbablePositive":"ObjectType: Symbol\nUsage: GraphComputation`ProbablePositive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`ProbablePositive[(GraphComputation`GraphLibraryDump`n_)?NumericQ] := Positive[GraphComputation`GraphLibraryDump`n]\nGraphComputation`ProbablePositive[(GraphComputation`GraphLibraryDump`n_)?Assumptions`ANonPositive] := False\nGraphComputation`ProbablePositive[GraphComputation`GraphLibraryDump`n_List] := False\nGraphComputation`ProbablePositive[GraphComputation`GraphLibraryDump`n_] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`ProbablePositive",
	"SpecialFunctions`Probit":"ObjectType: Symbol\nUsage: SpecialFunctions`Probit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable, NumericFunction}\nFullName: SpecialFunctions`Probit",
	"SpecialFunctions`Internal`Probit":"ObjectType: Symbol\nUsage: SpecialFunctions`Internal`Probit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SpecialFunctions`Internal`Probit[0] := -Infinity\nSpecialFunctions`Internal`Probit[1] := Infinity\nSpecialFunctions`Internal`Probit[1\/2] := 0\nSpecialFunctions`Internal`Probit[System`StatisticalFunctionsDump`x_List \/; Developer`PackedArrayQ[System`StatisticalFunctionsDump`x, Real] && Min[System`StatisticalFunctionsDump`x] > 0 && Max[System`StatisticalFunctionsDump`x] < 1] := System`StatisticalFunctionsDump`CompiledProbit[System`StatisticalFunctionsDump`x]\nSpecialFunctions`Internal`Probit[System`StatisticalFunctionsDump`x_List \/; ArrayQ[System`StatisticalFunctionsDump`x, _, Internal`RealValuedNumberQ]] := With[{System`StatisticalFunctionsDump`z = Internal`ToPackedArray[System`StatisticalFunctionsDump`x]}, System`StatisticalFunctionsDump`CompiledProbit[System`StatisticalFunctionsDump`z] \/; Developer`PackedArrayQ[System`StatisticalFunctionsDump`z, Real] && Min[System`StatisticalFunctionsDump`z] > 0 && Max[System`StatisticalFunctionsDump`z] < 1]\nSpecialFunctions`Internal`Probit[System`StatisticalFunctionsDump`x_List] := SpecialFunctions`Probit \/@ System`StatisticalFunctionsDump`x\nSpecialFunctions`Internal`Probit[System`StatisticalFunctionsDump`x_Real] := Module[{System`StatisticalFunctionsDump`res = $Failed}, Which[System`StatisticalFunctionsDump`x == 0, System`StatisticalFunctionsDump`res = -Infinity, System`StatisticalFunctionsDump`x == 1, System`StatisticalFunctionsDump`res = Plus[Infinity], True, System`StatisticalFunctionsDump`res = System`StatisticalFunctionsDump`CompiledProbit[System`StatisticalFunctionsDump`x]]; System`StatisticalFunctionsDump`res \/; System`StatisticalFunctionsDump`res =!= $Failed]\nSpecialFunctions`Internal`Probit[System`StatisticalFunctionsDump`x_SparseArray] := System`StatisticalFunctionsDump`SparseListableThread[SpecialFunctions`Internal`Probit, System`StatisticalFunctionsDump`x]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SpecialFunctions`Internal`Probit",
	"SpecialFunctions`ProbitLogOdds":"ObjectType: Symbol\nUsage: SpecialFunctions`ProbitLogOdds\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable, NumericFunction}\nFullName: SpecialFunctions`ProbitLogOdds",
	"SpecialFunctions`Internal`ProbitLogOddsNewtonRaphson":"ObjectType: Symbol\nUsage: SpecialFunctions`Internal`ProbitLogOddsNewtonRaphson\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SpecialFunctions`Internal`ProbitLogOddsNewtonRaphson[System`StatisticalFunctionsDump`e_] := System`StatisticalFunctionsDump`nStandardNormalQuantileNewtonRaphson[System`StatisticalFunctionsDump`e, System`StatisticalFunctionsDump`e]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SpecialFunctions`Internal`ProbitLogOddsNewtonRaphson",
	"Parallel`Developer`Process":"ObjectType: Symbol\nUsage: Parallel`Developer`Process\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`Process",
	"System`Dump`Process3DTransform":"ObjectType: Symbol\nUsage: System`Dump`Process3DTransform\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`Process3DTransform[System`Dump`e_, System`Dump`fmt_] := Module[{System`Dump`e2 = Internal`GeometricTransformation3D[System`Dump`e]}, If[Head[System`Dump`e2] === Internal`GeometricTransformation3D, System`Dump`e, InterpretationBox @@ {Typeset`MakeBoxes @@ {System`Dump`e2 \/. HoldPattern[Internal`GeometricTransformation3D[System`Dump`gr_, {System`Dump`tf_, _}]] :> GeometricTransformation[System`Dump`gr, System`Dump`tf], System`Dump`fmt, Graphics3D}, System`Dump`e}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`Process3DTransform",
	"Statistics`QuantityUtilities`ProcessAndReattachCommonUnits":"ObjectType: Symbol\nUsage: Statistics`QuantityUtilities`ProcessAndReattachCommonUnits\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`QuantityUtilities`ProcessAndReattachCommonUnits[Statistics`QuantityUtilitiesDump`fun_, Statistics`QuantityUtilitiesDump`unitfun_, Statistics`QuantityUtilitiesDump`data_, Statistics`QuantityUtilitiesDump`restargs___] := Catch[Block[{Statistics`QuantityUtilitiesDump`res, Statistics`QuantityUtilitiesDump`units}, Statistics`QuantityUtilitiesDump`res = Statistics`QuantityUtilities`GetVectorAndUnit[Statistics`QuantityUtilitiesDump`data]; If[Statistics`QuantityUtilitiesDump`res === $Failed || MatchQ[Head[Statistics`QuantityUtilitiesDump`res], Statistics`QuantityUtilities`GetVectorAndUnit], Throw[$Failed], {Statistics`QuantityUtilitiesDump`res, Statistics`QuantityUtilitiesDump`units} = Statistics`QuantityUtilitiesDump`res]; Statistics`QuantityUtilitiesDump`res = Statistics`QuantityUtilitiesDump`fun[Statistics`QuantityUtilitiesDump`res, Statistics`QuantityUtilitiesDump`restargs]; If[Statistics`QuantityUtilitiesDump`res === $Failed || Head[Statistics`QuantityUtilitiesDump`res] === Statistics`QuantityUtilitiesDump`fun, Throw[$Failed]]; Statistics`QuantityUtilitiesDump`units = Statistics`QuantityUtilitiesDump`ConstructedUnit[Statistics`QuantityUtilitiesDump`unitfun[Statistics`QuantityUtilitiesDump`units]]; If[Internal`LiterallyOccurringQ[Statistics`QuantityUtilitiesDump`units, {$Failed, Statistics`QuantityUtilitiesDump`unitfun, Statistics`QuantityUtilitiesDump`ConstructedUnit}], Throw[$Failed]]; Quantity[Statistics`QuantityUtilitiesDump`res, Statistics`QuantityUtilitiesDump`units]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`QuantityUtilities`ProcessAndReattachCommonUnits",
	"System`Dump`ProcessAxesEdge":"ObjectType: Symbol\nUsage: System`Dump`ProcessAxesEdge\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessAxesEdge[{Bottom, Front}] := \"yz\" -> {-1, -1}\nSystem`Dump`ProcessAxesEdge[{Front, Top}] := \"yz\" -> {-1, 1}\nSystem`Dump`ProcessAxesEdge[{Back, Bottom}] := \"yz\" -> {1, -1}\nSystem`Dump`ProcessAxesEdge[{Back, Top}] := \"yz\" -> {1, 1}\nSystem`Dump`ProcessAxesEdge[{Bottom, Left}] := \"xz\" -> {-1, -1}\nSystem`Dump`ProcessAxesEdge[{Left, Top}] := \"xz\" -> {-1, 1}\nSystem`Dump`ProcessAxesEdge[{Bottom, Right}] := \"xz\" -> {1, -1}\nSystem`Dump`ProcessAxesEdge[{Right, Top}] := \"xz\" -> {1, 1}\nSystem`Dump`ProcessAxesEdge[{Front, Left}] := \"xy\" -> {-1, -1}\nSystem`Dump`ProcessAxesEdge[{Back, Left}] := \"xy\" -> {-1, 1}\nSystem`Dump`ProcessAxesEdge[{Front, Right}] := \"xy\" -> {1, -1}\nSystem`Dump`ProcessAxesEdge[{Back, Right}] := \"xy\" -> {1, 1}\nSystem`Dump`ProcessAxesEdge[System`Dump`other_] := \"Null\" -> Null\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ProcessAxesEdge",
	"StringPattern`Dump`ProcessCondition":"ObjectType: Symbol\nUsage: StringPattern`Dump`ProcessCondition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StringPattern`Dump`ProcessCondition[StringPattern`Dump`patt_, StringPattern`Dump`cond_] := With[{StringPattern`Dump`vars = Cases[{StringPattern`Dump`patt}, HoldPattern[Pattern][StringPattern`Dump`var_, _] :> Hold[StringPattern`Dump`var], Infinity]}, {StringPattern`Dump`cond, Union[StringPattern`Dump`vars]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StringPattern`Dump`ProcessCondition",
	"InteractiveGraphics`ProcessDirectives":"ObjectType: Symbol\nUsage: InteractiveGraphics`ProcessDirectives\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: InteractiveGraphics`ProcessDirectives[InteractiveGraphics`DirectivesDump`obj_, InteractiveGraphics`DirectivesDump`a__] := Block[{}, InteractiveGraphics`DirectivesDump`parseDirectives[InteractiveGraphics`DirectivesDump`obj, InteractiveGraphics`DirectivesDump`a]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: InteractiveGraphics`ProcessDirectives",
	"Region`Mesh`ProcessDiscretizedCurves":"ObjectType: Symbol\nUsage: Region`Mesh`ProcessDiscretizedCurves\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`ProcessDiscretizedCurves",
	"NDSolve`FEM`ProcessDiscretizedSolutions":"ObjectType: Symbol\nUsage: NDSolve`FEM`ProcessDiscretizedSolutions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`ProcessDiscretizedSolutions[NDSolve`FEM`FEMBoundaryConditionsDump`sol_, NDSolve`FEM`FEMBoundaryConditionsDump`dbcd_NDSolve`FEM`DeployedBoundaryConditionData] \/; VectorQ[NDSolve`FEM`FEMBoundaryConditionsDump`sol] || MatrixQ[NDSolve`FEM`FEMBoundaryConditionsDump`sol] := Block[{NDSolve`FEM`FEMBoundaryConditionsDump`cmethod, NDSolve`FEM`FEMBoundaryConditionsDump`res, NDSolve`FEM`FEMBoundaryConditionsDump`dof, NDSolve`FEM`FEMBoundaryConditionsDump`dbc, NDSolve`FEM`FEMBoundaryConditionsDump`qT}, NDSolve`FEM`FEMBoundaryConditionsDump`cmethod = NDSolve`FEM`FEMBoundaryConditionsDump`dbcd[\"ConstraintMethod\"]; NDSolve`FEM`FEMBoundaryConditionsDump`res = Switch[NDSolve`FEM`FEMBoundaryConditionsDump`cmethod, \"Insert\" | \"SymmetricInsert\", NDSolve`FEM`FEMBoundaryConditionsDump`sol, \"Append\", NDSolve`FEM`FEMBoundaryConditionsDump`dof = \"DegreesOfFreedom\" \/. NDSolve`FEM`FEMBoundaryConditionsDump`dbcd[\"ConstraintMethodData\"]; If[Length[NDSolve`FEM`FEMBoundaryConditionsDump`sol] === NDSolve`FEM`FEMBoundaryConditionsDump`dof, NDSolve`FEM`FEMBoundaryConditionsDump`sol, NDSolve`FEM`FEMBoundaryConditionsDump`sol[[1 ;; NDSolve`FEM`FEMBoundaryConditionsDump`dof]]], \"Remove\", NDSolve`FEM`FEMBoundaryConditionsDump`dbc = \"DiscretizedBoundaryConditionData\" \/. NDSolve`FEM`FEMBoundaryConditionsDump`dbcd[\"ConstraintMethodData\"]; NDSolve`FEM`FEMBoundaryConditionsDump`DirichletValueReinsertion[NDSolve`FEM`FEMBoundaryConditionsDump`sol, NDSolve`FEM`FEMBoundaryConditionsDump`dbc], \"Project\", NDSolve`FEM`FEMBoundaryConditionsDump`dbc = \"DiscretizedBoundaryConditionData\" \/. NDSolve`FEM`FEMBoundaryConditionsDump`dbcd[\"ConstraintMethodData\"]; NDSolve`FEM`FEMBoundaryConditionsDump`qT = \"ProjectionMatrix\" \/. NDSolve`FEM`FEMBoundaryConditionsDump`dbcd[\"ConstraintMethodData\"]; NDSolve`FEM`FEMBoundaryConditionsDump`ProjectedDirichletValueReinsertion[NDSolve`FEM`FEMBoundaryConditionsDump`sol, NDSolve`FEM`FEMBoundaryConditionsDump`dbc, NDSolve`FEM`FEMBoundaryConditionsDump`qT]]; NDSolve`FEM`FEMBoundaryConditionsDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ProcessDiscretizedSolutions",
	"Region`Mesh`ProcessDiscretizeRegionMethods":"ObjectType: Symbol\nUsage: Region`Mesh`ProcessDiscretizeRegionMethods\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`ProcessDiscretizeRegionMethods[(Region`Mesh`DiscretizeRegionStrategiesDump`rspec_)?Region`Mesh`RegionSpecificationDataQ, Region`Mesh`DiscretizeRegionStrategiesDump`mord_, Region`Mesh`DiscretizeRegionStrategiesDump`methodopts_, Region`Mesh`DiscretizeRegionStrategiesDump`optsin_, Region`Mesh`DiscretizeRegionStrategiesDump`mhead_] := Catch[Block[{Region`Mesh`DiscretizeRegionStrategiesDump`ok, Region`Mesh`DiscretizeRegionStrategiesDump`methods, Region`Mesh`DiscretizeRegionStrategiesDump`len, Region`Mesh`DiscretizeRegionStrategiesDump`i, Region`Mesh`DiscretizeRegionStrategiesDump`j, Region`Mesh`DiscretizeRegionStrategiesDump`mi, Region`Mesh`DiscretizeRegionStrategiesDump`id, Region`Mesh`DiscretizeRegionStrategiesDump`sname, Region`Mesh`DiscretizeRegionStrategiesDump`snameOpts, Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`tmp, Region`Mesh`DiscretizeRegionStrategiesDump`temp, Region`Mesh`DiscretizeRegionStrategiesDump`optlen, Region`Mesh`DiscretizeRegionStrategiesDump`rules, Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims, Region`Mesh`DiscretizeRegionStrategiesDump`reg, Region`Mesh`DiscretizeRegionStrategiesDump`bbox, Region`Mesh`DiscretizeRegionStrategiesDump`mcmd, Region`Mesh`DiscretizeRegionStrategiesDump`tol, Region`Mesh`DiscretizeRegionStrategiesDump`tempcfun, Region`Mesh`DiscretizeRegionStrategiesDump`x$, Region`Mesh`DiscretizeRegionStrategiesDump`maxConstraintTime, Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub, Region`Mesh`DiscretizeRegionStrategiesDump`ir, Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail}, Region`Mesh`DiscretizeRegionStrategiesDump`dPrint[4, \".....ProcessDiscretizeRegionMethods....\"]; Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub = {}; Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail := Throw[$Failed, \"PROCESS_METHOD_FAILURE\"]; Region`Mesh`DiscretizeRegionStrategiesDump`maxConstraintTime = Region`Mesh`$SymbolicSubprocessTimeConstraint; Region`Mesh`DiscretizeRegionStrategiesDump`bbox = Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"Bounds\"]; If[Region`Mesh`DiscretizeRegionStrategiesDump`bbox === $Failed ||  !VectorQ[Flatten[Region`Mesh`DiscretizeRegionStrategiesDump`bbox], NumericQ], Region`Mesh`DiscretizeRegionStrategiesDump`dPrint[5, \"....could not obtain bounding box..try again.\"]; Region`Mesh`DiscretizeRegionStrategiesDump`ir = Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"TransformedRegion\"]; If[Head[Region`Mesh`DiscretizeRegionStrategiesDump`ir] =!= ImplicitRegion, Region`Mesh`DiscretizeRegionStrategiesDump`ir = Region`Mesh`Utilities`ConvertTransformedRegionToImplicitRegion[Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"Region\"]]; ]; If[Region`Mesh`DiscretizeRegionStrategiesDump`ir =!= $Failed, Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub = Region`Mesh`RegionSpecificationData[Region`Mesh`DiscretizeRegionStrategiesDump`ir]; If[ !Region`Mesh`RegionSpecificationDataQ[Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; Region`Mesh`DiscretizeRegionStrategiesDump`bbox = Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub[\"Bounds\"]; , Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]]; Region`Mesh`DiscretizeRegionStrategiesDump`dim = Length[Region`Mesh`DiscretizeRegionStrategiesDump`bbox]; Region`Mesh`DiscretizeRegionStrategiesDump`cdims = TimeConstrained[Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"ComponentDimensions\"], Region`Mesh`DiscretizeRegionStrategiesDump`maxConstraintTime, $Failed]; If[Region`Mesh`DiscretizeRegionStrategiesDump`cdims === $Failed, Region`Mesh`DiscretizeRegionStrategiesDump`dPrint[5, \"....could not obtain ComponentDimensions...try again.\"]; If[ !Region`Mesh`RegionSpecificationDataQ[Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub], Region`Mesh`DiscretizeRegionStrategiesDump`ir = Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"TransformedRegion\"]; If[Head[Region`Mesh`DiscretizeRegionStrategiesDump`ir] =!= ImplicitRegion, Region`Mesh`DiscretizeRegionStrategiesDump`ir = Region`Mesh`Utilities`ConvertTransformedRegionToImplicitRegion[Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"Region\"]]; ]; If[Head[Region`Mesh`DiscretizeRegionStrategiesDump`ir] =!= ImplicitRegion, Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub = Region`Mesh`RegionSpecificationData[Region`Mesh`DiscretizeRegionStrategiesDump`ir, Region`Mesh`DiscretizeRegionStrategiesDump`bbox]; If[ !Region`Mesh`RegionSpecificationDataQ[Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; ]; Region`Mesh`DiscretizeRegionStrategiesDump`cdims = TimeConstrained[Region`Mesh`DiscretizeRegionStrategiesDump`rspecSub[\"ComponentDimensions\"], Region`Mesh`DiscretizeRegionStrategiesDump`maxConstraintTime, $Failed]; If[Region`Mesh`DiscretizeRegionStrategiesDump`cdims === $Failed, Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; ]; Region`Mesh`DiscretizeRegionStrategiesDump`mcmd = If[Region`Mesh`DiscretizeRegionStrategiesDump`mhead === BoundaryDiscretizeRegion, Region`Mesh`Utilities`ProcessMaxCellMeasure[Region`Mesh`DiscretizeRegionStrategiesDump`bbox, Region`Mesh`DiscretizeRegionStrategiesDump`optsin, \"DefaultDimension\" -> \"Boundary\"], Region`Mesh`Utilities`ProcessMaxCellMeasure[Region`Mesh`DiscretizeRegionStrategiesDump`bbox, Region`Mesh`DiscretizeRegionStrategiesDump`optsin]]; If[ !FreeQ[Region`Mesh`DiscretizeRegionStrategiesDump`mcmd, $Failed], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; Region`Mesh`DiscretizeRegionStrategiesDump`tol = Region`Mesh`Utilities`ProcessTolerance[Region`Mesh`DiscretizeRegionStrategiesDump`bbox, Region`Mesh`DiscretizeRegionStrategiesDump`optsin]; If[ !MatchQ[Region`Mesh`DiscretizeRegionStrategiesDump`tol, _?NumericQ | None], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; If[Region`Mesh`StrategiesDataQ[Region`Mesh`DiscretizeRegionStrategiesDump`methodopts], If[Region`Mesh`DiscretizeRegionStrategiesDump`dim != Region`Mesh`DiscretizeRegionStrategiesDump`methodopts[\"EmbeddingDimension\"], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; If[Region`Mesh`DiscretizeRegionStrategiesDump`methodopts[\"RegionSpecificationData\"] =!= Region`Mesh`DiscretizeRegionStrategiesDump`rspec, Region`Mesh`DiscretizeRegionStrategiesDump`methodList = Region`Mesh`DiscretizeRegionStrategiesDump`methodopts; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"RegionSpecificationData\"] = Region`Mesh`DiscretizeRegionStrategiesDump`rspec; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"RegionCategory\"] = Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"RegionCategory\"]; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"ComponentDimensions\"] = Region`Mesh`DiscretizeRegionStrategiesDump`cdims; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"Bounds\"] = Region`Mesh`DiscretizeRegionStrategiesDump`bbox; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"MaxCellMeasureData\"] = Region`Mesh`DiscretizeRegionStrategiesDump`mcmd; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"Tolerance\"] = Region`Mesh`DiscretizeRegionStrategiesDump`tol; , Return[Region`Mesh`DiscretizeRegionStrategiesDump`methodopts, Block]]; Return[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Block]]; Region`Mesh`DiscretizeRegionStrategiesDump`methodList = Association[{\"MessageHead\" -> Region`Mesh`DiscretizeRegionStrategiesDump`mhead, \"EmbeddingDimension\" -> Region`Mesh`DiscretizeRegionStrategiesDump`dim, \"ComponentDimensions\" -> Region`Mesh`DiscretizeRegionStrategiesDump`cdims, \"Bounds\" -> Region`Mesh`DiscretizeRegionStrategiesDump`bbox, \"RegionSpecificationData\" -> Region`Mesh`DiscretizeRegionStrategiesDump`rspec, \"MeshOrder\" -> Region`Mesh`DiscretizeRegionStrategiesDump`mord, \"MaxCellMeasureData\" -> Region`Mesh`DiscretizeRegionStrategiesDump`mcmd, \"Tolerance\" -> Region`Mesh`DiscretizeRegionStrategiesDump`tol, \"RegionCategory\" -> Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"RegionCategory\"], \"RawOptions\" -> Region`Mesh`DiscretizeRegionStrategiesDump`methodopts, \"CompiledFunctionExternalEvaluation\" -> False}]; If[Region`Mesh`DiscretizeRegionStrategiesDump`mhead === BoundaryDiscretizeRegion, Region`Mesh`DiscretizeRegionStrategiesDump`ok = Region`Mesh`DiscretizeRegionStrategiesDump`InitialBoundaryDiscretizeRegionChecks[Region`Mesh`DiscretizeRegionStrategiesDump`rspec, Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims, Region`Mesh`DiscretizeRegionStrategiesDump`maxConstraintTime]; If[ !TrueQ[Region`Mesh`DiscretizeRegionStrategiesDump`ok], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; , If[Region`Mesh`DiscretizeRegionStrategiesDump`mhead === DiscretizeRegion, Region`Mesh`DiscretizeRegionStrategiesDump`ok = Region`Mesh`DiscretizeRegionStrategiesDump`InitialDiscretizeRegionChecks[Region`Mesh`DiscretizeRegionStrategiesDump`rspec, Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims]; If[ !TrueQ[Region`Mesh`DiscretizeRegionStrategiesDump`ok], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; , Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail; ]; ]; If[ !OptionQ[Region`Mesh`DiscretizeRegionStrategiesDump`methodopts], Region`Mesh`DiscretizeRegionStrategiesDump`tmp = Flatten[{Region`Mesh`DiscretizeRegionStrategiesDump`methodopts}]; Region`Mesh`DiscretizeRegionStrategiesDump`ok = Or @@ (Region`Mesh`DiscretizationMethodQ[Region`Mesh`DiscretizeRegionStrategiesDump`dim, #1, First[Region`Mesh`DiscretizeRegionStrategiesDump`tmp], True] & ) \/@ Region`Mesh`DiscretizeRegionStrategiesDump`cdims; If[ !Region`Mesh`DiscretizeRegionStrategiesDump`ok, Region`Mesh`DiscretizeRegionStrategiesDump`ok = Or @@ (Region`Mesh`DiscretizationMethodQ[Region`Mesh`DiscretizeRegionStrategiesDump`dim, #1, First[Region`Mesh`DiscretizeRegionStrategiesDump`tmp], False] & ) \/@ Region`Mesh`DiscretizeRegionStrategiesDump`cdims; If[ !Region`Mesh`DiscretizeRegionStrategiesDump`ok, Region`Mesh`DiscretizeRegionStrategiesDump`IssueBadMethodMessage[Region`Mesh`DiscretizeRegionStrategiesDump`mhead, Region`Mesh`DiscretizeRegionStrategiesDump`methodopts, Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims, 1]; Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail; ]; ]; Region`Mesh`DiscretizeRegionStrategiesDump`rules = Region`Mesh`DiscretizeRegionStrategiesDump`ProcessDimensionalComponents[Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims, 1, Region`Mesh`DiscretizeRegionStrategiesDump`mhead, Region`Mesh`DiscretizeRegionStrategiesDump`tmp]; If[Region`Mesh`DiscretizeRegionStrategiesDump`rules === $Failed ||  !Region`Mesh`DiscretizeRegionStrategiesDump`ListOfRulesQ[Region`Mesh`DiscretizeRegionStrategiesDump`rules], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; AssociateTo[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`rules]; , Region`Mesh`DiscretizeRegionStrategiesDump`methods = Flatten[{Region`Mesh`DiscretizeRegionStrategiesDump`methodopts}]; Region`Mesh`DiscretizeRegionStrategiesDump`len = Length[Region`Mesh`DiscretizeRegionStrategiesDump`methods]; Do[Region`Mesh`DiscretizeRegionStrategiesDump`mi = Region`Mesh`DiscretizeRegionStrategiesDump`methods[[Region`Mesh`DiscretizeRegionStrategiesDump`i]]; If[ !(Region`Mesh`DiscretizeRegionStrategiesDump`ValidRuleQ[Region`Mesh`DiscretizeRegionStrategiesDump`mi] && OptionQ[Region`Mesh`DiscretizeRegionStrategiesDump`mi]), Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; Region`Mesh`DiscretizeRegionStrategiesDump`sname = First[Region`Mesh`DiscretizeRegionStrategiesDump`mi]; Region`Mesh`DiscretizeRegionStrategiesDump`id = Region`Mesh`DiscretizeRegionStrategiesDump`MethodTypeNameToID[Region`Mesh`DiscretizeRegionStrategiesDump`sname]; If[ !Region`Mesh`DiscretizeRegionStrategiesDump`ValidMethodTypeID[Region`Mesh`DiscretizeRegionStrategiesDump`id], Region`Mesh`DiscretizeRegionStrategiesDump`IssueBadMethodTypeMessage[Region`Mesh`DiscretizeRegionStrategiesDump`mhead, Region`Mesh`DiscretizeRegionStrategiesDump`sname]; Throw[$Failed, \"PROCESS_METHOD_FAILURE\"]]; Region`Mesh`DiscretizeRegionStrategiesDump`snameOpts = Flatten[{Region`Mesh`DiscretizeRegionStrategiesDump`mi[[2]]}]; Switch[Region`Mesh`DiscretizeRegionStrategiesDump`id, 1, Region`Mesh`DiscretizeRegionStrategiesDump`rules = Region`Mesh`DiscretizeRegionStrategiesDump`ProcessDimensionalComponents[Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims, Region`Mesh`DiscretizeRegionStrategiesDump`id, Region`Mesh`DiscretizeRegionStrategiesDump`mhead, Region`Mesh`DiscretizeRegionStrategiesDump`snameOpts]; If[Region`Mesh`DiscretizeRegionStrategiesDump`rules === $Failed ||  !Region`Mesh`DiscretizeRegionStrategiesDump`ListOfRulesQ[Region`Mesh`DiscretizeRegionStrategiesDump`rules], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; , _, Region`Mesh`DiscretizeRegionStrategiesDump`rules = Region`Mesh`DiscretizeRegionStrategiesDump`GeneralProcessMethodOptions[Region`Mesh`DiscretizeRegionStrategiesDump`dim, Region`Mesh`DiscretizeRegionStrategiesDump`cdims, Region`Mesh`DiscretizeRegionStrategiesDump`id, Region`Mesh`DiscretizeRegionStrategiesDump`mhead, Region`Mesh`DiscretizeRegionStrategiesDump`snameOpts]; If[Region`Mesh`DiscretizeRegionStrategiesDump`rules === $Failed ||  !Region`Mesh`DiscretizeRegionStrategiesDump`ListOfRulesQ[Region`Mesh`DiscretizeRegionStrategiesDump`rules], Region`Mesh`DiscretizeRegionStrategiesDump`ThrowFail]; ]; AssociateTo[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`rules]; , {Region`Mesh`DiscretizeRegionStrategiesDump`i, Region`Mesh`DiscretizeRegionStrategiesDump`len}]; ]; Do[Region`Mesh`DiscretizeRegionStrategiesDump`sname = StringJoin[Region`Mesh`DiscretizeRegionStrategiesDump`$MethodNames[[Region`Mesh`DiscretizeRegionStrategiesDump`i]], \"Method\"]; If[ !KeyExistsQ[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`sname], AssociateTo[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`sname -> Automatic]; Region`Mesh`DiscretizeRegionStrategiesDump`sname = StringJoin[Region`Mesh`DiscretizeRegionStrategiesDump`sname, \"Options\"]; AssociateTo[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`sname -> {}]; , Region`Mesh`DiscretizeRegionStrategiesDump`tmp = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[Region`Mesh`DiscretizeRegionStrategiesDump`sname]; If[MatchQ[Region`Mesh`DiscretizeRegionStrategiesDump`tmp, False | None], Region`Mesh`DiscretizeRegionStrategiesDump`sname = StringJoin[Region`Mesh`DiscretizeRegionStrategiesDump`sname, \"Options\"]; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[Region`Mesh`DiscretizeRegionStrategiesDump`sname] = {}; ]; ]; , {Region`Mesh`DiscretizeRegionStrategiesDump`i, Length[Region`Mesh`DiscretizeRegionStrategiesDump`$MethodNames]}]; If[MatchQ[Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"RegionCategory\"], \"Symbolic\" | \"Derived\"], Region`Mesh`DiscretizeRegionStrategiesDump`tmp = TimeConstrained[Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"Predicates\"], Region`Mesh`DiscretizeRegionStrategiesDump`maxConstraintTime, $Failed]; Quiet[If[( !FreeQ[Region`Mesh`DiscretizeRegionStrategiesDump`tmp, Element] ||  !FreeQ[Region`Mesh`DiscretizeRegionStrategiesDump`tmp, Root] ||  !MatchQ[Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"BoundaryFunction\"[\"IncludeBounds\" -> Automatic]], _CompiledFunction]) && Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] === Automatic, Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] = \"Semialgebraic\"; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"] = {}; ]]; If[Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] === Automatic, Block[{Region`Mesh`DiscretizeRegionStrategiesDump`vars, Region`Mesh`DiscretizeRegionStrategiesDump`checkPatt1, Region`Mesh`DiscretizeRegionStrategiesDump`checkPatt2}, Region`Mesh`DiscretizeRegionStrategiesDump`vars = Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"PredicateVariables\"]; Region`Mesh`DiscretizeRegionStrategiesDump`checkPatt1 = MatchQ[And @@ (_?NumericQ <= #1 <= _?NumericQ & ) \/@ Region`Mesh`DiscretizeRegionStrategiesDump`vars]; Region`Mesh`DiscretizeRegionStrategiesDump`checkPatt2 = MatchQ[And @@ (Inequality[_?NumericQ, LessEqual, #1, LessEqual, _?NumericQ] & ) \/@ Region`Mesh`DiscretizeRegionStrategiesDump`vars]; Region`Mesh`DiscretizeRegionStrategiesDump`reg = Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"Predicates\"]; If[Region`Mesh`DiscretizeRegionStrategiesDump`checkPatt1[Region`Mesh`DiscretizeRegionStrategiesDump`reg] || Region`Mesh`DiscretizeRegionStrategiesDump`checkPatt2[Region`Mesh`DiscretizeRegionStrategiesDump`reg] || MatchQ[Region`Mesh`DiscretizeRegionStrategiesDump`reg, _FullRegion], Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] = \"DualMarchingCells\"; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"] = {\"PlotPoints\" -> Automatic}; ]; ]; ]; If[Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] === Automatic && Region`Mesh`DiscretizeRegionStrategiesDump`dim == 2, Region`Mesh`DiscretizeRegionStrategiesDump`tempcfun = Region`Mesh`Utilities`MakeListableCompiledFunction[Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"Predicates\"], Region`Mesh`DiscretizeRegionStrategiesDump`rspec[\"PredicateVariables\"]]; Which[TrueQ[Compile`HasExternalEvaluation[Region`Mesh`DiscretizeRegionStrategiesDump`tempcfun]], Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] = \"DualMarchingCells\"; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"] = {\"PlotPoints\" -> Automatic}; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"CompiledFunctionExternalEvaluation\"] = True; ,  !FreeQ[Region`Mesh`DiscretizeRegionStrategiesDump`tmp, Max | Min], Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"] = \"DualMarchingCells\"; Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"[Region`Mesh`DiscretizeRegionStrategiesDump`dim]] = Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethodOptions\"] = {\"PlotPoints\" -> Region`Mesh`Internal`$DefaultFallbackMarchingSquaresPlotPoints}; ]; ]; ]; Region`Mesh`DiscretizeRegionStrategiesDump`rules = Flatten[Table[If[KeyExistsQ[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, \"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`i]], \"ActualDiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`i] -> Region`Mesh`DiscretizeRegionStrategiesDump`methodList[\"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`i]], {\"ActualDiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`i] -> Automatic, \"DiscretizationMethod\"[Region`Mesh`DiscretizeRegionStrategiesDump`i] -> Automatic, \"DiscretizationMethodOptions\"[Region`Mesh`DiscretizeRegionStrategiesDump`i] -> {}}], {Region`Mesh`DiscretizeRegionStrategiesDump`i, 0, 3}]]; AssociateTo[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`rules]; AssociateTo[Region`Mesh`DiscretizeRegionStrategiesDump`methodList, Region`Mesh`DiscretizeRegionStrategiesDump`StrategiesData -> True]; Region`Mesh`DiscretizeRegionStrategiesDump`methodList], \"PROCESS_METHOD_FAILURE\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`ProcessDiscretizeRegionMethods",
	"NDSolve`ProcessEquations":"ObjectType: Symbol\nUsage: NDSolve`ProcessEquations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                                                                                                                                                                                   1\n{AccuracyGoal -> Automatic, Compiled -> Automatic, DependentVariables -> Automatic, DiscreteVariables -> {}, EvaluationMonitor -> None, InitialSeeding -> {}, InterpolationOrder -> Automatic, MaxStepFraction -> --, MaxSteps -> Automatic, MaxStepSize -> Automatic, Method -> Automatic, NormFunction -> Automatic, PrecisionGoal -> Automatic, StartingStepSize -> Automatic, StepMonitor -> None, WorkingPrecision -> MachinePrecision}\n                                                                                                                                                                                                                  10\nAttributes: {}\nFullName: NDSolve`ProcessEquations",
	"NDSolve`StateData`ProcessExpression":"ObjectType: Symbol\nUsage: NDSolve`StateData`ProcessExpression\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, Evaluated -> False, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, WorkingPrecision -> Automatic, WorkingVariables -> False}\nAttributes: {}\nFullName: NDSolve`StateData`ProcessExpression",
	"GeoGraphics`ProcessGeoStyling":"ObjectType: Symbol\nUsage: GeoGraphics`ProcessGeoStyling\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeoGraphics`ProcessGeoStyling[System`GeoStylingDump`geoInput_, System`GeoStylingDump`map_Symbol, System`GeoStylingDump`callerhead_] := Catch[Module[{System`GeoStylingDump`geoNormalized, System`GeoStylingDump`tmp, System`GeoStylingDump`timing}, System`GeoStylingDump`timing = AbsoluteTime[]; System`GeoStylingDump`geoNormalized = System`GeoStylingDump`ResolveGeoStylingTraverse[System`GeoStylingDump`geoInput, {\"GeoStyling\", System`GeoStylingDump`callerhead, System`GeoStylingDump`map}]; GIS`Debug`print[\"geoNormalized after handling 2d primitives: \", GIS`Debug`short[System`GeoStylingDump`geoNormalized]]; GIS`Debug`timingprint[\"  Evaluation of GeoStyling objects: \", -System`GeoStylingDump`timing + (System`GeoStylingDump`timing = AbsoluteTime[])]; GIS`Debug`checkprint[System`GeoStylingDump`geoNormalized]; System`GeoStylingDump`tmp = System`GeoStylingDump`ResolveGeoStyling[System`GeoStylingDump`map[\"BackgroundPolygon\"], System`GeoStylingDump`map[\"GeoBackground\"], {\"GeoBackground\", System`GeoStylingDump`callerhead, System`GeoStylingDump`map}]; If[System`GeoStylingDump`tmp =!= $Failed, System`GeoStylingDump`geoNormalized = {Annotation[System`GeoStylingDump`tmp, \"GeoBackground\", \"WolframGeoGraphics\"], System`GeoStylingDump`geoNormalized}]; GIS`Debug`print[\"geoNormalized after handling GeoBackground: \", GIS`Debug`short[System`GeoStylingDump`geoNormalized]]; GIS`Debug`timingprint[\"  Evaluation of GeoBackground: \", -System`GeoStylingDump`timing + (System`GeoStylingDump`timing = AbsoluteTime[])]; GIS`Debug`checkprint[System`GeoStylingDump`geoNormalized]; System`GeoStylingDump`geoNormalized], \"GeoStylingError\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeoGraphics`ProcessGeoStyling",
	"System`Dump`ProcessGraphicsComplex":"ObjectType: Symbol\nUsage: System`Dump`ProcessGraphicsComplex\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessGraphicsComplex[GraphicsComplex[System`Dump`c_, System`Dump`g_, System`Dump`opts___], System`Dump`fmt_, Graphics] := (GraphicsComplexBox[System`Dump`c, #1, System`Dump`opts] & ) @@ {System`Dump`GraphicsComplexElementToBoxes[System`Dump`c, System`Dump`g, System`Dump`fmt, Graphics]}\nSystem`Dump`ProcessGraphicsComplex[GraphicsComplex[System`Dump`c_, System`Dump`g_, System`Dump`opts___], System`Dump`fmt_, Graphics3D] := (GraphicsComplex3DBox[System`Dump`c, #1, System`Dump`opts] & ) @@ {System`Dump`GraphicsComplexElementToBoxes[System`Dump`c, System`Dump`g, System`Dump`fmt, Graphics3D]}\nSystem`Dump`ProcessGraphicsComplex[GraphicsComplex[System`Dump`a___], System`Dump`fmt_, Graphics] := GraphicsComplexBox[System`Dump`a]\nSystem`Dump`ProcessGraphicsComplex[GraphicsComplex[System`Dump`a___], System`Dump`fmt_, Graphics3D] := GraphicsComplex3DBox[System`Dump`a]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ProcessGraphicsComplex",
	"Parallel`Developer`ProcessID":"ObjectType: Symbol\nUsage: Parallel`Developer`ProcessID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`ProcessID",
	"NDSolve`FEM`ProcessInequality":"ObjectType: Symbol\nUsage: NDSolve`FEM`ProcessInequality\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`ProcessInequality[(NDSolve`FEM`PDEParserDump`a_) < (NDSolve`FEM`PDEParserDump`b_)] := {NDSolve`FEM`PDEParserDump`b - NDSolve`FEM`PDEParserDump`a, GreaterEqual, Identity, Identity}\nNDSolve`FEM`ProcessInequality[(NDSolve`FEM`PDEParserDump`a_) <= (NDSolve`FEM`PDEParserDump`b_)] := {NDSolve`FEM`PDEParserDump`b - NDSolve`FEM`PDEParserDump`a, GreaterEqual, Identity, Minus}\nNDSolve`FEM`ProcessInequality[(NDSolve`FEM`PDEParserDump`a_) > (NDSolve`FEM`PDEParserDump`b_)] := {NDSolve`FEM`PDEParserDump`a - NDSolve`FEM`PDEParserDump`b, GreaterEqual, Identity, Identity}\nNDSolve`FEM`ProcessInequality[(NDSolve`FEM`PDEParserDump`a_) >= (NDSolve`FEM`PDEParserDump`b_)] := {NDSolve`FEM`PDEParserDump`a - NDSolve`FEM`PDEParserDump`b, GreaterEqual, Identity, Minus}\nNDSolve`FEM`ProcessInequality[(NDSolve`FEM`PDEParserDump`a_) == (NDSolve`FEM`PDEParserDump`b_)] := {NDSolve`FEM`PDEParserDump`b - NDSolve`FEM`PDEParserDump`a, LessEqual, Abs, Identity}\nNDSolve`FEM`ProcessInequality[(NDSolve`FEM`PDEParserDump`a_) != (NDSolve`FEM`PDEParserDump`b_)] := {NDSolve`FEM`PDEParserDump`b - NDSolve`FEM`PDEParserDump`a, GreaterEqual, Abs, Identity}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ProcessInequality",
	"System`Dump`ProcessInset":"ObjectType: Symbol\nUsage: System`Dump`ProcessInset\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessInset[Inset[RawBoxes[System`Dump`x_], System`Dump`y___], System`Dump`fmt_, Graphics] := InsetBox[System`Dump`x, System`Dump`y]\nSystem`Dump`ProcessInset[Inset[Cell[System`Dump`x___], System`Dump`y___], System`Dump`fmt_, Graphics] := InsetBox[Cell[System`Dump`x], System`Dump`y]\nSystem`Dump`ProcessInset[Inset[Graphics[System`Dump`x___], System`Dump`y___], System`Dump`fmt_, Graphics] := With[{System`Dump`a = Typeset`MakeBoxes[Graphics[System`Dump`x], System`Dump`fmt, Graphics]}, InsetBox[System`Dump`a, System`Dump`y]]\nSystem`Dump`ProcessInset[Inset[Graphics3D[System`Dump`x___], System`Dump`y___], System`Dump`fmt_, Graphics] := With[{System`Dump`a = Typeset`MakeBoxes[Graphics3D[System`Dump`x], System`Dump`fmt, Graphics3D]}, InsetBox[System`Dump`a, System`Dump`y]]\nSystem`Dump`ProcessInset[Inset[System`Dump`x_, System`Dump`coords___, (System`Dump`opts___)?System`Dump`HeldOptionQ], System`Dump`fmt_, Graphics] := With[{System`Dump`a = System`Dump`TextToBoxes[System`Dump`x, System`Dump`fmt, {System`Dump`opts}, Inset]}, InsetBox[BoxData[System`Dump`a], System`Dump`coords, System`Dump`opts]]\nSystem`Dump`ProcessInset[Inset[System`Dump`a___], System`Dump`fmt_, Graphics] := InsetBox[System`Dump`a]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ProcessInset",
	"Sum`ProcessIterators":"ObjectType: Symbol\nUsage: Sum`ProcessIterators\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sum`ProcessIterators[Sum`SumLibraryDump`iter_, Sum`SumLibraryDump`e_] := If[Union[Head \/@ Sum`SumLibraryDump`iter] === {List} && Union[Length \/@ Sum`SumLibraryDump`iter] === {3}, {Sum`SumLibraryDump`iter, Sum`SumLibraryDump`e}, Module[{Sum`SumLibraryDump`itt = Sum`SumLibraryDump`iter, Sum`SumLibraryDump`ee = Sum`SumLibraryDump`e, Sum`SumLibraryDump`it, Sum`SumLibraryDump`x, Sum`SumLibraryDump`a, Sum`SumLibraryDump`b, Sum`SumLibraryDump`h}, Do[Sum`SumLibraryDump`it = Sum`SumLibraryDump`itt[[Sum`SumLibraryDump`k]]; If[Head[Sum`SumLibraryDump`it] === List, Switch[Length[Sum`SumLibraryDump`it], 2, Sum`SumLibraryDump`itt[[Sum`SumLibraryDump`k]] = {Sum`SumLibraryDump`it[[1]], 1, Sum`SumLibraryDump`it[[2]]}, 4, {Sum`SumLibraryDump`x, Sum`SumLibraryDump`a, Sum`SumLibraryDump`b, Sum`SumLibraryDump`h} = Sum`SumLibraryDump`it; If[(Sum`SumLibraryDump`a === -Infinity && Sum`SumLibraryDump`h < 0) || (Sum`SumLibraryDump`a === Infinity && Sum`SumLibraryDump`h > 0), Return[{}, Module]]; If[Sum`SumLibraryDump`h === 1, Sum`SumLibraryDump`itt[[Sum`SumLibraryDump`k]] = {Sum`SumLibraryDump`x, Sum`SumLibraryDump`a, Sum`SumLibraryDump`b}, If[Sum`SumLibraryDump`a === -Infinity && FreeQ[{Sum`SumLibraryDump`b, Sum`SumLibraryDump`h}, DirectedInfinity] && Sum`SumLibraryDump`h > 0, Sum`SumLibraryDump`ee = Sum`SumLibraryDump`ee \/. {Sum`SumLibraryDump`x -> -Sum`SumLibraryDump`x}; Sum`SumLibraryDump`a = -Sum`SumLibraryDump`b; Sum`SumLibraryDump`b = Infinity]; If[Sum`SumLibraryDump`h === -1 && (Sum`SumLibraryDump`a === Infinity || (IntegerQ[Sum`SumLibraryDump`b] &&  !NumericQ[Sum`SumLibraryDump`a])), Sum`SumLibraryDump`itt[[Sum`SumLibraryDump`k]] = {Sum`SumLibraryDump`x, Ceiling[Sum`SumLibraryDump`b], Sum`SumLibraryDump`a}, If[ !FreeQ[{Sum`SumLibraryDump`a, Sum`SumLibraryDump`h}, DirectedInfinity], Return[$Failed, Module]]; Sum`SumLibraryDump`ee = Sum`SumLibraryDump`ee \/. Sum`SumLibraryDump`x -> Sum`SumLibraryDump`h*Sum`SumLibraryDump`x + Sum`SumLibraryDump`a; Sum`SumLibraryDump`itt[[Sum`SumLibraryDump`k]] = {Sum`SumLibraryDump`x, 0, Floor[(Sum`SumLibraryDump`b - Sum`SumLibraryDump`a)\/Sum`SumLibraryDump`h]}]]]], {Sum`SumLibraryDump`k, Length[Sum`SumLibraryDump`iter]}]; {Sum`SumLibraryDump`itt, Sum`SumLibraryDump`ee}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sum`ProcessIterators",
	"Optimization`Utilities`ProcessLinearConicConstraints":"ObjectType: Symbol\nUsage: Optimization`Utilities`ProcessLinearConicConstraints\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Optimization`Utilities`ProcessLinearConicConstraints[{}] := {{}, {}, {}}\nOptimization`Utilities`ProcessLinearConicConstraints[Optimization`Utilities`OptimizationUtilitiesDump`conicConstraints_List] := Block[{Optimization`Utilities`OptimizationUtilitiesDump`cones, Optimization`Utilities`OptimizationUtilitiesDump`eqAffineList = {}, Optimization`Utilities`OptimizationUtilitiesDump`ineqAffineList = {}, Optimization`Utilities`OptimizationUtilitiesDump`n}, Optimization`Utilities`OptimizationUtilitiesDump`cones = Optimization`Utilities`ConicConstraintConeSpecification \/@ Optimization`Utilities`OptimizationUtilitiesDump`conicConstraints; If[MatchQ[Optimization`Utilities`OptimizationUtilitiesDump`cones[[1]], {\"EqualityConstraint\", _}], Optimization`Utilities`OptimizationUtilitiesDump`eqAffineList = Optimization`Utilities`ConicConstraintAffineList[Optimization`Utilities`OptimizationUtilitiesDump`conicConstraints[[1]]]; Optimization`Utilities`OptimizationUtilitiesDump`n = 1; If[Length[Optimization`Utilities`OptimizationUtilitiesDump`cones] > 1 && MatchQ[Optimization`Utilities`OptimizationUtilitiesDump`cones[[2]], {\"NonNegativeCone\", _}], Optimization`Utilities`OptimizationUtilitiesDump`ineqAffineList = Optimization`Utilities`ConicConstraintAffineList[Optimization`Utilities`OptimizationUtilitiesDump`conicConstraints[[2]]]; Optimization`Utilities`OptimizationUtilitiesDump`n++; ]; Return[{Optimization`Utilities`OptimizationUtilitiesDump`eqAffineList, Optimization`Utilities`OptimizationUtilitiesDump`ineqAffineList, Range[Optimization`Utilities`OptimizationUtilitiesDump`n]}, Block]; ]; If[MatchQ[Optimization`Utilities`OptimizationUtilitiesDump`cones[[1]], {\"NonNegativeCone\", _}], Optimization`Utilities`OptimizationUtilitiesDump`ineqAffineList = Optimization`Utilities`ConicConstraintAffineList[Optimization`Utilities`OptimizationUtilitiesDump`conicConstraints[[1]]]; Return[{Optimization`Utilities`OptimizationUtilitiesDump`eqAffineList, Optimization`Utilities`OptimizationUtilitiesDump`ineqAffineList, {1}}, Block]; ]; {Optimization`Utilities`OptimizationUtilitiesDump`eqAffineList, Optimization`Utilities`OptimizationUtilitiesDump`ineqAffineList, {}}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`Utilities`ProcessLinearConicConstraints",
	"System`Dump`ProcessLocatorArgs":"ObjectType: Symbol\nUsage: System`Dump`ProcessLocatorArgs\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessLocatorArgs[None, System`Dump`fmt_, System`Dump`hed_] := None\nSystem`Dump`ProcessLocatorArgs[Automatic, System`Dump`fmt_, System`Dump`head_] := Automatic\nSystem`Dump`ProcessLocatorArgs[System`Dump`a_, System`Dump`fmt_, System`Dump`head_] := MakeBoxes[System`Dump`a, System`Dump`fmt]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Dump`ProcessLocatorArgs",
	"Region`Mesh`Utilities`ProcessMaxCellMeasure":"ObjectType: Symbol\nUsage: Region`Mesh`Utilities`ProcessMaxCellMeasure\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`Utilities`ProcessMaxCellMeasure[Region`Mesh`MeshUtilitiesDump`bbox_, (Region`Mesh`MeshUtilitiesDump`opts___)?OptionQ] := Module[{Region`Mesh`MeshUtilitiesDump`measures, Region`Mesh`MeshUtilitiesDump`specified, Region`Mesh`MeshUtilitiesDump`value, Region`Mesh`MeshUtilitiesDump`given, Region`Mesh`MeshUtilitiesDump`etype, Region`Mesh`MeshUtilitiesDump`defaultd, Region`Mesh`MeshUtilitiesDump`d = Length[Region`Mesh`MeshUtilitiesDump`bbox], Region`Mesh`MeshUtilitiesDump`n, Region`Mesh`MeshUtilitiesDump`bbvol, Region`Mesh`MeshUtilitiesDump`mhead, Region`Mesh`MeshUtilitiesDump`mess = False}, {Region`Mesh`MeshUtilitiesDump`value, Region`Mesh`MeshUtilitiesDump`etype, Region`Mesh`MeshUtilitiesDump`mhead, Region`Mesh`MeshUtilitiesDump`defaultd} = Region`Mesh`MeshUtilitiesDump`extractValues[FilterRules[Flatten[{Region`Mesh`MeshUtilitiesDump`opts}], Options[Region`Mesh`MeshUtilitiesDump`extractValues]]]; Region`Mesh`MeshUtilitiesDump`defaultd = Switch[Region`Mesh`MeshUtilitiesDump`defaultd, \"Boundary\", Max[1, Region`Mesh`MeshUtilitiesDump`d - 1], Region`Mesh`MeshUtilitiesDump`dd_Integer \/; 1 <= Region`Mesh`MeshUtilitiesDump`dd <= 3, Region`Mesh`MeshUtilitiesDump`defaultd, _, Region`Mesh`MeshUtilitiesDump`d]; Region`Mesh`MeshUtilitiesDump`given = Region`Mesh`MeshUtilitiesDump`value; If[Region`Mesh`MeshUtilitiesDump`MaxCellMeasureDataQ[Region`Mesh`MeshUtilitiesDump`given], Return[Region`Mesh`MeshUtilitiesDump`given, Module]]; If[ !ListQ[Region`Mesh`MeshUtilitiesDump`given], Region`Mesh`MeshUtilitiesDump`given = {Region`Mesh`MeshUtilitiesDump`given}]; Region`Mesh`MeshUtilitiesDump`given = Flatten[Region`Mesh`MeshUtilitiesDump`given]; Region`Mesh`MeshUtilitiesDump`given = Replace[Region`Mesh`MeshUtilitiesDump`given, (Region`Mesh`MeshUtilitiesDump`dim_Integer \/; StringQ[Region`Mesh`MeshUtilitiesDump`MeasureName[Region`Mesh`MeshUtilitiesDump`dim]] -> Region`Mesh`MeshUtilitiesDump`v_) :> Region`Mesh`MeshUtilitiesDump`MeasureName[Region`Mesh`MeshUtilitiesDump`dim] -> Region`Mesh`MeshUtilitiesDump`v, {1}]; If[ !OptionQ[Region`Mesh`MeshUtilitiesDump`given], Region`Mesh`MeshUtilitiesDump`given = Replace[Region`Mesh`MeshUtilitiesDump`given, {Region`Mesh`MeshUtilitiesDump`v_, (Region`Mesh`MeshUtilitiesDump`rules___)?OptionQ} :> {Region`Mesh`MeshUtilitiesDump`MeasureName[Region`Mesh`MeshUtilitiesDump`defaultd] -> Region`Mesh`MeshUtilitiesDump`v, Region`Mesh`MeshUtilitiesDump`rules}]]; Region`Mesh`MeshUtilitiesDump`measures = N[Quiet[Region`Mesh`MeshUtilitiesDump`extractMeasures[Region`Mesh`MeshUtilitiesDump`given]]]; Region`Mesh`MeshUtilitiesDump`measures = (Region`Mesh`MeshUtilitiesDump`acceptableMeasure[Region`Mesh`MeshUtilitiesDump`mess, #1] & ) \/@ Region`Mesh`MeshUtilitiesDump`measures; If[TrueQ[Region`Mesh`MeshUtilitiesDump`mess] && Region`Mesh`MeshUtilitiesDump`mhead =!= None, With[{Region`Mesh`MeshUtilitiesDump`caller = Region`Mesh`MeshUtilitiesDump`mhead}, Message[Region`Mesh`MeshUtilitiesDump`caller::bdmcm, Region`Mesh`MeshUtilitiesDump`value]]]; Region`Mesh`MeshUtilitiesDump`specified = (#1 =!= Automatic & ) \/@ Region`Mesh`MeshUtilitiesDump`measures; If[Or @@ Region`Mesh`MeshUtilitiesDump`specified === False, Region`Mesh`MeshUtilitiesDump`n = \"DefaultNumberOfElements\" \/. (\"FiniteElementOptions\" \/. SystemOptions[]); Region`Mesh`MeshUtilitiesDump`bbvol = Select[Abs[Apply[Subtract, Region`Mesh`MeshUtilitiesDump`bbox, {1}]], Positive]; If[Length[Region`Mesh`MeshUtilitiesDump`bbvol] == 0, Region`Mesh`MeshUtilitiesDump`n = Region`Mesh`MeshUtilitiesDump`n^Region`Mesh`MeshUtilitiesDump`d; Region`Mesh`MeshUtilitiesDump`bbvol = 1, Region`Mesh`MeshUtilitiesDump`n = Region`Mesh`MeshUtilitiesDump`n^Length[Region`Mesh`MeshUtilitiesDump`bbvol]; Region`Mesh`MeshUtilitiesDump`bbvol = Times @@ Region`Mesh`MeshUtilitiesDump`bbvol; ]; Region`Mesh`MeshUtilitiesDump`measures[[Region`Mesh`MeshUtilitiesDump`d]] = N[Region`Mesh`MeshUtilitiesDump`bbvol\/Region`Mesh`MeshUtilitiesDump`n]; ]; Switch[Region`Mesh`MeshUtilitiesDump`d, 1, Region`Mesh`MeshUtilitiesDump`etype = NDSolve`FEM`LineElement, 2, Region`Mesh`MeshUtilitiesDump`etype = If[Region`Mesh`MeshUtilitiesDump`etype =!= NDSolve`FEM`QuadElement, NDSolve`FEM`TriangleElement, NDSolve`FEM`QuadElement], 3, Region`Mesh`MeshUtilitiesDump`etype = If[Region`Mesh`MeshUtilitiesDump`etype =!= NDSolve`FEM`HexahedronElement, NDSolve`FEM`TetrahedronElement, NDSolve`FEM`HexahedronElement], _, Region`Mesh`MeshUtilitiesDump`etype = Automatic]; Region`Mesh`MeshUtilitiesDump`measures = MapIndexed[Region`Mesh`MeshUtilitiesDump`deriveMeasure[Region`Mesh`MeshUtilitiesDump`etype, #1, #2] & , Region`Mesh`MeshUtilitiesDump`measures]; Region`Mesh`MeshUtilitiesDump`measures = Min \/@ Transpose[Region`Mesh`MeshUtilitiesDump`measures]; If[Min[Region`Mesh`MeshUtilitiesDump`measures] == Infinity, Region`Mesh`MeshUtilitiesDump`specified = ConstantArray[False, Length[Region`Mesh`MeshUtilitiesDump`measures]]]; Region`Mesh`MeshUtilitiesDump`MaxCellMeasureData[Region`Mesh`MeshUtilitiesDump`measures, Region`Mesh`MeshUtilitiesDump`specified]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`Utilities`ProcessMaxCellMeasure",
	"Region`Mesh`Utilities`ProcessMeshQualityGoal":"ObjectType: Symbol\nUsage: Region`Mesh`Utilities`ProcessMeshQualityGoal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`Utilities`ProcessMeshQualityGoal[Region`Mesh`MeshUtilitiesDump`opts___] := Region`Mesh`MeshUtilitiesDump`GetMeshQualityGoal[FilterRules[{Region`Mesh`MeshUtilitiesDump`opts}, Options[Region`Mesh`MeshUtilitiesDump`GetMeshQualityGoal]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`Utilities`ProcessMeshQualityGoal",
	"RandomProcesses`Library`ProcessNParameterQ":"ObjectType: Symbol\nUsage: RandomProcesses`Library`ProcessNParameterQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`ProcessNParameterQ",
	"NDSolve`EventLocator`ProcessOneEventMethod":"ObjectType: Symbol\nUsage: NDSolve`EventLocator`ProcessOneEventMethod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`EventLocator`ProcessOneEventMethod[Automatic, NDSolve`EventLocatorDump`args__] := NDSolve`EventLocator`ProcessOneEventMethod[\"Brent\", NDSolve`EventLocatorDump`args]\nNDSolve`EventLocator`ProcessOneEventMethod[NDSolve`EventLocatorDump`eventmethod_Symbol, NDSolve`EventLocatorDump`args__] := NDSolve`EventLocator`ProcessOneEventMethod[System`Utilities`StringName[NDSolve`EventLocatorDump`eventmethod], NDSolve`EventLocatorDump`args]\nNDSolve`EventLocator`ProcessOneEventMethod[NDSolve`EventLocatorDump`mstr:\"Brent\" | \"BrentBracketRoot\" | \"StepBegin\" | \"StepEnd\" | \"LinearInterpolation\" | \"EventInterpolation\", NDSolve`EventLocatorDump`args__] := NDSolve`EventLocator`ProcessOneEventMethod[{NDSolve`EventLocatorDump`mstr}, NDSolve`EventLocatorDump`args]\nNDSolve`EventLocator`ProcessOneEventMethod[NDSolve`EventLocatorDump`s_String, NDSolve`EventLocatorDump`args__, NDSolve`EventLocatorDump`ndstate_] := Throw[NDSolve`NDSolveMessage[NDSolve`EventLocatorDump`ndstate, \"evlm\", NDSolve`EventLocatorDump`s]; $Failed]\nNDSolve`EventLocator`ProcessOneEventMethod[{NDSolve`EventLocatorDump`s_Symbol, NDSolve`EventLocatorDump`opts___}, NDSolve`EventLocatorDump`args__] := NDSolve`EventLocator`ProcessOneEventMethod[{System`Utilities`StringName[NDSolve`EventLocatorDump`s], NDSolve`EventLocatorDump`opts}, NDSolve`EventLocatorDump`args]\nNDSolve`EventLocator`ProcessOneEventMethod[{\"StepBegin\"}, NDSolve`EventLocatorDump`args__] := \"StepBegin\"[]\nNDSolve`EventLocator`ProcessOneEventMethod[{\"StepEnd\"}, NDSolve`EventLocatorDump`args__] := \"StepEnd\"[]\nNDSolve`EventLocator`ProcessOneEventMethod[{\"LinearInterpolation\"}, NDSolve`EventLocatorDump`args__] := \"LinearInterpolation\"[]\nNDSolve`EventLocator`ProcessOneEventMethod[{\"EventInterpolation\"}, NDSolve`EventLocatorDump`args__] := \"EventInterpolation\"[]\nNDSolve`EventLocator`ProcessOneEventMethod[{NDSolve`EventLocatorDump`method:\"Brent\" | \"BrentBracketRoot\", NDSolve`EventLocatorDump`opts___}, NDSolve`EventLocatorDump`eventnf_, NDSolve`EventLocatorDump`ndstate_] := Module[{NDSolve`EventLocatorDump`ag, NDSolve`EventLocatorDump`maxit, NDSolve`EventLocatorDump`pg, NDSolve`EventLocatorDump`sol, NDSolve`EventLocatorDump`bool, NDSolve`EventLocatorDump`wprec, NDSolve`EventLocatorDump`optvals, NDSolve`EventLocatorDump`project}, {NDSolve`EventLocatorDump`ag, NDSolve`EventLocatorDump`maxit, NDSolve`EventLocatorDump`pg, NDSolve`EventLocatorDump`project, NDSolve`EventLocatorDump`sol} = NDSolve`GetMethodOptionValues[NDSolve`EventLocator`Brent, NDSolve`EventLocatorDump`BrentProperties, {NDSolve`EventLocatorDump`opts}]; NDSolve`EventLocatorDump`optvals = NDSolve`EventLocatorDump`ndstate[\"OptionValues\"]; If[ !NDSolve`EventLocatorDump`RealOrAIQ[NDSolve`EventLocatorDump`ag], NDSolve`NDSolveMessage[NDSolve`EventLocatorDump`ndstate, \"accg\", NDSolve`EventLocatorDump`ag]; Throw[$Failed]]; If[NDSolve`EventLocatorDump`ag === Automatic, NDSolve`EventLocatorDump`ag = AccuracyGoal \/. NDSolve`EventLocatorDump`optvals]; If[ !NDSolve`EventLocatorDump`RealOrAIQ[NDSolve`EventLocatorDump`pg], NDSolve`NDSolveMessage[NDSolve`EventLocatorDump`ndstate, \"precg\", NDSolve`EventLocatorDump`pg]; Throw[$Failed]]; If[NDSolve`EventLocatorDump`pg === Automatic, NDSolve`EventLocatorDump`pg = PrecisionGoal \/. NDSolve`EventLocatorDump`optvals]; If[ !(NDSolve`EventLocatorDump`maxit === Infinity || (IntegerQ[NDSolve`EventLocatorDump`maxit] && Positive[NDSolve`EventLocatorDump`maxit])), NDSolve`NDSolveMessage[NDSolve`EventLocatorDump`ndstate, \"ioppf\", MaxIterations, NDSolve`EventLocatorDump`maxit] . Throw[$Failed]]; If[NDSolve`EventLocatorDump`sol =!= Automatic, NDSolve`EventLocatorDump`sol = System`Utilities`StringName[NDSolve`EventLocatorDump`sol]; If[ !MatchQ[NDSolve`EventLocatorDump`sol, \"CubicHermiteInterpolation\" | \"Interpolation\" | \"InvokeMethod\"], NDSolve`NDSolveMessage[NDSolve`EventLocatorDump`ndstate, \"evsa\", NDSolve`EventLocatorDump`sol]; Throw[$Failed]]; ]; NDSolve`EventLocatorDump`bool = NDSolve`EventLocatorDump`BooleanResultQ[NDSolve`EventLocatorDump`eventnf]; NDSolve`EventLocatorDump`wprec = NDSolve`EventLocatorDump`ndstate[\"WorkingPrecision\"]; NDSolve`EventLocatorDump`method[NDSolve`EventLocatorDump`sol, TrueQ[NDSolve`EventLocatorDump`project], {AccuracyGoal -> If[NDSolve`EventLocatorDump`bool, {NDSolve`EventLocatorDump`ag, 0}, NDSolve`EventLocatorDump`ag], Compiled -> {False, \"CompilationOptions\" -> None}, MaxIterations -> NDSolve`EventLocatorDump`maxit, PrecisionGoal -> NDSolve`EventLocatorDump`pg, WorkingPrecision -> NDSolve`EventLocatorDump`wprec}]]\nNDSolve`EventLocator`ProcessOneEventMethod[NDSolve`EventLocatorDump`method_, NDSolve`EventLocatorDump`args__, NDSolve`EventLocatorDump`ndstate_] := Throw[NDSolve`NDSolveMessage[NDSolve`EventLocatorDump`ndstate, \"evlm\", NDSolve`EventLocatorDump`method]; $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`EventLocator`ProcessOneEventMethod",
	"NIntegrate`ProcessOptionNames":"ObjectType: Symbol\nUsage: NIntegrate`ProcessOptionNames\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NIntegrate`ProcessOptionNames[(NIntegrate`BNFDefinitionsDump`r:Rule | RuleDelayed)[NIntegrate`BNFDefinitionsDump`name_, NIntegrate`BNFDefinitionsDump`val_]] := NIntegrate`BNFDefinitionsDump`r[NIntegrate`StringName[NIntegrate`BNFDefinitionsDump`name], NIntegrate`BNFDefinitionsDump`val]\nNIntegrate`ProcessOptionNames[NIntegrate`BNFDefinitionsDump`opt_] := NIntegrate`BNFDefinitionsDump`opt\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: NIntegrate`ProcessOptionNames",
	"System`Utilities`ProcessOptionNames":"ObjectType: Symbol\nUsage: System`Utilities`ProcessOptionNames\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Utilities`ProcessOptionNames[(System`Utilities`UtilitiesDump`r:Rule | RuleDelayed)[System`Utilities`UtilitiesDump`name_Symbol, System`Utilities`UtilitiesDump`val_]] := System`Utilities`UtilitiesDump`r[SymbolName[System`Utilities`UtilitiesDump`name], System`Utilities`UtilitiesDump`val]\nSystem`Utilities`ProcessOptionNames[System`Utilities`UtilitiesDump`opt_] := System`Utilities`UtilitiesDump`opt\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: System`Utilities`ProcessOptionNames",
	"FrontEnd`ProcessPastedMathMLIntoBoxes":"ObjectType: Symbol\nUsage: FrontEnd`ProcessPastedMathMLIntoBoxes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FrontEnd`ProcessPastedMathMLIntoBoxes[System`FEDump`mathML_] := XML`MathML`MathMLToBoxes[System`FEDump`mathML]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FrontEnd`ProcessPastedMathMLIntoBoxes",
	"Random`ProcessPath":"ObjectType: Symbol\nUsage: Random`ProcessPath\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`ProcessPath",
	"NDSolve`FEM`ProcessPDEEquations":"ObjectType: Symbol\nUsage: NDSolve`FEM`ProcessPDEEquations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`ProcessPDEEquations[{NDSolve`FEM`FEMUtilitiesDump`pdespec__}, NDSolve`FEM`FEMUtilitiesDump`u_, NDSolve`FEM`FEMUtilitiesDump`r__, NDSolve`FEM`FEMUtilitiesDump`opts:OptionsPattern[NDSolve`ProcessEquations]] := Module[{NDSolve`FEM`FEMUtilitiesDump`ndstate, NDSolve`FEM`FEMUtilitiesDump`feData, NDSolve`FEM`FEMUtilitiesDump`sd, NDSolve`FEM`FEMUtilitiesDump`vd, NDSolve`FEM`FEMUtilitiesDump`bcData, NDSolve`FEM`FEMUtilitiesDump`methodData, NDSolve`FEM`FEMUtilitiesDump`pdeData}, {NDSolve`FEM`FEMUtilitiesDump`ndstate} = Flatten[{NDSolve`ProcessEquations[Flatten[{NDSolve`FEM`FEMUtilitiesDump`pdespec}], NDSolve`FEM`FEMUtilitiesDump`u, Sequence @@ {NDSolve`FEM`FEMUtilitiesDump`r}, NDSolve`FEM`FEMUtilitiesDump`opts]}]; If[ !NDSolve`ValidStateDataQ[NDSolve`FEM`FEMUtilitiesDump`ndstate], Return[$Failed]; ]; NDSolve`FEM`FEMUtilitiesDump`sd = NDSolve`FEM`FEMUtilitiesDump`ndstate[\"SolutionData\"][[1]]; NDSolve`FEM`FEMUtilitiesDump`vd = NDSolve`FEM`FEMUtilitiesDump`ndstate[\"VariableData\"]; NDSolve`FEM`FEMUtilitiesDump`feData = NDSolve`FEM`FEMUtilitiesDump`ndstate[\"FiniteElementData\"]; If[Head[NDSolve`FEM`FEMUtilitiesDump`feData] =!= NDSolve`FEM`FiniteElementData, Return[$Failed]; ]; NDSolve`FEM`FEMUtilitiesDump`pdeData = NDSolve`FEM`FEMUtilitiesDump`feData[\"PDECoefficientData\"]; NDSolve`FEM`FEMUtilitiesDump`bcData = NDSolve`FEM`FEMUtilitiesDump`feData[\"BoundaryConditionData\"]; NDSolve`FEM`FEMUtilitiesDump`methodData = NDSolve`FEM`FEMUtilitiesDump`feData[\"FEMMethodData\"]; {NDSolve`FEM`DiscretizePDE[NDSolve`FEM`FEMUtilitiesDump`pdeData, NDSolve`FEM`FEMUtilitiesDump`methodData, NDSolve`FEM`FEMUtilitiesDump`sd], NDSolve`FEM`DiscretizeBoundaryConditions[NDSolve`FEM`FEMUtilitiesDump`bcData, NDSolve`FEM`FEMUtilitiesDump`methodData, NDSolve`FEM`FEMUtilitiesDump`sd], NDSolve`FEM`FEMUtilitiesDump`vd, NDSolve`FEM`FEMUtilitiesDump`sd, NDSolve`FEM`FEMUtilitiesDump`methodData}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ProcessPDEEquations",
	"NDSolve`FEM`ProcessPDESolutions":"ObjectType: Symbol\nUsage: NDSolve`FEM`ProcessPDESolutions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`ProcessPDESolutions[(NDSolve`FEM`FEMUtilitiesDump`md_)?NDSolve`FEM`FEMUtilitiesDump`mdQ, (NDSolve`FEM`FEMUtilitiesDump`sd_)?NDSolve`FEM`FEMUtilitiesDump`sdQ, NDSolve`FEM`FEMUtilitiesDump`opts:OptionsPattern[NDSolve`FEM`ElementMeshInterpolation]] := Block[{NDSolve`FEM`FEMUtilitiesDump`dof, NDSolve`FEM`FEMUtilitiesDump`result, NDSolve`FEM`FEMUtilitiesDump`mesh, NDSolve`FEM`FEMUtilitiesDump`io, NDSolve`FEM`FEMUtilitiesDump`split}, NDSolve`FEM`FEMUtilitiesDump`dof = NDSolve`FEM`FEMUtilitiesDump`md[\"DegreesOfFreedom\"]; NDSolve`FEM`FEMUtilitiesDump`result = NDSolve`SolutionDataComponent[NDSolve`FEM`FEMUtilitiesDump`sd, \"DependentVariables\"]; If[ !VectorQ[NDSolve`FEM`FEMUtilitiesDump`result, NumericQ] || Length[NDSolve`FEM`FEMUtilitiesDump`result] != NDSolve`FEM`FEMUtilitiesDump`dof, Return[$Failed, Block]]; NDSolve`FEM`FEMUtilitiesDump`mesh = NDSolve`FEM`FEMUtilitiesDump`md[\"ElementMesh\"]; NDSolve`FEM`FEMUtilitiesDump`io = NDSolve`FEM`FEMUtilitiesDump`md[\"InterpolationOrder\"]; NDSolve`FEM`FEMUtilitiesDump`split = Apply[Span, Transpose[({Most[#1 + 1], Rest[#1]} & )[NDSolve`FEM`FEMUtilitiesDump`md[\"IncidentOffsets\"]]], {1}]; MapThread[NDSolve`FEM`ElementMeshInterpolation[{NDSolve`FEM`MeshOrderAlteration[NDSolve`FEM`FEMUtilitiesDump`mesh, #1]}, #2, FilterRules[{NDSolve`FEM`FEMUtilitiesDump`opts}, Options[NDSolve`FEM`ElementMeshInterpolation]]] & , {NDSolve`FEM`FEMUtilitiesDump`io, (NDSolve`FEM`FEMUtilitiesDump`result[[#1]] & ) \/@ NDSolve`FEM`FEMUtilitiesDump`split}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ProcessPDESolutions",
	"GeoGraphics`ProcessPositions":"ObjectType: Symbol\nUsage: GeoGraphics`ProcessPositions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeoGraphics`ProcessPositions[{}, System`GeoReverseDump`dim_, System`GeoReverseDump`map_Symbol] := Module[{}, System`GeoReverseDump`map[\"GeoInputLonLatRange\"] = {}; System`GeoReverseDump`map[\"GeoInputMapLonLatRange\"] = {}; System`GeoReverseDump`map[\"GeoInputLonLatPosition\"] = {}; System`GeoReverseDump`map[\"GeoInputXYPosition\"] = {}; {}]\nGeoGraphics`ProcessPositions[System`GeoReverseDump`expr_, System`GeoReverseDump`dim_, System`GeoReverseDump`map_Symbol] := Module[{System`GeoReverseDump`data}, System`GeoReverseDump`data = Reap[GeoGraphics`MapAtLoc[System`GeoReverseDump`processPosition[#1, System`GeoReverseDump`dim, True] & , System`GeoReverseDump`expr], {\"LonLatRange\", \"MapLonLatRange\", \"LonLatPosition\", \"XYPosition\"}]; System`GeoReverseDump`map[\"GeoInputLonLatRange\"] = DeleteCases[Flatten[System`GeoReverseDump`data[[2,1]], 1], {}]; System`GeoReverseDump`map[\"GeoInputMapLonLatRange\"] = DeleteCases[Flatten[System`GeoReverseDump`data[[2,2]], 1], {}]; System`GeoReverseDump`map[\"GeoInputLonLatPosition\"] = System`GeoReverseDump`data[[2,3]]; System`GeoReverseDump`map[\"GeoInputXYPosition\"] = System`GeoReverseDump`data[[2,4]]; First[System`GeoReverseDump`data] \/. _GeoGraphics`TemporaryObject :> Sequence[]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeoGraphics`ProcessPositions",
	"System`Dump`ProcessRemote":"ObjectType: Symbol\nUsage: System`Dump`ProcessRemote\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessRemote[System`Dump`linkIn_, System`Dump`eventID_, System`Dump`eventFuncsIn_, System`Dump`origExprHeldIn_] := Module[{System`Dump`handlerKeys = Tasks`GetTaskEventKeys[System`Dump`eventID], System`Dump`link = System`Dump`linkIn, System`Dump`eventDataID = System`Dump`eventID, System`Dump`eventFuncs = System`Dump`eventFuncsIn, System`Dump`origExprHeld = System`Dump`origExprHeldIn}, Function[{System`Dump`asyncObj, System`Dump`name, System`Dump`value}, Switch[System`Dump`name, \"DataReady\", Module[{System`Dump`packet, System`Dump`packetHead, System`Dump`eventName, System`Dump`eventData, System`Dump`remoteEventName, System`Dump`taskObj, System`Dump`taskID}, System`Dump`packet = LinkReadHeld[System`Dump`link]; System`Dump`packetHead = Extract[System`Dump`packet, {1, 0}]; System`Dump`eventName = ToString[System`Dump`packetHead]; System`Dump`taskObj = Tasks`FindParentTaskObject[System`Dump`asyncObj]; System`Dump`taskID = Tasks`FindParentTaskID[System`Dump`asyncObj]; If[MemberQ[System`Dump`handlerKeys, \"Task\"], Tasks`SetTaskEventValue[System`Dump`eventDataID, \"Task\", System`Dump`taskObj]]; If[MemberQ[System`Dump`handlerKeys, \"TaskUUID\"], Tasks`SetTaskEventValue[System`Dump`eventDataID, \"TaskUUID\", System`Dump`taskID]]; If[MemberQ[System`Dump`handlerKeys, \"TaskType\"], Tasks`SetTaskEventValue[System`Dump`eventDataID, \"TaskType\", \"Immediate\"]]; If[ValueQ[Internal`$DebugBuild] && Internal`$DebugBuild, If[MemberQ[System`Dump`handlerKeys, \"LowLevelEventName\"], Tasks`SetTaskEventValue[System`Dump`eventDataID, \"LowLevelEventName\", System`Dump`eventName]]; If[MemberQ[System`Dump`handlerKeys, \"EventData\"], Tasks`SetTaskEventValue[System`Dump`eventDataID, \"EventData\", System`Dump`packet]]; If[MemberQ[System`Dump`handlerKeys, \"TaskData\"], Tasks`SetTaskEventValue[System`Dump`eventDataID, \"TaskData\", Tasks`GetTaskEventData[System`Dump`eventDataID]]]]; If[MemberQ[System`Dump`handlerKeys, \"EvaluationExpression\"], Tasks`SetTaskEventValueHeld[System`Dump`eventDataID, \"EvaluationExpression\", System`Dump`origExprHeld]]; Which[System`Dump`packetHead === Tasks`EventPacket, System`Dump`eventData = Extract[System`Dump`packet, {1, 1}]; System`Dump`remoteEventName = Lookup[System`Dump`eventData, \"EventName\", None]; Switch[System`Dump`remoteEventName, \"ScheduleTriggered\", Tasks`Package`handleEvent[\"ScheduleTriggered\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], \"ScheduleExecuted\", Tasks`Package`handleEvent[\"ScheduleExecuted\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], \"TaskStarted\", Tasks`Package`handleEvent[\"TaskStarted\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], \"TaskFinished\", None, \"TaskRemoved\", None, \"TaskStatusChanged\", None, \"MessageGenerated\", Tasks`Package`handleEvent[\"MessageGenerated\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], \"PrintOutputGenerated\", Tasks`Package`handleEvent[\"PrintOutputGenerated\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], \"ResultReceived\", Tasks`Package`handleEvent[\"ReturnResult\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], \"FailureOccurred\", Tasks`Package`handleEvent[\"FailureOccurred\", System`Dump`eventDataID, System`Dump`eventData, System`Dump`eventFuncs], _, None], System`Dump`packetHead === ReturnPacket, Tasks`TaskFinish[System`Dump`taskObj], True, None]], \"KernelTerminated\", Module[{System`Dump`taskID, System`Dump`taskObj, System`Dump`failure, System`Dump`errorcode}, System`Dump`taskObj = Tasks`FindParentTaskObject[System`Dump`asyncObj]; System`Dump`taskID = Tasks`FindParentTaskID[System`Dump`asyncObj]; System`Dump`errorcode = System`Dump`value[[1]]; System`Dump`failure = Failure[\"RemoteKernelFailure\", Association[\"MessageTemplate\" :> StringTemplate[\"Task `taskID`: remote kernel terminated.\"], \"MessageParameters\" -> Association[\"taskID\" -> System`Dump`taskID]]]; Tasks`Package`handleEvent[\"FailureOccurred\", System`Dump`eventDataID, Association[\"Failure\" -> System`Dump`failure], System`Dump`eventFuncs]; Tasks`Package`handleEvent[\"TaskFinished\", System`Dump`eventDataID, None, System`Dump`eventFuncs]; Tasks`Package`handleEvent[\"TaskRemoved\", System`Dump`eventDataID, None, System`Dump`eventFuncs]; Tasks`TaskFinish[System`Dump`taskObj]], _, Null]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ProcessRemote",
	"Parallel`Developer`ProcessResult":"ObjectType: Symbol\nUsage: Parallel`Developer`ProcessResult\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`ProcessResult",
	"Optimization`SolutionData`ProcessSolutionData":"ObjectType: Symbol\nUsage: Optimization`SolutionData`ProcessSolutionData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`SolutionData`ProcessSolutionData",
	"NDSolve`ProcessSolutions":"ObjectType: Symbol\nUsage: NDSolve`ProcessSolutions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ProcessSolutions",
	"Statistics`Library`ProcessSolveResult":"ObjectType: Symbol\nUsage: Statistics`Library`ProcessSolveResult\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ProcessSolveResult[Statistics`DistributionEstimateDump`dist_, Statistics`DistributionEstimateDump`res_] := Block[{Statistics`DistributionEstimateDump`newres, Statistics`DistributionEstimateDump`assumps}, Statistics`DistributionEstimateDump`newres = Quiet[Pick[Statistics`DistributionEstimateDump`res, (Statistics`Library`DistributionNParameterQ[Statistics`DistributionEstimateDump`dist \/. #1] & ) \/@ Statistics`DistributionEstimateDump`res]]; If[Head[Statistics`DistributionEstimateDump`newres] =!= List || Length[Statistics`DistributionEstimateDump`newres] < 1, Statistics`DistributionEstimateDump`assumps = Statistics`DistributionEstimateDump`myDistributionParameterAssumptions[Statistics`DistributionEstimateDump`dist]; Statistics`DistributionEstimateDump`assumps = DeleteCases[Statistics`DistributionEstimateDump`assumps, _?(Internal`LiterallyOccurringQ[#1, Integers] & )]; Statistics`DistributionEstimateDump`newres = Quiet[Pick[Statistics`DistributionEstimateDump`res, (Statistics`DistributionEstimateDump`assumps \/. #1 & ) \/@ Statistics`DistributionEstimateDump`res]]]; If[Head[Statistics`DistributionEstimateDump`newres] =!= List || Length[Statistics`DistributionEstimateDump`newres] < 1, $Failed, Statistics`DistributionEstimateDump`newres[[1]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ProcessSolveResult",
	"Parallel`Developer`ProcessState":"ObjectType: Symbol\nUsage: Parallel`Developer`ProcessState\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`ProcessState",
	"RandomProcesses`Library`ProcessStateDimensionality":"ObjectType: Symbol\nUsage: RandomProcesses`Library`ProcessStateDimensionality\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`ProcessStateDimensionality[RandomProcesses`Library`Dump`proc_] := Module[{RandomProcesses`Library`Dump`pdom}, RandomProcesses`Library`Dump`pdom = ProcessStateDomain[RandomProcesses`Library`Dump`proc]; Which[Statistics`Library`UnivariateDomainSpecificationQ[RandomProcesses`Library`Dump`pdom], 1, VectorQ[RandomProcesses`Library`Dump`pdom, Statistics`Library`UnivariateDomainSpecificationQ], Length[RandomProcesses`Library`Dump`pdom], True, 0] \/; Head[RandomProcesses`Library`Dump`pdom] =!= ProcessStateDomain]\nRandomProcesses`Library`ProcessStateDimensionality[___] := 0\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`ProcessStateDimensionality",
	"System`Dump`ProcessSymbolicAxesEdge":"ObjectType: Symbol\nUsage: System`Dump`ProcessSymbolicAxesEdge\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessSymbolicAxesEdge[System`Dump`a_List] := {\"yz\", \"xz\", \"xy\"} \/. System`Dump`ProcessAxesEdge \/@ Sort \/@ System`Dump`a \/. {\"yz\" -> None, \"xz\" -> None, \"xy\" -> None}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ProcessSymbolicAxesEdge",
	"System`Dump`ProcessSymbolicFrame":"ObjectType: Symbol\nUsage: System`Dump`ProcessSymbolicFrame\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessSymbolicFrame[System`Dump`a_List] := Map[MemberQ[System`Dump`a, #1] & , {{Left, Right}, {Bottom, Top}}, {2}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ProcessSymbolicFrame",
	"System`Dump`ProcessSymbolicFrameTicks":"ObjectType: Symbol\nUsage: System`Dump`ProcessSymbolicFrameTicks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessSymbolicFrameTicks[System`Dump`a_List] := Map[First[Cases[Append[System`Dump`a, {#1, None}], {#1, System`Dump`ticks_} :> System`Dump`ticks]] & , {{Left, Right}, {Bottom, Top}}, {2}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ProcessSymbolicFrameTicks",
	"System`Dump`ProcessSymbolicFrameTicksStyle":"ObjectType: Symbol\nUsage: System`Dump`ProcessSymbolicFrameTicksStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessSymbolicFrameTicksStyle[System`Dump`a_List] := Map[First[Cases[Append[System`Dump`a, {#1, None}], {#1, System`Dump`sty_} :> System`Dump`sty]] & , {{Left, Right}, {Bottom, Top}}, {2}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ProcessSymbolicFrameTicksStyle",
	"System`ConvertersDump`Utilities`ProcessTableHeaders":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`ProcessTableHeaders\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`ProcessTableHeaders[(System`ConvertersDump`Utilities`Private`tbl_)?FailureQ, System`ConvertersDump`Utilities`Private`sLines_, System`ConvertersDump`Utilities`Private`hLines_, System`ConvertersDump`Utilities`Private`opts:OptionsPattern[]] := Block[{System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines, System`ConvertersDump`Utilities`Private`datasetMode}, {System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines} = Replace[{System`ConvertersDump`Utilities`Private`sLines, System`ConvertersDump`Utilities`Private`hLines}, {System`ConvertersDump`Utilities`Private`x_Integer :> {System`ConvertersDump`Utilities`Private`x, 0}, Automatic -> {0, 0}}, {1}]; System`ConvertersDump`Utilities`Private`datasetMode = Quiet[TrueQ[OptionValue[\"Dataset\"]]]; (If[Positive[#1], Message[Import::hdrs, #1, \"SkipLines\"]; ] & ) \/@ System`ConvertersDump`Utilities`Private`$sLines; (If[Positive[#1], Message[Import::hdrs, #1, \"HeaderLines\"]; ] & ) \/@ System`ConvertersDump`Utilities`Private`$hLines; $Failed] \/; MatchQ[System`ConvertersDump`Utilities`Private`hLines, Automatic | _?Internal`NonNegativeIntegerQ | {_?Internal`NonNegativeIntegerQ, _?Internal`NonNegativeIntegerQ}] && MatchQ[System`ConvertersDump`Utilities`Private`sLines, Automatic | _?Internal`NonNegativeIntegerQ | {_?Internal`NonNegativeIntegerQ, _?Internal`NonNegativeIntegerQ}]\nSystem`ConvertersDump`Utilities`ProcessTableHeaders[System`ConvertersDump`Utilities`Private`tbl:{_List..}, System`ConvertersDump`Utilities`Private`sLines_, System`ConvertersDump`Utilities`Private`hLines_, System`ConvertersDump`Utilities`Private`opts:OptionsPattern[]] := Block[{System`ConvertersDump`Utilities`Private`datasetMode, System`ConvertersDump`Utilities`Private`numRows, System`ConvertersDump`Utilities`Private`maxCols, System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines, System`ConvertersDump`Utilities`Private`totalHeaderLines}, {System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines} = Replace[{System`ConvertersDump`Utilities`Private`sLines, System`ConvertersDump`Utilities`Private`hLines}, {System`ConvertersDump`Utilities`Private`x_Integer :> {System`ConvertersDump`Utilities`Private`x, 0}, Automatic -> {0, 0}}, {1}]; System`ConvertersDump`Utilities`Private`datasetMode = Quiet[TrueQ[OptionValue[\"Dataset\"]]]; If[System`ConvertersDump`Utilities`Private`$sLines === {0, 0} && System`ConvertersDump`Utilities`Private`$hLines === {0, 0}, If[System`ConvertersDump`Utilities`Private`datasetMode, Return[Dataset[System`ConvertersDump`Utilities`Private`tbl]]; , Return[System`ConvertersDump`Utilities`Private`tbl]; ]; ]; {System`ConvertersDump`Utilities`Private`numRows, System`ConvertersDump`Utilities`Private`maxCols} = {Length[System`ConvertersDump`Utilities`Private`tbl], Max[Length \/@ System`ConvertersDump`Utilities`Private`tbl]}; If[Inequality[0, Less, System`ConvertersDump`Utilities`Private`$sLines[[1]], GreaterEqual, System`ConvertersDump`Utilities`Private`numRows], Message[Import::hdrs, System`ConvertersDump`Utilities`Private`$sLines[[1]], \"SkipLines\"]; System`ConvertersDump`Utilities`Private`$sLines[[1]] = 0; ]; If[Inequality[0, Less, System`ConvertersDump`Utilities`Private`$sLines[[2]], GreaterEqual, System`ConvertersDump`Utilities`Private`maxCols], Message[Import::hdrs, System`ConvertersDump`Utilities`Private`$sLines[[2]], \"SkipLines\"]; System`ConvertersDump`Utilities`Private`$sLines[[2]] = 0; ]; System`ConvertersDump`Utilities`Private`totalHeaderLines = System`ConvertersDump`Utilities`Private`$sLines + System`ConvertersDump`Utilities`Private`$hLines; If[Inequality[0, Less, System`ConvertersDump`Utilities`Private`totalHeaderLines[[1]], GreaterEqual, System`ConvertersDump`Utilities`Private`numRows], Message[Import::hdrs, System`ConvertersDump`Utilities`Private`$hLines[[1]], \"HeaderLines\"]; System`ConvertersDump`Utilities`Private`$hLines[[1]] = 0; ]; If[Inequality[0, Less, System`ConvertersDump`Utilities`Private`totalHeaderLines[[2]], GreaterEqual, System`ConvertersDump`Utilities`Private`maxCols], Message[Import::hdrs, System`ConvertersDump`Utilities`Private`$hLines[[2]], \"HeaderLines\"]; System`ConvertersDump`Utilities`Private`$hLines[[2]] = 0; ]; If[System`ConvertersDump`Utilities`Private`$sLines === {0, 0} && System`ConvertersDump`Utilities`Private`$hLines === {0, 0}, If[System`ConvertersDump`Utilities`Private`datasetMode, Return[Dataset[System`ConvertersDump`Utilities`Private`tbl]]; , Return[System`ConvertersDump`Utilities`Private`tbl]; ]; ]; If[System`ConvertersDump`Utilities`Private`datasetMode, System`ConvertersDump`Utilities`Private`iProcessTableHeaders[\"Dataset\"][System`ConvertersDump`Utilities`Private`tbl, System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines, Quiet[OptionValue[\"EmptyField\"]]], System`ConvertersDump`Utilities`Private`iProcessTableHeaders[\"Data\"][System`ConvertersDump`Utilities`Private`tbl, System`ConvertersDump`Utilities`Private`$sLines + System`ConvertersDump`Utilities`Private`$hLines]]] \/; MatchQ[System`ConvertersDump`Utilities`Private`hLines, Automatic | _?Internal`NonNegativeIntegerQ | {_?Internal`NonNegativeIntegerQ, _?Internal`NonNegativeIntegerQ}] && MatchQ[System`ConvertersDump`Utilities`Private`sLines, Automatic | _?Internal`NonNegativeIntegerQ | {_?Internal`NonNegativeIntegerQ, _?Internal`NonNegativeIntegerQ}]\nSystem`ConvertersDump`Utilities`ProcessTableHeaders[System`ConvertersDump`Utilities`Private`tbl_, System`ConvertersDump`Utilities`Private`sLines_, System`ConvertersDump`Utilities`Private`hLines_, System`ConvertersDump`Utilities`Private`opts:OptionsPattern[]] := Block[{System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines, System`ConvertersDump`Utilities`Private`datasetMode}, {System`ConvertersDump`Utilities`Private`$sLines, System`ConvertersDump`Utilities`Private`$hLines} = Replace[{System`ConvertersDump`Utilities`Private`sLines, System`ConvertersDump`Utilities`Private`hLines}, {System`ConvertersDump`Utilities`Private`x_Integer :> {System`ConvertersDump`Utilities`Private`x, 0}, Automatic -> {0, 0}}, {1}]; System`ConvertersDump`Utilities`Private`datasetMode = Quiet[TrueQ[OptionValue[\"Dataset\"]]]; (If[Positive[#1], Message[Import::hdrs, #1, \"SkipLines\"]; ] & ) \/@ System`ConvertersDump`Utilities`Private`$sLines; (If[Positive[#1], Message[Import::hdrs, #1, \"HeaderLines\"]; ] & ) \/@ System`ConvertersDump`Utilities`Private`$hLines; If[System`ConvertersDump`Utilities`Private`datasetMode, Dataset[System`ConvertersDump`Utilities`Private`tbl], System`ConvertersDump`Utilities`Private`tbl]] \/; MatchQ[System`ConvertersDump`Utilities`Private`hLines, Automatic | _?Internal`NonNegativeIntegerQ | {_?Internal`NonNegativeIntegerQ, _?Internal`NonNegativeIntegerQ}] && MatchQ[System`ConvertersDump`Utilities`Private`sLines, Automatic | _?Internal`NonNegativeIntegerQ | {_?Internal`NonNegativeIntegerQ, _?Internal`NonNegativeIntegerQ}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Dataset -> False, EmptyField -> }\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`ProcessTableHeaders",
	"RuntimeTools`ProcessTags":"ObjectType: Symbol\nUsage: RuntimeTools`ProcessTags\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RuntimeTools`ProcessTags",
	"System`Dump`ProcessText":"ObjectType: Symbol\nUsage: System`Dump`ProcessText\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ProcessText[Text[System`Dump`expr_, System`Dump`coords__, (System`Dump`opts___)?System`Dump`HeldOptionQ], System`Dump`fmt_, System`Dump`boxhead_] := With[{System`Dump`boxes = System`Dump`TextToBoxes[System`Dump`expr, System`Dump`fmt, {System`Dump`opts}, Text], System`Dump`args = If[System`Dump`boxhead === Text3DBox, Unevaluated[System`Dump`coords], System`Dump`processTextArgs[System`Dump`coords]]}, System`Dump`boxhead[System`Dump`boxes, System`Dump`args, System`Dump`opts]]\nSystem`Dump`ProcessText[___] := {}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ProcessText",
	"RandomProcesses`Library`ProcessTimeSliceMarginal":"ObjectType: Symbol\nUsage: RandomProcesses`Library`ProcessTimeSliceMarginal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`ProcessTimeSliceMarginal[RandomProcesses`Library`Dump`proc_, RandomProcesses`Library`Dump`tspec_, RandomProcesses`Library`Dump`ind_] \/; RandomProcesses`Library`TimeSpecsParameterQ[RandomProcesses`Library`Dump`ind] := Module[{RandomProcesses`Library`Dump`procdim, RandomProcesses`Library`Dump`tlen, RandomProcesses`Library`Dump`distdim, RandomProcesses`Library`Dump`res}, RandomProcesses`Library`Dump`procdim = RandomProcesses`Library`ProcessStateDimensionality[RandomProcesses`Library`Dump`proc]; (RandomProcesses`Library`Dump`tlen = If[VectorQ[RandomProcesses`Library`Dump`tspec], Length[RandomProcesses`Library`Dump`tspec], 1]; RandomProcesses`Library`Dump`distdim = RandomProcesses`Library`Dump`procdim*RandomProcesses`Library`Dump`tlen; (If[RandomProcesses`Library`Dump`procdim == 1, RandomProcesses`Library`Dump`res = RandomProcesses`Library`Dump`iScalarProcessSliceMarginal[RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`tspec, RandomProcesses`Library`Dump`ind], RandomProcesses`Library`Dump`res = RandomProcesses`Library`Dump`iVectorProcessSliceMarginal[RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`tspec, RandomProcesses`Library`Dump`ind, RandomProcesses`Library`Dump`distdim, RandomProcesses`Library`Dump`procdim]]; RandomProcesses`Library`Dump`res \/; RandomProcesses`Library`Dump`res =!= $Failed) \/; Max[RandomProcesses`Library`Dump`ind] <= RandomProcesses`Library`Dump`distdim) \/; Internal`PositiveIntegerQ[RandomProcesses`Library`Dump`procdim]]\nRandomProcesses`Library`ProcessTimeSliceMarginal[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`ProcessTimeSliceMarginal",
	"Region`Mesh`Utilities`ProcessTolerance":"ObjectType: Symbol\nUsage: Region`Mesh`Utilities`ProcessTolerance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`Utilities`ProcessTolerance[Region`Mesh`MeshUtilitiesDump`bbox_, (Region`Mesh`MeshUtilitiesDump`opts___)?OptionQ] := Module[{Region`Mesh`MeshUtilitiesDump`ag, Region`Mesh`MeshUtilitiesDump`pg, Region`Mesh`MeshUtilitiesDump`pgoal, Region`Mesh`MeshUtilitiesDump`mhead, Region`Mesh`MeshUtilitiesDump`tol = 0., Region`Mesh`MeshUtilitiesDump`h}, Region`Mesh`MeshUtilitiesDump`h = Norm[Subtract @@ Transpose[Region`Mesh`MeshUtilitiesDump`bbox]]; {Region`Mesh`MeshUtilitiesDump`ag, Region`Mesh`MeshUtilitiesDump`pg, Region`Mesh`MeshUtilitiesDump`pgoal, Region`Mesh`MeshUtilitiesDump`mhead} = Region`Mesh`MeshUtilitiesDump`extractAGPG[FilterRules[Flatten[{Region`Mesh`MeshUtilitiesDump`opts}], Options[Region`Mesh`MeshUtilitiesDump`extractAGPG]]]; If[Region`Mesh`MeshUtilitiesDump`ag === Automatic && Region`Mesh`MeshUtilitiesDump`pg === Automatic, If[Region`Mesh`MeshUtilitiesDump`pgoal === \"Quality\", Region`Mesh`MeshUtilitiesDump`pg = 3; Region`Mesh`MeshUtilitiesDump`tol = Region`Mesh`MeshUtilitiesDump`h\/10.^Region`Mesh`MeshUtilitiesDump`pg, Region`Mesh`MeshUtilitiesDump`tol = None], If[MatchQ[Region`Mesh`MeshUtilitiesDump`ag, _Real], Region`Mesh`MeshUtilitiesDump`tol = 10.^(-Region`Mesh`MeshUtilitiesDump`ag)]; If[MatchQ[Region`Mesh`MeshUtilitiesDump`pg, _Real], Region`Mesh`MeshUtilitiesDump`tol += Region`Mesh`MeshUtilitiesDump`h\/10.^Region`Mesh`MeshUtilitiesDump`pg]; If[Region`Mesh`MeshUtilitiesDump`h > 0 && Region`Mesh`MeshUtilitiesDump`tol\/Region`Mesh`MeshUtilitiesDump`h < $MachineEpsilon*10.^Internal`$EqualTolerance, If[MatchQ[Region`Mesh`MeshUtilitiesDump`ag, None | Automatic] && Region`Mesh`MeshUtilitiesDump`pg === None, Region`Mesh`MeshUtilitiesDump`tol = None, Region`Mesh`MeshUtilitiesDump`tol = Region`Mesh`MeshUtilitiesDump`h*Sqrt[$MachineEpsilon]; If[Region`Mesh`MeshUtilitiesDump`mhead =!= None && MatchQ[Region`Mesh`MeshUtilitiesDump`mhead, _Symbol], With[{Region`Mesh`MeshUtilitiesDump`mh = Region`Mesh`MeshUtilitiesDump`mhead}, Message[Region`Mesh`MeshUtilitiesDump`mh::drtol, Region`Mesh`MeshUtilitiesDump`tol]]; ]]]]; Region`Mesh`MeshUtilitiesDump`tol]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`Utilities`ProcessTolerance",
	"Product`ProductAppendToGeneratedConditions":"ObjectType: Symbol\nUsage: Product`ProductAppendToGeneratedConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductAppendToGeneratedConditions[Product`ProductParserDump`expr_] := If[ListQ[Product`ProductParserDump`$ProductGeneratedConditions], AppendTo[Product`ProductParserDump`$ProductGeneratedConditions, Product`ProductParserDump`expr]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductAppendToGeneratedConditions",
	"Product`ProductConvergenceTest":"ObjectType: Symbol\nUsage: Product`ProductConvergenceTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductConvergenceTest[Product`InfiniteProductDump`expr_, Product`InfiniteProductDump`k_] := Block[{Product`InfiniteProductDump`res}, Product`InfiniteProductDump`res = TimeConstrained[Quiet[Product`InfiniteProductDump`ConvergenceTest[Product`InfiniteProductDump`expr, Product`InfiniteProductDump`k]], Product`$ProductConvergenceTestingTime, $Failed]; Simplify[Product`InfiniteProductDump`res, Product`$ProductAssumptions] \/; FreeQ[Product`InfiniteProductDump`res, $Failed]]\nProduct`ProductConvergenceTest[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductConvergenceTest",
	"Product`ProductDefinitePeriodic":"ObjectType: Symbol\nUsage: Product`ProductDefinitePeriodic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductDefinitePeriodic[Product`ProductPeriodicDump`multiplicand_, Product`ProductPeriodicDump`iterator_] := Block[{Product`ProductPeriodicDump`res}, Product`ProductPeriodicDump`res = Product`ProductPeriodicDump`productPeriodic[Product`ProductPeriodicDump`multiplicand, Product`ProductPeriodicDump`iterator]; Product`ProductPeriodicDump`res \/; FreeQ[Product`ProductPeriodicDump`res, $Failed]]\nProduct`ProductDefinitePeriodic[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductDefinitePeriodic",
	"Product`ProductDirichlet":"ObjectType: Symbol\nUsage: Product`ProductDirichlet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductDirichlet[Prime[Product`DivergentProductDump`k_]^(Product`DivergentProductDump`s_.), {Product`DivergentProductDump`k_, 1, Infinity}] \/; FreeQ[Product`DivergentProductDump`s, Product`DivergentProductDump`k] := (2*Pi)^(2*Product`DivergentProductDump`s)\nProduct`ProductDirichlet[Fibonacci[Product`DivergentProductDump`k_], {Product`DivergentProductDump`k_, 1, Infinity}] := (-1)^(1\/24)*5^(1\/4)*Exp[-(Log[5]^2\/(8*Log[GoldenRatio]))]*((1\/2)*EllipticThetaPrime[1, 0, -(I\/GoldenRatio)])^(1\/3)\nProduct`ProductDirichlet[Product`DivergentProductDump`expr_, {Product`DivergentProductDump`k_, 1, Infinity}] := Block[{Product`DivergentProductDump`test, Product`DivergentProductDump`res1, Product`DivergentProductDump`s, Product`DivergentProductDump`res2}, Product`DivergentProductDump`test = Product`DivergentProductDump`TestSequence[Product`DivergentProductDump`expr, Product`DivergentProductDump`k]; (Product`DivergentProductDump`res1 = Quiet[Check[Sum[PowerExpand[1\/Product`DivergentProductDump`expr^Product`DivergentProductDump`s], {Product`DivergentProductDump`k, 1, Infinity}], $Failed]]; (Product`DivergentProductDump`res2 = Quiet[Exp[-D[Product`DivergentProductDump`res1, Product`DivergentProductDump`s] \/. {Product`DivergentProductDump`s -> 0}]]; Product`DivergentProductDump`res2 \/; FreeQ[Product`DivergentProductDump`res2, DirectedInfinity | Indeterminate]) \/; FreeQ[Product`DivergentProductDump`res1, Sum | $Failed | DirectedInfinity | Indeterminate]) \/; Product`DivergentProductDump`test === True]\nProduct`ProductDirichlet[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductDirichlet",
	"Statistics`Library`ProductDistributionList":"ObjectType: Symbol\nUsage: Statistics`Library`ProductDistributionList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ProductDistributionList[Statistics`Library`Dump`dist__] := Block[{Statistics`Library`Dump`dlist, Statistics`Library`Dump`di}, Catch[Statistics`Library`Dump`dlist = Table[Switch[Statistics`Library`Dump`di, {(Statistics`Library`Dump`udist_)?Statistics`Library`DefiniteDistributionQ, (Statistics`Library`Dump`n_Integer)?Positive}, ConstantArray @@ Statistics`Library`Dump`di, _?Statistics`Library`DefiniteDistributionQ, {Statistics`Library`Dump`di}, _, Throw[$Failed]], {Statistics`Library`Dump`di, {Statistics`Library`Dump`dist}}]; Flatten[Replace[Flatten[Statistics`Library`Dump`dlist], HoldPattern[ProductDistribution][Statistics`Library`Dump`diseq__] :> Statistics`Library`ProductDistributionList[Statistics`Library`Dump`diseq], {1}]]]]\nStatistics`Library`ProductDistributionList[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ProductDistributionList",
	"Statistics`Library`ProductDistributionPartition":"ObjectType: Symbol\nUsage: Statistics`Library`ProductDistributionPartition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ProductDistributionPartition[(Statistics`Library`Dump`dvec_)?VectorQ, (Statistics`Library`Dump`xvec_)?VectorQ] \/; Length[Statistics`Library`Dump`dvec] <= Length[Statistics`Library`Dump`xvec] := Catch[Module[{Statistics`Library`Dump`pos = 1, Statistics`Library`Dump`bag, Statistics`Library`Dump`dim}, Statistics`Library`Dump`bag = Internal`Bag[]; Do[If[Statistics`Library`UnivariateDistributionQ[Statistics`Library`Dump`dist], Quiet[Check[Internal`StuffBag[Statistics`Library`Dump`bag, Statistics`Library`Dump`xvec[[Statistics`Library`Dump`pos++]]], Throw[$Failed]]], Statistics`Library`Dump`dim = Statistics`Library`DistributionDimensionality[Statistics`Library`Dump`dist]; If[Internal`PositiveIntegerQ[Statistics`Library`Dump`dim], Quiet[Check[Internal`StuffBag[Statistics`Library`Dump`bag, Statistics`Library`Dump`xvec[[Statistics`Library`Dump`pos ;; (Statistics`Library`Dump`pos += Statistics`Library`Dump`dim) - 1]]], Throw[$Failed]]], Throw[$Failed]]], {Statistics`Library`Dump`dist, Statistics`Library`Dump`dvec}]; If[Statistics`Library`Dump`pos - 1 != Length[Statistics`Library`Dump`xvec], Throw[$Failed]]; Internal`BagPart[Statistics`Library`Dump`bag, All]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ProductDistributionPartition",
	"Reduce`ProductExp":"ObjectType: Symbol\nUsage: Reduce`ProductExp\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ProductExp[(System`ReduceUtilsDump`x_)?NumericQ] := System`ReduceUtilsDump`x*E^System`ReduceUtilsDump`x\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ProductExp",
	"Product`ProductFastTableLookUp":"ObjectType: Symbol\nUsage: Product`ProductFastTableLookUp\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductFastTableLookUp[Product`ProductParserDump`test_, Product`ProductParserDump`tvars_, Product`ProductParserDump`tassumptions_:{}] \/;  !Product`$ProductDisableTableLookUp && FreeQ[Product`ProductParserDump`test, Rule] := Block[{Product`ProductParserDump`res}, Product`ProductParserDump`res = Sum`SumTableLookUp[Product`ProductParserDump`test, Product`ProductParserDump`tvars, Product`ProductParserDump`tassumptions, Product`ProductTableLookUpData]; Product`ProductParserDump`res \/; FreeQ[Product`ProductParserDump`res, $Failed]]\nProduct`ProductFastTableLookUp[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductFastTableLookUp",
	"Product`ProductFinitePiecewise":"ObjectType: Symbol\nUsage: Product`ProductFinitePiecewise\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductFinitePiecewise[Sum`PiecewiseSumProductDump`expr__] := Block[{Sum`PiecewiseSumProductDump`res}, Sum`PiecewiseSumProductDump`res = Sum`PiecewiseSumProductDump`productFinitePiecewise[Sum`PiecewiseSumProductDump`expr]; Sum`PiecewiseSumProductDump`res \/; FreeQ[Sum`PiecewiseSumProductDump`res, $Failed]]\nProduct`ProductFinitePiecewise[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductFinitePiecewise",
	"Sum`ProductHansen":"ObjectType: Symbol\nUsage: Sum`ProductHansen\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^3, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.22.6.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^3, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, EllipticThetaPrime[1, 0, Sum`SumTableLookUpDump`pp1]\/(2*Sum`SumTableLookUpDump`pp1^(1\/4)), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.4.3.1.1)\", Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp2}}, (Csc[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]^2)\/Sum`SumTableLookUpDump`pp2^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.6.2.1.1)\", Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, ((Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])*Csc[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3)*Csc[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]^2)\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - (1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.5.14.1.1)\", 1 - (1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, Pi\/4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2}}}\nSum`ProductHansen[-Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))\/Sum`SumTableLookUpDump`pp1] + Cosh[Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp1}] = {{\"Hansen75 (91.2.12.1.1)\", -Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))\/Sum`SumTableLookUpDump`pp1] + Cosh[Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp1}}, 2^(1 - Sum`SumTableLookUpDump`pp1)*(1 + Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.4.10.1.1)\", 1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, Sqrt[Pi]\/(Gamma[1\/2 - Sum`SumTableLookUpDump`pp2\/2]*Gamma[1 + Sum`SumTableLookUpDump`pp2\/2]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.2.7.1.1)\", Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, 2^(1 - Sum`SumTableLookUpDump`pp3)*(Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.27.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {2^(2 - Sum`SumTableLookUpDump`pp2)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]^2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sec[Sum`SumTableLookUpDump`pp1] - Sec[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.5.3.1.1)\", Sec[Sum`SumTableLookUpDump`pp1] - Sec[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, Piecewise[{{Sec[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp3*(1 - Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {(Sec[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp3*(1 - Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]))\/(1 - I^Sum`SumTableLookUpDump`pp3*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + Cosh[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (92.1.4.1.1)\", 1 + Cosh[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, (Csch[Sum`SumTableLookUpDump`pp2]^2*Sinh[2^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2]^2)\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]}] = {{\"Hansen75 (91.4.8.1.1)\", Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]}}, Piecewise[{{Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Csc[Sum`SumTableLookUpDump`pp1]^(-1 + Sum`SumTableLookUpDump`pp3)*Sec[Sum`SumTableLookUpDump`pp1], Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp3, Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, 1\/2, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (89.1.3.1.1)\", 1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp3}}, (1 + 2*Sum`SumTableLookUpDump`pp3)!\/(2^Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp3!), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[(1 - (1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2))*(1 + (-1 + (-1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^2)^(-1)), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.10.8.1.1)\", (1 - (1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2))*(1 + (-1 + (-1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^2)^(-1)), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, (16*Gamma[5\/4]^4)\/Pi^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[-Sec[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Sech[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.5.8.1.1)\", -Sec[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Sech[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{I^(-1 + Sum`SumTableLookUpDump`pp1)*Csch[Sum`SumTableLookUpDump`pp3]*Sech[Sum`SumTableLookUpDump`pp3]^(-1 + Sum`SumTableLookUpDump`pp1)*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {(2*(-1)^(1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6)*Csch[2*Sum`SumTableLookUpDump`pp3]*Sech[Sum`SumTableLookUpDump`pp3]^(-2 + Sum`SumTableLookUpDump`pp1)*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp1, Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Sinh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.21.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Sinh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp2)*Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.5.3.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, (Pochhammer[1 - Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4]*Pochhammer[1 + Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp4!^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2^2 + Sum`SumTableLookUpDump`pp3^2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]^2), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}] = {{\"Hansen75 (89.5.8.1.1)\", 1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2^2 + Sum`SumTableLookUpDump`pp3^2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]^2), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}}, (Sum`SumTableLookUpDump`pp2*Csch[(Pi*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`pp3]*Sinh[(Pi*Sqrt[Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2^2])\/Sum`SumTableLookUpDump`pp3])\/Sqrt[Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2^2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 + (4*Sum`SumTableLookUpDump`pp1^2)\/(Pi^2*(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2))^(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 + (4*Sum`SumTableLookUpDump`pp1^2)\/(Pi^2*(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2))^(-3 - 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.17.1.1.1)\", (1 + (4*Sum`SumTableLookUpDump`pp1^2)\/(Pi^2*(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2))^(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 + (4*Sum`SumTableLookUpDump`pp1^2)\/(Pi^2*(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2))^(-3 - 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, E^((4*Catalan)\/(3*Pi)), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Log[2 + Sqrt[3]], Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Log[2 + Sqrt[3]], Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, Floor[Sum`SumTableLookUpDump`pp1*(-1 + Sum`SumTableLookUpDump`pp2)]}] = {{\"Hansen75 (91.1.7.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, Floor[Sum`SumTableLookUpDump`pp1*(-1 + Sum`SumTableLookUpDump`pp2)]}}, 2^(Sum`SumTableLookUpDump`pp1 - Sum`SumTableLookUpDump`pp2\/2), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.4.1.1)\", Cos[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, (-2)^(1 - Sum`SumTableLookUpDump`pp2)*(-Cos[(Pi*Sum`SumTableLookUpDump`pp2)\/2] + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 + (Sum`SumTableLookUpDump`pp1^2 + (4*Sum`SumTableLookUpDump`pp2^2)\/Pi^2)\/(-Sum`SumTableLookUpDump`pp1^2 + (1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2))^(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])*(1 - (Sum`SumTableLookUpDump`pp1^2 + (4*Sum`SumTableLookUpDump`pp2^2)\/Pi^2)\/((4*Sum`SumTableLookUpDump`pp2^2)\/Pi^2 + (3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2))^(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, Infinity}] = {{\"Hansen75 (89.17.6.1.1)\", (1 + (Sum`SumTableLookUpDump`pp1^2 + (4*Sum`SumTableLookUpDump`pp2^2)\/Pi^2)\/(-Sum`SumTableLookUpDump`pp1^2 + (1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2))^(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])*(1 - (Sum`SumTableLookUpDump`pp1^2 + (4*Sum`SumTableLookUpDump`pp2^2)\/Pi^2)\/((4*Sum`SumTableLookUpDump`pp2^2)\/Pi^2 + (3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2))^(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, Infinity}}, Tan[(Pi*(1 + Sum`SumTableLookUpDump`pp1))\/4]^Sum`SumTableLookUpDump`pp1, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`b, Sum`SumTableLookUpDump`pp01, Log[Tan[((1 + Sum`SumTableLookUpDump`b)*Pi)\/4]], Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`b, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`b, Sum`SumTableLookUpDump`pp06, Log[Tan[((1 + Sum`SumTableLookUpDump`b)*Pi)\/4]], Sum`SumTableLookUpDump`pp07, Log[Tan[((1 + Sum`SumTableLookUpDump`b)*Pi)\/4]], Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp09, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp010, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp011, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp8, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp9, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp10, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp11}}}\nSum`ProductHansen[1 - Tan[Sum`SumTableLookUpDump`pp1]*Tan[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (91.3.6.1.1)\", 1 - Tan[Sum`SumTableLookUpDump`pp1]*Tan[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp5}}, Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp5]*Sec[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp5, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1] - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.11.1.1)\", Cos[Sum`SumTableLookUpDump`pp1] - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - Sum`SumTableLookUpDump`pp2)*(1 + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(7 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.13.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(7 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1\/4 - Sum`SumTableLookUpDump`pp2)*Sqrt[-1 + Sqrt[2]], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/8, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sum`SumTableLookUpDump`pp1*(1 + Cos[Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (91.8.5.1.1)\", Sum`SumTableLookUpDump`pp1*(1 + Cos[Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Sinc[Sum`SumTableLookUpDump`pp3]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[-Cos[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp4], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.8.1.1)\", -Cos[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp4], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - Sum`SumTableLookUpDump`pp2)*(-Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[-Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Cosh[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.18.1.1)\", -Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Cosh[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp1)*Csch[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp1)*Coth[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + Sec[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.9.1.1)\", 1 + Sec[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, Cot[Sum`SumTableLookUpDump`pp2]*Tan[2^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.20.2.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (2^(1\/6)*((EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]^6*EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4*(1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4))\/(Sum`SumTableLookUpDump`pp1*EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4))^(1\/12))\/Sqrt[Pi], {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Sinh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.25.1.1)\", Sin[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Sinh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp2)*(-Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4])*((-1)^(1 + Sum`SumTableLookUpDump`pp2)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.2.15.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, 2^(1 - 2*Sum`SumTableLookUpDump`pp3)*(Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + Sum`SumTableLookUpDump`pp1}] = {{\"Hansen75 (91.1.3.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + Sum`SumTableLookUpDump`pp1}}, 2^(1 - Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp1, {Sum`SumTableLookUpDump`pp1 >= 2}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + 2*Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.9.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + 2*Sum`SumTableLookUpDump`pp2}}, 2^(1\/2 - 2*Sum`SumTableLookUpDump`pp2), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/8, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], Sum`SumTableLookUpDump`pp6, Infinity}] = {{\"Hansen75 (89.5.19.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], Sum`SumTableLookUpDump`pp6, Infinity}}, 1 + Csc[(Pi*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`pp3]^2*Sinh[(Pi*Sum`SumTableLookUpDump`pp1)\/Sum`SumTableLookUpDump`pp3]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, -Infinity, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[((1 + Sum`SumTableLookUpDump`pp12*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp3 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))*(1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp7 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])))\/((1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp3 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))*(1 + Sum`SumTableLookUpDump`pp12*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp7 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}] = {{\"Hansen75 (89.29.5.1.1)\", ((1 + Sum`SumTableLookUpDump`pp12*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp3 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))*(1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp7 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])))\/((1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp3 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))*(1 + Sum`SumTableLookUpDump`pp12*Sum`SumTableLookUpDump`pp2^(Sum`SumTableLookUpDump`pp7 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}}, JacobiDN[(Sum`SumTableLookUpDump`pp12*EllipticK[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp2]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp2]^4] + EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp2]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp2]^4])\/2, EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp2]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp2]^4]\/(1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp2]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp2]^4)^(1\/4), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], -I, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, -3\/2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, I, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp06, -3\/2, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp08, -I, Sum`SumTableLookUpDump`pp09, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp010, -1\/2, Sum`SumTableLookUpDump`pp011, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp012, I, Sum`SumTableLookUpDump`pp013, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp014, -1\/2, Sum`SumTableLookUpDump`pp015, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp016, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp017, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp011, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp8, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp9, Sum`SumTableLookUpDump`pp011, Sum`SumTableLookUpDump`pp10, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp11, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp12, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp13, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp14, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp15, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp16, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp17}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.1.24.1.1)\", Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp3)*(Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])*((-1)^Sum`SumTableLookUpDump`pp3*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.25.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp2)*(1 + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])*((-1)^Sum`SumTableLookUpDump`pp2 + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.6.10.1.1)\", Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, Piecewise[{{Csc[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3)*(1 - Csc[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]^2*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]^2), Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {(Csc[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3)*(1 - Csc[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])^2)\/(1 - Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])^2, Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Csc[Sum`SumTableLookUpDump`pp1] - Csc[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.4.1.1.1)\", Csc[Sum`SumTableLookUpDump`pp1] - Csc[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, Piecewise[{{-(Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp3*(-1 + Csc[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])), Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {(Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp3*(-1 + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]))\/(-1 + Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Tan[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.12.1.1)\", 1 - Tan[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, 2^Sum`SumTableLookUpDump`pp4*Cot[2^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2]*Tan[Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 + Cosh[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (92.1.5.1.1)\", 1 + Cosh[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, (Csch[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`pp4]^2*Sinh[Sum`SumTableLookUpDump`pp2]^2)\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Csc[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Csch[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.4.4.1.1)\", Csc[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Csch[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, ((-Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4])*Csc[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]^2*Csch[Sum`SumTableLookUpDump`pp4]^(2*Sum`SumTableLookUpDump`pp2))\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sec[Sum`SumTableLookUpDump`pp1]^2 - Sec[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.5.6.1.1)\", Sec[Sum`SumTableLookUpDump`pp1]^2 - Sec[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, ((-1)^Sum`SumTableLookUpDump`pp3*(Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])*Csc[(Pi\/2 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp3]^2*Sec[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3))\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cosh[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (92.1.1.1.1)\", Cosh[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, (Csch[Sum`SumTableLookUpDump`pp2]*Sinh[2^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2])\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}] = {{\"Hansen75 (89.5.15.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}}, Gamma[1 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3]^2\/(Gamma[1 - (I*Sum`SumTableLookUpDump`pp1)\/Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3]*Gamma[1 + (I*Sum`SumTableLookUpDump`pp1)\/Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp5]}] = {{\"Hansen75 (91.1.4.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp5]}}, 2^(-Sum`SumTableLookUpDump`pp1\/2 + Sum`SumTableLookUpDump`pp5)*Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`pp5, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, 1\/2, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[-Sum`SumTableLookUpDump`pp1^2 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.2.3.1.1)\", -Sum`SumTableLookUpDump`pp1^2 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, Pochhammer[1 - Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4]*Pochhammer[1 + Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.23.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp2)*(-1 + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]), Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.3.9.1.1)\", Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{I^(-1 + Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sec[Sum`SumTableLookUpDump`pp1]^(-1 + Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {(I^(-2 + Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sec[Sum`SumTableLookUpDump`pp1]^(-1 + Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.30.2.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, (1 - Sum`SumTableLookUpDump`pp1)^(-1), {Abs[Sum`SumTableLookUpDump`pp1] < 1}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Cot[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Coth[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}] = {{\"Hansen75 (91.6.9.1.1)\", Cot[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Coth[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}}, Piecewise[{{Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]*Csch[Sum`SumTableLookUpDump`pp4]^(-1 + Sum`SumTableLookUpDump`pp2)*Sech[Sum`SumTableLookUpDump`pp4], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]*Csch[Sum`SumTableLookUpDump`pp4]^Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, 1\/2, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.5.13.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Cos[(Pi*Sum`SumTableLookUpDump`pp1)\/2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Coth[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + Sum`SumTableLookUpDump`pp1}] = {{\"Hansen75 (91.6.5.1.1)\", Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Coth[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + Sum`SumTableLookUpDump`pp1}}, (Csch[Sum`SumTableLookUpDump`pp3]^(2*Sum`SumTableLookUpDump`pp1)*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]^2)\/Sum`SumTableLookUpDump`pp1^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[3 - 4*Sin[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.13.1.1)\", 3 - 4*Sin[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, Csc[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`pp4]*Sin[Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 - 2\/(1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^3), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (89.6.11.1.1)\", 1 - 2\/(1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^3), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Sum`SumTableLookUpDump`pp3}}, (2*(1 + (Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp3^2)^(-1)))\/3, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[(Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])^Sum`SumTableLookUpDump`pp4, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Sum`SumTableLookUpDump`pp6}] = {{\"Hansen75 (89.3.2.1.1)\", (Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])^Sum`SumTableLookUpDump`pp4, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Sum`SumTableLookUpDump`pp6}}, (Sum`SumTableLookUpDump`pp2^Sum`SumTableLookUpDump`pp6*Pochhammer[1 + Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp6])^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`s, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.1.14.1.1)\", Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, 2^(1 - Sum`SumTableLookUpDump`pp3)*(Cos[(-Pi\/2 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp3] - Cos[(-Pi\/2 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4\/(1 + Sum`SumTableLookUpDump`pp1^(-1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.25.1.1.1)\", (1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4\/(1 + Sum`SumTableLookUpDump`pp1^(-1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2\/(4*Sqrt[Sum`SumTableLookUpDump`pp1]*EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2^2 + Sum`SumTableLookUpDump`pp3^2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, Infinity}] = {{\"Hansen75 (89.5.9.1.1)\", 1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2^2 + Sum`SumTableLookUpDump`pp3^2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, Infinity}}, Cosh[(Pi*Sqrt[Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2^2])\/(2*Sum`SumTableLookUpDump`pp3)]*Sech[(Pi*Sum`SumTableLookUpDump`pp2)\/(2*Sum`SumTableLookUpDump`pp3)], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^4\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^4, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.7.4.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^4\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^4, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, (Cos[(Pi*Sum`SumTableLookUpDump`pp1)\/Sqrt[2]] + Cosh[(Pi*Sum`SumTableLookUpDump`pp1)\/Sqrt[2]])\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.4.5.1.1)\", 1 + Sum`SumTableLookUpDump`pp1\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, Pochhammer[3\/2 + Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4]\/Pochhammer[3\/2, Sum`SumTableLookUpDump`pp4], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.4.2.1.1)\", Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, ((Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])*Csc[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3)*Csc[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]^2)\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-1), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Infinity}] = {{\"Hansen75 (89.4.4.1.1)\", 1 - Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-1), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Infinity}}, 0, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.1.1.1)\", Cos[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, (Csc[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`pp4]*Sin[Sum`SumTableLookUpDump`pp2])\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-3), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Infinity}] = {{\"Hansen75 (89.6.7.1.1)\", 1 - Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-3), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Infinity}}, Cosh[(Sqrt[3]*Pi)\/2]\/(3*Pi), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Sinh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.17.1.1)\", Sin[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Sinh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - 2*Sum`SumTableLookUpDump`pp2)*(-Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Tan[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (91.8.11.1.1)\", 1 - Tan[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, Sum`SumTableLookUpDump`pp2*Cot[Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Pi^Sum`SumTableLookUpDump`pp1*Gamma[Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp4\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Infinity}] = {{\"Hansen75 (90.1.8.1.1)\", Pi^Sum`SumTableLookUpDump`pp1*Gamma[Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp4\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Infinity}}, Gamma[1 + Sum`SumTableLookUpDump`pp4]\/2^(2*Sum`SumTableLookUpDump`pp4), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], -1\/2, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.4.11.1.1)\", 1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, (Sqrt[2]*Sin[(Pi*(1 + Sum`SumTableLookUpDump`pp2))\/4])\/(1 + Sum`SumTableLookUpDump`pp2), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.6.6.1.1)\", Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{(Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp2*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {(Cos[Sum`SumTableLookUpDump`pp1]*Csc[Sum`SumTableLookUpDump`pp1]^(1 + Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Csch[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.4.7.1.1)\", Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Csch[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{(Csch[Sum`SumTableLookUpDump`pp3]^Sum`SumTableLookUpDump`pp1*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp1, Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {(Cosh[Sum`SumTableLookUpDump`pp3]*Csch[Sum`SumTableLookUpDump`pp3]^(1 + Sum`SumTableLookUpDump`pp1)*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp1, Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Coth[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.6.4.1.1)\", Cot[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Coth[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, ((-Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4])*Csc[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]^2*Csch[Sum`SumTableLookUpDump`pp4]^(2*Sum`SumTableLookUpDump`pp2))\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3)\/(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`pp5*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, 2*Sum`SumTableLookUpDump`pp8}] = {{\"Hansen75 (89.4.6.1.1)\", 1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3)\/(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`pp5*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, 2*Sum`SumTableLookUpDump`pp8}}, (2^(2*Sum`SumTableLookUpDump`pp8)*Pochhammer[1 + (Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp4)\/(2*Sum`SumTableLookUpDump`pp5), Sum`SumTableLookUpDump`pp8]*Pochhammer[(-Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`pp5)\/(2*Sum`SumTableLookUpDump`pp5), Sum`SumTableLookUpDump`pp8])\/Pochhammer[1 + Sum`SumTableLookUpDump`pp4\/Sum`SumTableLookUpDump`pp5, 2*Sum`SumTableLookUpDump`pp8], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`pp8}}}\nSum`ProductHansen[-Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Cosh[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.24.1.1)\", -Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Cosh[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp1)*Csch[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp1)*(-1 + Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]), Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[E^(Sum`SumTableLookUpDump`pp1\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))*(1 - Sum`SumTableLookUpDump`pp1\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], Sum`SumTableLookUpDump`pp6, Infinity}] = {{\"Hansen75 (93.1.6.1.1)\", E^(Sum`SumTableLookUpDump`pp1\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))*(1 - Sum`SumTableLookUpDump`pp1\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], Sum`SumTableLookUpDump`pp6, Infinity}}, Cos[(Pi*Sum`SumTableLookUpDump`pp1)\/2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, -Infinity, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Tan[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Tanh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + 2*Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.3.14.1.1)\", Tan[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Tanh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + 2*Sum`SumTableLookUpDump`pp2}}, Cosh[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]^2*Sech[Sum`SumTableLookUpDump`pp4]^(4*Sum`SumTableLookUpDump`pp2), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.5.6.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, (Pochhammer[3\/2 - (I\/2)*Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4]*Pochhammer[3\/2 + (I\/2)*Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4])\/Pochhammer[3\/2, Sum`SumTableLookUpDump`pp4]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]}] = {{\"Hansen75 (91.2.19.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp3)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Sec[Sum`SumTableLookUpDump`pp1], Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp3)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, 1\/2, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.1.18.1.1)\", Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{(I\/2)^(-1 + Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {I^Sum`SumTableLookUpDump`pp2*2^(1 - Sum`SumTableLookUpDump`pp2)*Cot[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2\/(1 - Sum`SumTableLookUpDump`pp1^(-1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.24.2.1.1)\", (1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2\/(1 - Sum`SumTableLookUpDump`pp1^(-1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, Sqrt[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2\/(Sqrt[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]*EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2)]\/(2*Sum`SumTableLookUpDump`pp1^(1\/4)), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], Sum`SumTableLookUpDump`pp6, Infinity}] = {{\"Hansen75 (89.5.18.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], Sum`SumTableLookUpDump`pp6, Infinity}}, 1 - Csc[(Pi*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`pp3]^2*Sin[(Pi*Sum`SumTableLookUpDump`pp1)\/Sum`SumTableLookUpDump`pp3]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, -Infinity, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.3.1.1)\", Cos[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, (Csc[Sum`SumTableLookUpDump`pp2]*Sin[2^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2])\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sum`SumTableLookUpDump`pp1*(1 + Sec[Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (91.8.8.1.1)\", Sum`SumTableLookUpDump`pp1*(1 + Sec[Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Tan[Sum`SumTableLookUpDump`pp3]\/Sum`SumTableLookUpDump`pp3, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.2.1.1)\", Sin[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + E^(Pi*(-1 - 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, Infinity}] = {{\"Hansen75 (89.21.4.1.1)\", 1 + E^(Pi*(-1 - 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, Infinity}}, 2^(1\/4)\/E^(Pi\/24), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.5.16.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, Sinh[Pi*Sum`SumTableLookUpDump`pp1]\/(Pi*Sum`SumTableLookUpDump`pp1), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp5]}] = {{\"Hansen75 (91.2.2.1.1)\", Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp5]}}, Piecewise[{{2^(-Sum`SumTableLookUpDump`pp1\/2 + Sum`SumTableLookUpDump`pp5), Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(-Sum`SumTableLookUpDump`pp1\/2 + Sum`SumTableLookUpDump`pp5)*Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`pp5, Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, 1\/2, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Cos[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}] = {{\"Hansen75 (91.2.6.1.1)\", Cos[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}}, Piecewise[{{2^(Sum`SumTableLookUpDump`pp1 - Sum`SumTableLookUpDump`pp2\/2)*Sum`SumTableLookUpDump`pp2^Sum`SumTableLookUpDump`pp1, Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {2^(Sum`SumTableLookUpDump`pp1 - Sum`SumTableLookUpDump`pp2\/2), Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^6, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.22.7.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^6, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (2*EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]^3*EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2*Sqrt[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4])\/(Pi^3*Sqrt[Sum`SumTableLookUpDump`pp1]*EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[1 + Sec[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.7.1.1)\", 1 + Sec[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, Cot[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`pp4]*Tan[Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.10.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1\/4 - Sum`SumTableLookUpDump`pp2)*Sqrt[-1 + Sqrt[2]], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/8, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2\/(1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.24.1.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2\/(1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (2*EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]*(1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4)^(1\/4))\/Pi, {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2 - (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)])*(Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.1.28.1.1)\", (Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2 - (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)])*(Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Sum`SumTableLookUpDump`pp3}}, ((-1)^Sum`SumTableLookUpDump`pp3*(Sin[Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`pp3)] - Sin[Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`pp3)]))\/(2^(2*Sum`SumTableLookUpDump`pp3)*(Sin[Sum`SumTableLookUpDump`pp1] - Sin[Sum`SumTableLookUpDump`pp2])), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp09, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp010, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp8, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp9, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp10}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.3.15.1.1)\", Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, Piecewise[{{Sec[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3)*(1 - Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]^2*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]^2), Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {(Sec[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3)*(1 - Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])^2)\/(1 - I^Sum`SumTableLookUpDump`pp3*Sec[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])^2, Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.1.1.1)\", Cos[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - Sum`SumTableLookUpDump`pp2)*Sin[(Pi\/2 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp2\/E^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.30.6.1.1)\", 1 + Sum`SumTableLookUpDump`pp2\/E^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, (1 + Coth[Sum`SumTableLookUpDump`pp2])\/2, {Sum`SumTableLookUpDump`pp2 > 0}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`a, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.2.5.1.1)\", Cos[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, 2^(1 - Sum`SumTableLookUpDump`pp3)*Cos[(Sum`SumTableLookUpDump`pp1 + Pi*Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp3], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Tanh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.3.8.1.1)\", Tan[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Tanh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, ((-Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4])*Csc[(Pi\/2 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp2]^2*Sech[Sum`SumTableLookUpDump`pp4]^(2*Sum`SumTableLookUpDump`pp2))\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - 4*Sin[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.16.1.1)\", 1 - 4*Sin[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, Cos[Sum`SumTableLookUpDump`pp2]*Sec[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`pp4], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^6, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.22.3.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^6, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (4*EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]^3*(1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4)*Sqrt[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2])\/(Pi^3*Sum`SumTableLookUpDump`pp1^(1\/4)), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[E^(Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 + (Sum`SumTableLookUpDump`pp3 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^(-1)), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (93.1.2.1.1)\", E^(Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 + (Sum`SumTableLookUpDump`pp3 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^(-1)), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (E^(EulerGamma*Sum`SumTableLookUpDump`pp1)*Gamma[(2 + Sum`SumTableLookUpDump`pp3)\/2])\/Gamma[(3 + Sum`SumTableLookUpDump`pp3)\/2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], -1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, 2*Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (89.4.7.1.1)\", 1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, 2*Sum`SumTableLookUpDump`pp5}}, (2^(2*Sum`SumTableLookUpDump`pp5)*Pochhammer[1\/2 - Sum`SumTableLookUpDump`pp2\/2, Sum`SumTableLookUpDump`pp5]*Pochhammer[1 + Sum`SumTableLookUpDump`pp2\/2, Sum`SumTableLookUpDump`pp5])\/(2*Sum`SumTableLookUpDump`pp5)!, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + 2*Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.3.13.1.1)\", Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + 2*Sum`SumTableLookUpDump`pp3}}, Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]^2*Sec[Sum`SumTableLookUpDump`pp1]^(4*Sum`SumTableLookUpDump`pp3), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, 1\/4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 + (-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3^(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]))\/(1 + (-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp10*Sum`SumTableLookUpDump`pp3^(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, Infinity}] = {{\"Hansen75 (89.23.4.1.1)\", (1 + (-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3^(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]))\/(1 + (-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp10*Sum`SumTableLookUpDump`pp3^(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, Infinity}}, JacobiDN[Sum`SumTableLookUpDump`pp4*(Sum`SumTableLookUpDump`pp10*EllipticK[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp3]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp3]^4] + EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp3]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp3]^4]), EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp3]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp3]^4]\/(1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp3]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp3]^4)^(1\/4), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], -I, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, 1\/2, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, I, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp08, 1\/2, Sum`SumTableLookUpDump`pp09, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp010, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp011, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp8, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp9, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp10, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp11}}}\nSum`ProductHansen[-Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))\/Sum`SumTableLookUpDump`pp1]^2 + Cosh[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp1}] = {{\"Hansen75 (91.2.26.1.1)\", -Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))\/Sum`SumTableLookUpDump`pp1]^2 + Cosh[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp1}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp1)*(1 + Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])*((-1)^Sum`SumTableLookUpDump`pp1 + Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.3.1.1.1)\", Tan[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, Csc[(Pi\/2 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp2]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 - (1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^(-2))*(1 + (-1 + (1 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2)^(-1)), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.10.7.1.1)\", (1 - (1 + Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^(-2))*(1 + (-1 + (1 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2)^(-1)), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (Gamma[1 + Sum`SumTableLookUpDump`pp1^(-1)]^2*Gamma[1 + 2\/Sum`SumTableLookUpDump`pp3])\/(Gamma[1 + 2\/Sum`SumTableLookUpDump`pp1]*Gamma[1 + Sum`SumTableLookUpDump`pp3^(-1)]^2), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1] - Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.9.1.1)\", Cos[Sum`SumTableLookUpDump`pp1] - Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(-Sum`SumTableLookUpDump`pp2\/2 + Sum`SumTableLookUpDump`pp6)*Csc[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp2\/2)*Csc[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}] = {{\"Hansen75 (89.5.10.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^2\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Infinity}}, Gamma[1 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3]^2\/(Gamma[1 - Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3]*Gamma[1 + Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/(1 + Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.23.2.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/(1 + Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, EllipticTheta[4, 0, Sum`SumTableLookUpDump`pp1], {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, 2*Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (89.4.8.1.1)\", 1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, 2*Sum`SumTableLookUpDump`pp5}}, (2^(2*Sum`SumTableLookUpDump`pp5)*Pochhammer[3\/4 - Sum`SumTableLookUpDump`pp2\/4, Sum`SumTableLookUpDump`pp5]*Pochhammer[5\/4 + Sum`SumTableLookUpDump`pp2\/4, Sum`SumTableLookUpDump`pp5])\/Pochhammer[3\/2, 2*Sum`SumTableLookUpDump`pp5], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[-Cos[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Cosh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.16.1.1)\", -Cos[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Cosh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - 2*Sum`SumTableLookUpDump`pp2)*(-Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[-Sin[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2] + Sinh[Sum`SumTableLookUpDump`pp4], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.15.1.1)\", -Sin[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2] + Sinh[Sum`SumTableLookUpDump`pp4], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1 - Sum`SumTableLookUpDump`pp2)*(-Cos[(-Pi\/2 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp2*ArcCosh[Sinh[Sum`SumTableLookUpDump`pp4]]]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + 2*Sum`SumTableLookUpDump`pp1}] = {{\"Hansen75 (91.2.3.1.1)\", Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + 2*Sum`SumTableLookUpDump`pp1}}, 2^(1 - 2*Sum`SumTableLookUpDump`pp1)*(-1 + (-1)^Sum`SumTableLookUpDump`pp1), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (89.1.1.1.1)\", Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Sum`SumTableLookUpDump`pp5}}, Sum`SumTableLookUpDump`pp2^Sum`SumTableLookUpDump`pp5*Pochhammer[1 + Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp5], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(5 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.12.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(5 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1\/4 - Sum`SumTableLookUpDump`pp2)*Sqrt[1 + Sqrt[2]], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/8, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Tan[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp5]}] = {{\"Hansen75 (91.3.3.1.1)\", Tan[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp5]}}, Piecewise[{{Sum`SumTableLookUpDump`pp1^Sum`SumTableLookUpDump`pp5, Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {1, Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, 1\/2, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/(Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.4.9.1.1)\", 1 + ((-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2)\/(Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, (Sqrt[Pi]*Gamma[1 + Sum`SumTableLookUpDump`pp3\/Sum`SumTableLookUpDump`pp4])\/(2^(Sum`SumTableLookUpDump`pp3\/Sum`SumTableLookUpDump`pp4)*Gamma[1 + (Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3)\/(2*Sum`SumTableLookUpDump`pp4)]*Gamma[(-Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp4)\/(2*Sum`SumTableLookUpDump`pp4)]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[-Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1] + Cosh[Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.10.1.1)\", -Cos[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1] + Cosh[Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(-Sum`SumTableLookUpDump`pp1\/2 + Sum`SumTableLookUpDump`pp6)*Csch[Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp6]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp1\/2)*Csch[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^6, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.22.8.1.1)\", (1 + Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^6, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2\/(4*Sqrt[Sum`SumTableLookUpDump`pp1*Sqrt[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]]*EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Csch[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + Sum`SumTableLookUpDump`pp1}] = {{\"Hansen75 (91.4.5.1.1)\", Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Csch[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, -1 + Sum`SumTableLookUpDump`pp1}}, (Csch[Sum`SumTableLookUpDump`pp3]^(2*Sum`SumTableLookUpDump`pp1)*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]^2)\/Sum`SumTableLookUpDump`pp1^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Gamma[Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (90.1.7.1.1)\", Gamma[Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp5}}, (Pi^(Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp5)*Gamma[1 + Sum`SumTableLookUpDump`pp3])\/(2^(2*(1 - 2^(-Sum`SumTableLookUpDump`pp5))*Sum`SumTableLookUpDump`pp3)*Gamma[1 + Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`pp5]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/E^(Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, Infinity}] = {{\"Hansen75 (93.1.3.1.1)\", (1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/E^(Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, Infinity}}, (E^((Sum`SumTableLookUpDump`pp1*PolyGamma[0, Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp3)*Gamma[Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3])\/Gamma[(Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`pp3], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp09, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp8, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp9}}}\nSum`ProductHansen[-Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))\/Sum`SumTableLookUpDump`pp1] + Cosh[Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.14.1.1)\", -Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))\/Sum`SumTableLookUpDump`pp1] + Cosh[Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(-Sum`SumTableLookUpDump`pp1\/2 + Sum`SumTableLookUpDump`pp6)*Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp6]*Sech[Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp1\/2)*Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Tan[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}] = {{\"Hansen75 (91.3.5.1.1)\", Tan[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}}, Piecewise[{{1\/Sqrt[Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {1, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[-E^((Pi*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2) + Sum`SumTableLookUpDump`pp4, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (89.18.1.1.1)\", -E^((Pi*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2) + Sum`SumTableLookUpDump`pp4, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Sum`SumTableLookUpDump`pp2}}, -1 + Sum`SumTableLookUpDump`pp4^Sum`SumTableLookUpDump`pp2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 2*I, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.1.16.1.1)\", Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, (-1)^Sum`SumTableLookUpDump`pp3*2^(1 - 2*Sum`SumTableLookUpDump`pp3)*(Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1] + Cot[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (91.6.1.1.1)\", Cot[Sum`SumTableLookUpDump`pp1] + Cot[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp5}}, Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp5*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp5], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.3.3.1.1)\", Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, Sum`SumTableLookUpDump`pp4!^Sum`SumTableLookUpDump`pp2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`s, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.3.7.1.1)\", Tan[Sum`SumTableLookUpDump`pp1]^2 - Tan[Sum`SumTableLookUpDump`pp2 + (Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, ((-1)^Sum`SumTableLookUpDump`pp3*(Cos[2*Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[2*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])*Csc[(Pi\/2 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp3]^2*Sec[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp3))\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.5.5.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, (Pochhammer[3\/2 - Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4]*Pochhammer[3\/2 + Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4])\/Pochhammer[3\/2, Sum`SumTableLookUpDump`pp4]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-3), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.6.8.1.1)\", 1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-3), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, Cosh[(Sqrt[3]*Pi)\/2]\/Pi, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]}] = {{\"Hansen75 (91.6.8.1.1)\", Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]}}, Piecewise[{{Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Csc[Sum`SumTableLookUpDump`pp1]^(-1 + Sum`SumTableLookUpDump`pp3)*Sec[Sum`SumTableLookUpDump`pp1], Mod[Sum`SumTableLookUpDump`pp3, 2] == 1}, {Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp3, Mod[Sum`SumTableLookUpDump`pp3, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, 1\/2, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[Gamma[Sum`SumTableLookUpDump`pp1 + 2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]*Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp5}] = {{\"Hansen75 (90.1.9.1.1)\", Gamma[Sum`SumTableLookUpDump`pp1 + 2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]*Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp5}}, (Pi^(Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp5)*Gamma[1 + 2^Sum`SumTableLookUpDump`pp5*Sum`SumTableLookUpDump`pp3])\/(2^(2*(-1 + 2^Sum`SumTableLookUpDump`pp5)*Sum`SumTableLookUpDump`pp3)*Gamma[1 + Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.1.20.1.1)\", Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[(Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, (-1)^Sum`SumTableLookUpDump`pp3*2^(2 - 2*Sum`SumTableLookUpDump`pp3)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 - (3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2))^(-3 - 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])*(1 - (5 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2))^(5 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, Infinity}] = {{\"Hansen75 (89.17.2.1.1)\", (1 - (3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2))^(-3 - 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])*(1 - (5 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1])^(-2))^(5 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, Infinity}}, (E^((4*Catalan)\/Pi)*Pi)\/8, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 - 4*Sin[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (91.8.17.1.1)\", 1 - 4*Sin[Sum`SumTableLookUpDump`pp2\/3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, Cos[Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[1 - 4*Sin[3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.18.1.1)\", 1 - 4*Sin[3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, Cos[3^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2]*Sec[Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[E^(Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 - Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (93.1.1.1.1)\", E^(Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 - Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp4 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (E^(EulerGamma*Sum`SumTableLookUpDump`pp1)*Gamma[1 + Sum`SumTableLookUpDump`pp4])\/Gamma[1 - Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp4], {Re[Sum`SumTableLookUpDump`pp4] > 0 && Re[-Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp4] > 0}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.5.1.1)\", Sin[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, (-2)^(1 - Sum`SumTableLookUpDump`pp2)*(-Cos[(Pi*Sum`SumTableLookUpDump`pp2)\/2] + Cos[(-Pi\/2 + Sum`SumTableLookUpDump`pp1)*Sum`SumTableLookUpDump`pp2]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[(1 + Sum`SumTableLookUpDump`pp1^(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^6, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.22.12.1.1)\", (1 + Sum`SumTableLookUpDump`pp1^(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^6, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, (2*Sum`SumTableLookUpDump`pp1^(1\/4))\/Sqrt[(EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2*Sqrt[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4])\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2], {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.2.21.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp3)*(Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] - Cos[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3])*(Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3] + (-1)^(1 + Sum`SumTableLookUpDump`pp3)*Cos[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + Cos[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.4.1.1)\", 1 + Cos[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, (Csc[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`pp4]^2*Sin[Sum`SumTableLookUpDump`pp2]^2)\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[-Cos[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Cosh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}] = {{\"Hansen75 (91.2.20.1.1)\", -Cos[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2]^2 + Cosh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp2)*Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4], Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}, {2^(1 - Sum`SumTableLookUpDump`pp2)*Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]*Sech[Sum`SumTableLookUpDump`pp4], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, 1\/2, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(3 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.11.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(3 + 8*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(1\/4 - Sum`SumTableLookUpDump`pp2)*Sqrt[1 + Sqrt[2]], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/8, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[Sec[Sum`SumTableLookUpDump`pp1]^2 - Sec[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.5.7.1.1)\", Sec[Sum`SumTableLookUpDump`pp1]^2 - Sec[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[(-1 + Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{I^(-1 + Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sec[Sum`SumTableLookUpDump`pp1]^(-1 + Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {(2*(-1)^(1 + Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6)*Csc[2*Sum`SumTableLookUpDump`pp1]*Sec[Sum`SumTableLookUpDump`pp1]^(-2 + Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1] - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.13.1.1)\", Cos[Sum`SumTableLookUpDump`pp1] - Cos[(Pi*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(-Sum`SumTableLookUpDump`pp2\/2 + Sum`SumTableLookUpDump`pp6)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]*Sec[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp2\/2)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6], Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Sum`SumTableLookUpDump`pp1*(1 + Cosh[Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (92.1.6.1.1)\", Sum`SumTableLookUpDump`pp1*(1 + Cosh[Sum`SumTableLookUpDump`pp3\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Sinh[Sum`SumTableLookUpDump`pp3]^2\/Sum`SumTableLookUpDump`pp3^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Sinh[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.1.19.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Sinh[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp1)*Csch[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp1)*Coth[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-2), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Infinity}] = {{\"Hansen75 (89.5.12.1.1)\", 1 - Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^(-2), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 2, Infinity}}, 1\/2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2}}}\nSum`ProductHansen[Tan[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.3.4.1.1)\", Tan[Sum`SumTableLookUpDump`pp1 + (Pi*Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]))\/Sum`SumTableLookUpDump`pp3], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 0, -1 + Sum`SumTableLookUpDump`pp3}}, Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]*Sec[(Sum`SumTableLookUpDump`pp1 + Pi*Sum`SumTableLookUpDump`pp2)*Sum`SumTableLookUpDump`pp3], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, 1\/2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2\/(1 - Sum`SumTableLookUpDump`pp1^(-1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.24.3.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^(2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2\/(1 - Sum`SumTableLookUpDump`pp1^(-1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (EllipticK[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4]*Sqrt[EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^2\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^2])\/(Pi*Sum`SumTableLookUpDump`pp1^(1\/4)), {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.30.1.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, -1 + Sum`SumTableLookUpDump`pp4}}, (1 - Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`pp4)\/(1 - Sum`SumTableLookUpDump`pp1), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.5.4.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, (Pochhammer[1 - I*Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4]*Pochhammer[1 + I*Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4])\/Sum`SumTableLookUpDump`pp4!^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`w, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[(1 + Sum`SumTableLookUpDump`pp1\/(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2)^(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 + Sum`SumTableLookUpDump`pp1\/(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2)^(-3 - 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.17.3.1.1)\", (1 + Sum`SumTableLookUpDump`pp1\/(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2)^(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*(1 + Sum`SumTableLookUpDump`pp1\/(3 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2)^(-3 - 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, (2 - Sqrt[3])^(2\/3)*E^((4*Catalan)\/(3*Pi)), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], -4\/9, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, -4\/9, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.1.26.1.1)\", Sin[Sum`SumTableLookUpDump`pp1]^2 - Sin[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{(I\/2)^(-1 + Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {I^Sum`SumTableLookUpDump`pp2*2^(1 - Sum`SumTableLookUpDump`pp2)*(-1 + Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]), Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (89.5.11.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^2\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, Sin[Pi*Sum`SumTableLookUpDump`pp1]\/(Pi*Sum`SumTableLookUpDump`pp1), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[1 - Tan[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.10.1.1)\", 1 - Tan[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, 2^Sum`SumTableLookUpDump`pp4*Cot[Sum`SumTableLookUpDump`pp2]*Tan[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`pp4], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2] + 2*Sum`SumTableLookUpDump`pp1^2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Cos[2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Sum`SumTableLookUpDump`pp6], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp8}] = {{\"Hansen75 (91.8.19.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2] + 2*Sum`SumTableLookUpDump`pp1^2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Cos[2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Sum`SumTableLookUpDump`pp6], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp8}}, (1 + Sum`SumTableLookUpDump`pp1^2^(1 + Sum`SumTableLookUpDump`pp8) - 2*Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`pp8*Cos[2^Sum`SumTableLookUpDump`pp8*Sum`SumTableLookUpDump`pp6])\/(1 + Sum`SumTableLookUpDump`pp1^2 - 2*Sum`SumTableLookUpDump`pp1*Cos[Sum`SumTableLookUpDump`pp6]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`a, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`a, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`pp8}}}\nSum`ProductHansen[-Cos[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Cosh[Sum`SumTableLookUpDump`pp4]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.2.22.1.1)\", -Cos[Sum`SumTableLookUpDump`pp1 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2 + Cosh[Sum`SumTableLookUpDump`pp4]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + Sum`SumTableLookUpDump`pp2}}, 2^(2 - 2*Sum`SumTableLookUpDump`pp2)*(-Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4])*((-1)^(1 + Sum`SumTableLookUpDump`pp2)*Cos[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2] + Cosh[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp4]), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.6.3.1.1)\", Cot[Sum`SumTableLookUpDump`pp1]^2 - Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, -1 + Sum`SumTableLookUpDump`pp2}}, (Csc[Sum`SumTableLookUpDump`pp1]^(2*Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2]^2)\/Sum`SumTableLookUpDump`pp2^2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Sum`SumTableLookUpDump`pp6}] = {{\"Hansen75 (89.4.1.1.1)\", 1 + Sum`SumTableLookUpDump`pp1\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Sum`SumTableLookUpDump`pp6}}, Pochhammer[1 + (Sum`SumTableLookUpDump`pp1 + Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp6]\/Pochhammer[1 + Sum`SumTableLookUpDump`pp2\/Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp6], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[(1 - Sum`SumTableLookUpDump`pp1^(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4\/(1 + Sum`SumTableLookUpDump`pp1^(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.25.2.1.1)\", (1 - Sum`SumTableLookUpDump`pp1^(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4\/(1 + Sum`SumTableLookUpDump`pp1^(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]))^4, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Sqrt[1 - EllipticTheta[2, 0, Sum`SumTableLookUpDump`pp1]^4\/EllipticTheta[3, 0, Sum`SumTableLookUpDump`pp1]^4], {}, {Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[3 - 4*Sin[3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.15.1.1)\", 3 - 4*Sin[3^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 0, -1 + Sum`SumTableLookUpDump`pp4}}, Csc[Sum`SumTableLookUpDump`pp2]*Sin[3^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Cosh[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (92.1.3.1.1)\", Cosh[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, Sinh[Sum`SumTableLookUpDump`pp2]\/Sum`SumTableLookUpDump`pp2, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2] + 2*Sum`SumTableLookUpDump`pp1^2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Cos[2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Sum`SumTableLookUpDump`pp6], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}] = {{\"Hansen75 (91.8.20.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2] + 2*Sum`SumTableLookUpDump`pp1^2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Cos[2^(-1 + Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])*Sum`SumTableLookUpDump`pp6], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Infinity}}, (1 + Sum`SumTableLookUpDump`pp1^2 - 2*Sum`SumTableLookUpDump`pp1*Cos[Sum`SumTableLookUpDump`pp6])^(-1), {Abs[Sum`SumTableLookUpDump`pp1] < 1}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`a, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`a, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp7}}}\nSum`ProductHansen[1 - Sum`SumTableLookUpDump`pp1^4\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^4, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.7.3.1.1)\", 1 - Sum`SumTableLookUpDump`pp1^4\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^4, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Cos[(Pi*Sum`SumTableLookUpDump`pp1)\/2]*Cosh[(Pi*Sum`SumTableLookUpDump`pp1)\/2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (89.1.2.1.1)\", Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp3}}, Sum`SumTableLookUpDump`pp3!, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[-Sum`SumTableLookUpDump`pp1^2 + (1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.2.5.1.1)\", -Sum`SumTableLookUpDump`pp1^2 + (1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, 2^(2*Sum`SumTableLookUpDump`pp4)*Pochhammer[3\/2 - Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4]*Pochhammer[3\/2 + Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sin[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Sinh[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.1.27.1.1)\", Sin[(2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Sinh[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp1)*Csch[Sum`SumTableLookUpDump`pp3]*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3], Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp1)*(-1 + Cosh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3]), Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.4.2.1.1)\", 1 + Sum`SumTableLookUpDump`pp1\/Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, Pochhammer[1 + Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp4]\/Sum`SumTableLookUpDump`pp4!, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[(Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2 - (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)])*(Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)]), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Sum`SumTableLookUpDump`pp3}] = {{\"Hansen75 (91.2.29.1.1)\", (Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2 - (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)])*(Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2 + (2*Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4])\/(1 + 2*Sum`SumTableLookUpDump`pp3)]), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp4], 1, Sum`SumTableLookUpDump`pp3}}, (Cos[Sum`SumTableLookUpDump`pp1*(1 + 2*Sum`SumTableLookUpDump`pp3)] - Cos[Sum`SumTableLookUpDump`pp2*(1 + 2*Sum`SumTableLookUpDump`pp3)])\/(2^(2*Sum`SumTableLookUpDump`pp3)*(Cos[Sum`SumTableLookUpDump`pp1] - Cos[Sum`SumTableLookUpDump`pp2])), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp09, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp010, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp8, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp9, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp10}}}\nSum`ProductHansen[Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Coth[Sum`SumTableLookUpDump`pp3]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.6.7.1.1)\", Cot[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp1]^2 + Coth[Sum`SumTableLookUpDump`pp3]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Floor[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{(Csch[Sum`SumTableLookUpDump`pp3]^Sum`SumTableLookUpDump`pp1*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp1, Mod[Sum`SumTableLookUpDump`pp1, 2] == 1}, {(Cosh[Sum`SumTableLookUpDump`pp3]*Csch[Sum`SumTableLookUpDump`pp3]^(1 + Sum`SumTableLookUpDump`pp1)*Sinh[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp1, Mod[Sum`SumTableLookUpDump`pp1, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.4.6.1.1)\", Csc[Sum`SumTableLookUpDump`pp1]^2 - Csc[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{(Csc[Sum`SumTableLookUpDump`pp1]^Sum`SumTableLookUpDump`pp2*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {(Cos[Sum`SumTableLookUpDump`pp1]*Csc[Sum`SumTableLookUpDump`pp1]^(1 + Sum`SumTableLookUpDump`pp2)*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2])\/Sum`SumTableLookUpDump`pp2, Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[Cosh[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (92.1.2.1.1)\", Cosh[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, (Csch[Sum`SumTableLookUpDump`pp2\/2^Sum`SumTableLookUpDump`pp4]*Sinh[Sum`SumTableLookUpDump`pp2])\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[-Sum`SumTableLookUpDump`pp1^2 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (89.2.4.1.1)\", -Sum`SumTableLookUpDump`pp1^2 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 1, Sum`SumTableLookUpDump`pp4}}, 2^(2*Sum`SumTableLookUpDump`pp4)*Pochhammer[1 - Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4]*Pochhammer[1 + Sum`SumTableLookUpDump`pp1\/2, Sum`SumTableLookUpDump`pp4], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + 2*Sum`SumTableLookUpDump`pp2}] = {{\"Hansen75 (91.1.8.1.1)\", Sin[(Pi*Sum`SumTableLookUpDump`pp1*(1 + 4*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3]))\/Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 0, -1 + 2*Sum`SumTableLookUpDump`pp2}}, 2^(1\/2 - 2*Sum`SumTableLookUpDump`pp2), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], 1\/8, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5}}}\nSum`ProductHansen[1 + Cos[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}] = {{\"Hansen75 (91.8.6.1.1)\", 1 + Cos[2^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2], {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Sum`SumTableLookUpDump`pp4}}, (Csc[Sum`SumTableLookUpDump`pp2]^2*Sin[2^Sum`SumTableLookUpDump`pp4*Sum`SumTableLookUpDump`pp2]^2)\/2^Sum`SumTableLookUpDump`pp4, {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`pp4}}}\nSum`ProductHansen[1 - (2*(-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp3^2)\/(-Sum`SumTableLookUpDump`pp2^2 + Sum`SumTableLookUpDump`pp6^2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^2), {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}] = {{\"Hansen75 (89.5.20.1.1)\", 1 - (2*(-1)^Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]*Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp3 + Sum`SumTableLookUpDump`pp3^2)\/(-Sum`SumTableLookUpDump`pp2^2 + Sum`SumTableLookUpDump`pp6^2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1]^2), {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp1], 1, Infinity}}, (Sum`SumTableLookUpDump`pp2*(1 + Csc[(Pi*Sum`SumTableLookUpDump`pp2)\/Sum`SumTableLookUpDump`pp6]*Sin[(Pi*Sum`SumTableLookUpDump`pp3)\/Sum`SumTableLookUpDump`pp6]))\/(Sum`SumTableLookUpDump`pp2 + Sum`SumTableLookUpDump`pp3), {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp04, Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`x, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp07, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp08, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp6, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp7, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp8}}}\nSum`ProductHansen[1 + Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}] = {{\"Hansen75 (89.5.17.1.1)\", 1 + Sum`SumTableLookUpDump`pp1^2\/(1 + 2*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2])^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp2], 0, Infinity}}, Cosh[(Pi*Sum`SumTableLookUpDump`pp1)\/2], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`z, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp3}}}\nSum`ProductHansen[Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}] = {{\"Hansen75 (91.2.17.1.1)\", Cos[Sum`SumTableLookUpDump`pp1]^2 - Cos[(Pi*Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3])\/Sum`SumTableLookUpDump`pp2]^2, {{Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`pp3], 1, Floor[Sum`SumTableLookUpDump`pp2*Sum`SumTableLookUpDump`pp6]}}, Piecewise[{{2^(1 - Sum`SumTableLookUpDump`pp2)*Csc[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 1}, {2^(1 - Sum`SumTableLookUpDump`pp2)*Cot[Sum`SumTableLookUpDump`pp1]*Sin[Sum`SumTableLookUpDump`pp1*Sum`SumTableLookUpDump`pp2], Mod[Sum`SumTableLookUpDump`pp2, 2] == 0}}, 0], {}, {Sum`SumTableLookUpDump`k, Sum`SumTableLookUpDump`vv[Sum`SumTableLookUpDump`vv1], Sum`SumTableLookUpDump`y, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`vv1, Sum`SumTableLookUpDump`pp04, 1\/2, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`n, Sum`SumTableLookUpDump`pp06, Sum`SumTableLookUpDump`pp01, Sum`SumTableLookUpDump`pp1, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp2, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp3, Sum`SumTableLookUpDump`pp03, Sum`SumTableLookUpDump`pp4, Sum`SumTableLookUpDump`pp02, Sum`SumTableLookUpDump`pp5, Sum`SumTableLookUpDump`pp05, Sum`SumTableLookUpDump`pp6}}}\nSum`ProductHansen[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sum`ProductHansen",
	"PacletManager`Paclet`Private`ProductID":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`ProductID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`ProductID",
	"Product`ProductInfinitePiecewise":"ObjectType: Symbol\nUsage: Product`ProductInfinitePiecewise\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductInfinitePiecewise[Sum`PiecewiseSumProductDump`expr__] := Block[{Sum`PiecewiseSumProductDump`res}, Sum`PiecewiseSumProductDump`res = Sum`PiecewiseSumProductDump`productInfinitePiecewise[Sum`PiecewiseSumProductDump`expr]; Sum`PiecewiseSumProductDump`res \/; FreeQ[Sum`PiecewiseSumProductDump`res, $Failed]]\nProduct`ProductInfinitePiecewise[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductInfinitePiecewise",
	"Internal`ProductLogApproximation":"ObjectType: Symbol\nUsage: Internal`ProductLogApproximation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: Internal`ProductLogApproximation",
	"Statistics`QuantityUtilities`ProductMeasureWithUnitsFromMatrices":"ObjectType: Symbol\nUsage: Statistics`QuantityUtilities`ProductMeasureWithUnitsFromMatrices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`QuantityUtilities`ProductMeasureWithUnitsFromMatrices[Statistics`QuantityUtilitiesDump`mat_, Statistics`QuantityUtilitiesDump`fun_, Statistics`QuantityUtilitiesDump`unitfun_] := Catch[Block[{Statistics`QuantityUtilitiesDump`val, Statistics`QuantityUtilitiesDump`units, Statistics`QuantityUtilitiesDump`len}, Statistics`QuantityUtilitiesDump`val = Statistics`QuantityUtilities`GetMatrixAndUnits[Statistics`QuantityUtilitiesDump`mat]; If[Length[Statistics`QuantityUtilitiesDump`val] == 2, {Statistics`QuantityUtilitiesDump`val, Statistics`QuantityUtilitiesDump`units} = Statistics`QuantityUtilitiesDump`val, Throw[$Failed]]; Statistics`QuantityUtilitiesDump`units = Statistics`QuantityUtilitiesDump`ConstructedUnit[Statistics`QuantityUtilitiesDump`unitfun[Statistics`QuantityUtilitiesDump`units]]; Statistics`QuantityUtilitiesDump`val = Statistics`QuantityUtilitiesDump`fun[Statistics`QuantityUtilitiesDump`val]; If[Internal`LiterallyAbsentQ[Statistics`QuantityUtilitiesDump`val, Statistics`QuantityUtilitiesDump`fun], Statistics`QuantityUtilitiesDump`ConstructQuantity[Statistics`QuantityUtilitiesDump`val, Statistics`QuantityUtilitiesDump`units], $Failed]]]\nStatistics`QuantityUtilities`ProductMeasureWithUnitsFromMatrices[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`QuantityUtilities`ProductMeasureWithUnitsFromMatrices",
	"Product`ProductMultivariatePiecewise":"ObjectType: Symbol\nUsage: Product`ProductMultivariatePiecewise\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductMultivariatePiecewise[Sum`PiecewiseSumProductDump`expr__] := Block[{Sum`PiecewiseSumProductDump`res}, Sum`PiecewiseSumProductDump`res = Sum`PiecewiseSumProductDump`productMultivariatePiecewise[Sum`PiecewiseSumProductDump`expr]; Sum`PiecewiseSumProductDump`res \/; FreeQ[Sum`PiecewiseSumProductDump`res, $Failed]]\nProduct`ProductMultivariatePiecewise[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductMultivariatePiecewise",
	"Product`ProductParser":"ObjectType: Symbol\nUsage: Product`ProductParser\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductParser[Product`ProductParserDump`factor_, Product`ProductParserDump`iterators_List, Product`ProductParserDump`useroptions_List] \/; Head[Product`ProductParserDump`factor] =!= List && FreeQ[Product`ProductParserDump`factor, Sum | Product | Integrate | SeriesData] := Block[{Product`ProductParserDump`res, Product`ProductParserDump`res1, Product`ProductParserDump`opts = Options[Product], Product`$ProductAssumptions, Product`$ProductConvergenceTestingTime = 15, Product`$ProductGenerateConditions = False, Product`$ProductMethod, Product`$ProductVerifyConvergence, Product`$ProductRegularization, Product`$ProductGeneratedParameters, Product`ProductParserDump`Product1, Product`ProductParserDump`reduced, Product`ProductParserDump`negationreduced, Product`$ProductFactor = Product`ProductParserDump`factor, Product`$ProductIterator = Product`ProductParserDump`iterators, Product`ProductParserDump`$ProductGeneratedConditions, Product`ProductParserDump`vars, Product`ProductParserDump`indefconst}, Product`$ProductAssumptions = Assumptions \/. Product`ProductParserDump`useroptions \/. Product`ProductParserDump`opts; Product`$ProductGenerateConditions = GenerateConditions \/. Product`ProductParserDump`useroptions \/. Product`ProductParserDump`opts; Product`$ProductMethod = Method \/. Product`ProductParserDump`useroptions \/. Product`ProductParserDump`opts; Product`$ProductVerifyConvergence = VerifyConvergence \/. Product`ProductParserDump`useroptions \/. Product`ProductParserDump`opts; Product`$ProductRegularization = Regularization \/. Product`ProductParserDump`useroptions \/. Product`ProductParserDump`opts; Product`$ProductGeneratedParameters = GeneratedParameters \/. Product`ProductParserDump`useroptions \/. Product`ProductParserDump`opts; Product`ProductParserDump`$ProductGeneratedConditions = {}; Product`ProductParserDump`res = Quiet[If[Length[Product`ProductParserDump`useroptions] === 0 && $Assumptions === True && FreeQ[{Product`ProductParserDump`factor, Product`ProductParserDump`iterators}, Rule | Pattern], Product`ProductParserDump`productParserEvaluate[Product`ProductParserDump`factor, Product`ProductParserDump`iterators, Product`ProductParserDump`useroptions], Product`ProductParserDump`productParser[Product`ProductParserDump`factor, Product`ProductParserDump`iterators, Product`ProductParserDump`useroptions]], {General::ztest, Product::gener, PossibleZeroQ::ztest1}]; (Product`ProductParserDump`res = Product`ProductParserDump`ProductSimplification[Product`ProductParserDump`res]; If[Product`$ProductGeneratedParameters =!= None && FreeQ[Product`ProductParserDump`res, $Failed], Product`ProductParserDump`indefconst = Product`$ProductGeneratedParameters; Product`ProductParserDump`res = Product`ProductParserDump`res*Product`ProductParserDump`GenerateIndefiniteProductConstants[Product`ProductParserDump`res, Product`ProductParserDump`iterators, Product`ProductParserDump`indefconst]]; Product`ProductParserDump`res1 = Which[Product`$ProductGenerateConditions === False && Product`$ProductAssumptions === True, Product`ProductParserDump`res, Product`$ProductGenerateConditions === False && Product`$ProductAssumptions =!= True, Product`ProductParserDump`vars = Select[Union[Level[{Product`ProductParserDump`factor, Product`ProductParserDump`iterators}, {-1}]],  !NumericQ[#1] & ]; Product`ProductParserDump`reduced = Select[Product`ProductParserDump`$ProductGeneratedConditions, StringFreeQ[ToString[#1], \"Dump\"] & ]; If[Length[Product`ProductParserDump`reduced] < Product`ProductParserDump`$ProductGeneratedConditions, Return[$Failed]]; Product`ProductParserDump`reduced = Quiet[Simplify[And @@ Product`ProductParserDump`reduced, Product`$ProductAssumptions]]; Product`ProductParserDump`negationreduced =  !Product`ProductParserDump`reduced; If[ !FreeQ[Product`ProductParserDump`reduced, False], $Failed, Product`ProductParserDump`res], Product`$ProductGenerateConditions === True, Product`ProductParserDump`vars = Select[Union[Level[{Product`ProductParserDump`factor, Product`ProductParserDump`iterators}, {-1}]],  !NumericQ[#1] & ]; Product`ProductParserDump`reduced = Select[Product`ProductParserDump`$ProductGeneratedConditions, StringFreeQ[ToString[#1], \"Dump\"] & ]; Product`ProductParserDump`reduced = Simplify[And @@ Product`ProductParserDump`reduced, Product`$ProductAssumptions]; Product`ProductParserDump`negationreduced =  !Product`ProductParserDump`reduced; If[ !FreeQ[Product`ProductParserDump`reduced, False], Return[$Failed]]; If[Product`ProductParserDump`reduced, Evaluate[Product`ProductParserDump`res], Evaluate[Product`ProductParserDump`Product1[Product`ProductParserDump`factor, Sequence @@ Product`ProductParserDump`iterators, GenerateConditions -> True, Assumptions -> Product`ProductParserDump`negationreduced]]] \/. {Product`ProductParserDump`Product1 -> Product}, True, Product`ProductParserDump`res]; Product`ProductParserDump`res1 \/; FreeQ[Product`ProductParserDump`res1, $Failed]) \/; FreeQ[Product`ProductParserDump`res, $Failed]]\nProduct`ProductParser[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductParser",
	"ResourceFunctionHelpers`ProductRule":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`ProductRule\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`ProductRule[ResourceFunctionHelpers`DerivativeRules`Private`e_Plus, ResourceFunctionHelpers`DerivativeRules`Private`x_Symbol, ResourceFunctionHelpers`DerivativeRules`Private`opts:OptionsPattern[]] := Plus @@ ResourceFunctionHelpers`DerivativeRules`Private`iderivRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x, \"product\", ResourceFunctionHelpers`DerivativeRules`Private`opts]\nResourceFunctionHelpers`ProductRule[ResourceFunctionHelpers`DerivativeRules`Private`e:Times[__], ResourceFunctionHelpers`DerivativeRules`Private`x_, ResourceFunctionHelpers`DerivativeRules`Private`opts:OptionsPattern[]] \/;  !FreeQ[Hold[ResourceFunctionHelpers`DerivativeRules`Private`e], ResourceFunctionHelpers`DerivativeRules`Private`x] := ResourceFunctionHelpers`DerivativeRules`Private`iderivRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x, \"product\", ResourceFunctionHelpers`DerivativeRules`Private`opts]\nResourceFunctionHelpers`ProductRule[ResourceFunctionHelpers`DerivativeRules`Private`e_, ResourceFunctionHelpers`DerivativeRules`Private`x_Symbol, OptionsPattern[]] := With[{ResourceFunctionHelpers`DerivativeRules`Private`res = ResourceFunctionHelpers`DerivativeRules`Private`productRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x]}, ResourceFunctionHelpers`DerivativeRules`Private`res \/; FreeQ[ResourceFunctionHelpers`DerivativeRules`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PrintRule -> False, PrintNapkin -> False, InactiveInnerDerivatives -> False}\nAttributes: {HoldFirst}\nFullName: ResourceFunctionHelpers`ProductRule",
	"GroupTheory`Symmetries`ProductSymmetry":"ObjectType: Symbol\nUsage: GroupTheory`Symmetries`ProductSymmetry\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroupTheory`Symmetries`ProductSymmetry",
	"Product`ProductTableLookUp":"ObjectType: Symbol\nUsage: Product`ProductTableLookUp\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductTableLookUp[Product`ProductTableLookUpDump`expr__] := Block[{Product`ProductTableLookUpDump`res}, Product`ProductTableLookUpDump`res = Product`ProductTableLookUpDump`TableLookUp[Product`ProductTableLookUpDump`expr]; Product`ProductTableLookUpDump`res \/; FreeQ[Product`ProductTableLookUpDump`res, $Failed]]\nProduct`ProductTableLookUp[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductTableLookUp",
	"Product`ProductTableLookUpData":"ObjectType: Symbol\nUsage: Product`ProductTableLookUpData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Product`ProductTableLookUpData[Product`ProductParserDump`a__] := Block[{Product`ProductParserDump`res1, Product`ProductParserDump`res}, Product`ProductParserDump`res = Catch[Product`ProductParserDump`res1 = Sum`ProductHansen[Product`ProductParserDump`a]; If[FreeQ[Product`ProductParserDump`res1, $Failed], Throw[Product`ProductParserDump`res1]]; Throw[$Failed]]; Product`ProductParserDump`res \/; FreeQ[Product`ProductParserDump`res, $Failed]]\nProduct`ProductTableLookUpData[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Product`ProductTableLookUpData",
	"RuntimeTools`Profile":"ObjectType: Symbol\nUsage: RuntimeTools`Profile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RuntimeTools`TimeLimit -> Automatic}\nAttributes: {HoldAllComplete}\nFullName: RuntimeTools`Profile",
	"RuntimeTools`ProfileDataEvaluate":"ObjectType: Symbol\nUsage: RuntimeTools`ProfileDataEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: RuntimeTools`ProfileDataEvaluate",
	"RuntimeTools`ProfileDataWrapper":"ObjectType: Symbol\nUsage: RuntimeTools`ProfileDataWrapper\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: RuntimeTools`ProfileDataWrapper",
	"RuntimeTools`ProfileFunction":"ObjectType: Symbol\nUsage: RuntimeTools`ProfileFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RuntimeTools`ProfileFunction[RuntimeTools`Dump`eIn_, RuntimeTools`Dump`limitArg_] := Module[{RuntimeTools`Dump`nb, RuntimeTools`Dump`e, RuntimeTools`Dump`l, RuntimeTools`Dump`lim}, RuntimeTools`Dump`lim = RuntimeTools`Dump`getLimit[RuntimeTools`Dump`limitArg]; RuntimeTools`Dump`e = Sort[RuntimeTools`Dump`eIn, #1[[4]] > #2[[4]] & ]; RuntimeTools`Dump`e = Sort[RuntimeTools`Dump`e, RuntimeTools`Dump`sortFun]; RuntimeTools`Dump`e = Select[RuntimeTools`Dump`e, #1[[4]] >= RuntimeTools`Dump`lim & ]; RuntimeTools`Dump`nb = NotebookCreate[]; MathLink`CallFrontEnd[FrontEnd`SelectionMove[RuntimeTools`Dump`nb, All, Notebook]]; RuntimeTools`Dump`l = List @@ Function[RuntimeTools`Dump`x, {ToBoxes[RuntimeTools`Dump`x[[3]]], ToBoxes[RuntimeTools`Dump`x[[4]]], ButtonBox[RuntimeTools`Dump`addArgument[RuntimeTools`Dump`x[[1]]], Active -> True, ButtonFunction -> (Evaluate[FrontEnd`SelectObject[FrontEnd`NotebookInterfaceObject[RuntimeTools`Dump`x[[2]]]]] & )]}] \/@ RuntimeTools`Dump`e; RuntimeTools`Dump`l = Prepend[RuntimeTools`Dump`l, {\"Calls\", \"Time\", \"Evaluation\"}]; MathLink`CallFrontEnd[FrontEnd`NotebookWrite[RuntimeTools`Dump`nb, Notebook[{Cell[BoxData[GridBox[RuntimeTools`Dump`l, ColumnLines -> True, ColumnAlignments -> {Right, Center, Left}, RowLines -> {True, False}]], \"Text\", ButtonBoxOptions -> {Alignment -> Left}]}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RuntimeTools`ProfileFunction",
	"Progress`ProgressPanel":"ObjectType: Symbol\nUsage: Progress`ProgressPanel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Progress`ProgressPanel[Progress`ProgressDump`summaryIn_, Progress`ProgressDump`detailedIn_:None, Progress`ProgressDump`progFrac_:None] := Block[{Progress`ProgressDump`hasSummary, Progress`ProgressDump`hasDetail, Progress`ProgressDump`hasProg}, Progress`ProgressDump`hasSummary = Progress`ProgressDump`summaryIn =!= None; Progress`ProgressDump`hasDetail = Progress`ProgressDump`detailedIn =!= None; Progress`ProgressDump`hasProg = Progress`ProgressDump`progFrac =!= None; Progress`ProgressDump`summary = Progress`ProgressDump`fontSetting1[Progress`ProgressDump`summaryIn]; Progress`ProgressDump`detailed = Progress`ProgressDump`fontSetting3[Progress`ProgressDump`detailedIn]; Progress`ProgressDump`vspacing = Switch[{Progress`ProgressDump`hasSummary, Progress`ProgressDump`hasDetail, Progress`ProgressDump`hasProg}, {True, True, True}, Progress`ProgressDump`detailed = Progress`ProgressDump`formatThirdLine[Progress`ProgressDump`detailed]; {0.6, {-0.3}, 0}, {True, False, True}, {0.6, {-0.3}, 0.}, {True, False, False}, {0.6, 0.6}, {True, True, False}, {0.6, {0.4}, 0.5}, {False, True, True}, {-0.5, 0.2}, {False, False, True}, {-0.5}, {False, False, False}, {}, {False, True, False}, {0.5}]; Deploy[Framed[Grid[{{Grid[{If[Progress`ProgressDump`hasSummary, {Progress`ProgressDump`summary}, Nothing], If[Progress`ProgressDump`hasProg, {Progress`ProgressDump`progressItem[Progress`ProgressDump`progFrac]}, Nothing], If[Progress`ProgressDump`hasDetail, {Progress`ProgressDump`detailed}, Nothing]}, Alignment -> {Left, Automatic}, Background -> None, ItemSize -> {24, Full}, Spacings -> {{0, {0}, 0}, Progress`ProgressDump`vspacing}, Frame -> All, FrameStyle -> Progress`ProgressDump`testingLineStyle]}}, Alignment -> Top, Spacings -> {0.3}, Frame -> None, FrameStyle -> Directive[Red, Dotted]], FrameMargins -> {{5, 5}, {1, 2}}, RoundingRadius -> 3, FrameStyle -> Progress`ProgressDump`borderStyle, Background -> Progress`ProgressDump`backgroundStyle]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Progress`ProgressPanel",
	"NDSolve`Projection":"ObjectType: Symbol\nUsage: NDSolve`Projection\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`Projection \/: NDSolve`InitializeMethod[NDSolve`Projection, {NDSolve`ProjectionDump`stepmode_, NDSolve`ProjectionDump`stepcontrol_, NDSolve`ProjectionDump`denseoutput_}, NDSolve`ProjectionDump`sd_, NDSolve`ProjectionDump`nf_, NDSolve`ProjectionDump`ndstate_, NDSolve`ProjectionDump`rawmopts_] := Module[{NDSolve`ProjectionDump`ag, NDSolve`ProjectionDump`invs, NDSolve`ProjectionDump`invsfun, NDSolve`ProjectionDump`itnorm, NDSolve`ProjectionDump`itsafety, NDSolve`ProjectionDump`jdata, NDSolve`ProjectionDump`lsm, NDSolve`ProjectionDump`maxits, NDSolve`ProjectionDump`mdata, NDSolve`ProjectionDump`mode, NDSolve`ProjectionDump`norm, NDSolve`ProjectionDump`pg, NDSolve`ProjectionDump`prec, NDSolve`ProjectionDump`safety, NDSolve`ProjectionDump`scparams, NDSolve`ProjectionDump`stepdata, NDSolve`ProjectionDump`steprb, NDSolve`ProjectionDump`stepsf, NDSolve`ProjectionDump`submethod, NDSolve`ProjectionDump`submethoddata, NDSolve`ProjectionDump`tvar, NDSolve`ProjectionDump`workdata}, {NDSolve`ProjectionDump`ag, NDSolve`ProjectionDump`invs, NDSolve`ProjectionDump`safety, NDSolve`ProjectionDump`lsm, NDSolve`ProjectionDump`maxits, NDSolve`ProjectionDump`submethod, NDSolve`ProjectionDump`pg} = NDSolve`GetMethodOptionValues[NDSolve`Projection, NDSolve`ProjectionDump`ProjectionProperties, NDSolve`ProjectionDump`rawmopts]; If[ !MatchQ[NDSolve`ProjectionDump`maxits, _?Internal`PositiveMachineIntegerQ | Automatic | Infinity], NDSolve`NDSolveMessage[NDSolve`ProjectionDump`ndstate, \"maxits\", NDSolve`ProjectionDump`maxits, \"Projection\"]; Throw[$Failed]]; NDSolve`ProjectionDump`prec = NDSolve`ProjectionDump`nf[\"WorkingPrecision\"]; NDSolve`ProjectionDump`itsafety = N[NDSolve`ProjectionDump`safety, NDSolve`ProjectionDump`prec]; If[ !TrueQ[Inequality[0, Less, NDSolve`ProjectionDump`itsafety, LessEqual, 1]], NDSolve`NDSolveMessage[NDSolve`ProjectionDump`ndstate, \"sfty\", \"IterationSafetyFactor\", NDSolve`ProjectionDump`safety, \"Projection\"]; Throw[$Failed]]; NDSolve`ProjectionDump`submethoddata = NDSolve`InitializeSubmethod[\"Projection\", NDSolve`ProjectionDump`submethod, {NDSolve`ProjectionDump`stepmode, \"OneStep\", False}, NDSolve`ProjectionDump`sd, NDSolve`ProjectionDump`nf, NDSolve`ProjectionDump`ndstate]; NDSolve`ProjectionDump`invsfun = NDSolve`ProjectionDump`CreateInvariantsFunction[NDSolve`ProjectionDump`nf, NDSolve`ProjectionDump`ndstate, NDSolve`ProjectionDump`invs]; NDSolve`ProjectionDump`tvar = NDSolve`ProjectionDump`ndstate[\"TemporalVariable\"]; If[NDSolve`ProjectionDump`maxits === Automatic, NDSolve`ProjectionDump`maxits = 2*Round[NDSolve`ProjectionDump`prec]]; NDSolve`ProjectionDump`maxits = Min[Developer`$MaxMachineInteger, NDSolve`ProjectionDump`maxits]; NDSolve`ProjectionDump`workdata = Join[Table[NDSolve`CreateWorkspace[NDSolve`ProjectionDump`nf], {2}], Table[NDSolve`CreateWorkspace[NDSolve`ProjectionDump`invsfun], {1}]]; NDSolve`ProjectionDump`jdata = NDSolve`CreateWorkspaceList[None, None, NDSolve`ProjectionDump`itsafety, 1]; NDSolve`ProjectionDump`itnorm = NDSolve`NewMethodNorm[NDSolve`ProjectionDump`ndstate, NDSolve`ProjectionDump`nf, NDSolve`ProjectionDump`method, NDSolve`ProjectionDump`ag, NDSolve`ProjectionDump`pg]; NDSolve`ProjectionDump`mode = Automatic; NDSolve`ProjectionDump`scparams = N[{1, 0}, NDSolve`ProjectionDump`prec]; NDSolve`ProjectionDump`steprb = N[{1, 1}, NDSolve`ProjectionDump`prec]; NDSolve`ProjectionDump`stepsf = N[{1, 1}, NDSolve`ProjectionDump`prec]; NDSolve`ProjectionDump`stepdata = NDSolve`StepSizeControlData[\"Projection\", NDSolve`ProjectionDump`itnorm, NDSolve`ProjectionDump`nf, NDSolve`ProjectionDump`mode, NDSolve`ProjectionDump`scparams, NDSolve`ProjectionDump`steprb, NDSolve`ProjectionDump`stepsf, NDSolve`ProjectionDump`ndstate[\"Caller\"]]; NDSolve`ProjectionDump`mdata = NDSolve`CreateWorkspaceList[NDSolve`ProjectionDump`invsfun, NDSolve`ProjectionDump`maxits, NDSolve`ProjectionDump`tvar, {NDSolve`ProjectionDump`lsm}]; NDSolve`CreateMethodData[NDSolve`Projection, {NDSolve`ProjectionDump`submethoddata, NDSolve`ProjectionDump`workdata, NDSolve`ProjectionDump`stepdata, NDSolve`ProjectionDump`jdata, NDSolve`ProjectionDump`mdata}]]\nDownValues: None\nSubValues: NDSolve`Projection[NDSolve`MethodData[NDSolve`ProjectionDump`v_, __]][\"Version\"] := NDSolve`ProjectionDump`v\nNDSolve`Projection[NDSolve`MethodData[__, NDSolve`ProjectionDump`data_]][\"DenseOutputQ\"] := False\nNDSolve`Projection[NDSolve`MethodData[__, {NDSolve`ProjectionDump`submdata_, __}]][\"Submethods\"] := {NDSolve`ProjectionDump`submdata}\nNDSolve`Projection[_][\"SymmetricMethodQ\"] := False\nNDSolve`Projection[NDSolve`MethodData[__, {NDSolve`ProjectionDump`submdata_, __}]][NDSolve`ProjectionDump`prop_] := NDSolve`CheckMethodProperty[NDSolve`ProjectionDump`submdata, NDSolve`ProjectionDump`prop]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AccuracyGoal -> Automatic, Invariants -> None, IterationSafetyFactor -> 1, LinearSolveMethod -> Cholesky, MaxIterations -> Automatic, Method -> StiffnessSwitching, PrecisionGoal -> Automatic}\nAttributes: {HoldAllComplete}\nFullName: NDSolve`Projection",
	"GeoGraphics`ProjectionDistortion":"ObjectType: Symbol\nUsage: GeoGraphics`ProjectionDistortion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeoGraphics`ProjectionDistortion[System`GeoGraphicsDump`g_GeoGraphics, System`GeoGraphicsDump`grid_:{0.05, 0.5, 0.95}] := Block[{System`GeoGraphicsDump`georange, System`GeoGraphicsDump`proj, System`GeoGraphicsDump`center}, {System`GeoGraphicsDump`georange, System`GeoGraphicsDump`proj, System`GeoGraphicsDump`center} = {GeoRange, GeoProjection, GeoCenter} \/. Options[System`GeoGraphicsDump`g, {GeoRange, GeoProjection, GeoCenter}]; GeoGraphics`ProjectionDistortion[System`GeoGraphicsDump`georange, System`GeoGraphicsDump`proj, System`GeoGraphicsDump`center, System`GeoGraphicsDump`grid]]\nGeoGraphics`ProjectionDistortion[System`GeoGraphicsDump`georange:{_GeoPosition, _GeoPosition}, System`GeoGraphicsDump`proj_, System`GeoGraphicsDump`center_, System`GeoGraphicsDump`grid_ \/; MatchQ[Dimensions[System`GeoGraphicsDump`grid], {_, _, 2}]] := Block[{System`GeoGraphicsDump`newrange}, System`GeoGraphicsDump`newrange = Transpose[System`GeoGraphicsDump`georange \/. {GeoPosition[System`GeoGraphicsDump`p_, _:GIS`$GeoModel] :> Take[System`GeoGraphicsDump`p, 2]}]; GeoGraphics`ProjectionDistortion[System`GeoGraphicsDump`newrange, System`GeoGraphicsDump`proj, System`GeoGraphicsDump`center, System`GeoGraphicsDump`grid]]\nGeoGraphics`ProjectionDistortion[(System`GeoGraphicsDump`georange_)?MatrixQ, System`GeoGraphicsDump`proj_, System`GeoGraphicsDump`center_, System`GeoGraphicsDump`grid_ \/; MatchQ[Dimensions[System`GeoGraphicsDump`grid], {_, _, 2}]] := Catch[Block[{System`GeoGraphicsDump`truescale, System`GeoGraphicsDump`dist, System`GeoGraphicsDump`m, System`GeoGraphicsDump`n}, {System`GeoGraphicsDump`m, System`GeoGraphicsDump`n} = Take[Dimensions[System`GeoGraphicsDump`grid], 2]; System`GeoGraphicsDump`truescale = System`GeoGraphicsDump`findGeoScale[System`GeoGraphicsDump`proj, System`GeoGraphicsDump`center]; System`GeoGraphicsDump`dist = Table[Catch[(System`GeoGraphicsDump`findGeoScale[System`GeoGraphicsDump`proj, GeoPosition[{Rescale[System`GeoGraphicsDump`grid[[System`GeoGraphicsDump`i,System`GeoGraphicsDump`j,1]], {0, 1}, First[System`GeoGraphicsDump`georange]], Rescale[System`GeoGraphicsDump`grid[[System`GeoGraphicsDump`i,System`GeoGraphicsDump`j,2]], {0, 1}, Last[System`GeoGraphicsDump`georange]]}]] - System`GeoGraphicsDump`truescale)\/System`GeoGraphicsDump`truescale, \"GeoScaleBarError\", Missing[\"Indeterminate\"] & ], {System`GeoGraphicsDump`j, System`GeoGraphicsDump`n}, {System`GeoGraphicsDump`i, System`GeoGraphicsDump`m}]], \"GeoScaleBarError\", Missing[#1] & ]\nGeoGraphics`ProjectionDistortion[System`GeoGraphicsDump`georange_, System`GeoGraphicsDump`proj_, System`GeoGraphicsDump`center_, System`GeoGraphicsDump`grid_:{0.05, 0.5, 0.95}] := Block[{}, GeoGraphics`ProjectionDistortion[System`GeoGraphicsDump`georange, System`GeoGraphicsDump`proj, System`GeoGraphicsDump`center, Outer[List, System`GeoGraphicsDump`grid, System`GeoGraphicsDump`grid]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeoGraphics`ProjectionDistortion",
	"ImportExport`ProjectionNames":"ObjectType: Symbol\nUsage: ImportExport`ProjectionNames\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ImportExport`ProjectionNames[] := {\"Albers\", \"Bonne\", \"CylindricalEqualArea\", \"CylindricalEquidistant\", \"EckertIV\", \"EckertVI\", \"Equirectangular\", \"LambertAzimuthal\", \"LambertConic\", \"LambertCylindrical\", \"Mercator\", \"MillerCylindrical\", \"Mollweide\", \"Orthographic\", \"Polyconic\", \"Robinson\", \"Sinusoidal\", \"Stereographic\", \"VanDerGrinten\", \"WinkelTripel\"}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ImportExport`ProjectionNames",
	"Graphics`Mesh`ProjectionPlane":"ObjectType: Symbol\nUsage: Graphics`Mesh`ProjectionPlane\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`ProjectionPlane",
	"Region`ProjectionTransform":"ObjectType: Symbol\nUsage: Region`ProjectionTransform\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`ProjectionTransform[Region`ProjectionTransformDump`expr_] := Block[{Region`ProjectionTransformDump`res}, Region`ProjectionTransformDump`res = Region`ProjectionTransformDump`iProjectionTransform[Region`ProjectionTransformDump`expr]; Region`ProjectionTransformDump`res \/; Region`ProjectionTransformDump`res =!= $Failed]\nRegion`ProjectionTransform[Region`ProjectionTransformDump`expr___] := (ArgumentCountQ[Region`ProjectionTransform, Length[{Region`ProjectionTransformDump`expr}], 1, 1]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ProjectionTransform",
	"Extras`ProjectiveRationalize":"ObjectType: Symbol\nUsage: Extras`ProjectiveRationalize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Extras`ProjectiveRationalize[NumberTheory`RationalizeDump`x:{__Real}, NumberTheory`RationalizeDump`prec_Integer:0] := Module[{NumberTheory`RationalizeDump`scale, NumberTheory`RationalizeDump`res, NumberTheory`RationalizeDump`len = Length[NumberTheory`RationalizeDump`x], NumberTheory`RationalizeDump`a = Round[Accuracy[NumberTheory`RationalizeDump`x]]}, NumberTheory`RationalizeDump`scale = If[NumberTheory`RationalizeDump`prec === 0, 1, NumberTheory`RationalizeDump`scale = Max[NumberTheory`RationalizeDump`a - (NumberTheory`RationalizeDump`prec*NumberTheory`RationalizeDump`len)\/(NumberTheory`RationalizeDump`len - 1), 0]; NumberTheory`RationalizeDump`scale = 10^Round[NumberTheory`RationalizeDump`scale]]; NumberTheory`RationalizeDump`res = Append[IdentityMatrix[NumberTheory`RationalizeDump`len]*NumberTheory`RationalizeDump`scale, Round[NumberTheory`RationalizeDump`x*10^NumberTheory`RationalizeDump`a]]; NumberTheory`RationalizeDump`res = Drop[LatticeReduce[Transpose[NumberTheory`RationalizeDump`res]], -1]; NumberTheory`RationalizeDump`res = Minors[Drop[Transpose[NumberTheory`RationalizeDump`res], -1], NumberTheory`RationalizeDump`len - 1]; NumberTheory`RationalizeDump`res = (Reverse[Flatten[NumberTheory`RationalizeDump`res]]*(-1)^Range[NumberTheory`RationalizeDump`len])\/NumberTheory`RationalizeDump`scale^(NumberTheory`RationalizeDump`len - 1); If[NumberTheory`RationalizeDump`res[[1]] < 0, -NumberTheory`RationalizeDump`res, NumberTheory`RationalizeDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Extras`ProjectiveRationalize",
	"Region`Mesh`ProjectOntoPlane":"ObjectType: Symbol\nUsage: Region`Mesh`ProjectOntoPlane\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`ProjectOntoPlane[Region`Mesh`MeshFunctionsDump`points_] := Module[{Region`Mesh`MeshFunctionsDump`pm = Region`Mesh`GetPlaneProjectionMatrices[Region`Mesh`MeshFunctionsDump`points]}, If[Region`Mesh`MeshFunctionsDump`pm =!= $Failed, Region`Mesh`MeshFunctionsDump`pm[[1]], $Failed]]\nRegion`Mesh`ProjectOntoPlane[Region`Mesh`MeshFunctionsDump`coords_, Region`Mesh`MeshFunctionsDump`incidents_] := Region`Mesh`ProjectOntoPlane[Region`Mesh`ToCoordinates[Region`Mesh`MeshFunctionsDump`incidents, Region`Mesh`MeshFunctionsDump`coords]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`ProjectOntoPlane",
	"ComputationalGeometry`Surface`PrologParameter":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`PrologParameter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`PrologParameter",
	"Conditional`PropagateConditions":"ObjectType: Symbol\nUsage: Conditional`PropagateConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Conditional`PropagateConditions",
	"ComputationalGeometry`Methods`PropagateNormalOrientation":"ObjectType: Symbol\nUsage: ComputationalGeometry`Methods`PropagateNormalOrientation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Methods`PropagateNormalOrientation",
	"Control`Utilities`ProperQ":"ObjectType: Symbol\nUsage: Control`Utilities`ProperQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`Utilities`ProperQ[Control`CommonDump`tf:HoldPattern[TransferFunctionModel][{(Control`CommonDump`num_)?MatrixQ, Control`CommonDump`den:_?MatrixQ | _?Control`Utilities`notListQ}, (Control`CommonDump`var_)?Control`Utilities`pVariableQ^(-1), Repeated[_?Control`Patterns`listAutoQ, {0, 2}], (Control`CommonDump`opts___)?OptionQ]] := Control`Utilities`ProperQ[Control`CommonDump`fromInvVar[Control`CommonDump`tf]]\nControl`Utilities`ProperQ[HoldPattern[TransferFunctionModel][{(Control`CommonDump`num_)?MatrixQ, Control`CommonDump`den:_?MatrixQ | _?Control`Utilities`notListQ}, Control`CommonDump`var_, Repeated[_?Control`Patterns`listAutoQ, {0, 2}], (Control`CommonDump`opts___)?OptionQ]] := TrueQ[Control`CommonDump`properQ[Control`CommonDump`num, Control`CommonDump`den, Control`CommonDump`var, LessEqual]]\nControl`Utilities`ProperQ[Control`CommonDump`tf:HoldPattern[TransferFunctionModel][{(Control`CommonDump`z_)?System`Dump`CommonPatterns`matrixOfVectorsQ, Control`CommonDump`p:_?System`Dump`CommonPatterns`matrixOfVectorsQ | _?VectorQ, (Control`CommonDump`g_)?MatrixQ}, (Control`CommonDump`var_)?Control`Utilities`tfVariableQ, Repeated[_?Control`Patterns`listAutoQ, {0, 2}], (Control`CommonDump`opts___)?OptionQ] | HoldPattern[Control`ZeroPoleGainModel][{(Control`CommonDump`z_)?System`Dump`CommonPatterns`matrixOfVectorsQ, Control`CommonDump`p:_?System`Dump`CommonPatterns`matrixOfVectorsQ | _?VectorQ, (Control`CommonDump`g_)?MatrixQ}, (Control`CommonDump`var_)?Control`Utilities`tfVariableQ, Repeated[_?Control`Patterns`listAutoQ, {0, 2}], (Control`CommonDump`opts___)?OptionQ]] := Control`Utilities`ProperQ[Control`FromZPG[Control`CommonDump`tf]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`Utilities`ProperQ",
	"Charting`Properties":"ObjectType: Symbol\nUsage: Charting`Properties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`Properties",
	"GraphComputation`PropertyDistribution":"ObjectType: Symbol\nUsage: GraphComputation`PropertyDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`PropertyDistribution[GraphComputation`GraphPropertyDistributionDump`expr_, GraphComputation`GraphPropertyDistributionDump`dist:Distributed[_, _?GraphComputation`GraphPropertyDistributionDump`iGraphDistributionQ], OptionsPattern[]] := Block[{GraphComputation`GraphPropertyDistributionDump`res, $Assumptions = OptionValue[Assumptions]}, GraphComputation`GraphPropertyDistributionDump`res = GraphComputation`GraphPropertyDistributionDump`iPropertyDistribution[GraphComputation`GraphPropertyDistributionDump`expr, GraphComputation`GraphPropertyDistributionDump`dist]; GraphComputation`GraphPropertyDistributionDump`res \/; GraphComputation`GraphPropertyDistributionDump`res =!= $Failed]\nGraphComputation`PropertyDistribution[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {HoldAll}\nFullName: GraphComputation`PropertyDistribution",
	"Language`PropertyItemMap":"ObjectType: Symbol\nUsage: Language`PropertyItemMap\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Language`PropertyItemMap",
	"GraphComputation`PropertyPresentGraphQ":"ObjectType: Symbol\nUsage: GraphComputation`PropertyPresentGraphQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`PropertyPresentGraphQ",
	"System`ConvertersDump`FormatUtilities`PropertyValueToObject":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`PropertyValueToObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`PropertyValueToObject[System`ConvertersDump`FormatUtilities`Private`tag_Rule] := Quiet[Block[{System`ConvertersDump`FormatUtilities`Private`key = Keys[System`ConvertersDump`FormatUtilities`Private`tag], System`ConvertersDump`FormatUtilities`Private`value = Values[System`ConvertersDump`FormatUtilities`Private`tag], System`ConvertersDump`FormatUtilities`Private`head, System`ConvertersDump`FormatUtilities`Private`testf, System`ConvertersDump`FormatUtilities`Private`inputUnit = None, System`ConvertersDump`FormatUtilities`Private`outputUnit = None, System`ConvertersDump`FormatUtilities`Private`tz = None, System`ConvertersDump`FormatUtilities`Private`res}, If[AssociationQ[System`ConvertersDump`FormatUtilities`Private`value], Return[System`ConvertersDump`FormatUtilities`Private`key -> AssociationMap[System`ConvertersDump`FormatUtilities`PropertyValueToObject, System`ConvertersDump`FormatUtilities`Private`value]]; ]; {System`ConvertersDump`FormatUtilities`Private`inputUnit, System`ConvertersDump`FormatUtilities`Private`outputUnit} = Switch[System`ConvertersDump`FormatUtilities`Private`key, \"ApproximateDuration\" | \"Duration\", {\"Milliseconds\", \"Seconds\"}, \"ExactDurations\", {\"Seconds\", \"Seconds\"}, \"BitRate\", {\"Bits\"\/\"Seconds\", \"Bits\"\/\"Seconds\"}, \"FrameRate\", {\"Frames\"\/\"Seconds\", \"Frames\"\/\"Seconds\"}, \"SampleRate\", {\"Samples\"\/\"Seconds\", \"Samples\"\/\"Seconds\"}]; If[ !MatchQ[{System`ConvertersDump`FormatUtilities`Private`inputUnit, System`ConvertersDump`FormatUtilities`Private`outputUnit}, {None, None}], System`ConvertersDump`FormatUtilities`Private`res = Quantity[System`ConvertersDump`FormatUtilities`Private`value, System`ConvertersDump`FormatUtilities`Private`inputUnit]; If[ !QuantityQ[System`ConvertersDump`FormatUtilities`Private`res] ||  !Internal`RealValuedNumericQ[QuantityMagnitude[System`ConvertersDump`FormatUtilities`Private`res]], Return[System`ConvertersDump`FormatUtilities`Private`tag], If[System`ConvertersDump`FormatUtilities`Private`inputUnit =!= System`ConvertersDump`FormatUtilities`Private`outputUnit, System`ConvertersDump`FormatUtilities`Private`res = UnitConvert[System`ConvertersDump`FormatUtilities`Private`res, System`ConvertersDump`FormatUtilities`Private`outputUnit]; If[ !QuantityQ[System`ConvertersDump`FormatUtilities`Private`res] ||  !Internal`RealValuedNumericQ[QuantityMagnitude[System`ConvertersDump`FormatUtilities`Private`res]], Return[System`ConvertersDump`FormatUtilities`Private`tag]]; ]; If[MatchQ[System`ConvertersDump`FormatUtilities`Private`key, \"ApproximateDuration\" | \"Duration\" | \"ExactDurations\"], System`ConvertersDump`FormatUtilities`Private`res = Video`Utilities`QuantityDecompose[N[System`ConvertersDump`FormatUtilities`Private`res]]; ]; Return[System`ConvertersDump`FormatUtilities`Private`key -> System`ConvertersDump`FormatUtilities`Private`res]], Switch[System`ConvertersDump`FormatUtilities`Private`key, \"CreationTime\", If[StringMatchQ[System`ConvertersDump`FormatUtilities`Private`value, __~~\".\"~~__~~\"00Z\"], System`ConvertersDump`FormatUtilities`Private`tz = \"UTC\"; ]; System`ConvertersDump`FormatUtilities`Private`head = DateObject[#1, TimeZone -> System`ConvertersDump`FormatUtilities`Private`tz] & ; System`ConvertersDump`FormatUtilities`Private`testf = DateObjectQ; , \"ResourcePath\", System`ConvertersDump`FormatUtilities`Private`head = Replace[(System`ConvertersDump`FormatUtilities`Private`s_)?StringQ :> If[Audio`Utilities`IsURIString[System`ConvertersDump`FormatUtilities`Private`s], URL, File][System`ConvertersDump`FormatUtilities`Private`s]]; System`ConvertersDump`FormatUtilities`Private`testf = MatchQ[#1, _File | _URL | _CloudObject | None] & ; , \"Language\", System`ConvertersDump`FormatUtilities`Private`head = Interpreter[\"Language\"]; System`ConvertersDump`FormatUtilities`Private`testf = Internal`PossibleEntityQ; , \"Codec\" | \"VideoEncoding\" | \"AudioEncoding\" | \"SubtitleEncoding\" | \"Container\", System`ConvertersDump`FormatUtilities`Private`head = System`ConvertersDump`FormatUtilities`CanonicalizeCodecName; System`ConvertersDump`FormatUtilities`Private`testf = StringQ; ]; System`ConvertersDump`FormatUtilities`Private`res = System`ConvertersDump`FormatUtilities`Private`head[System`ConvertersDump`FormatUtilities`Private`value]; If[TrueQ[System`ConvertersDump`FormatUtilities`Private`testf[System`ConvertersDump`FormatUtilities`Private`res]], Return[System`ConvertersDump`FormatUtilities`Private`key -> System`ConvertersDump`FormatUtilities`Private`res], Return[System`ConvertersDump`FormatUtilities`Private`tag]]]]]\nSystem`ConvertersDump`FormatUtilities`PropertyValueToObject[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`PropertyValueToObject",
	"Developer`ProtectedMode":"ObjectType: Symbol\nUsage: Developer`ProtectedMode\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`ProtectedMode",
	"Developer`ProtectedModeBlockedQ":"None",
	"DataPaclets`ProtectInitialization":"ObjectType: Symbol\nUsage: DataPaclets`ProtectInitialization\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DataPaclets`ProtectInitialization[DataPaclets`CommonDump`expr_, DataPaclets`CommonDump`failexpr_] := CheckAbort[DataPaclets`CommonDump`expr, AbortProtect[DataPaclets`CommonDump`failexpr]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: DataPaclets`ProtectInitialization",
	"EquationalLogic`Prove":"ObjectType: Symbol\nUsage: EquationalLogic`Prove\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: EquationalLogic`Prove",
	"MarkovProcesses`PrunedMarkovProcess":"ObjectType: Symbol\nUsage: MarkovProcesses`PrunedMarkovProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: MarkovProcesses`PrunedMarkovProcess[HoldPattern[(DiscreteMarkovProcess[RandomProcesses`MarkovChainDump`p_, RandomProcesses`MarkovChainDump`sm_])?ProcessParameterQ], RandomProcesses`MarkovChainDump`statePartition:{__List}] := Module[{RandomProcesses`MarkovChainDump`nsm, RandomProcesses`MarkovChainDump`len = Length[RandomProcesses`MarkovChainDump`statePartition], RandomProcesses`MarkovChainDump`iind, RandomProcesses`MarkovChainDump`res, RandomProcesses`MarkovChainDump`np = RandomProcesses`MarkovChainDump`StateVector[RandomProcesses`MarkovChainDump`p, RandomProcesses`MarkovChainDump`sm]}, RandomProcesses`MarkovChainDump`nsm = Table[0, {RandomProcesses`MarkovChainDump`len}, {RandomProcesses`MarkovChainDump`len}]; Do[RandomProcesses`MarkovChainDump`iind = RandomProcesses`MarkovChainDump`statePartition[[RandomProcesses`MarkovChainDump`i]]; Do[RandomProcesses`MarkovChainDump`nsm[[RandomProcesses`MarkovChainDump`i,RandomProcesses`MarkovChainDump`j]] = RandomProcesses`MarkovChainDump`sm[[RandomProcesses`MarkovChainDump`iind,RandomProcesses`MarkovChainDump`statePartition[[RandomProcesses`MarkovChainDump`j]]]], {RandomProcesses`MarkovChainDump`j, RandomProcesses`MarkovChainDump`i, RandomProcesses`MarkovChainDump`len}], {RandomProcesses`MarkovChainDump`i, 1, RandomProcesses`MarkovChainDump`len}]; RandomProcesses`MarkovChainDump`nsm = ArrayFlatten[RandomProcesses`MarkovChainDump`nsm]; RandomProcesses`MarkovChainDump`np = RandomProcesses`MarkovChainDump`np[[Flatten[RandomProcesses`MarkovChainDump`statePartition]]]; RandomProcesses`MarkovChainDump`res = DiscreteMarkovProcess[RandomProcesses`MarkovChainDump`np, RandomProcesses`MarkovProcessUtilities`ToStochasticMatrix[RandomProcesses`MarkovChainDump`nsm]]; RandomProcesses`MarkovChainDump`res \/; ProcessParameterQ[RandomProcesses`MarkovChainDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MarkovProcesses`PrunedMarkovProcess",
	"Charting`PruneOptions":"ObjectType: Symbol\nUsage: Charting`PruneOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`PruneOptions[Charting`CommonDump`list_] := First \/@ Last[Reap[(Sow[#1, First[#1]] & ) \/@ Charting`CommonDump`list]]\nCharting`PruneOptions[Charting`CommonDump`list_, Charting`CommonDump`except_] := Complement[Charting`PruneOptions[Charting`CommonDump`list], Charting`CommonDump`except]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`PruneOptions",
	"Image`TransformsDump`Ps":"ObjectType: Symbol\nUsage: Image`TransformsDump`Ps\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`Ps",
	"SparseArray`PseudoDiameter":"ObjectType: Symbol\nUsage: SparseArray`PseudoDiameter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Aggressive -> False}\nAttributes: {}\nFullName: SparseArray`PseudoDiameter",
	"Developer`PseudoFunctionsSimplify":"ObjectType: Symbol\nUsage: Developer`PseudoFunctionsSimplify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Developer`PseudoFunctionsSimplify",
	"RandomProcesses`Library`PseudoLogLikelihood":"ObjectType: Symbol\nUsage: RandomProcesses`Library`PseudoLogLikelihood\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`PseudoLogLikelihood[RandomProcesses`Library`Dump`proc:BrownianBridgeProcess[RandomProcesses`Library`Dump`sigma_, {RandomProcesses`Library`Dump`start_, RandomProcesses`Library`Dump`a_}, {RandomProcesses`Library`Dump`end_, RandomProcesses`Library`Dump`b_}], RandomProcesses`Library`Dump`data_] := LogLikelihood[RandomProcesses`Library`Dump`proc, TemporalData`Utilities`TDDropTimes[RandomProcesses`Library`Dump`data, {RandomProcesses`Library`Dump`start, RandomProcesses`Library`Dump`end}]] \/. {Log -> Statistics`Library`superLog}\nRandomProcesses`Library`PseudoLogLikelihood[RandomProcesses`Library`Dump`proc:_WienerProcess | _PoissonProcess | _BinomialProcess | _OrnsteinUhlenbeckProcess | _GeometricBrownianMotionProcess | _FractionalBrownianMotionProcess | _BrownianBridgeProcess | _FractionalGaussianNoiseProcess, RandomProcesses`Library`Dump`data_] := LogLikelihood[RandomProcesses`Library`Dump`proc, TemporalData`Utilities`TDDropTimes[RandomProcesses`Library`Dump`data, 0]] \/. {Log -> Statistics`Library`superLog}\nRandomProcesses`Library`PseudoLogLikelihood[RandomProcesses`Library`Dump`proc_, RandomProcesses`Library`Dump`data_] := LogLikelihood[RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`data] \/. {Log -> Statistics`Library`superLog}\nRandomProcesses`Library`PseudoLogLikelihood[___] := -$MaxMachineNumber\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`PseudoLogLikelihood",
	"Graphics`Mesh`PSLG":"ObjectType: Symbol\nUsage: Graphics`Mesh`PSLG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PSLG",
	"Graphics`Mesh`PSLGHoles":"ObjectType: Symbol\nUsage: Graphics`Mesh`PSLGHoles\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PSLGHoles",
	"Graphics`Mesh`PSLGMarkers":"ObjectType: Symbol\nUsage: Graphics`Mesh`PSLGMarkers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`PSLGMarkers",
	"LinearAlgebra`Private`PSLQ1":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`PSLQ1\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`PSLQ1",
	"LinearAlgebra`Private`PSLQ2":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`PSLQ2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`PSLQ2",
	"System`VectorPlotsDump`PStreamDensityPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PStreamDensityPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, VectorScaling -> None, VectorAspectRatio -> Automatic}\nAttributes: {}\nFullName: System`VectorPlotsDump`PStreamDensityPlot",
	"System`VectorPlotsDump`PStreamPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PStreamPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic, VectorAspectRatio -> Automatic, VectorScaling -> None}\nAttributes: {}\nFullName: System`VectorPlotsDump`PStreamPlot",
	"Image`TransformsDump`Ps$":"ObjectType: Symbol\nUsage: Image`TransformsDump`Ps$\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Temporary}\nFullName: Image`TransformsDump`Ps$",
	"System`Private`PTest":"ObjectType: Symbol\nUsage: System`Private`PTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Private`PTest",
	"Algebra`Polynomial`PTimes":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PTimes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PTimes",
	"Algebra`Polynomial`PTimesConstant":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PTimesConstant\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PTimesConstant",
	"Cryptography`PublicKeyFormat":"ObjectType: Symbol\nUsage: Cryptography`PublicKeyFormat\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Cryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := Cryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, \"secp256k1\", \"Compressed\" -> False]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Compressed\" -> False] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := StringJoin[\"04\", {(IntegerString[#1, 16, 64] & ) \/@ Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey}]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Compressed\" -> True] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := If[EvenQ[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey[[2]]], StringJoin[\"02\", IntegerString[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey[[1]], 16, 64]], StringJoin[\"03\", IntegerString[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey[[1]], 16, 64]]]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Compressed\" -> False, \"ByteArray\"] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := ByteArray[Flatten[Prepend[IntegerDigits[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 256, 32], 4]]]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Compressed\" -> True, \"ByteArray\"] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := If[EvenQ[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey[[2]]], ByteArray[Flatten[Prepend[IntegerDigits[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey[[1]], 256, 32], 2]]], ByteArray[Flatten[Prepend[IntegerDigits[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey[[1]], 256, 32], 3]]]]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Coordinates\"] := Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, \"Coordinates\"] := Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List] := Cryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, \"secp256k1\", \"Compressed\" -> False]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_String, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Coordinates\"] := Catch[Module[{Cryptography`EllipticCurveKeyObjects`PackagePrivate`a, Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p, Cryptography`EllipticCurveKeyObjects`PackagePrivate`x, Cryptography`EllipticCurveKeyObjects`PackagePrivate`y}, Which[StringLength[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey] == 130 && StringTake[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 2] == \"04\", Return[(FromDigits[#1, 16] & ) \/@ StringTake[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, {{3, 66}, {67, 130}}]], StringLength[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey] == 66 && (StringTake[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 2] == \"03\" || StringTake[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 2] == \"02\"), If[MemberQ[Cryptography`$Cryptocurrencies, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec], {Cryptography`EllipticCurveKeyObjects`PackagePrivate`a, Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p} = Lookup[Cryptography`$EllipticCurvesParameters[Cryptography`PackageScope`$CurrenciesEC[Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec]], {\"a\", \"b\", \"p\"}], {Cryptography`EllipticCurveKeyObjects`PackagePrivate`a, Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p} = Lookup[Cryptography`$EllipticCurvesParameters[Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec], {\"a\", \"b\", \"p\"}]]; Cryptography`EllipticCurveKeyObjects`PackagePrivate`x = FromDigits[StringDrop[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 2], 16]; Cryptography`EllipticCurveKeyObjects`PackagePrivate`y = PowerMod[PowerMod[Cryptography`EllipticCurveKeyObjects`PackagePrivate`x, 3, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p] + Cryptography`EllipticCurveKeyObjects`PackagePrivate`a*Cryptography`EllipticCurveKeyObjects`PackagePrivate`x + Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, 1\/2, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p]; If[(StringTake[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 2] == \"03\" && EvenQ[Cryptography`EllipticCurveKeyObjects`PackagePrivate`y]) || (StringTake[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, 2] == \"02\" && OddQ[Cryptography`EllipticCurveKeyObjects`PackagePrivate`y]), Cryptography`EllipticCurveKeyObjects`PackagePrivate`y = Cryptography`EllipticCurveKeyObjects`PackagePrivate`p - Cryptography`EllipticCurveKeyObjects`PackagePrivate`y]; Return[{Cryptography`EllipticCurveKeyObjects`PackagePrivate`x, Cryptography`EllipticCurveKeyObjects`PackagePrivate`y}], True, Message[Cryptography`PublicKeyFormat::invpubkey, Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey]; Throw[$Failed]]]]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_ByteArray, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"Coordinates\"] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := Catch[Module[{Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey, Cryptography`EllipticCurveKeyObjects`PackagePrivate`a, Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p, Cryptography`EllipticCurveKeyObjects`PackagePrivate`x, Cryptography`EllipticCurveKeyObjects`PackagePrivate`y}, Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey = Developer`FromByteArray[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey]; Which[Length[Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey] == 65 && Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[1]] == 4, Return[(FromDigits[#1, 256] & ) \/@ {Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[2 ;; 33]], Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[34 ;; All]]}], Length[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey] == 33 && (Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[1]] == 3 || Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[1]] == 2), If[MemberQ[Cryptography`$Cryptocurrencies, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec], {Cryptography`EllipticCurveKeyObjects`PackagePrivate`a, Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p} = Lookup[Cryptography`$EllipticCurvesParameters[Cryptography`PackageScope`$CurrenciesEC[Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec]], {\"a\", \"b\", \"p\"}], {Cryptography`EllipticCurveKeyObjects`PackagePrivate`a, Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p} = Lookup[Cryptography`$EllipticCurvesParameters[Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec], {\"a\", \"b\", \"p\"}]]; Cryptography`EllipticCurveKeyObjects`PackagePrivate`x = FromDigits[Drop[Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey, 1], 256]; Cryptography`EllipticCurveKeyObjects`PackagePrivate`y = PowerMod[PowerMod[Cryptography`EllipticCurveKeyObjects`PackagePrivate`x, 3, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p] + Cryptography`EllipticCurveKeyObjects`PackagePrivate`a*Cryptography`EllipticCurveKeyObjects`PackagePrivate`x + Cryptography`EllipticCurveKeyObjects`PackagePrivate`b, 1\/2, Cryptography`EllipticCurveKeyObjects`PackagePrivate`p]; If[(Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[1]] == 3 && EvenQ[Cryptography`EllipticCurveKeyObjects`PackagePrivate`y]) || (Cryptography`EllipticCurveKeyObjects`PackagePrivate`listpubkey[[1]] == 2 && OddQ[Cryptography`EllipticCurveKeyObjects`PackagePrivate`y]), Cryptography`EllipticCurveKeyObjects`PackagePrivate`y = Cryptography`EllipticCurveKeyObjects`PackagePrivate`p - Cryptography`EllipticCurveKeyObjects`PackagePrivate`y]; Return[{Cryptography`EllipticCurveKeyObjects`PackagePrivate`x, Cryptography`EllipticCurveKeyObjects`PackagePrivate`y}], True, Message[Cryptography`PublicKeyFormat::invpubkey, Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey]; Throw[$Failed]]]]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"ByteArray\", \"Compressed\" -> False] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := Cryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec, \"Compressed\" -> False, \"ByteArray\"]\nCryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey_List, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec_, \"ByteArray\", \"Compressed\" -> True] \/; MemberQ[Join[{\"secp256k1\"}, Cryptography`$Cryptocurrencies], Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec] := Cryptography`PublicKeyFormat[Cryptography`EllipticCurveKeyObjects`PackagePrivate`pubkey, Cryptography`EllipticCurveKeyObjects`PackagePrivate`ec, \"Compressed\" -> True, \"ByteArray\"]\nCryptography`PublicKeyFormat[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Cryptography`PublicKeyFormat",
	"BoxForm`PublicNames":"ObjectType: Symbol\nUsage: BoxForm`PublicNames\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`PublicNames",
	"PacletManager`Paclet`Private`Publisher":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`Publisher\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`Publisher",
	"SymbolicTensors`PullBack":"ObjectType: Symbol\nUsage: SymbolicTensors`PullBack\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`PullBack[SymbolicTensors`SymbolicTensorsDump`tensor_SymbolicTensors`Tensor, SymbolicTensors`SymbolicTensorsDump`dtvars_, SymbolicTensors`SymbolicTensorsDump`map_, OptionsPattern[]] := Module[{SymbolicTensors`SymbolicTensorsDump`result, SymbolicTensors`SymbolicTensorsDump`maplist}, With[{SymbolicTensors`SymbolicTensorsDump`jac = OptionValue[SymbolicTensors`SymbolicTensorsDump`JacobianMatrix], SymbolicTensors`SymbolicTensorsDump`ijac = OptionValue[SymbolicTensors`SymbolicTensorsDump`InverseJacobianMatrix], SymbolicTensors`SymbolicTensorsDump`simp = OptionValue[SymbolicTensors`SymbolicTensorsDump`SimplificationFunction]}, SymbolicTensors`SymbolicTensorsDump`maplist = SymbolicTensors`SymbolicTensorsDump`ParseForwardMap[SymbolicTensors`SymbolicTensorsDump`dtvars, SymbolicTensors`SymbolicTensorsDump`map, {SymbolicTensors`SymbolicTensorsDump`jac, SymbolicTensors`SymbolicTensorsDump`ijac}, SymbolicTensors`SymbolicTensorsDump`simp, SymbolicTensors`PullBack]; SymbolicTensors`SymbolicTensorsDump`result = SymbolicTensors`SymbolicTensorsDump`iPullBack[SymbolicTensors`SymbolicTensorsDump`tensor, SymbolicTensors`SymbolicTensorsDump`maplist, SymbolicTensors`SymbolicTensorsDump`simp, SymbolicTensors`PullBack]]; SymbolicTensors`SymbolicTensorsDump`result \/; SymbolicTensors`SymbolicTensorsDump`result =!= $Failed]\nSymbolicTensors`PullBack[(SymbolicTensors`SymbolicTensorsDump`scalar_)?SymbolicTensors`SymbolicTensorsDump`DSQ, SymbolicTensors`SymbolicTensorsDump`dtvars_, SymbolicTensors`SymbolicTensorsDump`map_, OptionsPattern[]] := Module[{SymbolicTensors`SymbolicTensorsDump`result, SymbolicTensors`SymbolicTensorsDump`maplist}, With[{SymbolicTensors`SymbolicTensorsDump`simp = OptionValue[SymbolicTensors`SymbolicTensorsDump`SimplificationFunction]}, SymbolicTensors`SymbolicTensorsDump`maplist = SymbolicTensors`SymbolicTensorsDump`ParseForwardMap[SymbolicTensors`SymbolicTensorsDump`dtvars, SymbolicTensors`SymbolicTensorsDump`map, {Automatic, Automatic}, SymbolicTensors`SymbolicTensorsDump`simp, SymbolicTensors`PullBack]; SymbolicTensors`SymbolicTensorsDump`result = SymbolicTensors`SymbolicTensorsDump`PullScalar[SymbolicTensors`SymbolicTensorsDump`scalar, SymbolicTensors`SymbolicTensorsDump`maplist, SymbolicTensors`SymbolicTensorsDump`simp, SymbolicTensors`PullBack]]; SymbolicTensors`SymbolicTensorsDump`result \/; SymbolicTensors`SymbolicTensorsDump`result =!= $Failed]\nSymbolicTensors`PullBack[SymbolicTensors`SymbolicTensorsDump`expr_TensorProduct, SymbolicTensors`SymbolicTensorsDump`args__] := (SymbolicTensors`PullBack[#1, SymbolicTensors`SymbolicTensorsDump`args] & ) \/@ SymbolicTensors`SymbolicTensorsDump`expr\nSymbolicTensors`PullBack[SymbolicTensors`SymbolicTensorsDump`expr_Plus, SymbolicTensors`SymbolicTensorsDump`args__] := (SymbolicTensors`PullBack[#1, SymbolicTensors`SymbolicTensorsDump`args] & ) \/@ SymbolicTensors`SymbolicTensorsDump`expr\nSymbolicTensors`PullBack[SymbolicTensors`SymbolicTensorsDump`expr_Times, SymbolicTensors`SymbolicTensorsDump`args__] := (SymbolicTensors`PullBack[#1, SymbolicTensors`SymbolicTensorsDump`args] & ) \/@ SymbolicTensors`SymbolicTensorsDump`expr\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {SymbolicTensors`SymbolicTensorsDump`JacobianMatrix -> Automatic, SymbolicTensors`SymbolicTensorsDump`InverseJacobianMatrix -> Automatic, SymbolicTensors`SymbolicTensorsDump`SimplificationFunction -> Together}\nAttributes: {}\nFullName: SymbolicTensors`PullBack",
	"Statistics`SurvivalAnalysisTools`PurelyLeftCensoredQ":"ObjectType: Symbol\nUsage: Statistics`SurvivalAnalysisTools`PurelyLeftCensoredQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`SurvivalAnalysisTools`PurelyLeftCensoredQ[Statistics`SurvivalAnalysisTools`SurvivalData[{Statistics`SurvivalAnalysisTools`Dump`e_List, Statistics`SurvivalAnalysisTools`Dump`cnt_List, Statistics`SurvivalAnalysisTools`Dump`w_, Statistics`SurvivalAnalysisTools`Dump`obs_, Statistics`SurvivalAnalysisTools`Dump`n_}, Statistics`SurvivalAnalysisTools`Dump`t_, Statistics`SurvivalAnalysisTools`Dump`tr_, \"Double\" | \"CurrentStatus\"]] := Block[{Statistics`SurvivalAnalysisTools`Dump`temp}, Statistics`SurvivalAnalysisTools`Dump`temp = DeleteCases[Statistics`SurvivalAnalysisTools`Dump`temp, {Statistics`SurvivalAnalysisTools`Dump`x_, Statistics`SurvivalAnalysisTools`Dump`x_}]; If[Statistics`SurvivalAnalysisTools`Dump`temp === {}, False, Statistics`SurvivalAnalysisTools`Dump`temp = DeleteCases[Statistics`SurvivalAnalysisTools`Dump`temp, {1, _}]; Statistics`SurvivalAnalysisTools`Dump`temp === {}]]\nStatistics`SurvivalAnalysisTools`PurelyLeftCensoredQ[Statistics`SurvivalAnalysisTools`SurvivalData[Statistics`SurvivalAnalysisTools`Dump`e_, Statistics`SurvivalAnalysisTools`Dump`t_, Statistics`SurvivalAnalysisTools`Dump`tr_, Statistics`SurvivalAnalysisTools`Dump`type_]] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`SurvivalAnalysisTools`PurelyLeftCensoredQ",
	"Integrate`PurePlus":"ObjectType: Symbol\nUsage: Integrate`PurePlus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`PurePlus",
	"Integrate`PurePower":"ObjectType: Symbol\nUsage: Integrate`PurePower\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`PurePower",
	"Integrate`PureTimes":"ObjectType: Symbol\nUsage: Integrate`PureTimes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`PureTimes",
	"QuantityUnits`Private`PureUnitiesQ":"ObjectType: Symbol\nUsage: QuantityUnits`Private`PureUnitiesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityUnits`Private`PureUnitiesQ[\"PureUnities\"] = True\nQuantityUnits`Private`PureUnitiesQ[\"DimensionlessUnit\"] = True\nQuantityUnits`Private`PureUnitiesQ[\"DimensionlessUnits\"] = True\nQuantityUnits`Private`PureUnitiesQ[___] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityUnits`Private`PureUnitiesQ",
	"SymbolicTensors`PushForward":"ObjectType: Symbol\nUsage: SymbolicTensors`PushForward\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`PushForward[SymbolicTensors`SymbolicTensorsDump`tensor_SymbolicTensors`Tensor, SymbolicTensors`SymbolicTensorsDump`dtvars_, SymbolicTensors`SymbolicTensorsDump`map_, OptionsPattern[]] := Module[{SymbolicTensors`SymbolicTensorsDump`result, SymbolicTensors`SymbolicTensorsDump`maplist}, With[{SymbolicTensors`SymbolicTensorsDump`jac = OptionValue[SymbolicTensors`SymbolicTensorsDump`JacobianMatrix], SymbolicTensors`SymbolicTensorsDump`ijac = OptionValue[SymbolicTensors`SymbolicTensorsDump`InverseJacobianMatrix], SymbolicTensors`SymbolicTensorsDump`simp = OptionValue[SymbolicTensors`SymbolicTensorsDump`SimplificationFunction]}, SymbolicTensors`SymbolicTensorsDump`maplist = SymbolicTensors`SymbolicTensorsDump`ParseForwardMap[SymbolicTensors`SymbolicTensorsDump`dtvars, SymbolicTensors`SymbolicTensorsDump`map, {SymbolicTensors`SymbolicTensorsDump`jac, SymbolicTensors`SymbolicTensorsDump`ijac}, SymbolicTensors`SymbolicTensorsDump`simp, SymbolicTensors`PushForward]; SymbolicTensors`SymbolicTensorsDump`result = SymbolicTensors`SymbolicTensorsDump`iPushForward[SymbolicTensors`SymbolicTensorsDump`tensor, SymbolicTensors`SymbolicTensorsDump`maplist, First[SymbolicTensors`SymbolicTensorsDump`dtvars], SymbolicTensors`SymbolicTensorsDump`simp]]; SymbolicTensors`SymbolicTensorsDump`result \/; SymbolicTensors`SymbolicTensorsDump`result =!= $Failed]\nSymbolicTensors`PushForward[SymbolicTensors`SymbolicTensorsDump`tensor_SymbolicTensors`Tensor, SymbolicTensors`SymbolicTensorsDump`dtvars_, SymbolicTensors`SymbolicTensorsDump`map_, SymbolicTensors`SymbolicTensorsDump`point_List, OptionsPattern[]] := Module[{SymbolicTensors`SymbolicTensorsDump`result, SymbolicTensors`SymbolicTensorsDump`maplist}, With[{SymbolicTensors`SymbolicTensorsDump`jac = OptionValue[SymbolicTensors`SymbolicTensorsDump`JacobianMatrix], SymbolicTensors`SymbolicTensorsDump`ijac = OptionValue[SymbolicTensors`SymbolicTensorsDump`InverseJacobianMatrix], SymbolicTensors`SymbolicTensorsDump`simp = OptionValue[SymbolicTensors`SymbolicTensorsDump`SimplificationFunction]}, SymbolicTensors`SymbolicTensorsDump`maplist = SymbolicTensors`SymbolicTensorsDump`ParseForwardMap[SymbolicTensors`SymbolicTensorsDump`dtvars, SymbolicTensors`SymbolicTensorsDump`map, {SymbolicTensors`SymbolicTensorsDump`jac, SymbolicTensors`SymbolicTensorsDump`ijac}, SymbolicTensors`SymbolicTensorsDump`simp, SymbolicTensors`PushForward]; SymbolicTensors`SymbolicTensorsDump`result = SymbolicTensors`SymbolicTensorsDump`iPushForward[SymbolicTensors`SymbolicTensorsDump`tensor, SymbolicTensors`SymbolicTensorsDump`maplist, SymbolicTensors`SymbolicTensorsDump`point, SymbolicTensors`SymbolicTensorsDump`simp]]; SymbolicTensors`SymbolicTensorsDump`result \/; SymbolicTensors`SymbolicTensorsDump`result =!= $Failed]\nSymbolicTensors`PushForward[(SymbolicTensors`SymbolicTensorsDump`expr_)?SymbolicTensors`SymbolicTensorsDump`DSQ, SymbolicTensors`SymbolicTensorsDump`args__] := SymbolicTensors`SymbolicTensorsDump`expr\nSymbolicTensors`PushForward[SymbolicTensors`SymbolicTensorsDump`expr_TensorProduct, SymbolicTensors`SymbolicTensorsDump`args__] := (SymbolicTensors`PushForward[#1, SymbolicTensors`SymbolicTensorsDump`args] & ) \/@ SymbolicTensors`SymbolicTensorsDump`expr\nSymbolicTensors`PushForward[SymbolicTensors`SymbolicTensorsDump`expr_Plus, SymbolicTensors`SymbolicTensorsDump`args__] := (SymbolicTensors`PushForward[#1, SymbolicTensors`SymbolicTensorsDump`args] & ) \/@ SymbolicTensors`SymbolicTensorsDump`expr\nSymbolicTensors`PushForward[SymbolicTensors`SymbolicTensorsDump`expr_Times, SymbolicTensors`SymbolicTensorsDump`args__] := (SymbolicTensors`PushForward[#1, SymbolicTensors`SymbolicTensorsDump`args] & ) \/@ SymbolicTensors`SymbolicTensorsDump`expr\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {SymbolicTensors`SymbolicTensorsDump`JacobianMatrix -> Automatic, SymbolicTensors`SymbolicTensorsDump`InverseJacobianMatrix -> Automatic, SymbolicTensors`SymbolicTensorsDump`SimplificationFunction -> Together}\nAttributes: {}\nFullName: SymbolicTensors`PushForward",
	"MLFS`Put":"ObjectType: Symbol\nUsage: MLFS`Put\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MLFS`Put",
	"MLFS`PutAppend":"ObjectType: Symbol\nUsage: MLFS`PutAppend\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MLFS`PutAppend",
	"Internal`PutInformation":"ObjectType: Symbol\nUsage: Internal`PutInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PutInformation[{System`Dump`tag_String, {System`Dump`name_String, System`Dump`cont_String}}, (System`Dump`opts___)?OptionQ] := Module[{System`Dump`lf = TrueQ[LongForm \/. Flatten[{System`Dump`opts, LongForm -> False}]]}, System`Dump`outputinfo[ButtonNotebook[], System`Dump`tag, System`Dump`doinformation[{System`Dump`name, System`Dump`cont}, System`Dump`tag, System`Dump`lf, \"FormattedUsage\" \/. System`Dump`$extendedmessageoptions, \"FormattedDefinition\" \/. System`Dump`$extendedmessageoptions]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PutInformation",
	"Internal`PutNewInformation":"ObjectType: Symbol\nUsage: Internal`PutNewInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`PutNewInformation[{System`Dump`tag_String, {System`Dump`name_String, System`Dump`cont_String}}, (System`Dump`opts___)?OptionQ] := Block[{System`Dump`$useNewInfo = True}, Module[{System`Dump`lf = TrueQ[LongForm \/. Flatten[{System`Dump`opts, LongForm -> False}]]}, System`Dump`outputinfo[ButtonNotebook[], System`Dump`tag, System`Dump`doinformation[{System`Dump`name, System`Dump`cont}, System`Dump`tag, System`Dump`lf, \"FormattedUsage\" \/. System`Dump`$extendedmessageoptions, \"FormattedDefinition\" \/. System`Dump`$extendedmessageoptions]]]]\nInternal`PutNewInformation[{System`Dump`tag_String, {System`Dump`name_String, System`Dump`cont_String}, System`Dump`lf_}, ___] := Block[{System`Dump`$useNewInfo = True}, System`Dump`outputinfo[ButtonNotebook[], System`Dump`tag, System`Dump`doinformation[{System`Dump`name, System`Dump`cont}, System`Dump`tag, System`Dump`lf, \"FormattedUsage\" \/. System`Dump`$extendedmessageoptions, \"FormattedDefinition\" \/. System`Dump`$extendedmessageoptions]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`PutNewInformation",
	"Statistics`Library`PValueClip":"ObjectType: Symbol\nUsage: Statistics`Library`PValueClip\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`p_] := Statistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`p, Precision[Statistics`HypothesisTestingUtilitiesDump`p]]\nStatistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`p_Real, Statistics`HypothesisTestingUtilitiesDump`prec_] := Clip[N[Statistics`HypothesisTestingUtilitiesDump`p, Statistics`HypothesisTestingUtilitiesDump`prec], {0, 1}]\nStatistics`Library`PValueClip[(Statistics`HypothesisTestingUtilitiesDump`p_)?NumericQ, Statistics`HypothesisTestingUtilitiesDump`prec_] := Block[{Statistics`HypothesisTestingUtilitiesDump`tol = 10^(-4)}, If[TrueQ[Im[Statistics`HypothesisTestingUtilitiesDump`p] < Statistics`HypothesisTestingUtilitiesDump`tol], Clip[Re[N[Statistics`HypothesisTestingUtilitiesDump`p, Statistics`HypothesisTestingUtilitiesDump`prec]], {0, 1}], N[Statistics`HypothesisTestingUtilitiesDump`p, Statistics`HypothesisTestingUtilitiesDump`prec]]]\nStatistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`p_Missing, Statistics`HypothesisTestingUtilitiesDump`prec_] := Statistics`HypothesisTestingUtilitiesDump`p\nStatistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`p_List, Statistics`HypothesisTestingUtilitiesDump`prec_] := (Statistics`Library`PValueClip[#1, Statistics`HypothesisTestingUtilitiesDump`prec] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`p\nStatistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`p_, _] := Indeterminate\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`PValueClip",
	"Algebra`Polynomial`PVector":"ObjectType: Symbol\nUsage: Algebra`Polynomial`PVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`Polynomial`PVector",
	"System`VectorPlotsDump`PVectorDensityPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PVectorDensityPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic, VectorScaling -> None, VectorAspectRatio -> Automatic}\nAttributes: {}\nFullName: System`VectorPlotsDump`PVectorDensityPlot",
	"System`VectorPlotsDump`PVectorPlot":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PVectorPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorMarkers -> Automatic, StreamMarkers -> Automatic, PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, VectorAspectRatio -> Automatic, VectorScaling -> None, RegionBoundaryStyle -> Automatic, RegionFillingStyle -> Automatic}\nAttributes: {}\nFullName: System`VectorPlotsDump`PVectorPlot",
	"System`VectorPlotsDump`PVectorPlot3D":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`PVectorPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PlotLegends -> None, TargetUnits -> Automatic, PlotTheme :> $PlotTheme, VectorScaling -> None, RegionBoundaryStyle -> Automatic, VectorAspectRatio -> Automatic, VectorMarkers -> Automatic}\nAttributes: {}\nFullName: System`VectorPlotsDump`PVectorPlot3D",
	"Simplify`PWCOND":"ObjectType: Symbol\nUsage: Simplify`PWCOND\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWCOND",
	"Region`PWParametrization":"ObjectType: Symbol\nUsage: Region`PWParametrization\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`PWParametrization",
	"Simplify`PWPlotCases":"ObjectType: Symbol\nUsage: Simplify`PWPlotCases\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PWPlotCases[PiecewiseDump`f_, PiecewiseDump`lims__] := Module[{PiecewiseDump`asm, PiecewiseDump`pw, PiecewiseDump`conds, PiecewiseDump`fs, PiecewiseDump`vars, PiecewiseDump`bds}, PiecewiseDump`vars = First \/@ {PiecewiseDump`lims}; PiecewiseDump`bds = (Drop[#1, 1] & ) \/@ {PiecewiseDump`lims}; PiecewiseDump`bds = Sort \/@ PiecewiseDump`bds; PiecewiseDump`asm = And @@ MapThread[#2[[1]] < #1 < #2[[2]] & , {PiecewiseDump`vars, PiecewiseDump`bds}]; PiecewiseDump`pw = PiecewiseExpand[PiecewiseDump`f \/. If[PiecewiseDump`x_, PiecewiseDump`y_] :> If[PiecewiseDump`x, PiecewiseDump`y, Indeterminate], Assumptions -> PiecewiseDump`asm, Method -> {\"BooleanResult\" -> False, \"OrderlessConditions\" -> True, \"RefineConditions\" -> False}]; If[Head[PiecewiseDump`pw] =!= Piecewise, Return[{PiecewiseDump`pw, {PiecewiseDump`lims}}]]; {PiecewiseDump`conds, PiecewiseDump`fs} = Internal`FromPiecewise[PiecewiseDump`pw, True]; PiecewiseDump`conds = PiecewiseDump`conds \/. PiecewiseDump`$RemoveMeasureZeroRules[PiecewiseDump`vars]; Join @@ (PiecewiseDump`PWPlotBounds[#1[[1]], #1[[2]] && PiecewiseDump`asm, PiecewiseDump`vars] & ) \/@ Transpose[{PiecewiseDump`fs, PiecewiseDump`conds}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWPlotCases",
	"Simplify`PWPresentQ":"ObjectType: Symbol\nUsage: Simplify`PWPresentQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWPresentQ",
	"Control`Utilities`Pwr":"ObjectType: Symbol\nUsage: Control`Utilities`Pwr\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: Control`Utilities`Pwr",
	"Simplify`PWReplaceProgrammatic":"ObjectType: Symbol\nUsage: Simplify`PWReplaceProgrammatic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWReplaceProgrammatic",
	"Control`Utilities`PwrMat2tf":"ObjectType: Symbol\nUsage: Control`Utilities`PwrMat2tf\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`Utilities`PwrMat2tf[Control`CommonDump`m_, Control`CommonDump`var_, Control`CommonDump`varopts___] := Control`CommonDump`numdencheck[Control`CommonDump`fromPwr[TransferFunctionModel[Control`Utilities`preserveDelay[Control`CommonDump`numerdenom0, {Control`CommonDump`m, Control`CommonDump`var}, Control`CommonDump`var], Control`CommonDump`var, Control`CommonDump`varopts]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`Utilities`PwrMat2tf",
	"Simplify`PWThreadLoop":"ObjectType: Symbol\nUsage: Simplify`PWThreadLoop\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PWThreadLoop[{{PiecewiseDump`head_, PiecewiseDump`f_, PiecewiseDump`opts_, PiecewiseDump`asm_, K_, PiecewiseDump`glasm_, PiecewiseDump`bgdasm_}, {PiecewiseDump`cnd_, PiecewiseDump`intp_, PiecewiseDump`lims_}}] := Quiet[Block[{$Assumptions = PiecewiseDump`glasm, PiecewiseDump`$BackgroundAssumptions = PiecewiseDump`bgdasm, PiecewiseDump`$ParallelPWThread = False}, Module[{PiecewiseDump`dis = True, PiecewiseDump`uis = False, PiecewiseDump`cond = PiecewiseDump`cnd, PiecewiseDump`tmp, PiecewiseDump`ans, PiecewiseDump`a, PiecewiseDump`b, PiecewiseDump`c, PiecewiseDump`m}, If[PiecewiseDump`FalseCondQ[PiecewiseDump`cond, PiecewiseDump`asm], Return[{{}, PiecewiseDump`dis, PiecewiseDump`uis}]]; PiecewiseDump`ans = Internal`Bag[]; PiecewiseDump`tmp = PiecewiseDump`asm && PiecewiseDump`cond && Element[First \/@ PiecewiseDump`intp, Integers] && And @@ (#1[[2]] <= #1[[1]] <= #1[[3]] & ) \/@ PiecewiseDump`intp; PiecewiseDump`a = PiecewiseDump`fixIf[PiecewiseDump`pwthread[PiecewiseDump`head, PiecewiseDump`f, PiecewiseDump`lims, PiecewiseDump`opts, PiecewiseDump`tmp]]; If[MemberQ[{If, ConditionalExpression}, Head[PiecewiseDump`a]] && Length[PiecewiseDump`a] === 3 && PiecewiseDump`a[[3,0]] === PiecewiseDump`head && (Assumptions \/. Select[(Apply[List, Extract[PiecewiseDump`a, 3, Hold], {1}])[[1]], OptionQ]) === False, PiecewiseDump`a = PiecewiseDump`a[[2]]]; PiecewiseDump`m = 0; While[MemberQ[{If, ConditionalExpression}, Head[PiecewiseDump`a]], If[PiecewiseDump`m >= 3 || Length[PiecewiseDump`a] != 3, Return[$Failed, Module]]; PiecewiseDump`dis = False; {PiecewiseDump`b, PiecewiseDump`c} = If[Head[PiecewiseDump`a] === If, {PiecewiseDump`a[[2]], PiecewiseDump`a[[1]]}, {PiecewiseDump`a[[1]], PiecewiseDump`a[[2]]}]; If[ !FreeQ[PiecewiseDump`c, K], Return[$Failed, Module]]; If[PiecewiseDump`intp =!= {}, If[ !FreeQ[PiecewiseDump`intp, DirectedInfinity], PiecewiseDump`uis = True]; PiecewiseDump`b = If[PiecewiseDump`head === Product, Product, Sum][Evaluate[PiecewiseDump`b], Evaluate[Sequence @@ PiecewiseDump`intp]]]; Internal`StuffBag[PiecewiseDump`ans, {Simplify`SimplifyInequalities[PiecewiseDump`cond && PiecewiseDump`c], PiecewiseDump`b}]; PiecewiseDump`cond = Simplify`SimplifyInequalities[PiecewiseDump`cond &&  !PiecewiseDump`c]; If[PiecewiseDump`FalseCondQ[PiecewiseDump`cond, PiecewiseDump`asm], PiecewiseDump`cond = False, PiecewiseDump`a = PiecewiseDump`a[[3]]]; PiecewiseDump`m++]; If[PiecewiseDump`cond =!= False, If[Internal`LiterallyOccurringQ[PiecewiseDump`a, {If, ConditionalExpression}], Return[$Failed, Module]]; If[PiecewiseDump`intp =!= {}, If[ !FreeQ[PiecewiseDump`intp, DirectedInfinity], PiecewiseDump`uis = True]; PiecewiseDump`a = If[PiecewiseDump`head === Product, Product, Sum][Evaluate[PiecewiseDump`a], Evaluate[Sequence @@ PiecewiseDump`intp]]]; Internal`StuffBag[PiecewiseDump`ans, {PiecewiseDump`cond, PiecewiseDump`a}]]; PiecewiseDump`ans = Internal`BagPart[PiecewiseDump`ans, All]; {PiecewiseDump`ans, PiecewiseDump`dis, PiecewiseDump`uis}]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWThreadLoop",
	"Simplify`PWToIntervals":"ObjectType: Symbol\nUsage: Simplify`PWToIntervals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PWToIntervals[PiecewiseDump`pw_, PiecewiseDump`x_, PiecewiseDump`real_] := Module[{PiecewiseDump`conds, PiecewiseDump`vals, PiecewiseDump`pts, PiecewiseDump`reds, PiecewiseDump`tmp, PiecewiseDump`i, PiecewiseDump`k, PiecewiseDump`l, PiecewiseDump`m, PiecewiseDump`a, PiecewiseDump`pp, PiecewiseDump`vv, PiecewiseDump`X, PiecewiseDump`R}, If[Internal`PrecAccur[PiecewiseDump`pw] < Infinity, PiecewiseDump`tmp = Reduce`MakeExact[{PiecewiseDump`pw, PiecewiseDump`x}, PiecewiseDump`x, PiecewiseDump`X, PiecewiseDump`R]; If[Internal`PrecAccur[PiecewiseDump`tmp[[1]]] < Infinity, Return[$Failed]]; PiecewiseDump`a = Simplify`PWToIntervals[PiecewiseDump`tmp[[1,1]], PiecewiseDump`tmp[[1,2]], PiecewiseDump`real]; If[ !ListQ[PiecewiseDump`a], Return[$Failed]]; {PiecewiseDump`pp, PiecewiseDump`vv} = PiecewiseDump`a; If[PiecewiseDump`tmp[[2]] < Infinity, PiecewiseDump`vv = Reduce`MakeInexact[PiecewiseDump`vv, PiecewiseDump`tmp[[2]], PiecewiseDump`tmp[[1,2]]]]; Return[{PiecewiseDump`pp, PiecewiseDump`vv} \/. PiecewiseDump`X -> PiecewiseDump`R]]; {PiecewiseDump`conds, PiecewiseDump`vals} = Internal`FromPiecewise[PiecewiseDump`pw]; If[ !FreeQ[PiecewiseDump`conds, Element[PiecewiseDump`a_ \/;  !FreeQ[PiecewiseDump`a, PiecewiseDump`x], Rationals | Algebraics]], Return[{{}, {$Failed}}]]; If[Complement[PiecewiseDump`CondVars[PiecewiseDump`conds], {PiecewiseDump`x}] =!= {}, Return[$Failed]]; If[ !PiecewiseDump`real && PiecewiseDump`ineqvars[PiecewiseDump`conds] =!= {PiecewiseDump`x}, Return[$Failed]]; PiecewiseDump`reds = PiecewiseDump`conds; PiecewiseDump`pts = {}; Do[PiecewiseDump`tmp = Reduce[PiecewiseDump`conds[[PiecewiseDump`i]] && Element[PiecewiseDump`x, Reals], PiecewiseDump`x]; If[Head[PiecewiseDump`tmp] === Reduce, Return[$Failed, Module]]; PiecewiseDump`reds[[PiecewiseDump`i]] = PiecewiseDump`tmp; PiecewiseDump`tmp = PiecewiseDump`endpts[PiecewiseDump`tmp, PiecewiseDump`x]; If[MemberQ[PiecewiseDump`tmp, $Failed], Return[$Failed, Module]]; PiecewiseDump`pts = Join[PiecewiseDump`pts, PiecewiseDump`tmp], {PiecewiseDump`i, Length[PiecewiseDump`conds] - 1}]; PiecewiseDump`reds[[Length[PiecewiseDump`conds]]] = True; If[PiecewiseDump`pts === {}, PiecewiseDump`k = 1; While[ !Reduce`SolutionQ[PiecewiseDump`reds[[PiecewiseDump`k]], {PiecewiseDump`x -> 0}], PiecewiseDump`k++]; Return[{{}, {PiecewiseDump`vals[[PiecewiseDump`k]]}}]]; PiecewiseDump`pts = Catch[Sort[PiecewiseDump`pts, PiecewiseDump`norder]]; If[PiecewiseDump`pts === $Failed, Return[$Failed]]; PiecewiseDump`pp = Internal`Bag[]; PiecewiseDump`vv = Internal`Bag[]; PiecewiseDump`a = PiecewiseDump`pts[[1]]; PiecewiseDump`k = 1; While[ !Reduce`SolutionQ[PiecewiseDump`reds[[PiecewiseDump`k]], {PiecewiseDump`x -> PiecewiseDump`a - 1}], PiecewiseDump`k++]; PiecewiseDump`n = Length[PiecewiseDump`pts]; Do[If[PiecewiseDump`i == PiecewiseDump`n ||  !PossibleZeroQ[PiecewiseDump`pts[[PiecewiseDump`i + 1]] - PiecewiseDump`a, Method -> \"ExactAlgebraics\"], PiecewiseDump`l = 1; While[ !Reduce`SolutionQ[PiecewiseDump`reds[[PiecewiseDump`l]], {PiecewiseDump`x -> PiecewiseDump`a}], PiecewiseDump`l++]; PiecewiseDump`tmp = If[PiecewiseDump`i < PiecewiseDump`n, (PiecewiseDump`pts[[PiecewiseDump`i + 1]] + PiecewiseDump`a)\/2, PiecewiseDump`a + 1]; PiecewiseDump`m = 1; While[ !Reduce`SolutionQ[PiecewiseDump`reds[[PiecewiseDump`m]], {PiecewiseDump`x -> PiecewiseDump`tmp}], PiecewiseDump`m++]; If[PiecewiseDump`k != PiecewiseDump`l || PiecewiseDump`l != PiecewiseDump`m, Internal`StuffBag[PiecewiseDump`pp, PiecewiseDump`a]; Internal`StuffBag[PiecewiseDump`vv, PiecewiseDump`vals[[PiecewiseDump`k]]]; Internal`StuffBag[PiecewiseDump`vv, PiecewiseDump`vals[[PiecewiseDump`l]]]; PiecewiseDump`k = PiecewiseDump`m]; If[PiecewiseDump`i == PiecewiseDump`n, Internal`StuffBag[PiecewiseDump`vv, PiecewiseDump`vals[[PiecewiseDump`k]]], PiecewiseDump`a = PiecewiseDump`pts[[PiecewiseDump`i + 1]]]], {PiecewiseDump`i, Length[PiecewiseDump`pts]}]; PiecewiseDump`pp = Internal`BagPart[PiecewiseDump`pp, All]; PiecewiseDump`vv = Internal`BagPart[PiecewiseDump`vv, All]; {PiecewiseDump`pp, PiecewiseDump`vv}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWToIntervals",
	"Simplify`PWToUnitStep":"ObjectType: Symbol\nUsage: Simplify`PWToUnitStep\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`PWToUnitStep[PiecewiseDump`e_] := Developer`ReplaceAllUnheld[PiecewiseDump`e, PiecewiseDump`PWToUnitStepRule]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`PWToUnitStep",
	"ResourceFunctionHelpers`PythagoreanTripleQ":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`PythagoreanTripleQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`PythagoreanTripleQ[{ResourceFunctionHelpers`PythagoreanTripleQ`Private`a_Integer, ResourceFunctionHelpers`PythagoreanTripleQ`Private`b_Integer, ResourceFunctionHelpers`PythagoreanTripleQ`Private`c_Integer}, ResourceFunctionHelpers`PythagoreanTripleQ`Private`opts:OptionsPattern[]] := Block[{ResourceFunctionHelpers`PythagoreanTripleQ`Private`res = ResourceFunctionHelpers`PythagoreanTripleQ`Private`a^2 + ResourceFunctionHelpers`PythagoreanTripleQ`Private`b^2 == ResourceFunctionHelpers`PythagoreanTripleQ`Private`c^2, ResourceFunctionHelpers`PythagoreanTripleQ`Private`s = NumericalSort[{ResourceFunctionHelpers`PythagoreanTripleQ`Private`a, ResourceFunctionHelpers`PythagoreanTripleQ`Private`b, ResourceFunctionHelpers`PythagoreanTripleQ`Private`c}], ResourceFunctionHelpers`PythagoreanTripleQ`Private`sres}, If[OptionValue[\"UnorderedTriple\"] =!= True, TrueQ[ResourceFunctionHelpers`PythagoreanTripleQ`Private`res], ResourceFunctionHelpers`PythagoreanTripleQ`Private`sres = ResourceFunctionHelpers`PythagoreanTripleQ`Private`s[[1]]^2 + ResourceFunctionHelpers`PythagoreanTripleQ`Private`s[[2]]^2 == ResourceFunctionHelpers`PythagoreanTripleQ`Private`s[[3]]^2; TrueQ[ResourceFunctionHelpers`PythagoreanTripleQ`Private`sres]]]\nResourceFunctionHelpers`PythagoreanTripleQ[ResourceFunctionHelpers`PythagoreanTripleQ`Private`a_Triangle] := ResourceFunctionHelpers`PythagoreanTripleQ[NumericalSort[Apply[EuclideanDistance, Subsets[PolygonCoordinates[ResourceFunctionHelpers`PythagoreanTripleQ`Private`a], {2}], {1}]]]\nResourceFunctionHelpers`PythagoreanTripleQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {UnorderedTriple -> False}\nAttributes: {}\nFullName: ResourceFunctionHelpers`PythagoreanTripleQ",
	"Reduce`PzeroQ":"ObjectType: Symbol\nUsage: Reduce`PzeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`PzeroQ[System`ReduceUtilsDump`e_] := PossibleZeroQ[System`ReduceUtilsDump`e, Method -> \"ExactAlgebraics\", Assumptions -> True]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`PzeroQ",
	"Image`TransformsDump`P$":"ObjectType: Symbol\nUsage: Image`TransformsDump`P$\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Temporary}\nFullName: Image`TransformsDump`P$",
	"Statistics`QuantityUtilities`QDUnitConvert":"ObjectType: Symbol\nUsage: Statistics`QuantityUtilities`QDUnitConvert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`QuantityUtilities`QDUnitConvert[(Statistics`QuantityDistributionDump`qdist_)?Statistics`Library`QuantityDistributionQ, Statistics`QuantityDistributionDump`targetU_:\"SIBase\"] := Module[{Statistics`QuantityDistributionDump`units, Statistics`QuantityDistributionDump`mdist}, Statistics`QuantityDistributionDump`units = Statistics`QuantityDistributionDump`qdist[\"Units\"]; Statistics`QuantityDistributionDump`mdist = QuantityMagnitude[Statistics`QuantityDistributionDump`qdist]; Statistics`QuantityDistributionDump`iUnitConvert[Statistics`QuantityDistributionDump`mdist, Statistics`QuantityDistributionDump`units, Statistics`QuantityDistributionDump`targetU]]\nStatistics`QuantityUtilities`QDUnitConvert[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`QuantityUtilities`QDUnitConvert",
	"Simplify`QFunctionExpand":"ObjectType: Symbol\nUsage: Simplify`QFunctionExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`QFunctionExpand[System`QFunctionsDump`e_, System`QFunctionsDump`opts:OptionsPattern[]] := Block[{$Assumptions = OptionValue[Assumptions]}, System`QFunctionsDump`QGammaCancel[System`QFunctionsDump`ToQPochhammer[System`QFunctionsDump`ToQProduct[System`QFunctionsDump`QGammaCancel[Developer`ReplaceAllUnheld[Simplify`SimplifyRecurrence[System`QFunctionsDump`iEllipticThetaSimplify[System`QFunctionsDump`e], QPolyGamma], System`QFunctionsDump`QHypergeometricRules]]]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Simplify`QFunctionExpand",
	"Simplify`QFunctionSimplify":"ObjectType: Symbol\nUsage: Simplify`QFunctionSimplify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`QFunctionSimplify[System`QFunctionsDump`e_, System`QFunctionsDump`opts:OptionsPattern[]] := Block[{$Assumptions = OptionValue[Assumptions]}, System`QFunctionsDump`e \/. {System`QFunctionsDump`t_Times :> System`QFunctionsDump`QPochhammerProductSimplify[Numerator[System`QFunctionsDump`t]]\/System`QFunctionsDump`QPochhammerProductSimplify[Denominator[System`QFunctionsDump`t]]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Simplify`QFunctionSimplify",
	"Simplify`QGammaTuplicate":"ObjectType: Symbol\nUsage: Simplify`QGammaTuplicate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`QGammaTuplicate[System`QFunctionsDump`e_, (System`QFunctionsDump`n_Integer)?Positive, System`QFunctionsDump`opts:OptionsPattern[]] := Block[{$Assumptions = OptionValue[Assumptions]}, System`QFunctionsDump`QTuplicate[System`QFunctionsDump`e, System`QFunctionsDump`n]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Simplify`QGammaTuplicate",
	"Reduce`QHull":"ObjectType: Symbol\nUsage: Reduce`QHull\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`QHull",
	"SpecialFunctions`QHypergeometricPFQPolynomial":"ObjectType: Symbol\nUsage: SpecialFunctions`QHypergeometricPFQPolynomial\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldFirst, NumericFunction}\nFullName: SpecialFunctions`QHypergeometricPFQPolynomial",
	"Integrate`QIntegrate":"ObjectType: Symbol\nUsage: Integrate`QIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Integrate`QIntegrate[Integrate`QuantityDump`f_, Integrate`QuantityDump`args__] := Module[{Integrate`QuantityDump`dxes, Integrate`QuantityDump`haveQuantDx, Integrate`QuantityDump`units, Integrate`QuantityDump`dunit, Integrate`QuantityDump`opts, Integrate`QuantityDump`integrationVars, Integrate`QuantityDump`fIsQuantDxCompatible, Integrate`QuantityDump`unitAssumptions, Integrate`QuantityDump`result, Integrate`QuantityDump`dquant, Integrate`QuantityDump`safeVar, Integrate`QuantityDump`separated, Integrate`QuantityDump`haveSymbolDxWithQuantLimit, Integrate`QuantityDump`fQuantities, Integrate`QuantityDump`odxes, Integrate`QuantityDump`sunits}, Integrate`QuantityDump`result = Catch[If[TrueQ[Internal`$DisableQuantityUnits], Throw[\"NoEval\"]]; Integrate`QuantityDump`opts = Cases[{Integrate`QuantityDump`args}, _Rule | _RuleDelayed]; Integrate`QuantityDump`dxes = Integrate`QuantityDump`odxes = DeleteCases[{Integrate`QuantityDump`args}, _Rule | _RuleDelayed]; Integrate`QuantityDump`integrationVars = Cases[Integrate`QuantityDump`dxes, {Quantity[Integrate`QuantityDump`x_, __], _, __} | {Integrate`QuantityDump`x_, _, __} | Quantity[Integrate`QuantityDump`x_, __] | (Integrate`QuantityDump`x_) :> Integrate`QuantityDump`x]; If[{Integrate`QuantityDump`args} =!= Join[Integrate`QuantityDump`dxes, Integrate`QuantityDump`opts] || Length[Integrate`QuantityDump`dxes] =!= Length[Integrate`QuantityDump`integrationVars], Throw[\"NoEval\"]]; Integrate`QuantityDump`haveQuantDx = Or @@ (Head[#1] === Quantity || (ListQ[#1] && Head[First[#1]] === Quantity) & ) \/@ Integrate`QuantityDump`dxes; Integrate`QuantityDump`haveSymbolDxWithQuantLimit = Or @@ (ListQ[#1] && (Head[First[#1]] =!= Quantity ||  !FreeQ[Rest[#1], _Quantity]) & ) \/@ Integrate`QuantityDump`dxes; Integrate`QuantityDump`fQuantities = Cases[Integrate`QuantityDump`f, _Quantity, -1]; Integrate`QuantityDump`fIsQuantDxCompatible = Head[Integrate`QuantityDump`f] === Quantity || FreeQ[Integrate`QuantityDump`f, Quantity]; Which[ !Integrate`QuantityDump`haveQuantDx &&  !Integrate`QuantityDump`haveSymbolDxWithQuantLimit && Head[Integrate`QuantityDump`f] === Quantity, Throw[{ReplacePart[Integrate`QuantityDump`f, 1 -> 1], First[Integrate`QuantityDump`f], Sequence @@ Join[Integrate`QuantityDump`dxes, Integrate`QuantityDump`opts]}],  !Integrate`QuantityDump`haveQuantDx && FreeQ[Integrate`QuantityDump`f, _Quantity], Throw[\"NoEval\"],  !Integrate`QuantityDump`haveQuantDx &&  !Integrate`QuantityDump`haveSymbolDxWithQuantLimit && FreeQ[Integrate`QuantityDump`fQuantities, Alternatives @@ Integrate`QuantityDump`integrationVars], Throw[\"NoEval\"], Integrate`QuantityDump`units = Integrate`QuantityDump`unitAssumptions = {}; Integrate`QuantityDump`dxes = (If[Head[#1] === Quantity, AppendTo[Integrate`QuantityDump`units, ReplacePart[#1, 1 -> 1]]; If[MemberQ[Integrate`QuantityDump`fQuantities, #1], AppendTo[Integrate`QuantityDump`unitAssumptions, QuantityUnit[First[#1]] -> \"PureUnities\"], AppendTo[Integrate`QuantityDump`unitAssumptions, QuantityUnit[First[#1]] -> Integrate`QuantityDump`units[[-1,2]]]]; First[#1], If[ListQ[#1] &&  !FreeQ[#1, Quantity], Integrate`QuantityDump`dquant = ReplacePart[First[Cases[#1, _Quantity]], 1 -> 1]; Integrate`QuantityDump`dunit = QuantityUnit[Integrate`QuantityDump`dquant]; AppendTo[Integrate`QuantityDump`units, Integrate`QuantityDump`dquant]; If[Head[First[#1]] === Quantity, Integrate`QuantityDump`safeVar = QuantityMagnitude[First[#1]]; If[MemberQ[Integrate`QuantityDump`fQuantities, First[#1]] ||  !FreeQ[Integrate`QuantityDump`f, Integrate`QuantityDump`safeVar], AppendTo[Integrate`QuantityDump`unitAssumptions, QuantityUnit[Integrate`QuantityDump`safeVar] -> \"PureUnities\"], AppendTo[Integrate`QuantityDump`unitAssumptions, QuantityUnit[Integrate`QuantityDump`safeVar] -> Integrate`QuantityDump`dunit]], Integrate`QuantityDump`safeVar = First[#1]; AppendTo[Integrate`QuantityDump`unitAssumptions, QuantityUnit[Integrate`QuantityDump`safeVar] -> Integrate`QuantityDump`dunit]]; Prepend[Replace[Rest[#1], {0 :> 0, Integrate`QuantityDump`q_Quantity :> If[CompatibleUnitQ[Integrate`QuantityDump`q, Integrate`QuantityDump`dunit], First[UnitConvert[Integrate`QuantityDump`q, Integrate`QuantityDump`dunit]], Message[Integrate::quantd, #1]; Throw[$Failed]], _ :> (Message[Integrate::quantd, #1]; Throw[$Failed])}, {1}], Integrate`QuantityDump`safeVar], If[ListQ[#1] && FreeQ[#1, Quantity] && And @@ NumericQ \/@ Rest[#1], AppendTo[Integrate`QuantityDump`unitAssumptions, QuantityUnit[First[#1]] -> \"PureUnities\"]; #1, #1]]] & ) \/@ Integrate`QuantityDump`dxes; Integrate`QuantityDump`haveQuantDx && Integrate`QuantityDump`fIsQuantDxCompatible, If[Head[Integrate`QuantityDump`f] === Quantity, Integrate`QuantityDump`units = ReplacePart[Integrate`QuantityDump`f, 1 -> 1]*Times @@ Integrate`QuantityDump`units; {Integrate`QuantityDump`units, First[Integrate`QuantityDump`f], Sequence @@ Join[Integrate`QuantityDump`dxes, Integrate`QuantityDump`opts]}, Integrate`QuantityDump`units = Times @@ Integrate`QuantityDump`units; {Integrate`QuantityDump`units, Integrate`QuantityDump`f, Sequence @@ Join[Integrate`QuantityDump`dxes, Integrate`QuantityDump`opts]}], True, Integrate`QuantityDump`separated = Quiet[QuantityUnits`Private`SeparateUnits[Integrate`QuantityDump`f, Integrate`QuantityDump`unitAssumptions]]; If[Head[Integrate`QuantityDump`separated] =!= QuantityUnits`Private`SeparateUnits, Integrate`QuantityDump`odxes = Quiet[QuantityUnits`Private`SeparateUnits[Integrate`QuantityDump`odxes, Last[Integrate`QuantityDump`separated]]]; If[Head[Integrate`QuantityDump`odxes] =!= QuantityUnits`Private`SeparateUnits, Integrate`QuantityDump`dxes = First[Integrate`QuantityDump`odxes] \/. QuantityMagnitude[Integrate`QuantityDump`q_] :> Integrate`QuantityDump`q; Integrate`QuantityDump`dxes = Integrate`QuantityDump`dxes \/. {(Integrate`QuantityDump`var_)*(Integrate`QuantityDump`other_), Integrate`QuantityDump`n1_, Integrate`QuantityDump`n2_} -> {Integrate`QuantityDump`var, Integrate`QuantityDump`n1\/Integrate`QuantityDump`other, Integrate`QuantityDump`n2\/Integrate`QuantityDump`other}; Integrate`QuantityDump`sunits = With[{Integrate`QuantityDump`unit = Integrate`QuantityDump`odxes[[2]]}, {Quantity[1, Integrate`QuantityDump`unit]}]; Integrate`QuantityDump`units = Quantity @@ {1, Integrate`QuantityDump`separated[[2]]}*Times @@ Integrate`QuantityDump`sunits; , If[ !(MatchQ[Integrate`QuantityDump`odxes, QuantityUnits`Private`SeparateUnits[{_Quantity..}, __]] || Integrate`QuantityDump`unitAssumptions === {}), Message[Integrate::units, Integrate]; Throw[\"NoEval\"], Integrate`QuantityDump`units = Quantity @@ {1, Integrate`QuantityDump`separated[[2]]}*Times @@ Integrate`QuantityDump`units]]; {Integrate`QuantityDump`units, First[Integrate`QuantityDump`separated] \/. QuantityMagnitude[Integrate`QuantityDump`q_] :> Integrate`QuantityDump`q, Sequence @@ Join[Integrate`QuantityDump`dxes, Integrate`QuantityDump`opts]}, Message[Integrate::units, Integrate]; $Failed]]]; Integrate`QuantityDump`result \/; Integrate`QuantityDump`result =!= \"NoEval\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`QIntegrate",
	"LinearAlgebra`Private`QRUpdate":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`QRUpdate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`QRUpdate",
	"Integrate`QSIntegrate":"ObjectType: Symbol\nUsage: Integrate`QSIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Integrate`QSIntegrate[Integrate`ImproperDump`f_, Integrate`ImproperDump`y_, Integrate`ImproperDump`AA_, Integrate`ImproperDump`bb_, Integrate`ImproperDump`cc_, (Integrate`ImproperDump`opts___)?OptionQ] := Module[{Integrate`A = (Integrate`ImproperDump`AA + Transpose[Integrate`ImproperDump`AA])\/2, Integrate`ImproperDump`b = Integrate`ImproperDump`bb\/2, Integrate`ImproperDump`c = Integrate`ImproperDump`cc, Integrate`ImproperDump`newf = Integrate`ImproperDump`f, Integrate`ImproperDump`assum = Integrate`$IntegrateAssumptions, Integrate`ImproperDump`res}, If[Quiet[VectorQ[Normal[Integrate`ImproperDump`b], #1 < 0 & ]], Integrate`ImproperDump`newf = Integrate`ImproperDump`newf \/. Integrate`ImproperDump`y -> -Integrate`ImproperDump`y; {Integrate`A, Integrate`ImproperDump`b, Integrate`ImproperDump`c} = -{Integrate`A, Integrate`ImproperDump`b, Integrate`ImproperDump`c}; ]; If[Quiet[Refine[And @@ (#1 < 0 & ) \/@ Eigenvalues[Integrate`A], Integrate`ImproperDump`assum]], Integrate`ImproperDump`newf = Integrate`ImproperDump`newf \/. Integrate`ImproperDump`y -> -Integrate`ImproperDump`y; {Integrate`A, Integrate`ImproperDump`b, Integrate`ImproperDump`c} = -{Integrate`A, Integrate`ImproperDump`b, Integrate`ImproperDump`c}; ]; Integrate`ImproperDump`res = Integrate`ImproperDump`QSIntegrateAux[Integrate`ImproperDump`newf, Integrate`ImproperDump`y, Integrate`A, Integrate`ImproperDump`b, Integrate`ImproperDump`c, Integrate`ImproperDump`assum, Integrate`ImproperDump`opts]; If[Quiet[ !VectorQ[Eigenvalues[Integrate`A], NumericQ]] &&  !FreeQ[Integrate`ImproperDump`res, Integrate`ImproperDump`QSIntegrateAux | $Failed, Infinity], Integrate`ImproperDump`res = Integrate`ImproperDump`QSIntegrateAux[Integrate`ImproperDump`newf \/. Integrate`ImproperDump`y -> -Integrate`ImproperDump`y, Integrate`ImproperDump`y, -Integrate`A, -Integrate`ImproperDump`b, -Integrate`ImproperDump`c, Integrate`ImproperDump`assum, Integrate`ImproperDump`opts]; ]; If[FreeQ[Integrate`ImproperDump`res, Integrate`ImproperDump`QSIntegrateAux | $Failed, Infinity], Integrate`ImproperDump`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`QSIntegrate",
	"SurfaceGraphics`Methods`Quad":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Quad\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Quad",
	"NDSolve`FEM`QuadElement":"ObjectType: Symbol\nUsage: NDSolve`FEM`QuadElement\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`FEM`MeshElementFaceType[_NDSolve`FEM`QuadElement] ^= NDSolve`FEM`LineElement\nNDSolve`FEM`MeshElementFaceIncidents[NDSolve`FEM`MeshElementsDump`e_NDSolve`FEM`QuadElement] ^:= NDSolve`FEM`MeshElementsDump`QuadFaces[NDSolve`FEM`MeshElementOrder[NDSolve`FEM`MeshElementsDump`e]]\nNDSolve`FEM`MeshElementDimensionality[_NDSolve`FEM`QuadElement] ^= 2\nNDSolve`FEM`GetInterpolationData[NDSolve`FEM`QuadElement, NDSolve`FEM`MeshElementsDump`order_] ^:= Block[{NDSolve`FEM`MeshElementsDump`f, NDSolve`FEM`MeshElementsDump`F, NDSolve`FEM`MeshElementsDump`basecoords, NDSolve`FEM`MeshElementsDump`ebasis, NDSolve`FEM`MeshElementsDump`nx, NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s, NDSolve`FEM`MeshElementsDump`mat, NDSolve`FEM`MeshElementsDump`coeffs, NDSolve`FEM`MeshElementsDump`ifun, NDSolve`FEM`MeshElementsDump`d, NDSolve`FEM`MeshElementsDump`ni, NDSolve`FEM`MeshElementsDump`ecoords, NDSolve`FEM`MeshElementsDump`ivals, NDSolve`FEM`MeshElementsDump`Sv}, NDSolve`FEM`MeshElementsDump`basecoords = NDSolve`FEM`MeshElementBaseCoordinates[NDSolve`FEM`QuadElement, NDSolve`FEM`MeshElementsDump`order]; NDSolve`FEM`MeshElementsDump`nx = Length[NDSolve`FEM`MeshElementsDump`basecoords]; NDSolve`FEM`MeshElementsDump`F = Table[NDSolve`FEM`MeshElementsDump`f[NDSolve`FEM`MeshElementsDump`i], {NDSolve`FEM`MeshElementsDump`i, 0, NDSolve`FEM`MeshElementsDump`nx - 1}]; NDSolve`FEM`MeshElementsDump`ebasis[{NDSolve`FEM`MeshElementsDump`r_, NDSolve`FEM`MeshElementsDump`s_}] = NDSolve`FEM`MeshElementBasePolynomial[NDSolve`FEM`QuadElement, NDSolve`FEM`MeshElementsDump`order, {NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s}]; NDSolve`FEM`MeshElementsDump`mat = NDSolve`FEM`MeshElementsDump`ebasis \/@ NDSolve`FEM`MeshElementsDump`basecoords; NDSolve`FEM`MeshElementsDump`coeffs = FullSimplify[LinearSolve[NDSolve`FEM`MeshElementsDump`mat, NDSolve`FEM`MeshElementsDump`F]]; NDSolve`FEM`MeshElementsDump`ifun[{NDSolve`FEM`MeshElementsDump`r_, NDSolve`FEM`MeshElementsDump`s_}] = NDSolve`FEM`MeshElementsDump`coeffs . NDSolve`FEM`MeshElementsDump`ebasis[{NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s}]; NDSolve`FEM`MeshElementsDump`d = Max[(Sum[Exponent[#1, NDSolve`FEM`MeshElementsDump`v], {NDSolve`FEM`MeshElementsDump`v, {NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s}}] & ) \/@ NDSolve`FEM`MeshElementsDump`ebasis[{NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s}]]; NDSolve`FEM`MeshElementsDump`ni = Binomial[NDSolve`FEM`MeshElementsDump`d + 2, 2]; NDSolve`FEM`MeshElementsDump`ivals = NDSolve`FEM`MeshElementsDump`ifun \/@ Take[NDSolve`FEM`MeshElementsDump`qextracoordinates, NDSolve`FEM`MeshElementsDump`ni - Length[NDSolve`FEM`MeshElementsDump`basecoords]]; NDSolve`FEM`MeshElementsDump`Sv = Last[CoefficientArrays[NDSolve`FEM`MeshElementsDump`ivals, NDSolve`FEM`MeshElementsDump`F]]; NDSolve`FEM`MeshElementsDump`Sv = SparseArray[NDSolve`FEM`MeshElementsDump`Sv]; {NDSolve`FEM`MeshElementsDump`qextracoordinates, NDSolve`FEM`MeshElementsDump`Sv}]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`QuadElement",
	"Reduce`QuadNormRepresentatives":"ObjectType: Symbol\nUsage: Reduce`QuadNormRepresentatives\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`QuadNormRepresentatives[System`QuadraticsDump`m_, System`QuadraticsDump`f_, System`QuadraticsDump`k_] := Module[{System`QuadraticsDump`x, System`QuadraticsDump`y, System`QuadraticsDump`delta, System`QuadraticsDump`b, System`QuadraticsDump`c, System`QuadraticsDump`d, System`QuadraticsDump`e, System`QuadraticsDump`A, System`QuadraticsDump`fac, System`QuadraticsDump`tmp, System`QuadraticsDump`ss, System`QuadraticsDump`bas, System`QuadraticsDump`ans}, {System`QuadraticsDump`c, System`QuadraticsDump`b} = Take[CoefficientList[System`QuadraticsDump`f[System`QuadraticsDump`x], System`QuadraticsDump`x], 2]; System`QuadraticsDump`delta = System`QuadraticsDump`b^2 - 4*System`QuadraticsDump`c; System`QuadraticsDump`e = Times @@ (#1[[1]]^Floor[#1[[2]]\/2] & ) \/@ FactorInteger[System`QuadraticsDump`delta]; System`QuadraticsDump`d = System`QuadraticsDump`delta\/System`QuadraticsDump`e^2; System`QuadraticsDump`A = If[Mod[System`QuadraticsDump`d, 4] == 1, 4*Abs[System`QuadraticsDump`m], Abs[System`QuadraticsDump`m]]; If[System`QuadraticsDump`d < 0, System`QuadraticsDump`bas = System`QuadraticsDump`HMWSolve[{1, -System`QuadraticsDump`d, System`QuadraticsDump`A}, {System`QuadraticsDump`x, System`QuadraticsDump`y}, System`QuadraticsDump`x >= 0, True], System`QuadraticsDump`fac = If[System`QuadraticsDump`A == 1 || PrimeQ[System`QuadraticsDump`A], {{System`QuadraticsDump`A, 1}}, FactorInteger[System`QuadraticsDump`A]]; System`QuadraticsDump`tmp = (Floor[#1[[2]]\/2] & ) \/@ System`QuadraticsDump`fac; System`QuadraticsDump`fac = (#1[[1]] & ) \/@ System`QuadraticsDump`fac; System`QuadraticsDump`tmp = Reduce`CartesianProd @@ (Range[0, #1] & ) \/@ System`QuadraticsDump`tmp; System`QuadraticsDump`ss = (Times @@ (System`QuadraticsDump`fac^#1) & ) \/@ System`QuadraticsDump`tmp; System`QuadraticsDump`tmp = System`QuadraticsDump`PellUnit[System`QuadraticsDump`d]; System`QuadraticsDump`bas = Join @@ (#1*System`QuadraticsDump`PellBasis[System`QuadraticsDump`A\/#1^2, System`QuadraticsDump`d, System`QuadraticsDump`tmp] & ) \/@ System`QuadraticsDump`ss; System`QuadraticsDump`bas = Join[System`QuadraticsDump`bas, Join @@ (#1*System`QuadraticsDump`PellBasis[-(System`QuadraticsDump`A\/#1^2), System`QuadraticsDump`d, System`QuadraticsDump`tmp] & ) \/@ System`QuadraticsDump`ss]; System`QuadraticsDump`bas = Union[System`QuadraticsDump`bas, ({1, -1}*#1 & ) \/@ System`QuadraticsDump`bas]]; System`QuadraticsDump`ans = (AlgebraicNumber[Root[System`QuadraticsDump`f, System`QuadraticsDump`k], {#1[[1]] + (#1[[2]]*System`QuadraticsDump`b)\/System`QuadraticsDump`e, (2*#1[[2]])\/System`QuadraticsDump`e}] & ) \/@ System`QuadraticsDump`bas; If[Mod[System`QuadraticsDump`d, 4] == 1, System`QuadraticsDump`ans = System`QuadraticsDump`ans\/2]; Union[System`QuadraticsDump`ans, SameTest -> (AlgebraicIntegerQ[#1\/#2] & )]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`QuadNormRepresentatives",
	"Region`Mesh`Quadratic":"ObjectType: Symbol\nUsage: Region`Mesh`Quadratic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`Quadratic",
	"ResourceFunctionHelpers`QuadraticDescriptionPlotQuiz":"ObjectType: Symbol\nUsage: QuadraticDescriptionPlotQuiz[] returns an interactive tool for plotting quadratic curves based on a description.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`QuadraticDescriptionPlotQuiz[] := ResourceFunctionHelpers`DescriptionPlotQuiz`Private`iDescriptionPlotQuiz[\"Quadratic\"]\nResourceFunctionHelpers`QuadraticDescriptionPlotQuiz[___] := $Failed \/; False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`QuadraticDescriptionPlotQuiz",
	"Internal`QuadraticFundamentalUnit":"ObjectType: Symbol\nUsage: Internal`QuadraticFundamentalUnit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuadraticFundamentalUnit",
	"Optimization`QuadraticProgramming":"ObjectType: Symbol\nUsage: Optimization`QuadraticProgramming\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> CLP, Tolerance -> Automatic}\nAttributes: {}\nFullName: Optimization`QuadraticProgramming",
	"ResourceFunctionHelpers`QuadraticRegressionDataQuiz":"ObjectType: Symbol\nUsage: QuadraticRegressionDataQuiz[] generates an interactive interface with randomly-generated problems to observe quadratic regression in real time.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`QuadraticRegressionDataQuiz[] := ResourceFunctionHelpers`RegressionDataQuiz`Private`iRegressionDataQuiz[\"Quadratic\"]\nResourceFunctionHelpers`QuadraticRegressionDataQuiz[___] := $Failed \/; False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`QuadraticRegressionDataQuiz",
	"ResourceFunctionHelpers`QuadraticResidues":"ObjectType: Symbol\nUsage: \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`QuadraticResidues[(ResourceFunctionHelpers`QuadraticResidues`Private`n_Integer)?Positive] := Union[PowerMod[Range[0, ResourceFunctionHelpers`QuadraticResidues`Private`n\/2], 2, ResourceFunctionHelpers`QuadraticResidues`Private`n]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`QuadraticResidues",
	"System`Private`QuadraticRoot":"ObjectType: Symbol\nUsage: System`Private`QuadraticRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`QuadraticRoot",
	"NumberTheory`QuadraticSieve":"ObjectType: Symbol\nUsage: NumberTheory`QuadraticSieve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NumberTheory`QuadraticSieve",
	"NumberTheory`QuadraticSieveWithRelations":"ObjectType: Symbol\nUsage: NumberTheory`QuadraticSieveWithRelations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NumberTheory`QuadraticSieveWithRelations",
	"Optimization`Transformations`QuadraticToConicConstraint":"ObjectType: Symbol\nUsage: Optimization`Transformations`QuadraticToConicConstraint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Optimization`Transformations`QuadraticToConicConstraint[{Optimization`TransformFunctionsDump`qin_, Optimization`TransformFunctionsDump`cfin_}, Optimization`TransformFunctionsDump`cin_, Optimization`TransformFunctionsDump`d_, Optimization`TransformFunctionsDump`targetCone_, Optimization`TransformFunctionsDump`vars_, Optimization`TransformFunctionsDump`prec_] := Block[{Optimization`TransformFunctionsDump`q, Optimization`TransformFunctionsDump`cf = Optimization`TransformFunctionsDump`cfin, Optimization`TransformFunctionsDump`c = Optimization`TransformFunctionsDump`cin, Optimization`TransformFunctionsDump`k, Optimization`TransformFunctionsDump`n, Optimization`TransformFunctionsDump`res}, If[Optimization`TransformFunctionsDump`cf === {}, Optimization`TransformFunctionsDump`q = Optimization`Utilities`FactorSymmetricPositiveSemidefiniteMatrix[Optimization`TransformFunctionsDump`qin, Optimization`TransformFunctionsDump`prec]; If[ !MatrixQ[Optimization`TransformFunctionsDump`q, NumericQ], Return[$Failed, Block]]; Optimization`TransformFunctionsDump`cf = N[0, Optimization`TransformFunctionsDump`prec], Optimization`TransformFunctionsDump`q = Optimization`TransformFunctionsDump`qin; Optimization`TransformFunctionsDump`cf = Optimization`TransformFunctionsDump`cfin; ]; {Optimization`TransformFunctionsDump`k, Optimization`TransformFunctionsDump`n} = Dimensions[Optimization`TransformFunctionsDump`q]; If[Optimization`TransformFunctionsDump`targetCone === Optimization`TransformFunctionsDump`SemidefiniteCone, Optimization`TransformFunctionsDump`res = Optimization`TransformFunctionsDump`QuadraticToSemidefiniteCone[Optimization`TransformFunctionsDump`q, Optimization`TransformFunctionsDump`cf, Optimization`TransformFunctionsDump`c, Optimization`TransformFunctionsDump`d, Optimization`TransformFunctionsDump`vars, Optimization`TransformFunctionsDump`prec], Optimization`TransformFunctionsDump`res = Optimization`TransformFunctionsDump`QuadraticToSecondOrderCone[Optimization`TransformFunctionsDump`q, Optimization`TransformFunctionsDump`cf, Optimization`TransformFunctionsDump`c, Optimization`TransformFunctionsDump`d, Optimization`TransformFunctionsDump`vars, Optimization`TransformFunctionsDump`prec]]; Optimization`TransformFunctionsDump`dPrint[5, \"QuadraticToConicConstraint\"[{Optimization`TransformFunctionsDump`qin, Optimization`TransformFunctionsDump`cfin}, Optimization`TransformFunctionsDump`cin, Optimization`TransformFunctionsDump`d, Optimization`TransformFunctionsDump`targetCone] -> Optimization`TransformFunctionsDump`res]; Optimization`TransformFunctionsDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`Transformations`QuadraticToConicConstraint",
	"ResourceFunctionHelpers`QuadraticTransformationQuiz":"ObjectType: Symbol\nUsage: LinearTransformationQuiz[type_, var_] graphically match the quadratic function of the univariate variable var with the transformed polynomial\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`QuadraticTransformationQuiz[ResourceFunctionHelpers`TransformationQuiz`Private`op:OptionsPattern[ResourceFunctionHelpers`TransformationQuizGUI]] := ResourceFunctionHelpers`TransformationQuiz`Private`iTransformationQuiz[\"Quadratic\", ResourceFunctionHelpers`TransformationQuiz`Private`op]\nResourceFunctionHelpers`QuadraticTransformationQuiz[___] := $Failed \/; False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`QuadraticTransformationQuiz",
	"SurfaceGraphics`Methods`QuadricWeighting":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`QuadricWeighting\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`QuadricWeighting",
	"Reduce`QuadRoot":"ObjectType: Symbol\nUsage: Reduce`QuadRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`QuadRoot",
	"Reduce`QuadRootVar":"ObjectType: Symbol\nUsage: Reduce`QuadRootVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`QuadRootVar",
	"SurfaceGraphics`Methods`QuadTriangular":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`QuadTriangular\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`QuadTriangular",
	"PacletManager`Paclet`Private`Qualifier":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`Qualifier\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`Qualifier",
	"SurfaceGraphics`Methods`Quantile":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Quantile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Quantile",
	"Statistics`Library`QuantileDefinition":"ObjectType: Symbol\nUsage: Statistics`Library`QuantileDefinition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`QuantileDefinition[(Statistics`DistributionPropertiesDump`dist_)?Statistics`DistributionPropertiesDump`OneDimensionalQ, (Statistics`DistributionPropertiesDump`q_)?Statistics`Library`QuantileQ] := Module[{Statistics`DistributionPropertiesDump`cdf, Statistics`DistributionPropertiesDump`domain, Statistics`DistributionPropertiesDump`z, Statistics`DistributionPropertiesDump`res}, Statistics`DistributionPropertiesDump`domain = Statistics`Library`DistributionDomainSpecification[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`z]; If[InexactNumberQ[Statistics`DistributionPropertiesDump`q] && Statistics`DistributionPropertiesDump`domain =!= $Failed && Statistics`Library`GetDistributionParameters[Statistics`DistributionPropertiesDump`dist] === {}, Statistics`DistributionPropertiesDump`res = Statistics`DistributionPropertiesDump`InexactQuantile[Statistics`DistributionPropertiesDump`dist, First[Statistics`DistributionPropertiesDump`domain], Statistics`DistributionPropertiesDump`q]; If[Statistics`DistributionPropertiesDump`res =!= $Failed, Return[Statistics`DistributionPropertiesDump`res]]; ]; (Statistics`DistributionPropertiesDump`domain = First[Statistics`DistributionPropertiesDump`domain]; Statistics`DistributionPropertiesDump`cdf = CDF[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`z]; (Statistics`DistributionPropertiesDump`res = Which[Length[Statistics`DistributionPropertiesDump`domain] == 4 && Statistics`Library`DiscreteUnivariateDistributionQ[Statistics`DistributionPropertiesDump`dist] === True, Statistics`Library`UDFunctionConvert[Statistics`DistributionPropertiesDump`cdf, Most[Statistics`DistributionPropertiesDump`domain], CDF -> {Quantile, Statistics`DistributionPropertiesDump`q}], Length[Statistics`DistributionPropertiesDump`domain] == 3 && Statistics`Library`ContinuousUnivariateDistributionQ[Statistics`DistributionPropertiesDump`dist] === True, Statistics`Library`UCFunctionConvert[Statistics`DistributionPropertiesDump`cdf, Statistics`DistributionPropertiesDump`domain, CDF -> {Quantile, Statistics`DistributionPropertiesDump`q}], True, $Failed]; Statistics`DistributionPropertiesDump`res \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`res, $Failed] && Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`res, {Statistics`Library`UDFunctionConvert, Statistics`Library`UCFunctionConvert}]) \/; Head[Statistics`DistributionPropertiesDump`cdf] =!= CDF) \/; ArrayQ[Statistics`DistributionPropertiesDump`domain]]\nStatistics`Library`QuantileDefinition[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuantileDefinition",
	"Statistics`Library`QuantileQ":"ObjectType: Symbol\nUsage: Statistics`Library`QuantileQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`QuantileQ[0 | 1] := True\nStatistics`Library`QuantileQ[Statistics`Library`Dump`q_Real] := 0 <= Statistics`Library`Dump`q <= 1 &&  !SpecialFunctions`UnderOverflowedQ[Statistics`Library`Dump`q]\nStatistics`Library`QuantileQ[_Complex | _Integer | _DirectedInfinity] = False\nStatistics`Library`QuantileQ[(Statistics`Library`Dump`q_)?Internal`RealValuedNumericQ] := 0 <= Statistics`Library`Dump`q <= 1\nStatistics`Library`QuantileQ[(Statistics`Library`Dump`q_)?NumericQ] := False\nStatistics`Library`QuantileQ[_List | _SparseArray | _?StructuredArray`StructuredArrayQ | _Quantity | Indeterminate | _TemporalData] = False\nStatistics`Library`QuantileQ[_] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuantileQ",
	"GIS`QuantityAngle":"ObjectType: Symbol\nUsage: GIS`QuantityAngle[a] returns Quantity[a, \"AngularDegrees\"], or QuantityArray[a, \"AngularDegrees\"] for a higher depth array.. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`QuantityAngle[GIS`GeoQuantityDump`expr_] := If[GIS`GeoQuantityDump`$WrapQuantity, If[ArrayDepth[GIS`GeoQuantityDump`expr] > 1, QuantityArray[GIS`GeoQuantityDump`expr, \"AngularDegrees\"], Quantity[GIS`GeoQuantityDump`expr, \"AngularDegrees\"]], GIS`GeoQuantityDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`QuantityAngle",
	"QuantityArray`QuantityArrayCommonUnits":"ObjectType: Symbol\nUsage: QuantityArray`QuantityArrayCommonUnits\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityArray`QuantityArrayCommonUnits[(StructuredArray`QuantityArrayDump`qa_)?QuantityArray`QuantityArrayQ] := Module[{StructuredArray`QuantityArrayDump`numbers = StructuredArray`QuantityArrayDump`getNumbers[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`units = StructuredArray`QuantityArrayDump`getUnits[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`levels = StructuredArray`QuantityArrayDump`getLevels[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`funits, StructuredArray`QuantityArrayDump`commonfunits, StructuredArray`QuantityArrayDump`commonunits}, StructuredArray`QuantityArrayDump`funits = DeleteDuplicates[StructuredArray`QuantityArrayDump`flattenList[StructuredArray`QuantityArrayDump`units]]; StructuredArray`QuantityArrayDump`commonfunits = StructuredArray`QuantityArrayDump`commonUnitList[StructuredArray`QuantityArrayDump`funits]; If[StructuredArray`QuantityArrayDump`commonfunits === StructuredArray`QuantityArrayDump`funits, Return[StructuredArray`QuantityArrayDump`qa]]; StructuredArray`QuantityArrayDump`commonunits = StructuredArray`QuantityArrayDump`replaceAll[StructuredArray`QuantityArrayDump`units, Thread[StructuredArray`QuantityArrayDump`funits -> StructuredArray`QuantityArrayDump`commonfunits]]; StructuredArray`QuantityArrayDump`numbers = StructuredArray`QuantityArrayDump`arrayUnitBlockConvert[StructuredArray`QuantityArrayDump`numbers, StructuredArray`QuantityArrayDump`units, StructuredArray`QuantityArrayDump`commonunits]; QuantityArray[StructuredArray`QuantityArrayDump`numbers, StructuredArray`QuantityArrayDump`reduceArray[StructuredArray`QuantityArrayDump`commonunits], StructuredArray`QuantityArrayDump`levels]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityArray`QuantityArrayCommonUnits",
	"QuantityArray`QuantityArrayCompatibleUnitQ":"ObjectType: Symbol\nUsage: QuantityArray`QuantityArrayCompatibleUnitQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityArray`QuantityArrayCompatibleUnitQ[StructuredArray`QuantityArrayDump`args___] := CompatibleUnitQ[DeleteDuplicates[Flatten[StructuredArray`QuantityArrayDump`getAllUnits[{StructuredArray`QuantityArrayDump`args}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityArray`QuantityArrayCompatibleUnitQ",
	"QuantityArray`QuantityArrayMagnitude":"ObjectType: Symbol\nUsage: QuantityArray`QuantityArrayMagnitude\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityArray`QuantityArrayMagnitude[(StructuredArray`QuantityArrayDump`qa_)?QuantityArray`QuantityArrayQ] := StructuredArray`QuantityArrayDump`myFlatten[StructuredArray`QuantityArrayDump`getNumbers[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`getLevels[StructuredArray`QuantityArrayDump`qa]]\nQuantityArray`QuantityArrayMagnitude[(StructuredArray`QuantityArrayDump`qa_)?QuantityArray`QuantityArrayQ, StructuredArray`QuantityArrayDump`units_] := QuantityArray`QuantityArrayMagnitude[QuantityArray`QuantityArrayUnitConvert[StructuredArray`QuantityArrayDump`qa, StructuredArray`QuantityArrayDump`units]]\nQuantityArray`QuantityArrayMagnitude[_] := $Failed\nQuantityArray`QuantityArrayMagnitude[_, _] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityArray`QuantityArrayMagnitude",
	"Statistics`QuantityUtilities`QuantityArrayMean":"ObjectType: Symbol\nUsage: Statistics`QuantityUtilities`QuantityArrayMean\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`QuantityUtilities`QuantityArrayMean[Statistics`QuantityUtilitiesDump`data_, 1] := Statistics`QuantityUtilities`UnivariateDescriptiveOfQuantityVector[Statistics`QuantityUtilitiesDump`data, Mean, Identity]\nStatistics`QuantityUtilities`QuantityArrayMean[Statistics`QuantityUtilitiesDump`data_, 2] := Statistics`QuantityUtilities`ColumnwiseDescriptiveOfQuantityMatrix[Statistics`QuantityUtilitiesDump`data, Mean, Identity]\nStatistics`QuantityUtilities`QuantityArrayMean[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`QuantityUtilities`QuantityArrayMean",
	"Internal`QuantityArrayQ":"ObjectType: Symbol\nUsage: Internal`QuantityArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuantityArrayQ",
	"QuantityArray`QuantityArrayQ":"ObjectType: Symbol\nUsage: QuantityArray`QuantityArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityArray`QuantityArrayQ[(StructuredArray`QuantityArrayDump`qa_QuantityArray)?StructuredArray`StructuredArrayQ] = True\nQuantityArray`QuantityArrayQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityArray`QuantityArrayQ",
	"Internal`QuantityArrayToNumericArray":"ObjectType: Symbol\nUsage: Internal`QuantityArrayToNumericArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`QuantityArrayToNumericArray[QuantityUnits`Private`arg_, QuantityUnits`Private`opts___] := Internal`QuantityToValue[QuantityUnits`Private`preprocess[QuantityUnits`Private`arg], QuantityUnits`Private`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuantityArrayToNumericArray",
	"QuantityArray`QuantityArrayUnit":"ObjectType: Symbol\nUsage: QuantityArray`QuantityArrayUnit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityArray`QuantityArrayUnit[(StructuredArray`QuantityArrayDump`qa_)?QuantityArray`QuantityArrayQ] := With[{StructuredArray`QuantityArrayDump`numbers = StructuredArray`QuantityArrayDump`getNumbers[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`units = StructuredArray`QuantityArrayDump`getUnits[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`levels = StructuredArray`QuantityArrayDump`getLevels[StructuredArray`QuantityArrayDump`qa]}, StructuredArray`QuantityArrayDump`myFlatten[StructuredArray`QuantityArrayDump`replicateArray[StructuredArray`QuantityArrayDump`units, StructuredArray`QuantityArrayDump`arrayDimensions[StructuredArray`QuantityArrayDump`numbers]], StructuredArray`QuantityArrayDump`levels]]\nQuantityArray`QuantityArrayUnit[_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityArray`QuantityArrayUnit",
	"QuantityArray`QuantityArrayUnitConvert":"ObjectType: Symbol\nUsage: QuantityArray`QuantityArrayUnitConvert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityArray`QuantityArrayUnitConvert[(StructuredArray`QuantityArrayDump`qa_)?QuantityArray`QuantityArrayQ, StructuredArray`QuantityArrayDump`uext_] := Module[{StructuredArray`QuantityArrayDump`numbers = StructuredArray`QuantityArrayDump`getNumbers[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`units = StructuredArray`QuantityArrayDump`getUnits[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`levels = StructuredArray`QuantityArrayDump`getLevels[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`tmp, StructuredArray`QuantityArrayDump`usystemQ, StructuredArray`QuantityArrayDump`euext, StructuredArray`QuantityArrayDump`eunits, StructuredArray`QuantityArrayDump`newnumbers, StructuredArray`QuantityArrayDump`status}, StructuredArray`QuantityArrayDump`usystemQ = StructuredArray`QuantityArrayDump`unitSystemQ[StructuredArray`QuantityArrayDump`uext]; If[StructuredArray`QuantityArrayDump`usystemQ, StructuredArray`QuantityArrayDump`euext = StructuredArray`QuantityArrayDump`uext, If[StructuredArray`QuantityArrayDump`arrayDepth[StructuredArray`QuantityArrayDump`uext] > Length[StructuredArray`QuantityArrayDump`levels] || Take[Dimensions[StructuredArray`QuantityArrayDump`qa], -StructuredArray`QuantityArrayDump`arrayDepth[StructuredArray`QuantityArrayDump`uext]] =!= StructuredArray`QuantityArrayDump`arrayDimensions[StructuredArray`QuantityArrayDump`uext], Message[UnitConvert::udims, Dimensions[StructuredArray`QuantityArrayDump`qa], StructuredArray`QuantityArrayDump`arrayDimensions[StructuredArray`QuantityArrayDump`uext]]; Return[$Failed]]; StructuredArray`QuantityArrayDump`euext = StructuredArray`QuantityArrayDump`uext \/. StructuredArray`QuantityArrayDump`q_Quantity :> QuantityUnit[StructuredArray`QuantityArrayDump`q]; StructuredArray`QuantityArrayDump`euext = StructuredArray`QuantityArrayDump`CanonUnitArray[StructuredArray`QuantityArrayDump`euext]; If[StructuredArray`QuantityArrayDump`euext === $Failed, Message[UnitConvert::unkunit, StructuredArray`QuantityArrayDump`uext]; Return[$Failed]]; ]; If[True, StructuredArray`QuantityArrayDump`euext = StructuredArray`QuantityArrayDump`FlattenOutToIn[StructuredArray`QuantityArrayDump`euext, StructuredArray`QuantityArrayDump`levels, Dimensions[StructuredArray`QuantityArrayDump`numbers]]; StructuredArray`QuantityArrayDump`status = StructuredArray`QuantityArrayDump`euext =!= $Failed]; If[StructuredArray`QuantityArrayDump`status, StructuredArray`QuantityArrayDump`tmp = StructuredArray`QuantityArrayDump`makeSameDimensions[StructuredArray`QuantityArrayDump`units, StructuredArray`QuantityArrayDump`euext]; StructuredArray`QuantityArrayDump`status = ListQ[StructuredArray`QuantityArrayDump`tmp] && Length[StructuredArray`QuantityArrayDump`tmp] === 2]; If[StructuredArray`QuantityArrayDump`status && StructuredArray`QuantityArrayDump`usystemQ, StructuredArray`QuantityArrayDump`eunits = MapThread[StructuredArray`QuantityArrayDump`UnitSystemToUnit, StructuredArray`QuantityArrayDump`tmp, StructuredArray`QuantityArrayDump`arrayDepth[StructuredArray`QuantityArrayDump`tmp[[1]]]]; StructuredArray`QuantityArrayDump`status = StructuredArray`QuantityArrayDump`arrayDimensions[StructuredArray`QuantityArrayDump`eunits] === StructuredArray`QuantityArrayDump`arrayDimensions[StructuredArray`QuantityArrayDump`tmp[[1]]]; StructuredArray`QuantityArrayDump`tmp = {StructuredArray`QuantityArrayDump`tmp[[1]], StructuredArray`QuantityArrayDump`eunits}; ]; If[StructuredArray`QuantityArrayDump`status, {StructuredArray`QuantityArrayDump`eunits, StructuredArray`QuantityArrayDump`euext} = StructuredArray`QuantityArrayDump`tmp; StructuredArray`QuantityArrayDump`newnumbers = StructuredArray`QuantityArrayDump`arrayUnitBlockConvert[StructuredArray`QuantityArrayDump`numbers, StructuredArray`QuantityArrayDump`eunits, StructuredArray`QuantityArrayDump`euext]; StructuredArray`QuantityArrayDump`status = StructuredArray`QuantityArrayDump`arrayQ[StructuredArray`QuantityArrayDump`newnumbers, StructuredArray`QuantityArrayDump`arrayDepth[StructuredArray`QuantityArrayDump`numbers]]; ]; If[StructuredArray`QuantityArrayDump`status, QuantityArray[StructuredArray`QuantityArrayDump`newnumbers, StructuredArray`QuantityArrayDump`reduceArray[StructuredArray`QuantityArrayDump`euext], StructuredArray`QuantityArrayDump`levels], If[$MessageList === {}, Message[UnitConvert::conv, StructuredArray`QuantityArrayDump`uext]]; If[TrueQ[QuantityArray`$NormalizeOnUnitConvertError], Quiet[StructuredArray`QuantityArrayDump`mapThread[UnitConvert, {Normal[StructuredArray`QuantityArrayDump`qa, StructuredArray], StructuredArray`QuantityArrayDump`uext}, -StructuredArray`QuantityArrayDump`arrayDepth[StructuredArray`QuantityArrayDump`uext]]], $Failed]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityArray`QuantityArrayUnitConvert",
	"Statistics`QuantityUtilities`QuantityBinningInformation":"ObjectType: Symbol\nUsage: Statistics`QuantityUtilities`QuantityBinningInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`QuantityUtilities`QuantityBinningInformation[(Statistics`QuantityUtilitiesDump`data_)?Internal`PossibleQuantityQ] := Block[{Statistics`QuantityUtilitiesDump`unit, Statistics`QuantityUtilitiesDump`d}, Statistics`QuantityUtilitiesDump`unit = QuantityUnit[Statistics`QuantityUtilitiesDump`data]; Statistics`QuantityUtilitiesDump`d = QuantityMagnitude[Statistics`QuantityUtilitiesDump`data]; Which[VectorQ[Statistics`QuantityUtilitiesDump`d], {Statistics`QuantityUtilitiesDump`d, {1}, Statistics`QuantityUtilitiesDump`unit}, MatrixQ[Statistics`QuantityUtilitiesDump`d], {Statistics`QuantityUtilitiesDump`d, ConstantArray[1, Last[Dimensions[Statistics`QuantityUtilitiesDump`d]]], Statistics`QuantityUtilitiesDump`unit}]]\nStatistics`QuantityUtilities`QuantityBinningInformation[(Statistics`QuantityUtilitiesDump`data_)?Internal`PossibleQuantityQ, Statistics`QuantityUtilitiesDump`bins_] := Block[{Statistics`QuantityUtilitiesDump`newdata, Statistics`QuantityUtilitiesDump`newspec, Statistics`QuantityUtilitiesDump`unit, Statistics`QuantityUtilitiesDump`u, Statistics`QuantityUtilitiesDump`d, Statistics`QuantityUtilitiesDump`scaler, Statistics`QuantityUtilitiesDump`nd}, Statistics`QuantityUtilitiesDump`u = QuantityUnit[Statistics`QuantityUtilitiesDump`data]; Statistics`QuantityUtilitiesDump`d = QuantityMagnitude[Statistics`QuantityUtilitiesDump`data]; Which[VectorQ[Statistics`QuantityUtilitiesDump`d], Statistics`QuantityUtilitiesDump`newspec = Statistics`QuantityUtilities`BinMagnitudesAndUnit[Statistics`QuantityUtilitiesDump`bins]; If[Length[Statistics`QuantityUtilitiesDump`newspec] === 2 && Internal`LiterallyAbsentQ[Statistics`QuantityUtilitiesDump`newspec, {$Failed, Statistics`QuantityUtilities`BinMagnitudesAndUnit, QuantityUnits`Private`StandardizeQuantities}], Check[{Statistics`QuantityUtilitiesDump`scaler, Statistics`QuantityUtilitiesDump`unit} = Through[{QuantityMagnitude, QuantityUnit}[UnitConvert[Statistics`QuantityUtilitiesDump`u, Last[Statistics`QuantityUtilitiesDump`newspec]]]], Return[$Failed]]; {Statistics`QuantityUtilitiesDump`scaler*Statistics`QuantityUtilitiesDump`d, {First[Statistics`QuantityUtilitiesDump`newspec]}, Statistics`QuantityUtilitiesDump`unit}], MatrixQ[Statistics`QuantityUtilitiesDump`d], Statistics`QuantityUtilitiesDump`newspec = Table[(If[#1 === $Failed, Throw[$Failed], #1] & )[Statistics`QuantityUtilities`BinMagnitudesAndUnit[Statistics`QuantityUtilitiesDump`i]], {Statistics`QuantityUtilitiesDump`i, Statistics`QuantityUtilitiesDump`bins}]; If[Internal`LiterallyAbsentQ[Statistics`QuantityUtilitiesDump`newspec, {$Failed, Statistics`QuantityUtilities`BinMagnitudesAndUnit, QuantityUnits`Private`StandardizeQuantities}], Check[{Statistics`QuantityUtilitiesDump`scaler, Statistics`QuantityUtilitiesDump`unit} = Through[{QuantityMagnitude, QuantityUnit}[(UnitConvert[Statistics`QuantityUtilitiesDump`u, #1] & ) \/@ Statistics`QuantityUtilitiesDump`newspec[[All,2]]]], Return[$Failed]]; Statistics`QuantityUtilitiesDump`newspec = Statistics`QuantityUtilitiesDump`newspec[[All,1]], Throw[$Failed]]; If[Length[Statistics`QuantityUtilitiesDump`d[[1]]] =!= Length[Statistics`QuantityUtilitiesDump`unit], Throw[$Failed]]; Statistics`QuantityUtilitiesDump`nd = Thread[Statistics`QuantityUtilitiesDump`scaler*Transpose[Statistics`QuantityUtilitiesDump`d]]; {Statistics`QuantityUtilitiesDump`nd, Statistics`QuantityUtilitiesDump`newspec, Statistics`QuantityUtilitiesDump`unit}]]\nStatistics`QuantityUtilities`QuantityBinningInformation[(Statistics`QuantityUtilitiesDump`data_)?VectorQ] := Block[{Statistics`QuantityUtilitiesDump`res, Statistics`QuantityUtilitiesDump`v, Statistics`QuantityUtilitiesDump`u}, Statistics`QuantityUtilitiesDump`res = Statistics`QuantityUtilities`GetVectorAndUnit[Statistics`QuantityUtilitiesDump`data]; If[Length[Statistics`QuantityUtilitiesDump`res] === 2, {Statistics`QuantityUtilitiesDump`v, Statistics`QuantityUtilitiesDump`u} = Statistics`QuantityUtilitiesDump`res; {Statistics`QuantityUtilitiesDump`v, {1}, Statistics`QuantityUtilitiesDump`u}, $Failed]]\nStatistics`QuantityUtilities`QuantityBinningInformation[(Statistics`QuantityUtilitiesDump`data_)?VectorQ, Statistics`QuantityUtilitiesDump`bins_] := Block[{Statistics`QuantityUtilitiesDump`newdata, Statistics`QuantityUtilitiesDump`newspec, Statistics`QuantityUtilitiesDump`unit}, Statistics`QuantityUtilitiesDump`newspec = Statistics`QuantityUtilities`BinMagnitudesAndUnit[Statistics`QuantityUtilitiesDump`bins]; If[Length[Statistics`QuantityUtilitiesDump`newspec] === 2 && Internal`LiterallyAbsentQ[Statistics`QuantityUtilitiesDump`newspec, {$Failed, Statistics`QuantityUtilities`BinMagnitudesAndUnit, QuantityUnits`Private`StandardizeQuantities}], {Statistics`QuantityUtilitiesDump`newspec, Statistics`QuantityUtilitiesDump`unit} = Statistics`QuantityUtilitiesDump`newspec; Statistics`QuantityUtilitiesDump`newdata = QuantityUnits`Private`StandardizeQuantities[Statistics`QuantityUtilitiesDump`data, Statistics`QuantityUtilitiesDump`unit]; If[Head[Statistics`QuantityUtilitiesDump`newdata] =!= QuantityUnits`Private`StandardizeQuantities && Statistics`QuantityUtilitiesDump`newdata =!= $Failed, {QuantityMagnitude[Statistics`QuantityUtilitiesDump`newdata], {Statistics`QuantityUtilitiesDump`newspec}, Statistics`QuantityUtilitiesDump`unit}, $Failed], $Failed]]\nStatistics`QuantityUtilities`QuantityBinningInformation[(Statistics`QuantityUtilitiesDump`data_)?MatrixQ] := Block[{Statistics`QuantityUtilitiesDump`res, Statistics`QuantityUtilitiesDump`m, Statistics`QuantityUtilitiesDump`u}, Statistics`QuantityUtilitiesDump`res = Statistics`QuantityUtilities`GetMatrixAndUnits[Statistics`QuantityUtilitiesDump`data]; If[Length[Statistics`QuantityUtilitiesDump`res] === 2, {Statistics`QuantityUtilitiesDump`m, Statistics`QuantityUtilitiesDump`u} = Statistics`QuantityUtilitiesDump`res; {Statistics`QuantityUtilitiesDump`m, ConstantArray[1, Last[Dimensions[Statistics`QuantityUtilitiesDump`data]]], Statistics`QuantityUtilitiesDump`u}, $Failed]]\nStatistics`QuantityUtilities`QuantityBinningInformation[(Statistics`QuantityUtilitiesDump`data_)?MatrixQ, Statistics`QuantityUtilitiesDump`bins_] := Catch[Block[{Statistics`QuantityUtilitiesDump`newdata, Statistics`QuantityUtilitiesDump`newspec, Statistics`QuantityUtilitiesDump`unit}, Statistics`QuantityUtilitiesDump`newspec = Table[(If[#1 === $Failed, Throw[$Failed], #1] & )[Statistics`QuantityUtilities`BinMagnitudesAndUnit[Statistics`QuantityUtilitiesDump`i]], {Statistics`QuantityUtilitiesDump`i, Statistics`QuantityUtilitiesDump`bins}]; If[Internal`LiterallyAbsentQ[Statistics`QuantityUtilitiesDump`newspec, {$Failed, Statistics`QuantityUtilities`BinMagnitudesAndUnit, QuantityUnits`Private`StandardizeQuantities}], Statistics`QuantityUtilitiesDump`unit = Statistics`QuantityUtilitiesDump`newspec[[All,2]]; Statistics`QuantityUtilitiesDump`newspec = Statistics`QuantityUtilitiesDump`newspec[[All,1]], Throw[$Failed]]; If[Length[Statistics`QuantityUtilitiesDump`data[[1]]] =!= Length[Statistics`QuantityUtilitiesDump`unit], Throw[$Failed]]; Statistics`QuantityUtilitiesDump`newdata = MapThread[(If[#1 === $Failed || Head[#1] === QuantityUnits`Private`StandardizeQuantities, Throw[$Failed], #1] & )[QuantityUnits`Private`StandardizeQuantities[#1, #2]] & , {Transpose[Statistics`QuantityUtilitiesDump`data], Statistics`QuantityUtilitiesDump`unit}]; {Transpose[QuantityMagnitude[Statistics`QuantityUtilitiesDump`newdata]], Statistics`QuantityUtilitiesDump`newspec, Statistics`QuantityUtilitiesDump`unit}]]\nStatistics`QuantityUtilities`QuantityBinningInformation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`QuantityUtilities`QuantityBinningInformation",
	"QuantityUnits`QuantityBox":"ObjectType: Symbol\nUsage: QuantityUnits`QuantityBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityUnits`QuantityBox[Quantity[QuantityUnits`Private`n_, (QuantityUnits`Private`unit_)?QuantityUnits`Private`UnitDisplayCacheContainsQ], QuantityUnits`Private`form_:StandardForm] := Quiet[QuantityUnits`Private`getUnitDisplayForm[QuantityUnits`Private`unit, QuantityUnits`Private`n, QuantityUnits`Private`form], {Part::partw}]\nQuantityUnits`QuantityBox[QuantityUnits`Private`q:Quantity[_, _?KnownUnitQ], QuantityUnits`Private`fmt__] := With[{QuantityUnits`Private`quantity = QuantityUnits`Private`sanitizeUnitPart[QuantityUnits`Private`q]}, QuantityUnits`Private`QuantityUnitBox[QuantityUnits`Private`quantity, QuantityUnits`Private`fmt]]\nQuantityUnits`QuantityBox[QuantityUnits`Private`q:Quantity[___], QuantityUnits`Private`fmt__] := Block[{QuantityUnits`Private`$UnitMBF = True}, MakeBoxes[QuantityUnits`Private`q, QuantityUnits`Private`fmt]]\nQuantityUnits`QuantityBox[QuantityUnits`Private`other_, QuantityUnits`Private`fmt__] := MakeBoxes[QuantityUnits`Private`other, QuantityUnits`Private`fmt]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: QuantityUnits`QuantityBox",
	"Statistics`QuantityUtilities`QuantityCovarianceMatrixMagnitude":"ObjectType: Symbol\nUsage: Statistics`QuantityUtilities`QuantityCovarianceMatrixMagnitude\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`QuantityUtilities`QuantityCovarianceMatrixMagnitude[(Statistics`QuantityUtilitiesDump`covm_)?Internal`QuantityMatrixQ, Statistics`QuantityUtilitiesDump`units_] \/; ( !VectorQ[Statistics`QuantityUtilitiesDump`units] && KnownUnitQ[Statistics`QuantityUtilitiesDump`units]) || (VectorQ[Statistics`QuantityUtilitiesDump`units] && Dimensions[Statistics`QuantityUtilitiesDump`covm] === {Length[Statistics`QuantityUtilitiesDump`units], Length[Statistics`QuantityUtilitiesDump`units]}) := Block[{Statistics`QuantityUtilitiesDump`covmm = Statistics`QuantityUtilitiesDump`iQuantityCovMatMagnitude[Statistics`QuantityUtilitiesDump`covm, Statistics`QuantityUtilitiesDump`units]}, Statistics`QuantityUtilitiesDump`covmm]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`QuantityUtilities`QuantityCovarianceMatrixMagnitude",
	"Video`Utilities`QuantityDecompose":"ObjectType: Symbol\nUsage: QuantityDecompose[quantity, {unit$1, unit$2, $$}] decomposes quantity across the unit$i.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`Utilities`QuantityDecompose[(Video`VideoUtilitiesDump`q_)?QuantityQ \/; CompatibleUnitQ[Video`VideoUtilitiesDump`q, \"Seconds\"], Video`VideoUtilitiesDump`opts:OptionsPattern[]] := Video`Utilities`QuantityDecompose[Video`VideoUtilitiesDump`q, {\"Years\", \"Months\", \"Weeks\", \"Days\", \"Hours\", \"Minutes\", \"Seconds\"}, Video`VideoUtilitiesDump`opts]\nVideo`Utilities`QuantityDecompose[Video`VideoUtilitiesDump`q:(Quantity[(Video`VideoUtilitiesDump`s_)?Internal`RealValuedNumericQ, Video`VideoUtilitiesDump`unit_])?QuantityQ, Video`VideoUtilitiesDump`basis_List, Video`VideoUtilitiesDump`opts:OptionsPattern[]] := Catch[Block[{Video`VideoUtilitiesDump`digits, Video`VideoUtilitiesDump`factors, Video`VideoUtilitiesDump`newbasis = Video`VideoUtilitiesDump`basis}, Video`VideoUtilitiesDump`factors = QuantityMagnitude[(Check[UnitConvert[Check[Quantity[#1], Throw[$Failed, Video`Utilities`QuantityDecompose], Quantity::unkunit], Video`VideoUtilitiesDump`unit], Throw[$Failed, Video`Utilities`QuantityDecompose], Quantity::compat] & ) \/@ Video`VideoUtilitiesDump`basis]; If[ !AllTrue[Differences[Video`VideoUtilitiesDump`factors], NonPositive], Message[Video`Utilities`QuantityDecompose::psv, Video`VideoUtilitiesDump`basis]; Throw[$Failed, Video`Utilities`QuantityDecompose]]; Video`VideoUtilitiesDump`digits = Chop[NumberDecompose[Video`VideoUtilitiesDump`s, Video`VideoUtilitiesDump`factors], Replace[OptionValue[\"Threshold\"], Except[Video`VideoUtilitiesDump`n_ \/; Internal`RealValuedNumericQ[Video`VideoUtilitiesDump`n] && NonNegative[Video`VideoUtilitiesDump`n]] -> 0]]; Video`VideoUtilitiesDump`newbasis = Video`VideoUtilitiesDump`basis; If[OptionValue[\"DeleteTrailingZeros\"], Video`VideoUtilitiesDump`digits = Internal`DeleteTrailingZeros[Video`VideoUtilitiesDump`digits]; Video`VideoUtilitiesDump`newbasis = Take[Video`VideoUtilitiesDump`newbasis, Length[Video`VideoUtilitiesDump`digits]]]; If[OptionValue[\"DeleteLeadingZeros\"], Video`VideoUtilitiesDump`digits = Reverse[Internal`DeleteTrailingZeros[Reverse[Video`VideoUtilitiesDump`digits]]]; Video`VideoUtilitiesDump`newbasis = Take[Video`VideoUtilitiesDump`newbasis, -Length[Video`VideoUtilitiesDump`digits]]]; If[Length[Video`VideoUtilitiesDump`digits] > 0, Quantity[MixedMagnitude[Video`VideoUtilitiesDump`digits], MixedUnit[Video`VideoUtilitiesDump`newbasis]], If[Precision[Video`VideoUtilitiesDump`s] === MachinePrecision, Quantity[0., Last[Video`VideoUtilitiesDump`basis]], Quantity[SetAccuracy[0, Accuracy[Video`VideoUtilitiesDump`s]], Last[Video`VideoUtilitiesDump`basis]]]]], Video`Utilities`QuantityDecompose]\nVideo`Utilities`QuantityDecompose[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                                           1\n{DeleteLeadingZeros -> True, DeleteTrailingZeros -> False, Threshold -> ------}\n                                                                        100000\nAttributes: {}\nFullName: Video`Utilities`QuantityDecompose",
	"Statistics`Library`QuantityDistributionQ":"ObjectType: Symbol\nUsage: Statistics`Library`QuantityDistributionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`QuantityDistributionQ[Statistics`QuantityDistributionDump`qd_QuantityDistribution] := System`Private`ValidQ[Statistics`QuantityDistributionDump`qd]\nStatistics`Library`QuantityDistributionQ[Statistics`QuantityDistributionDump`qd:HoldPattern[DataDistribution][Statistics`QuantityDistributionDump`type_, Statistics`QuantityDistributionDump`args_, Statistics`QuantityDistributionDump`dim_, Statistics`QuantityDistributionDump`n_, Statistics`QuantityDistributionDump`un_]] := System`Private`ValidQ[Statistics`QuantityDistributionDump`qd]\nStatistics`Library`QuantityDistributionQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuantityDistributionQ",
	"Statistics`Library`QuantityDistributionToValue":"ObjectType: Symbol\nUsage: Statistics`Library`QuantityDistributionToValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`QuantityDistributionToValue[(Statistics`QuantityDistributionDump`qd_QuantityDistribution)?DistributionParameterQ] := {Statistics`QuantityDistributionDump`qd[\"Distribution\"], Statistics`QuantityDistributionDump`qd[\"Units\"]}\nStatistics`Library`QuantityDistributionToValue[(Statistics`QuantityDistributionDump`dist_)?DistributionParameterQ] := If[Statistics`Library`QuantityDistributionQ[Statistics`QuantityDistributionDump`dist] === True, {QuantityMagnitude[Statistics`QuantityDistributionDump`dist], QuantityUnit[Statistics`QuantityDistributionDump`dist]}, {Statistics`QuantityDistributionDump`dist, \"DimensionlessUnit\"}]\nStatistics`Library`QuantityDistributionToValue[_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuantityDistributionToValue",
	"Statistics`Library`QuantityHypothesisTestInformation":"ObjectType: Symbol\nUsage: Statistics`Library`QuantityHypothesisTestInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`QuantityHypothesisTestInformation[Except[{}, (Statistics`HypothesisTestingUtilitiesDump`data_)?VectorQ], Statistics`HypothesisTestingUtilitiesDump`nullval_] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`nullunits, Statistics`HypothesisTestingUtilitiesDump`nullres, Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`test}, Statistics`HypothesisTestingUtilitiesDump`nullunits = Statistics`HypothesisTestingUtilitiesDump`nullval; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`QuantityUtilities`GetVectorAndUnit[Statistics`HypothesisTestingUtilitiesDump`data]; If[Statistics`HypothesisTestingUtilitiesDump`nullval === Automatic, Statistics`HypothesisTestingUtilitiesDump`nullunits = Statistics`HypothesisTestingUtilitiesDump`nullres = Automatic; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed, Throw[$Failed], {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`nullunits} = Statistics`HypothesisTestingUtilitiesDump`res], Statistics`HypothesisTestingUtilitiesDump`test = CompatibleUnitQ[Quantity[1, Last[Statistics`HypothesisTestingUtilitiesDump`res]], Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Statistics`HypothesisTestingUtilitiesDump`test === False, Message[Quantity::compatu]; Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`nullres = Internal`QuantityToValue[Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Statistics`HypothesisTestingUtilitiesDump`nullres === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`nullres] === Internal`QuantityToValue, Throw[$Failed], {Statistics`HypothesisTestingUtilitiesDump`nullres, Statistics`HypothesisTestingUtilitiesDump`nullunits} = Statistics`HypothesisTestingUtilitiesDump`nullres; Statistics`HypothesisTestingUtilitiesDump`res = QuantityMagnitude[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`nullunits]; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === QuantityMagnitude, Throw[$Failed]]]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`nullres, Statistics`HypothesisTestingUtilitiesDump`nullunits}]]\nStatistics`Library`QuantityHypothesisTestInformation[Except[{{}..}, (Statistics`HypothesisTestingUtilitiesDump`data_)?MatrixQ], Statistics`HypothesisTestingUtilitiesDump`inullval_] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`nullunits, Statistics`HypothesisTestingUtilitiesDump`nullres, Statistics`HypothesisTestingUtilitiesDump`nuvall, Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`i, Statistics`HypothesisTestingUtilitiesDump`dim}, Statistics`HypothesisTestingUtilitiesDump`nullunits = Statistics`HypothesisTestingUtilitiesDump`inullval; If[Statistics`HypothesisTestingUtilitiesDump`inullval === Automatic, Statistics`HypothesisTestingUtilitiesDump`nullunits = Statistics`HypothesisTestingUtilitiesDump`nullres = Automatic; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`QuantityUtilities`GetMatrixAndUnits[Statistics`HypothesisTestingUtilitiesDump`data]; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed, Throw[$Failed], {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`nullunits} = Statistics`HypothesisTestingUtilitiesDump`res]; , Statistics`HypothesisTestingUtilitiesDump`dim = Last[Dimensions[Statistics`HypothesisTestingUtilitiesDump`data]]; If[NumericQ[Statistics`HypothesisTestingUtilitiesDump`inullval] || Internal`PossibleQuantityQ[Statistics`HypothesisTestingUtilitiesDump`inullval], Statistics`HypothesisTestingUtilitiesDump`nuvall = ConstantArray[Statistics`HypothesisTestingUtilitiesDump`inullval, Statistics`HypothesisTestingUtilitiesDump`dim], Statistics`HypothesisTestingUtilitiesDump`nuvall = Statistics`Library`DestructureToList[Statistics`HypothesisTestingUtilitiesDump`inullval]; If[ !ListQ[Statistics`HypothesisTestingUtilitiesDump`nuvall], Throw[$Failed]]; ]; Statistics`HypothesisTestingUtilitiesDump`nullres = Table[Check[Internal`QuantityToValue[Statistics`HypothesisTestingUtilitiesDump`i], Throw[$Failed]], {Statistics`HypothesisTestingUtilitiesDump`i, Statistics`HypothesisTestingUtilitiesDump`nuvall}]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`nullres, {$Failed, Internal`QuantityToValue}], Throw[$Failed], {Statistics`HypothesisTestingUtilitiesDump`nullres, Statistics`HypothesisTestingUtilitiesDump`nullunits} = Transpose[Statistics`HypothesisTestingUtilitiesDump`nullres]; If[ !FreeQ[Statistics`HypothesisTestingUtilitiesDump`nullunits, \"DimensonlessUnit\"], Statistics`HypothesisTestingUtilitiesDump`nullunits = Last[Statistics`QuantityUtilities`GetMatrixAndUnits[Statistics`HypothesisTestingUtilitiesDump`data]]]; Statistics`HypothesisTestingUtilitiesDump`res = Internal`QuantityToValue[Statistics`HypothesisTestingUtilitiesDump`data, TargetUnits -> Statistics`HypothesisTestingUtilitiesDump`nullunits, \"Compatibility\" -> \"Columnwise\"]; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Internal`QuantityToValue, Throw[$Failed], Statistics`HypothesisTestingUtilitiesDump`res = First[Statistics`HypothesisTestingUtilitiesDump`res]]]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`nullres, Statistics`HypothesisTestingUtilitiesDump`nullunits}]] \/; Greater @@ Dimensions[Statistics`HypothesisTestingUtilitiesDump`data]\nStatistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`dsets:{Except[{}, _?VectorQ]..}, Statistics`HypothesisTestingUtilitiesDump`nullval_] := Block[{Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`iListOfVectorOrMatrix[Statistics`HypothesisTestingUtilitiesDump`dsets, Statistics`HypothesisTestingUtilitiesDump`nullval]}, If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`iListOfVectorOrMatrix, $Failed, Statistics`HypothesisTestingUtilitiesDump`res]]\nStatistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`dsets:{Except[{{}..}, _?MatrixQ]..}, Statistics`HypothesisTestingUtilitiesDump`nullval_] := Block[{Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`iListOfVectorOrMatrix[Statistics`HypothesisTestingUtilitiesDump`dsets, Statistics`HypothesisTestingUtilitiesDump`nullval]}, If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`iListOfVectorOrMatrix, $Failed, Statistics`HypothesisTestingUtilitiesDump`res]]\nStatistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data_, Automatic, Statistics`HypothesisTestingUtilitiesDump`nullval_] := Block[{Statistics`HypothesisTestingUtilitiesDump`res}, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation || Length[Statistics`HypothesisTestingUtilitiesDump`res] =!= 3, $Failed, Insert[Statistics`HypothesisTestingUtilitiesDump`res, Automatic, 2]]]\nStatistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data_, (Statistics`HypothesisTestingUtilitiesDump`covar_)?Internal`PossibleQuantityQ, Statistics`HypothesisTestingUtilitiesDump`nullval_] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newsigma, Statistics`HypothesisTestingUtilitiesDump`ud, Statistics`HypothesisTestingUtilitiesDump`test}, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Automatic, Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation || Length[Statistics`HypothesisTestingUtilitiesDump`res] =!= 4, Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`ud = Last[Statistics`HypothesisTestingUtilitiesDump`res]^2; Statistics`HypothesisTestingUtilitiesDump`test = CompatibleUnitQ[Statistics`HypothesisTestingUtilitiesDump`covar, Quantity[1, Statistics`HypothesisTestingUtilitiesDump`ud]]; If[Statistics`HypothesisTestingUtilitiesDump`test === False, Message[Quantity::compatu]; Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`newsigma = Internal`QuantityToValue[Statistics`HypothesisTestingUtilitiesDump`covar, TargetUnits -> Statistics`HypothesisTestingUtilitiesDump`ud]; If[Statistics`HypothesisTestingUtilitiesDump`newsigma === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`newsigma] === Internal`QuantityToValue || Length[Statistics`HypothesisTestingUtilitiesDump`newsigma] =!= 2, Throw[$Failed], Statistics`HypothesisTestingUtilitiesDump`res[[2]] = Statistics`HypothesisTestingUtilitiesDump`newsigma[[1]]; Statistics`HypothesisTestingUtilitiesDump`res]]] \/; Head[Statistics`HypothesisTestingUtilitiesDump`nullval] =!= List\nStatistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data_, (Statistics`HypothesisTestingUtilitiesDump`covar_)?(Internal`LiterallyOccurringQ[#1, {Quantity, QuantityArray}] & ), Statistics`HypothesisTestingUtilitiesDump`nullval_] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`dim = Last[Dimensions[Statistics`HypothesisTestingUtilitiesDump`data]], Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newsigma, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units, Statistics`HypothesisTestingUtilitiesDump`u1, Statistics`HypothesisTestingUtilitiesDump`u2, Statistics`HypothesisTestingUtilitiesDump`test}, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Automatic, Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Statistics`HypothesisTestingUtilitiesDump`res === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation || Length[Statistics`HypothesisTestingUtilitiesDump`res] =!= 4, Throw[$Failed]]; If[Length[Statistics`HypothesisTestingUtilitiesDump`covar] =!= Statistics`HypothesisTestingUtilitiesDump`dim, Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`units = Statistics`HypothesisTestingUtilitiesDump`res[[-1]]; If[StringQ[Statistics`HypothesisTestingUtilitiesDump`units], Statistics`HypothesisTestingUtilitiesDump`units = ConstantArray[Statistics`HypothesisTestingUtilitiesDump`units, Statistics`HypothesisTestingUtilitiesDump`dim]]; Statistics`HypothesisTestingUtilitiesDump`u1 = Flatten[Statistics`HypothesisTestingUtilitiesDump`covar[[1]]]; Statistics`HypothesisTestingUtilitiesDump`u2 = Flatten[Quantity \/@ First[Statistics`HypothesisTestingUtilitiesDump`units]*Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`test = And @@ MapThread[CompatibleUnitQ, {Statistics`HypothesisTestingUtilitiesDump`u1, Statistics`HypothesisTestingUtilitiesDump`u2}]; If[Statistics`HypothesisTestingUtilitiesDump`test === False, Message[Quantity::compatu]; Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`newsigma = MapThread[(If[#1 === $Failed || Head[#1] === UnitConvert, Throw[$Failed], #1] & )[UnitConvert[#1, #2]] & , {Flatten[Statistics`HypothesisTestingUtilitiesDump`covar], Flatten[Outer[Times, Statistics`HypothesisTestingUtilitiesDump`units, Statistics`HypothesisTestingUtilitiesDump`units]]}]; Statistics`HypothesisTestingUtilitiesDump`newsigma = QuantityMagnitude[Statistics`HypothesisTestingUtilitiesDump`newsigma]; Statistics`HypothesisTestingUtilitiesDump`res[[2]] = Partition[Statistics`HypothesisTestingUtilitiesDump`newsigma, Length[Statistics`HypothesisTestingUtilitiesDump`covar]]; Statistics`HypothesisTestingUtilitiesDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuantityHypothesisTestInformation",
	"Internal`QuantityIntervalHandler":"ObjectType: Symbol\nUsage: Internal`QuantityIntervalHandler\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`QuantityIntervalHandler[QuantityUnits`Private`int:{_Quantity?QuantityQ, _Quantity?QuantityQ}..] \/; CompatibleUnitQ[QuantityUnits`Private`int] := With[{QuantityUnits`Private`res = UnitConvert[{QuantityUnits`Private`int}, First[First[{QuantityUnits`Private`int}]]]}, With[{QuantityUnits`Private`m = QuantityMagnitude[QuantityUnits`Private`res], QuantityUnits`Private`u = QuantityUnit[First[First[{QuantityUnits`Private`int}]]]}, Quantity[Interval @@ QuantityUnits`Private`m, QuantityUnits`Private`u]] \/; QuantityUnits`Private`res =!= $Failed]\nInternal`QuantityIntervalHandler[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuantityIntervalHandler",
	"Internal`QuantityMatrixQ":"ObjectType: Symbol\nUsage: Internal`QuantityMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuantityMatrixQ",
	"GIS`QuantityOrArrayQ":"ObjectType: Symbol\nUsage: GIS`QuantityOrArrayQ[x] returns True if x is a Quantity object or an array of them. It returns False otherwise.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`QuantityOrArrayQ[GIS`GeoQuantityDump`x_] := GIS`GeoQuantityDump`NQuantityQ[GIS`GeoQuantityDump`x] || QuantityArray`QuantityArrayQ[GIS`GeoQuantityDump`x] || ArrayQ[GIS`GeoQuantityDump`x, _, GIS`GeoQuantityDump`NQuantityQ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`QuantityOrArrayQ",
	"Statistics`Library`QuantityParser":"ObjectType: Symbol\nUsage: Statistics`Library`QuantityParser\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`QuantityParser[Statistics`QuantityParsingDump`expr_, Statistics`QuantityParsingDump`dist:Distributed[_, _] | (List | And)[Distributed[_, _]..], Statistics`QuantityParsingDump`assumps_] := Module[{Statistics`QuantityParsingDump`res, Statistics`QuantityParsingDump`rules, Statistics`QuantityParsingDump`dist2, Statistics`QuantityParsingDump`expr2, Statistics`QuantityParsingDump`assumps2, Statistics`QuantityParsingDump`m, Statistics`QuantityParsingDump`u}, {Statistics`QuantityParsingDump`rules, Statistics`QuantityParsingDump`dist2} = Statistics`QuantityParsingDump`iParseDistributed[Statistics`QuantityParsingDump`dist]; (Statistics`QuantityParsingDump`assumps2 = Statistics`QuantityParsingDump`assumps \/. Statistics`QuantityParsingDump`rules; Statistics`QuantityParsingDump`assumps2 = Statistics`Library`ToCanonicalQuantityExpression[Statistics`QuantityParsingDump`assumps2]; (Statistics`QuantityParsingDump`expr2 = Statistics`Library`FailOnMessage[Statistics`QuantityParsingDump`expr \/. Statistics`QuantityParsingDump`rules, Unevaluated[{Quantity::compat}]]; If[Statistics`QuantityParsingDump`expr2 === $Failed, Return[$Failed]]; If[MatchQ[Statistics`QuantityParsingDump`expr2, HoldPattern[Conditioned][Statistics`QuantityParsingDump`b_, Statistics`QuantityParsingDump`c_]], Statistics`QuantityParsingDump`expr2 = Statistics`Library`ToCanonicalQuantityExpression \/@ Statistics`QuantityParsingDump`expr2, Statistics`QuantityParsingDump`expr2 = Statistics`Library`ToCanonicalQuantityExpression[Statistics`QuantityParsingDump`expr2]]; ({Statistics`QuantityParsingDump`m, Statistics`QuantityParsingDump`u} = Statistics`QuantityParsingDump`iExprToMagnitudeAndUnit[Statistics`QuantityParsingDump`expr2]; Which[Internal`LiterallyAbsentQ[Statistics`QuantityParsingDump`m, $Failed], Statistics`QuantityParsingDump`res = {Statistics`QuantityParsingDump`m, Statistics`QuantityParsingDump`dist2, Statistics`QuantityParsingDump`assumps2, Statistics`QuantityParsingDump`u}, True, Statistics`QuantityParsingDump`res = {$Failed, $Failed, False, None}]; Statistics`QuantityParsingDump`res) \/; Internal`LiterallyAbsentQ[Statistics`QuantityParsingDump`expr2, $Failed]) \/; Statistics`QuantityParsingDump`assumps2 =!= $Failed) \/; Internal`LiterallyAbsentQ[Statistics`QuantityParsingDump`dist2, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuantityParser",
	"TemporalData`QuantityTemporalDataQ":"ObjectType: Symbol\nUsage: TemporalData`QuantityTemporalDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TemporalData`QuantityTemporalDataQ[(RandomProcesses`TemporalDataDump`td_TemporalData)?TemporalData`TemporalDataQ] := AnyTrue[RandomProcesses`TemporalDataDump`td[\"RawStates\"],  !Developer`PackedArrayQ[#1] && (Internal`QuantityArrayQ[#1, _] || Internal`LiterallyOccurringQ[#1, Quantity]) & ]\nTemporalData`QuantityTemporalDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: TemporalData`QuantityTemporalDataQ",
	"Internal`QuantityToValue":"ObjectType: Symbol\nUsage: Internal`QuantityToValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`QuantityToValue[QuantityUnits`Private`args__] := Block[{DatedUnit}, DatedUnit[QuantityUnits`Private`u_, QuantityUnits`Private`n_Integer] := DatedUnit[QuantityUnits`Private`u, {QuantityUnits`Private`n}]; With[{QuantityUnits`Private`res = QuantityUnits`Private`iQuantityToValue[QuantityUnits`Private`args]}, QuantityUnits`Private`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuantityToValue",
	"QuantityUnits`Private`QuantityUnitValues":"ObjectType: Symbol\nUsage: QuantityUnits`Private`QuantityUnitValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityUnits`Private`QuantityUnitValues[Max] := {HoldPattern[QuantityUnit[Max[System`QuantitityUnitDefinitionDump`x__]]] :> QuantityUnits`Private`RequireSameUnits[{System`QuantitityUnitDefinitionDump`x}]}\nQuantityUnits`Private`QuantityUnitValues[Min] := {HoldPattern[QuantityUnit[Min[System`QuantitityUnitDefinitionDump`x__]]] :> QuantityUnits`Private`RequireSameUnits[{System`QuantitityUnitDefinitionDump`x}]}\nQuantityUnits`Private`QuantityUnitValues[Piecewise] := {HoldPattern[QuantityUnit[System`QuantitityUnitDefinitionDump`pw_Piecewise] \/; System`Private`ValidQ[System`QuantitityUnitDefinitionDump`pw]] :> QuantityUnits`Private`RequireSameUnits[Sequence @@ Block[{System`QuantitityUnitDefinitionDump`cv = Internal`FromPiecewise[System`QuantitityUnitDefinitionDump`pw]}, Transpose[System`QuantitityUnitDefinitionDump`cv]]]}\nQuantityUnits`Private`QuantityUnitValues[Clip] := {HoldPattern[QuantityUnit[Clip[System`QuantitityUnitDefinitionDump`x_]]] :> QuantityUnit[System`QuantitityUnitDefinitionDump`x], HoldPattern[QuantityUnit[Clip[System`QuantitityUnitDefinitionDump`x_, {System`QuantitityUnitDefinitionDump`min_, System`QuantitityUnitDefinitionDump`max_}]]] :> QuantityUnits`Private`RequireSameUnits[{System`QuantitityUnitDefinitionDump`x, System`QuantitityUnitDefinitionDump`min, System`QuantitityUnitDefinitionDump`max}], HoldPattern[QuantityUnit[Clip[System`QuantitityUnitDefinitionDump`x_, {System`QuantitityUnitDefinitionDump`min_, System`QuantitityUnitDefinitionDump`max_}, {System`QuantitityUnitDefinitionDump`vmin_, System`QuantitityUnitDefinitionDump`vmax_}]]] :> QuantityUnits`Private`RequireSameUnits[{System`QuantitityUnitDefinitionDump`x, System`QuantitityUnitDefinitionDump`min, System`QuantitityUnitDefinitionDump`max, System`QuantitityUnitDefinitionDump`vmin, System`QuantitityUnitDefinitionDump`vmax}]}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityUnits`Private`QuantityUnitValues",
	"System`InformationDump`QuantityVariableDimensions":"ObjectType: Symbol\nUsage: System`InformationDump`QuantityVariableDimensions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InformationDump`QuantityVariableDimensions",
	"QuantityUnits`Private`QuantityVariableSantityCheck":"ObjectType: Symbol\nUsage: QuantityUnits`Private`QuantityVariableSantityCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: QuantityUnits`Private`QuantityVariableSantityCheck[QuantityUnits`Private`expr_, QuantityUnits`Private`specified___] := Catch[With[{QuantityUnits`Private`rules = Cases[QuantityUnits`Private`expr, QuantityUnits`Private`q_QuantityVariable :> QuantityUnits`Private`q -> QuantityUnits`Private`QV2Q[QuantityUnits`Private`q], -1]}, If[QuantityUnits`Private`rules === {}, Throw[True, QuantityUnits`Private`$tag]]; If[MatchQ[Quiet[Check[QuantityUnits`Private`SeparateUnits[QuantityUnits`Private`expr \/. QuantityUnits`Private`rules, QuantityUnits`Private`specified], Throw[$Failed, QuantityUnits`Private`$tag], {Quantity::compat}], {Quantity::compat}], _QuantityUnits`Private`SeparateUnits], Throw[$Failed, QuantityUnits`Private`$tag], True]], QuantityUnits`Private`$tag]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityUnits`Private`QuantityVariableSantityCheck",
	"Internal`QuantityVectorQ":"ObjectType: Symbol\nUsage: Internal`QuantityVectorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuantityVectorQ",
	"Histogram`QuartileMedianDeviationFilter":"ObjectType: Symbol\nUsage: Histogram`QuartileMedianDeviationFilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Histogram`QuartileMedianDeviationFilter[Histogram`HistogramListDump`rho_] := Function[Histogram`HistogramListDump`data, Module[{Histogram`HistogramListDump`iq, Histogram`HistogramListDump`md, Histogram`HistogramListDump`f, Histogram`HistogramListDump`lower, Histogram`HistogramListDump`upper}, Histogram`HistogramListDump`iq = InterquartileRange[Histogram`HistogramListDump`data]; Histogram`HistogramListDump`md = MedianDeviation[Histogram`HistogramListDump`data]; Histogram`HistogramListDump`lower = Histogram`HistogramListDump`iq - Histogram`HistogramListDump`rho*Histogram`HistogramListDump`md; Histogram`HistogramListDump`upper = Histogram`HistogramListDump`iq + Histogram`HistogramListDump`rho*Histogram`HistogramListDump`md; Histogram`HistogramListDump`f = Function[Histogram`HistogramListDump`datum, And @@ Thread[Histogram`HistogramListDump`lower <= Histogram`HistogramListDump`datum <= Histogram`HistogramListDump`upper]]; Select[Histogram`HistogramListDump`data, Histogram`HistogramListDump`f]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Histogram`QuartileMedianDeviationFilter",
	"Histogram`QuartileQuartileDeviationFilter":"ObjectType: Symbol\nUsage: Histogram`QuartileQuartileDeviationFilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Histogram`QuartileQuartileDeviationFilter[Histogram`HistogramListDump`rho_] := Function[Histogram`HistogramListDump`data, Module[{Histogram`HistogramListDump`iq, Histogram`HistogramListDump`qd, Histogram`HistogramListDump`f, Histogram`HistogramListDump`lower, Histogram`HistogramListDump`upper}, Histogram`HistogramListDump`iq = InterquartileRange[Histogram`HistogramListDump`data]; Histogram`HistogramListDump`qd = QuartileDeviation[Histogram`HistogramListDump`data]; Histogram`HistogramListDump`lower = Histogram`HistogramListDump`iq - Histogram`HistogramListDump`rho*Histogram`HistogramListDump`qd; Histogram`HistogramListDump`upper = Histogram`HistogramListDump`iq + Histogram`HistogramListDump`rho*Histogram`HistogramListDump`qd; Histogram`HistogramListDump`f = Function[Histogram`HistogramListDump`datum, And @@ Thread[Histogram`HistogramListDump`lower <= Histogram`HistogramListDump`datum <= Histogram`HistogramListDump`upper]]; Select[Histogram`HistogramListDump`data, Histogram`HistogramListDump`f]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Histogram`QuartileQuartileDeviationFilter",
	"System`DateObjectDump`QuartzValueQ":"ObjectType: Symbol\nUsage: System`DateObjectDump`QuartzValueQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`DateObjectDump`QuartzValueQ[System`DateObjectDump`year_Integer, {1}] := TrueQ[1970 <= System`DateObjectDump`year <= 2099]\nSystem`DateObjectDump`QuartzValueQ[System`DateObjectDump`month_Integer, {2}] := TrueQ[1 <= System`DateObjectDump`month <= 12]\nSystem`DateObjectDump`QuartzValueQ[System`DateObjectDump`dayofmonth_Integer, {3}] := TrueQ[1 <= System`DateObjectDump`dayofmonth <= 31]\nSystem`DateObjectDump`QuartzValueQ[System`DateObjectDump`hour_Integer, {4}] := TrueQ[0 <= System`DateObjectDump`hour <= 23]\nSystem`DateObjectDump`QuartzValueQ[System`DateObjectDump`minute_Integer, {5}] := TrueQ[0 <= System`DateObjectDump`minute <= 59]\nSystem`DateObjectDump`QuartzValueQ[System`DateObjectDump`seconds_Integer, {6}] := TrueQ[0 <= System`DateObjectDump`seconds <= 59]\nSystem`DateObjectDump`QuartzValueQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`QuartzValueQ",
	"NIntegrate`QuasiMonteCarlo":"ObjectType: Symbol\nUsage: NIntegrate`QuasiMonteCarlo\nDocumentation: None\nOwnValues: None\nUpValues: NIntegrate`InitializeIntegrationStrategy[NIntegrate`QuasiMonteCarlo, NIntegrate`StrategiesDump`nfs_, NIntegrate`StrategiesDump`ranges_, NIntegrate`StrategiesDump`strOpts_, NIntegrate`StrategiesDump`allOpts_] ^:= Block[{NIntegrate`StrategiesDump`rule, NIntegrate`StrategiesDump`NSubintervals, NIntegrate`StrategiesDump`maxPoints, NIntegrate`StrategiesDump`symbproctime, NIntegrate`StrategiesDump`t}, NIntegrate`StrategiesDump`t = NIntegrate`GetMethodOptionValues[NIntegrate`QuasiMonteCarlo, NIntegrate`StrategiesDump`QuasiMonteCarloProperties, NIntegrate`StrategiesDump`strOpts]; If[NIntegrate`StrategiesDump`t === $Failed, Return[$Failed]]; {NIntegrate`StrategiesDump`NSubintervals, NIntegrate`StrategiesDump`maxPoints, NIntegrate`StrategiesDump`symbproctime} = NIntegrate`StrategiesDump`t; NIntegrate`StrategiesDump`NSubintervals = NIntegrate`StrategiesDump`ParsePartitioning[NIntegrate`StrategiesDump`NSubintervals, NIntegrate`StrategiesDump`ranges, NIntegrate`StrategiesDump`strOpts]; If[NIntegrate`StrategiesDump`NSubintervals === $Failed, Return[$Failed]]; If[NIntegrate`StrategiesDump`MKLPresentQ, NIntegrate`StrategiesDump`rule = {NIntegrate`MonteCarloRule, \"PointGenerator\" -> \"Sobol\"}, NIntegrate`StrategiesDump`rule = {NIntegrate`MonteCarloRule, \"PointGenerator\" -> NIntegrate`Hammersley}]; NIntegrate`StrategiesDump`rule = NIntegrate`MOptionValue[NIntegrate`StrategiesDump`rule, NIntegrate`StrategiesDump`nfs, NIntegrate`StrategiesDump`ranges, NIntegrate`StrategiesDump`allOpts]; If[NIntegrate`StrategiesDump`rule == $Failed, Return[$Failed]]; NIntegrate`MonteCarlo[{NIntegrate`StrategiesDump`rule, {0, Default}, NIntegrate`StrategiesDump`NSubintervals, NIntegrate`StrategiesDump`maxPoints, NIntegrate`StrategiesDump`symbproctime}]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Partitioning -> 1, MaxPoints -> 50000, SymbolicProcessing -> 0}\nAttributes: {}\nFullName: NIntegrate`QuasiMonteCarlo",
	"FindMinimum`QuasiNewton":"ObjectType: Symbol\nUsage: FindMinimum`QuasiNewton\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {StepControl -> LineSearch, StepMemory -> Automatic}\nAttributes: {}\nFullName: FindMinimum`QuasiNewton",
	"Statistics`Library`QuaternionDot":"ObjectType: Symbol\nUsage: Statistics`Library`QuaternionDot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuaternionDot",
	"Statistics`Library`QuaternionTimes":"ObjectType: Symbol\nUsage: Statistics`Library`QuaternionTimes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`QuaternionTimes",
	"StringPattern`Dump`QuestionMark":"ObjectType: Symbol\nUsage: StringPattern`Dump`QuestionMark\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StringPattern`Dump`QuestionMark",
	"RandomProcesses`Library`QueueingProcessEstimate":"ObjectType: Symbol\nUsage: RandomProcesses`Library`QueueingProcessEstimate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`QueueingProcessEstimate[Except[_TemporalData, RandomProcesses`QueueingProcessDump`r_], RandomProcesses`QueueingProcessDump`adist_, RandomProcesses`QueueingProcessDump`sdist_, RandomProcesses`QueueingProcessDump`init_:{}, RandomProcesses`QueueingProcessDump`opts_, RandomProcesses`QueueingProcessDump`Caller_] := Block[{RandomProcesses`QueueingProcessDump`mthd, RandomProcesses`QueueingProcessDump`res1, RandomProcesses`QueueingProcessDump`res2}, RandomProcesses`QueueingProcessDump`mthd = RandomProcesses`QueueingProcessDump`getEstimationMethod[RandomProcesses`QueueingProcessDump`opts, RandomProcesses`QueueingProcessDump`Caller]; RandomProcesses`QueueingProcessDump`res1 = RandomProcesses`QueueingProcessDump`QueueingProcessArrivalEstimate[RandomProcesses`QueueingProcessDump`r, RandomProcesses`QueueingProcessDump`adist, RandomProcesses`QueueingProcessDump`init, RandomProcesses`QueueingProcessDump`mthd, RandomProcesses`QueueingProcessDump`Caller]; (RandomProcesses`QueueingProcessDump`res2 = RandomProcesses`QueueingProcessDump`QueueingProcessServiceEstimate[RandomProcesses`QueueingProcessDump`r, RandomProcesses`QueueingProcessDump`sdist, RandomProcesses`QueueingProcessDump`init, RandomProcesses`QueueingProcessDump`mthd, RandomProcesses`QueueingProcessDump`Caller]; Flatten[{RandomProcesses`QueueingProcessDump`res1, RandomProcesses`QueueingProcessDump`res2}] \/; Internal`LiterallyAbsentQ[RandomProcesses`QueueingProcessDump`res2, $Failed]) \/; Internal`LiterallyAbsentQ[RandomProcesses`QueueingProcessDump`res1, $Failed]]\nRandomProcesses`Library`QueueingProcessEstimate[RandomProcesses`QueueingProcessDump`r_TemporalData, RandomProcesses`QueueingProcessDump`adist_, RandomProcesses`QueueingProcessDump`sdist_, RandomProcesses`QueueingProcessDump`init_:{}, RandomProcesses`QueueingProcessDump`opts_, RandomProcesses`QueueingProcessDump`Caller_] := Block[{RandomProcesses`QueueingProcessDump`res}, RandomProcesses`QueueingProcessDump`res = RandomProcesses`Library`QueueingProcessEstimate[RandomProcesses`QueueingProcessDump`r[\"Path\"], RandomProcesses`QueueingProcessDump`adist, RandomProcesses`QueueingProcessDump`sdist, RandomProcesses`QueueingProcessDump`init, RandomProcesses`QueueingProcessDump`opts, RandomProcesses`QueueingProcessDump`Caller]; RandomProcesses`QueueingProcessDump`res \/; Internal`LiterallyAbsentQ[RandomProcesses`QueueingProcessDump`res, $Failed]]\nRandomProcesses`Library`QueueingProcessEstimate[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`QueueingProcessEstimate",
	"RandomProcesses`Library`QueuePerformanceMeasures":"ObjectType: Symbol\nUsage: RandomProcesses`Library`QueuePerformanceMeasures\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`QueuePerformanceMeasures[RandomProcesses`MMQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a_, RandomProcesses`QueuePeformanceMeasuresDump`s_, RandomProcesses`QueuePeformanceMeasuresDump`c_:1, RandomProcesses`QueuePeformanceMeasuresDump`k_:Infinity, RandomProcesses`QueuePeformanceMeasuresDump`i_:0]] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`util, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`qdes, RandomProcesses`QueuePeformanceMeasuresDump`tput, RandomProcesses`QueuePeformanceMeasuresDump`pres, RandomProcesses`QueuePeformanceMeasuresDump`res, RandomProcesses`QueuePeformanceMeasuresDump`n}, RandomProcesses`QueuePeformanceMeasuresDump`dist = RandomProcesses`MMQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i][Infinity]; RandomProcesses`QueuePeformanceMeasuresDump`util = Which[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity, RandomProcesses`QueuePeformanceMeasuresDump`a\/(RandomProcesses`QueuePeformanceMeasuresDump`c*RandomProcesses`QueuePeformanceMeasuresDump`s), (Element[RandomProcesses`QueuePeformanceMeasuresDump`k, Integers] && RandomProcesses`QueuePeformanceMeasuresDump`k > 0) ||  !NumericQ[RandomProcesses`QueuePeformanceMeasuresDump`k], RandomProcesses`QueuePeformanceMeasuresDump`res = Quiet[Probability[RandomProcesses`QueuePeformanceMeasuresDump`n == RandomProcesses`QueuePeformanceMeasuresDump`k, Distributed[RandomProcesses`QueuePeformanceMeasuresDump`n, QueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i][Infinity]]]]; If[Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`res, Probability], (RandomProcesses`QueuePeformanceMeasuresDump`a\/(RandomProcesses`QueuePeformanceMeasuresDump`c*RandomProcesses`QueuePeformanceMeasuresDump`s))*(1 - RandomProcesses`QueuePeformanceMeasuresDump`res), Missing[\"NotAvailable\"]], True, Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`tput = If[RandomProcesses`QueuePeformanceMeasuresDump`util === Missing[\"NotAvailable\"], Missing[\"NotAvailable\"], RandomProcesses`QueuePeformanceMeasuresDump`util*RandomProcesses`QueuePeformanceMeasuresDump`c*RandomProcesses`QueuePeformanceMeasuresDump`s]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`qdes = Which[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity && RandomProcesses`QueuePeformanceMeasuresDump`i === 0, ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], RandomProcesses`QueuePeformanceMeasuresDump`i === 0, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k]], True, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`i]]]; RandomProcesses`QueuePeformanceMeasuresDump`pres = Grid[{{RandomProcesses`Library`QueuePlot[QueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i], Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"QueueNotation\"], StringJoin[\"M\/M\/\", RandomProcesses`QueuePeformanceMeasuresDump`qdes]}, {Text[\"ArrivalRate\"], RandomProcesses`QueuePeformanceMeasuresDump`a}, {Text[\"ServiceRate\"], RandomProcesses`QueuePeformanceMeasuresDump`s}, {Text[\"UtilizationFactor\"], RandomProcesses`QueuePeformanceMeasuresDump`util}, {Text[\"Throughput\"], RandomProcesses`QueuePeformanceMeasuresDump`tput}, {Text[\"ServiceChannels\"], RandomProcesses`QueuePeformanceMeasuresDump`c}, {Text[\"SystemCapacity\"], RandomProcesses`QueuePeformanceMeasuresDump`k}, {Text[\"InitialState\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePerformanceMeasures[RandomProcesses`MGQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a_, RandomProcesses`QueuePeformanceMeasuresDump`sdist_, RandomProcesses`QueuePeformanceMeasuresDump`c_:1, RandomProcesses`QueuePeformanceMeasuresDump`k_:Infinity, RandomProcesses`QueuePeformanceMeasuresDump`i_:0]] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`util, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`qdes, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`tput, RandomProcesses`QueuePeformanceMeasuresDump`pres1}, RandomProcesses`QueuePeformanceMeasuresDump`dist = RandomProcesses`MGQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i][Infinity]; RandomProcesses`QueuePeformanceMeasuresDump`s = Mean[RandomProcesses`QueuePeformanceMeasuresDump`sdist]; (RandomProcesses`QueuePeformanceMeasuresDump`util = If[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity, (RandomProcesses`QueuePeformanceMeasuresDump`a*RandomProcesses`QueuePeformanceMeasuresDump`s)\/RandomProcesses`QueuePeformanceMeasuresDump`c, Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`tput = If[RandomProcesses`QueuePeformanceMeasuresDump`util === Missing[\"NotAvailable\"], Missing[\"NotAvailable\"], (RandomProcesses`QueuePeformanceMeasuresDump`util*RandomProcesses`QueuePeformanceMeasuresDump`c)\/RandomProcesses`QueuePeformanceMeasuresDump`s]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`qdes = Which[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity && RandomProcesses`QueuePeformanceMeasuresDump`i === 0, ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], RandomProcesses`QueuePeformanceMeasuresDump`i === 0, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k]], True, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`i]]]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[QueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i], Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"QueueNotation\"], StringJoin[\"M\/G\/\", RandomProcesses`QueuePeformanceMeasuresDump`qdes]}, {Text[\"ArrivalRate\"], RandomProcesses`QueuePeformanceMeasuresDump`a}, {Text[\"ServiceRate\"], 1\/RandomProcesses`QueuePeformanceMeasuresDump`s}, {Text[\"UtilizationFactor\"], RandomProcesses`QueuePeformanceMeasuresDump`util}, {Text[\"Throughput\"], RandomProcesses`QueuePeformanceMeasuresDump`tput}, {Text[\"ServiceChannels\"], RandomProcesses`QueuePeformanceMeasuresDump`c}, {Text[\"SystemCapacity\"], RandomProcesses`QueuePeformanceMeasuresDump`k}, {Text[\"InitialState\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]) \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`s, Mean]]\nRandomProcesses`Library`QueuePerformanceMeasures[RandomProcesses`GMQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist_, RandomProcesses`QueuePeformanceMeasuresDump`s_, RandomProcesses`QueuePeformanceMeasuresDump`c_:1, RandomProcesses`QueuePeformanceMeasuresDump`k_:Infinity, RandomProcesses`QueuePeformanceMeasuresDump`i_:0]] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`util, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`qdes, RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`pres1}, RandomProcesses`QueuePeformanceMeasuresDump`dist = RandomProcesses`GMQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i][Infinity]; RandomProcesses`QueuePeformanceMeasuresDump`a = Mean[RandomProcesses`QueuePeformanceMeasuresDump`adist]; (RandomProcesses`QueuePeformanceMeasuresDump`util = If[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity, 1\/(RandomProcesses`QueuePeformanceMeasuresDump`a*RandomProcesses`QueuePeformanceMeasuresDump`c*RandomProcesses`QueuePeformanceMeasuresDump`s), Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`qdes = Which[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity && RandomProcesses`QueuePeformanceMeasuresDump`i === 0, ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], RandomProcesses`QueuePeformanceMeasuresDump`i === 0, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k]], True, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`i]]]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[QueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i], Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"QueueNotation\"], StringJoin[\"G\/M\/\", RandomProcesses`QueuePeformanceMeasuresDump`qdes]}, {Text[\"ArrivalRate\"], 1\/RandomProcesses`QueuePeformanceMeasuresDump`a}, {Text[\"ServiceRate\"], RandomProcesses`QueuePeformanceMeasuresDump`s}, {Text[\"UtilizationFactor\"], RandomProcesses`QueuePeformanceMeasuresDump`util}, {Text[\"ServiceChannels\"], RandomProcesses`QueuePeformanceMeasuresDump`c}, {Text[\"SystemCapacity\"], RandomProcesses`QueuePeformanceMeasuresDump`k}, {Text[\"InitialState\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]) \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`a, Mean]]\nRandomProcesses`Library`QueuePerformanceMeasures[RandomProcesses`PhPhQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist_, RandomProcesses`QueuePeformanceMeasuresDump`sdist_, RandomProcesses`QueuePeformanceMeasuresDump`c_:1, RandomProcesses`QueuePeformanceMeasuresDump`k_:Infinity, RandomProcesses`QueuePeformanceMeasuresDump`i_:0]] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`util, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`qdes, RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`pres1}, RandomProcesses`QueuePeformanceMeasuresDump`dist = RandomProcesses`PhPhQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i][Infinity]; {RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s} = Quiet[{Mean[RandomProcesses`QueuePeformanceMeasuresDump`adist], Mean[RandomProcesses`QueuePeformanceMeasuresDump`sdist]}]; (RandomProcesses`QueuePeformanceMeasuresDump`util = If[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity, RandomProcesses`QueuePeformanceMeasuresDump`s\/(RandomProcesses`QueuePeformanceMeasuresDump`a*RandomProcesses`QueuePeformanceMeasuresDump`c), Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`dist]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`qdes = Which[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity && RandomProcesses`QueuePeformanceMeasuresDump`i === 0, ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], RandomProcesses`QueuePeformanceMeasuresDump`i === 0, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k]], True, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`i]]]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[QueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i], Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"QueueNotation\"], StringJoin[\"G\/G\/\", RandomProcesses`QueuePeformanceMeasuresDump`qdes]}, {Text[\"ArrivalRate\"], 1\/RandomProcesses`QueuePeformanceMeasuresDump`a}, {Text[\"ServiceRate\"], 1\/RandomProcesses`QueuePeformanceMeasuresDump`s}, {Text[\"UtilizationFactor\"], RandomProcesses`QueuePeformanceMeasuresDump`util}, {Text[\"ServiceChannels\"], RandomProcesses`QueuePeformanceMeasuresDump`c}, {Text[\"SystemCapacity\"], RandomProcesses`QueuePeformanceMeasuresDump`k}, {Text[\"InitialState\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]) \/; Internal`LiterallyAbsentQ[{RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s}, Mean]]\nRandomProcesses`Library`QueuePerformanceMeasures[RandomProcesses`GGQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist_, RandomProcesses`QueuePeformanceMeasuresDump`sdist_, RandomProcesses`QueuePeformanceMeasuresDump`c_:1, RandomProcesses`QueuePeformanceMeasuresDump`k_:Infinity, RandomProcesses`QueuePeformanceMeasuresDump`i_:0]] \/; Statistics`Library`DistributionNParameterQ[RandomProcesses`QueuePeformanceMeasuresDump`adist] && Statistics`Library`DistributionNParameterQ[RandomProcesses`QueuePeformanceMeasuresDump`sdist] && Precision[{RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`sdist}] < Infinity := Block[{RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`util, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`qdes, RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`QueuePeformanceMeasuresDump`prec, RandomProcesses`QueuePeformanceMeasuresDump`datag}, RandomProcesses`QueuePeformanceMeasuresDump`dist = RandomProcesses`GGQueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i][Infinity]; {RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s} = Quiet[{Mean[RandomProcesses`QueuePeformanceMeasuresDump`adist], Mean[RandomProcesses`QueuePeformanceMeasuresDump`sdist]}]; (RandomProcesses`QueuePeformanceMeasuresDump`util = If[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity, RandomProcesses`QueuePeformanceMeasuresDump`s\/(RandomProcesses`QueuePeformanceMeasuresDump`a*RandomProcesses`QueuePeformanceMeasuresDump`c), Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`prec = Precision[{RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`sdist}]; RandomProcesses`QueuePeformanceMeasuresDump`datag = Quiet[BlockRandom[RandomFunction[QueueingProcess[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i], {0, 10^4*RandomProcesses`QueuePeformanceMeasuresDump`a}, WorkingPrecision -> RandomProcesses`QueuePeformanceMeasuresDump`prec]]]; (RandomProcesses`QueuePeformanceMeasuresDump`datag = RandomProcesses`QueuePeformanceMeasuresDump`datag[\"Path\"]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`datag]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`datag]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`datag]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`datag]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`qdes = Which[RandomProcesses`QueuePeformanceMeasuresDump`k === Infinity && RandomProcesses`QueuePeformanceMeasuresDump`i === 0, ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], RandomProcesses`QueuePeformanceMeasuresDump`i === 0, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k]], True, StringJoin[ToString[RandomProcesses`QueuePeformanceMeasuresDump`c], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`k], \"\/\", ToString[RandomProcesses`QueuePeformanceMeasuresDump`i]]]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[QueueingProcess[N[RandomProcesses`QueuePeformanceMeasuresDump`adist, RandomProcesses`QueuePeformanceMeasuresDump`prec], N[RandomProcesses`QueuePeformanceMeasuresDump`sdist, RandomProcesses`QueuePeformanceMeasuresDump`prec], RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k, RandomProcesses`QueuePeformanceMeasuresDump`i], Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"QueueNotation\"], StringJoin[\"G\/G\/\", RandomProcesses`QueuePeformanceMeasuresDump`qdes]}, {Text[\"ArrivalRate\"], N[1\/RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`prec]}, {Text[\"ServiceRate\"], N[1\/RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`prec]}, {Text[\"UtilizationFactor\"], N[RandomProcesses`QueuePeformanceMeasuresDump`util, RandomProcesses`QueuePeformanceMeasuresDump`prec]}, {Text[\"ServiceChannels\"], RandomProcesses`QueuePeformanceMeasuresDump`c}, {Text[\"SystemCapacity\"], RandomProcesses`QueuePeformanceMeasuresDump`k}, {Text[\"InitialState\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; Message[QueueProperties::qsimt]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]) \/; Head[RandomProcesses`QueuePeformanceMeasuresDump`datag] =!= RandomFunction) \/; Internal`LiterallyAbsentQ[{RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`s}, Mean] && Quiet[RandomProcesses`QueuePeformanceMeasuresDump`s\/(RandomProcesses`QueuePeformanceMeasuresDump`a*RandomProcesses`QueuePeformanceMeasuresDump`c) < 1]]\nRandomProcesses`Library`QueuePerformanceMeasures[RandomProcesses`QueuePeformanceMeasuresDump`data_] \/; MatrixQ[RandomProcesses`QueuePeformanceMeasuresDump`data] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`mar, RandomProcesses`QueuePeformanceMeasuresDump`msr, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`pres1}, RandomProcesses`QueuePeformanceMeasuresDump`mar = RandomProcesses`Library`MeanQueueArrivalRate[RandomProcesses`QueuePeformanceMeasuresDump`data]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mar] === RandomProcesses`Library`MeanQueueArrivalRate, RandomProcesses`QueuePeformanceMeasuresDump`mar = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`msr = RandomProcesses`Library`MeanQueueServiceRate[RandomProcesses`QueuePeformanceMeasuresDump`data]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`msr] === RandomProcesses`Library`MeanQueueServiceRate, RandomProcesses`QueuePeformanceMeasuresDump`msr = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`data]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`data]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`data]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`data]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[RandomProcesses`QueuePeformanceMeasuresDump`data, Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"DataSource\"], \"Queue\"}, {Text[\"ArrivalRate\"], RandomProcesses`QueuePeformanceMeasuresDump`mar}, {Text[\"ServiceRate\"], RandomProcesses`QueuePeformanceMeasuresDump`msr}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePerformanceMeasures[{QueueingNetworkProcess[RandomProcesses`QueuePeformanceMeasuresDump`a_, RandomProcesses`QueuePeformanceMeasuresDump`r_, RandomProcesses`QueuePeformanceMeasuresDump`s_, RandomProcesses`QueuePeformanceMeasuresDump`c_, RandomProcesses`QueuePeformanceMeasuresDump`k___], RandomProcesses`QueuePeformanceMeasuresDump`i_}] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`qdes, RandomProcesses`QueuePeformanceMeasuresDump`pres1}, RandomProcesses`QueuePeformanceMeasuresDump`dist = QueueingNetworkProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`r, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k][Infinity]; RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`dist, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`qdes = If[Union[RandomProcesses`QueuePeformanceMeasuresDump`a] === {0}, \"Closed\", \"Open\"]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[{QueueingNetworkProcess[RandomProcesses`QueuePeformanceMeasuresDump`a, RandomProcesses`QueuePeformanceMeasuresDump`r, RandomProcesses`QueuePeformanceMeasuresDump`s, RandomProcesses`QueuePeformanceMeasuresDump`c, RandomProcesses`QueuePeformanceMeasuresDump`k], RandomProcesses`QueuePeformanceMeasuresDump`i}, Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"NetworkType\"], RandomProcesses`QueuePeformanceMeasuresDump`qdes}, {Text[\"NodeCount\"], Length[RandomProcesses`QueuePeformanceMeasuresDump`a]}, {Text[\"SelectedNode\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePerformanceMeasures[{RandomProcesses`QueuePeformanceMeasuresDump`data_, RandomProcesses`QueuePeformanceMeasuresDump`i_}] := Block[{RandomProcesses`QueuePeformanceMeasuresDump`mss, RandomProcesses`QueuePeformanceMeasuresDump`mst, RandomProcesses`QueuePeformanceMeasuresDump`mql, RandomProcesses`QueuePeformanceMeasuresDump`mqt, RandomProcesses`QueuePeformanceMeasuresDump`pres1}, RandomProcesses`QueuePeformanceMeasuresDump`mss = RandomProcesses`MeanQueueSystemSize[RandomProcesses`QueuePeformanceMeasuresDump`data, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mss] === RandomProcesses`MeanQueueSystemSize, RandomProcesses`QueuePeformanceMeasuresDump`mss = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mst = RandomProcesses`MeanQueueSystemTime[RandomProcesses`QueuePeformanceMeasuresDump`data, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mst] === RandomProcesses`MeanQueueSystemTime, RandomProcesses`QueuePeformanceMeasuresDump`mst = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mql = RandomProcesses`MeanQueueLength[RandomProcesses`QueuePeformanceMeasuresDump`data, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mql] === RandomProcesses`MeanQueueLength, RandomProcesses`QueuePeformanceMeasuresDump`mql = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`mqt = RandomProcesses`MeanQueueWaitingTime[RandomProcesses`QueuePeformanceMeasuresDump`data, RandomProcesses`QueuePeformanceMeasuresDump`i]; If[Head[RandomProcesses`QueuePeformanceMeasuresDump`mqt] === RandomProcesses`MeanQueueWaitingTime, RandomProcesses`QueuePeformanceMeasuresDump`mqt = Missing[\"NotAvailable\"]]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 = Grid[{{RandomProcesses`Library`QueuePlot[{RandomProcesses`QueuePeformanceMeasuresDump`data, RandomProcesses`QueuePeformanceMeasuresDump`i}, Background -> Lighter[Yellow, 0.85]], SpanFromLeft}, {Text[Style[\"Basic Properties\", Bold]], SpanFromLeft}, {Text[\"DataSource\"], \"QueueingNetwork\"}, {Text[\"NodeCount\"], Length[RandomProcesses`QueuePeformanceMeasuresDump`data[[1,2]]]}, {Text[\"SelectedNode\"], RandomProcesses`QueuePeformanceMeasuresDump`i}, {Text[Style[\"Performance Measures\", Bold]], SpanFromLeft}, {Text[\"MeanSystemSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mss}, {Text[\"MeanSystemTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mst}, {Text[\"MeanQueueSize\"], RandomProcesses`QueuePeformanceMeasuresDump`mql}, {Text[\"MeanQueueTime\"], RandomProcesses`QueuePeformanceMeasuresDump`mqt}}, Frame -> All, Spacings -> {1, 1}, Background -> Lighter[Yellow, 0.85], Alignment -> {Left, Baseline}, BaseStyle -> {FontFamily -> \"Times\"}]; RandomProcesses`QueuePeformanceMeasuresDump`pres1 \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePeformanceMeasuresDump`pres1, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePerformanceMeasures[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`QueuePerformanceMeasures",
	"RandomProcesses`Library`QueuePlot":"ObjectType: Symbol\nUsage: RandomProcesses`Library`QueuePlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Except[HoldPattern[RandomProcesses`Library`QueuePlot][_, ___], HoldPattern[RandomProcesses`Library`QueuePlot][RandomProcesses`QueuePlotDump`expr___]] \/; ArgumentCountQ[RandomProcesses`Library`QueuePlot, Length[{RandomProcesses`QueuePlotDump`expr}], 1, Infinity] := Null\nRandomProcesses`Library`QueuePlot[RandomProcesses`QueuePlotDump`tdata_, RandomProcesses`QueuePlotDump`a___] \/; Head[RandomProcesses`QueuePlotDump`tdata] === TemporalData := Block[{RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`res = RandomProcesses`Library`QueuePlot[RandomProcesses`QueuePlotDump`tdata[\"Path\"], RandomProcesses`QueuePlotDump`a]; RandomProcesses`QueuePlotDump`res \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePlotDump`res, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePlot[{RandomProcesses`QueuePlotDump`tdata_, RandomProcesses`QueuePlotDump`i_}, RandomProcesses`QueuePlotDump`a___] \/; Head[RandomProcesses`QueuePlotDump`tdata] === TemporalData && IntegerQ[RandomProcesses`QueuePlotDump`i] && RandomProcesses`QueuePlotDump`i > 0 := Block[{RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`res = RandomProcesses`Library`QueuePlot[{RandomProcesses`QueuePlotDump`tdata[\"Path\"], RandomProcesses`QueuePlotDump`i}, RandomProcesses`QueuePlotDump`a]; RandomProcesses`QueuePlotDump`res \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePlotDump`res, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePlot[RandomProcesses`MMQueueingProcess[RandomProcesses`QueuePlotDump`lambda_, RandomProcesses`QueuePlotDump`mu_, RandomProcesses`QueuePlotDump`c_:1, RandomProcesses`QueuePlotDump`k_:Infinity, RandomProcesses`QueuePlotDump`i_:0], RandomProcesses`QueuePlotDump`opts___Rule] := Block[{RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`res = RandomProcesses`QueuePlotDump`QueuePrimitive[{{0, 0}, {1, 1}}, RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`c, RandomProcesses`QueuePlotDump`k, RandomProcesses`QueuePlotDump`i, RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Head[RandomProcesses`QueuePlotDump`res] === Graphics]\nRandomProcesses`Library`QueuePlot[RandomProcesses`MGQueueingProcess[RandomProcesses`QueuePlotDump`lambda_, RandomProcesses`QueuePlotDump`sdist_, RandomProcesses`QueuePlotDump`c_:1, RandomProcesses`QueuePlotDump`k_:Infinity, RandomProcesses`QueuePlotDump`i_:0], RandomProcesses`QueuePlotDump`opts___Rule] := Block[{RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`mu = Mean[RandomProcesses`QueuePlotDump`sdist]; (RandomProcesses`QueuePlotDump`res = RandomProcesses`QueuePlotDump`QueuePrimitive[{{0, 0}, {1, 1}}, RandomProcesses`QueuePlotDump`lambda, 1\/RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`c, RandomProcesses`QueuePlotDump`k, RandomProcesses`QueuePlotDump`i, RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Head[RandomProcesses`QueuePlotDump`res] === Graphics) \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePlotDump`mu, Mean]]\nRandomProcesses`Library`QueuePlot[RandomProcesses`GMQueueingProcess[RandomProcesses`QueuePlotDump`adist_, RandomProcesses`QueuePlotDump`mu_, RandomProcesses`QueuePlotDump`c_:1, RandomProcesses`QueuePlotDump`k_:Infinity, RandomProcesses`QueuePlotDump`i_:0], RandomProcesses`QueuePlotDump`opts___Rule] := Block[{RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`lambda = Mean[RandomProcesses`QueuePlotDump`adist]; (RandomProcesses`QueuePlotDump`res = RandomProcesses`QueuePlotDump`QueuePrimitive[{{0, 0}, {1, 1}}, 1\/RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`c, RandomProcesses`QueuePlotDump`k, RandomProcesses`QueuePlotDump`i, RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Head[RandomProcesses`QueuePlotDump`res] === Graphics) \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePlotDump`lambda, Mean]]\nRandomProcesses`Library`QueuePlot[RandomProcesses`GGQueueingProcess[RandomProcesses`QueuePlotDump`adist_, RandomProcesses`QueuePlotDump`sdist_, RandomProcesses`QueuePlotDump`c_:1, RandomProcesses`QueuePlotDump`k_:Infinity, RandomProcesses`QueuePlotDump`i_:0], RandomProcesses`QueuePlotDump`opts___Rule] := Block[{RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`lambda = Mean[RandomProcesses`QueuePlotDump`adist]; RandomProcesses`QueuePlotDump`mu = Mean[RandomProcesses`QueuePlotDump`sdist]; (RandomProcesses`QueuePlotDump`res = RandomProcesses`QueuePlotDump`QueuePrimitive[{{0, 0}, {1, 1}}, 1\/RandomProcesses`QueuePlotDump`lambda, 1\/RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`c, RandomProcesses`QueuePlotDump`k, RandomProcesses`QueuePlotDump`i, RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Head[RandomProcesses`QueuePlotDump`res] === Graphics) \/; Internal`LiterallyAbsentQ[{RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu}, Mean]]\nRandomProcesses`Library`QueuePlot[RandomProcesses`QueuePlotDump`data_, RandomProcesses`QueuePlotDump`opts___Rule] \/; MatrixQ[RandomProcesses`QueuePlotDump`data] := Block[{RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu, RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`lambda = RandomProcesses`Library`MeanQueueArrivalRate[RandomProcesses`QueuePlotDump`data]; RandomProcesses`QueuePlotDump`mu = RandomProcesses`Library`MeanQueueServiceRate[RandomProcesses`QueuePlotDump`data]; (RandomProcesses`QueuePlotDump`res = RandomProcesses`QueuePlotDump`QueuePrimitive[{{0, 0}, {1, 1}}, RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu, 1, Infinity, RandomProcesses`QueuePlotDump`data[[1,2]], RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Head[RandomProcesses`QueuePlotDump`res] === Graphics) \/; Internal`LiterallyAbsentQ[{RandomProcesses`QueuePlotDump`lambda, RandomProcesses`QueuePlotDump`mu}, $Failed]]\nRandomProcesses`Library`QueuePlot[{QueueingNetworkProcess[RandomProcesses`QueuePlotDump`a_, RandomProcesses`QueuePlotDump`r_, RandomProcesses`QueuePlotDump`s_, RandomProcesses`QueuePlotDump`c_, RandomProcesses`QueuePlotDump`k___], RandomProcesses`QueuePlotDump`i_}, RandomProcesses`QueuePlotDump`opts___Rule] \/; VectorQ[RandomProcesses`QueuePlotDump`a] && VectorQ[RandomProcesses`QueuePlotDump`s] && VectorQ[RandomProcesses`QueuePlotDump`c] && Length[RandomProcesses`QueuePlotDump`a] == Length[RandomProcesses`QueuePlotDump`s] == Length[RandomProcesses`QueuePlotDump`c] && IntegerQ[RandomProcesses`QueuePlotDump`i] && Inequality[0, Less, RandomProcesses`QueuePlotDump`i, LessEqual, Length[RandomProcesses`QueuePlotDump`a]] := Block[{RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`res = RandomProcesses`Library`QueuePlot[RandomProcesses`MMQueueingProcess[RandomProcesses`QueuePlotDump`a[[RandomProcesses`QueuePlotDump`i]], RandomProcesses`QueuePlotDump`s[[RandomProcesses`QueuePlotDump`i]], RandomProcesses`QueuePlotDump`c[[RandomProcesses`QueuePlotDump`i]]], RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePlotDump`res, RandomProcesses`Library`QueuePlot]]\nRandomProcesses`Library`QueuePlot[{RandomProcesses`QueuePlotDump`r_, (RandomProcesses`QueuePlotDump`i_Integer)?Positive}, RandomProcesses`QueuePlotDump`opts___Rule] := Block[{RandomProcesses`QueuePlotDump`dims, RandomProcesses`QueuePlotDump`t, RandomProcesses`QueuePlotDump`sdata, RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`dims = Dimensions[RandomProcesses`QueuePlotDump`r]; (RandomProcesses`QueuePlotDump`t = RandomProcesses`QueuePlotDump`r[[All,1]]; (RandomProcesses`QueuePlotDump`sdata = RandomProcesses`QueuePlotDump`r[[All,2]]; (RandomProcesses`QueuePlotDump`sdata = Table[{RandomProcesses`QueuePlotDump`t[[RandomProcesses`QueuePlotDump`j]], RandomProcesses`QueuePlotDump`sdata[[RandomProcesses`QueuePlotDump`j,RandomProcesses`QueuePlotDump`i]]}, {RandomProcesses`QueuePlotDump`j, Length[RandomProcesses`QueuePlotDump`t]}]; RandomProcesses`QueuePlotDump`res = RandomProcesses`Library`QueuePlot[RandomProcesses`QueuePlotDump`sdata, RandomProcesses`QueuePlotDump`opts]; RandomProcesses`QueuePlotDump`res \/; Internal`LiterallyAbsentQ[RandomProcesses`QueuePlotDump`res, RandomProcesses`Library`QueuePlot]) \/; MatrixQ[RandomProcesses`QueuePlotDump`sdata] && MatchQ[Dimensions[RandomProcesses`QueuePlotDump`sdata], {RandomProcesses`QueuePlotDump`m_, RandomProcesses`QueuePlotDump`n_} \/; RandomProcesses`QueuePlotDump`n >= RandomProcesses`QueuePlotDump`i]) \/; VectorQ[RandomProcesses`QueuePlotDump`t]) \/; MatchQ[RandomProcesses`QueuePlotDump`dims, {RandomProcesses`QueuePlotDump`n_, 2}]]\nRandomProcesses`Library`QueuePlot[RandomProcesses`QueuePlotDump`proc:QueueingNetworkProcess[(RandomProcesses`QueuePlotDump`a_)?VectorQ, (RandomProcesses`QueuePlotDump`r_)?MatrixQ, (RandomProcesses`QueuePlotDump`s_)?VectorQ, (RandomProcesses`QueuePlotDump`c_)?VectorQ, RandomProcesses`QueuePlotDump`k___]] \/; (Element[RandomProcesses`QueuePlotDump`k, Integers] && RandomProcesses`QueuePlotDump`k > 0) || RandomProcesses`QueuePlotDump`k == Infinity := Block[{RandomProcesses`QueuePlotDump`len, RandomProcesses`QueuePlotDump`nzero, RandomProcesses`QueuePlotDump`nzeroe, RandomProcesses`QueuePlotDump`res}, RandomProcesses`QueuePlotDump`len = Length[RandomProcesses`QueuePlotDump`a]; RandomProcesses`QueuePlotDump`nzero = Apply[UndirectedEdge, Select[Tuples[{Range[RandomProcesses`QueuePlotDump`len], Range[RandomProcesses`QueuePlotDump`len]}], #1[[1]] <= #1[[2]] && RandomProcesses`QueuePlotDump`r[[#1[[1]],#1[[2]]]] =!= 0 & ], 1]; RandomProcesses`QueuePlotDump`nzeroe = RandomProcesses`QueuePlotDump`nzero \/. {UndirectedEdge[RandomProcesses`QueuePlotDump`p_, RandomProcesses`QueuePlotDump`q_] :> UndirectedEdge[RandomProcesses`QueuePlotDump`p, RandomProcesses`QueuePlotDump`q] -> {RandomProcesses`QueuePlotDump`r[[RandomProcesses`QueuePlotDump`p,RandomProcesses`QueuePlotDump`q]], RandomProcesses`QueuePlotDump`r[[RandomProcesses`QueuePlotDump`q,RandomProcesses`QueuePlotDump`p]]}}; RandomProcesses`QueuePlotDump`res = Graph[RandomProcesses`QueuePlotDump`nzero, VertexShape -> Table[RandomProcesses`QueuePlotDump`i -> RandomProcesses`Library`QueuePlot[RandomProcesses`QueuePlotDump`proc, RandomProcesses`QueuePlotDump`i], {RandomProcesses`QueuePlotDump`i, RandomProcesses`QueuePlotDump`len}], VertexSize -> {1\/4, 1\/4}, EdgeLabels -> RandomProcesses`QueuePlotDump`nzeroe, EdgeStyle -> Black]; RandomProcesses`QueuePlotDump`res \/; Head[RandomProcesses`QueuePlotDump`res] === Graph]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AspectRatio -> Automatic, Background -> None, Frame -> False, FrameLabel -> None, FrameStyle -> {}, ImageSize -> Automatic, LabelStyle -> {}, PlotLabel -> None, PlotStyle -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Library`QueuePlot",
	"Parallel`Developer`QueueRun":"ObjectType: Symbol\nUsage: Parallel`Developer`QueueRun\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`QueueRun",
	"RandomProcesses`QueueSystemTimeDistribution":"ObjectType: Symbol\nUsage: RandomProcesses`QueueSystemTimeDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`QueueSystemTimeDistribution",
	"RandomProcesses`QueueWaitingTimeDistribution":"ObjectType: Symbol\nUsage: RandomProcesses`QueueWaitingTimeDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`QueueWaitingTimeDistribution",
	"Integrate`QuickLookUp":"ObjectType: Symbol\nUsage: Integrate`QuickLookUp\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Integrate`QuickLookUp[(Integrate`QuickLookUpDump`h_.)*(Integrate`QuickLookUpDump`f_)[Integrate`QuickLookUpDump`x_]^(Integrate`QuickLookUpDump`n_)*(Integrate`QuickLookUpDump`g_)[Integrate`QuickLookUpDump`z_], Integrate`QuickLookUpDump`y_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`$c, Integrate`QuickLookUpDump`ans, Integrate`QuickLookUpDump`m}, Integrate`QuickLookUpDump`$c = Integrate`QuickLookUpDump`TableC1[Integrate`QuickLookUpDump`h, Integrate`QuickLookUpDump`x, Integrate`QuickLookUpDump`y]; Integrate`QuickLookUpDump`m = Integrate`QuickLookUpDump`n + 1; Integrate`QuickLookUpDump`$c*Integrate`QuickLookUpDump`ans \/; (Integrate`QuickLookUpDump`ans = Switch[{Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`g}, {Sin, Sin}, (Sin[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Sin[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m, {Cos, Sin}, -((Cos[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Cos[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m), {Sin, Cos}, (Cos[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Sin[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m, {Cos, Cos}, (Sin[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Cos[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m, {Sinh, Sinh}, (Sinh[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Sinh[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m, {Cosh, Sinh}, (Cosh[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Cosh[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m, {Sinh, Cosh}, (Cosh[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Sinh[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m, {Cosh, Cosh}, (Sinh[Integrate`QuickLookUpDump`m*Integrate`QuickLookUpDump`x]*Cosh[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m]; Head[Integrate`QuickLookUpDump`ans] =!= Switch &&  !Integrate`QuickLookUpDump`$c === Integrate`Fail)] \/;  !Internal`DependsOnQ[Integrate`QuickLookUpDump`n, Integrate`QuickLookUpDump`y] && Together[Integrate`QuickLookUpDump`z - (Integrate`QuickLookUpDump`n + 2)*Integrate`QuickLookUpDump`x] === 0 && If[((Integrate`QuickLookUpDump`x === 2*Integrate`QuickLookUpDump`z || Integrate`QuickLookUpDump`x === Integrate`QuickLookUpDump`z) && Integrate`QuickLookUpDump`n === -2^(-1)) || (IntegerQ[Integrate`QuickLookUpDump`n] && Integrate`QuickLookUpDump`n > 0 && Integrate`QuickLookUpDump`nfuncHead[Integrate`QuickLookUpDump`x\/Integrate`QuickLookUpDump`z]), False, True]\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`h_.)*(Integrate`QuickLookUpDump`g:Sin | Cos | Tan | Cot | Sec | Csc | Sinh | Cosh | Tanh | Coth | Sech | Csch)[Integrate`QuickLookUpDump`x_]^(Integrate`QuickLookUpDump`n_), Integrate`QuickLookUpDump`y_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`c}, Integrate`QuickLookUpDump`c = Integrate`QuickLookUpDump`TableC1[Integrate`QuickLookUpDump`h, Integrate`QuickLookUpDump`g[Integrate`QuickLookUpDump`x], Integrate`QuickLookUpDump`y]; (Integrate`QuickLookUpDump`c*Integrate`QuickLookUpDump`g[Integrate`QuickLookUpDump`x]^(Integrate`QuickLookUpDump`n + 1))\/(Integrate`QuickLookUpDump`n + 1) \/; Integrate`QuickLookUpDump`c =!= Integrate`Fail] \/; Integrate`QuickLookUpDump`n =!= -1 && (PolynomialQ[Integrate`QuickLookUpDump`x, Integrate`QuickLookUpDump`y] && Exponent[Integrate`QuickLookUpDump`x, Integrate`QuickLookUpDump`y] > 0) &&  !Internal`DependsOnQ[Integrate`QuickLookUpDump`n, Integrate`QuickLookUpDump`y] &&  !FreeQ[Integrate`QuickLookUpDump`h, (Sin | Cos | Tan | Cot | Sec | Csc | Sinh | Cosh | Tanh | Coth | Sech | Csch)[Integrate`QuickLookUpDump`x]]\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`h_.)*Sin[Integrate`QuickLookUpDump`x_]^(Integrate`QuickLookUpDump`n_)*(Integrate`QuickLookUpDump`g_)[Integrate`QuickLookUpDump`z_], Integrate`QuickLookUpDump`y_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`$c, Integrate`QuickLookUpDump`ans, Integrate`QuickLookUpDump`m}, Integrate`QuickLookUpDump`$c = Integrate`QuickLookUpDump`TableC1[Integrate`QuickLookUpDump`h, Integrate`QuickLookUpDump`x, Integrate`QuickLookUpDump`y]; Integrate`QuickLookUpDump`m = Integrate`QuickLookUpDump`n + 1; Integrate`QuickLookUpDump`$c*Integrate`QuickLookUpDump`ans \/; (Integrate`QuickLookUpDump`ans = If[Integrate`QuickLookUpDump`g === Cos, -((Sin[Integrate`QuickLookUpDump`m*(Pi\/2 - Integrate`QuickLookUpDump`x)]*Sin[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m), (Cos[Integrate`QuickLookUpDump`m*(Pi\/2 - Integrate`QuickLookUpDump`x)]*Sin[Integrate`QuickLookUpDump`x]^Integrate`QuickLookUpDump`m)\/Integrate`QuickLookUpDump`m];  !Integrate`QuickLookUpDump`$c === Integrate`Fail)] \/;  !Internal`DependsOnQ[Integrate`QuickLookUpDump`n, Integrate`QuickLookUpDump`y] && (Integrate`QuickLookUpDump`g === Sin || Integrate`QuickLookUpDump`g === Cos) && PossibleZeroQ[Integrate`QuickLookUpDump`z - Pi*(Integrate`QuickLookUpDump`n\/2 + 1) + (Integrate`QuickLookUpDump`n + 2)*Integrate`QuickLookUpDump`x] &&  !Internal`DependsOnQ[Integrate`QuickLookUpDump`n, Integrate`QuickLookUpDump`y] && If[((Integrate`QuickLookUpDump`x === 2*Integrate`QuickLookUpDump`z || Integrate`QuickLookUpDump`x === Integrate`QuickLookUpDump`z) && Integrate`QuickLookUpDump`n === -2^(-1)) || (IntegerQ[Integrate`QuickLookUpDump`n] && Integrate`QuickLookUpDump`n > 0 && Integrate`QuickLookUpDump`nfuncHead[Integrate`QuickLookUpDump`x\/Integrate`QuickLookUpDump`z]), False, True]\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`g:ArcCos | ArcCosh | ArcCsc | ArcCsch | ArcSec | ArcSech | ArcSin | ArcSinh | ArcTan | ArcTanh | ArcCot | ArcCoth)[Integrate`QuickLookUpDump`z_], Integrate`QuickLookUpDump`y_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`ex, Integrate`QuickLookUpDump`ans}, Integrate`QuickLookUpDump`ex = Integrate`QuickLookUpDump`y*D[Integrate`QuickLookUpDump`g[Integrate`QuickLookUpDump`z], Integrate`QuickLookUpDump`y] \/. {(Integrate`QuickLookUpDump`u_)^(Integrate`QuickLookUpDump`v_) :> Together[Integrate`QuickLookUpDump`u]^Integrate`QuickLookUpDump`v}; Integrate`QuickLookUpDump`dbgPrintQT[\"ex prior to IBP \", InputForm[Integrate`QuickLookUpDump`ex]]; If[FreeQ[Integrate`QuickLookUpDump`ex, (Integrate`QuickLookUpDump`h:ArcCos | ArcCosh | ArcCsc | ArcCsch | ArcSec | ArcSech | ArcSin | ArcSinh | ArcTan | ArcTanh | ArcCot | ArcCoth)[Integrate`QuickLookUpDump`w_] \/; Internal`DependsOnQ[Integrate`QuickLookUpDump`w, Integrate`QuickLookUpDump`y]], Integrate`QuickLookUpDump`ans = Integrate`QuickLookUpDump`y*Integrate`QuickLookUpDump`g[Integrate`QuickLookUpDump`z] - Integrate[Integrate`QuickLookUpDump`ex, Integrate`QuickLookUpDump`y], Integrate`QuickLookUpDump`ans = Integrate`Fail]; Integrate`QuickLookUpDump`dbgPrintQT[\"ans after IBP \", InputForm[Integrate`QuickLookUpDump`ans]]; Integrate`QuickLookUpDump`ans \/; FreeQ[Integrate`QuickLookUpDump`ans, Integrate`Fail | Integrate]] \/; Internal`DependsOnQ[Integrate`QuickLookUpDump`z, Integrate`QuickLookUpDump`y]\nIntegrate`QuickLookUp[Integrate`QuickLookUpDump`f_, Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`int = Integrate`QuickLookUpDump`QuickSpec[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x]}, Integrate`QuickLookUpDump`int \/; FreeQ[Integrate`QuickLookUpDump`int, Integrate`Fail]] \/;  !FreeQ[Integrate`QuickLookUpDump`f, Slot] || Or @@ ( !FreeQ[Integrate`QuickLookUpDump`f, #1] & ) \/@ {EllipticE, EllipticK, BesselJ, BesselY}\nIntegrate`QuickLookUp[Integrate`QuickLookUpDump`f_, Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`t, Integrate`QuickLookUpDump`fu, Integrate`QuickLookUpDump`si, Integrate`QuickLookUpDump`sih, Integrate`QuickLookUpDump`co, Integrate`QuickLookUpDump`e, Integrate`QuickLookUpDump`in, Integrate`QuickLookUpDump`j}, Integrate`QuickLookUpDump`dbgPrintQT[\"QuickLookUp \", InputForm[Integrate`QuickLookUpDump`f]]; Integrate`QuickLookUpDump`t = If[Head[Integrate`QuickLookUpDump`f] === Times, List @@ Integrate`QuickLookUpDump`f, {Integrate`QuickLookUpDump`f}]; Integrate`QuickLookUpDump`fu[Integrate`QuickLookUpDump`z_, Integrate`QuickLookUpDump`w_] := Times @@ Select[Integrate`QuickLookUpDump`t, MemberQ[{Integrate`QuickLookUpDump`z, Integrate`QuickLookUpDump`w}, Head[#1] | Head[#1] === Power && Head[#1[[1]]]] & ]; {Integrate`QuickLookUpDump`si, Integrate`QuickLookUpDump`sih} = {Integrate`QuickLookUpDump`fu[Sin, Cos], Integrate`QuickLookUpDump`fu[Sinh, Cosh]}; Integrate`QuickLookUpDump`co = Times @@ Select[Integrate`QuickLookUpDump`t,  !Internal`DependsOnQ[#1, Integrate`QuickLookUpDump`x] & ]; Integrate`QuickLookUpDump`e = Expand[(Integrate`QuickLookUpDump`f*TrigReduce[Integrate`QuickLookUpDump`si]*TrigReduce[Integrate`QuickLookUpDump`sih \/. {Sinh[Integrate`QuickLookUpDump`s_] :> I*Sin[Integrate`QuickLookUpDump`p[Integrate`QuickLookUpDump`s]], Cosh[Integrate`QuickLookUpDump`t_] :> Cos[Integrate`QuickLookUpDump`q[Integrate`QuickLookUpDump`t]]}])\/(Integrate`QuickLookUpDump`co*Integrate`QuickLookUpDump`si*Integrate`QuickLookUpDump`sih) \/. {Integrate`QuickLookUpDump`p[Integrate`QuickLookUpDump`s_] :> -(I*Integrate`QuickLookUpDump`s), Integrate`QuickLookUpDump`q[Integrate`QuickLookUpDump`t_] :> I*Integrate`QuickLookUpDump`t}]; Integrate`QuickLookUpDump`dbgPrintQT[\"QuickLookUp \", {Head[Integrate`QuickLookUpDump`e], Length[Integrate`QuickLookUpDump`e], InputForm[List @@ Integrate`QuickLookUpDump`e]}]; If[Head[Integrate`QuickLookUpDump`e] =!= Plus, Return[Integrate`Fail]]; Integrate`QuickLookUpDump`in = 0; For[Integrate`QuickLookUpDump`j = 1, Integrate`QuickLookUpDump`j <= Length[Integrate`QuickLookUpDump`e], Integrate`QuickLookUpDump`j++, Integrate`QuickLookUpDump`in1 = Integrate[Integrate`QuickLookUpDump`e[[Integrate`QuickLookUpDump`j]], Integrate`QuickLookUpDump`x]; If[ !FreeQ[Integrate`QuickLookUpDump`in1, Integrate], Return[Integrate`Fail]]; Integrate`QuickLookUpDump`in = Integrate`QuickLookUpDump`in + Integrate`QuickLookUpDump`in1; ]; Integrate`QuickLookUpDump`dbgPrintQT[\"QuickLookUp res \", InputForm[Integrate`QuickLookUpDump`in]]; If[FreeQ[Integrate`QuickLookUpDump`in, Integrate | Integrate`Fail], Integrate`QuickLookUpDump`co*Integrate`QuickLookUpDump`in, Integrate`Fail]] \/; Integrate`QuickLookUpDump`trigtrue[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[((Integrate`QuickLookUpDump`a_) + (Integrate`QuickLookUpDump`b_.)*(Integrate`QuickLookUpDump`x_)^(Integrate`QuickLookUpDump`n_))^(Integrate`QuickLookUpDump`p_), Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; IntegerQ[Integrate`QuickLookUpDump`n] && (Abs[Integrate`QuickLookUpDump`n] =!= 2 ||  !TrueQ[Positive[Integrate`QuickLookUpDump`a]]) &&  !Internal`DependsOnQ[{Integrate`QuickLookUpDump`a, Integrate`QuickLookUpDump`b}, Integrate`QuickLookUpDump`x] && PossibleZeroQ[Integrate`QuickLookUpDump`n*Integrate`QuickLookUpDump`p + 1] := Integrate[1\/(1 - Integrate`QuickLookUpDump`b*Integrate`QuickLookUpDump`x^Integrate`QuickLookUpDump`n), Integrate`QuickLookUpDump`x] \/. Integrate`QuickLookUpDump`x -> Integrate`QuickLookUpDump`x\/(Integrate`QuickLookUpDump`a + Integrate`QuickLookUpDump`b*Integrate`QuickLookUpDump`x^Integrate`QuickLookUpDump`n)^(1\/Integrate`QuickLookUpDump`n)\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`e_)^(Integrate`QuickLookUpDump`k_), Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] := Module[{Integrate`QuickLookUpDump`x1, Integrate`QuickLookUpDump`x2, Integrate`QuickLookUpDump`ro}, Integrate`QuickLookUpDump`ro = Roots[Integrate`QuickLookUpDump`e == 0, Integrate`QuickLookUpDump`x, Cubics -> False, Quartics -> False]; If[ !FreeQ[Integrate`QuickLookUpDump`ro, Root] && Integrate`QuickLookUpDump`alg == 1, Integrate`QuickLookUpDump`ro = RootReduce[Integrate`QuickLookUpDump`ro]]; {Integrate`QuickLookUpDump`x1, Integrate`QuickLookUpDump`x2, Integrate`QuickLookUpDump`x3} = List @@ (#1[[2]] & ) \/@ Integrate`QuickLookUpDump`ro; (Integrate`QuickLookUpDump`e^Integrate`QuickLookUpDump`k*Integrate`QuickLookUpDump`quickAlgeb1[1, Integrate`QuickLookUpDump`x1 - Integrate`QuickLookUpDump`x2, Integrate`QuickLookUpDump`k, 1, Integrate`QuickLookUpDump`x1 - Integrate`QuickLookUpDump`x3, Integrate`QuickLookUpDump`k, Integrate`QuickLookUpDump`k, 1, Integrate`QuickLookUpDump`x - Integrate`QuickLookUpDump`x1])\/((Integrate`QuickLookUpDump`x - Integrate`QuickLookUpDump`x1)^Integrate`QuickLookUpDump`k*(Integrate`QuickLookUpDump`x - Integrate`QuickLookUpDump`x2)^Integrate`QuickLookUpDump`k*(Integrate`QuickLookUpDump`x - Integrate`QuickLookUpDump`x3)^Integrate`QuickLookUpDump`k)] \/; PolynomialQ[Integrate`QuickLookUpDump`e, Integrate`QuickLookUpDump`x] && Exponent[Integrate`QuickLookUpDump`e, Integrate`QuickLookUpDump`x] === 3 &&  !Internal`DependsOnQ[Integrate`QuickLookUpDump`k, Integrate`QuickLookUpDump`x] &&  !IntegerQ[2*Integrate`QuickLookUpDump`k]\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`f_)^(Integrate`QuickLookUpDump`n_Integer)?Positive, Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] := Integrate`QuickLookUpDump`f^(Integrate`QuickLookUpDump`n + 1)\/((Integrate`QuickLookUpDump`n + 1)*Coefficient[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x]) \/; PolynomialQ[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x] && Exponent[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x] === 1\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`c_.)*(Integrate`QuickLookUpDump`x_)*((Integrate`QuickLookUpDump`b_.) + (Integrate`QuickLookUpDump`a_.)*(Integrate`QuickLookUpDump`x_)^2)^(Integrate`QuickLookUpDump`e_), Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] := (Integrate`QuickLookUpDump`c*(Integrate`QuickLookUpDump`b + Integrate`QuickLookUpDump`a*Integrate`QuickLookUpDump`x^2)^(1 + Integrate`QuickLookUpDump`e))\/(2*Integrate`QuickLookUpDump`a + 2*Integrate`QuickLookUpDump`a*Integrate`QuickLookUpDump`e) \/;  !Internal`DependsOnQ[{Integrate`QuickLookUpDump`a, Integrate`QuickLookUpDump`b, Integrate`QuickLookUpDump`c, Integrate`QuickLookUpDump`e}, Integrate`QuickLookUpDump`x] && ( !NumericQ[Integrate`QuickLookUpDump`e] || Integrate`QuickLookUpDump`e != -1)\nIntegrate`QuickLookUp[RealAbs[Integrate`QuickLookUpDump`expr_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; Internal`LinearQ[Integrate`QuickLookUpDump`expr, Integrate`QuickLookUpDump`x] := (Integrate`QuickLookUpDump`expr*RealAbs[Integrate`QuickLookUpDump`expr])\/(2*Coefficient[Integrate`QuickLookUpDump`expr, Integrate`QuickLookUpDump`x])\nIntegrate`QuickLookUp[RealSign[Integrate`QuickLookUpDump`expr_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; Internal`LinearQ[Integrate`QuickLookUpDump`expr, Integrate`QuickLookUpDump`x] := RealAbs[Integrate`QuickLookUpDump`expr]\/Coefficient[Integrate`QuickLookUpDump`expr, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[HeunGPrime[Integrate`QuickLookUpDump`a_, Integrate`QuickLookUpDump`q_, Integrate`QuickLookUpDump`alpha_, Integrate`QuickLookUpDump`beta_, Integrate`QuickLookUpDump`gamma_, Integrate`QuickLookUpDump`delta_, Integrate`QuickLookUpDump`x_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; FreeQ[{Integrate`QuickLookUpDump`a, Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`beta, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta}, Integrate`QuickLookUpDump`x] := HeunG[Integrate`QuickLookUpDump`a, Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`beta, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[HeunCPrime[Integrate`QuickLookUpDump`q_, Integrate`QuickLookUpDump`alpha_, Integrate`QuickLookUpDump`gamma_, Integrate`QuickLookUpDump`delta_, Integrate`QuickLookUpDump`eps_, Integrate`QuickLookUpDump`x_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; FreeQ[{Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps}, Integrate`QuickLookUpDump`x] := HeunC[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[HeunDPrime[Integrate`QuickLookUpDump`q_, Integrate`QuickLookUpDump`alpha_, Integrate`QuickLookUpDump`gamma_, Integrate`QuickLookUpDump`delta_, Integrate`QuickLookUpDump`eps_, Integrate`QuickLookUpDump`x_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; FreeQ[{Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps}, Integrate`QuickLookUpDump`x] := HeunD[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[HeunBPrime[Integrate`QuickLookUpDump`q_, Integrate`QuickLookUpDump`alpha_, Integrate`QuickLookUpDump`gamma_, Integrate`QuickLookUpDump`delta_, Integrate`QuickLookUpDump`eps_, Integrate`QuickLookUpDump`x_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; FreeQ[{Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps}, Integrate`QuickLookUpDump`x] := HeunB[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[HeunTPrime[Integrate`QuickLookUpDump`q_, Integrate`QuickLookUpDump`alpha_, Integrate`QuickLookUpDump`gamma_, Integrate`QuickLookUpDump`delta_, Integrate`QuickLookUpDump`eps_, Integrate`QuickLookUpDump`x_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; FreeQ[{Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps}, Integrate`QuickLookUpDump`x] := HeunT[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`alpha, Integrate`QuickLookUpDump`gamma, Integrate`QuickLookUpDump`delta, Integrate`QuickLookUpDump`eps, Integrate`QuickLookUpDump`x]\nIntegrate`QuickLookUp[Integrate`QuickLookUpDump`f_, Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; Sum`$SumDisableTableLookUp === False && 5 < LeafCount[Integrate`QuickLookUpDump`f] < 80 && Quiet[ !Sum`SumRationalQ[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x]] &&  !MatchQ[1\/Integrate`QuickLookUpDump`f, Sqrt[Integrate`QuickLookUpDump`p_] \/; PolynomialQ[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] && (Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] === 2 || Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] === 4)] &&  !MatchQ[Integrate`QuickLookUpDump`f, Sqrt[Integrate`QuickLookUpDump`p_] \/; PolynomialQ[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] && (Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] === 2 || Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] === 4)] && FreeQ[Integrate`QuickLookUpDump`f, Sinh[Integrate`QuickLookUpDump`m_ \/;  !Internal`LinearQ[Integrate`QuickLookUpDump`m, Integrate`QuickLookUpDump`x]]] && FreeQ[Integrate`QuickLookUpDump`f, Cosh[Integrate`QuickLookUpDump`m_ \/;  !Internal`LinearQ[Integrate`QuickLookUpDump`m, Integrate`QuickLookUpDump`x]]] && FreeQ[Integrate`QuickLookUpDump`f, Abs[Integrate`QuickLookUpDump`m_ \/;  !FreeQ[Integrate`QuickLookUpDump`m, Integrate`QuickLookUpDump`x]]] &&  !MatchQ[Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x^(Integrate`QuickLookUpDump`m_)*Sqrt[Integrate`QuickLookUpDump`p_] \/; PolynomialQ[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] && Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] === 2 && IntegerQ[Integrate`QuickLookUpDump`m] && Positive[Integrate`QuickLookUpDump`m]] := Block[{Integrate`QuickLookUpDump`res, Integrate`QuickLookUpDump`f1, Integrate`QuickLookUpDump`x1}, Integrate`QuickLookUpDump`dbgPrintQT[\"IndefiniteTableLookup input {f, x, alg}=  \", {Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x, Integrate`QuickLookUpDump`alg}]; If[Head[Integrate`QuickLookUpDump`x] === Symbol, Integrate`QuickLookUpDump`x1 = Integrate`QuickLookUpDump`x, Integrate`QuickLookUpDump`x1 = Unique[Integrate`QuickLookUpDump`x1, Temporary]]; {Integrate`QuickLookUpDump`f1, Integrate`QuickLookUpDump`x1} = {Integrate`QuickLookUpDump`f, Integrate`QuickLookUpDump`x} \/. {Integrate`QuickLookUpDump`x -> Integrate`QuickLookUpDump`x1}; Integrate`QuickLookUpDump`res = TimeConstrained[Quiet[Check[Integrate`IndefiniteTableLookup[Integrate`QuickLookUpDump`f1, Integrate`QuickLookUpDump`x1], $Failed]], 5, $Failed]; Integrate`QuickLookUpDump`res = Integrate`QuickLookUpDump`res \/. Integrate`QuickLookUpDump`x1 -> Integrate`QuickLookUpDump`x; Integrate`QuickLookUpDump`dbgPrintQT[\"IndefiniteTableLookup result = \", Integrate`QuickLookUpDump`res]; Integrate`QuickLookUpDump`res \/; FreeQ[Integrate`QuickLookUpDump`res, $Failed | Integrate`IndefiniteTableLookup | DirectedInfinity | Indeterminate | ArcSin[Sin[Integrate`QuickLookUpDump`m_ \/;  !FreeQ[Integrate`QuickLookUpDump`m, Integrate`QuickLookUpDump`x]]] | AppellF1 | If | Defer]]\nIntegrate`QuickLookUp[(Integrate`QuickLookUpDump`p_)\/Sqrt[Integrate`QuickLookUpDump`q_], Integrate`QuickLookUpDump`x_, Integrate`QuickLookUpDump`alg_] \/; PolynomialQ[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`x] && 5 < Exponent[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`x] < 17 && PolynomialQ[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] && 1 < Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x] < 8 := Block[{Integrate`QuickLookUpDump`pexp, Integrate`QuickLookUpDump`qexp, Integrate`QuickLookUpDump`qf, Integrate`QuickLookUpDump`c, Integrate`QuickLookUpDump`res}, Integrate`QuickLookUpDump`pexp = Exponent[Integrate`QuickLookUpDump`p, Integrate`QuickLookUpDump`x]; Integrate`QuickLookUpDump`qexp = Exponent[Integrate`QuickLookUpDump`q, Integrate`QuickLookUpDump`x]; (Integrate`QuickLookUpDump`qf = Expand[PowerExpand[Factor[Sqrt[-Integrate`QuickLookUpDump`q + 1]]]]; (Integrate`QuickLookUpDump`c = Together[Integrate`QuickLookUpDump`p\/D[Integrate`QuickLookUpDump`qf, Integrate`QuickLookUpDump`x]]; (Integrate`QuickLookUpDump`res = Integrate`QuickLookUpDump`c*ArcSin[Integrate`QuickLookUpDump`qf]; Integrate`QuickLookUpDump`res \/; Simplify[D[Integrate`QuickLookUpDump`res, Integrate`QuickLookUpDump`x] - Integrate`QuickLookUpDump`p\/Sqrt[Integrate`QuickLookUpDump`q]] === 0) \/; FreeQ[Integrate`QuickLookUpDump`c, Integrate`QuickLookUpDump`x]) \/; PolynomialQ[Integrate`QuickLookUpDump`qf, Integrate`QuickLookUpDump`x] && Together[1 - Integrate`QuickLookUpDump`qf^2 - Integrate`QuickLookUpDump`q] === 0) \/; Integrate`QuickLookUpDump`qexp === 2*Integrate`QuickLookUpDump`pexp + 2]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`QuickLookUp",
	"Region`Mesh`Quickselect":"ObjectType: Symbol\nUsage: Region`Mesh`Quickselect\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`Quickselect",
	"Simplify`QuickSimplify":"ObjectType: Symbol\nUsage: Simplify`QuickSimplify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`QuickSimplify",
	"Optimization`SolutionData`QuietEvaluate":"ObjectType: Symbol\nUsage: Optimization`SolutionData`QuietEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Optimization`SolutionData`QuietEvaluate[Optimization`OptimizationSolutionDataDump`optSolData_, Optimization`OptimizationSolutionDataDump`e_] := Module[{Optimization`OptimizationSolutionDataDump`res, Optimization`OptimizationSolutionDataDump`messages, Optimization`OptimizationSolutionDataDump`time, Optimization`OptimizationSolutionDataDump`tag}, Block[{$Messages}, Optimization`OptimizationSolutionDataDump`time = First[AbsoluteTiming[Optimization`OptimizationSolutionDataDump`messages = Last[Reap[Optimization`OptimizationSolutionDataDump`res = Internal`HandlerBlock[{\"MessageTextFilter\", Sow[#3, Optimization`OptimizationSolutionDataDump`tag] & }, Optimization`OptimizationSolutionDataDump`e], Optimization`OptimizationSolutionDataDump`tag]]; ]]]; Optimization`OptimizationSolutionDataDump`optSolData[\"UpdateProperty\"[\"EvaluationTiming\" -> Optimization`OptimizationSolutionDataDump`time]]; If[Optimization`OptimizationSolutionDataQ[Optimization`OptimizationSolutionDataDump`res], Optimization`OptimizationSolutionDataDump`messages = {Optimization`OptimizationSolutionDataDump`messages, Optimization`OptimizationSolutionDataDump`res[\"Messages\"]}; ]; Optimization`OptimizationSolutionDataDump`messages = Flatten[{Optimization`OptimizationSolutionDataDump`messages}]; Optimization`OptimizationSolutionDataDump`optSolData[\"UpdateMessages\"[Optimization`OptimizationSolutionDataDump`messages]]; Optimization`OptimizationSolutionDataDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Optimization`SolutionData`QuietEvaluate",
	"Internal`QuietStatus":"ObjectType: Symbol\nUsage: Internal`QuietStatus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuietStatus",
	"BoxForm`Quote":"None",
	"Internal`QuotelessInputFormString":"ObjectType: Symbol\nUsage: Internal`QuotelessInputFormString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`QuotelessInputFormString",
	"ResourceFunctionHelpers`QuotientRule":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`QuotientRule\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`QuotientRule[ResourceFunctionHelpers`DerivativeRules`Private`e_Plus, ResourceFunctionHelpers`DerivativeRules`Private`x_Symbol, ResourceFunctionHelpers`DerivativeRules`Private`opts:OptionsPattern[]] := Plus @@ ResourceFunctionHelpers`DerivativeRules`Private`iderivRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x, \"quotient\", ResourceFunctionHelpers`DerivativeRules`Private`opts]\nResourceFunctionHelpers`QuotientRule[ResourceFunctionHelpers`DerivativeRules`Private`e_, ResourceFunctionHelpers`DerivativeRules`Private`x_, ResourceFunctionHelpers`DerivativeRules`Private`opts:OptionsPattern[]] \/; ResourceFunctionHelpers`DerivativeRules`Private`quotientRuleQ[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x] := ResourceFunctionHelpers`DerivativeRules`Private`iderivRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x, \"quotient\", ResourceFunctionHelpers`DerivativeRules`Private`opts]\nResourceFunctionHelpers`QuotientRule[ResourceFunctionHelpers`DerivativeRules`Private`e_, ResourceFunctionHelpers`DerivativeRules`Private`x_Symbol, OptionsPattern[]] := With[{ResourceFunctionHelpers`DerivativeRules`Private`res = ResourceFunctionHelpers`DerivativeRules`Private`quotientRule[ResourceFunctionHelpers`DerivativeRules`Private`e, ResourceFunctionHelpers`DerivativeRules`Private`x]}, ResourceFunctionHelpers`DerivativeRules`Private`res \/; FreeQ[ResourceFunctionHelpers`DerivativeRules`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PrintRule -> False, PrintNapkin -> False, InactiveInnerDerivatives -> False}\nAttributes: {HoldFirst}\nFullName: ResourceFunctionHelpers`QuotientRule",
	"Image`TransformsDump`R":"ObjectType: Symbol\nUsage: Image`TransformsDump`R\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`R",
	"System`LanguageEnhancements`R":"ObjectType: Symbol\nUsage: System`LanguageEnhancements`R\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LanguageEnhancements`R",
	"ResourceFunctionHelpers`RadialDistributionFunctionList":"ObjectType: Symbol\nUsage: RadialDistributionFunctionList[list] returns the radial distribution (pair correlation) function of a list of coordinates.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`RadialDistributionFunctionList[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1_, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLength_, Optional[(ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth_)?NumericQ, 0.005], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`opts:OptionsPattern[]] := Module[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`compiledFunction, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coordsFlag = False, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dimFlag = False, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`numericFlag = False, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`sizeFlag = False}, If[MatchQ[OptionValue[\"ReferenceCoordinates\"], \"Self\"], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2 = ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1; ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords = ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1; , ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2 = OptionValue[\"ReferenceCoordinates\"]; ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords = Join[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2]; ]; If[(MatrixQ[#1] && FreeQ[#1, {}] && Length[Tally[N[#1]]] > 1 & )[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coordsFlag = True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RadialDistributionFunctionList::coords]]; If[Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords[[1]]] <= 3, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dimFlag = True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RadialDistributionFunctionList::dim]]; If[NumericQ[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLength] && NumericQ[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth] && AllTrue[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords, NumericQ, 2] && FreeQ[Hold[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`combinedCoords, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLength, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth}], _Complex | HoldPattern[I]], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`numericFlag = True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RadialDistributionFunctionList::numeric]]; If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLength > ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`sizeFlag = True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RadialDistributionFunctionList::size]]; (ResourceFunctionHelpers`RadialDistributionFunctionList`Private`compiledFunction = With[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`filteredOpts = FilterRules[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`opts}, Options[Compile]]}, Compile[{{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal, _Real, 2}, {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2Internal, _Real, 2}, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal}, Module[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`nPts1 = Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`nPts2 = Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2Internal], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dim = Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal[[1]]], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`p2, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`volumetricNormalization = {}}, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`p2 = ResourceFunctionHelpers`RadialDistributionFunctionList`Private`nPts2\/ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal^ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dim; {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr} = Transpose[Table[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i, 0}, {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i, 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal, 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal}]]; If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal == ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2Internal, Do[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r = Norm[Mod[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal[[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i]] - ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal[[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`j]], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal, -0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal]]; If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r <= 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr[[Ceiling[If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r == 0, 1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r\/ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth]]]] = ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr[[Ceiling[If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r == 0, 1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r\/ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth]]]] + 2]; , {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i, 1, Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal] - 1}, {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`j, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i + 1, Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal]}], Do[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r = Norm[Mod[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal[[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i]] - ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2Internal[[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`j]], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal, -0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal]]; If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r <= 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLengthInternal, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr[[Ceiling[If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r == 0, 1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r\/ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth]]]] = ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr[[Ceiling[If[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r == 0, 1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`r\/ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth]]]] + 1]; , {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`i, 1, Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1Internal]}, {ResourceFunctionHelpers`RadialDistributionFunctionList`Private`j, 1, Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2Internal]}]]; Which[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dim == 1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`volumetricNormalization = ConstantArray[2*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal, Length[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList]], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dim == 2, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`volumetricNormalization = Pi*((ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList + 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal)^2 - (ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList - 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal)^2), ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dim == 3, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`volumetricNormalization = (4*Pi*((ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList + 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal)^3 - (ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList - 0.5*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidthInternal)^3))\/3]; ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr = ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr\/ResourceFunctionHelpers`RadialDistributionFunctionList`Private`nPts1\/(ResourceFunctionHelpers`RadialDistributionFunctionList`Private`p2*ResourceFunctionHelpers`RadialDistributionFunctionList`Private`volumetricNormalization); Transpose[{ResourceFunctionHelpers`RadialDistributionFunctionList`Private`rList, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`gr}]], ResourceFunctionHelpers`RadialDistributionFunctionList`Private`filteredOpts]]; ResourceFunctionHelpers`RadialDistributionFunctionList`Private`compiledFunction[ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords1, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coords2, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`boxLength, ResourceFunctionHelpers`RadialDistributionFunctionList`Private`binWidth]) \/; ResourceFunctionHelpers`RadialDistributionFunctionList`Private`coordsFlag && ResourceFunctionHelpers`RadialDistributionFunctionList`Private`dimFlag && ResourceFunctionHelpers`RadialDistributionFunctionList`Private`numericFlag && ResourceFunctionHelpers`RadialDistributionFunctionList`Private`sizeFlag]\nSubValues: None\nDefaultValues: SyntaxInformation[ResourceFunctionHelpers`RadialDistributionFunctionList] = {\"ArgumentsPattern\" -> {_, _, _., OptionsPattern[]}}\nNValues: None\nFormatValues: None\nOptions: {CompilationOptions -> Automatic, CompilationTarget :> $CompilationTarget, Parallelization -> Automatic, RuntimeAttributes -> {}, RuntimeOptions -> Automatic, ReferenceCoordinates -> Self}\nAttributes: {}\nFullName: ResourceFunctionHelpers`RadialDistributionFunctionList",
	"SparseArray`RadialDrawing":"ObjectType: Symbol\nUsage: SparseArray`RadialDrawing\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {LayerSizeFunction -> Automatic, Root -> Automatic, Rotation -> 0}\nAttributes: {}\nFullName: SparseArray`RadialDrawing",
	"StochasticCalculus`RadialOrnsteinUhlenbeckProcess":"ObjectType: Symbol\nUsage: StochasticCalculus`RadialOrnsteinUhlenbeckProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StochasticCalculus`RadialOrnsteinUhlenbeckProcess",
	"Charting`RadialScale":"ObjectType: Symbol\nUsage: Charting`RadialScale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`RadialScale[Charting`AxisDump`t_, {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`RadialScale, {\"Line\", {Charting`AxisDump`min*{Cos[Charting`AxisDump`t], Sin[Charting`AxisDump`t]} -> Charting`AxisDump`min, Charting`AxisDump`max*{Cos[Charting`AxisDump`t], Sin[Charting`AxisDump`t]} -> Charting`AxisDump`max}}, {Charting`AxisDump`min, Charting`AxisDump`max}, Charting`AxisDump`opts]\nCharting`RadialScale[Charting`AxisDump`t_, {Charting`AxisDump`scalemin_, Charting`AxisDump`scalemax_} -> {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`RadialScale, {\"Line\", {Charting`AxisDump`min*{Cos[Charting`AxisDump`t], Sin[Charting`AxisDump`t]} -> Charting`AxisDump`scalemin, Charting`AxisDump`max*{Cos[Charting`AxisDump`t], Sin[Charting`AxisDump`t]} -> Charting`AxisDump`scalemax}}, {Charting`AxisDump`scalemin, Charting`AxisDump`scalemax}, Charting`AxisDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Charting`AxisDump`DivisionAlignment -> Automatic, Charting`AxisDump`DivisionAnnotations -> None, Charting`AxisDump`DivisionLabelAlignment -> Automatic, Charting`AxisDump`DivisionLabels -> Automatic, Charting`AxisDump`DivisionLabelStyle -> Automatic, Charting`AxisDump`DivisionMarker -> Automatic, Charting`AxisDump`DivisionSizes -> Automatic, Charting`AxisDump`DivisionStyle -> Automatic, LabelingFunction -> Automatic, Method -> Automatic, Charting`AxisDump`ScaleAppearance -> Automatic, ScaleDivisions -> Automatic, Charting`AxisDump`ScaleFactor -> None, Charting`AxisDump`ScaleLabels -> Automatic, Charting`AxisDump`ScaleLabelStyle -> Automatic, ScaleRanges -> {}, ScaleRangeStyle -> Automatic, Charting`AxisDump`ScaleStyle -> Automatic, ScalingFunctions -> None}\nAttributes: {}\nFullName: Charting`RadialScale",
	"Internal`RadicalMemberQ":"ObjectType: Symbol\nUsage: Internal`RadicalMemberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RadicalMemberQ",
	"Integrate`Radicals":"None",
	"Solve`RadVar":"ObjectType: Symbol\nUsage: Solve`RadVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldAll}\nFullName: Solve`RadVar",
	"Statistics`MCMC`RafteryLewisDiagnostic":"ObjectType: Symbol\nUsage: Statistics`MCMC`RafteryLewisDiagnostic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`MCMC`RafteryLewisDiagnostic[Statistics`MCMCSamplersDump`sample:_?VectorQ | None, Statistics`MCMCSamplersDump`q_:0.025, Statistics`MCMCSamplersDump`r_:0.005, Statistics`MCMCSamplersDump`s_:0.95, Statistics`MCMCSamplersDump`eps_:0.001] := Module[{Statistics`MCMCSamplersDump`nmin, Statistics`MCMCSamplersDump`zlist, Statistics`MCMCSamplersDump`g2, Statistics`MCMCSamplersDump`k, Statistics`MCMCSamplersDump`alpha, Statistics`MCMCSamplersDump`beta, Statistics`MCMCSamplersDump`m, Statistics`MCMCSamplersDump`n, Statistics`MCMCSamplersDump`phir2}, Statistics`MCMCSamplersDump`phir2 = ((Sqrt[2]*InverseErf[Statistics`MCMCSamplersDump`s])\/Statistics`MCMCSamplersDump`r)^2; Statistics`MCMCSamplersDump`nmin = Ceiling[Statistics`MCMCSamplersDump`phir2*Statistics`MCMCSamplersDump`q*(1 - Statistics`MCMCSamplersDump`q)]; If[Statistics`MCMCSamplersDump`sample === None, Return[Statistics`MCMCSamplersDump`nmin]]; Statistics`MCMCSamplersDump`len = Length[Statistics`MCMCSamplersDump`sample]; If[Statistics`MCMCSamplersDump`len < Max[Statistics`MCMCSamplersDump`nmin, 3], Return[$Failed]]; Statistics`MCMCSamplersDump`zlist = Quantile[Statistics`MCMCSamplersDump`sample, Statistics`MCMCSamplersDump`q] - Statistics`MCMCSamplersDump`sample; Statistics`MCMCSamplersDump`zlist = Developer`ToPackedArray[Unitize[Sign[Statistics`MCMCSamplersDump`zlist] + 1]]; Statistics`MCMCSamplersDump`g2 = Statistics`MCMCSamplersDump`g2stat[Statistics`MCMCSamplersDump`zlist]; Statistics`MCMCSamplersDump`k = 0; If[Statistics`MCMCSamplersDump`g2 < Log[Statistics`MCMCSamplersDump`len - 2], Statistics`MCMCSamplersDump`k = 1, Do[Statistics`MCMCSamplersDump`g2 = Statistics`MCMCSamplersDump`g2stat[Take[Statistics`MCMCSamplersDump`zlist, {1, Statistics`MCMCSamplersDump`len, Statistics`MCMCSamplersDump`j}]]; If[Statistics`MCMCSamplersDump`g2 < Log[Internal`GetIteratorLength[{Null, 1, Statistics`MCMCSamplersDump`len, Statistics`MCMCSamplersDump`j}] - 2], Statistics`MCMCSamplersDump`k = Statistics`MCMCSamplersDump`j; Break[]], {Statistics`MCMCSamplersDump`j, 2, Quotient[Statistics`MCMCSamplersDump`len, 4]}]]; If[Statistics`MCMCSamplersDump`k == 0, Return[$Failed]]; {Statistics`MCMCSamplersDump`alpha, Statistics`MCMCSamplersDump`beta} = Statistics`MCMCSamplersDump`markovTransition[Take[Statistics`MCMCSamplersDump`zlist, {1, Statistics`MCMCSamplersDump`len, Statistics`MCMCSamplersDump`k}]]; With[{Statistics`MCMCSamplersDump`ab = Statistics`MCMCSamplersDump`alpha + Statistics`MCMCSamplersDump`beta}, If[Statistics`MCMCSamplersDump`ab >= 1, Statistics`MCMCSamplersDump`m = 0, Statistics`MCMCSamplersDump`m = Ceiling[Log[(Statistics`MCMCSamplersDump`ab*Statistics`MCMCSamplersDump`eps)\/Max[Statistics`MCMCSamplersDump`alpha, Statistics`MCMCSamplersDump`beta]]\/Log[1 - Statistics`MCMCSamplersDump`ab]]]; Statistics`MCMCSamplersDump`n = Ceiling[((2 - Statistics`MCMCSamplersDump`ab)*Statistics`MCMCSamplersDump`alpha*Statistics`MCMCSamplersDump`beta*Statistics`MCMCSamplersDump`phir2)\/Statistics`MCMCSamplersDump`ab^3]; ]; {Statistics`MCMCSamplersDump`k, Statistics`MCMCSamplersDump`m, Statistics`MCMCSamplersDump`n}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`MCMC`RafteryLewisDiagnostic",
	"Charting`RaggedDimensions":"ObjectType: Symbol\nUsage: Charting`RaggedDimensions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`RaggedDimensions[System`GroupedPlotDump`d_] := System`GroupedPlotDump`datadimensions[System`GroupedPlotDump`d]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`RaggedDimensions",
	"GIS`RaggedDot":"ObjectType: Symbol\nUsage: GIS`RaggedDot[mat, loa] dots the matrix mat with the (possibly ragged) loa, as long as the second dimension of mat and the length of loa coincide.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`RaggedDot[(GIS`GeoArrayDump`matrix_)?MatrixQ, {}] := {}\nGIS`RaggedDot[(GIS`GeoArrayDump`matrix_)?MatrixQ, (GIS`GeoArrayDump`v_)?ArrayQ] := GIS`GeoArrayDump`matrix . GIS`GeoArrayDump`v\nGIS`RaggedDot[(GIS`GeoArrayDump`matrix_)?MatrixQ, GIS`GeoArrayDump`v_] := (Total[GIS`GeoArrayDump`v*#1] & ) \/@ GIS`GeoArrayDump`matrix\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`RaggedDot",
	"NumericalMath`RaiseAccuracy":"ObjectType: Symbol\nUsage: NumericalMath`RaiseAccuracy\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NumericalMath`RaiseAccuracy",
	"NumericalMath`RaisePrecision":"ObjectType: Symbol\nUsage: NumericalMath`RaisePrecision\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NumericalMath`RaisePrecision",
	"SymbolicTensors`RaiseTensorSlots":"ObjectType: Symbol\nUsage: SymbolicTensors`RaiseTensorSlots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SymbolicTensors`RaiseTensorSlots[SymbolicTensors`SymbolicTensorsDump`expr_, (SymbolicTensors`SymbolicTensorsDump`metric_)?SymbolicTensors`SymbolicTensorsDump`SymmetricMetricQ, SymbolicTensors`SymbolicTensorsDump`invmetric_:Automatic] := With[{SymbolicTensors`SymbolicTensorsDump`bases = SymbolicTensors`TensorBases[SymbolicTensors`SymbolicTensorsDump`expr], SymbolicTensors`SymbolicTensorsDump`dmbasis = SymbolicTensors`DualBasis[First[SymbolicTensors`TensorBases[SymbolicTensors`SymbolicTensorsDump`metric]]]}, SymbolicTensors`ChangeTensorSlots[SymbolicTensors`SymbolicTensorsDump`expr, First \/@ Position[SymbolicTensors`SymbolicTensorsDump`bases, _?(SymbolicTensors`ContractibleBasesQ[#1, SymbolicTensors`SymbolicTensorsDump`dmbasis] & ), 1], SymbolicTensors`SymbolicTensorsDump`metric, SymbolicTensors`SymbolicTensorsDump`invmetric] \/; ListQ[SymbolicTensors`SymbolicTensorsDump`bases]]\nSymbolicTensors`RaiseTensorSlots[SymbolicTensors`SymbolicTensorsDump`expr_, SymbolicTensors`SymbolicTensorsDump`slots_List, (SymbolicTensors`SymbolicTensorsDump`metric_)?SymbolicTensors`SymbolicTensorsDump`SymmetricMetricQ, SymbolicTensors`SymbolicTensorsDump`invmetric_:Automatic] := With[{SymbolicTensors`SymbolicTensorsDump`bases = SymbolicTensors`TensorBases[SymbolicTensors`SymbolicTensorsDump`expr], SymbolicTensors`SymbolicTensorsDump`dmbasis = SymbolicTensors`DualBasis[First[SymbolicTensors`TensorBases[SymbolicTensors`SymbolicTensorsDump`metric]]]}, SymbolicTensors`ChangeTensorSlots[SymbolicTensors`SymbolicTensorsDump`expr, Intersection[SymbolicTensors`SymbolicTensorsDump`slots, First \/@ Position[SymbolicTensors`SymbolicTensorsDump`bases, _?(SymbolicTensors`SymbolicTensorsDump`ContractiblBasesQ[#1, SymbolicTensors`SymbolicTensorsDump`dmbasis] & ), 1]], SymbolicTensors`SymbolicTensorsDump`metric, SymbolicTensors`SymbolicTensorsDump`invmetric] \/; ListQ[SymbolicTensors`SymbolicTensorsDump`bases]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SymbolicTensors`RaiseTensorSlots",
	"Region`RandomConvexPolygon":"ObjectType: Symbol\nUsage: Region`RandomConvexPolygon\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RandomConvexPolygon",
	"Statistics`Library`RandomDistribution":"ObjectType: Symbol\nUsage: Statistics`Library`RandomDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RandomDistribution[(Statistics`HypothesisTestingUtilitiesDump`dist_)?DistributionParameterQ, OptionsPattern[]] := With[{Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`iRandomDistribution[Statistics`HypothesisTestingUtilitiesDump`dist, 1, {}, OptionValue[Statistics`HypothesisTestingUtilitiesDump`Restrictions], OptionValue[RandomSeed], OptionValue[MaxIterations], OptionValue[WorkingPrecision]]}, Statistics`HypothesisTestingUtilitiesDump`res \/; Statistics`HypothesisTestingUtilitiesDump`res =!= $Failed]\nStatistics`Library`RandomDistribution[(Statistics`HypothesisTestingUtilitiesDump`dist_)?DistributionParameterQ, (Statistics`HypothesisTestingUtilitiesDump`n_)?Statistics`HypothesisTestingUtilitiesDump`ValidNQ, OptionsPattern[]] := With[{Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`iRandomDistribution[Statistics`HypothesisTestingUtilitiesDump`dist, Statistics`HypothesisTestingUtilitiesDump`n, {}, OptionValue[Statistics`HypothesisTestingUtilitiesDump`Restrictions], OptionValue[RandomSeed], OptionValue[MaxIterations], OptionValue[WorkingPrecision]]}, Statistics`HypothesisTestingUtilitiesDump`res \/; Statistics`HypothesisTestingUtilitiesDump`res =!= $Failed]\nStatistics`Library`RandomDistribution[(Statistics`HypothesisTestingUtilitiesDump`dist_)?DistributionParameterQ, (Statistics`HypothesisTestingUtilitiesDump`n_)?Statistics`HypothesisTestingUtilitiesDump`ValidNQ, Statistics`HypothesisTestingUtilitiesDump`paramArgs_, OptionsPattern[]] \/; VectorQ[Flatten[{Statistics`HypothesisTestingUtilitiesDump`paramArgs}], Statistics`HypothesisTestingUtilitiesDump`ValidParamArgsQ] := With[{Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`iRandomDistribution[Statistics`HypothesisTestingUtilitiesDump`dist, Statistics`HypothesisTestingUtilitiesDump`n, Flatten[{Statistics`HypothesisTestingUtilitiesDump`paramArgs}], OptionValue[Statistics`HypothesisTestingUtilitiesDump`Restrictions], OptionValue[RandomSeed], OptionValue[MaxIterations], OptionValue[WorkingPrecision]]}, Statistics`HypothesisTestingUtilitiesDump`res \/; Statistics`HypothesisTestingUtilitiesDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RandomSeed -> Automatic, Statistics`HypothesisTestingUtilitiesDump`Restrictions -> True, MaxIterations -> 50, WorkingPrecision -> Automatic}\nAttributes: {}\nFullName: Statistics`Library`RandomDistribution",
	"SparseArray`RandomEmbedding":"ObjectType: Symbol\nUsage: SparseArray`RandomEmbedding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RandomSeed -> Automatic}\nAttributes: {}\nFullName: SparseArray`RandomEmbedding",
	"Random`RandomFailure":"ObjectType: Symbol\nUsage: Random`RandomFailure\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomFailure",
	"Random`RandomFarey":"ObjectType: Symbol\nUsage: Random`RandomFarey\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomFarey[(Statistics`RandomNumberGenerationDump`n_)?Internal`PositiveMachineIntegerQ, (Statistics`RandomNumberGenerationDump`len_)?Internal`PositiveMachineIntegerQ] := Module[{Statistics`RandomNumberGenerationDump`pairs, Statistics`RandomNumberGenerationDump`dim = 0, Statistics`RandomNumberGenerationDump`bag = Internal`Bag[]}, While[Statistics`RandomNumberGenerationDump`dim < Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`pairs = Statistics`RandomNumberGenerationDump`cfPairs[Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`len - Statistics`RandomNumberGenerationDump`dim]; Statistics`RandomNumberGenerationDump`pairs = Pick[Statistics`RandomNumberGenerationDump`pairs, Statistics`RandomNumberGenerationDump`cfGCD[Statistics`RandomNumberGenerationDump`pairs], 1]; If[Statistics`RandomNumberGenerationDump`pairs =!= {}, Statistics`RandomNumberGenerationDump`dim += Length[Statistics`RandomNumberGenerationDump`pairs]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`bag, Statistics`RandomNumberGenerationDump`pairs, 2]; ]; ]; Apply[Internal`RationalNoReduce, Take[Partition[Internal`BagPart[Statistics`RandomNumberGenerationDump`bag, All], 2, 2], Statistics`RandomNumberGenerationDump`len], {1}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomFarey",
	"Statistics`Library`RandomForest":"ObjectType: Symbol\nUsage: Statistics`Library`RandomForest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[Statistics`Library`RandomForest[Statistics`HypothesisTestingUtilitiesDump`trainingSet_, Automatic, Statistics`HypothesisTestingUtilitiesDump`M_:Automatic, Statistics`HypothesisTestingUtilitiesDump`nTrees_:100]] := Block[{Statistics`HypothesisTestingUtilitiesDump`tset, Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`encode = Join[ConstantArray[1, Length[Statistics`HypothesisTestingUtilitiesDump`trainingSet]], ConstantArray[0, Length[Statistics`HypothesisTestingUtilitiesDump`trainingSet]]], Statistics`HypothesisTestingUtilitiesDump`oob, Statistics`HypothesisTestingUtilitiesDump`all, Statistics`HypothesisTestingUtilitiesDump`nres, Statistics`HypothesisTestingUtilitiesDump`ln, Statistics`HypothesisTestingUtilitiesDump`type}, Statistics`HypothesisTestingUtilitiesDump`tset = Transpose[Join[Statistics`HypothesisTestingUtilitiesDump`trainingSet, Table[RandomChoice \/@ Transpose[Statistics`HypothesisTestingUtilitiesDump`trainingSet], {Length[Statistics`HypothesisTestingUtilitiesDump`trainingSet]}]]]; Statistics`HypothesisTestingUtilitiesDump`type = (VectorQ[#1, NumericQ] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`tset; Statistics`HypothesisTestingUtilitiesDump`res = Table[Statistics`HypothesisTestingUtilitiesDump`growTreeForRandomForest[Statistics`HypothesisTestingUtilitiesDump`tset, Statistics`HypothesisTestingUtilitiesDump`encode, If[Statistics`HypothesisTestingUtilitiesDump`M === Automatic, Ceiling[Sqrt[Length[Statistics`HypothesisTestingUtilitiesDump`trainingSet[[1]]]]], Statistics`HypothesisTestingUtilitiesDump`M], Statistics`HypothesisTestingUtilitiesDump`type], {Statistics`HypothesisTestingUtilitiesDump`nTrees}]; Statistics`HypothesisTestingUtilitiesDump`nres = Flatten \/@ {Statistics`HypothesisTestingUtilitiesDump`res[[All,1]], Statistics`HypothesisTestingUtilitiesDump`res[[All,2]]}; Statistics`HypothesisTestingUtilitiesDump`all = DeleteDuplicates[Flatten[Statistics`HypothesisTestingUtilitiesDump`nres]]; Statistics`Library`RandomForestObject[Last \/@ Statistics`HypothesisTestingUtilitiesDump`res, {Statistics`HypothesisTestingUtilitiesDump`all, SparseArray[N[(Statistics`HypothesisTestingUtilitiesDump`ln = (Length[Cases[Statistics`HypothesisTestingUtilitiesDump`nres[[2]], #1]] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`all)\/(Statistics`HypothesisTestingUtilitiesDump`ln + (Length[Cases[Statistics`HypothesisTestingUtilitiesDump`nres[[1]], #1]] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`all)]]}, {}]]\nHoldPattern[Statistics`Library`RandomForest[Statistics`HypothesisTestingUtilitiesDump`trainingSet_, Statistics`HypothesisTestingUtilitiesDump`response_, Statistics`HypothesisTestingUtilitiesDump`M_:Automatic, Statistics`HypothesisTestingUtilitiesDump`nTrees_:100]] := Block[{Statistics`HypothesisTestingUtilitiesDump`tset = Transpose[Statistics`HypothesisTestingUtilitiesDump`trainingSet], Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`encode = Statistics`HypothesisTestingUtilitiesDump`encodeDataVector[Statistics`HypothesisTestingUtilitiesDump`response], Statistics`HypothesisTestingUtilitiesDump`oob, Statistics`HypothesisTestingUtilitiesDump`all, Statistics`HypothesisTestingUtilitiesDump`nres, Statistics`HypothesisTestingUtilitiesDump`ln, Statistics`HypothesisTestingUtilitiesDump`type}, Statistics`HypothesisTestingUtilitiesDump`type = (VectorQ[#1, NumericQ] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`tset; Statistics`HypothesisTestingUtilitiesDump`res = Table[Statistics`HypothesisTestingUtilitiesDump`growTreeForRandomForest[Statistics`HypothesisTestingUtilitiesDump`tset, Statistics`HypothesisTestingUtilitiesDump`encode[[-1]], If[Statistics`HypothesisTestingUtilitiesDump`M === Automatic, Ceiling[Sqrt[Length[Statistics`HypothesisTestingUtilitiesDump`trainingSet[[1]]]]], Statistics`HypothesisTestingUtilitiesDump`M], Statistics`HypothesisTestingUtilitiesDump`type], {Statistics`HypothesisTestingUtilitiesDump`nTrees}]; Statistics`HypothesisTestingUtilitiesDump`nres = Flatten \/@ {Statistics`HypothesisTestingUtilitiesDump`res[[All,1]], Statistics`HypothesisTestingUtilitiesDump`res[[All,2]]}; Statistics`HypothesisTestingUtilitiesDump`all = DeleteDuplicates[Flatten[Statistics`HypothesisTestingUtilitiesDump`nres]]; Statistics`Library`RandomForestObject[Last \/@ Statistics`HypothesisTestingUtilitiesDump`res, {Statistics`HypothesisTestingUtilitiesDump`all, SparseArray[N[(Statistics`HypothesisTestingUtilitiesDump`ln = (Length[Cases[Statistics`HypothesisTestingUtilitiesDump`nres[[2]], #1]] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`all)\/(Statistics`HypothesisTestingUtilitiesDump`ln + (Length[Cases[Statistics`HypothesisTestingUtilitiesDump`nres[[1]], #1]] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`all)]]}, Statistics`HypothesisTestingUtilitiesDump`encode[[2]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RandomForest",
	"Statistics`Library`RandomForestCombine":"ObjectType: Symbol\nUsage: Statistics`Library`RandomForestCombine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RandomForestCombine[Statistics`HypothesisTestingUtilitiesDump`rf1_, Statistics`HypothesisTestingUtilitiesDump`rf2_] \/; Statistics`HypothesisTestingUtilitiesDump`rf1[[-1]] == Statistics`HypothesisTestingUtilitiesDump`rf2[[-1]] := Block[{Statistics`HypothesisTestingUtilitiesDump`oobC, Statistics`HypothesisTestingUtilitiesDump`sa}, Statistics`HypothesisTestingUtilitiesDump`oobC = GatherBy[Join[Transpose[Statistics`HypothesisTestingUtilitiesDump`rf1[[-2]]], Transpose[Statistics`HypothesisTestingUtilitiesDump`rf2[[-2]]]], First]; {Statistics`HypothesisTestingUtilitiesDump`oobC, Statistics`HypothesisTestingUtilitiesDump`sa} = Transpose[Table[{Statistics`HypothesisTestingUtilitiesDump`i[[All,1]][[1]], Mean[Statistics`HypothesisTestingUtilitiesDump`i[[All,2]]]}, {Statistics`HypothesisTestingUtilitiesDump`i, Statistics`HypothesisTestingUtilitiesDump`oobC}]]; Statistics`Library`RandomForestObject[Join[Statistics`HypothesisTestingUtilitiesDump`rf1[[1]], Statistics`HypothesisTestingUtilitiesDump`rf2[[1]]], {Statistics`HypothesisTestingUtilitiesDump`oobC, SparseArray[Statistics`HypothesisTestingUtilitiesDump`sa]}, Last[Statistics`HypothesisTestingUtilitiesDump`rf1]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RandomForestCombine",
	"Statistics`Library`RandomForestObject":"None",
	"GIS`RandomGeoLocation":"ObjectType: Symbol\nUsage: GIS`RandomGeoLocation[region, proj, dims] returns a GeoGridPosition[array, proj] object, with the array having dimensions Append[dims, 2], of locations in the given region. Shortcut versions exist with a subgroup two, one or zero arguments, with obvious default values. If the projection is not specified, it returns a GeoPosition object of points uniformly distributed in geo area.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`RandomGeoLocation[GIS`GeoMappingDump`args___] := Module[{GIS`GeoMappingDump`res = Catch[GIS`GeoMappingDump`randomGeoLocation[GIS`GeoMappingDump`args], \"RandomGeoLocationError\"]}, GIS`GeoMappingDump`res \/; GIS`GeoMappingDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {GeoModel -> Automatic, GeoProjection -> None}\nAttributes: {}\nFullName: GIS`RandomGeoLocation",
	"Random`RandomIntegerRejectionInversion":"ObjectType: Symbol\nUsage: Random`RandomIntegerRejectionInversion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomIntegerRejectionInversion[Statistics`RandomNumberGenerationDump`p_, {Statistics`RandomNumberGenerationDump`H_, Statistics`RandomNumberGenerationDump`Hinv_}, {Statistics`RandomNumberGenerationDump`lb_, Statistics`RandomNumberGenerationDump`rb_}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`bag, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`Hl, Statistics`RandomNumberGenerationDump`Hr, Statistics`RandomNumberGenerationDump`lm, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`z, Statistics`RandomNumberGenerationDump`zk, Statistics`RandomNumberGenerationDump`a}, Statistics`RandomNumberGenerationDump`Hl = N[Statistics`RandomNumberGenerationDump`H[Statistics`RandomNumberGenerationDump`lb + N[1\/2, Statistics`RandomNumberGenerationDump`prec]] - Statistics`RandomNumberGenerationDump`p[Statistics`RandomNumberGenerationDump`lb], Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`Hr = Statistics`RandomNumberGenerationDump`H[Statistics`RandomNumberGenerationDump`rb + 1\/2]; Statistics`RandomNumberGenerationDump`lm = N[Statistics`RandomNumberGenerationDump`Hinv[Statistics`RandomNumberGenerationDump`Hl], Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`bag = Internal`Bag[]; While[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`dim - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = RandomReal[{Statistics`RandomNumberGenerationDump`Hl, Statistics`RandomNumberGenerationDump`Hr}, Statistics`RandomNumberGenerationDump`n, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`z = Floor[Statistics`RandomNumberGenerationDump`Hinv[Statistics`RandomNumberGenerationDump`u] + 1\/2]; Block[{Statistics`RandomNumberGenerationDump`g}, Statistics`RandomNumberGenerationDump`g[Statistics`RandomNumberGenerationDump`k_Integer] := Statistics`RandomNumberGenerationDump`g[Statistics`RandomNumberGenerationDump`k] = N[Statistics`RandomNumberGenerationDump`H[Statistics`RandomNumberGenerationDump`k + N[1\/2, Statistics`RandomNumberGenerationDump`prec]] - Statistics`RandomNumberGenerationDump`p[Statistics`RandomNumberGenerationDump`k], Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`a = Table[Statistics`RandomNumberGenerationDump`g[Statistics`RandomNumberGenerationDump`zk], {Statistics`RandomNumberGenerationDump`zk, Statistics`RandomNumberGenerationDump`z}]; ]; Statistics`RandomNumberGenerationDump`z = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`z, Statistics`RandomNumberGenerationDump`a, Statistics`RandomNumberGenerationDump`u]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`z]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`bag, Statistics`RandomNumberGenerationDump`z, 1]; ]; Internal`BagPart[Statistics`RandomNumberGenerationDump`bag, 1 ;; Statistics`RandomNumberGenerationDump`dim]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomIntegerRejectionInversion",
	"Random`RandomIntegerRoU":"ObjectType: Symbol\nUsage: Random`RandomIntegerRoU\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomIntegerRoU[{Statistics`RandomNumberGenerationDump`pdf_, Statistics`RandomNumberGenerationDump`trans:Identity | Log}, {Statistics`RandomNumberGenerationDump`norm_, Statistics`RandomNumberGenerationDump`mode_, Statistics`RandomNumberGenerationDump`probLeftOfMode_:Automatic}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_, Statistics`RandomNumberGenerationDump`method:\"Symmetric\" | \"Asymmetric\":\"Asymmetric\"] := Module[{Statistics`RandomNumberGenerationDump`pars}, If[Statistics`RandomNumberGenerationDump`trans === Identity, Statistics`RandomNumberGenerationDump`pars = Statistics`RandomNumberGenerationDump`GetDiscreteRoUParameters[{Statistics`RandomNumberGenerationDump`pdf, Statistics`RandomNumberGenerationDump`method}, {Statistics`RandomNumberGenerationDump`norm, Statistics`RandomNumberGenerationDump`mode, Statistics`RandomNumberGenerationDump`probLeftOfMode}, Statistics`RandomNumberGenerationDump`prec], Statistics`RandomNumberGenerationDump`pars = Statistics`RandomNumberGenerationDump`GetDiscreteRoUParameters[{Exp[Statistics`RandomNumberGenerationDump`pdf[#1]] & , Statistics`RandomNumberGenerationDump`method}, {Statistics`RandomNumberGenerationDump`norm, Statistics`RandomNumberGenerationDump`mode, Statistics`RandomNumberGenerationDump`probLeftOfMode}, Statistics`RandomNumberGenerationDump`prec]]; If[Statistics`RandomNumberGenerationDump`pars === $Failed, Return[$Failed]]; Statistics`RandomNumberGenerationDump`iRandomIntegerRoU[{Statistics`RandomNumberGenerationDump`pdf, Statistics`RandomNumberGenerationDump`trans}, Statistics`RandomNumberGenerationDump`pars, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`prec]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomIntegerRoU",
	"Graphics`Mesh`Randomized":"ObjectType: Symbol\nUsage: Graphics`Mesh`Randomized\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`Randomized",
	"Random`RandomMatrix":"ObjectType: Symbol\nUsage: Random`RandomMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomMatrix[CircularUnitaryMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`sel}, Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, 1], {Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Re[Diagonal[Statistics`RandomMatrixDump`z]], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`z[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`z[[All,Statistics`RandomMatrixDump`sel]]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[CircularUnitaryMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`sel, Statistics`RandomMatrixDump`tmp}, Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, 1], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Do[Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Re[Diagonal[Statistics`RandomMatrixDump`tmp]], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]]; Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`tmp; , {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[CircularOrthogonalMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`zr, Statistics`RandomMatrixDump`zi, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`tmp}, Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, 1], {Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; If[Statistics`RandomMatrixDump`dim < Statistics`RandomMatrixDump`$COEMatrixSizeThreshold, Statistics`RandomMatrixDump`z = Statistics`RandomMatrixDump`z . Transpose[Statistics`RandomMatrixDump`z]; , Statistics`RandomMatrixDump`zr = Re[Statistics`RandomMatrixDump`z]; Statistics`RandomMatrixDump`zi = Im[Statistics`RandomMatrixDump`z]; Statistics`RandomMatrixDump`z = IdentityMatrix[Statistics`RandomMatrixDump`dim, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 1, Statistics`RandomMatrixDump`zr + Statistics`RandomMatrixDump`zi, -1, Statistics`RandomMatrixDump`z]; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 2, Statistics`RandomMatrixDump`zr, -1, Statistics`RandomMatrixDump`tmp]; Statistics`RandomMatrixDump`z *= I; Statistics`RandomMatrixDump`z += Statistics`RandomMatrixDump`tmp; ]; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`z, \"U\"]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[CircularOrthogonalMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tmp1, Statistics`RandomMatrixDump`zr, Statistics`RandomMatrixDump`zi, Statistics`RandomMatrixDump`iden}, Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, 1], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; If[Statistics`RandomMatrixDump`dim < Statistics`RandomMatrixDump`$COEMatrixSizeThreshold, Do[Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`tmp . Transpose[Statistics`RandomMatrixDump`tmp]; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`tmp, \"U\"]; Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`tmp; , {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}], Statistics`RandomMatrixDump`iden = IdentityMatrix[Statistics`RandomMatrixDump`dim, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Do[Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`zr = Re[Statistics`RandomMatrixDump`tmp]; Statistics`RandomMatrixDump`zi = Im[Statistics`RandomMatrixDump`tmp]; Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`iden; Statistics`RandomMatrixDump`tmp1 = Statistics`RandomMatrixDump`iden; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 1, Statistics`RandomMatrixDump`zr + Statistics`RandomMatrixDump`zi, -1, Statistics`RandomMatrixDump`tmp]; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 2, Statistics`RandomMatrixDump`zr, -1, Statistics`RandomMatrixDump`tmp1]; Statistics`RandomMatrixDump`tmp *= I; Statistics`RandomMatrixDump`tmp += Statistics`RandomMatrixDump`tmp1; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`tmp, \"U\"]; Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`tmp; , {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}]; ]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[CircularSymplecticMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`sel, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`j}, Statistics`RandomMatrixDump`n = 2*Statistics`RandomMatrixDump`dim; Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, 1], {Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Re[Diagonal[Statistics`RandomMatrixDump`z]], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`z[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`z[[All,Statistics`RandomMatrixDump`sel]]; If[Statistics`RandomMatrixDump`dim < Statistics`RandomMatrixDump`$CSEMatrixSizeThreshold, Statistics`RandomMatrixDump`j = SparseArray[{Band[{Statistics`RandomMatrixDump`dim + 1, 1}] -> -1, Band[{1, Statistics`RandomMatrixDump`dim + 1}] -> 1}, {Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n}]; Statistics`RandomMatrixDump`z . Statistics`RandomMatrixDump`j . Transpose[Statistics`RandomMatrixDump`z] . (-Statistics`RandomMatrixDump`j), Statistics`RandomMatrixDump`z2 = Take[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`z3 = Take[Statistics`RandomMatrixDump`z, -Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`z[[1 ;; Statistics`RandomMatrixDump`dim,-Statistics`RandomMatrixDump`dim ;; All]] = Statistics`RandomMatrixDump`z2 . Transpose[Take[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z[[1 ;; Statistics`RandomMatrixDump`dim,-Statistics`RandomMatrixDump`dim ;; All]] -= Transpose[Take[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z[[-Statistics`RandomMatrixDump`dim ;; All,1 ;; Statistics`RandomMatrixDump`dim]] = Statistics`RandomMatrixDump`z3 . Transpose[Take[Statistics`RandomMatrixDump`z, -Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z[[-Statistics`RandomMatrixDump`dim ;; All,1 ;; Statistics`RandomMatrixDump`dim]] -= Transpose[Take[Statistics`RandomMatrixDump`z, -Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z[[1 ;; Statistics`RandomMatrixDump`dim,1 ;; Statistics`RandomMatrixDump`dim]] = Take[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim] . Transpose[Take[Statistics`RandomMatrixDump`z, -Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z[[1 ;; Statistics`RandomMatrixDump`dim,1 ;; Statistics`RandomMatrixDump`dim]] -= Statistics`RandomMatrixDump`z2 . Transpose[Statistics`RandomMatrixDump`z3]; Statistics`RandomMatrixDump`z[[-Statistics`RandomMatrixDump`dim ;; All,-Statistics`RandomMatrixDump`dim ;; All]] = Transpose[Take[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z]]\nRandom`RandomMatrix[CircularSymplecticMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`sel, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`j, Statistics`RandomMatrixDump`tmp}, Statistics`RandomMatrixDump`n = 2*Statistics`RandomMatrixDump`dim; Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, 1], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; If[Statistics`RandomMatrixDump`dim < Statistics`RandomMatrixDump`$CSEMatrixSizeThreshold, Statistics`RandomMatrixDump`j = SparseArray[{Band[{Statistics`RandomMatrixDump`dim + 1, 1}] -> -1, Band[{1, Statistics`RandomMatrixDump`dim + 1}] -> 1}, {Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n}]; Do[Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Re[Diagonal[Statistics`RandomMatrixDump`tmp]], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]]; Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`tmp . Statistics`RandomMatrixDump`j . Transpose[Statistics`RandomMatrixDump`tmp] . (-Statistics`RandomMatrixDump`j); , {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}], Do[Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Re[Diagonal[Statistics`RandomMatrixDump`tmp]], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]]; Statistics`RandomMatrixDump`z2 = Take[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`z3 = Take[Statistics`RandomMatrixDump`tmp, -Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`tmp[[1 ;; Statistics`RandomMatrixDump`dim,-Statistics`RandomMatrixDump`dim ;; All]] = Statistics`RandomMatrixDump`z2 . Transpose[Take[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`tmp[[1 ;; Statistics`RandomMatrixDump`dim,-Statistics`RandomMatrixDump`dim ;; All]] -= Transpose[Take[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`tmp[[-Statistics`RandomMatrixDump`dim ;; All,1 ;; Statistics`RandomMatrixDump`dim]] = Statistics`RandomMatrixDump`z3 . Transpose[Take[Statistics`RandomMatrixDump`tmp, -Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`tmp[[-Statistics`RandomMatrixDump`dim ;; All,1 ;; Statistics`RandomMatrixDump`dim]] -= Transpose[Take[Statistics`RandomMatrixDump`tmp, -Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`tmp[[1 ;; Statistics`RandomMatrixDump`dim,1 ;; Statistics`RandomMatrixDump`dim]] = Take[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim] . Transpose[Take[Statistics`RandomMatrixDump`tmp, -Statistics`RandomMatrixDump`dim, -Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`tmp[[1 ;; Statistics`RandomMatrixDump`dim,1 ;; Statistics`RandomMatrixDump`dim]] -= Statistics`RandomMatrixDump`z2 . Transpose[Statistics`RandomMatrixDump`z3]; Statistics`RandomMatrixDump`tmp[[-Statistics`RandomMatrixDump`dim ;; All,-Statistics`RandomMatrixDump`dim ;; All]] = Transpose[Take[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim]]; Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`tmp; , {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}]]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[CircularQuaternionMatrixDistribution[1], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z1, Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`z4, Statistics`RandomMatrixDump`res}, {Statistics`RandomMatrixDump`z1, Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`z4} = RandomPoint[Sphere[4], WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`z2 *= I; Statistics`RandomMatrixDump`z4 *= I; Statistics`RandomMatrixDump`res = {{Statistics`RandomMatrixDump`z1 + Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3 + Statistics`RandomMatrixDump`z4}, {Statistics`RandomMatrixDump`z4 - Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`z1 - Statistics`RandomMatrixDump`z2}}; If[Statistics`RandomMatrixDump`prec === MachinePrecision, Developer`ToPackedArray[Statistics`RandomMatrixDump`res], Statistics`RandomMatrixDump`res]]\nRandom`RandomMatrix[CircularQuaternionMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`q, Statistics`RandomMatrixDump`u, Statistics`RandomMatrixDump`utau, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`one, Statistics`RandomMatrixDump`nrm2, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`tau1, Statistics`RandomMatrixDump`f}, Statistics`RandomMatrixDump`one = N[1, Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`diag = ConstantArray[Statistics`RandomMatrixDump`one - 1, {Statistics`RandomMatrixDump`dim, 4}]; Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalNormalDistribution[0, 1], {Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim, 4}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Do[Statistics`RandomMatrixDump`u = First[Statistics`RandomMatrixDump`z]; Statistics`RandomMatrixDump`tau = (#1 . #1 & )[First[Statistics`RandomMatrixDump`u]]; Statistics`RandomMatrixDump`nrm2 = Total[(#1*#1 & )[Rest[Statistics`RandomMatrixDump`u]], 2]; Statistics`RandomMatrixDump`f = Statistics`RandomMatrixDump`nrm2; Statistics`RandomMatrixDump`nrm2 = Sqrt[Statistics`RandomMatrixDump`nrm2 + Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tau = Sqrt[Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`f \/= Statistics`RandomMatrixDump`tau + Statistics`RandomMatrixDump`nrm2; Statistics`RandomMatrixDump`u[[1]] *= -Statistics`RandomMatrixDump`f\/Statistics`RandomMatrixDump`tau; Statistics`RandomMatrixDump`tau = 1\/(Statistics`RandomMatrixDump`f*Statistics`RandomMatrixDump`nrm2); Statistics`RandomMatrixDump`utau = Statistics`RandomMatrixDump`u*Statistics`RandomMatrixDump`tau; Statistics`RandomMatrixDump`diag[[Statistics`RandomMatrixDump`ind]] = (Statistics`RandomMatrixDump`z[[1,1]] - First[Statistics`RandomMatrixDump`u])\/Statistics`RandomMatrixDump`nrm2; Statistics`RandomMatrixDump`z = Rest[Statistics`RandomMatrixDump`z]; Statistics`RandomMatrixDump`tau1 = Statistics`Library`QuaternionDot[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`u]; Statistics`RandomMatrixDump`z = Drop[Statistics`RandomMatrixDump`z, None, 1]; Statistics`RandomMatrixDump`z -= Statistics`Library`OuterQuaternionTimes[Statistics`RandomMatrixDump`tau1, Rest[Statistics`RandomMatrixDump`utau]]; If[Statistics`RandomMatrixDump`ind =!= 1, Statistics`RandomMatrixDump`u = Statistics`Library`QuaternionDot[Take[Statistics`RandomMatrixDump`q, All, {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`dim}], Statistics`RandomMatrixDump`u]; Statistics`RandomMatrixDump`q[[All,Statistics`RandomMatrixDump`ind ;; All]] -= Statistics`Library`OuterQuaternionTimes[Statistics`RandomMatrixDump`u, Statistics`RandomMatrixDump`utau]; , Statistics`RandomMatrixDump`u[[All,1]] *= -1; Statistics`RandomMatrixDump`q = Statistics`Library`OuterQuaternionTimes[Statistics`RandomMatrixDump`u, Statistics`RandomMatrixDump`utau]; ((Statistics`RandomMatrixDump`q[[#1,#1,1]] += Statistics`RandomMatrixDump`one; ) & ) \/@ Range[Statistics`RandomMatrixDump`dim]; ]; , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`dim - 1}]; Statistics`RandomMatrixDump`diag[[-1]] = (#1\/Sqrt[#1 . #1] & )[Statistics`RandomMatrixDump`z[[1,1]]]; ((Statistics`RandomMatrixDump`q[[#1]] = Statistics`Library`QuaternionTimes[Statistics`RandomMatrixDump`diag[[#1]], Statistics`RandomMatrixDump`q[[#1]]]; ) & ) \/@ Range[Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`q = Transpose[Statistics`RandomMatrixDump`q, {2, 3, 1}]; Statistics`RandomMatrixDump`q[[2]] *= I; Statistics`RandomMatrixDump`q[[4]] *= I; ArrayFlatten[{{Statistics`RandomMatrixDump`q[[1]] + Statistics`RandomMatrixDump`q[[2]], Statistics`RandomMatrixDump`q[[3]] + Statistics`RandomMatrixDump`q[[4]]}, {Statistics`RandomMatrixDump`q[[4]] - Statistics`RandomMatrixDump`q[[3]], Statistics`RandomMatrixDump`q[[1]] - Statistics`RandomMatrixDump`q[[2]]}}]]\nRandom`RandomMatrix[CircularQuaternionMatrixDistribution[1], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z1, Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`z4, Statistics`RandomMatrixDump`res}, {Statistics`RandomMatrixDump`z1, Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`z4} = Transpose[RandomPoint[Sphere[4], Statistics`RandomMatrixDump`len, WorkingPrecision -> Statistics`RandomMatrixDump`prec]]; Statistics`RandomMatrixDump`z2 *= I; Statistics`RandomMatrixDump`z4 *= I; Statistics`RandomMatrixDump`res = {{Statistics`RandomMatrixDump`z1 + Statistics`RandomMatrixDump`z2, Statistics`RandomMatrixDump`z3 + Statistics`RandomMatrixDump`z4}, {Statistics`RandomMatrixDump`z4 - Statistics`RandomMatrixDump`z3, Statistics`RandomMatrixDump`z1 - Statistics`RandomMatrixDump`z2}}; If[Statistics`RandomMatrixDump`prec === MachinePrecision, Statistics`RandomMatrixDump`res = Developer`ToPackedArray[Statistics`RandomMatrixDump`res]]; Transpose[Statistics`RandomMatrixDump`res, {3, 2, 1}]]\nRandom`RandomMatrix[CircularQuaternionMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`zs, Statistics`RandomMatrixDump`q, Statistics`RandomMatrixDump`u, Statistics`RandomMatrixDump`utau, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`one, Statistics`RandomMatrixDump`nrm2, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`tau1, Statistics`RandomMatrixDump`f}, Statistics`RandomMatrixDump`one = N[1, Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`diag = ConstantArray[Statistics`RandomMatrixDump`one - 1, {Statistics`RandomMatrixDump`dim, 4}]; Statistics`RandomMatrixDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[0, 1], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim, 4}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Table[Do[Statistics`RandomMatrixDump`u = First[Statistics`RandomMatrixDump`z]; Statistics`RandomMatrixDump`tau = (#1 . #1 & )[First[Statistics`RandomMatrixDump`u]]; Statistics`RandomMatrixDump`nrm2 = Total[(#1*#1 & )[Rest[Statistics`RandomMatrixDump`u]], 2]; Statistics`RandomMatrixDump`f = Statistics`RandomMatrixDump`nrm2; Statistics`RandomMatrixDump`nrm2 = Sqrt[Statistics`RandomMatrixDump`nrm2 + Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tau = Sqrt[Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`f \/= Statistics`RandomMatrixDump`tau + Statistics`RandomMatrixDump`nrm2; Statistics`RandomMatrixDump`u[[1]] *= -Statistics`RandomMatrixDump`f\/Statistics`RandomMatrixDump`tau; Statistics`RandomMatrixDump`tau = 1\/(Statistics`RandomMatrixDump`f*Statistics`RandomMatrixDump`nrm2); Statistics`RandomMatrixDump`utau = Statistics`RandomMatrixDump`u*Statistics`RandomMatrixDump`tau; Statistics`RandomMatrixDump`diag[[Statistics`RandomMatrixDump`ind]] = (Statistics`RandomMatrixDump`z[[1,1]] - First[Statistics`RandomMatrixDump`u])\/Statistics`RandomMatrixDump`nrm2; Statistics`RandomMatrixDump`z = Rest[Statistics`RandomMatrixDump`z]; Statistics`RandomMatrixDump`tau1 = Statistics`Library`QuaternionDot[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`u]; Statistics`RandomMatrixDump`z = Drop[Statistics`RandomMatrixDump`z, None, 1]; Statistics`RandomMatrixDump`z -= Statistics`Library`OuterQuaternionTimes[Statistics`RandomMatrixDump`tau1, Rest[Statistics`RandomMatrixDump`utau]]; If[Statistics`RandomMatrixDump`ind =!= 1, Statistics`RandomMatrixDump`u = Statistics`Library`QuaternionDot[Take[Statistics`RandomMatrixDump`q, All, {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`dim}], Statistics`RandomMatrixDump`u]; Statistics`RandomMatrixDump`q[[All,Statistics`RandomMatrixDump`ind ;; All]] -= Statistics`Library`OuterQuaternionTimes[Statistics`RandomMatrixDump`u, Statistics`RandomMatrixDump`utau]; , Statistics`RandomMatrixDump`u[[All,1]] *= -1; Statistics`RandomMatrixDump`q = Statistics`Library`OuterQuaternionTimes[Statistics`RandomMatrixDump`u, Statistics`RandomMatrixDump`utau]; ((Statistics`RandomMatrixDump`q[[#1,#1,1]] += Statistics`RandomMatrixDump`one; ) & ) \/@ Range[Statistics`RandomMatrixDump`dim]; ]; , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`dim - 1}]; Statistics`RandomMatrixDump`diag[[-1]] = (#1\/Sqrt[#1 . #1] & )[Statistics`RandomMatrixDump`z[[1,1]]]; ((Statistics`RandomMatrixDump`q[[#1]] = Statistics`Library`QuaternionTimes[Statistics`RandomMatrixDump`diag[[#1]], Statistics`RandomMatrixDump`q[[#1]]]; ) & ) \/@ Range[Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`q = Transpose[Statistics`RandomMatrixDump`q, {2, 3, 1}]; Statistics`RandomMatrixDump`q[[2]] *= I; Statistics`RandomMatrixDump`q[[4]] *= I; ArrayFlatten[{{Statistics`RandomMatrixDump`q[[1]] + Statistics`RandomMatrixDump`q[[2]], Statistics`RandomMatrixDump`q[[3]] + Statistics`RandomMatrixDump`q[[4]]}, {Statistics`RandomMatrixDump`q[[4]] - Statistics`RandomMatrixDump`q[[3]], Statistics`RandomMatrixDump`q[[1]] - Statistics`RandomMatrixDump`q[[2]]}}], {Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`zs}]]\nRandom`RandomMatrix[CircularRealMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`sel}, Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalNormalDistribution[0, 1], {Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Diagonal[Statistics`RandomMatrixDump`z], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`z[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`z[[All,Statistics`RandomMatrixDump`sel]]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[CircularRealMatrixDistribution[Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`z, Statistics`RandomMatrixDump`tau, Statistics`RandomMatrixDump`sel, Statistics`RandomMatrixDump`tmp}, Statistics`RandomMatrixDump`z = RandomVariate[Random`Private`InternalNormalDistribution[0, 1], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Do[Statistics`RandomMatrixDump`tmp = Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`LAPACK`GEQRF[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`sel = Random`Private`PositionsOf[Diagonal[Statistics`RandomMatrixDump`tmp], Negative]; LinearAlgebra`LAPACK`UNGQR[Statistics`RandomMatrixDump`tmp, Statistics`RandomMatrixDump`tau]; Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]] = -Statistics`RandomMatrixDump`tmp[[All,Statistics`RandomMatrixDump`sel]]; Statistics`RandomMatrixDump`z[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`tmp; , {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}]; Statistics`RandomMatrixDump`z]\nRandom`RandomMatrix[GaussianOrthogonalMatrixDistribution[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`n}, Statistics`RandomMatrixDump`n = Binomial[Statistics`RandomMatrixDump`dim, 2]; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig], Statistics`RandomMatrixDump`dim, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], Statistics`RandomMatrixDump`n, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`Library`VectorToSymmetricMatrix[Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`dim]]\nRandom`RandomMatrix[GaussianOrthogonalMatrixDistribution[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`n}, If[Statistics`RandomMatrixDump`dim < Statistics`RandomMatrixDump`$GOEMatrixSizeThreshold, (Transpose[#1, {1, 3, 2}] + #1 & )[RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig\/2], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]], Statistics`RandomMatrixDump`n = Binomial[Statistics`RandomMatrixDump`dim, 2]; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`n}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; MapThread[Statistics`Library`VectorToSymmetricMatrix[#1, #2, Statistics`RandomMatrixDump`dim] & , {Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag}, 1]]]\nRandom`RandomMatrix[GaussianUnitaryMatrixDistribution[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`n}, Statistics`RandomMatrixDump`n = Binomial[Statistics`RandomMatrixDump`dim, 2]; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig], Statistics`RandomMatrixDump`dim, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], Statistics`RandomMatrixDump`n, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`Library`VectorToHermitianMatrix[Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`dim]]\nRandom`RandomMatrix[GaussianUnitaryMatrixDistribution[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`n}, If[Statistics`RandomMatrixDump`dim < Statistics`RandomMatrixDump`$GUEMatrixSizeThreshold, (ConjugateTranspose[#1, {1, 3, 2}] + #1 & )[RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/2], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]], Statistics`RandomMatrixDump`n = Binomial[Statistics`RandomMatrixDump`dim, 2]; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`n}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; MapThread[Statistics`Library`VectorToHermitianMatrix[#1, #2, Statistics`RandomMatrixDump`dim] & , {Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag}, 1]]]\nRandom`RandomMatrix[GaussianSymplecticMatrixDistribution[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`mat1, Statistics`RandomMatrixDump`mat2}, Statistics`RandomMatrixDump`n = Binomial[Statistics`RandomMatrixDump`dim, 2]; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig], Statistics`RandomMatrixDump`dim, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], Statistics`RandomMatrixDump`n, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`mat1 = Statistics`Library`VectorToHermitianMatrix[Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`diag = N[1, Statistics`RandomMatrixDump`prec] - 1; Statistics`RandomMatrixDump`up = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], Statistics`RandomMatrixDump`n, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`mat2 = Statistics`Library`VectorToAntiSymmetricMatrix[Statistics`RandomMatrixDump`up, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`dim]; ArrayFlatten[{{Statistics`RandomMatrixDump`mat1, Statistics`RandomMatrixDump`mat2}, Conjugate[{-Statistics`RandomMatrixDump`mat2, Statistics`RandomMatrixDump`mat1}]}]]\nRandom`RandomMatrix[GaussianSymplecticMatrixDistribution[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`up1, Statistics`RandomMatrixDump`up2, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`zero, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`mat1, Statistics`RandomMatrixDump`mat2}, Statistics`RandomMatrixDump`n = Binomial[Statistics`RandomMatrixDump`dim, 2]; Statistics`RandomMatrixDump`zero = N[1, Statistics`RandomMatrixDump`prec] - 1; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Statistics`RandomMatrixDump`sig], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up1 = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`n}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`up2 = RandomVariate[Random`Private`InternalComplexNormalDistribution[0, Statistics`RandomMatrixDump`sig\/Sqrt[2]], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`n}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; MapThread[(Statistics`RandomMatrixDump`mat1 = Statistics`Library`VectorToHermitianMatrix[#2, #1, Statistics`RandomMatrixDump`dim]; Statistics`RandomMatrixDump`mat2 = Statistics`Library`VectorToAntiSymmetricMatrix[#3, Statistics`RandomMatrixDump`zero, Statistics`RandomMatrixDump`dim]; ArrayFlatten[{{Statistics`RandomMatrixDump`mat1, Statistics`RandomMatrixDump`mat2}, Conjugate[{-Statistics`RandomMatrixDump`mat2, Statistics`RandomMatrixDump`mat1}]}]) & , {Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`up1, Statistics`RandomMatrixDump`up2}, 1]]\nRandom`RandomMatrix[Statistics`RandomMatrices`GaussianMatrixSpectrum[(Statistics`RandomMatrixDump`gdist:GaussianOrthogonalMatrixDistribution | GaussianUnitaryMatrixDistribution | GaussianSymplecticMatrixDistribution)[Statistics`RandomMatrixDump`sig_, Statistics`RandomMatrixDump`dim_]], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`beta, Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`offdiag, Statistics`RandomMatrixDump`res}, Statistics`RandomMatrixDump`beta = Switch[Statistics`RandomMatrixDump`gdist, GaussianOrthogonalMatrixDistribution, 1, GaussianUnitaryMatrixDistribution, 2, GaussianSymplecticMatrixDistribution, 4]; Statistics`RandomMatrixDump`diag = RandomVariate[Random`Private`InternalNormalDistribution[0, Sqrt[2]], {Statistics`RandomMatrixDump`len, Statistics`RandomMatrixDump`dim}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`offdiag = (RandomVariate[ChiDistribution[#1], Statistics`RandomMatrixDump`len, WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`beta, Statistics`RandomMatrixDump`beta*(Statistics`RandomMatrixDump`dim - 1), Statistics`RandomMatrixDump`beta]; Statistics`RandomMatrixDump`offdiag = Transpose[Statistics`RandomMatrixDump`offdiag]; Statistics`RandomMatrixDump`res = If[Statistics`RandomMatrixDump`beta =!= 4, MapThread[SparseArray[{Band[{1, 1}] -> #1, Band[{2, 1}] -> #2, Band[{1, 2}] -> #2}, {Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim}] & , {Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`offdiag}], MapThread[SparseArray[{Band[{1, 1}, {2*Statistics`RandomMatrixDump`dim, 2*Statistics`RandomMatrixDump`dim}] -> #1, Band[{2, 1}, {Statistics`RandomMatrixDump`dim, Statistics`RandomMatrixDump`dim - 1}] -> #2, Band[{1, 2}, {Statistics`RandomMatrixDump`dim - 1, Statistics`RandomMatrixDump`dim}] -> #2, Band[{2 + Statistics`RandomMatrixDump`dim, 1 + Statistics`RandomMatrixDump`dim}, {2*Statistics`RandomMatrixDump`dim, 2*Statistics`RandomMatrixDump`dim - 1}] -> #2, Band[{1 + Statistics`RandomMatrixDump`dim, 2 + Statistics`RandomMatrixDump`dim}, {2*Statistics`RandomMatrixDump`dim - 1, 2*Statistics`RandomMatrixDump`dim}] -> #2}, {2*Statistics`RandomMatrixDump`dim, 2*Statistics`RandomMatrixDump`dim}] & , {Statistics`RandomMatrixDump`diag, Statistics`RandomMatrixDump`offdiag}]]; Statistics`RandomMatrixDump`res *= N[Statistics`RandomMatrixDump`sig\/Sqrt[2], Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`res]\nRandom`RandomMatrix[WishartMatrixDistribution[Statistics`RandomMatrixDump`n_, Statistics`RandomMatrixDump`V_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`Y, Statistics`RandomMatrixDump`p, Statistics`RandomMatrixDump`normals, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`status, Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}, Statistics`RandomMatrixDump`p = Length[Statistics`RandomMatrixDump`V]; Statistics`RandomMatrixDump`mat = N[Statistics`RandomMatrixDump`V, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`mat], Statistics`RandomMatrixDump`mat = Normal[Statistics`RandomMatrixDump`mat]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`mat, Real], Statistics`RandomMatrixDump`mat = Developer`ToPackedArray[Statistics`RandomMatrixDump`mat]]; If[Statistics`RandomMatrixDump`p == 1, Statistics`RandomMatrixDump`mat *= RandomVariate[ChiSquareDistribution[Statistics`RandomMatrixDump`n], WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Return[Statistics`RandomMatrixDump`mat]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`Y = DiagonalMatrix[(RandomVariate[ChiDistribution[#1], WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n - Statistics`RandomMatrixDump`p + 1, -1]]; Statistics`RandomMatrixDump`normals = RandomVariate[Random`Private`InternalNormalDistribution[], Binomial[Statistics`RandomMatrixDump`p, 2], WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`ind = Range[Statistics`RandomMatrixDump`p - 1]; Statistics`RandomMatrixDump`ind1 = Transpose[({Prepend[Most[#1] + 1, 1], #1} & )[Accumulate[Statistics`RandomMatrixDump`ind]]]; MapThread[(Statistics`RandomMatrixDump`Y[[#1 + 1,1 ;; #1]] = Take[Statistics`RandomMatrixDump`normals, #2]) & , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`Y]; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 1, Statistics`RandomMatrixDump`Y, 0, Statistics`RandomMatrixDump`mat]; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`mat, \"U\"]; Statistics`RandomMatrixDump`mat]\nRandom`RandomMatrix[WishartMatrixDistribution[Statistics`RandomMatrixDump`n_, Statistics`RandomMatrixDump`V_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`Y1, Statistics`RandomMatrixDump`Y, Statistics`RandomMatrixDump`n1, Statistics`RandomMatrixDump`normals, Statistics`RandomMatrixDump`p, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1, Statistics`RandomMatrixDump`status}, Statistics`RandomMatrixDump`p = Length[Statistics`RandomMatrixDump`V]; Statistics`RandomMatrixDump`chol = N[Statistics`RandomMatrixDump`V, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`chol], Statistics`RandomMatrixDump`chol = Normal[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`chol, Real], Statistics`RandomMatrixDump`chol = Developer`ToPackedArray[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`p === 1, Statistics`RandomMatrixDump`mat = RandomVariate[ChiSquareDistribution[Statistics`RandomMatrixDump`n], {Statistics`RandomMatrixDump`len, 1, 1}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`mat *= Statistics`RandomMatrixDump`chol[[1,1]]; Return[Statistics`RandomMatrixDump`mat]]; Statistics`RandomMatrixDump`mat = ConstantArray[N[1, Statistics`RandomMatrixDump`prec], {Statistics`RandomMatrixDump`p, Statistics`RandomMatrixDump`p}]; Statistics`RandomMatrixDump`ind = Range[Statistics`RandomMatrixDump`p - 1]; Statistics`RandomMatrixDump`ind1 = Transpose[({Prepend[Most[#1] + 1, 1], #1} & )[Accumulate[Statistics`RandomMatrixDump`ind]]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`Y = Transpose[(RandomVariate[ChiDistribution[#1], Statistics`RandomMatrixDump`len, WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n - Statistics`RandomMatrixDump`p + 1, -1]]; Statistics`RandomMatrixDump`normals = RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`len, Binomial[Statistics`RandomMatrixDump`p, 2]}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Table[Statistics`RandomMatrixDump`Y1 = DiagonalMatrix[Statistics`RandomMatrixDump`Y[[Statistics`RandomMatrixDump`k]]]; Statistics`RandomMatrixDump`n1 = Statistics`RandomMatrixDump`normals[[Statistics`RandomMatrixDump`k]]; MapThread[(Statistics`RandomMatrixDump`Y1[[#1 + 1,1 ;; #1]] = Take[Statistics`RandomMatrixDump`n1, #2]) & , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`Y1]; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 1, Statistics`RandomMatrixDump`Y1, 0, Statistics`RandomMatrixDump`mat]; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`mat, \"U\"]; Statistics`RandomMatrixDump`mat, {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}]]\nRandom`RandomMatrix[InverseWishartMatrixDistribution[Statistics`RandomMatrixDump`n_, Statistics`RandomMatrixDump`V_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`Y, Statistics`RandomMatrixDump`p, Statistics`RandomMatrixDump`normals, Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status, Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}, Statistics`RandomMatrixDump`p = Length[Statistics`RandomMatrixDump`V]; Statistics`RandomMatrixDump`chol = N[Statistics`RandomMatrixDump`V, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`chol], Statistics`RandomMatrixDump`chol = Normal[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`chol, Real], Statistics`RandomMatrixDump`chol = Developer`ToPackedArray[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`p === 1, Statistics`RandomMatrixDump`chol \/= RandomVariate[ChiSquareDistribution[Statistics`RandomMatrixDump`n], WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Return[Statistics`RandomMatrixDump`chol]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`Y = DiagonalMatrix[(RandomVariate[ChiDistribution[#1], WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n - Statistics`RandomMatrixDump`p + 1, -1]]; Statistics`RandomMatrixDump`normals = RandomVariate[Random`Private`InternalNormalDistribution[], Binomial[Statistics`RandomMatrixDump`p, 2], WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`ind = Range[Statistics`RandomMatrixDump`p - 1]; Statistics`RandomMatrixDump`ind1 = Transpose[({Prepend[Most[#1] + 1, 1], #1} & )[Accumulate[Statistics`RandomMatrixDump`ind]]]; MapThread[(Statistics`RandomMatrixDump`Y[[#1 + 1,1 ;; #1]] = Take[Statistics`RandomMatrixDump`normals, #2]) & , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}]; LinearAlgebra`BLAS`TRSM[\"R\", \"L\", \"T\", \"N\", 1, Statistics`RandomMatrixDump`Y, Statistics`RandomMatrixDump`chol]; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 1, Statistics`RandomMatrixDump`chol, 0, Statistics`RandomMatrixDump`Y]; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`Y, \"U\"]; Statistics`RandomMatrixDump`Y]\nRandom`RandomMatrix[InverseWishartMatrixDistribution[Statistics`RandomMatrixDump`n_, Statistics`RandomMatrixDump`V_], Statistics`RandomMatrixDump`len_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`Y1, Statistics`RandomMatrixDump`Y, Statistics`RandomMatrixDump`n1, Statistics`RandomMatrixDump`normals, Statistics`RandomMatrixDump`p, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1, Statistics`RandomMatrixDump`status}, Statistics`RandomMatrixDump`p = Length[Statistics`RandomMatrixDump`V]; Statistics`RandomMatrixDump`chol = N[Statistics`RandomMatrixDump`V, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`chol], Statistics`RandomMatrixDump`chol = Normal[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`chol, Real], Statistics`RandomMatrixDump`chol = Developer`ToPackedArray[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`p === 1, Statistics`RandomMatrixDump`mat = RandomVariate[ChiSquareDistribution[Statistics`RandomMatrixDump`n], {Statistics`RandomMatrixDump`len, 1, 1}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Return[Statistics`RandomMatrixDump`chol[[1,1]]\/Statistics`RandomMatrixDump`mat]]; Statistics`RandomMatrixDump`ind = Range[Statistics`RandomMatrixDump`p - 1]; Statistics`RandomMatrixDump`ind1 = Transpose[({Prepend[Most[#1] + 1, 1], #1} & )[Accumulate[Statistics`RandomMatrixDump`ind]]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`Y = Transpose[(RandomVariate[ChiDistribution[#1], Statistics`RandomMatrixDump`len, WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`n - Statistics`RandomMatrixDump`p + 1, -1]]; Statistics`RandomMatrixDump`normals = RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`len, Binomial[Statistics`RandomMatrixDump`p, 2]}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Table[Statistics`RandomMatrixDump`Y1 = DiagonalMatrix[Statistics`RandomMatrixDump`Y[[Statistics`RandomMatrixDump`k]]]; Statistics`RandomMatrixDump`n1 = Statistics`RandomMatrixDump`normals[[Statistics`RandomMatrixDump`k]]; MapThread[(Statistics`RandomMatrixDump`Y1[[#1 + 1,1 ;; #1]] = Take[Statistics`RandomMatrixDump`n1, #2]) & , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}]; Statistics`RandomMatrixDump`mat = Statistics`RandomMatrixDump`chol; LinearAlgebra`BLAS`TRSM[\"R\", \"L\", \"T\", \"N\", 1, Statistics`RandomMatrixDump`Y1, Statistics`RandomMatrixDump`mat]; LinearAlgebra`BLAS`SYRK[\"U\", \"N\", 1, Statistics`RandomMatrixDump`mat, 0, Statistics`RandomMatrixDump`Y1]; Statistics`Library`MatrixReflectCopy[Statistics`RandomMatrixDump`Y1, \"U\"]; Statistics`RandomMatrixDump`Y1, {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`len}]]\nRandom`RandomMatrix[MatrixNormalDistribution[Statistics`RandomMatrixDump`mu_, Statistics`RandomMatrixDump`sigr_, Statistics`RandomMatrixDump`sigc_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status, Statistics`RandomMatrixDump`res}, Statistics`RandomMatrixDump`res = RandomVariate[Random`Private`InternalNormalDistribution[], {Length[Statistics`RandomMatrixDump`sigr], Length[Statistics`RandomMatrixDump`sigc]}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`chol = N[Statistics`RandomMatrixDump`sigr, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`chol], Statistics`RandomMatrixDump`chol = Normal[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`chol, Real], Statistics`RandomMatrixDump`chol = Developer`ToPackedArray[Statistics`RandomMatrixDump`chol]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`res]; Statistics`RandomMatrixDump`chol = N[Statistics`RandomMatrixDump`sigc, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`chol], Statistics`RandomMatrixDump`chol = Normal[Statistics`RandomMatrixDump`chol]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`chol, Real], Statistics`RandomMatrixDump`chol = Developer`ToPackedArray[Statistics`RandomMatrixDump`chol]]; LinearAlgebra`LAPACK`POTRF[\"U\", Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; LinearAlgebra`BLAS`TRMM[\"R\", \"U\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`chol, Statistics`RandomMatrixDump`res]; If[Statistics`RandomMatrixDump`mu =!= None, Statistics`RandomMatrixDump`res += Statistics`RandomMatrixDump`mu]; Statistics`RandomMatrixDump`res]\nRandom`RandomMatrix[MatrixNormalDistribution[Statistics`RandomMatrixDump`mu_, Statistics`RandomMatrixDump`sigr_, Statistics`RandomMatrixDump`sigc_], Statistics`RandomMatrixDump`m_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`status, Statistics`RandomMatrixDump`res, Statistics`RandomMatrixDump`temp, Statistics`RandomMatrixDump`i, Statistics`RandomMatrixDump`lenr, Statistics`RandomMatrixDump`lenc}, Statistics`RandomMatrixDump`cholr = N[Statistics`RandomMatrixDump`sigr, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`cholr], Statistics`RandomMatrixDump`cholr = Normal[Statistics`RandomMatrixDump`cholr]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`cholr, Real], Statistics`RandomMatrixDump`cholr = Developer`ToPackedArray[Statistics`RandomMatrixDump`cholr]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`cholc = N[Statistics`RandomMatrixDump`sigc, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`cholc], Statistics`RandomMatrixDump`cholc = Normal[Statistics`RandomMatrixDump`cholc]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`cholc, Real], Statistics`RandomMatrixDump`cholc = Developer`ToPackedArray[Statistics`RandomMatrixDump`cholc]]; LinearAlgebra`LAPACK`POTRF[\"U\", Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`lenr = Length[Statistics`RandomMatrixDump`sigr]; Statistics`RandomMatrixDump`lenc = Length[Statistics`RandomMatrixDump`sigc]; Which[Max[Statistics`RandomMatrixDump`lenr, Statistics`RandomMatrixDump`lenc] <= Statistics`RandomMatrixDump`$MatrixNormalThreshold, Statistics`RandomMatrixDump`res = Statistics`RandomMatrixDump`cholr . RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`lenr, Statistics`RandomMatrixDump`m, Statistics`RandomMatrixDump`lenc}, WorkingPrecision -> Statistics`RandomMatrixDump`prec] . Statistics`RandomMatrixDump`cholc; Statistics`RandomMatrixDump`res = Transpose[Statistics`RandomMatrixDump`res]; , Statistics`RandomMatrixDump`lenr <= Statistics`RandomMatrixDump`$MatrixNormalThreshold, Statistics`RandomMatrixDump`res = Statistics`RandomMatrixDump`cholr . RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`lenr, Statistics`RandomMatrixDump`m, Statistics`RandomMatrixDump`lenc}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`res = Transpose[Statistics`RandomMatrixDump`res]; Do[Statistics`RandomMatrixDump`temp = Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]]; LinearAlgebra`BLAS`TRMM[\"R\", \"U\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`temp]; Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]] = Statistics`RandomMatrixDump`temp; , {Statistics`RandomMatrixDump`i, Statistics`RandomMatrixDump`m}], Statistics`RandomMatrixDump`lenc <= Statistics`RandomMatrixDump`$MatrixNormalThreshold, Statistics`RandomMatrixDump`res = RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`m, Statistics`RandomMatrixDump`lenr, Statistics`RandomMatrixDump`lenc}, WorkingPrecision -> Statistics`RandomMatrixDump`prec] . Statistics`RandomMatrixDump`cholc; Do[Statistics`RandomMatrixDump`temp = Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`temp]; Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]] = Statistics`RandomMatrixDump`temp; , {Statistics`RandomMatrixDump`i, Statistics`RandomMatrixDump`m}], True, Statistics`RandomMatrixDump`res = RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`m, Statistics`RandomMatrixDump`lenr, Statistics`RandomMatrixDump`lenc}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Do[Statistics`RandomMatrixDump`temp = Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`temp]; LinearAlgebra`BLAS`TRMM[\"R\", \"U\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`temp]; Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]] = Statistics`RandomMatrixDump`temp; , {Statistics`RandomMatrixDump`i, Statistics`RandomMatrixDump`m}]]; If[Statistics`RandomMatrixDump`mu =!= None, Do[Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`i]] += Statistics`RandomMatrixDump`mu; , {Statistics`RandomMatrixDump`i, Statistics`RandomMatrixDump`m}]]; Statistics`RandomMatrixDump`res]\nRandom`RandomMatrix[MatrixTDistribution[Statistics`RandomMatrixDump`mu_, Statistics`RandomMatrixDump`sigr_, Statistics`RandomMatrixDump`sigc_, Statistics`RandomMatrixDump`nu_], Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`status, Statistics`RandomMatrixDump`res, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1, Statistics`RandomMatrixDump`normals}, Statistics`RandomMatrixDump`res = RandomVariate[Random`Private`InternalNormalDistribution[], {Length[Statistics`RandomMatrixDump`sigr], Length[Statistics`RandomMatrixDump`sigc]}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`n = Length[Statistics`RandomMatrixDump`sigr]; Statistics`RandomMatrixDump`mat = DiagonalMatrix[(RandomVariate[ChiDistribution[#1], WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`nu + Statistics`RandomMatrixDump`n - 1, Statistics`RandomMatrixDump`nu, -1]]; If[Statistics`RandomMatrixDump`n > 1, Statistics`RandomMatrixDump`normals = RandomVariate[Random`Private`InternalNormalDistribution[], Binomial[Statistics`RandomMatrixDump`n, 2], WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`ind = Range[Statistics`RandomMatrixDump`n - 1]; Statistics`RandomMatrixDump`ind1 = Transpose[({Prepend[Most[#1] + 1, 1], #1} & )[Accumulate[Statistics`RandomMatrixDump`ind]]]; MapThread[(Statistics`RandomMatrixDump`mat[[#1 + 1,1 ;; #1]] = Take[Statistics`RandomMatrixDump`normals, #2]) & , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}]; ]; LinearAlgebra`BLAS`TRSM[\"L\", \"L\", \"T\", \"N\", 1, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`res]; Statistics`RandomMatrixDump`mat = N[Statistics`RandomMatrixDump`sigr, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`mat], Statistics`RandomMatrixDump`mat = Normal[Statistics`RandomMatrixDump`mat]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`mat, Real], Statistics`RandomMatrixDump`mat = Developer`ToPackedArray[Statistics`RandomMatrixDump`mat]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`res]; Statistics`RandomMatrixDump`mat = N[Statistics`RandomMatrixDump`sigc, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`mat], Statistics`RandomMatrixDump`mat = Normal[Statistics`RandomMatrixDump`mat]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`mat, Real], Statistics`RandomMatrixDump`mat = Developer`ToPackedArray[Statistics`RandomMatrixDump`mat]]; LinearAlgebra`LAPACK`POTRF[\"U\", Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; LinearAlgebra`BLAS`TRMM[\"R\", \"U\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`res]; If[Statistics`RandomMatrixDump`mu =!= None, Statistics`RandomMatrixDump`res += Statistics`RandomMatrixDump`mu]; Statistics`RandomMatrixDump`res]\nRandom`RandomMatrix[MatrixTDistribution[Statistics`RandomMatrixDump`mu_, Statistics`RandomMatrixDump`sigr_, Statistics`RandomMatrixDump`sigc_, Statistics`RandomMatrixDump`nu_], Statistics`RandomMatrixDump`m_, Statistics`RandomMatrixDump`prec_] := Module[{Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`res, Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1, Statistics`RandomMatrixDump`chis, Statistics`RandomMatrixDump`normals, Statistics`RandomMatrixDump`temp, Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`status, Statistics`RandomMatrixDump`n, Statistics`RandomMatrixDump`nQ}, Statistics`RandomMatrixDump`cholr = N[Statistics`RandomMatrixDump`sigr, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`cholr], Statistics`RandomMatrixDump`cholr = Normal[Statistics`RandomMatrixDump`cholr]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`cholr, Real], Statistics`RandomMatrixDump`cholr = Developer`ToPackedArray[Statistics`RandomMatrixDump`cholr]]; LinearAlgebra`LAPACK`POTRF[\"L\", Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`cholc = N[Statistics`RandomMatrixDump`sigc, Statistics`RandomMatrixDump`prec]; If[ !ListQ[Statistics`RandomMatrixDump`cholc], Statistics`RandomMatrixDump`cholc = Normal[Statistics`RandomMatrixDump`cholc]]; If[Statistics`RandomMatrixDump`prec === MachinePrecision &&  !Developer`PackedArrayQ[Statistics`RandomMatrixDump`cholc, Real], Statistics`RandomMatrixDump`cholc = Developer`ToPackedArray[Statistics`RandomMatrixDump`cholc]]; LinearAlgebra`LAPACK`POTRF[\"U\", Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`status]; If[Statistics`RandomMatrixDump`status, Return[$Failed]]; Statistics`RandomMatrixDump`n = Length[Statistics`RandomMatrixDump`sigr]; Statistics`RandomMatrixDump`res = RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`m, Length[Statistics`RandomMatrixDump`sigr], Length[Statistics`RandomMatrixDump`sigc]}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`chis = Transpose[(RandomVariate[ChiDistribution[#1], Statistics`RandomMatrixDump`m, WorkingPrecision -> Statistics`RandomMatrixDump`prec] & ) \/@ Range[Statistics`RandomMatrixDump`nu + Statistics`RandomMatrixDump`n - 1, Statistics`RandomMatrixDump`nu, -1]]; Statistics`RandomMatrixDump`nQ = Statistics`RandomMatrixDump`n > 1; If[Statistics`RandomMatrixDump`nQ, Statistics`RandomMatrixDump`normals = RandomVariate[Random`Private`InternalNormalDistribution[], {Statistics`RandomMatrixDump`m, Binomial[Statistics`RandomMatrixDump`n, 2]}, WorkingPrecision -> Statistics`RandomMatrixDump`prec]; Statistics`RandomMatrixDump`ind = Range[Statistics`RandomMatrixDump`n - 1]; Statistics`RandomMatrixDump`ind1 = Transpose[({Prepend[Most[#1] + 1, 1], #1} & )[Accumulate[Statistics`RandomMatrixDump`ind]]]; ]; Do[Statistics`RandomMatrixDump`mat = DiagonalMatrix[Statistics`RandomMatrixDump`chis[[Statistics`RandomMatrixDump`k]]]; If[Statistics`RandomMatrixDump`nQ, Statistics`RandomMatrixDump`temp = Statistics`RandomMatrixDump`normals[[Statistics`RandomMatrixDump`k]]; MapThread[(Statistics`RandomMatrixDump`mat[[#1 + 1,1 ;; #1]] = Take[Statistics`RandomMatrixDump`temp, #2]) & , {Statistics`RandomMatrixDump`ind, Statistics`RandomMatrixDump`ind1}]; ]; Statistics`RandomMatrixDump`temp = Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`k]]; LinearAlgebra`BLAS`TRSM[\"L\", \"L\", \"T\", \"N\", 1, Statistics`RandomMatrixDump`mat, Statistics`RandomMatrixDump`temp]; LinearAlgebra`BLAS`TRMM[\"L\", \"L\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`cholr, Statistics`RandomMatrixDump`temp]; LinearAlgebra`BLAS`TRMM[\"R\", \"U\", \"N\", \"N\", 1, Statistics`RandomMatrixDump`cholc, Statistics`RandomMatrixDump`temp]; Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`k]] = Statistics`RandomMatrixDump`temp, {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`m}]; If[Statistics`RandomMatrixDump`mu =!= None, Do[Statistics`RandomMatrixDump`res[[Statistics`RandomMatrixDump`k]] += Statistics`RandomMatrixDump`mu, {Statistics`RandomMatrixDump`k, Statistics`RandomMatrixDump`m}]]; Statistics`RandomMatrixDump`res]\nRandom`RandomMatrix[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomMatrix",
	"Statistics`Library`RandomPearsonDistribution":"ObjectType: Symbol\nUsage: Statistics`Library`RandomPearsonDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RandomPearsonDistribution[Statistics`PearsonDistributionsDump`type:1 | 2 | 3 | 4 | 5 | 6 | 7, Statistics`PearsonDistributionsDump`opts:OptionsPattern[]] := Statistics`Library`RandomPearsonDistribution[Statistics`PearsonDistributionsDump`type, True & , Statistics`PearsonDistributionsDump`opts]\nStatistics`Library`RandomPearsonDistribution[Statistics`PearsonDistributionsDump`type:1 | 2 | 3 | 4 | 5 | 6 | 7, Statistics`PearsonDistributionsDump`cond_, OptionsPattern[]] := Module[{Statistics`PearsonDistributionsDump`constr, Statistics`PearsonDistributionsDump`a1, Statistics`PearsonDistributionsDump`a0, Statistics`PearsonDistributionsDump`b2, Statistics`PearsonDistributionsDump`b1, Statistics`PearsonDistributionsDump`b0, Statistics`PearsonDistributionsDump`par, Statistics`PearsonDistributionsDump`rs, Statistics`PearsonDistributionsDump`res}, Statistics`PearsonDistributionsDump`constr = Statistics`PearsonDistributionsDump`PearsonTypeToPredicateHead[Statistics`PearsonDistributionsDump`type][Statistics`PearsonDistributionsDump`a1, Statistics`PearsonDistributionsDump`a0, Statistics`PearsonDistributionsDump`b2, Statistics`PearsonDistributionsDump`b1, Statistics`PearsonDistributionsDump`b0] && Statistics`PearsonDistributionsDump`cond[Statistics`PearsonDistributionsDump`a1, Statistics`PearsonDistributionsDump`a0, Statistics`PearsonDistributionsDump`b2, Statistics`PearsonDistributionsDump`b1, Statistics`PearsonDistributionsDump`b0]; Statistics`PearsonDistributionsDump`rs = OptionValue[RandomSeed]; Statistics`PearsonDistributionsDump`rs = Statistics`PearsonDistributionsDump`rs \/. {Automatic :> Times @@ Rest[Round[Date[]]]}; Statistics`PearsonDistributionsDump`res = FindInstance[Statistics`PearsonDistributionsDump`constr, {Statistics`PearsonDistributionsDump`a1, Statistics`PearsonDistributionsDump`a0, Statistics`PearsonDistributionsDump`b2, Statistics`PearsonDistributionsDump`b1, Statistics`PearsonDistributionsDump`b0}, Rationals, 2, RandomSeeding -> Statistics`PearsonDistributionsDump`rs]; If[Length[Statistics`PearsonDistributionsDump`res] > 0, Statistics`PearsonDistributionsDump`res = BlockRandom[SeedRandom[Statistics`PearsonDistributionsDump`rs]; RandomChoice[Statistics`PearsonDistributionsDump`res]]; Statistics`PearsonDistributionsDump`par = {Statistics`PearsonDistributionsDump`a1, Statistics`PearsonDistributionsDump`a0, Statistics`PearsonDistributionsDump`b2, Statistics`PearsonDistributionsDump`b1, Statistics`PearsonDistributionsDump`b0} \/. Statistics`PearsonDistributionsDump`res; PearsonDistribution @@ {Statistics`PearsonDistributionsDump`type, Sequence @@ Statistics`PearsonDistributionsDump`ToCanonicalPearsonCoefficients[Statistics`PearsonDistributionsDump`par]}, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RandomSeed -> Automatic}\nAttributes: {}\nFullName: Statistics`Library`RandomPearsonDistribution",
	"Random`Private`RandomPointVacuousResult":"ObjectType: Symbol\nUsage: Random`Private`RandomPointVacuousResult\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`Private`RandomPointVacuousResult[(Region`RandomPointDump`reg_Polygon)?Region`Polygon`GeoGridPolygonQ, Region`RandomPointDump`dims_] := With[{Region`RandomPointDump`vacArray = ConstantArray[1, Region`RandomPointDump`dims]}, Region`Polygon`ToGeoGridPosition[Region`RandomPointDump`vacArray, Region`RandomPointDump`reg] \/; ArrayQ[Region`RandomPointDump`vacArray]]\nRandom`Private`RandomPointVacuousResult[(Region`RandomPointDump`reg_Polygon)?Region`Polygon`GeoPositionPolygonQ, Region`RandomPointDump`dims_] := With[{Region`RandomPointDump`vacArray = ConstantArray[1, Region`RandomPointDump`dims]}, Region`Polygon`ToGeoPosition[Region`RandomPointDump`vacArray, Region`RandomPointDump`reg] \/; ArrayQ[Region`RandomPointDump`vacArray]]\nRandom`Private`RandomPointVacuousResult[Region`RandomPointDump`reg_, Region`RandomPointDump`dims_] := With[{Region`RandomPointDump`vacArray = ConstantArray[1, Region`RandomPointDump`dims]}, Region`RandomPointDump`vacArray \/; ArrayQ[Region`RandomPointDump`vacArray]]\nRandom`Private`RandomPointVacuousResult[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`RandomPointVacuousResult",
	"Random`RandomPointVector":"ObjectType: Symbol\nUsage: Random`RandomPointVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomPointVector[Region`RandomPointDump`region_, Region`RandomPointDump`n_Integer, Region`RandomPointDump`wpr_, Region`RandomPointDump`mthd_, Region`RandomPointDump`bbox:Automatic | {Region`RandomPointDump`pmin_, Region`RandomPointDump`pmax_}:Automatic] := Block[{Region`RandomPointDump`res, Region`RandomPointDump`breg, Region`RandomPointDump`prec}, Region`RandomPointDump`breg = Region`RandomPointDump`iApplyBoundingBox[Region`RandomPointDump`region, Normal[Region`RandomPointDump`bbox]]; (Region`RandomPointDump`prec = Region`RandomPointDump`iGetWorkingMachinePrecision[Region`RandomPointDump`wpr, Region`RandomPointDump`region]; (Region`RandomPointDump`res = Region`RandomPointDump`randomPointVector[Region`RandomPointDump`breg, Region`RandomPointDump`n, Region`RandomPointDump`prec, Region`RandomPointDump`mthd, Region`RandomPointDump`bbox]; Region`RandomPointDump`res \/; Region`RandomPointDump`res =!= $Failed) \/; Region`RandomPointDump`prec =!= $Failed) \/; Region`RandomPointDump`breg =!= $Failed]\nRandom`RandomPointVector[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomPointVector",
	"Random`Private`RandomPointVectorReshape":"ObjectType: Symbol\nUsage: Random`Private`RandomPointVectorReshape\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`Private`RandomPointVectorReshape[Region`RandomPointDump`e:_GeoPosition | _GeoGridPosition, Region`RandomPointDump`dim_] \/; With[{Region`RandomPointDump`d = Region`RandomPointDump`e[\"Data\"]}, ArrayQ[Region`RandomPointDump`d] && Region`RandomPointDump`dim === Most[Dimensions[Region`RandomPointDump`d]]] := Region`RandomPointDump`e\nRandom`Private`RandomPointVectorReshape[Region`RandomPointDump`e:_GeoPosition | _GeoGridPosition, Region`RandomPointDump`dim_] := With[{Region`RandomPointDump`d = Region`RandomPointDump`e[\"Data\"]}, With[{Region`RandomPointDump`res = Quiet[ReplacePart[Region`RandomPointDump`e, 1 :> ArrayReshape[Region`RandomPointDump`d, Append[Region`RandomPointDump`dim, Last[Dimensions[Region`RandomPointDump`d]]]]]]}, Region`RandomPointDump`res \/; GIS`GeoLocationQ[Region`RandomPointDump`res]]]\nRandom`Private`RandomPointVectorReshape[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`RandomPointVectorReshape",
	"Random`Private`RandomPointVectorValidQ":"ObjectType: Symbol\nUsage: Random`Private`RandomPointVectorValidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`Private`RandomPointVectorValidQ[Region`RandomPointDump`e:_GeoPosition | _GeoGridPosition, Region`RandomPointDump`n_Integer] := GIS`GeoLocationQ[Region`RandomPointDump`e] === True && With[{Region`RandomPointDump`d = Region`RandomPointDump`e[\"Data\"]}, Length[Region`RandomPointDump`d] == Region`RandomPointDump`n]\nRandom`Private`RandomPointVectorValidQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`RandomPointVectorValidQ",
	"Random`RandomRealRejection":"ObjectType: Symbol\nUsage: Random`RandomRealRejection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomRealRejection[Statistics`RandomNumberGenerationDump`f_, {Statistics`RandomNumberGenerationDump`h_, Statistics`RandomNumberGenerationDump`hatVectorFunction_}, Statistics`RandomNumberGenerationDump`size_Integer, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`hf, Statistics`RandomNumberGenerationDump`hlstblQ, Statistics`RandomNumberGenerationDump`ind}, Statistics`RandomNumberGenerationDump`x = Internal`Bag[]; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u] ||  !1 <= ArrayDepth[Statistics`RandomNumberGenerationDump`u] <= 2, Return[$Failed]]; If[VectorQ[Statistics`RandomNumberGenerationDump`u], Statistics`RandomNumberGenerationDump`dim = 0, Statistics`RandomNumberGenerationDump`dim = Last[Dimensions[Statistics`RandomNumberGenerationDump`u]]]; {Statistics`RandomNumberGenerationDump`hf, Statistics`RandomNumberGenerationDump`hlstblQ} = Statistics`RandomNumberGenerationDump`parseFunction[Statistics`RandomNumberGenerationDump`h, Statistics`RandomNumberGenerationDump`dim, Developer`PackedArrayQ[Statistics`RandomNumberGenerationDump`u]]; {Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ} = Statistics`RandomNumberGenerationDump`parseFunction[Statistics`RandomNumberGenerationDump`f, Statistics`RandomNumberGenerationDump`dim, Developer`PackedArrayQ[Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`ind = 1 + Sign[Statistics`RandomNumberGenerationDump`dim]; While[True, Statistics`RandomNumberGenerationDump`v = RandomReal[{0, 1}, Statistics`RandomNumberGenerationDump`n, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`au = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v*Statistics`RandomNumberGenerationDump`applyFunc[Statistics`RandomNumberGenerationDump`hf, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`hlstblQ, Statistics`RandomNumberGenerationDump`u], Statistics`RandomNumberGenerationDump`applyFunc[Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`au]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`ind]; If[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u], Return[$Failed, Module]]; , Break[]]]; Statistics`RandomNumberGenerationDump`outputProcess[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`dim]]\nRandom`RandomRealRejection[Statistics`RandomNumberGenerationDump`f_, Statistics`RandomNumberGenerationDump`hatVectorFunction_, Statistics`RandomNumberGenerationDump`size_Integer, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`ind}, Statistics`RandomNumberGenerationDump`x = Internal`Bag[]; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u] ||  !1 <= ArrayDepth[Statistics`RandomNumberGenerationDump`u] <= 2, Return[$Failed]]; If[VectorQ[Statistics`RandomNumberGenerationDump`u], Statistics`RandomNumberGenerationDump`dim = 0, Statistics`RandomNumberGenerationDump`dim = Last[Dimensions[Statistics`RandomNumberGenerationDump`u]]]; {Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ} = Statistics`RandomNumberGenerationDump`parseFunction[Statistics`RandomNumberGenerationDump`f, Statistics`RandomNumberGenerationDump`dim, Developer`PackedArrayQ[Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`ind = 1 + Sign[Statistics`RandomNumberGenerationDump`dim]; While[True, Statistics`RandomNumberGenerationDump`v = RandomReal[{0, 1}, Statistics`RandomNumberGenerationDump`n, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`au = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`applyFunc[Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`au]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`ind]; If[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u], Return[$Failed, Module]]; , Break[]]]; Statistics`RandomNumberGenerationDump`outputProcess[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`dim]]\nRandom`RandomRealRejection[\"Log\", Statistics`RandomNumberGenerationDump`logf_, {Statistics`RandomNumberGenerationDump`logh_, Statistics`RandomNumberGenerationDump`hatVectorFunction_}, Statistics`RandomNumberGenerationDump`size_Integer, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`hf, Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`ind, Statistics`RandomNumberGenerationDump`hlstblQ, Statistics`RandomNumberGenerationDump`flstblQ}, Statistics`RandomNumberGenerationDump`x = Internal`Bag[]; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u] ||  !1 <= ArrayDepth[Statistics`RandomNumberGenerationDump`u] <= 2, Return[$Failed]]; If[VectorQ[Statistics`RandomNumberGenerationDump`u], Statistics`RandomNumberGenerationDump`dim = 0, Statistics`RandomNumberGenerationDump`dim = Last[Dimensions[Statistics`RandomNumberGenerationDump`u]]]; {Statistics`RandomNumberGenerationDump`hf, Statistics`RandomNumberGenerationDump`hlstblQ} = Statistics`RandomNumberGenerationDump`parseFunction[Statistics`RandomNumberGenerationDump`logh, Statistics`RandomNumberGenerationDump`dim, Developer`PackedArrayQ[Statistics`RandomNumberGenerationDump`u]]; {Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ} = Statistics`RandomNumberGenerationDump`parseFunction[Statistics`RandomNumberGenerationDump`logf, Statistics`RandomNumberGenerationDump`dim, Developer`PackedArrayQ[Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`ind = 1 + Sign[Statistics`RandomNumberGenerationDump`dim]; While[True, Statistics`RandomNumberGenerationDump`v = Log[RandomReal[{0, 1}, Statistics`RandomNumberGenerationDump`n, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]]; Statistics`RandomNumberGenerationDump`au = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v + Statistics`RandomNumberGenerationDump`applyFunc[Statistics`RandomNumberGenerationDump`hf, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`hlstblQ, Statistics`RandomNumberGenerationDump`u], Statistics`RandomNumberGenerationDump`applyFunc[Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`au]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`ind]; If[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u], Return[$Failed, Module]]; , Break[]]]; Statistics`RandomNumberGenerationDump`outputProcess[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`dim]]\nRandom`RandomRealRejection[\"Log\", Statistics`RandomNumberGenerationDump`logf_, Statistics`RandomNumberGenerationDump`hatVectorFunction_, Statistics`RandomNumberGenerationDump`size_Integer, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`ind}, Statistics`RandomNumberGenerationDump`x = Internal`Bag[]; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u] ||  !1 <= ArrayDepth[Statistics`RandomNumberGenerationDump`u] <= 2, Return[$Failed]]; If[VectorQ[Statistics`RandomNumberGenerationDump`u], Statistics`RandomNumberGenerationDump`dim = 0, Statistics`RandomNumberGenerationDump`dim = Last[Dimensions[Statistics`RandomNumberGenerationDump`u]]]; {Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`flstblQ} = Statistics`RandomNumberGenerationDump`parseFunction[Statistics`RandomNumberGenerationDump`logf, Statistics`RandomNumberGenerationDump`dim, Developer`PackedArrayQ[Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`ind = 1 + Sign[Statistics`RandomNumberGenerationDump`dim]; While[True, Statistics`RandomNumberGenerationDump`v = Log[RandomReal[{0, 1}, Statistics`RandomNumberGenerationDump`n, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]]; Statistics`RandomNumberGenerationDump`au = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`applyFunc[Statistics`RandomNumberGenerationDump`ff, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`flstblQ, Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`au]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`au, Statistics`RandomNumberGenerationDump`ind]; If[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`size - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`hatVectorFunction[Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`prec]; If[ !ArrayQ[Statistics`RandomNumberGenerationDump`u], Return[$Failed, Module]]; , Break[]]]; Statistics`RandomNumberGenerationDump`outputProcess[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`size, Statistics`RandomNumberGenerationDump`dim]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomRealRejection",
	"Random`RandomRealRoU":"ObjectType: Symbol\nUsage: Random`RandomRealRoU\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomRealRoU[{Statistics`RandomNumberGenerationDump`f_, \"Direct\"}, {Statistics`RandomNumberGenerationDump`imu_, Statistics`RandomNumberGenerationDump`ium_, Statistics`RandomNumberGenerationDump`iup_, Statistics`RandomNumberGenerationDump`ivp_}, Statistics`RandomNumberGenerationDump`ddim_, MachinePrecision] := Module[{Statistics`RandomNumberGenerationDump`fun, Statistics`RandomNumberGenerationDump`res}, Statistics`RandomNumberGenerationDump`fun = Compile[{{Statistics`RandomNumberGenerationDump`mu, _Real}, {Statistics`RandomNumberGenerationDump`um, _Real}, {Statistics`RandomNumberGenerationDump`up, _Real}, {Statistics`RandomNumberGenerationDump`vp, _Real}, {Statistics`RandomNumberGenerationDump`dim, _Integer}}, Module[{Statistics`RandomNumberGenerationDump`x = Internal`Bag[], Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`n = 0, Statistics`RandomNumberGenerationDump`u = {0.}, Statistics`RandomNumberGenerationDump`v = {0.}, Statistics`RandomNumberGenerationDump`uk = 0., Statistics`RandomNumberGenerationDump`vk = 0.}, While[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`dim - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = RandomReal[{Statistics`RandomNumberGenerationDump`um, Statistics`RandomNumberGenerationDump`up}, Statistics`RandomNumberGenerationDump`dim]; Statistics`RandomNumberGenerationDump`v = RandomReal[{0, Statistics`RandomNumberGenerationDump`vp}, Statistics`RandomNumberGenerationDump`dim]; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`u\/Statistics`RandomNumberGenerationDump`v + Statistics`RandomNumberGenerationDump`mu; Do[Statistics`RandomNumberGenerationDump`uk = Compile`GetElement[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`k]; Statistics`RandomNumberGenerationDump`vk = Compile`GetElement[Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`k]; If[Statistics`RandomNumberGenerationDump`vk^2 <= Statistics`RandomNumberGenerationDump`f[Statistics`RandomNumberGenerationDump`uk], Statistics`RandomNumberGenerationDump`lenx++; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`uk]]; , {Statistics`RandomNumberGenerationDump`k, 1, Statistics`RandomNumberGenerationDump`n}]; ]; Internal`BagPart[Statistics`RandomNumberGenerationDump`x, 1 ;; Statistics`RandomNumberGenerationDump`dim]], \"RuntimeOptions\" -> {\"CatchMachineOverflow\" -> False, \"CatchMachineUnderflow\" -> False, \"CatchMachineIntegerOverflow\" -> False, \"RuntimeErrorHandler\" -> (Throw[$Failed] & )}]; Statistics`RandomNumberGenerationDump`res = Catch[Statistics`RandomNumberGenerationDump`fun[Statistics`RandomNumberGenerationDump`imu, Statistics`RandomNumberGenerationDump`ium, Statistics`RandomNumberGenerationDump`iup, Statistics`RandomNumberGenerationDump`ivp, Statistics`RandomNumberGenerationDump`ddim]]; Statistics`RandomNumberGenerationDump`res \/; Statistics`RandomNumberGenerationDump`res =!= $Failed]\nRandom`RandomRealRoU[{Statistics`RandomNumberGenerationDump`f_, \"Direct\"}, {Statistics`RandomNumberGenerationDump`mu_, Statistics`RandomNumberGenerationDump`um_, Statistics`RandomNumberGenerationDump`up_, Statistics`RandomNumberGenerationDump`vp_}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`au}, Statistics`RandomNumberGenerationDump`x = Internal`Bag[]; While[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`dim - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = RandomReal[{Statistics`RandomNumberGenerationDump`um, Statistics`RandomNumberGenerationDump`up}, Statistics`RandomNumberGenerationDump`dim, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`v = RandomReal[{0, Statistics`RandomNumberGenerationDump`vp}, Statistics`RandomNumberGenerationDump`dim, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`u = Statistics`RandomNumberGenerationDump`u\/Statistics`RandomNumberGenerationDump`v + Statistics`RandomNumberGenerationDump`mu; Statistics`RandomNumberGenerationDump`au = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v^2, Statistics`RandomNumberGenerationDump`f[Statistics`RandomNumberGenerationDump`u]]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`au]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`au, 1]; ]; Internal`BagPart[Statistics`RandomNumberGenerationDump`x, 1 ;; Statistics`RandomNumberGenerationDump`dim]]\nRandom`RandomRealRoU[{Statistics`RandomNumberGenerationDump`fmin_, Statistics`RandomNumberGenerationDump`fmax_, \"Transformed\"}, {Statistics`RandomNumberGenerationDump`imu_, Statistics`RandomNumberGenerationDump`ium_, Statistics`RandomNumberGenerationDump`iup_, Statistics`RandomNumberGenerationDump`ivp_}, Statistics`RandomNumberGenerationDump`ddim_, MachinePrecision] := Module[{Statistics`RandomNumberGenerationDump`fun, Statistics`RandomNumberGenerationDump`res}, Statistics`RandomNumberGenerationDump`fun = Compile[{{Statistics`RandomNumberGenerationDump`mu, _Real}, {Statistics`RandomNumberGenerationDump`um, _Real}, {Statistics`RandomNumberGenerationDump`up, _Real}, {Statistics`RandomNumberGenerationDump`vp, _Real}, {Statistics`RandomNumberGenerationDump`dim, _Integer}}, Module[{Statistics`RandomNumberGenerationDump`x = Internal`Bag[], Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`n = 0, Statistics`RandomNumberGenerationDump`u = {0.}, Statistics`RandomNumberGenerationDump`v = {0.}, Statistics`RandomNumberGenerationDump`uk = 0., Statistics`RandomNumberGenerationDump`vk = 0.}, While[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`dim - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = RandomReal[{Statistics`RandomNumberGenerationDump`um, Statistics`RandomNumberGenerationDump`up}, Statistics`RandomNumberGenerationDump`dim]; Statistics`RandomNumberGenerationDump`v = RandomReal[{0, Statistics`RandomNumberGenerationDump`vp}, Statistics`RandomNumberGenerationDump`dim]; Do[Statistics`RandomNumberGenerationDump`uk = Compile`GetElement[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`k]; Statistics`RandomNumberGenerationDump`vk = Compile`GetElement[Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`k]; If[Statistics`RandomNumberGenerationDump`fmin[Statistics`RandomNumberGenerationDump`uk, Statistics`RandomNumberGenerationDump`vk] <= Statistics`RandomNumberGenerationDump`fmax[Statistics`RandomNumberGenerationDump`uk, Statistics`RandomNumberGenerationDump`vk], Statistics`RandomNumberGenerationDump`lenx++; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`uk\/Statistics`RandomNumberGenerationDump`vk + Statistics`RandomNumberGenerationDump`mu]]; , {Statistics`RandomNumberGenerationDump`k, 1, Statistics`RandomNumberGenerationDump`n}]; ]; Internal`BagPart[Statistics`RandomNumberGenerationDump`x, 1 ;; Statistics`RandomNumberGenerationDump`dim]], \"RuntimeOptions\" -> {\"CatchMachineOverflow\" -> False, \"CatchMachineUnderflow\" -> False, \"CatchMachineIntegerOverflow\" -> False, \"RuntimeErrorHandler\" -> (Throw[$Failed] & )}]; Statistics`RandomNumberGenerationDump`res = Catch[Statistics`RandomNumberGenerationDump`fun[Statistics`RandomNumberGenerationDump`imu, Statistics`RandomNumberGenerationDump`ium, Statistics`RandomNumberGenerationDump`iup, Statistics`RandomNumberGenerationDump`ivp, Statistics`RandomNumberGenerationDump`ddim]]; Statistics`RandomNumberGenerationDump`res \/; Statistics`RandomNumberGenerationDump`res =!= $Failed]\nRandom`RandomRealRoU[{Statistics`RandomNumberGenerationDump`fmin_, Statistics`RandomNumberGenerationDump`fmax_, \"Transformed\"}, {Statistics`RandomNumberGenerationDump`mu_, Statistics`RandomNumberGenerationDump`um_, Statistics`RandomNumberGenerationDump`up_, Statistics`RandomNumberGenerationDump`vp_}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`n, Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v, Statistics`RandomNumberGenerationDump`lenx = 0, Statistics`RandomNumberGenerationDump`au}, Statistics`RandomNumberGenerationDump`x = Internal`Bag[]; While[Statistics`RandomNumberGenerationDump`lenx < Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`n = Statistics`RandomNumberGenerationDump`dim - Statistics`RandomNumberGenerationDump`lenx; Statistics`RandomNumberGenerationDump`u = RandomReal[{Statistics`RandomNumberGenerationDump`um, Statistics`RandomNumberGenerationDump`up}, Statistics`RandomNumberGenerationDump`dim, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`v = RandomReal[{0, Statistics`RandomNumberGenerationDump`vp}, Statistics`RandomNumberGenerationDump`dim, WorkingPrecision -> Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`au = Random`SelectAcceptedVariates[Statistics`RandomNumberGenerationDump`u\/Statistics`RandomNumberGenerationDump`v + Statistics`RandomNumberGenerationDump`mu, Statistics`RandomNumberGenerationDump`fmin[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v], Statistics`RandomNumberGenerationDump`fmax[Statistics`RandomNumberGenerationDump`u, Statistics`RandomNumberGenerationDump`v]]; Statistics`RandomNumberGenerationDump`lenx += Length[Statistics`RandomNumberGenerationDump`au]; Internal`StuffBag[Statistics`RandomNumberGenerationDump`x, Statistics`RandomNumberGenerationDump`au, 1]; ]; Internal`BagPart[Statistics`RandomNumberGenerationDump`x, 1 ;; Statistics`RandomNumberGenerationDump`dim]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomRealRoU",
	"Random`RandomRealTDR":"ObjectType: Symbol\nUsage: Random`RandomRealTDR\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomRealTDR[{Statistics`RandomNumberGenerationDump`f_, Statistics`RandomNumberGenerationDump`fp_, \"Direct\"}, {Statistics`RandomNumberGenerationDump`bl_, Statistics`RandomNumberGenerationDump`br_}, {(Statistics`RandomNumberGenerationDump`c_)?ExactNumberQ \/; Statistics`RandomNumberGenerationDump`c != -1, (Statistics`RandomNumberGenerationDump`ppoints_)?VectorQ}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b, Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`points = Statistics`RandomNumberGenerationDump`ppoints, Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT}, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT} = Statistics`RandomNumberGenerationDump`TData[Statistics`RandomNumberGenerationDump`c]; While[True, If[Length[Statistics`RandomNumberGenerationDump`points] < 2, Return[$Failed]]; {Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b} = Statistics`RandomNumberGenerationDump`TDRSetup[Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`f, Statistics`RandomNumberGenerationDump`fp, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp}, {Statistics`RandomNumberGenerationDump`bl, Statistics`RandomNumberGenerationDump`br}]; Statistics`RandomNumberGenerationDump`areas = N[Re[Statistics`RandomNumberGenerationDump`HatAreas[Statistics`RandomNumberGenerationDump`b, {Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`points]], Statistics`RandomNumberGenerationDump`prec]; {Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`points} = Statistics`RandomNumberGenerationDump`PruneContactPoints[Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`points]; Switch[Statistics`RandomNumberGenerationDump`breakQ, True, Break[], False, Continue[], _, Return[$Failed]]]; Statistics`RandomNumberGenerationDump`len = Length[Statistics`RandomNumberGenerationDump`points]; Statistics`RandomNumberGenerationDump`FTvals = Statistics`RandomNumberGenerationDump`FT[Statistics`RandomNumberGenerationDump`ft + Statistics`RandomNumberGenerationDump`ftp*(Most[Statistics`RandomNumberGenerationDump`b] - Statistics`RandomNumberGenerationDump`points)]; Statistics`RandomNumberGenerationDump`data = N[{Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, PadRight[Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`len], Statistics`RandomNumberGenerationDump`b[[1 ;; Statistics`RandomNumberGenerationDump`len]], Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`areas}, Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`TDRRejectionLoop[Statistics`RandomNumberGenerationDump`f, {Times, Identity, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`c, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`prec]]\nRandom`RandomRealTDR[{Statistics`RandomNumberGenerationDump`f_, \"Direct\"}, {Statistics`RandomNumberGenerationDump`bl_, Statistics`RandomNumberGenerationDump`br_}, {(Statistics`RandomNumberGenerationDump`c_)?ExactNumberQ \/; Statistics`RandomNumberGenerationDump`c != -1, (Statistics`RandomNumberGenerationDump`ppoints_)?VectorQ, (Statistics`RandomNumberGenerationDump`ffvec_)?VectorQ, (Statistics`RandomNumberGenerationDump`ffpvec_)?VectorQ}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] \/; Length[Statistics`RandomNumberGenerationDump`ffvec] == Length[Statistics`RandomNumberGenerationDump`ffpvec] == Length[Statistics`RandomNumberGenerationDump`ppoints] := Module[{Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b, Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`points = Statistics`RandomNumberGenerationDump`ppoints, Statistics`RandomNumberGenerationDump`fvec = Statistics`RandomNumberGenerationDump`ffvec, Statistics`RandomNumberGenerationDump`fpvec = Statistics`RandomNumberGenerationDump`ffpvec, Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT, Statistics`RandomNumberGenerationDump`range}, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT} = Statistics`RandomNumberGenerationDump`TData[Statistics`RandomNumberGenerationDump`c]; While[True, If[Length[Statistics`RandomNumberGenerationDump`points] < 2, Return[$Failed]]; {Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b} = Statistics`RandomNumberGenerationDump`TDRSetup[Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`fvec, Statistics`RandomNumberGenerationDump`fpvec, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp}, {Statistics`RandomNumberGenerationDump`bl, Statistics`RandomNumberGenerationDump`br}]; Statistics`RandomNumberGenerationDump`areas = N[Re[Statistics`RandomNumberGenerationDump`HatAreas[Statistics`RandomNumberGenerationDump`b, {Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`points]], Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`range = Range[Length[Statistics`RandomNumberGenerationDump`points]]; {Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`range} = Statistics`RandomNumberGenerationDump`PruneContactPoints[Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`range]; Switch[Statistics`RandomNumberGenerationDump`breakQ, True, Break[], False, Statistics`RandomNumberGenerationDump`points = Statistics`RandomNumberGenerationDump`points[[Statistics`RandomNumberGenerationDump`range]]; Statistics`RandomNumberGenerationDump`fvec = Statistics`RandomNumberGenerationDump`fvec[[Statistics`RandomNumberGenerationDump`range]]; Statistics`RandomNumberGenerationDump`fpvec = Statistics`RandomNumberGenerationDump`fpvec[[Statistics`RandomNumberGenerationDump`range]]; Continue[], _, Return[$Failed]]]; Statistics`RandomNumberGenerationDump`len = Length[Statistics`RandomNumberGenerationDump`points]; Statistics`RandomNumberGenerationDump`FTvals = Statistics`RandomNumberGenerationDump`FT[Statistics`RandomNumberGenerationDump`ft + Statistics`RandomNumberGenerationDump`ftp*(Most[Statistics`RandomNumberGenerationDump`b] - Statistics`RandomNumberGenerationDump`points)]; Statistics`RandomNumberGenerationDump`data = N[{Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, PadRight[Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`len], Statistics`RandomNumberGenerationDump`b[[1 ;; Statistics`RandomNumberGenerationDump`len]], Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`areas}, Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`TDRRejectionLoop[Statistics`RandomNumberGenerationDump`f, {Times, Identity, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`c, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`prec]]\nRandom`RandomRealTDR[{Statistics`RandomNumberGenerationDump`Tf_, Statistics`RandomNumberGenerationDump`Tfp_, \"Transformed\"}, {Statistics`RandomNumberGenerationDump`bl_, Statistics`RandomNumberGenerationDump`br_}, {(Statistics`RandomNumberGenerationDump`c_)?ExactNumberQ \/; Statistics`RandomNumberGenerationDump`c != -1, (Statistics`RandomNumberGenerationDump`ppoints_)?VectorQ}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b, Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`points = Statistics`RandomNumberGenerationDump`ppoints, Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT, Statistics`RandomNumberGenerationDump`len}, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT} = Statistics`RandomNumberGenerationDump`TData[Statistics`RandomNumberGenerationDump`c]; While[True, If[Length[Statistics`RandomNumberGenerationDump`points] < 2, Return[$Failed]]; {Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b} = Statistics`RandomNumberGenerationDump`TDRSetup[Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`Tf, Statistics`RandomNumberGenerationDump`Tfp, {Identity, Statistics`RandomNumberGenerationDump`oneFunc}, {Statistics`RandomNumberGenerationDump`bl, Statistics`RandomNumberGenerationDump`br}]; Statistics`RandomNumberGenerationDump`areas = N[Re[Statistics`RandomNumberGenerationDump`HatAreas[Statistics`RandomNumberGenerationDump`b, {Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`points]], Statistics`RandomNumberGenerationDump`prec]; {Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`points} = Statistics`RandomNumberGenerationDump`PruneContactPoints[Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`points]; Switch[Statistics`RandomNumberGenerationDump`breakQ, True, Break[], False, Continue[], _, Return[$Failed]]]; Statistics`RandomNumberGenerationDump`len = Length[Statistics`RandomNumberGenerationDump`points]; Statistics`RandomNumberGenerationDump`FTvals = Statistics`RandomNumberGenerationDump`FT[Statistics`RandomNumberGenerationDump`ft + Statistics`RandomNumberGenerationDump`ftp*(Most[Statistics`RandomNumberGenerationDump`b] - Statistics`RandomNumberGenerationDump`points)]; Statistics`RandomNumberGenerationDump`data = N[{Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, PadRight[Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`len], Statistics`RandomNumberGenerationDump`b[[1 ;; Statistics`RandomNumberGenerationDump`len]], Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`areas}, Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`TDRRejectionLoop[Statistics`RandomNumberGenerationDump`Tf, If[Statistics`RandomNumberGenerationDump`c === 0, {Plus, Statistics`RandomNumberGenerationDump`T, Identity}, {Times, Statistics`RandomNumberGenerationDump`T, Identity}], Statistics`RandomNumberGenerationDump`c, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`prec]]\nRandom`RandomRealTDR[{Statistics`RandomNumberGenerationDump`Tf_, \"Transformed\"}, {Statistics`RandomNumberGenerationDump`bl_, Statistics`RandomNumberGenerationDump`br_}, {(Statistics`RandomNumberGenerationDump`c_)?ExactNumberQ \/; Statistics`RandomNumberGenerationDump`c != -1, (Statistics`RandomNumberGenerationDump`ppoints_)?VectorQ, (Statistics`RandomNumberGenerationDump`fftvec_)?VectorQ, (Statistics`RandomNumberGenerationDump`fftpvec_)?VectorQ}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] \/; Length[Statistics`RandomNumberGenerationDump`fftvec] == Length[Statistics`RandomNumberGenerationDump`fftpvec] == Length[Statistics`RandomNumberGenerationDump`ppoints] := Module[{Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b, Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`points = Statistics`RandomNumberGenerationDump`ppoints, Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT, Statistics`RandomNumberGenerationDump`len, Statistics`RandomNumberGenerationDump`range, Statistics`RandomNumberGenerationDump`ftvec = Statistics`RandomNumberGenerationDump`fftvec, Statistics`RandomNumberGenerationDump`ftpvec = Statistics`RandomNumberGenerationDump`fftpvec}, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT} = Statistics`RandomNumberGenerationDump`TData[Statistics`RandomNumberGenerationDump`c]; While[True, If[Length[Statistics`RandomNumberGenerationDump`points] < 2, Return[$Failed]]; {Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b} = Statistics`RandomNumberGenerationDump`TDRSetup[Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ftvec, Statistics`RandomNumberGenerationDump`ftpvec, None, {Statistics`RandomNumberGenerationDump`bl, Statistics`RandomNumberGenerationDump`br}]; Statistics`RandomNumberGenerationDump`areas = N[Re[Statistics`RandomNumberGenerationDump`HatAreas[Statistics`RandomNumberGenerationDump`b, {Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`points]], Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`range = Range[Length[Statistics`RandomNumberGenerationDump`points]]; {Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`range} = Statistics`RandomNumberGenerationDump`PruneContactPoints[Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`range]; Switch[Statistics`RandomNumberGenerationDump`breakQ, True, Break[], False, Statistics`RandomNumberGenerationDump`points = Statistics`RandomNumberGenerationDump`points[[Statistics`RandomNumberGenerationDump`range]]; Statistics`RandomNumberGenerationDump`ftvec = Statistics`RandomNumberGenerationDump`ftvec[[Statistics`RandomNumberGenerationDump`range]]; Statistics`RandomNumberGenerationDump`ftpvec = Statistics`RandomNumberGenerationDump`ftpvec[[Statistics`RandomNumberGenerationDump`range]]; Continue[], _, Return[$Failed]]]; Statistics`RandomNumberGenerationDump`len = Length[Statistics`RandomNumberGenerationDump`points]; Statistics`RandomNumberGenerationDump`FTvals = Statistics`RandomNumberGenerationDump`FT[Statistics`RandomNumberGenerationDump`ft + Statistics`RandomNumberGenerationDump`ftp*(Most[Statistics`RandomNumberGenerationDump`b] - Statistics`RandomNumberGenerationDump`points)]; Statistics`RandomNumberGenerationDump`data = N[{Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, PadRight[Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`len], Statistics`RandomNumberGenerationDump`b[[1 ;; Statistics`RandomNumberGenerationDump`len]], Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`areas}, Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`TDRRejectionLoop[Statistics`RandomNumberGenerationDump`Tf, If[Statistics`RandomNumberGenerationDump`c === 0, {Plus, Statistics`RandomNumberGenerationDump`T, Identity}, {Times, Statistics`RandomNumberGenerationDump`T, Identity}], Statistics`RandomNumberGenerationDump`c, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`prec]]\nRandom`RandomRealTDR[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomRealTDR",
	"Random`RandomRealTDRConvex":"ObjectType: Symbol\nUsage: Random`RandomRealTDRConvex\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`RandomRealTDRConvex[{Statistics`RandomNumberGenerationDump`f_, Statistics`RandomNumberGenerationDump`fp_, \"Direct\"}, {Statistics`RandomNumberGenerationDump`bl_, Statistics`RandomNumberGenerationDump`br_}, {(Statistics`RandomNumberGenerationDump`c_)?ExactNumberQ \/; Statistics`RandomNumberGenerationDump`c != -1, (Statistics`RandomNumberGenerationDump`ppoints_)?VectorQ}, Statistics`RandomNumberGenerationDump`dim_, Statistics`RandomNumberGenerationDump`prec_] := Module[{Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b, Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`indexes, Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT, Statistics`RandomNumberGenerationDump`len}, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp, Statistics`RandomNumberGenerationDump`invT, Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invFT} = Statistics`RandomNumberGenerationDump`TData[Statistics`RandomNumberGenerationDump`c]; Statistics`RandomNumberGenerationDump`points = Join[{Statistics`RandomNumberGenerationDump`bl}, Statistics`RandomNumberGenerationDump`ppoints, {Statistics`RandomNumberGenerationDump`br}]; While[True, If[Length[Statistics`RandomNumberGenerationDump`points] < 2, Return[$Failed]]; {Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b} = Statistics`RandomNumberGenerationDump`TDRSetup[Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`f, Statistics`RandomNumberGenerationDump`fp, {Statistics`RandomNumberGenerationDump`T, Statistics`RandomNumberGenerationDump`Tp}, None]; Statistics`RandomNumberGenerationDump`areas = N[Re[Statistics`RandomNumberGenerationDump`HatAreas[Statistics`RandomNumberGenerationDump`points, {Statistics`RandomNumberGenerationDump`FT, Statistics`RandomNumberGenerationDump`invT}, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`sp]], Statistics`RandomNumberGenerationDump`prec]; {Statistics`RandomNumberGenerationDump`breakQ, Statistics`RandomNumberGenerationDump`points} = Statistics`RandomNumberGenerationDump`PruneContactPoints[Statistics`RandomNumberGenerationDump`areas, Statistics`RandomNumberGenerationDump`points, \"KeepEndPoints\"]; Switch[Statistics`RandomNumberGenerationDump`breakQ, True, Break[], False, Continue[], _, Return[$Failed]]]; Statistics`RandomNumberGenerationDump`len = Length[Statistics`RandomNumberGenerationDump`points]; If[Statistics`RandomNumberGenerationDump`len < 3, Return[$Failed]]; Statistics`RandomNumberGenerationDump`indexes = Range[1, Statistics`RandomNumberGenerationDump`len - 1]; Statistics`RandomNumberGenerationDump`FTvals = Statistics`RandomNumberGenerationDump`FT[Statistics`RandomNumberGenerationDump`ft]; Statistics`RandomNumberGenerationDump`data = N[PadRight[{Statistics`RandomNumberGenerationDump`points, Statistics`RandomNumberGenerationDump`ft, Statistics`RandomNumberGenerationDump`ftp, Statistics`RandomNumberGenerationDump`sp, Statistics`RandomNumberGenerationDump`b, Statistics`RandomNumberGenerationDump`FTvals, Statistics`RandomNumberGenerationDump`areas}], Statistics`RandomNumberGenerationDump`prec]; Statistics`RandomNumberGenerationDump`TDRConvexRejectionLoop[Statistics`RandomNumberGenerationDump`f, Statistics`RandomNumberGenerationDump`c, Statistics`RandomNumberGenerationDump`data, Statistics`RandomNumberGenerationDump`dim, Statistics`RandomNumberGenerationDump`prec]] \/; Length[Statistics`RandomNumberGenerationDump`ppoints] >= 3\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`RandomRealTDRConvex",
	"NIntegrate`RandomRegion":"ObjectType: Symbol\nUsage: NIntegrate`RandomRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NIntegrate`RandomRegion[(NIntegrate`SimplexQuadratureDump`region_)?RegionQ, NIntegrate`SimplexQuadratureDump`n_] := Module[{NIntegrate`SimplexQuadratureDump`tmr}, Which[MeshRegionQ[NIntegrate`SimplexQuadratureDump`region], If[Region`Mesh`Utilities`SimplexMeshQ[NIntegrate`SimplexQuadratureDump`region], NIntegrate`SimplexQuadratureDump`tmr = NIntegrate`SimplexQuadratureDump`region, Quiet[NIntegrate`SimplexQuadratureDump`tmp = MeshRegion[NIntegrate`SimplexQuadratureDump`region, Method -> {\"DeleteDuplicateCoordinates\" -> {True, Tolerance -> Internal`$EqualTolerance}, \"CheckIntersections\" -> True}]]; If[MeshRegionQ[NIntegrate`SimplexQuadratureDump`tmp], NIntegrate`SimplexQuadratureDump`tmr = Region`Mesh`TriangulateMeshCells[NIntegrate`SimplexQuadratureDump`tmp, MeshQualityGoal -> \"Minimal\"], Return[$Failed], Return[$Failed]], Return[$Failed]]; If[NIntegrate`SimplexQuadratureDump`tmr === $Failed || Head[NIntegrate`SimplexQuadratureDump`tmr] === Region`Mesh`TriangulateMeshCells, Return[$Failed]]; NIntegrate`SimplexQuadratureDump`SimplexMeshRandom[NIntegrate`SimplexQuadratureDump`tmr, NIntegrate`SimplexQuadratureDump`n], BoundaryMeshRegionQ[NIntegrate`SimplexQuadratureDump`region], NIntegrate`SimplexQuadratureDump`BoundaryMeshRegionRandom[NIntegrate`SimplexQuadratureDump`region, NIntegrate`SimplexQuadratureDump`n], Graphics`Region`SymbolicRegionQ[NIntegrate`SimplexQuadratureDump`region], NIntegrate`SimplexQuadratureDump`SymbolicRegionRandom[NIntegrate`SimplexQuadratureDump`region, NIntegrate`SimplexQuadratureDump`n], True, Return[$Failed]; ]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`RandomRegion",
	"NMinimize`RandomSearch":"ObjectType: Symbol\nUsage: NMinimize`RandomSearch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {InitialPoints -> Automatic, Method -> Automatic, PenaltyFunction -> Automatic, PostProcess -> Automatic, RandomSeed -> 0, SearchPoints -> Automatic, Tolerance -> 0.001}\nAttributes: {}\nFullName: NMinimize`RandomSearch",
	"Reduce`RandomSectionInstance":"ObjectType: Symbol\nUsage: Reduce`RandomSectionInstance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RandomSectionInstance[System`InstanceDump`form_, System`InstanceDump`vars_, System`InstanceDump`dom_, {System`InstanceDump`rs_, System`InstanceDump`att_}] := Quiet[BlockRandom[Module[{System`InstanceDump`X, System`InstanceDump`tmp, System`InstanceDump`k, System`InstanceDump`n, System`InstanceDump`rep}, System`InstanceDump`n = Length[System`InstanceDump`vars]; If[System`InstanceDump`n <= 1 || System`InstanceDump`eqcodim[System`InstanceDump`form] > 1, Return[$Failed]]; SeedRandom[System`InstanceDump`rs]; System`InstanceDump`k = 8; Do[System`InstanceDump`rep = Thread[System`InstanceDump`vars -> RandomInteger[{-System`InstanceDump`k, System`InstanceDump`k}, System`InstanceDump`n]*System`InstanceDump`X]; System`InstanceDump`tmp = FindInstance[System`InstanceDump`form \/. System`InstanceDump`rep, System`InstanceDump`X, System`InstanceDump`dom]; If[ !ListQ[System`InstanceDump`tmp], Return[$Failed, Module]]; If[System`InstanceDump`tmp =!= {}, Return[System`InstanceDump`rep \/. System`InstanceDump`tmp, Module]]; System`InstanceDump`k *= 2, {System`InstanceDump`att}]; $Failed]]]\nReduce`RandomSectionInstance[System`InstanceDump`form_, System`InstanceDump`vars_, System`InstanceDump`dom_] := Reduce`RandomSectionInstance[System`InstanceDump`form, System`InstanceDump`vars, System`InstanceDump`dom, {7, 7}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RandomSectionInstance",
	"Statistics`Library`RandomStreamDistributionQ":"ObjectType: Symbol\nUsage: Statistics`Library`RandomStreamDistributionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RandomStreamDistributionQ[Statistics`SolversCommonDump`expr_] := Statistics`SolversCommonDump`iRandomStreamDistributionQ[Statistics`SolversCommonDump`expr] === True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RandomStreamDistributionQ",
	"Random`Private`RandomVariateVector":"ObjectType: Symbol\nUsage: Random`Private`RandomVariateVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Random`Private`RandomVariateVector[Statistics`RandomVariateDump`dist_, _, _, Automatic] \/; Quiet[Statistics`Library`DefiniteDistributionQ[Statistics`RandomVariateDump`dist]] := $Failed\nRandom`Private`RandomVariateVector[Statistics`RandomVariateDump`dist_, Statistics`RandomVariateDump`len_, Statistics`RandomVariateDump`prec_, Except[Automatic, Statistics`RandomVariateDump`method_]] := Module[{Statistics`RandomVariateDump`res, Statistics`RandomVariateDump`opts, Statistics`RandomVariateDump`mth, Statistics`RandomVariateDump`wp}, {Statistics`RandomVariateDump`mth, Statistics`RandomVariateDump`opts} = Statistics`RandomVariateDump`ParseRVMethod[Statistics`RandomVariateDump`method]; If[Statistics`RandomVariateDump`mth === $Failed, Message[RandomVariate::bdmtd, Statistics`RandomVariateDump`method]; Return[$Failed]]; Switch[Statistics`RandomVariateDump`mth, \"InverseTransform\", Statistics`RandomVariateDump`mth = Random`Private`InverseTransform, \"AcceptanceRejection\", Statistics`RandomVariateDump`mth = Random`Private`AcceptanceRejection, \"MCMC\", Statistics`RandomVariateDump`mth = Random`Private`MCMC]; Statistics`RandomVariateDump`opts = System`Utilities`GetMethodOptionValues[RandomVariate, Statistics`RandomVariateDump`mth, Options[Statistics`RandomVariateDump`mth][[All,1]], Statistics`RandomVariateDump`opts]; Statistics`RandomVariateDump`wp = Statistics`RandomVariateDump`prec \/. {Automatic -> MachinePrecision}; Statistics`RandomVariateDump`res = Statistics`RandomVariateDump`mth[Statistics`RandomVariateDump`dist, Statistics`RandomVariateDump`len, Statistics`RandomVariateDump`wp, Statistics`RandomVariateDump`opts]; Statistics`RandomVariateDump`res \/; ArrayQ[Statistics`RandomVariateDump`res, _, Internal`RealValuedNumberQ] || Statistics`RandomVariateDump`res === $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`RandomVariateVector",
	"Charting`RangeBarChart":"ObjectType: Symbol\nUsage: Charting`RangeBarChart\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: (Charting`RangeBarChart[System`BarChartDump`a:PatternSequence[___, Except[_?System`Dump`HeldOptionQ]] | PatternSequence[], System`BarChartDump`o:OptionsPattern[]])?(Function[{System`BarChartDump`arg}, Charting`ChartArgCheck[System`BarChartDump`arg, Charting`iBarChart], HoldFirst]) := With[{System`BarChartDump`res = Catch[Charting`iBarChart[Charting`RangeBarChart, System`BarChartDump`a, System`BarChartDump`o], \"ParseNoData\" | \"ChartingError\", $Failed]}, System`BarChartDump`res \/; Head[Unevaluated[System`BarChartDump`res]] =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                1\n{AlignmentPoint -> Center, AspectRatio -> -----------, Axes -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BarOrigin -> Bottom, BarSpacing -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ChartBaseStyle -> Automatic, ChartElementFunction -> Automatic, ChartElements -> Automatic, ChartLabels -> None, ChartLayout -> Automatic, ChartLegends -> None, ChartStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, IntervalMarkers -> Automatic, IntervalMarkersStyle -> Automatic, Joined -> False, LabelingFunction -> Automatic, LabelingSize -> Automatic, LabelStyle -> {}, LegendAppearance -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme :> $PlotTheme, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, ScalingFunctions -> None, TargetUnits -> Automatic, Ticks -> Automatic, TicksStyle -> {}}\n                                          GoldenRatio\nAttributes: {}\nFullName: Charting`RangeBarChart",
	"FunctionProperties`RangeByDecomposition":"ObjectType: Symbol\nUsage: FunctionProperties`RangeByDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FunctionProperties`RangeByDecomposition[System`UnivariateRangeDump`f_, System`UnivariateRangeDump`constr_, System`UnivariateRangeDump`x_, System`UnivariateRangeDump`y_, System`UnivariateRangeDump`dom_, System`UnivariateRangeDump`opts_] := Module[{System`UnivariateRangeDump`fs, System`UnivariateRangeDump`ans, System`UnivariateRangeDump`cons = System`UnivariateRangeDump`constr, System`UnivariateRangeDump`ff, System`UnivariateRangeDump`i, System`UnivariateRangeDump`n}, System`UnivariateRangeDump`fs = Asymptotics`MaxUnivariateDecomposition[System`UnivariateRangeDump`f, System`UnivariateRangeDump`x]; System`UnivariateRangeDump`n = Length[System`UnivariateRangeDump`fs]; If[System`UnivariateRangeDump`n <= 1, Return[$Failed]]; Do[System`UnivariateRangeDump`ff = System`UnivariateRangeDump`fs[[System`UnivariateRangeDump`i]][System`UnivariateRangeDump`x]; System`UnivariateRangeDump`ans = FunctionRange[{System`UnivariateRangeDump`ff, System`UnivariateRangeDump`cons}, System`UnivariateRangeDump`x, System`UnivariateRangeDump`y, System`UnivariateRangeDump`dom, GeneratedParameters -> System`UnivariateRangeDump`froptgp[System`UnivariateRangeDump`opts], Method -> System`UnivariateRangeDump`froptmet[System`UnivariateRangeDump`opts], WorkingPrecision -> System`UnivariateRangeDump`froptwp[System`UnivariateRangeDump`opts]]; If[Head[System`UnivariateRangeDump`ans] === FunctionRange, Return[$Failed, Module]]; If[System`UnivariateRangeDump`i > 1, System`UnivariateRangeDump`cons = System`UnivariateRangeDump`ans \/. System`UnivariateRangeDump`y -> System`UnivariateRangeDump`x], {System`UnivariateRangeDump`i, System`UnivariateRangeDump`n, 1, -1}]; System`UnivariateRangeDump`ans]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FunctionProperties`RangeByDecomposition",
	"GIS`RangeReverse":"ObjectType: Symbol\nUsage: GIS`RangeReverse[{{amin, amax}, {bmin, bmax}}] returns {{bmin, bmax}, {amin, amax}}.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`RangeReverse[GIS`GeoRangesDump`range:Automatic | $Failed | All | Full | \"World\" | \"AdjustedWorld\"] := GIS`GeoRangesDump`range\nGIS`RangeReverse[GIS`GeoRangesDump`range_List] := Reverse[GIS`GeoRangesDump`range]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`RangeReverse",
	"NIntegrate`RangesFromInterpolatingFunction":"ObjectType: Symbol\nUsage: NIntegrate`RangesFromInterpolatingFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NIntegrate`RangesFromInterpolatingFunction[NIntegrate`InterpolatingFunctionDump`f_, NIntegrate`InterpolatingFunctionDump`ranges_, NIntegrate`InterpolatingFunctionDump`maxSubregions_, NIntegrate`InterpolatingFunctionDump`maxSubregionsOption_, NIntegrate`InterpolatingFunctionDump`wprec_] := Module[{NIntegrate`InterpolatingFunctionDump`ifs, NIntegrate`InterpolatingFunctionDump`ifRanges, NIntegrate`InterpolatingFunctionDump`numsubregions}, NIntegrate`InterpolatingFunctionDump`ifs = Union[Cases[{NIntegrate`InterpolatingFunctionDump`f}, InterpolatingFunction[__][__], Infinity]]; NIntegrate`InterpolatingFunctionDump`ifRanges = (NIntegrate`InterpolatingFunctionDump`ein0[#1, NIntegrate`InterpolatingFunctionDump`ifs, NIntegrate`InterpolatingFunctionDump`wprec] & ) \/@ NIntegrate`InterpolatingFunctionDump`ranges; NIntegrate`InterpolatingFunctionDump`numsubregions = Times @@ (Length[#1] - 2 & ) \/@ NIntegrate`InterpolatingFunctionDump`ifRanges; If[NIntegrate`InterpolatingFunctionDump`numsubregions <= NIntegrate`InterpolatingFunctionDump`maxSubregions, NIntegrate`InterpolatingFunctionDump`ifRanges, NIntegrate`InterpolatingFunctionDump`ranges]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: NIntegrate`RangesFromInterpolatingFunction",
	"GIS`RangesIntersection":"ObjectType: Symbol\nUsage: GIS`RangesIntersection[ranges1, ranges2, ...] returns the intersection of the given ranges,\nuisng flat methods, that is, without taking longitude periodicity into account.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`RangesIntersection[{}, GIS`GeoRangesDump`ranges_] := {}\nGIS`RangesIntersection[GIS`GeoRangesDump`ranges_, {}] := {}\nGIS`RangesIntersection[{{GIS`GeoRangesDump`minA1_, GIS`GeoRangesDump`maxA1_}, {GIS`GeoRangesDump`minB1_, GIS`GeoRangesDump`maxB1_}}, {{GIS`GeoRangesDump`minA2_, GIS`GeoRangesDump`maxA2_}, {GIS`GeoRangesDump`minB2_, GIS`GeoRangesDump`maxB2_}}] := GIS`GeoRangesDump`normalizeEmptyRanges[{{Max[GIS`GeoRangesDump`minA1, GIS`GeoRangesDump`minA2], Min[GIS`GeoRangesDump`maxA1, GIS`GeoRangesDump`maxA2]}, {Max[GIS`GeoRangesDump`minB1, GIS`GeoRangesDump`minB2], Min[GIS`GeoRangesDump`maxB1, GIS`GeoRangesDump`maxB2]}}]\nGIS`RangesIntersection[GIS`GeoRangesDump`range1_, GIS`GeoRangesDump`range2_, GIS`GeoRangesDump`ranges__] := If[Array[{GIS`GeoRangesDump`range1, GIS`GeoRangesDump`range2, GIS`GeoRangesDump`ranges}, 3, NumericQ], GIS`GeoRangesDump`normalizeEmptyRanges[(Through[{Max, Min}[#1]] & ) \/@ Transpose[{GIS`GeoRangesDump`range1, GIS`GeoRangesDump`range2, GIS`GeoRangesDump`ranges}, {3, 1, 2}]], GIS`RangesIntersection[GIS`RangesIntersection[GIS`GeoRangesDump`range1, GIS`GeoRangesDump`range2], GIS`GeoRangesDump`ranges]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`RangesIntersection",
	"GIS`RangesUnion":"ObjectType: Symbol\nUsage: GIS`RangesUnion[ranges1, ranges2, ...] returns the union of the given ranges, using flat methods,\nthat is, without taking longitude periodicity into account. GIS`RangesUnion[ranges] returns ranges. GIS`RangesUnion[] returns {}.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`RangesUnion[{}, {}] = {}\nGIS`RangesUnion[] := {}\nGIS`RangesUnion[{}, GIS`GeoRangesDump`ranges_] := GIS`GeoRangesDump`ranges\nGIS`RangesUnion[GIS`GeoRangesDump`ranges_, {}] := GIS`GeoRangesDump`ranges\nGIS`RangesUnion[{{GIS`GeoRangesDump`minA1_, GIS`GeoRangesDump`maxA1_}, {GIS`GeoRangesDump`minB1_, GIS`GeoRangesDump`maxB1_}}, {{GIS`GeoRangesDump`minA2_, GIS`GeoRangesDump`maxA2_}, {GIS`GeoRangesDump`minB2_, GIS`GeoRangesDump`maxB2_}}] := {{Min[GIS`GeoRangesDump`minA1, GIS`GeoRangesDump`minA2], Max[GIS`GeoRangesDump`maxA1, GIS`GeoRangesDump`maxA2]}, {Min[GIS`GeoRangesDump`minB1, GIS`GeoRangesDump`minB2], Max[GIS`GeoRangesDump`maxB1, GIS`GeoRangesDump`maxB2]}}\nGIS`RangesUnion[GIS`GeoRangesDump`range1_, GIS`GeoRangesDump`range2_, GIS`GeoRangesDump`ranges__] := If[ArrayQ[{GIS`GeoRangesDump`range1, GIS`GeoRangesDump`range2, GIS`GeoRangesDump`ranges}, 3, NumericQ], MinMax \/@ Transpose[{GIS`GeoRangesDump`range1, GIS`GeoRangesDump`range2, GIS`GeoRangesDump`ranges}, {3, 1, 2}], GIS`RangesUnion[GIS`RangesUnion[GIS`GeoRangesDump`range1, GIS`GeoRangesDump`range2], GIS`GeoRangesDump`ranges]]\nGIS`RangesUnion[GIS`GeoRangesDump`ranges_] := GIS`GeoRangesDump`ranges\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`RangesUnion",
	"GIS`RangeTransformation":"ObjectType: Symbol\nUsage: GIS`RangeTransformation[ranges, proj1 -> proj2] returns a bounds matrix that covers the projection of the original ranges in proj1 to the final proj2. GIS`RangeTransformation[ranges, proj] is equivalent to GIS`RangeTransformation[ranges, \"Equirectangular\" -> proj]. If the computation cannot be performed it returns $Failed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`RangeTransformation[GIS`GeoMappingDump`ranges_, GIS`GeoMappingDump`proj_] := Quiet[GIS`GeoMappingDump`rangeTransformation[GIS`GeoMappingDump`ranges, GIS`GeoMappingDump`proj], GeoGridPosition::dom]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`RangeTransformation",
	"Statistics`Library`RankedExpand":"ObjectType: Symbol\nUsage: Statistics`Library`RankedExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RankedExpand[HoldPattern[RankedMin][(Statistics`OrderDistributionsDump`xvec_)?VectorQ, (Statistics`OrderDistributionsDump`k_Integer)?Positive]] := With[{Statistics`OrderDistributionsDump`n = Length[Statistics`OrderDistributionsDump`xvec]}, Which[Statistics`OrderDistributionsDump`k == 1, Min[Statistics`OrderDistributionsDump`xvec], Statistics`OrderDistributionsDump`k == Statistics`OrderDistributionsDump`n, Max[Statistics`OrderDistributionsDump`xvec], True, Min[Table[Max[Statistics`OrderDistributionsDump`s], {Statistics`OrderDistributionsDump`s, Subsets[Statistics`Library`RankedExpand \/@ Statistics`OrderDistributionsDump`xvec, {Statistics`OrderDistributionsDump`k}]}]]] \/; Statistics`OrderDistributionsDump`k <= Statistics`OrderDistributionsDump`n]\nStatistics`Library`RankedExpand[HoldPattern[RankedMax][(Statistics`OrderDistributionsDump`xvec_)?VectorQ, (Statistics`OrderDistributionsDump`k_Integer)?Positive]] := With[{Statistics`OrderDistributionsDump`n = Length[Statistics`OrderDistributionsDump`xvec]}, Which[Statistics`OrderDistributionsDump`k == 1, Max[Statistics`OrderDistributionsDump`xvec], Statistics`OrderDistributionsDump`k == Statistics`OrderDistributionsDump`n, Min[Statistics`OrderDistributionsDump`xvec], True, Max[Table[Min[Statistics`OrderDistributionsDump`s], {Statistics`OrderDistributionsDump`s, Subsets[Statistics`Library`RankedExpand \/@ Statistics`OrderDistributionsDump`xvec, {Statistics`OrderDistributionsDump`k}]}]]] \/; Statistics`OrderDistributionsDump`k <= Statistics`OrderDistributionsDump`n]\nStatistics`Library`RankedExpand[Statistics`OrderDistributionsDump`e_] := If[Internal`LiterallyOccurringQ[Statistics`OrderDistributionsDump`e, {RankedMin, RankedMax}], Developer`ReplaceAllUnheld[Statistics`OrderDistributionsDump`e, Statistics`OrderDistributionsDump`h:HoldPattern[(Alternatives[RankedMin | RankedMax])[_?VectorQ, _Integer?Positive]] :> Statistics`Library`RankedExpand[Statistics`OrderDistributionsDump`h]], Statistics`OrderDistributionsDump`e]\nExcept[HoldPattern[Statistics`Library`RankedExpand][_], HoldPattern[Statistics`Library`RankedExpand][System`Dump`ParameterValidation`args___]] := (ArgumentCountQ[Statistics`Library`RankedExpand, Length[{System`Dump`ParameterValidation`args}], 1, 1]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RankedExpand",
	"Statistics`Library`RankedMinCrossSum":"ObjectType: Symbol\nUsage: Statistics`Library`RankedMinCrossSum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RankedMinCrossSum",
	"System`ConvertersDump`RasterDataPacket":"ObjectType: Symbol\nUsage: System`ConvertersDump`RasterDataPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`RasterDataPacket",
	"Internal`RasterGraphics":"None",
	"Image`RasterInformation":"ObjectType: Symbol\nUsage: Image`RasterInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RasterInformation[Image`ConversionsDump`r:Raster[Image`ConversionsDump`array_, Image`ConversionsDump`ropts:OptionsPattern[Raster]]] := Image`RasterInformation[Raster[Image`ConversionsDump`array, {{0, 0}, Dimensions[Image`ConversionsDump`array][[1 ;; 2]]}, {0, 1}, Image`ConversionsDump`ropts]]\nImage`RasterInformation[Image`ConversionsDump`r:Raster[Image`ConversionsDump`array_, Image`ConversionsDump`size_, Image`ConversionsDump`ropts:OptionsPattern[Raster]]] := Image`RasterInformation[Raster[Image`ConversionsDump`array, Image`ConversionsDump`size, {0, 1}, Image`ConversionsDump`ropts]]\nImage`RasterInformation[Image`ConversionsDump`r:Raster[Image`ConversionsDump`array_, Image`ConversionsDump`size_, Image`ConversionsDump`range_:{0, 1}, Image`ConversionsDump`ropts:OptionsPattern[Raster]]] := Module[{Image`ConversionsDump`dims = Dimensions[Image`ConversionsDump`array], Image`ConversionsDump`h, Image`ConversionsDump`w, Image`ConversionsDump`c, Image`ConversionsDump`cf, Image`ConversionsDump`cfs, Image`ConversionsDump`dtype, Image`ConversionsDump`cs, Image`ConversionsDump`resolution, Image`ConversionsDump`info}, Image`ConversionsDump`info = {}; Image`VerbosePrint[Image`RasterInformation, \"Raster is being verified.\"]; If[Length[Image`ConversionsDump`dims] < 2, Return[$Failed]]; If[Length[Image`ConversionsDump`dims] == 3, Image`ConversionsDump`c = Image`ConversionsDump`dims[[3]]; AppendTo[Image`ConversionsDump`info, Interleaving -> True], Image`ConversionsDump`c = 1; AppendTo[Image`ConversionsDump`info, Interleaving -> False]]; Image`ConversionsDump`h = Image`ConversionsDump`dims[[1]]; Image`ConversionsDump`w = Image`ConversionsDump`dims[[2]]; AppendTo[Image`ConversionsDump`info, \"Dimensions\" -> Image`ConversionsDump`dims]; AppendTo[Image`ConversionsDump`info, \"Height\" -> Image`ConversionsDump`h]; AppendTo[Image`ConversionsDump`info, \"Width\" -> Image`ConversionsDump`w]; AppendTo[Image`ConversionsDump`info, \"Channels\" -> Image`ConversionsDump`c]; AppendTo[Image`ConversionsDump`info, \"RasterRange\" -> Image`ConversionsDump`range]; Image`ConversionsDump`resolution = Lookup[{Image`ConversionsDump`ropts}, ImageResolution, Automatic]; AppendTo[Image`ConversionsDump`info, ColorFunction -> Image`ConversionsDump`cf]; AppendTo[Image`ConversionsDump`info, ColorFunctionScaling -> Image`ConversionsDump`cfs]; AppendTo[Image`ConversionsDump`info, ImageResolution -> Image`ConversionsDump`resolution]; AppendTo[Image`ConversionsDump`info, ImageSizeRaw -> Image`FindImageSizeRaw[{Image`ConversionsDump`w, Image`ConversionsDump`h}, Image`ConversionsDump`resolution]]; AppendTo[Image`ConversionsDump`info, \"ImageDimensions\" -> {Image`ConversionsDump`w, Image`ConversionsDump`h}]; AppendTo[Image`ConversionsDump`info, DataReversed -> If[Image`ConversionsDump`size === {{0, Image`ConversionsDump`h}, {Image`ConversionsDump`w, 0}}, True, False]]; Image`VerbosePrint[Image`RasterInformation, \"Array dimensions consistency verified.\"]; Image`ConversionsDump`dtype = Image`ConversionsDump`guessDataType[Image`ConversionsDump`range, Image`ConversionsDump`array]; If[Image`ConversionsDump`dtype === $Failed, Return[$Failed]; ]; AppendTo[Image`ConversionsDump`info, \"DataType\" -> Image`ConversionsDump`dtype]; Image`VerbosePrint[Image`RasterInformation, \"Data type deduced.\"]; Image`ConversionsDump`cf = Quiet[OptionValue[Raster, {Image`ConversionsDump`ropts}, ColorFunction]]; Image`ConversionsDump`cfs = Quiet[OptionValue[Raster, {Image`ConversionsDump`ropts}, ColorFunctionScaling]]; Image`ConversionsDump`cs = Image`ConversionsDump`guessColorSpace[Image`ConversionsDump`c, Image`ConversionsDump`cf, Image`ConversionsDump`dtype]; AppendTo[Image`ConversionsDump`info, ColorSpace -> Image`ConversionsDump`cs]; If[Image`ConversionsDump`dtype === Image`ConversionsDump`$DataTypeBit && Image`ConversionsDump`cs =!= Image`ConversionsDump`$ColorSpaceAutomatic, Image`ConversionsDump`info = Image`ConversionsDump`info \/. (\"DataType\" -> _) -> \"DataType\" -> Image`ConversionsDump`$DataTypeReal32; ]; Image`VerbosePrint[Image`RasterInformation, \"Color space deduced.\"]; Image`VerbosePrint[Image`RasterInformation, \"Raster verified. Fast conversion can be used.\"]; Image`ConversionsDump`info]\nImage`RasterInformation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`RasterInformation",
	"System`ConvertersDump`RasterizeHiddenOptions":"None",
	"ResourceFunctionHelpers`RatioEqual":"ObjectType: Symbol\nUsage: Return if two lists are equal as ratios.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`RatioEqual[ResourceFunctionHelpers`RatioSimplify`Private`lists__List] \/; ResourceFunctionHelpers`RatioSimplify`Private`heldEqualLengths[ResourceFunctionHelpers`RatioSimplify`Private`lists] && ResourceFunctionHelpers`RatioSimplify`Private`goodRatioExpr[{ResourceFunctionHelpers`RatioSimplify`Private`lists}] := Module[{ResourceFunctionHelpers`RatioSimplify`Private`realFlag = False, ResourceFunctionHelpers`RatioSimplify`Private`symbolReduceFlag = False, ResourceFunctionHelpers`RatioSimplify`Private`ratios = Thread[Hold[{ResourceFunctionHelpers`RatioSimplify`Private`lists}]]}, ResourceFunctionHelpers`RatioSimplify`Private`ratios = (If[ResourceFunctionHelpers`CommonFunctions`RFHContainsQ[#1, (_Real | _Real^(-1))*_?ResourceFunctionHelpers`RatioSimplify`Private`RealNumericQ | _^_?(Abs[#1] > 20 & ), {0, Infinity}], ResourceFunctionHelpers`RatioSimplify`Private`realFlag = True; ResourceFunctionHelpers`RatioSimplify`Private`extremeCaseRatioIntegerize[#1], #1] & ) \/@ ResourceFunctionHelpers`RatioSimplify`Private`ratios; ResourceFunctionHelpers`RatioSimplify`Private`ratios = ReleaseHold[ResourceFunctionHelpers`RatioSimplify`Private`ratios]; ResourceFunctionHelpers`RatioSimplify`Private`ratios = (If[ !FreeQ[#1, _?(NumericQ[#1] &&  !MatchQ[Head[#1], Integer | Real | Rational] & ), {0, Infinity}], ResourceFunctionHelpers`RatioSimplify`Private`ratioSymbolicNumberReduce[#1], #1] & ) \/@ ResourceFunctionHelpers`RatioSimplify`Private`ratios; If[AnyTrue[ResourceFunctionHelpers`RatioSimplify`Private`ratios, ResourceFunctionHelpers`CommonFunctions`RFHContainsQ[#1, _List, 1] & ], ResourceFunctionHelpers`RatioSimplify`Private`ratios = (If[ !FreeQ[#1, _List, 1], #1[[1]], #1] & ) \/@ ResourceFunctionHelpers`RatioSimplify`Private`ratios; ResourceFunctionHelpers`RatioSimplify`Private`symbolReduceFlag = True; ]; ResourceFunctionHelpers`RatioSimplify`Private`ratios = (ResourceFunctionHelpers`RatioSimplify`Private`getMoreRatioLowestTerms[#1, ResourceFunctionHelpers`RatioSimplify`Private`realFlag, ResourceFunctionHelpers`RatioSimplify`Private`symbolReduceFlag] & ) \/@ ResourceFunctionHelpers`RatioSimplify`Private`ratios; TrueQ[Equal @@ ResourceFunctionHelpers`RatioSimplify`Private`ratios]]\nResourceFunctionHelpers`RatioEqual[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: ResourceFunctionHelpers`RatioEqual",
	"Reduce`RationalApproximation":"ObjectType: Symbol\nUsage: Reduce`RationalApproximation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RationalApproximation[(System`ReduceUtilsDump`a_)?Reduce`RationalNumberQ, _] := System`ReduceUtilsDump`a\nReduce`RationalApproximation[-Infinity, _] := -Infinity\nReduce`RationalApproximation[Infinity, _] := Infinity\nReduce`RationalApproximation[System`ReduceUtilsDump`a_, System`ReduceUtilsDump`dir_] := Module[{System`ReduceUtilsDump`aa = System`ReduceUtilsDump`a, System`ReduceUtilsDump`int, System`ReduceUtilsDump`k = 0}, If[ !NumberQ[System`ReduceUtilsDump`aa], If[ !NumericQ[System`ReduceUtilsDump`aa], Return[System`ReduceUtilsDump`dir*Infinity]]; If[Reduce`PzeroQ[System`ReduceUtilsDump`aa], Return[0]]; System`ReduceUtilsDump`aa = N[System`ReduceUtilsDump`aa, 20]; If[ !NumberQ[System`ReduceUtilsDump`aa], Return[System`ReduceUtilsDump`dir*Infinity]]]; If[Head[System`ReduceUtilsDump`aa] === Complex, If[Im[System`ReduceUtilsDump`aa] != 0, Return[System`ReduceUtilsDump`dir*Infinity]]; System`ReduceUtilsDump`aa = Re[System`ReduceUtilsDump`aa]]; System`ReduceUtilsDump`int = Interval[System`ReduceUtilsDump`aa]; If[Head[System`ReduceUtilsDump`int] =!= Interval || Length[System`ReduceUtilsDump`int] != 1, Return[System`ReduceUtilsDump`dir*Infinity]]; System`ReduceUtilsDump`int = System`ReduceUtilsDump`int[[1]]; If[Head[System`ReduceUtilsDump`int] =!= List || Length[System`ReduceUtilsDump`int] != 2, Return[System`ReduceUtilsDump`dir*Infinity]]; System`ReduceUtilsDump`int = SetPrecision[If[System`ReduceUtilsDump`dir == -1, System`ReduceUtilsDump`int[[1]], System`ReduceUtilsDump`int[[2]]], Infinity]; If[ !Reduce`RationalNumberQ[System`ReduceUtilsDump`int], Return[System`ReduceUtilsDump`dir*Infinity]]; If[Precision[System`ReduceUtilsDump`a] =!= Infinity || Reduce`CADCompare[System`ReduceUtilsDump`int, System`ReduceUtilsDump`a] == System`ReduceUtilsDump`dir, Return[System`ReduceUtilsDump`int]]; If[System`ReduceUtilsDump`int == 0, Return[System`ReduceUtilsDump`dir*Infinity]]; System`ReduceUtilsDump`aa = 2^(Ceiling[Log2[Abs[System`ReduceUtilsDump`int]]] - 66); If[ !Reduce`RationalNumberQ[System`ReduceUtilsDump`aa], Return[System`ReduceUtilsDump`dir*Infinity]]; System`ReduceUtilsDump`int += System`ReduceUtilsDump`dir*System`ReduceUtilsDump`aa; While[Reduce`CADCompare[System`ReduceUtilsDump`int, System`ReduceUtilsDump`a] != System`ReduceUtilsDump`dir, System`ReduceUtilsDump`k++; If[System`ReduceUtilsDump`k >= 100, Return[System`ReduceUtilsDump`dir*Infinity, Module]]; System`ReduceUtilsDump`aa *= 2; System`ReduceUtilsDump`int += System`ReduceUtilsDump`dir*System`ReduceUtilsDump`aa]; System`ReduceUtilsDump`int]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RationalApproximation",
	"System`Private`RationalBernoulliB":"ObjectType: Symbol\nUsage: System`Private`RationalBernoulliB\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`RationalBernoulliB[1] := -2^(-1)\nSystem`Private`RationalBernoulliB[0] := 1\nSystem`Private`RationalBernoulliB[System`BernoulliDump`n_Integer] \/; Positive[System`BernoulliDump`n] && EvenQ[System`BernoulliDump`n] := Module[{System`BernoulliDump`tmp, System`BernoulliDump`key}, System`BernoulliDump`tmp = Internal`CheckCache[System`BernoulliDump`key = {BernoulliB, System`BernoulliDump`n}]; If[System`BernoulliDump`tmp === $Failed, System`BernoulliDump`tmp = System`BernoulliDump`McGownBernoulliB[System`BernoulliDump`n]; Internal`DeleteCache[System`BernoulliDump`key]; If[NumberQ[System`BernoulliDump`tmp], Internal`SetCache[System`BernoulliDump`key, System`BernoulliDump`tmp]]; ]; System`BernoulliDump`tmp]\nSystem`Private`RationalBernoulliB[System`BernoulliDump`n_Integer] \/; OddQ[System`BernoulliDump`n] && System`BernoulliDump`n > 1 := 0\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`RationalBernoulliB",
	"Reduce`RationalBetween":"ObjectType: Symbol\nUsage: Reduce`RationalBetween\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RationalBetween",
	"Asymptotics`RationalDecomposition":"ObjectType: Symbol\nUsage: Asymptotics`RationalDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Asymptotics`RationalDecomposition[Asymptotics`AsymptoticsUtilsDump`e_, Asymptotics`AsymptoticsUtilsDump`V_, Asymptotics`AsymptoticsUtilsDump`patt_:None] := Module[{Asymptotics`AsymptoticsUtilsDump`vars, Asymptotics`AsymptoticsUtilsDump`rep, Asymptotics`AsymptoticsUtilsDump`rr}, Asymptotics`AsymptoticsUtilsDump`vars = Reduce`FreeVariables[Asymptotics`AsymptoticsUtilsDump`e, \"Rational\", False]; If[Asymptotics`AsymptoticsUtilsDump`patt =!= None, Asymptotics`AsymptoticsUtilsDump`vars = Select[Asymptotics`AsymptoticsUtilsDump`vars,  !FreeQ[#1, Asymptotics`AsymptoticsUtilsDump`patt] & ]]; {Asymptotics`AsymptoticsUtilsDump`rep, Asymptotics`AsymptoticsUtilsDump`rr} = Asymptotics`AsymptoticsUtilsDump`ratreps[Asymptotics`AsymptoticsUtilsDump`vars, Asymptotics`AsymptoticsUtilsDump`V, Asymptotics`AsymptoticsUtilsDump`patt]; {Asymptotics`AsymptoticsUtilsDump`e \/. Asymptotics`AsymptoticsUtilsDump`rep, Asymptotics`AsymptoticsUtilsDump`rr}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Asymptotics`RationalDecomposition",
	"Internal`RationalFunctionQ":"ObjectType: Symbol\nUsage: Internal`RationalFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RationalFunctionQ",
	"Statistics`Library`RationalizeEquations":"ObjectType: Symbol\nUsage: Statistics`Library`RationalizeEquations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RationalizeEquations",
	"Internal`RationalNoReduce":"ObjectType: Symbol\nUsage: Internal`RationalNoReduce\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RationalNoReduce",
	"Reduce`RationalNumberQ":"ObjectType: Symbol\nUsage: Reduce`RationalNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RationalNumberQ[System`ReduceUtilsDump`x_] := IntegerQ[System`ReduceUtilsDump`x] || (NumberQ[System`ReduceUtilsDump`x] && Head[System`ReduceUtilsDump`x] === Rational)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RationalNumberQ",
	"ResourceFunctionHelpers`RatioSimplify":"ObjectType: Symbol\nUsage: Simplify a list as if it were a ratio.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`RatioSimplify[ResourceFunctionHelpers`RatioSimplify`Private`l:{Except[_List]..}, ResourceFunctionHelpers`RatioSimplify`Private`type:\"SumNormalizedToOne\" | \"EntriesNormalizedToOne\" | \"PieChart\" | All | \"LowestTerms\":\"LowestTerms\", OptionsPattern[]] \/; ResourceFunctionHelpers`RatioSimplify`Private`goodRatioExpr[ResourceFunctionHelpers`RatioSimplify`Private`l] := Module[{ResourceFunctionHelpers`RatioSimplify`Private`r = Hold[ResourceFunctionHelpers`RatioSimplify`Private`l], ResourceFunctionHelpers`RatioSimplify`Private`rstrip, ResourceFunctionHelpers`RatioSimplify`Private`gcd, ResourceFunctionHelpers`RatioSimplify`Private`realFlag = False, ResourceFunctionHelpers`RatioSimplify`Private`rsimp, ResourceFunctionHelpers`RatioSimplify`Private`rSumNormed, ResourceFunctionHelpers`RatioSimplify`Private`rEntriesNormed, ResourceFunctionHelpers`RatioSimplify`Private`piechart, ResourceFunctionHelpers`RatioSimplify`Private`symbolReduceFlag = False, ResourceFunctionHelpers`RatioSimplify`Private`res, ResourceFunctionHelpers`RatioSimplify`Private`params}, If[ResourceFunctionHelpers`CommonFunctions`RFHContainsQ[ResourceFunctionHelpers`RatioSimplify`Private`r, _Real*_?ResourceFunctionHelpers`RatioSimplify`Private`RealNumericQ | _^_?(Abs[#1] > 20 & ), {0, Infinity}], ResourceFunctionHelpers`RatioSimplify`Private`r = ResourceFunctionHelpers`RatioSimplify`Private`extremeCaseRatioIntegerize[ResourceFunctionHelpers`RatioSimplify`Private`r]; ResourceFunctionHelpers`RatioSimplify`Private`realFlag = True; ]; ResourceFunctionHelpers`RatioSimplify`Private`r = ReleaseHold[ResourceFunctionHelpers`RatioSimplify`Private`r]; If[VectorQ[ResourceFunctionHelpers`RatioSimplify`Private`r, Negative], ResourceFunctionHelpers`RatioSimplify`Private`r = -ResourceFunctionHelpers`RatioSimplify`Private`r]; If[ !FreeQ[ResourceFunctionHelpers`RatioSimplify`Private`r, _?ResourceFunctionHelpers`RatioSimplify`Private`symbolicNumberQ], {ResourceFunctionHelpers`RatioSimplify`Private`r, ResourceFunctionHelpers`RatioSimplify`Private`symbolReduceFlag} = ResourceFunctionHelpers`RatioSimplify`Private`ratioSymbolicNumberReduce[ResourceFunctionHelpers`RatioSimplify`Private`r]]; If[ !VectorQ[ResourceFunctionHelpers`RatioSimplify`Private`r, IntegerQ], ResourceFunctionHelpers`RatioSimplify`Private`rstrip = ResourceFunctionHelpers`RatioSimplify`Private`ratioStrip[ResourceFunctionHelpers`RatioSimplify`Private`r]; ResourceFunctionHelpers`RatioSimplify`Private`gcd = Quiet[PolynomialGCD @@ ResourceFunctionHelpers`RatioSimplify`Private`rstrip], ResourceFunctionHelpers`RatioSimplify`Private`rstrip = ResourceFunctionHelpers`RatioSimplify`Private`r; ResourceFunctionHelpers`RatioSimplify`Private`gcd = PolynomialGCD @@ ResourceFunctionHelpers`RatioSimplify`Private`l]; If[ResourceFunctionHelpers`RatioSimplify`Private`realFlag == False, ResourceFunctionHelpers`RatioSimplify`Private`realFlag =  !FreeQ[ResourceFunctionHelpers`RatioSimplify`Private`gcd, _Real]]; ResourceFunctionHelpers`RatioSimplify`Private`rsimp = ResourceFunctionHelpers`RatioSimplify`Private`getRatioLowestTerms[ResourceFunctionHelpers`RatioSimplify`Private`r, ResourceFunctionHelpers`RatioSimplify`Private`gcd, ResourceFunctionHelpers`RatioSimplify`Private`rstrip, ResourceFunctionHelpers`RatioSimplify`Private`realFlag, ResourceFunctionHelpers`RatioSimplify`Private`symbolReduceFlag] \/. _GCD -> 1; ResourceFunctionHelpers`RatioSimplify`Private`rsimp = ResourceFunctionHelpers`RatioSimplify`Private`rsimp\/PolynomialGCD @@ ResourceFunctionHelpers`RatioSimplify`Private`rsimp; ResourceFunctionHelpers`RatioSimplify`Private`rEntriesNormed = ResourceFunctionHelpers`RatioSimplify`Private`getRatioEntriesNormalized[ResourceFunctionHelpers`RatioSimplify`Private`rsimp, ResourceFunctionHelpers`RatioSimplify`Private`realFlag]; If[FreeQ[ResourceFunctionHelpers`RatioSimplify`Private`r, _?Negative], ResourceFunctionHelpers`RatioSimplify`Private`rSumNormed = ResourceFunctionHelpers`RatioSimplify`Private`getRatioSumNormalized[ResourceFunctionHelpers`RatioSimplify`Private`r]; If[FreeQ[ResourceFunctionHelpers`RatioSimplify`Private`r, _?ResourceFunctionHelpers`CommonFunctions`usersymbolQ] && FreeQ[ResourceFunctionHelpers`RatioSimplify`Private`l, _?Negative], ResourceFunctionHelpers`RatioSimplify`Private`piechart = Quiet[PieChart[Thread[Hold[ResourceFunctionHelpers`RatioSimplify`Private`l]] \/. Hold[ResourceFunctionHelpers`RatioSimplify`Private`arg_] :> Tooltip[ResourceFunctionHelpers`RatioSimplify`Private`arg, HoldForm[ResourceFunctionHelpers`RatioSimplify`Private`arg]]]], General::munfl]; ]; ResourceFunctionHelpers`RatioSimplify`Private`params = Cases[{ResourceFunctionHelpers`RatioSimplify`Private`rsimp, ResourceFunctionHelpers`RatioSimplify`Private`rSumNormed, ResourceFunctionHelpers`RatioSimplify`Private`rEntriesNormed}, _?ResourceFunctionHelpers`CommonFunctions`usersymbolQ, Infinity]; ResourceFunctionHelpers`RatioSimplify`Private`res = Quiet[Switch[ResourceFunctionHelpers`RatioSimplify`Private`type, \"LowestTerms\", If[ !MatchQ[ResourceFunctionHelpers`RatioSimplify`Private`rsimp, _List], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RatioSimplify::simp, ResourceFunctionHelpers`RatioSimplify`Private`l, \"to lowest terms\"]; $Failed, FullSimplify[ResourceFunctionHelpers`RatioSimplify`Private`rsimp, Element[ResourceFunctionHelpers`RatioSimplify`Private`params, Reals]]], \"SumNormalizedToOne\", If[ !MatchQ[ResourceFunctionHelpers`RatioSimplify`Private`rSumNormed, _List], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RatioSimplify::simp, ResourceFunctionHelpers`RatioSimplify`Private`l, \"with the sum normalized to one\"]; $Failed, FullSimplify[ResourceFunctionHelpers`RatioSimplify`Private`rSumNormed, Element[ResourceFunctionHelpers`RatioSimplify`Private`params, Reals]]], \"EntriesNormalizedToOne\", If[ !MatchQ[ResourceFunctionHelpers`RatioSimplify`Private`rEntriesNormed, _List], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RatioSimplify::simp, ResourceFunctionHelpers`RatioSimplify`Private`l, \"with entries normalized to one\"]; $Failed, FullSimplify[ResourceFunctionHelpers`RatioSimplify`Private`rEntriesNormed, Element[ResourceFunctionHelpers`RatioSimplify`Private`params, Reals]]], \"PieChart\", If[ !MatchQ[ResourceFunctionHelpers`RatioSimplify`Private`piechart, _Graphics], If[ !FreeQ[Hold[ResourceFunctionHelpers`RatioSimplify`Private`l], _?ResourceFunctionHelpers`CommonFunctions`usersymbolQ], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RatioSimplify::piech, \"variables\"], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`RatioSimplify::piech, \"negative numbers\"]]; $Failed, ResourceFunctionHelpers`RatioSimplify`Private`piechart], All, (FullSimplify[#1, Element[ResourceFunctionHelpers`RatioSimplify`Private`params, Reals]] & ) \/@ Association[\"LowestTerms\" -> ResourceFunctionHelpers`RatioSimplify`Private`rsimp, \"SumNormalizedToOne\" -> ResourceFunctionHelpers`RatioSimplify`Private`rSumNormed, \"EntriesNormalizedToOne\" -> ResourceFunctionHelpers`RatioSimplify`Private`rEntriesNormed, \"PieChart\" -> ResourceFunctionHelpers`RatioSimplify`Private`piechart]], General::munfl]; ResourceFunctionHelpers`RatioSimplify`Private`res = Switch[ResourceFunctionHelpers`RatioSimplify`Private`res, {Except[_List]..} | _Graphics, ResourceFunctionHelpers`RatioSimplify`Private`res, _Association, DeleteCases[ResourceFunctionHelpers`RatioSimplify`Private`res, $Failed | _Symbol?ResourceFunctionHelpers`CommonFunctions`usersymbolQ], _Symbol, $Failed]; ResourceFunctionHelpers`RatioSimplify`Private`res \/; FreeQ[ResourceFunctionHelpers`RatioSimplify`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: ResourceFunctionHelpers`RatioSimplify",
	"Developer`RawArrayConvert":"ObjectType: Symbol\nUsage: Developer`RawArrayConvert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`RawArrayConvert",
	"Developer`RawArrayQ":"ObjectType: Symbol\nUsage: Developer`RawArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`RawArrayQ",
	"Developer`RawArrayQHold":"ObjectType: Symbol\nUsage: Developer`RawArrayQHold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Developer`RawArrayQHold",
	"Developer`RawArrayType":"ObjectType: Symbol\nUsage: Developer`RawArrayType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`RawArrayType",
	"Developer`RawCompress":"ObjectType: Symbol\nUsage: Developer`RawCompress\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`RawCompress",
	"System`ConvertersDump`RawImport":"ObjectType: Symbol\nUsage: System`ConvertersDump`RawImport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`RawImport[System`ConvertersDump`format_, {\"Rules\"}] := System`ConvertersDump`RawImport[System`ConvertersDump`format, {All}]\nSystem`ConvertersDump`RawImport[System`ConvertersDump`format_, {\"Rules\", System`ConvertersDump`sub__}] := System`ConvertersDump`RawImport[System`ConvertersDump`format, {System`ConvertersDump`sub}]\nSystem`ConvertersDump`RawImport[System`ConvertersDump`format_, {\"Options\" | Options}] := System`ConvertersDump`RawImport[System`ConvertersDump`format, {System`ConvertersDump`importOptions[System`ConvertersDump`format]}]\nSystem`ConvertersDump`RawImport[System`ConvertersDump`format_, {\"Options\" | Options, System`ConvertersDump`sub__}] := System`ConvertersDump`RawImport[System`ConvertersDump`format, {System`ConvertersDump`sub}]\nSystem`ConvertersDump`RawImport[System`ConvertersDump`format_, System`ConvertersDump`elem_] := System`ConvertersDump`rawImport[System`ConvertersDump`format, System`ConvertersDump`elem]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`RawImport",
	"Charting`RawOptions":"ObjectType: Symbol\nUsage: Charting`RawOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`RawOptions[Charting`StoreDump`obj_, Charting`StoreDump`fn_List, Charting`StoreDump`o:OptionsPattern[]] := Module[{Charting`StoreDump`options, Charting`StoreDump`optionvalues, Charting`StoreDump`extra, Charting`StoreDump`extravalues, Charting`StoreDump`baseStore}, Charting`InitializeStore[Charting`StoreDump`baseStore]; Charting`InheritStore[Charting`StoreDump`baseStore, Charting`StoreDump`obj]; Charting`StoreDump`options = Join @@ Table[Options[Charting`StoreDump`fn[[Charting`StoreDump`i]]][[All,1]], {Charting`StoreDump`i, Length[Charting`StoreDump`fn]}]; Charting`StoreDump`optionvalues = Quiet[OptionValue[Charting`StoreDump`fn, Flatten[{Charting`StoreDump`o}], Charting`StoreDump`options]]; Charting`StoreDump`extra = FilterRules[Flatten[{Charting`StoreDump`o}], Except[Charting`StoreDump`options]]; {Charting`StoreDump`extra, Charting`StoreDump`extravalues} = If[Length[Charting`StoreDump`extra] > 0, Transpose[Apply[List, Charting`StoreDump`extra, {1}]], {{}, {}}]; Charting`StoreDump`options = Join[Charting`StoreDump`options, Charting`StoreDump`extra]; Charting`StoreDump`optionvalues = Join[Charting`StoreDump`optionvalues, Charting`StoreDump`extravalues]; Charting`AddProperties[Charting`StoreDump`baseStore, Charting`StoreDump`options]; Do[Charting`StoreDump`baseStore[Charting`StoreDump`options[[Charting`StoreDump`i]]] = Charting`StoreDump`optionvalues[[Charting`StoreDump`i]], {Charting`StoreDump`i, Length[Charting`StoreDump`options]}]; Charting`StoreDump`obj \/: ClearAll[Charting`StoreDump`obj] := Clear[Charting`StoreDump`obj]; Charting`StoreDump`obj \/: Clear[Charting`StoreDump`obj] := (Remove[Charting`StoreDump`baseStore]; Remove[Charting`StoreDump`obj]; ); ]\nCharting`RawOptions[Charting`StoreDump`obj_, Charting`StoreDump`fn_, Charting`StoreDump`o:OptionsPattern[]] := Charting`RawOptions[Charting`StoreDump`obj, {Charting`StoreDump`fn}, Charting`StoreDump`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`RawOptions",
	"Region`RawRegionMakeBoxes":"ObjectType: Symbol\nUsage: Region`RawRegionMakeBoxes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RawRegionMakeBoxes[Region`RegionGraphicsBoxDump`reg_, Region`RegionGraphicsBoxDump`fmt_] \/; Refresh[BoxForm`UseTextFormattingQ, None] := ToString[Unevaluated[Region`RegionGraphicsBoxDump`reg], InputForm]\nRegion`RawRegionMakeBoxes[(Region`RegionGraphicsBoxDump`reg_)?MeshRegionQ, Region`RegionGraphicsBoxDump`fmt_] := Region`Mesh`MeshRegionMakeBoxes[Region`RegionGraphicsBoxDump`reg, Region`RegionGraphicsBoxDump`fmt]\nRegion`RawRegionMakeBoxes[(Region`RegionGraphicsBoxDump`reg_)?BoundaryMeshRegionQ, Region`RegionGraphicsBoxDump`fmt_] := Region`Mesh`MeshRegionMakeBoxes[Region`RegionGraphicsBoxDump`reg, Region`RegionGraphicsBoxDump`fmt]\nRegion`RawRegionMakeBoxes[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RawRegionMakeBoxes",
	"Developer`RawUncompress":"ObjectType: Symbol\nUsage: Developer`RawUncompress\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`RawUncompress",
	"XML`RawXML":"ObjectType: Symbol\nUsage: RawXML[\"string\"] represents a raw string fragment of XML that can be used inside a SymbolicXML expression. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: XML`RawXML",
	"Reduce`RChineseRemainder":"ObjectType: Symbol\nUsage: Reduce`RChineseRemainder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RChineseRemainder[System`RNumberTheoryDump`a_List, System`RNumberTheoryDump`m_List] := Catch[Module[{System`RNumberTheoryDump`res, System`RNumberTheoryDump`prod = Times @@ System`RNumberTheoryDump`m, System`RNumberTheoryDump`lcm = LCM @@ System`RNumberTheoryDump`m}, If[ArrayDepth[System`RNumberTheoryDump`a] == 1, If[Equal @@ System`RNumberTheoryDump`a, Throw[Mod[First[System`RNumberTheoryDump`a], System`RNumberTheoryDump`lcm]]]; If[Equal @@ (System`RNumberTheoryDump`a - System`RNumberTheoryDump`m), Throw[Mod[First[System`RNumberTheoryDump`a] - First[System`RNumberTheoryDump`m], System`RNumberTheoryDump`lcm]]]; ]; If[System`RNumberTheoryDump`lcm == System`RNumberTheoryDump`prod && ((Max[System`RNumberTheoryDump`m] < 2^200 && Length[System`RNumberTheoryDump`m] < 2^9) || BitLength[System`RNumberTheoryDump`prod] < 2^16), System`RNumberTheoryDump`res = System`RNumberTheoryDump`CRTStandard[System`RNumberTheoryDump`a, System`RNumberTheoryDump`m], System`RNumberTheoryDump`res = Catch[System`RNumberTheoryDump`CRTlist1[System`RNumberTheoryDump`a, System`RNumberTheoryDump`m, System`RNumberTheoryDump`prod == System`RNumberTheoryDump`lcm]]; If[System`RNumberTheoryDump`res =!= {}, System`RNumberTheoryDump`res = System`RNumberTheoryDump`res[[Sequence @@ ConstantArray[All, ArrayDepth[System`RNumberTheoryDump`a] - 1],1]]]; ]; System`RNumberTheoryDump`res]] \/; (ArrayDepth[System`RNumberTheoryDump`a] == 1 && Length[System`RNumberTheoryDump`a] == Length[System`RNumberTheoryDump`m]) || ArrayDepth[System`RNumberTheoryDump`a] > 1\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RChineseRemainder",
	"RegularChains`Private`RCV":"ObjectType: Symbol\nUsage: RegularChains`Private`RCV\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RegularChains`Private`RCV",
	"Region`Private`RDimVar":"ObjectType: Symbol\nUsage: Region`Private`RDimVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Private`RDimVar",
	"Reduce`RDisjoint":"ObjectType: Symbol\nUsage: Reduce`RDisjoint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RDisjoint",
	"StringPattern`Dump`RE":"ObjectType: Symbol\nUsage: StringPattern`Dump`RE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StringPattern`Dump`RE",
	"MLFS`Read":"ObjectType: Symbol\nUsage: MLFS`Read\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MLFS`Read",
	"Developer`ReadExpressionJSONFile":"ObjectType: Symbol\nUsage: Developer`ReadExpressionJSONFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadExpressionJSONFile}\nAttributes: {}\nFullName: Developer`ReadExpressionJSONFile",
	"Developer`ReadExpressionJSONStream":"ObjectType: Symbol\nUsage: Developer`ReadExpressionJSONStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadExpressionJSONStream}\nAttributes: {}\nFullName: Developer`ReadExpressionJSONStream",
	"Developer`ReadExpressionJSONString":"ObjectType: Symbol\nUsage: Developer`ReadExpressionJSONString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FromByteString -> False, IssueMessagesAs -> Developer`ReadExpressionJSONString}\nAttributes: {}\nFullName: Developer`ReadExpressionJSONString",
	"IMAQ`Driver`ReadFunction":"ObjectType: Symbol\nUsage: IMAQ`Driver`ReadFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: IMAQ`Driver`ReadFunction[{ImageAcquisition`CaptureDump`iHandle_, ImageAcquisition`CaptureDump`handle_}, ImageAcquisition`CaptureDump`args___] := Module[{ImageAcquisition`CaptureDump`t0, ImageAcquisition`CaptureDump`firstFrame, ImageAcquisition`CaptureDump`index, ImageAcquisition`CaptureDump`iFrameRate}, ImageAcquisition`CaptureDump`index = First[ImageAcquisition`CaptureDump`handle]; ImageAcquisition`CaptureDump`iFrameRate = IMAQTools`OmniStream`GetSoftFrameRate[ImageAcquisition`CaptureDump`index]; ImageAcquisition`CaptureDump`t0 = AbsoluteTime[]; If[ImageAcquisition`CaptureDump`t0 < ImageAcquisition`CaptureDump`getLastDeviceReadTime[ImageAcquisition`CaptureDump`index] + 1.\/ImageAcquisition`CaptureDump`iFrameRate, Pause[(ImageAcquisition`CaptureDump`getLastDeviceReadTime[ImageAcquisition`CaptureDump`index] + 1.\/ImageAcquisition`CaptureDump`iFrameRate) - ImageAcquisition`CaptureDump`t0]; ]; ImageAcquisition`CaptureDump`firstFrame =  !Positive[ImageAcquisition`CaptureDump`getLastDeviceReadTime[ImageAcquisition`CaptureDump`index]]; ImageAcquisition`CaptureDump`setLastDeviceReadTime[ImageAcquisition`CaptureDump`index, AbsoluteTime[]]; IMAQTools`OmniStream`KeepAlive[ImageAcquisition`CaptureDump`index]; IMAQTools`OmniStream`GrabFrame[ImageAcquisition`CaptureDump`index, \"CheckAutoExposure\" :> ImageAcquisition`CaptureDump`enableAutoExposureCheck[IMAQTools`OmniStream`GetBufferMode[ImageAcquisition`CaptureDump`index]] && ImageAcquisition`CaptureDump`firstFrame]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: IMAQ`Driver`ReadFunction",
	"PersistenceLocations`ReadOnlyQ":"ObjectType: Symbol\nUsage: PersistenceLocations`ReadOnlyQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`ReadOnlyQ",
	"Developer`ReadRawJSONFile":"ObjectType: Symbol\nUsage: Developer`ReadRawJSONFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadRawJSONFile, JSONObjectAsList -> False}\nAttributes: {}\nFullName: Developer`ReadRawJSONFile",
	"Developer`ReadRawJSONStream":"ObjectType: Symbol\nUsage: Developer`ReadRawJSONStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadRawJSONStream, JSONObjectAsList -> False}\nAttributes: {}\nFullName: Developer`ReadRawJSONStream",
	"Developer`ReadRawJSONString":"ObjectType: Symbol\nUsage: Developer`ReadRawJSONString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FromByteString -> False, IssueMessagesAs -> Developer`ReadRawJSONString, JSONObjectAsList -> False}\nAttributes: {}\nFullName: Developer`ReadRawJSONString",
	"Developer`ReadRegistryKeyValues":"ObjectType: Symbol\nUsage: Developer`ReadRegistryKeyValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`ReadRegistryKeyValues",
	"Internal`ReadStorage":"ObjectType: Symbol\nUsage: Internal`ReadStorage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`ReadStorage[ImportExport`HashDump`decoder_, ImportExport`HashDump`filename_String] := Catch[Block[{ImportExport`HashDump`data}, If[ !FileExistsQ[ImportExport`HashDump`filename], Throw[None]]; If[ !ImportExport`FileFormatQ[ImportExport`HashDump`filename, \"MX\"], Throw[$Failed]]; ImportExport`HashDump`data = Quiet[Check[Import[ImportExport`HashDump`filename, \"MX\"], Throw[$Failed]]]; ImportExport`HashDump`decoder[ImportExport`HashDump`data]]]\nInternal`ReadStorage[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ReadStorage",
	"System`Convert`CommonVideoDump`ReadSupportedDecodersPerContainer":"ObjectType: Symbol\nUsage: System`Convert`CommonVideoDump`ReadSupportedDecodersPerContainer\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`CommonVideoDump`ReadSupportedDecodersPerContainer",
	"System`Convert`CommonVideoDump`ReadSupportedEncodersPerContainer":"ObjectType: Symbol\nUsage: System`Convert`CommonVideoDump`ReadSupportedEncodersPerContainer\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`CommonVideoDump`ReadSupportedEncodersPerContainer",
	"Developer`ReadUBJSONByteArray":"ObjectType: Symbol\nUsage: Developer`ReadUBJSONByteArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadUBJSONByteArray, PackStronglyTypedArray -> True}\nAttributes: {}\nFullName: Developer`ReadUBJSONByteArray",
	"Developer`ReadUBJSONFile":"ObjectType: Symbol\nUsage: Developer`ReadUBJSONFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadUBJSONFile, PackStronglyTypedArray -> True}\nAttributes: {}\nFullName: Developer`ReadUBJSONFile",
	"Developer`ReadUBJSONStream":"ObjectType: Symbol\nUsage: Developer`ReadUBJSONStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadUBJSONStream, PackStronglyTypedArray -> True}\nAttributes: {}\nFullName: Developer`ReadUBJSONStream",
	"FFmpegTools`ReadVideoProperties":"ObjectType: Symbol\nUsage: FFmpegTools`ReadVideoProperties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FFmpegTools`ReadVideoProperties",
	"Developer`ReadWXFByteArray":"ObjectType: Symbol\nUsage: Developer`ReadWXFByteArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadWXFByteArray}\nAttributes: {}\nFullName: Developer`ReadWXFByteArray",
	"Developer`ReadWXFFile":"ObjectType: Symbol\nUsage: Developer`ReadWXFFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadWXFFile}\nAttributes: {}\nFullName: Developer`ReadWXFFile",
	"Developer`ReadWXFStream":"ObjectType: Symbol\nUsage: Developer`ReadWXFStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`ReadWXFStream}\nAttributes: {}\nFullName: Developer`ReadWXFStream",
	"FunctionProperties`RealAnalyticQ":"ObjectType: Symbol\nUsage: FunctionProperties`RealAnalyticQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FunctionProperties`RealAnalyticQ[System`ContinuousDump`ff_, System`ContinuousDump`vars_, System`ContinuousDump`assum_:True] := Module[{System`ContinuousDump`fs, System`ContinuousDump`trsc}, System`ContinuousDump`fs = If[ListQ[System`ContinuousDump`ff], System`ContinuousDump`ff, {System`ContinuousDump`ff}]; Assumptions`AssumptionsBlock[Element[System`ContinuousDump`vars, Reals] && If[System`ContinuousDump`assum === Automatic, Assumptions`AllAssumptions[], System`ContinuousDump`assum], If[ !And @@ Assumptions`ARealQ \/@ System`ContinuousDump`fs, Return[False]]; System`ContinuousDump`trsc = Select[System`ContinuousDump`fs,  !PolynomialQ[#1, System`ContinuousDump`vars] & ]; If[System`ContinuousDump`trsc === {}, Return[True]]; Catch[System`ContinuousDump`MVAnalyticQ[System`ContinuousDump`trsc, System`ContinuousDump`vars]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FunctionProperties`RealAnalyticQ",
	"Statistics`Library`RealArrayQ":"ObjectType: Symbol\nUsage: Statistics`Library`RealArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RealArrayQ[Statistics`Library`Dump`x_] := ArrayQ[Statistics`Library`Dump`x, _, Internal`RealValuedNumericQ]\nStatistics`Library`RealArrayQ[Statistics`Library`Dump`x_, Statistics`Library`Dump`n_] := ArrayQ[Statistics`Library`Dump`x, Statistics`Library`Dump`n, Internal`RealValuedNumericQ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RealArrayQ",
	"System`Private`RealBignumRoots":"ObjectType: Symbol\nUsage: System`Private`RealBignumRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`RealBignumRoots",
	"Internal`RealContinuedFraction":"ObjectType: Symbol\nUsage: Internal`RealContinuedFraction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RealContinuedFraction",
	"FunctionProperties`Private`RealFunctionProperties":"ObjectType: Symbol\nUsage: FunctionProperties`Private`RealFunctionProperties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FunctionProperties`Private`RealFunctionProperties[Abs[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[AiryAi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{AiryAiPrime[#1] & , -3.2481975821798365378754237707800000000000000000000000000001`29.51164243874665}], AiryAi[Root[{AiryAiPrime[#1] & , -3.2481975821798365378754237707800000000000000000000000000001`29.51164243874665}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Root[{AiryAiPrime[#1] & , -1.0187929716474710890173247833999999999999999999999999999999`30.00808594023225}], AiryAi[Root[{AiryAiPrime[#1] & , -1.0187929716474710890173247833999999999999999999999999999999`30.00808594023225}]], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[AiryAiPrime[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[AiryBi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{AiryBiPrime[#1] & , -2.29443968261412324662245867377`29.36067664522869}], AiryBi[Root[{AiryBiPrime[#1] & , -2.29443968261412324662245867377`29.36067664522869}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[AiryBiPrime[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[AlternatingFactorial[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0 && System`RealFunctionPropertiesDump`x < -1, -Infinity, Indeterminate, Infinity}, {Sin[(Pi*(System`RealFunctionPropertiesDump`x + 1))\/2] == 0 && System`RealFunctionPropertiesDump`x < -1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < -1, -Infinity, False}, \"GlobalMaxima\" -> {(Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < -1) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{Derivative[2][AlternatingFactorial][#1] & , -0.543218453445396816881314351932`29.734974514758058}] || System`RealFunctionPropertiesDump`x == Root[{Derivative[2][AlternatingFactorial][#1] & , 1.42827553203432208536231115982`29.15481199630515}], \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{Derivative[2][AlternatingFactorial][#1] & , -1.19018433276935344`17.075614229043715}] || System`RealFunctionPropertiesDump`x == Root[{Derivative[2][AlternatingFactorial][#1] & , 0.526923381260233158226694803841`29.72174747002279}], \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcCos[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, Pi, Pi}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, Pi, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcCosh[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{1, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcCot[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -(Pi\/2), Pi\/2, Pi\/2}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -(Pi\/2), False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Pi\/2, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcCoth[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {-1, -Infinity, Indeterminate}}, {{1, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcCsc[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {-1, -(Pi\/2), -(Pi\/2)}}, {{1, Pi\/2, Pi\/2}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -(Pi\/2), True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Pi\/2, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcCsch[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcSec[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Pi\/2, Indeterminate}, {-1, Pi, Pi}}, {{1, 0, 0}, {Infinity, Pi\/2, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, Pi, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcSech[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/Sqrt[2], \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcSin[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, -(Pi\/2), -(Pi\/2)}, {1, Pi\/2, Pi\/2}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -(Pi\/2), True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Pi\/2, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcSinh[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcTan[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -(Pi\/2), Indeterminate}, {Infinity, Pi\/2, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -(Pi\/2), False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Pi\/2, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcTanh[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Arg[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Pi, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Pi, 0, 0}}, \"GlobalMonotonicity\" -> -2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != 0, \"GlobalMinima\" -> {0 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 0, Pi, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BarnesG[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BartlettHannWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/4), \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/4, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[BartlettWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[BlackmanHarrisWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 3\/50000, 3\/50000}, {System`RealFunctionPropertiesDump`x == 1\/2, 3\/50000, 3\/50000, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[AlgebraicNumber[Root[-20992879918085250647097 + 8862002516871279*#1^2 + 491422761*#1^4 + #1^6 & , 2], {0, 1\/2829, 0, 0, 0, 0}]]\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[AlgebraicNumber[Root[-20992879918085250647097 + 8862002516871279*#1^2 + 491422761*#1^4 + #1^6 & , 2], {0, -(1\/2829), 0, 0, 0, 0}]]\/Pi, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BlackmanNuttallWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 907\/2500000, 907\/2500000}, {System`RealFunctionPropertiesDump`x == 1\/2, 907\/2500000, 907\/2500000, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == (1*ArcTan[AlgebraicNumber[Root[-1504885147105982712409943392136589 + 131736246967445119770015*#1^2 + 1719899791965*#1^4 + #1^6 & , 2], {0, 1\/192747, 0, 0, 0, 0}]])\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == (1*ArcTan[AlgebraicNumber[Root[-1504885147105982712409943392136589 + 131736246967445119770015*#1^2 + 1719899791965*#1^4 + #1^6 & , 2], {0, -(1\/192747), 0, 0, 0, 0}]])\/Pi, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BlackmanWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(ArcTan[Sqrt[(1*(-16 + 3*Sqrt[33]))\/3]]\/Pi), \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[Sqrt[(1*(-16 + 3*Sqrt[33]))\/3]]\/Pi, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[BohmanWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{Pi*Cos[2*Pi*#1] + Sin[2*Pi*#1] + 2*Pi*Cos[2*Pi*#1]*#1 & , -0.177113161728297230714`20.24825083591384}], \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{-(Pi*Cos[2*Pi*#1]) + Sin[2*Pi*#1] + 2*Pi*Cos[2*Pi*#1]*#1 & , 0.177113161728297230714`20.24825083591384}], \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[CatalanNumber[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < -1 && Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, Infinity, Indeterminate, -Infinity}, {System`RealFunctionPropertiesDump`x == -(1\/2), -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] != 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[CauchyWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1\/10, 1\/10}, {System`RealFunctionPropertiesDump`x == 1\/2, 1\/10, 1\/10, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/(6*Sqrt[3])), \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/(6*Sqrt[3]), \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Ceiling[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x + 1}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Clip[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || System`RealFunctionPropertiesDump`x > 1, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -1 || System`RealFunctionPropertiesDump`x >= 1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1, -1, True}, \"GlobalMaxima\" -> {1 <= System`RealFunctionPropertiesDump`x, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[Conjugate[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ConnesWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/(2*Sqrt[3])), \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/(2*Sqrt[3]), \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[Cos[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[System`RealFunctionPropertiesDump`x\/2] == 0, \"LocalMaxima\" -> Sin[System`RealFunctionPropertiesDump`x\/2] == 0, \"GlobalMinima\" -> {Cos[System`RealFunctionPropertiesDump`x\/2] == 0, -1, True}, \"GlobalMaxima\" -> {Sin[System`RealFunctionPropertiesDump`x\/2] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Cos[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, \"RisingInflectionPoints\" -> Cos[Pi\/4 - System`RealFunctionPropertiesDump`x\/2] == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Cosh[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[CoshIntegral[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{Cosh[#1] - Sinh[#1]*#1 & , 1.19967864025773383392`20.07906492650278}], \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[CosineWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[CosIntegral[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x > 0 && Cos[System`RealFunctionPropertiesDump`x] == 0 && Sin[System`RealFunctionPropertiesDump`x] < 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x > 0 && Cos[System`RealFunctionPropertiesDump`x] == 0 && Sin[System`RealFunctionPropertiesDump`x] > 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Pi\/2, CosIntegral[Pi\/2], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x > 0 && Cos[System`RealFunctionPropertiesDump`x] + System`RealFunctionPropertiesDump`x*Sin[System`RealFunctionPropertiesDump`x] == 0 && Cos[System`RealFunctionPropertiesDump`x] < 0, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x > 0 && Cos[System`RealFunctionPropertiesDump`x] + System`RealFunctionPropertiesDump`x*Sin[System`RealFunctionPropertiesDump`x] == 0 && Cos[System`RealFunctionPropertiesDump`x] > 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Cot[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> Cos[System`RealFunctionPropertiesDump`x] == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Coth[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Csc[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[System`RealFunctionPropertiesDump`x\/2] == 0, -Infinity, Indeterminate, Infinity}, {Cos[System`RealFunctionPropertiesDump`x\/2] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[System`RealFunctionPropertiesDump`x] == 0 && 0 < Sin[System`RealFunctionPropertiesDump`x], \"LocalMaxima\" -> Cos[System`RealFunctionPropertiesDump`x] == 0 && Sin[System`RealFunctionPropertiesDump`x] < 0, \"GlobalMinima\" -> {Sin[System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Csch[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Surd[System`RealFunctionPropertiesDump`x_, 3], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[DawsonF[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == Root[{-(1\/2) + DawsonF[#1]*#1 & , -0.924138873004591767012823271504`29.96573723880424}], \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == Root[{-(1\/2) + DawsonF[#1]*#1 & , 0.924138873004591767012823271504`29.96573723880424}], \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{-(1\/2) + DawsonF[#1]*#1 & , -0.924138873004591767012823271504`29.96573723880424}], DawsonF[Root[{-(1\/2) + DawsonF[#1]*#1 & , -0.924138873004591767012823271504`29.96573723880424}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Root[{-(1\/2) + DawsonF[#1]*#1 & , 0.924138873004591767012823271504`29.96573723880424}], DawsonF[Root[{-(1\/2) + DawsonF[#1]*#1 & , 0.924138873004591767012823271504`29.96573723880424}]], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{-DawsonF[#1] - #1 + 2*DawsonF[#1]*#1^2 & , -1.50197526826861149886034870803`29.176662781574343}], \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == Root[{-DawsonF[#1] - #1 + 2*DawsonF[#1]*#1^2 & , 1.50197526826861149886034870803`29.176662781574343}], \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[DiracComb[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 0, Indeterminate, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"LocalMaxima\" -> Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, 0, True}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[DiracDelta[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, Indeterminate, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x != 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x != 0, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[DirichletWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-(1\/2) <= System`RealFunctionPropertiesDump`x <= 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticE[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {1, 1, 1}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 1, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticK[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticNomeQ[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {1, 1, 1}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -1, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, 1, True}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Erf[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -1, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 1, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Erfc[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 2, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 2, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Erfi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExactBlackmanWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 8\/1163, 8\/1163}, {System`RealFunctionPropertiesDump`x == 1\/2, 8\/1163, 8\/1163, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[(1*Sqrt[(1*(-39 + Sqrt[1793]))\/2])\/2]\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(ArcTan[(1*Sqrt[(1*(-39 + Sqrt[1793]))\/2])\/2]\/Pi), \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExpIntegralEi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)!, System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0, Infinity, Indeterminate, -Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*(System`RealFunctionPropertiesDump`x - 1))\/2] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)!!, System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/4] == 0, Infinity, Indeterminate, -Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*(System`RealFunctionPropertiesDump`x - 2))\/4] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FlatTopWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, -210527\/500000000, -210527\/500000000}, {System`RealFunctionPropertiesDump`x == 1\/2, -210527\/500000000, -210527\/500000000, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == (1*ArcTan[AlgebraicNumber[Root[-854489298783448552057640331334356548915853420911 + 23627900255604445628312864993203*#1^2 + 42954812899988771*#1^4 + #1^6 & , 2], {0, -(1\/51368417), 0, 0, 0, 0}]])\/Pi || System`RealFunctionPropertiesDump`x == (1*ArcTan[AlgebraicNumber[Root[-854489298783448552057640331334356548915853420911 + 23627900255604445628312864993203*#1^2 + 42954812899988771*#1^4 + #1^6 & , 2], {0, 1\/51368417, 0, 0, 0, 0}]])\/Pi || System`RealFunctionPropertiesDump`x < -2^(-1) || System`RealFunctionPropertiesDump`x > 1\/2, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x <= -2^(-1) || System`RealFunctionPropertiesDump`x >= 1\/2, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == (1*ArcTan[AlgebraicNumber[Root[-854489298783448552057640331334356548915853420911 + 23627900255604445628312864993203*#1^2 + 42954812899988771*#1^4 + #1^6 & , 2], {0, -(1\/51368417), 0, 0, 0, 0}]])\/Pi || System`RealFunctionPropertiesDump`x == (1*ArcTan[AlgebraicNumber[Root[-854489298783448552057640331334356548915853420911 + 23627900255604445628312864993203*#1^2 + 42954812899988771*#1^4 + #1^6 & , 2], {0, 1\/51368417, 0, 0, 0, 0}]])\/Pi, FlatTopWindow[(1*ArcTan[AlgebraicNumber[Root[-854489298783448552057640331334356548915853420911 + 23627900255604445628312864993203*#1^2 + 42954812899988771*#1^4 + #1^6 & , 2], {0, 1\/51368417, 0, 0, 0, 0}]])\/Pi], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(ArcTan[Sqrt[Root[2389052623 - 17246315554*#1 - 3309474160*#1^2 + 2149052770*#1^3 + 51368417*#1^4 & , 4]]]\/Pi) || System`RealFunctionPropertiesDump`x == ArcTan[Sqrt[Root[2389052623 - 17246315554*#1 - 3309474160*#1^2 + 2149052770*#1^3 + 51368417*#1^4 & , 3]]]\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(ArcTan[Sqrt[Root[2389052623 - 17246315554*#1 - 3309474160*#1^2 + 2149052770*#1^3 + 51368417*#1^4 & , 3]]]\/Pi) || System`RealFunctionPropertiesDump`x == ArcTan[Sqrt[Root[2389052623 - 17246315554*#1 - 3309474160*#1^2 + 2149052770*#1^3 + 51368417*#1^4 & , 4]]]\/Pi, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Floor[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, System`RealFunctionPropertiesDump`x - 1, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FractionalPart[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 0, 0, -1}, {System`RealFunctionPropertiesDump`x == 0, 0, 0, 0}, {0 < System`RealFunctionPropertiesDump`x && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 1, 0, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, \"LocalMaxima\" -> 0 < System`RealFunctionPropertiesDump`x && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -1, False}, \"GlobalMaxima\" -> {0 < System`RealFunctionPropertiesDump`x && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 1, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FresnelC[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -(1\/2), Indeterminate}, {Infinity, 1\/2, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> (System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == 1) || (0 < System`RealFunctionPropertiesDump`x && Sin[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == -1), \"LocalMaxima\" -> (System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == -1) || (0 < System`RealFunctionPropertiesDump`x && Sin[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == 1), \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, FresnelC[-1], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, FresnelC[1], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == -1, \"RisingInflectionPoints\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == 1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FresnelF[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{FresnelG[#1]*#1 & , -1.2171982507443151387782755442`30.085361319554817}], FresnelF[Root[{FresnelG[#1]*#1 & , -1.2171982507443151387782755442`30.085361319554817}]], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FresnelG[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{-(1\/Pi) + FresnelF[#1]*#1 & , -1.5801266859774281196323779166300000000000000000000000000001`29.198691907723607}], FresnelG[Root[{-(1\/Pi) + FresnelF[#1]*#1 & , -1.5801266859774281196323779166300000000000000000000000000001`29.198691907723607}]], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FresnelS[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -(1\/2), Indeterminate}, {Infinity, 1\/2, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> (System`RealFunctionPropertiesDump`x < 0 && Cos[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == -1) || (0 < System`RealFunctionPropertiesDump`x && Cos[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == 1), \"LocalMaxima\" -> (System`RealFunctionPropertiesDump`x < 0 && Cos[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == 1) || (0 < System`RealFunctionPropertiesDump`x && Cos[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == -1), \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Sqrt[2], -FresnelS[Sqrt[2]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Sqrt[2], FresnelS[Sqrt[2]], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == -1, \"RisingInflectionPoints\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x^2)\/2] == 1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Gamma[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0, -Infinity, Indeterminate, Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*(System`RealFunctionPropertiesDump`x - 1))\/2] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GaussianWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1\/E^(25\/18), 1\/E^(25\/18)}, {System`RealFunctionPropertiesDump`x == 1\/2, 1\/E^(25\/18), 1\/E^(25\/18), 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 3\/10, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(3\/10), \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Gudermannian[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -(Pi\/2), Indeterminate}, {Infinity, Pi\/2, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -(Pi\/2), False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Pi\/2, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HammingWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 2\/23, 2\/23}, {System`RealFunctionPropertiesDump`x == 1\/2, 2\/23, 2\/23, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/4, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/4), \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HannPoissonWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[2\/Pi - Sqrt[2 + Pi^2]\/Pi]\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(ArcTan[2\/Pi - Sqrt[2 + Pi^2]\/Pi]\/Pi), \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[HannWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/4, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/4), \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[Haversine[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[System`RealFunctionPropertiesDump`x] == 1, \"LocalMaxima\" -> Cos[System`RealFunctionPropertiesDump`x] == -1, \"GlobalMinima\" -> {Cos[System`RealFunctionPropertiesDump`x] == 1, 0, True}, \"GlobalMaxima\" -> {Cos[System`RealFunctionPropertiesDump`x] == -1, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Cos[System`RealFunctionPropertiesDump`x] == 0 && Sin[System`RealFunctionPropertiesDump`x] == -1, \"RisingInflectionPoints\" -> Cos[System`RealFunctionPropertiesDump`x] == 0 && Sin[System`RealFunctionPropertiesDump`x] == 1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisideLambda[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -1 || 1 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[HeavisidePi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, Indeterminate, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, Indeterminate, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -(1\/2) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != -(1\/2) && System`RealFunctionPropertiesDump`x != 1\/2, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-(1\/2) < System`RealFunctionPropertiesDump`x < 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisideTheta[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, Indeterminate, 1}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0, 0, True}, \"GlobalMaxima\" -> {0 < System`RealFunctionPropertiesDump`x, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Hyperfactorial[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, 1, 1}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == Root[{Hyperfactorial[#1] - Hyperfactorial[#1]*(Log[2] + Log[Pi]) + 2*Hyperfactorial[#1]*LogGamma[1 + #1] + 2*Hyperfactorial[#1]*#1 & , 0.537688863736486510690713291271`29.73053104174423}], \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == Root[{Hyperfactorial[#1] - Hyperfactorial[#1]*(Log[2] + Log[Pi]) + 2*Hyperfactorial[#1]*LogGamma[1 + #1] + 2*Hyperfactorial[#1]*#1 & , -0.7090430133008192040782005330130000000000000000000000000001`29.850672581970894}], \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{Hyperfactorial[#1] - Hyperfactorial[#1]*(Log[2] + Log[Pi]) + 2*Hyperfactorial[#1]*LogGamma[1 + #1] + 2*Hyperfactorial[#1]*#1 & , 0.537688863736486510690713291271`29.73053104174423}], Hyperfactorial[Root[{Hyperfactorial[#1] - Hyperfactorial[#1]*(Log[2] + Log[Pi]) + 2*Hyperfactorial[#1]*LogGamma[1 + #1] + 2*Hyperfactorial[#1]*#1 & , 0.537688863736486510690713291271`29.73053104174423}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{5*Hyperfactorial[#1] - 2*Hyperfactorial[#1]*(Log[2] + Log[Pi]) + Hyperfactorial[#1]*(Log[2] + Log[Pi])^2 + 4*Hyperfactorial[#1]*LogGamma[1 + #1] - 4*Hyperfactorial[#1]*(Log[2] + Log[Pi])*LogGamma[1 + #1] + 4*Hyperfactorial[#1]*LogGamma[1 + #1]^2 + 4*Hyperfactorial[#1]*PolyGamma[0, 1 + #1] + 4*Hyperfactorial[#1]*#1 - 4*Hyperfactorial[#1]*(Log[2] + Log[Pi])*#1 + 8*Hyperfactorial[#1]*LogGamma[1 + #1]*#1 + 4*Hyperfactorial[#1]*#1^2 & , -0.2966250893178857817671994922340000000000000000000000000001`29.472207881997445}], \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Im[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[IntegerPart[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= -1, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x + 1}, {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x >= 1, System`RealFunctionPropertiesDump`x - 1, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= 0 || Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x >= 0 || Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseEllipticNomeQ[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {1, 1, 1}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, 1, True}, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseErf[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseErfc[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {2, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 2, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseGudermannian[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x\/2] == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseHaversine[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {1, Pi, Pi}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Pi, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/2, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KaiserBesselWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1\/500, 1\/500}, {System`RealFunctionPropertiesDump`x == 1\/2, 1\/500, 1\/500, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[AlgebraicNumber[Root[-20872531057 + 27301967*#1^2 + 28897*#1^4 + #1^6 & , 2], {0, 1\/37, 0, 0, 0, 0}]]\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[AlgebraicNumber[Root[-20872531057 + 27301967*#1^2 + 28897*#1^4 + #1^6 & , 2], {0, -(1\/37), 0, 0, 0, 0}]]\/Pi, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KaiserWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1\/BesselI[0, 3], 1\/BesselI[0, 3]}, {System`RealFunctionPropertiesDump`x == 1\/2, 1\/BesselI[0, 3], 1\/BesselI[0, 3], 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinBei[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinBer[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinKei[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, -(Pi\/4), -(Pi\/4)}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -(Pi\/4), True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Root[{KelvinKei[1, #1] - KelvinKer[1, #1] & , 4.93181194115237698069487489611`29.69300650781077}], KelvinKei[Root[{KelvinKei[1, #1] - KelvinKer[1, #1] & , 4.93181194115237698069487489611`29.69300650781077}]], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinKer[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{KelvinKei[1, #1] + KelvinKer[1, #1] & , 2.6658397930175576578013626825300000000000000000000000000001`29.425834046391024}], KelvinKer[Root[{KelvinKei[1, #1] + KelvinKer[1, #1] & , 2.6658397930175576578013626825300000000000000000000000000001`29.425834046391024}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KroneckerDelta[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x != 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> False, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LanczosWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{-(Pi*#1) + Tan[Pi*#1] - 2*Pi^2*#1^2*Tan[Pi*#1] + Pi*#1*Tan[Pi*#1]^2 & , -0.331293106291096190448423`23.5202123989641}], \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{-(Pi*#1) + Tan[Pi*#1] - 2*Pi^2*#1^2*Tan[Pi*#1] + Pi*#1*Tan[Pi*#1]^2 & , 0.331293106291096190448423`23.5202123989641}], \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Log[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LogBarnesG[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == Root[{(1*(1 + Log[2] + Log[Pi]))\/2 - PolyGamma[0, #1] - #1 + PolyGamma[0, #1]*#1 & , 2.5576639327890194342214406005000000000000000000000000000001`29.407843479265534}], \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == Root[{(1*(1 + Log[2] + Log[Pi]))\/2 - PolyGamma[0, #1] - #1 + PolyGamma[0, #1]*#1 & , 1.39147038104109517345104885847`29.143473966338536}], \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Root[{-1 + PolyGamma[0, #1] - PolyGamma[1, #1] + PolyGamma[1, #1]*#1 & , 1.9258631233903722738931669053900000000000000000000000000001`29.284625417332308}], \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LogGamma[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == Root[{PolyGamma[0, #1] & , 1.46163214496836234126265954233`29.164838085677864}], \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{PolyGamma[0, #1] & , 1.46163214496836234126265954233`29.164838085677864}], LogGamma[Root[{PolyGamma[0, #1] & , 1.46163214496836234126265954233`29.164838085677864}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LogIntegral[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 1, -Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> False, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LogisticSigmoid[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 1, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < 1 && Cos[Pi*System`RealFunctionPropertiesDump`x] < 0 && GoldenRatio^System`RealFunctionPropertiesDump`x*Log[GoldenRatio] - (Cos[Pi*System`RealFunctionPropertiesDump`x]*Log[GoldenRatio])\/GoldenRatio^System`RealFunctionPropertiesDump`x - (Pi*Sin[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < 1 && 0 < Cos[Pi*System`RealFunctionPropertiesDump`x] && GoldenRatio^System`RealFunctionPropertiesDump`x*Log[GoldenRatio] - (Cos[Pi*System`RealFunctionPropertiesDump`x]*Log[GoldenRatio])\/GoldenRatio^System`RealFunctionPropertiesDump`x - (Pi*Sin[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> -((Pi^2*Cos[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x) + GoldenRatio^System`RealFunctionPropertiesDump`x*Log[GoldenRatio]^2 + (Cos[Pi*System`RealFunctionPropertiesDump`x]*Log[GoldenRatio]^2)\/GoldenRatio^System`RealFunctionPropertiesDump`x + (2*Pi*Log[GoldenRatio]*Sin[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x == 0 && GoldenRatio^System`RealFunctionPropertiesDump`x*Log[GoldenRatio] - (Cos[Pi*System`RealFunctionPropertiesDump`x]*Log[GoldenRatio])\/GoldenRatio^System`RealFunctionPropertiesDump`x - (Pi*Sin[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x < 0, \"RisingInflectionPoints\" -> -((Pi^2*Cos[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x) + GoldenRatio^System`RealFunctionPropertiesDump`x*Log[GoldenRatio]^2 + (Cos[Pi*System`RealFunctionPropertiesDump`x]*Log[GoldenRatio]^2)\/GoldenRatio^System`RealFunctionPropertiesDump`x + (2*Pi*Log[GoldenRatio]*Sin[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x == 0 && 0 < GoldenRatio^System`RealFunctionPropertiesDump`x*Log[GoldenRatio] - (Cos[Pi*System`RealFunctionPropertiesDump`x]*Log[GoldenRatio])\/GoldenRatio^System`RealFunctionPropertiesDump`x - (Pi*Sin[Pi*System`RealFunctionPropertiesDump`x])\/GoldenRatio^System`RealFunctionPropertiesDump`x, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NextPrime[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> NotElement[Abs[System`RealFunctionPropertiesDump`x], Primes], \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Norm[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[NuttallWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[AlgebraicNumber[Root[-11743087660114815 + 659146333221*#1^2 + 4332849*#1^4 + #1^6 & , 2], {0, 1\/249, 0, 0, 0, 0}]]\/Pi, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == ArcTan[AlgebraicNumber[Root[-11743087660114815 + 659146333221*#1^2 + 4332849*#1^4 + #1^6 & , 2], {0, -(1\/249), 0, 0, 0, 0}]]\/Pi, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ParzenWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/6, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/6), \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[PoissonWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1\/E^3, 1\/E^3}, {System`RealFunctionPropertiesDump`x == 1\/2, 1\/E^3, 1\/E^3, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PrimePi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> NotElement[System`RealFunctionPropertiesDump`x, Primes], \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 2, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PrimeZetaP[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{1, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ProductLog[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-(1\/E), -1, -1}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -(1\/E), -1, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[QPochhammer[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-1, 0, Indeterminate}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RamanujanTauL[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RamanujanTauTheta[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == Root[{Derivative[1][RamanujanTauTheta][#1] & , 3.0304653192867512937549293414399999999999999999999999999999`29.481509318298652}], \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == Root[{Derivative[1][RamanujanTauTheta][#1] & , -3.0304653192867512937549293414399999999999999999999999999999`29.481509318298652}], \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RamanujanTauZ[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Ramp[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[Re[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RealAbs[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[RealSign[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -1, 0, 1}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0, -1, True}, \"GlobalMaxima\" -> {0 < System`RealFunctionPropertiesDump`x, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RiemannR[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RiemannSiegelTheta[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == Root[{-2*Log[Pi] + PolyGamma[0, 1\/4 - (I*#1)\/2] + PolyGamma[0, 1\/4 + (I*#1)\/2] & , 6.2898359888369027796650901008218533966583129399999999999999`44.79863932110954}], \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == Root[{-2*Log[Pi] + PolyGamma[0, 1\/4 - (I*#1)\/2] + PolyGamma[0, 1\/4 + (I*#1)\/2] & , -6.2898359888369027796650901008218533966583129399999999999999`44.79863932110954}], \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[RiemannSiegelZ[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Round[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*(System`RealFunctionPropertiesDump`x - 1\/2)] == 0, System`RealFunctionPropertiesDump`x - 1\/2, Round[System`RealFunctionPropertiesDump`x], System`RealFunctionPropertiesDump`x + 1\/2}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> Sin[Pi*(System`RealFunctionPropertiesDump`x - 1\/2)] != 0 || (Sin[(Pi*(System`RealFunctionPropertiesDump`x - 1\/2))\/2] == 0 && System`RealFunctionPropertiesDump`x > 0) || (Sin[(Pi*(System`RealFunctionPropertiesDump`x + 1\/2))\/2] == 0 && System`RealFunctionPropertiesDump`x < 0), \"LocalMaxima\" -> Sin[Pi*(System`RealFunctionPropertiesDump`x - 1\/2)] != 0 || (Sin[(Pi*(System`RealFunctionPropertiesDump`x - 1\/2))\/2] == 0 && System`RealFunctionPropertiesDump`x < 0) || (Sin[(Pi*(System`RealFunctionPropertiesDump`x + 1\/2))\/2] == 0 && System`RealFunctionPropertiesDump`x > 0), \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SawtoothWave[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 1, 0, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 0, True}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 1, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ScorerGi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Root[{ScorerGiPrime[#1] & , -2.24995421863881753555192059031`29.35217368131367}], ScorerGi[Root[{ScorerGiPrime[#1] & , -2.24995421863881753555192059031`29.35217368131367}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Root[{ScorerGiPrime[#1] & , -4.0839540884927689896656324544000000000000000000000000000001`29.611080851136148}], ScorerGi[Root[{ScorerGiPrime[#1] & , -4.0839540884927689896656324544000000000000000000000000000001`29.611080851136148}]], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ScorerGiPrime[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ScorerHi[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ScorerHiPrime[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Sec[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[System`RealFunctionPropertiesDump`x\/2 - Pi\/4] == 0, -Infinity, Indeterminate, Infinity}, {Cos[System`RealFunctionPropertiesDump`x\/2 + Pi\/4] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[System`RealFunctionPropertiesDump`x\/2] == 0, \"LocalMaxima\" -> Cos[System`RealFunctionPropertiesDump`x\/2] == 0, \"GlobalMinima\" -> {Cos[System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Sech[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Log[1 + Sqrt[2]], \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == Log[-1 + Sqrt[2]], \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Sign[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -1, 0, 1}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0, -1, True}, \"GlobalMaxima\" -> {0 < System`RealFunctionPropertiesDump`x, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Sin[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, \"LocalMaxima\" -> Cos[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, \"GlobalMinima\" -> {Sin[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, -1, True}, \"GlobalMaxima\" -> {Cos[Pi\/4 + System`RealFunctionPropertiesDump`x\/2] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Cos[System`RealFunctionPropertiesDump`x\/2] == 0, \"RisingInflectionPoints\" -> Cos[Pi\/2 + System`RealFunctionPropertiesDump`x\/2] == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Sinc[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Root[{-Sin[#1] + Cos[#1]*#1 & , 4.4934094579090641753`19.652575995091613}] || System`RealFunctionPropertiesDump`x == Root[{-Sin[#1] + Cos[#1]*#1 & , 4.4934094579090641753`19.652575995091613}], Sinc[Root[{-Sin[#1] + Cos[#1]*#1 & , 4.4934094579090641753`19.652575995091613}]], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Sinh[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SinhIntegral[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SinIntegral[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -(Pi\/2), Indeterminate}, {Infinity, Pi\/2, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> (System`RealFunctionPropertiesDump`x < 0 && Cos[System`RealFunctionPropertiesDump`x] == -1) || (0 < System`RealFunctionPropertiesDump`x && Cos[System`RealFunctionPropertiesDump`x] == 1), \"LocalMaxima\" -> (System`RealFunctionPropertiesDump`x < 0 && Cos[System`RealFunctionPropertiesDump`x] == 1) || (0 < System`RealFunctionPropertiesDump`x && Cos[System`RealFunctionPropertiesDump`x] == -1), \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Pi, SinIntegral[-Pi], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Pi, SinIntegral[Pi], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> (System`RealFunctionPropertiesDump`x < 0 && Cos[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x - Sin[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x^2 == 0 && 0 < Sin[System`RealFunctionPropertiesDump`x]) || (0 < System`RealFunctionPropertiesDump`x && Cos[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x - Sin[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x^2 == 0 && Sin[System`RealFunctionPropertiesDump`x] < 0), \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0 || (System`RealFunctionPropertiesDump`x < 0 && Cos[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x - Sin[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x^2 == 0 && Sin[System`RealFunctionPropertiesDump`x] < 0) || (0 < System`RealFunctionPropertiesDump`x && Cos[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x - Sin[System`RealFunctionPropertiesDump`x]\/System`RealFunctionPropertiesDump`x^2 == 0 && 0 < Sin[System`RealFunctionPropertiesDump`x]), \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SquareWave[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -1, 1, 1}, {Sin[Pi*(System`RealFunctionPropertiesDump`x + 1\/2)] == 0, 1, -1, -1}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[Pi*System`RealFunctionPropertiesDump`x] != 0, \"LocalMaxima\" -> Sin[Pi*(System`RealFunctionPropertiesDump`x + 1\/2)] != 0, \"GlobalMinima\" -> {Sin[2*Pi*System`RealFunctionPropertiesDump`x] < 0 || Sin[Pi*(System`RealFunctionPropertiesDump`x + 1\/2)] == 0, -1, True}, \"GlobalMaxima\" -> {0 < Sin[2*Pi*System`RealFunctionPropertiesDump`x] || Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Tan[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Cos[System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x] == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Tanh[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -1, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 1, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[TriangleWave[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[2*Pi*System`RealFunctionPropertiesDump`x] == -1, \"LocalMaxima\" -> Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 1, \"GlobalMinima\" -> {Sin[2*Pi*System`RealFunctionPropertiesDump`x] == -1, -1, True}, \"GlobalMaxima\" -> {Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 1, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> Sin[2*Pi*System`RealFunctionPropertiesDump`x] == -1 || Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 0 || Sin[2*Pi*System`RealFunctionPropertiesDump`x] == 1]\nFunctionProperties`Private`RealFunctionProperties[TukeyWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x || -(1\/6) < System`RealFunctionPropertiesDump`x < 1\/6, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x || -(1\/6) <= System`RealFunctionPropertiesDump`x <= 1\/6, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-(1\/6) <= System`RealFunctionPropertiesDump`x <= 1\/6, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 1\/3, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == -(1\/3), \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == -(1\/6) || System`RealFunctionPropertiesDump`x == 1\/6 || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[UnitBox[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-(1\/2) <= System`RealFunctionPropertiesDump`x <= 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitStep[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, 1, 1}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0, 0, True}, \"GlobalMaxima\" -> {0 <= System`RealFunctionPropertiesDump`x, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitTriangle[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -1 || 1 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[WelchWindow[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -(1\/2) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -(1\/2) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[Zeta[System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 1, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[AngerJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcTan[System`RealFunctionPropertiesDump`x_, 0], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Pi, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Pi, Indeterminate, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != 0, \"GlobalMinima\" -> {0 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 0, Pi, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcTan[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Pi, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Pi, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArcTan[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Pi, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Pi, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArithmeticGeometricMean[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {0, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ArithmeticGeometricMean[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BellB[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BellB[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BernoulliB[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BernoulliB[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselI[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselI[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselI[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselI[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselI[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselI[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AAssumedQ[NotElement[Ceiling[System`RealFunctionPropertiesDump`a]\/2, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselJ[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -BesselJZero[1, 1] || System`RealFunctionPropertiesDump`x == BesselJZero[1, 1], BesselJ[0, BesselJZero[1, 1]], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AAssumedQ[NotElement[Ceiling[System`RealFunctionPropertiesDump`a]\/2, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselK[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == BesselYZero[1, 1], BesselY[0, BesselYZero[1, 1]], True}, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[2*System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[2*System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a + 1\/2]] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[2*System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a + 1\/2]] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{Cos[Pi*System`RealFunctionPropertiesDump`x] == 1 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= 0, -Infinity, Indeterminate, Infinity}, {Cos[Pi*System`RealFunctionPropertiesDump`x] == -1 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= -1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{Cos[Pi*System`RealFunctionPropertiesDump`x] == 1 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= 0, -Infinity, Indeterminate, Infinity}, {Cos[Pi*System`RealFunctionPropertiesDump`x] == -1 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= -1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{Cos[Pi*System`RealFunctionPropertiesDump`x] == -1 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= -1, Infinity, Indeterminate, -Infinity}, {(Cos[Pi*System`RealFunctionPropertiesDump`x] == 1 && -System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x <= 0) || (Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < -System`RealFunctionPropertiesDump`a), -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{Cos[Pi*System`RealFunctionPropertiesDump`x] == -1 && -System`RealFunctionPropertiesDump`a + 1 <= System`RealFunctionPropertiesDump`x <= -1, Infinity, Indeterminate, -Infinity}, {(Cos[Pi*System`RealFunctionPropertiesDump`x] == 1 && -System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x <= 0) || (Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < -System`RealFunctionPropertiesDump`a), -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{(Cos[Pi*System`RealFunctionPropertiesDump`x] == -1 && -System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x <= -1) || (Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < -System`RealFunctionPropertiesDump`a), Infinity, Indeterminate, -Infinity}, {Cos[Pi*System`RealFunctionPropertiesDump`x] == 1 && -System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x <= 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{(Cos[Pi*System`RealFunctionPropertiesDump`x] == -1 && -System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x <= -1) || (Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < -System`RealFunctionPropertiesDump`a), Infinity, Indeterminate, -Infinity}, {Cos[Pi*System`RealFunctionPropertiesDump`x] == 1 && -System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x <= 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {(System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {(System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Beta[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < System`RealFunctionPropertiesDump`a, -Infinity, Indeterminate, Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0 && System`RealFunctionPropertiesDump`a < System`RealFunctionPropertiesDump`x, Infinity, Indeterminate, -Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*(System`RealFunctionPropertiesDump`x + 1))\/2] == 0 && System`RealFunctionPropertiesDump`a < System`RealFunctionPropertiesDump`x, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AAssumedQ[NotElement[Ceiling[System`RealFunctionPropertiesDump`a]\/2, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x < System`RealFunctionPropertiesDump`a, -Infinity, Indeterminate, Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0 && System`RealFunctionPropertiesDump`a < System`RealFunctionPropertiesDump`x, -Infinity, Indeterminate, Infinity}, {System`RealFunctionPropertiesDump`x < 0 && Sin[(Pi*(System`RealFunctionPropertiesDump`x + 1))\/2] == 0 && System`RealFunctionPropertiesDump`a < System`RealFunctionPropertiesDump`x, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Binomial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AAssumedQ[NotElement[Floor[System`RealFunctionPropertiesDump`a]\/2, Integers]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BSplineBasis[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0 && System`RealFunctionPropertiesDump`x != 1, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 || System`RealFunctionPropertiesDump`x > 1, 0, True}, \"GlobalMaxima\" -> {0 <= System`RealFunctionPropertiesDump`x <= 1, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[BSplineBasis[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= 0 || 1 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 1\/2 || System`RealFunctionPropertiesDump`x < 0 || 1 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0 || 1 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1\/2, BSplineBasis[System`RealFunctionPropertiesDump`a, 1\/2], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[Ceiling[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x + System`RealFunctionPropertiesDump`a}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Ceiling[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`x + System`RealFunctionPropertiesDump`a, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevT[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevT[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[System`RealFunctionPropertiesDump`a^2 == 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevT[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevT[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a\/2, Integers]] := Association[\"DomainEndpoints\" -> {{{-1, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 2] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a + 1] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[2 + System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 2] := Association[\"DomainEndpoints\" -> {{{-1, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 2] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ChebyshevU[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[DivisorSigma[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; (Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1]) || Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 1, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 1, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticE[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x]^2 == 1, \"RisingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x]^2 == -1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticE[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], -EllipticE[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], -EllipticE[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a]}, {ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], EllipticE[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], EllipticE[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x]^2 == 1, \"RisingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x]^2 == -1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticF[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x]^2 == -1, \"RisingInflectionPoints\" -> Sin[System`RealFunctionPropertiesDump`x]^2 == 1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticF[System`RealFunctionPropertiesDump`x_, 1], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-(Pi\/2), -Infinity, Indeterminate}, {Pi\/2, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -(Pi\/2), -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Pi\/2, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticF[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], -EllipticF[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], -EllipticF[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a]}, {ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], EllipticF[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], EllipticF[ArcSin[Sqrt[1\/System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticPi[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 1, Infinity, Indeterminate, Indeterminate}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticPi[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticPi[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EllipticPi[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {1, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, Indeterminate, 0}}, \"GlobalMonotonicity\" -> -2, \"LocalMinima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, -Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Erf[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 1 + Erf[System`RealFunctionPropertiesDump`a], Indeterminate}, {Infinity, -1 + Erf[System`RealFunctionPropertiesDump`a], Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -1 + Erf[System`RealFunctionPropertiesDump`a], False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 1 + Erf[System`RealFunctionPropertiesDump`a], False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Erf[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -1 - Erf[System`RealFunctionPropertiesDump`a], Indeterminate}, {Infinity, 1 - Erf[System`RealFunctionPropertiesDump`a], Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -1 - Erf[System`RealFunctionPropertiesDump`a], False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 1 - Erf[System`RealFunctionPropertiesDump`a], False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EulerE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[EulerE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExpIntegralE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{0, 1\/(System`RealFunctionPropertiesDump`a - 1), 1\/(System`RealFunctionPropertiesDump`a - 1)}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1\/(System`RealFunctionPropertiesDump`a - 1), True}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExpIntegralE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`ANonNegative[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExpIntegralE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExpIntegralE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ExpIntegralE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> False, \"LocalMinima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FactorialPower[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FactorialPower[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FactorialPower[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FactorialPower[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {(System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0) || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FactorialPower[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[FactorialPower[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a + 1] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[-1 + System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[Round[System`RealFunctionPropertiesDump`a]] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a - 1\/2, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1] && Assumptions`AEvenQ[Round[System`RealFunctionPropertiesDump`a]] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a - 1\/2, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; (Assumptions`APositive[-1 + System`RealFunctionPropertiesDump`a] || Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1]) && Assumptions`AOddQ[Round[System`RealFunctionPropertiesDump`a]] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a - 1\/2, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> False, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[-1 + System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a - 1\/2] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Fibonacci[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a - 1\/2] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Floor[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(System`RealFunctionPropertiesDump`x*Pi)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`x - System`RealFunctionPropertiesDump`a, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> Sin[(System`RealFunctionPropertiesDump`x*Pi)\/System`RealFunctionPropertiesDump`a] != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Floor[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(System`RealFunctionPropertiesDump`x*Pi)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`x - System`RealFunctionPropertiesDump`a}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> Sin[(System`RealFunctionPropertiesDump`x*Pi)\/System`RealFunctionPropertiesDump`a] != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Gamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Gamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Gamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Gamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, Gamma[System`RealFunctionPropertiesDump`a, 0], Gamma[System`RealFunctionPropertiesDump`a, 0]}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Gamma[System`RealFunctionPropertiesDump`a, 0], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[GammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, 1, 1}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Zeta[System`RealFunctionPropertiesDump`a], Indeterminate}}}, \"Discontinuities\" -> {{Sin[System`RealFunctionPropertiesDump`x*Pi] == 0 && System`RealFunctionPropertiesDump`x <= -1, -Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Zeta[System`RealFunctionPropertiesDump`a], False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Zeta[System`RealFunctionPropertiesDump`a], Indeterminate}}}, \"Discontinuities\" -> {{Sin[System`RealFunctionPropertiesDump`x*Pi] == 0 && System`RealFunctionPropertiesDump`x <= -1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= -1, -Infinity, False}, \"GlobalMaxima\" -> {Sin[Pi*System`RealFunctionPropertiesDump`x] == 0 && System`RealFunctionPropertiesDump`x <= -1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{-1, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HarmonicNumber[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {Infinity, Zeta[System`RealFunctionPropertiesDump`a], Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Zeta[System`RealFunctionPropertiesDump`a], False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisideLambda[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 + System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || System`RealFunctionPropertiesDump`x >= 1, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -1 || System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x > 1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1 || System`RealFunctionPropertiesDump`x >= 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1 - System`RealFunctionPropertiesDump`a, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 && System`RealFunctionPropertiesDump`x == 0 && System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[HeavisideLambda[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[1 + System`RealFunctionPropertiesDump`a] || Assumptions`ANonPositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisideLambda[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 + System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || System`RealFunctionPropertiesDump`x >= 1, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -1 || System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x > 1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1 || System`RealFunctionPropertiesDump`x >= 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1 - System`RealFunctionPropertiesDump`a, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 && System`RealFunctionPropertiesDump`x == 0 && System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[HeavisideLambda[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[1 + System`RealFunctionPropertiesDump`a] || Assumptions`ANonPositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisidePi[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1\/2 + System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, Indeterminate, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, Indeterminate, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -(1\/2) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != -(1\/2) && System`RealFunctionPropertiesDump`x != 1\/2, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-(1\/2) < System`RealFunctionPropertiesDump`x < 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisidePi[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[1\/2 + System`RealFunctionPropertiesDump`a] || Assumptions`ANegative[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisidePi[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1\/2 + System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -(1\/2), 0, Indeterminate, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, Indeterminate, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -(1\/2) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x != -(1\/2) && System`RealFunctionPropertiesDump`x != 1\/2, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -(1\/2) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-(1\/2) < System`RealFunctionPropertiesDump`x < 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisidePi[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[1\/2 + System`RealFunctionPropertiesDump`a] || Assumptions`ANegative[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisideTheta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HeavisideTheta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, Indeterminate, 1}}, \"GlobalMonotonicity\" -> 2, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x > 0, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HermiteH[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HermiteH[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && (Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] || (Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]])) := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HermiteH[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && (Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] || (Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]])) := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, HurwitzZeta[System`RealFunctionPropertiesDump`a, 0], HurwitzZeta[System`RealFunctionPropertiesDump`a, 0]}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[0, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, False}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[-1 + System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[HurwitzZeta[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 1 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Hypergeometric0F1[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Hypergeometric0F1[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; (Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a]]) || (Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a]) := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Hypergeometric0F1[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Hypergeometric0F1Regularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; (Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]]) || (Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a]) := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Hypergeometric0F1Regularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a - 1] || Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseGammaRegularized[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiCD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, InverseJacobiCD[-1, System`RealFunctionPropertiesDump`a], InverseJacobiCD[-1, System`RealFunctionPropertiesDump`a]}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, InverseJacobiCD[-1, System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiCD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{1, 0, 0}, {Infinity, EllipticK[1\/System`RealFunctionPropertiesDump`a]\/Sqrt[System`RealFunctionPropertiesDump`a], Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, EllipticK[1\/System`RealFunctionPropertiesDump`a]\/Sqrt[System`RealFunctionPropertiesDump`a], False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiCN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, InverseJacobiCN[-1, System`RealFunctionPropertiesDump`a], InverseJacobiCN[-1, System`RealFunctionPropertiesDump`a]}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, InverseJacobiCN[-1, System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiCN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] && Assumptions`APositive[2 - System`RealFunctionPropertiesDump`a] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiCS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Indeterminate, Indeterminate, Indeterminate}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiDC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {-1, InverseJacobiDC[-1, System`RealFunctionPropertiesDump`a], InverseJacobiDC[-1, System`RealFunctionPropertiesDump`a]}}, {{1, 0, 0}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiDC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-1, InverseJacobiDC[-1, System`RealFunctionPropertiesDump`a], InverseJacobiDC[-1, System`RealFunctionPropertiesDump`a]}, {1, 0, 0}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1, InverseJacobiDC[-1, System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiDS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Indeterminate, Indeterminate, Indeterminate}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiNC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiNC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiND[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiND[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiND[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, 0, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiNS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {-1, InverseJacobiNS[-1, System`RealFunctionPropertiesDump`a], InverseJacobiNS[-1, System`RealFunctionPropertiesDump`a]}}, {{1, InverseJacobiNS[1, System`RealFunctionPropertiesDump`a], InverseJacobiNS[1, System`RealFunctionPropertiesDump`a]}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, InverseJacobiNS[-1, System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, InverseJacobiNS[1, System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiNS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {-Sqrt[System`RealFunctionPropertiesDump`a], InverseJacobiNS[-Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], InverseJacobiNS[-Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a]}}, {{Sqrt[System`RealFunctionPropertiesDump`a], InverseJacobiNS[Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], InverseJacobiNS[Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a]}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Sqrt[System`RealFunctionPropertiesDump`a], InverseJacobiNS[-Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Sqrt[System`RealFunctionPropertiesDump`a], InverseJacobiNS[Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiSC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiSC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-(1\/Sqrt[System`RealFunctionPropertiesDump`a - 1]), InverseJacobiSC[-(1\/Sqrt[System`RealFunctionPropertiesDump`a - 1]), System`RealFunctionPropertiesDump`a], InverseJacobiSC[-(1\/Sqrt[System`RealFunctionPropertiesDump`a - 1]), System`RealFunctionPropertiesDump`a]}, {1\/Sqrt[System`RealFunctionPropertiesDump`a - 1], InverseJacobiSC[1\/Sqrt[System`RealFunctionPropertiesDump`a - 1], System`RealFunctionPropertiesDump`a], InverseJacobiSC[1\/Sqrt[System`RealFunctionPropertiesDump`a - 1], System`RealFunctionPropertiesDump`a]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -(1\/Sqrt[System`RealFunctionPropertiesDump`a - 1]), InverseJacobiSC[-(1\/Sqrt[System`RealFunctionPropertiesDump`a - 1]), System`RealFunctionPropertiesDump`a], False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1\/Sqrt[System`RealFunctionPropertiesDump`a - 1], InverseJacobiSC[1\/Sqrt[System`RealFunctionPropertiesDump`a - 1], System`RealFunctionPropertiesDump`a], False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiSD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-(1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1]), InverseJacobiSD[-(1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1]), System`RealFunctionPropertiesDump`a], InverseJacobiSD[-(1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1]), System`RealFunctionPropertiesDump`a]}, {1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1], InverseJacobiSD[1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1], System`RealFunctionPropertiesDump`a], InverseJacobiSD[1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1], System`RealFunctionPropertiesDump`a]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -(1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1]), InverseJacobiSD[-(1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1]), System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1], InverseJacobiSD[1\/Sqrt[Abs[System`RealFunctionPropertiesDump`a] + 1], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiSD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiSN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, InverseJacobiSN[-1, System`RealFunctionPropertiesDump`a], InverseJacobiSN[-1, System`RealFunctionPropertiesDump`a]}, {1, InverseJacobiSN[1, System`RealFunctionPropertiesDump`a], InverseJacobiSN[1, System`RealFunctionPropertiesDump`a]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, InverseJacobiSN[-1, System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, InverseJacobiSN[1, System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[InverseJacobiSN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-(1\/Sqrt[System`RealFunctionPropertiesDump`a]), InverseJacobiSN[-(1\/Sqrt[System`RealFunctionPropertiesDump`a]), System`RealFunctionPropertiesDump`a], InverseJacobiSN[-(1\/Sqrt[System`RealFunctionPropertiesDump`a]), System`RealFunctionPropertiesDump`a]}, {1\/Sqrt[System`RealFunctionPropertiesDump`a], InverseJacobiSN[1\/Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], InverseJacobiSN[1\/Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -(1\/Sqrt[System`RealFunctionPropertiesDump`a]), InverseJacobiSN[-(1\/Sqrt[System`RealFunctionPropertiesDump`a]), System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1\/Sqrt[System`RealFunctionPropertiesDump`a], InverseJacobiSN[1\/Sqrt[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiAmplitude[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiAmplitude[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiCD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, -1, True}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiCD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, Infinity, Indeterminate, -Infinity}, {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiCN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, -1, True}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiCN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, JacobiCN[Re[EllipticK[System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiCS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiCS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, Infinity, Indeterminate, -Infinity}, {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, Infinity, Indeterminate, -Infinity}, {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, -1, True}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, JacobiDN[EllipticK[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, 1, True}, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, JacobiDN[EllipticK[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, 1, True}, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, -1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, -Infinity, Indeterminate, Infinity}, {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiDS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiNC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, -Infinity, Indeterminate, Infinity}, {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiNC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, JacobiNC[Re[EllipticK[System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], True}, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiND[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, JacobiND[EllipticK[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiND[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, 1, True}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, JacobiND[EllipticK[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiND[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, -Infinity, Indeterminate, Infinity}, {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"LocalMaxima\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiNS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, -Infinity, Indeterminate, Infinity}, {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiSC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiSC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, JacobiSC[Re[EllipticK[System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], True}, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, JacobiSC[-Re[EllipticK[System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiSD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, -JacobiSD[EllipticK[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, JacobiSD[EllipticK[System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiSD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, -Infinity, False}, \"GlobalMaxima\" -> {Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiSN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == -1, -1, True}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*EllipticK[System`RealFunctionPropertiesDump`a])] == 1, 1, True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiSN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"LocalMaxima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, JacobiSN[-Re[EllipticK[System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, JacobiSN[Re[EllipticK[System`RealFunctionPropertiesDump`a]], System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == -1, \"RisingInflectionPoints\" -> Cos[(Pi*System`RealFunctionPropertiesDump`x)\/(2*Re[EllipticK[System`RealFunctionPropertiesDump`a]])] == 1, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[JacobiZeta[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KaiserWindow[System`RealFunctionPropertiesDump`x_, 0], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-2^(-1) <= System`RealFunctionPropertiesDump`x <= 1\/2, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KaiserWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, KaiserWindow[-2^(-1), System`RealFunctionPropertiesDump`a], KaiserWindow[-2^(-1), System`RealFunctionPropertiesDump`a]}, {System`RealFunctionPropertiesDump`x == 1\/2, KaiserWindow[1\/2, System`RealFunctionPropertiesDump`a], KaiserWindow[1\/2, System`RealFunctionPropertiesDump`a], 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinBei[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinBei[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinBer[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinBer[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinKei[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[KelvinKer[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LaguerreL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LaguerreL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LaguerreL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreP[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreP[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-1, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreQ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[2*System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Round[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreQ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[2*System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Round[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-1, Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreQ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, -Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreQ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-1, Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreQ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AIntegerQ[2*System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LegendreQ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AIntegerQ[2*System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a - 1\/2] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a - 1\/2, Integers]] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a - 1\/2]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a - 1\/2, Integers]] && Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a - 1\/2]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a + 1\/2] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a + 1\/2, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a + 1\/2]] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[LucasL[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a + 1\/2, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a + 1\/2]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[MathieuCharacteristicA[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, MathieuCharacteristicA[0, System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[MathieuCharacteristicA[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[MathieuCharacteristicB[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, MathieuCharacteristicA[0, System`RealFunctionPropertiesDump`a], False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[MathieuCharacteristicB[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Max[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, System`RealFunctionPropertiesDump`a, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= System`RealFunctionPropertiesDump`a, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < System`RealFunctionPropertiesDump`a, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= System`RealFunctionPropertiesDump`a, System`RealFunctionPropertiesDump`a, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == System`RealFunctionPropertiesDump`a]\nFunctionProperties`Private`RealFunctionProperties[Min[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, System`RealFunctionPropertiesDump`a, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`a < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`a, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == System`RealFunctionPropertiesDump`a]\nFunctionProperties`Private`RealFunctionProperties[MittagLefflerE[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Indeterminate, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[MittagLefflerE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a - 2] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[MittagLefflerE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a - 2] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Mod[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, 0, 0, System`RealFunctionPropertiesDump`a}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`a, False}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Mod[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`a, 0, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, 0, True}, \"GlobalMaxima\" -> {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`a, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Mod[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, System`RealFunctionPropertiesDump`a, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`a)\/System`RealFunctionPropertiesDump`x] == 0, System`RealFunctionPropertiesDump`x, 0, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= System`RealFunctionPropertiesDump`a, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < System`RealFunctionPropertiesDump`a, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= System`RealFunctionPropertiesDump`a, System`RealFunctionPropertiesDump`a, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Mod[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, System`RealFunctionPropertiesDump`a, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`a)\/System`RealFunctionPropertiesDump`x] == 0, 0, 0, System`RealFunctionPropertiesDump`x}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`a < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`a <= System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`a, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaC[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaD[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaN[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[NevilleThetaS[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[OwenT[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == System`RealFunctionPropertiesDump`a, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, OwenT[0, System`RealFunctionPropertiesDump`a], True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[OwenT[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, OwenT[0, System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ParabolicCylinderD[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ParabolicCylinderD[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ParabolicCylinderD[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[ParabolicCylinderD[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PoissonWindow[System`RealFunctionPropertiesDump`x_, 0], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-2^(-1) < System`RealFunctionPropertiesDump`x < 1\/2, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PoissonWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, Exp[2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x], Exp[2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x]}, {System`RealFunctionPropertiesDump`x == 1\/2, Exp[-2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x], Exp[-2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x], 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[PoissonWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, Exp[2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x], Exp[2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x]}, {System`RealFunctionPropertiesDump`x == 1\/2, Exp[-2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x], Exp[-2*System`RealFunctionPropertiesDump`a*System`RealFunctionPropertiesDump`x], 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -2^(-1) || System`RealFunctionPropertiesDump`x == 1\/2, Exp[-System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == 0]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1] := If[Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 6\/5], Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False], Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a + 1] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0 || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> False, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AEvenQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyGamma[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`AOddQ[Floor[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMaxima\" -> False, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyLog[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 1, Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyLog[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 1, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 1, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyLog[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyLog[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`ANonNegative[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {1, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[PolyLog[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {1, PolyLog[System`RealFunctionPropertiesDump`a, 1], PolyLog[System`RealFunctionPropertiesDump`a, 1]}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 1, PolyLog[System`RealFunctionPropertiesDump`a, 1], True}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> System`RealFunctionPropertiesDump`a != 1 && System`RealFunctionPropertiesDump`x == 0, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`a == 1]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x == 0, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity || System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`x_)^(System`RealFunctionPropertiesDump`a_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{0, 0, 0}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`a_)^(System`RealFunctionPropertiesDump`x_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[(System`RealFunctionPropertiesDump`a_)^(System`RealFunctionPropertiesDump`x_), System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> -1, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, 0, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[QFactorial[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0 && System`RealFunctionPropertiesDump`x < 0, -Infinity, Indeterminate, Infinity}, {Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0 && System`RealFunctionPropertiesDump`x < 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x < 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[QGamma[System`RealFunctionPropertiesDump`x_, 0], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 1, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> False, \"LocalMaxima\" -> False, \"GlobalMinima\" -> {True, 1, True}, \"GlobalMaxima\" -> {True, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[QGamma[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x <= 0 && Cos[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0, Infinity, Indeterminate, -Infinity}, {System`RealFunctionPropertiesDump`x <= 0 && Sin[(Pi*System`RealFunctionPropertiesDump`x)\/2] == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x <= 0 && Sin[Pi*System`RealFunctionPropertiesDump`x] == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[QPochhammer[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`APositive[System`RealFunctionPropertiesDump`a + 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Indeterminate, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`a == -Infinity || System`RealFunctionPropertiesDump`a == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`a == -Infinity || System`RealFunctionPropertiesDump`a == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[QPochhammer[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, Indeterminate, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`a == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`a == -Infinity || System`RealFunctionPropertiesDump`a == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Quotient[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, Infinity, Indeterminate}, {Infinity, -Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, IntegerPart[System`RealFunctionPropertiesDump`x\/System`RealFunctionPropertiesDump`a], IntegerPart[System`RealFunctionPropertiesDump`x\/System`RealFunctionPropertiesDump`a], IntegerPart[System`RealFunctionPropertiesDump`x\/System`RealFunctionPropertiesDump`a] - 1}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Quotient[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, IntegerPart[System`RealFunctionPropertiesDump`x\/System`RealFunctionPropertiesDump`a] - 1, IntegerPart[System`RealFunctionPropertiesDump`x\/System`RealFunctionPropertiesDump`a], IntegerPart[System`RealFunctionPropertiesDump`x\/System`RealFunctionPropertiesDump`a]}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> Sin[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[Round[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, -Infinity, Indeterminate}, {Infinity, Infinity, Indeterminate}}}, \"Discontinuities\" -> {{Cos[(Pi*System`RealFunctionPropertiesDump`x)\/System`RealFunctionPropertiesDump`a] == 0, System`RealFunctionPropertiesDump`x - Abs[System`RealFunctionPropertiesDump`a]\/2, Round[System`RealFunctionPropertiesDump`x, System`RealFunctionPropertiesDump`a], System`RealFunctionPropertiesDump`x + Abs[System`RealFunctionPropertiesDump`a]\/2}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= 0 || Sin[(Pi*(System`RealFunctionPropertiesDump`x + 1))\/System`RealFunctionPropertiesDump`a] != 0, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x >= 0 || Sin[(Pi*(System`RealFunctionPropertiesDump`x - 1))\/System`RealFunctionPropertiesDump`a] != 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -Infinity, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == Infinity, Infinity, False}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] := Association[\"DomainEndpoints\" -> {{{0, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselJ[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && (Assumptions`APositive[System`RealFunctionPropertiesDump`a] || Assumptions`AEvenQ[Ceiling[System`RealFunctionPropertiesDump`a]]) := Association[\"DomainEndpoints\" -> {{{0, -Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[NotElement[System`RealFunctionPropertiesDump`a, Integers]] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[Ceiling[System`RealFunctionPropertiesDump`a]] := Association[\"DomainEndpoints\" -> {{{0, Infinity, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] && Assumptions`AIntegerQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AOddQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, -Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[SphericalBesselY[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] && Assumptions`AEvenQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, Infinity, Indeterminate, -Infinity}}, \"GlobalMonotonicity\" -> 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == 0, -Infinity, False}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, Infinity, False}, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[TukeyWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonPositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {-2^(-1) <= System`RealFunctionPropertiesDump`x <= 1\/2, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[TukeyWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -2^(-1) || 1\/2 <= System`RealFunctionPropertiesDump`x || (0 < System`RealFunctionPropertiesDump`a < 1 && -1 + System`RealFunctionPropertiesDump`a - 2*System`RealFunctionPropertiesDump`x < 0 && -1 + System`RealFunctionPropertiesDump`a + 2*System`RealFunctionPropertiesDump`x < 0), \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x || (0 < System`RealFunctionPropertiesDump`a < 1 && -1 + System`RealFunctionPropertiesDump`a - 2*System`RealFunctionPropertiesDump`x <= 0 && -1 + System`RealFunctionPropertiesDump`a + 2*System`RealFunctionPropertiesDump`x <= 0) || System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -2^(-1) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {(0 < System`RealFunctionPropertiesDump`a < 1 && -1 + System`RealFunctionPropertiesDump`a - 2*System`RealFunctionPropertiesDump`x <= 0 && -1 + System`RealFunctionPropertiesDump`a + 2*System`RealFunctionPropertiesDump`x <= 0) || System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -2^(-1) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[UnitBox[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a + 1\/2] && Assumptions`ANonNegative[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || System`RealFunctionPropertiesDump`x > 1\/2, 0, True}, \"GlobalMaxima\" -> {-2^(-1) <= System`RealFunctionPropertiesDump`x <= 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitBox[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1\/2] || Assumptions`ANegative[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitBox[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a + 1\/2] && Assumptions`ANonNegative[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, 1, 1}, {System`RealFunctionPropertiesDump`x == 1\/2, 1, 1, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != -2^(-1) && System`RealFunctionPropertiesDump`x != 1\/2, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || System`RealFunctionPropertiesDump`x > 1\/2, 0, True}, \"GlobalMaxima\" -> {-2^(-1) <= System`RealFunctionPropertiesDump`x <= 1\/2, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitBox[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1\/2] || Assumptions`ANegative[1\/2 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitStep[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 1, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == 0, 0, 1, 1}}, \"GlobalMonotonicity\" -> 2, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x != 0, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < 0, 0, True}, \"GlobalMaxima\" -> {0 <= System`RealFunctionPropertiesDump`x, 1, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitStep[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitTriangle[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a + 1] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x || System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1 - Abs[System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[UnitTriangle[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[-System`RealFunctionPropertiesDump`a - 1] || Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[UnitTriangle[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a + 1] && Assumptions`APositive[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x || System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -1 || 1 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1 - Abs[System`RealFunctionPropertiesDump`a], True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -1 || System`RealFunctionPropertiesDump`x == 1]\nFunctionProperties`Private`RealFunctionProperties[UnitTriangle[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANonNegative[-System`RealFunctionPropertiesDump`a - 1] || Assumptions`ANonNegative[System`RealFunctionPropertiesDump`a - 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[WeberE[System`RealFunctionPropertiesDump`a_, System`RealFunctionPropertiesDump`x_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ARealQ[System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"GlobalConvexity\" -> 0, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[WelchWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`ANegative[System`RealFunctionPropertiesDump`a + 1] || Assumptions`ANegative[1 - System`RealFunctionPropertiesDump`a] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2}, {System`RealFunctionPropertiesDump`x == 1\/2, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x || System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[WelchWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`AAssumedQ[System`RealFunctionPropertiesDump`a^2 == 1] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -2^(-1) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x || System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x <= -2^(-1) || 1\/2 <= System`RealFunctionPropertiesDump`x, 0, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> System`RealFunctionPropertiesDump`x == -2^(-1) || System`RealFunctionPropertiesDump`x == 1\/2]\nFunctionProperties`Private`RealFunctionProperties[WelchWindow[System`RealFunctionPropertiesDump`x_, 0], System`RealFunctionPropertiesDump`x_] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {-2^(-1), 0, Indeterminate}}, {{1\/2, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> True, \"LocalMaxima\" -> True, \"GlobalMinima\" -> {True, 0, True}, \"GlobalMaxima\" -> {True, 0, True}, \"GlobalConvexity\" -> 0, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nFunctionProperties`Private`RealFunctionProperties[WelchWindow[System`RealFunctionPropertiesDump`x_, System`RealFunctionPropertiesDump`a_], System`RealFunctionPropertiesDump`x_] \/; Assumptions`APositive[System`RealFunctionPropertiesDump`a + 1] && Assumptions`ANegative[System`RealFunctionPropertiesDump`a - 1] && Assumptions`AUnequalQ[System`RealFunctionPropertiesDump`a, 0] := Association[\"DomainEndpoints\" -> {{{-Infinity, 0, Indeterminate}, {Infinity, 0, Indeterminate}}}, \"Discontinuities\" -> {{System`RealFunctionPropertiesDump`x == -2^(-1), 0, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2}, {System`RealFunctionPropertiesDump`x == 1\/2, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, 0}}, \"GlobalMonotonicity\" -> 0, \"LocalMinima\" -> System`RealFunctionPropertiesDump`x <= -2^(-1) || 1\/2 <= System`RealFunctionPropertiesDump`x, \"LocalMaxima\" -> System`RealFunctionPropertiesDump`x < -2^(-1) || 1\/2 < System`RealFunctionPropertiesDump`x || System`RealFunctionPropertiesDump`x == 0, \"GlobalMinima\" -> {System`RealFunctionPropertiesDump`x == -2^(-1) || 1\/2 == System`RealFunctionPropertiesDump`x, (System`RealFunctionPropertiesDump`a^2 - 1)\/System`RealFunctionPropertiesDump`a^2, True}, \"GlobalMaxima\" -> {System`RealFunctionPropertiesDump`x == 0, 1, True}, \"GlobalConvexity\" -> -1, \"FallingInflectionPoints\" -> False, \"RisingInflectionPoints\" -> False, \"InflectionSingularities\" -> False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FunctionProperties`Private`RealFunctionProperties",
	"Statistics`Library`RealIntegerQ":"ObjectType: Symbol\nUsage: Statistics`Library`RealIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RealIntegerQ[Statistics`Library`Dump`r_Integer] := True\nStatistics`Library`RealIntegerQ[Statistics`Library`Dump`r_Rational] := False\nStatistics`Library`RealIntegerQ[Statistics`Library`Dump`r_Complex] := False\nStatistics`Library`RealIntegerQ[Statistics`Library`Dump`r$_Real] := Last[Internal`TestIntegerQ[Statistics`Library`Dump`r$, 0, 2]] === True\nStatistics`Library`RealIntegerQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RealIntegerQ",
	"SpecialFunctions`RealJacobiAmplitude":"ObjectType: Symbol\nUsage: SpecialFunctions`RealJacobiAmplitude\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[SpecialFunctions`RealJacobiAmplitude][System`EllipticDump`uu_, System`EllipticDump`mm_] \/; Internal`PatternFreeQ[Hold[System`EllipticDump`uu, System`EllipticDump`mm]] := Module[{System`EllipticDump`u, System`EllipticDump`m, System`EllipticDump`prec, System`EllipticDump`res = $Failed}, {System`EllipticDump`prec, System`EllipticDump`u, System`EllipticDump`m} = System`EllipticDump`iCoerceInputs[System`EllipticDump`uu, System`EllipticDump`mm]; If[NumberQ[System`EllipticDump`u] && NumberQ[System`EllipticDump`m] && System`EllipticDump`prec < Infinity, System`EllipticDump`res = System`EllipticDump`nRealJacobiAmplitude[System`EllipticDump`u, System`EllipticDump`m]; , System`EllipticDump`res = System`EllipticDump`symbolicRealJacobiAmplitude[System`EllipticDump`u, System`EllipticDump`m]; ]; System`EllipticDump`res \/; System`EllipticDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SpecialFunctions`RealJacobiAmplitude",
	"NDSolve`RealLine":"ObjectType: Symbol\nUsage: NDSolve`RealLine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`RealLine",
	"Statistics`Library`RealMatrixQ":"ObjectType: Symbol\nUsage: Statistics`Library`RealMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RealMatrixQ[Statistics`Library`Dump`x_] := MatrixQ[Statistics`Library`Dump`x, Internal`RealValuedNumericQ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RealMatrixQ",
	"Reduce`RealNRoots":"ObjectType: Symbol\nUsage: Reduce`RealNRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RealNRoots",
	"Statistics`Library`RealNumberQ":"ObjectType: Symbol\nUsage: Statistics`Library`RealNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RealNumberQ[Statistics`Library`Dump`x_] := Internal`RealValuedNumericQ[Statistics`Library`Dump`x]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RealNumberQ",
	"Asymptotics`RealPeriodicBoundsLookup":"ObjectType: Symbol\nUsage: Asymptotics`RealPeriodicBoundsLookup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Asymptotics`RealPeriodicBoundsLookup[Asymptotics`AsymptoticsUtilsDump`f_, Asymptotics`AsymptoticsUtilsDump`x_, Asymptotics`AsymptoticsUtilsDump`asm_] := Asymptotics`AsymptoticsUtilsDump`perbounds[Asymptotics`AsymptoticsUtilsDump`f, Asymptotics`AsymptoticsUtilsDump`x, Asymptotics`AsymptoticsUtilsDump`asm]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Asymptotics`RealPeriodicBoundsLookup",
	"Reduce`RealPolyRoots":"ObjectType: Symbol\nUsage: Reduce`RealPolyRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RealPolyRoots",
	"Developer`RealQ":"ObjectType: Symbol\nUsage: Developer`RealQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`RealQ",
	"System`Private`RealRootQ":"ObjectType: Symbol\nUsage: System`Private`RealRootQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`RealRootQ",
	"System`Private`RealRoots":"ObjectType: Symbol\nUsage: System`Private`RealRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`RealRoots",
	"LinearAlgebra`Private`RealSymmetricMatrixQ":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`RealSymmetricMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`RealSymmetricMatrixQ",
	"TemporalData`RealTemporalDataQ":"ObjectType: Symbol\nUsage: TemporalData`TemporalDataQ with additional requirement that the values all be real numbers.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TemporalData`RealTemporalDataQ[RandomProcesses`TemporalDataDump`td_, RandomProcesses`TemporalDataDump`caller_:TemporalData] \/; RandomProcesses`TemporalDataDump`iValidRealTemporalDataQ[RandomProcesses`TemporalDataDump`td, RandomProcesses`TemporalDataDump`caller] := True\nTemporalData`RealTemporalDataQ[_, _:TemporalData] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: TemporalData`RealTemporalDataQ",
	"Reduce`RealTNRoots":"ObjectType: Symbol\nUsage: Reduce`RealTNRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RealTNRoots[System`TRootsDump`f_, {System`TRootsDump`a_, System`TRootsDump`b_}, System`TRootsDump`prec_] := Module[{System`TRootsDump`ans, System`TRootsDump`rts, System`TRootsDump`irts = $Failed, System`TRootsDump`ff, System`TRootsDump`aa = System`TRootsDump`a, System`TRootsDump`bb = System`TRootsDump`b, System`TRootsDump`c, System`TRootsDump`pr = System`TRootsDump`prec}, If[System`TRootsDump`pr === Automatic, System`TRootsDump`pr = Internal`PrecAccur[System`TRootsDump`f]; If[System`TRootsDump`pr === Infinity, System`TRootsDump`pr = MachinePrecision], If[System`TRootsDump`pr === Infinity, System`TRootsDump`pr = Internal`PrecAccur[System`TRootsDump`f]]]; System`TRootsDump`ff = Rationalize[Rationalize[System`TRootsDump`f], 0]; If[ !NumericQ[System`TRootsDump`aa] ||  !NumericQ[System`TRootsDump`bb], System`TRootsDump`c = Reduce`TrigPolyBound[System`TRootsDump`f]; If[NumberQ[System`TRootsDump`c], System`TRootsDump`aa = Max[System`TRootsDump`aa, -System`TRootsDump`c]; System`TRootsDump`bb = Min[System`TRootsDump`bb, System`TRootsDump`c]]]; If[NumericQ[System`TRootsDump`aa] && NumericQ[System`TRootsDump`bb], If[System`TRootsDump`pr === Infinity, System`TRootsDump`rts = Quiet[Reduce`IntervalRoots[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}, Analytic -> FunctionProperties`UnivariateAnalyticQ[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}]]]; If[ListQ[System`TRootsDump`rts], Return[System`TRootsDump`rts]], Block[{System`TRootsDump`$NResUndecFail = False}, System`TRootsDump`irts = Quiet[System`TRootsDump`NIntervalRoots[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}, If[System`TRootsDump`pr === MachinePrecision, N[MachinePrecision], System`TRootsDump`pr]]]; If[ListQ[System`TRootsDump`irts], System`TRootsDump`irts = N[System`TRootsDump`irts, System`TRootsDump`pr]; If[ !System`TRootsDump`$NResUndecFail, Return[System`TRootsDump`irts, Module]]]]]]; System`TRootsDump`rts = Reduce`MonotonicRoots[System`TRootsDump`f, {System`TRootsDump`aa, System`TRootsDump`bb}, PerformanceGoal -> \"Speed\"]; If[ListQ[System`TRootsDump`rts], Return[N[System`TRootsDump`rts, System`TRootsDump`pr]]]; If[NumericQ[System`TRootsDump`aa] && NumericQ[System`TRootsDump`bb], If[System`TRootsDump`pr === Infinity, System`TRootsDump`rts = Reduce`AnalyticRoots[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}], System`TRootsDump`rts = Reduce`AnalyticNRoots[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}, If[System`TRootsDump`pr === MachinePrecision, N[MachinePrecision], System`TRootsDump`pr]]; If[ListQ[System`TRootsDump`rts], System`TRootsDump`rts = N[System`TRootsDump`rts, System`TRootsDump`pr]; If[ListQ[System`TRootsDump`irts], System`TRootsDump`rts = Union[System`TRootsDump`rts, System`TRootsDump`irts]], If[ListQ[System`TRootsDump`irts], System`TRootsDump`rts = System`TRootsDump`irts]]]; If[ListQ[System`TRootsDump`rts], Return[System`TRootsDump`rts]]]; System`TRootsDump`rts = Reduce`ExpLogRoots[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}]; If[ !ListQ[System`TRootsDump`rts], System`TRootsDump`rts = Reduce`ElementaryRoots[System`TRootsDump`ff, {System`TRootsDump`aa, System`TRootsDump`bb}]]; If[ !ListQ[System`TRootsDump`rts] || System`TRootsDump`rts[[2]] =!= {}, Return[$Failed]]; System`TRootsDump`rts = System`TRootsDump`rts[[1]]; If[NumericQ[System`TRootsDump`a] && PossibleZeroQ[System`TRootsDump`ff[System`TRootsDump`a]], System`TRootsDump`rts = If[NumericQ[System`TRootsDump`b] && PossibleZeroQ[System`TRootsDump`ff[System`TRootsDump`b]], Join[{System`TRootsDump`a}, System`TRootsDump`rts, {System`TRootsDump`b}], Prepend[System`TRootsDump`rts, System`TRootsDump`a]], If[NumericQ[System`TRootsDump`b] && PossibleZeroQ[System`TRootsDump`ff[System`TRootsDump`b]], System`TRootsDump`rts = Append[System`TRootsDump`rts, System`TRootsDump`b]]]; N[System`TRootsDump`rts, System`TRootsDump`pr]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RealTNRoots",
	"Reduce`RealTRoots":"ObjectType: Symbol\nUsage: Reduce`RealTRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RealTRoots",
	"Statistics`Library`RealUnivariateDataQ":"ObjectType: Symbol\nUsage: Statistics`Library`RealUnivariateDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_] := Statistics`Library`RealVectorQ[Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {-Infinity, Infinity}] := Statistics`Library`RealVectorQ[Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}] := With[{Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]}, Statistics`Library`RealVectorQ[Statistics`Library`Dump`newdata] && Statistics`Library`Dump`checkDataBounds[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {GreaterEqual, LessEqual}]]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, \"Closed\"] := Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_EventData, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, \"Open\" | {\"Open\", \"Open\"}] := Block[{Statistics`Library`Dump`newdata, Statistics`Library`Dump`closure}, Statistics`Library`Dump`validUncensoredDataQ[Statistics`Library`Dump`data, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {\"Open\", \"Open\"}] && (Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]; Statistics`Library`Dump`closure = Switch[Statistics`Library`Dump`data[\"CensoringType\"], \"Left\", {\"Open\", \"Closed\"}, \"Right\", {\"Closed\", \"Open\"}, \"CurrentStatus\" | \"Interval\", {\"Closed\", \"Closed\"}, _, \"Open\"]; Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, Statistics`Library`Dump`closure])]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_EventData, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, {\"Open\", \"Closed\"}] := Block[{Statistics`Library`Dump`newdata, Statistics`Library`Dump`leftclosure}, Statistics`Library`Dump`validUncensoredDataQ[Statistics`Library`Dump`data, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {\"Open\", \"Closed\"}] && (Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]; Statistics`Library`Dump`leftclosure = If[MatchQ[Statistics`Library`Dump`data[\"CensoringType\"], \"Right\" | \"CurrentStatus\" | \"Interval\"], \"Closed\", \"Open\"]; Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {Statistics`Library`Dump`leftclosure, \"Closed\"}])]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_EventData, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, {\"Closed\", \"Open\"}] := Block[{Statistics`Library`Dump`newdata, Statistics`Library`Dump`rightclosure}, Statistics`Library`Dump`validUncensoredDataQ[Statistics`Library`Dump`data, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {\"Closed\", \"Open\"}] && (Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]; Statistics`Library`Dump`rightclosure = If[MatchQ[Statistics`Library`Dump`data[\"CensoringType\"], \"Left\" | \"CurrentStatus\" | \"Interval\"], \"Closed\", \"Open\"]; Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {\"Closed\", Statistics`Library`Dump`rightclosure}])]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, \"Open\"] := With[{Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]}, Statistics`Library`RealVectorQ[Statistics`Library`Dump`newdata] && Statistics`Library`Dump`checkDataBounds[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {Greater, Less}]]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, {\"Open\", \"Open\"}] := Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, \"Open\"]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, {\"Closed\", \"Closed\"}] := Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, {\"Closed\", \"Open\"}] := With[{Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]}, Statistics`Library`RealVectorQ[Statistics`Library`Dump`newdata] && Statistics`Library`Dump`checkDataBounds[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {GreaterEqual, Less}]]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, {Statistics`Library`Dump`min_, Statistics`Library`Dump`max_}, {\"Open\", \"Closed\"}] := With[{Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]}, Statistics`Library`RealVectorQ[Statistics`Library`Dump`newdata] && Statistics`Library`Dump`checkDataBounds[Statistics`Library`Dump`newdata, {Statistics`Library`Dump`min, Statistics`Library`Dump`max}, {Greater, LessEqual}]]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, (Statistics`Library`Dump`diff_)?Statistics`Library`RealNumberQ] := With[{Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]}, Statistics`Library`RealVectorQ[Statistics`Library`Dump`newdata] && Max[Statistics`Library`Dump`newdata] - Min[Statistics`Library`Dump`newdata] <= Statistics`Library`Dump`diff]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, (Statistics`Library`Dump`diff_)?Statistics`Library`RealNumberQ, \"Closed\"] := Statistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data, Statistics`Library`Dump`diff]\nStatistics`Library`RealUnivariateDataQ[Statistics`Library`Dump`data_, (Statistics`Library`Dump`diff_)?Statistics`Library`RealNumberQ, \"Open\"] := With[{Statistics`Library`Dump`newdata = Statistics`Library`SurvivalTimePoints[Statistics`Library`Dump`data]}, Statistics`Library`RealVectorQ[Statistics`Library`Dump`newdata] && Max[Statistics`Library`Dump`newdata] - Min[Statistics`Library`Dump`newdata] < Statistics`Library`Dump`diff]\nStatistics`Library`RealUnivariateDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RealUnivariateDataQ",
	"Reduce`RealUnivZeroQ":"ObjectType: Symbol\nUsage: Reduce`RealUnivZeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RealUnivZeroQ[System`RealRootsDump`f_, System`RealRootsDump`x_, System`RealRootsDump`inf_] := Module[{System`RealRootsDump`ff, System`RealRootsDump`rr, System`RealRootsDump`e, System`RealRootsDump`i}, System`RealRootsDump`ff = System`RealRootsDump`f \/. System`RealRootsDump`$InertToSystem; System`RealRootsDump`rr = If[System`RealRootsDump`inf =!= False, System`RealRootsDump`$RandomPositiveNums, System`RealRootsDump`$RandomRealNums]; NumericalMath`BoundedPrecisionEvaluate[Do[System`RealRootsDump`e = System`RealRootsDump`ff \/. System`RealRootsDump`x -> System`RealRootsDump`rr[[System`RealRootsDump`i]]; If[ !NumberQ[System`RealRootsDump`e] || System`RealRootsDump`e != 0, Return[False, Module]], {System`RealRootsDump`i, 10}], 1000]; System`RealRootsDump`rr = If[System`RealRootsDump`inf =!= False, System`RealRootsDump`x > 4096, Element[System`RealRootsDump`x, Reals]]; System`RealRootsDump`e = Simplify[System`RealRootsDump`ff, Assumptions -> System`RealRootsDump`rr]; If[System`RealRootsDump`e === 0, Return[True]]; If[Precision[System`RealRootsDump`e] =!= Infinity, System`RealRootsDump`e = System`RealRootsDump`sRationalize[System`RealRootsDump`e]; If[System`RealRootsDump`e === 0, Return[True]]]; If[System`RealRootsDump`inf === True, System`RealRootsDump`e = Series[System`RealRootsDump`ff, {System`RealRootsDump`x, Infinity, 100}]; If[Head[System`RealRootsDump`e] === SeriesData, If[Normal[System`RealRootsDump`e] =!= 0, Return[False]], If[PossibleZeroQ[System`RealRootsDump`ff] === False, Return[False]]], If[System`RealRootsDump`inf === Automatic && PossibleZeroQ[System`RealRootsDump`ff] === False, Return[False]]]; Automatic]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RealUnivZeroQ",
	"Reduce`RealValued":"ObjectType: Symbol\nUsage: Reduce`RealValued\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Reduce`RealValued",
	"Internal`RealValuedNumberQ":"ObjectType: Symbol\nUsage: Internal`RealValuedNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RealValuedNumberQ",
	"System`ConvertersDump`FormatUtilities`RealValuedNumericBetween0And1Q":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`RealValuedNumericBetween0And1Q\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`RealValuedNumericBetween0And1Q[System`ConvertersDump`FormatUtilities`Private`pattern_] := Internal`RealValuedNumericQ[System`ConvertersDump`FormatUtilities`Private`pattern] && 0 <= System`ConvertersDump`FormatUtilities`Private`pattern <= 1\nSystem`ConvertersDump`FormatUtilities`RealValuedNumericBetween0And1Q[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`RealValuedNumericBetween0And1Q",
	"Internal`RealValuedNumericQ":"ObjectType: Symbol\nUsage: Internal`RealValuedNumericQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RealValuedNumericQ",
	"Statistics`Library`RealVectorQ":"ObjectType: Symbol\nUsage: Statistics`Library`RealVectorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`RealVectorQ[Statistics`Library`Dump`x_] := VectorQ[Statistics`Library`Dump`x, Internal`RealValuedNumericQ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`RealVectorQ",
	"Sum`RearrangementSummation":"ObjectType: Symbol\nUsage: Sum`RearrangementSummation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sum`RearrangementSummation[Sum`SumMultivariateBasicMethodsDump`summand_, Sum`SumMultivariateBasicMethodsDump`iterators__] \/; Sum`SumMultivariateBasicMethodsDump`rearrangementSumQ[Sum`SumMultivariateBasicMethodsDump`iterators] := Block[{Sum`SumMultivariateBasicMethodsDump`res, Sum`SumMultivariateBasicMethodsDump`itrs, Sum`SumMultivariateBasicMethodsDump`nsummand, Sum`SumMultivariateBasicMethodsDump`f, Sum`SumMultivariateBasicMethodsDump`n, Sum`SumMultivariateBasicMethodsDump`k, Sum`SumMultivariateBasicMethodsDump`a, Sum`SumMultivariateBasicMethodsDump`b}, Sum`SumMultivariateBasicMethodsDump`itrs = {Sum`SumMultivariateBasicMethodsDump`iterators}; {Sum`SumMultivariateBasicMethodsDump`n, Sum`SumMultivariateBasicMethodsDump`k} = Sum`SumMultivariateBasicMethodsDump`itrs[[All,1]]; {Sum`SumMultivariateBasicMethodsDump`a, Sum`SumMultivariateBasicMethodsDump`b} = Sum`SumMultivariateBasicMethodsDump`itrs[[All,2]]; Sum`SumMultivariateBasicMethodsDump`nsummand = Sum`SumMultivariateBasicMethodsDump`summand \/. {Sum`SumMultivariateBasicMethodsDump`k -> Sum`SumMultivariateBasicMethodsDump`k + Sum`SumMultivariateBasicMethodsDump`b} \/. {Sum`SumMultivariateBasicMethodsDump`n -> Sum`SumMultivariateBasicMethodsDump`n + Sum`SumMultivariateBasicMethodsDump`a} \/. {Sum`SumMultivariateBasicMethodsDump`n -> Sum`SumMultivariateBasicMethodsDump`n - Sum`SumMultivariateBasicMethodsDump`k}; (Sum`SumMultivariateBasicMethodsDump`f = Sum`SumMultivariateBasicMethodsDump`iSumParser[Sum`SumMultivariateBasicMethodsDump`nsummand, {{Sum`SumMultivariateBasicMethodsDump`k, 0, Sum`SumMultivariateBasicMethodsDump`n}}]; (Sum`SumMultivariateBasicMethodsDump`res = Sum`SumMultivariateBasicMethodsDump`iSumParser[Sum`SumMultivariateBasicMethodsDump`f, {{Sum`SumMultivariateBasicMethodsDump`n, 0, Infinity}}]; Sum`SumMultivariateBasicMethodsDump`res \/; FreeQ[Sum`SumMultivariateBasicMethodsDump`res, $Failed]) \/; FreeQ[Sum`SumMultivariateBasicMethodsDump`f, $Failed]) \/; Sum`SumMultivariateBasicMethodsDump`structurallyDissimilarSumQ[Sum`SumMultivariateBasicMethodsDump`summand, Sum`SumMultivariateBasicMethodsDump`nsummand]]\nSum`RearrangementSummation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sum`RearrangementSummation",
	"NDSolve`FEM`ReassociateConditions":"ObjectType: Symbol\nUsage: NDSolve`FEM`ReassociateConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ReassociateConditions",
	"PacletManager`RebuildPacletData":"ObjectType: Symbol\nUsage: PacletDataRebuild[] rescans all the installed paclets to rebuild the internal cache of paclet data.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletDataRebuild[OptionsPattern[]] := Module[{PacletManager`Manager`Private`collections, PacletManager`Manager`Private`paclets, PacletManager`Manager`Private`p, PacletManager`Manager`Private`currentDisabled, PacletManager`Manager`Private`currentDisabledTransient, PacletManager`Manager`Private`newDisabled, PacletManager`Manager`Private`newDisabledTransient, PacletManager`Manager`Private`newPreloadData, PacletManager`Manager`Private`newDeclareLoadData, PacletManager`Manager`Private`newFuncInfo, PacletManager`Manager`Private`loadingState, PacletManager`Manager`Private`preloadData, PacletManager`Manager`Private`declareLoadData, PacletManager`Manager`Private`funcInfo}, PacletManager`Manager`Private`collections = OptionValue[\"Collections\"]; PacletManager`Package`PCrebuild[\"Collections\" -> PacletManager`Manager`Private`collections]; PacletManager`Package`PCwrite[]; PacletManager`Manager`Private`resetFEData[]; PacletManager`Manager`Private`clearMessageLinkCache[]; PacletManager`Manager`Private`rebuildPathMap[]; {PacletManager`Manager`Private`currentDisabled, PacletManager`Manager`Private`currentDisabledTransient} = {\"Disabled\", \"DisabledTransient\"} \/. PacletManager`Package`$managerData; If[PacletManager`Package`isCloudUser[], PacletManager`Manager`Private`paclets = PacletManager`Package`takeLatestVersionOfEachPaclet[PacletManager`Package`PCfindMatching[\"Collections\" -> {\"User\", \"Legacy\"}]], PacletManager`Manager`Private`paclets = PacletManager`Package`takeLatestVersionOfEachPaclet[PacletManager`Package`PCfindMatching[\"Collections\" -> {\"User\", \"Shared\", \"Layout\", \"Legacy\"}]]]; PacletManager`Manager`Private`newPreloadData = PacletManager`Manager`Private`newDeclareLoadData = PacletManager`Manager`Private`newFuncInfo = PacletManager`Manager`Private`newDisabled = PacletManager`Manager`Private`newDisabledTransient = {}; PacletManager`Package`doForEach[PacletManager`Manager`Private`p, PacletManager`Manager`Private`paclets, If[PacletManager`Package`isEnabled[PacletManager`Manager`Private`p], {PacletManager`Manager`Private`loadingState, PacletManager`Manager`Private`preloadData, PacletManager`Manager`Private`declareLoadData, PacletManager`Manager`Private`funcInfo} = PacletManager`Package`getLoadData[PacletManager`Manager`Private`p]; Switch[PacletManager`Manager`Private`loadingState, \"Startup\", If[MatchQ[PacletManager`Manager`Private`preloadData, {__String}], PacletManager`Manager`Private`newPreloadData = Join[PacletManager`Manager`Private`newPreloadData, PacletManager`Manager`Private`preloadData]], Automatic, If[MatchQ[PacletManager`Manager`Private`declareLoadData, {{_String, _:False, _List}..}], PacletManager`Manager`Private`newDeclareLoadData = Join[PacletManager`Manager`Private`newDeclareLoadData, PacletManager`Manager`Private`declareLoadData]]]; If[MatchQ[PacletManager`Manager`Private`funcInfo, {{_String, {_List...}}..}], PacletManager`Manager`Private`newFuncInfo = Join[PacletManager`Manager`Private`newFuncInfo, PacletManager`Manager`Private`funcInfo]], AppendTo[PacletManager`Manager`Private`newDisabled, PacletManager`Package`PgetKey[PacletManager`Manager`Private`p]]]]; PacletManager`Manager`Private`doDeclareLoad[PacletManager`Manager`Private`newDeclareLoadData]; PacletManager`Manager`Private`doFunctionInformation[PacletManager`Manager`Private`newFuncInfo]; PacletManager`Manager`Private`paclets = PacletManager`Package`takeLatestVersionOfEachPaclet[PacletManager`Package`PCfindMatching[\"Collections\" -> {\"Extra\", \"CloudExtra\"}]]; PacletManager`Package`doForEach[PacletManager`Manager`Private`p, PacletManager`Manager`Private`paclets, If[PacletManager`Package`isEnabled[PacletManager`Manager`Private`p], {PacletManager`Manager`Private`loadingState, PacletManager`Manager`Private`preloadData, PacletManager`Manager`Private`declareLoadData, PacletManager`Manager`Private`funcInfo} = PacletManager`Package`getLoadData[PacletManager`Manager`Private`p]; If[PacletManager`Manager`Private`loadingState == Automatic, PacletManager`Manager`Private`doDeclareLoad[PacletManager`Manager`Private`declareLoadData]]; PacletManager`Manager`Private`doFunctionInformation[PacletManager`Manager`Private`funcInfo], AppendTo[PacletManager`Manager`Private`newDisabledTransient, PacletManager`Package`PgetKey[PacletManager`Manager`Private`p]]]]; PacletManager`Package`updateManagerData[{\"PreloadData\" -> PacletManager`Manager`Private`newPreloadData, \"DeclareLoadData\" -> PacletManager`Manager`Private`newDeclareLoadData, \"FunctionInformation\" -> PacletManager`Manager`Private`newFuncInfo, \"Disabled\" -> PacletManager`Manager`Private`newDisabled, \"DisabledTransient\" -> PacletManager`Manager`Private`newDisabledTransient, \"CachesValid\" -> {$SystemID}}, \"Write\" -> True]; PacletManager`Package`$pacletDataChangeTrigger++; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Collections -> All}\nAttributes: {}\nFullName: System`PacletDataRebuild",
	"Parallel`Developer`Receive":"ObjectType: Symbol\nUsage: Parallel`Developer`Receive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Parallel`Developer`Receive[___] := (Message[Parallel`Developer`Receive::subnopar]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`Receive",
	"Parallel`Developer`ReceiveIfReady":"ObjectType: Symbol\nUsage: Parallel`Developer`ReceiveIfReady\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Parallel`Developer`ReceiveIfReady[___] := (Message[Parallel`Developer`ReceiveIfReady::subnopar]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Developer`ReceiveIfReady",
	"Internal`ReciprocalSqrt":"ObjectType: Symbol\nUsage: Internal`ReciprocalSqrt\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable, NumericFunction}\nFullName: Internal`ReciprocalSqrt",
	"Solve`RecipVar":"ObjectType: Symbol\nUsage: Solve`RecipVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldAll}\nFullName: Solve`RecipVar",
	"Reduce`RecordReduceMessage":"ObjectType: Symbol\nUsage: Reduce`RecordReduceMessage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RecordReduceMessage",
	"Reduce`RecReduce":"ObjectType: Symbol\nUsage: Reduce`RecReduce\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RecReduce[System`ReduceUtilsDump`args__] := Module[{System`ReduceUtilsDump`ans, System`ReduceUtilsDump`pp, System`ReduceUtilsDump`i, K}, System`ReduceUtilsDump`ans = If[Reduce`Private`$TryComplexExpand === True, Block[{Reduce`Private`$TryComplexExpand = Automatic}, Reduce[System`ReduceUtilsDump`args, GeneratedParameters -> K]], Reduce[System`ReduceUtilsDump`args, GeneratedParameters -> K]]; If[Reduce`UReduceQ[System`ReduceUtilsDump`ans], Return[$Failed]]; System`ReduceUtilsDump`pp = Union[Cases[System`ReduceUtilsDump`ans, _K, Infinity]]; System`ReduceUtilsDump`i = Length[System`ReduceUtilsDump`pp]; If[System`ReduceUtilsDump`i > 0, System`ReduceUtilsDump`ans = System`ReduceUtilsDump`ans \/. Thread[System`ReduceUtilsDump`pp -> Reduce`UniqueParameters[System`ReduceUtilsDump`i, System`ReduceUtilsDump`ans]]]; System`ReduceUtilsDump`ans]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RecReduce",
	"Statistics`RectangularKernel":"ObjectType: Symbol\nUsage: Statistics`RectangularKernel\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[DistributionParameterQ[Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= True\nHoldPattern[DistributionDomain[Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= Interval[{-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}]\nHoldPattern[Statistics`Library`DistributionNParameterQ[Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= NumericQ[Statistics`KernelMixtureDistributionDump`u] && NumericQ[Statistics`KernelMixtureDistributionDump`h] && Statistics`KernelMixtureDistributionDump`h > 0\nHoldPattern[DistributionParameterAssumptions[Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= Statistics`KernelMixtureDistributionDump`h > 0 && Element[Statistics`KernelMixtureDistributionDump`u, Reals]\nHoldPattern[PDF[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= Piecewise[{{1\/(2*Statistics`KernelMixtureDistributionDump`h), -Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u < Statistics`KernelMixtureDistributionDump`x < Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}}, 0]\nHoldPattern[PDF[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[(Statistics`KernelMixtureDistributionDump`u_)?NumericQ, (Statistics`KernelMixtureDistributionDump`h_)?NumericQ], (Statistics`KernelMixtureDistributionDump`x_)?Statistics`Library`RealArrayQ]] ^:= Module[{Statistics`KernelMixtureDistributionDump`dims, Statistics`KernelMixtureDistributionDump`res, Statistics`KernelMixtureDistributionDump`sign, Statistics`KernelMixtureDistributionDump`prec = Internal`PrecAccur[{Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`h, Statistics`KernelMixtureDistributionDump`x}]}, If[Statistics`KernelMixtureDistributionDump`x === {}, Return[{}]]; Statistics`KernelMixtureDistributionDump`dims = Dimensions[Statistics`KernelMixtureDistributionDump`x]; Statistics`KernelMixtureDistributionDump`len = Times @@ Statistics`KernelMixtureDistributionDump`dims; Statistics`KernelMixtureDistributionDump`res = ConstantArray[N[1\/(2*Statistics`KernelMixtureDistributionDump`h), Statistics`KernelMixtureDistributionDump`prec], Statistics`KernelMixtureDistributionDump`len]; Statistics`KernelMixtureDistributionDump`sign = Sign[Abs[Statistics`KernelMixtureDistributionDump`iCentering[{Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`h}, Statistics`KernelMixtureDistributionDump`x]] - 1]; If[Length[Statistics`KernelMixtureDistributionDump`dims] > 1, Internal`ArrayReshapeTo[Statistics`KernelMixtureDistributionDump`sign, Statistics`KernelMixtureDistributionDump`len]]; Statistics`KernelMixtureDistributionDump`sign = Statistics`KernelMixtureDistributionDump`spPositionsOf[Statistics`KernelMixtureDistributionDump`sign, NonNegative]; If[Statistics`KernelMixtureDistributionDump`sign =!= {}, Statistics`KernelMixtureDistributionDump`res[[Statistics`KernelMixtureDistributionDump`sign]] = N[1, Statistics`KernelMixtureDistributionDump`prec] - 1]; If[Length[Statistics`KernelMixtureDistributionDump`dims] > 1, Internal`ArrayReshapeTo[Statistics`KernelMixtureDistributionDump`res, Statistics`KernelMixtureDistributionDump`dims]]; Statistics`KernelMixtureDistributionDump`res]\nHoldPattern[CDF[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= Piecewise[{{(Statistics`KernelMixtureDistributionDump`h - Statistics`KernelMixtureDistributionDump`u + Statistics`KernelMixtureDistributionDump`x)\/(2*Statistics`KernelMixtureDistributionDump`h), -Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u < Statistics`KernelMixtureDistributionDump`x < Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}, {1, Statistics`KernelMixtureDistributionDump`x >= Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}}, 0]\nHoldPattern[SurvivalFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= Piecewise[{{(Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u - Statistics`KernelMixtureDistributionDump`x)\/(2*Statistics`KernelMixtureDistributionDump`h), -Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u < Statistics`KernelMixtureDistributionDump`x < Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}, {0, Statistics`KernelMixtureDistributionDump`x >= Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}}, 1]\nHoldPattern[HazardFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`x_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= Piecewise[{{(Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u - Statistics`KernelMixtureDistributionDump`x)^(-1), Inequality[-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u, Less, Statistics`KernelMixtureDistributionDump`x, Less, Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u]}, {Infinity, Statistics`KernelMixtureDistributionDump`x == Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u}}, 0]\nHoldPattern[Quantile[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`q_)?Statistics`Library`QuantileQ]] ^:= Piecewise[{{(1 - Statistics`KernelMixtureDistributionDump`q)*(-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u) + Statistics`KernelMixtureDistributionDump`q*(Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u), 0 < Statistics`KernelMixtureDistributionDump`q < 1}, {-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`q <= 0}}, Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u]\nHoldPattern[Quantile[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], Statistics`KernelMixtureDistributionDump`q_]] \/; Statistics`KernelMixtureDistributionDump`qArrayQ[Statistics`KernelMixtureDistributionDump`q] ^:= Statistics`KernelMixtureDistributionDump`iScale[{Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`h}, 2*Statistics`KernelMixtureDistributionDump`q - 1]\nHoldPattern[InverseCDF[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`q_)?Statistics`Library`QuantileQ]] ^:= Quantile[Statistics`KernelMixtureDistributionDump`dist, Statistics`KernelMixtureDistributionDump`q]\nHoldPattern[Median[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= Statistics`KernelMixtureDistributionDump`u\nHoldPattern[InverseSurvivalFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`q_)?Statistics`Library`QuantileQ]] ^:= Piecewise[{{Statistics`KernelMixtureDistributionDump`q*(-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u) + (1 - Statistics`KernelMixtureDistributionDump`q)*(Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u), 0 < Statistics`KernelMixtureDistributionDump`q < 1}, {Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`q <= 0}}, -Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u]\nHoldPattern[Moment[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`r_)?Statistics`Library`AdmissibleUnivariateNonNegativeIntegerInputQ]] ^:= (-(-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u)^(1 + Statistics`KernelMixtureDistributionDump`r) + (Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u)^(1 + Statistics`KernelMixtureDistributionDump`r))\/(2*Statistics`KernelMixtureDistributionDump`h*(1 + Statistics`KernelMixtureDistributionDump`r))\nHoldPattern[CentralMoment[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`r_)?Statistics`Library`AdmissibleUnivariateNonNegativeIntegerInputQ]] ^:= Piecewise[{{Statistics`KernelMixtureDistributionDump`h^Statistics`KernelMixtureDistributionDump`r\/(1 + Statistics`KernelMixtureDistributionDump`r), Mod[Statistics`KernelMixtureDistributionDump`r, 2] == 0 && Statistics`KernelMixtureDistributionDump`r >= 0}}, 0]\nHoldPattern[Cumulant[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`r_)?Statistics`Library`AdmissibleUnivariateNonNegativeIntegerInputQ]] ^:= Piecewise[{{Statistics`KernelMixtureDistributionDump`u, Statistics`KernelMixtureDistributionDump`r == 1}, {(2^Statistics`KernelMixtureDistributionDump`r*Statistics`KernelMixtureDistributionDump`h^Statistics`KernelMixtureDistributionDump`r*BernoulliB[Statistics`KernelMixtureDistributionDump`r])\/Statistics`KernelMixtureDistributionDump`r, Mod[Statistics`KernelMixtureDistributionDump`r, 2] == 0 && Statistics`KernelMixtureDistributionDump`r >= 2}}, 0]\nHoldPattern[FactorialMoment[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`r_)?Statistics`Library`AdmissibleUnivariateNonNegativeIntegerInputQ]] ^:= With[{Statistics`KernelMixtureDistributionDump`res = Statistics`Library`UnivariateMomentsConvert[Statistics`KernelMixtureDistributionDump`dist, Statistics`KernelMixtureDistributionDump`r, CentralMoment -> FactorialMoment]}, Statistics`KernelMixtureDistributionDump`res \/; Internal`LiterallyAbsentQ[Statistics`KernelMixtureDistributionDump`res, $Failed]]\nHoldPattern[Mean[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= Statistics`KernelMixtureDistributionDump`u\nHoldPattern[Variance[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= Statistics`KernelMixtureDistributionDump`h^2\/3\nHoldPattern[StandardDeviation[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= Statistics`KernelMixtureDistributionDump`h\/Sqrt[3]\nHoldPattern[Skewness[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= 0\nHoldPattern[Kurtosis[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_]]] ^:= 9\/5\nHoldPattern[MomentGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`t_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= (-E^(Statistics`KernelMixtureDistributionDump`t*(-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u)) + E^(Statistics`KernelMixtureDistributionDump`t*(Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u)))\/(2*Statistics`KernelMixtureDistributionDump`h*Statistics`KernelMixtureDistributionDump`t)\nHoldPattern[CharacteristicFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`t_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= ((-(I\/2))*(-E^(I*Statistics`KernelMixtureDistributionDump`t*(-Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u)) + E^(I*Statistics`KernelMixtureDistributionDump`t*(Statistics`KernelMixtureDistributionDump`h + Statistics`KernelMixtureDistributionDump`u))))\/(Statistics`KernelMixtureDistributionDump`h*Statistics`KernelMixtureDistributionDump`t)\nHoldPattern[FactorialMomentGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`t_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= With[{Statistics`KernelMixtureDistributionDump`res = MomentGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist, Log[Statistics`KernelMixtureDistributionDump`t]]}, Statistics`KernelMixtureDistributionDump`res \/; Internal`LiterallyAbsentQ[Statistics`KernelMixtureDistributionDump`res, $Failed]]\nHoldPattern[CumulantGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`t_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= With[{Statistics`KernelMixtureDistributionDump`res = Log[MomentGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist, Statistics`KernelMixtureDistributionDump`t]]}, Statistics`KernelMixtureDistributionDump`res \/; Internal`LiterallyAbsentQ[Statistics`KernelMixtureDistributionDump`res, $Failed]]\nHoldPattern[CentralMomentGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], (Statistics`KernelMixtureDistributionDump`t_)?Statistics`Library`AdmissibleUnivariateInputQ]] ^:= With[{Statistics`KernelMixtureDistributionDump`res = Exp[-(Mean[Statistics`KernelMixtureDistributionDump`dist]*Statistics`KernelMixtureDistributionDump`t)]*MomentGeneratingFunction[Statistics`KernelMixtureDistributionDump`dist, Statistics`KernelMixtureDistributionDump`t]}, Statistics`KernelMixtureDistributionDump`res \/; Internal`LiterallyAbsentQ[Statistics`KernelMixtureDistributionDump`res, $Failed]]\nStatistics`RectangularKernel \/: Random`DistributionVector[Statistics`KernelMixtureDistributionDump`dist:Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_], Statistics`KernelMixtureDistributionDump`m_Integer, Statistics`KernelMixtureDistributionDump`prec_] := RandomReal[{Statistics`KernelMixtureDistributionDump`u - Statistics`KernelMixtureDistributionDump`h, Statistics`KernelMixtureDistributionDump`u + Statistics`KernelMixtureDistributionDump`h}, Statistics`KernelMixtureDistributionDump`m, WorkingPrecision -> Statistics`KernelMixtureDistributionDump`prec]\nHoldPattern[Random`DistributionVector[Statistics`RectangularKernel[_, _], _, _]] ^:= $Failed\nDownValues: None\nSubValues: Statistics`RectangularKernel[Statistics`KernelMixtureDistributionDump`u_, Statistics`KernelMixtureDistributionDump`h_][\"RandomType\"] = RandomReal\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`RectangularKernel",
	"Region`Mesh`RectangularMeshIndices":"ObjectType: Symbol\nUsage: Region`Mesh`RectangularMeshIndices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`RectangularMeshIndices",
	"Graphics`Mesh`Developer`RectangularSurfaceMesh":"ObjectType: Symbol\nUsage: Graphics`Mesh`Developer`RectangularSurfaceMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`Developer`MeshAxis -> {0, 0, 1}, Graphics`Mesh`MeshPoints -> 15, Graphics`Mesh`Developer`OffsetAxis -> 0., ComputationalGeometry`Dump`Refinement -> Automatic, Graphics`Mesh`Developer`Symmetry -> {False, False}}\nAttributes: {}\nFullName: Graphics`Mesh`Developer`RectangularSurfaceMesh",
	"SymbolicTensors`RectangularTensorQ":"ObjectType: Symbol\nUsage: SymbolicTensors`RectangularTensorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SymbolicTensors`RectangularTensorQ",
	"RSolve`RecurrenceIterate":"ObjectType: Symbol\nUsage: RSolve`RecurrenceIterate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {WorkingPrecision -> Automatic}\nAttributes: {}\nFullName: RSolve`RecurrenceIterate",
	"Internal`ProcessEquations`RecurrenceOrder":"ObjectType: Symbol\nUsage: Internal`ProcessEquations`RecurrenceOrder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ProcessEquations`RecurrenceOrder",
	"Simplify`RecurrenceShift":"ObjectType: Symbol\nUsage: Simplify`RecurrenceShift\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`RecurrenceShift[Simplify`RecurrenceDump`e_, OptionsPattern[]] := Module[{Simplify`RecurrenceDump`op, Simplify`RecurrenceDump`headlst = {}, Simplify`RecurrenceDump`res, Simplify`RecurrenceDump`rd, Simplify`RecurrenceDump`h, Simplify`RecurrenceDump`par, Simplify`RecurrenceDump`ModCongruence, Simplify`RecurrenceDump`CongruenceDistance, Simplify`RecurrenceDump`CanonicalizeArgs, Simplify`RecurrenceDump`ReduceToTargetParameters, Simplify`RecurrenceDump`RecursionLength}, Simplify`ExpandPFQ; Simplify`RecurrenceDump`res = Catch[Simplify`RecurrenceDump`op = Flatten[{OptionValue[TargetFunctions]} \/. Automatic -> {}]; Simplify`RecurrenceDump`op = Simplify`RecurrenceDump`op \/. {HoldPattern[HoldPattern][(Simplify`RecurrenceDump`f_)[Simplify`RecurrenceDump`w__]] :> HoldPattern[Simplify`RecurrenceDump`f][Simplify`RecurrenceDump`w]}; If[Simplify`RecurrenceDump`op === {}, Throw[Simplify`RecurrenceDump`e]]; Simplify`RecurrenceDump`op = DeleteCases[Simplify`RecurrenceDump`op, Simplify`RecurrenceDump`x_ \/; With[{Simplify`RecurrenceDump`y = ReleaseHold[Head[Simplify`RecurrenceDump`x]]}, Head[Simplify`RecurrenceDump`y] =!= Symbol || Length[{Simplify`RecurrenceDump`RecurrenceData[Simplify`RecurrenceDump`y]}] == 1]]; If[Simplify`RecurrenceDump`op === {}, Throw[Simplify`RecurrenceDump`e]]; Simplify`RecurrenceDump`headlst = (ReleaseHold[Through[{Head, List @@ #1 & }[#1]]] & ) \/@ Simplify`RecurrenceDump`op; Fold[Function[{Simplify`RecurrenceDump`expr, Simplify`RecurrenceDump`f}, If[Length[Simplify`RecurrenceDump`f] == 2, {Simplify`RecurrenceDump`h, Simplify`RecurrenceDump`par} = Simplify`RecurrenceDump`f, Simplify`RecurrenceDump`h = $Failed]; Simplify`RecurrenceDump`rd = {Simplify`RecurrenceDump`RecurrenceData[Simplify`RecurrenceDump`h]}; If[Length[Simplify`RecurrenceDump`rd] == 5, {Simplify`RecurrenceDump`ModCongruence, Simplify`RecurrenceDump`CongruenceDistance, Simplify`RecurrenceDump`CanonicalizeArgs, Simplify`RecurrenceDump`ReduceToTargetParameters, Simplify`RecurrenceDump`RecursionLength} = Simplify`RecurrenceDump`rd; Simplify`RecurrenceDump`expr \/. With[{Simplify`RecurrenceDump`h = Simplify`RecurrenceDump`h}, {HoldPattern[Simplify`RecurrenceDump`h][Simplify`RecurrenceDump`w__] :> Simplify`RecurrenceDump`ReduceToTargetParameters[Simplify`RecurrenceDump`h, {Simplify`RecurrenceDump`CanonicalizeArgs[{Simplify`RecurrenceDump`w}]}, {Simplify`RecurrenceDump`CanonicalizeArgs[Simplify`RecurrenceDump`par]}] \/; Simplify`RecurrenceDump`ModCongruence[{Simplify`RecurrenceDump`CanonicalizeArgs[Simplify`RecurrenceDump`par]}] === Simplify`RecurrenceDump`ModCongruence[{Simplify`RecurrenceDump`CanonicalizeArgs[{Simplify`RecurrenceDump`w}]}] && {Simplify`RecurrenceDump`CanonicalizeArgs[{Simplify`RecurrenceDump`w}]} =!= {Indeterminate}}], Simplify`RecurrenceDump`expr]], Simplify`RecurrenceDump`e, Simplify`RecurrenceDump`headlst]]; If[Simplify`RecurrenceDump`headlst =!= {} && FreeQ[Simplify`RecurrenceDump`res, SeriesData], Collect[Simplify`RecurrenceDump`res, Alternatives @@ Blank \/@ Simplify`RecurrenceDump`headlst[[All,1]], Together], Simplify`RecurrenceDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {TargetFunctions -> {}}\nAttributes: {}\nFullName: Simplify`RecurrenceShift",
	"RSolve`RecurrenceTableTop":"ObjectType: Symbol\nUsage: RSolve`RecurrenceTableTop\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RSolve`RecurrenceTableTop[RSolve`RecurrenceTableDump`eqns_, RSolve`RecurrenceTableDump`dep_, RSolve`RecurrenceTableDump`irange__List, RSolve`RecurrenceTableDump`wpopt_Rule] := Block[{RSolve`RecurrenceTableDump`wprec = WorkingPrecision \/. RSolve`RecurrenceTableDump`wpopt}, RSolve`RecurrenceTableDump`RecurrenceTableMain[RSolve`RecurrenceTableDump`eqns, RSolve`RecurrenceTableDump`dep, RSolve`RecurrenceTableDump`irange]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RSolve`RecurrenceTableTop",
	"BoxForm`RecursionLimit":"ObjectType: Symbol\nUsage: BoxForm`RecursionLimit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`RecursionLimit",
	"SparseArray`RecursionMethod":"ObjectType: Symbol\nUsage: SparseArray`RecursionMethod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`RecursionMethod",
	"System`ConvertersDump`Recursive":"ObjectType: Symbol\nUsage: System`ConvertersDump`Recursive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Recursive",
	"Signal`FilteringDump`RecursiveFilter":"ObjectType: Symbol\nUsage: Signal`FilteringDump`RecursiveFilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`FilteringDump`RecursiveFilter",
	"Image`SpatialOperationsDump`RecursivePrefilter":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`RecursivePrefilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`RecursivePrefilter",
	"Image`SpatialOperationsDump`RecursivePrefilterRow":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`RecursivePrefilterRow\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`RecursivePrefilterRow",
	"Signal`Resampling`RecursiveResamplingPrefilter":"ObjectType: Symbol\nUsage: Signal`Resampling`RecursiveResamplingPrefilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Signal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", 0 | 1}, Signal`Resampling`padding_, Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Signal`Resampling`ListPad[Signal`Resampling`data, Signal`Resampling`padRadii, Signal`Resampling`padding]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data:{_}, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _}, Signal`Resampling`padding_, Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Signal`Resampling`ListPad[Signal`Resampling`data, Signal`Resampling`padRadii, Signal`Resampling`padding]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"Reversed\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`padns, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`norms, Signal`Resampling`n = Length[Signal`Resampling`data]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`padns = Signal`Resampling`RecursiveResamplingPadLength[Signal`Resampling`method, Signal`Resampling`precision]; If[Max[Signal`Resampling`padns] < Signal`Resampling`n, Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Signal`Resampling`data, {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]], {Signal`Resampling`alphas, Signal`Resampling`padns}]; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Last[Signal`Resampling`causal], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals), Signal`Resampling`padRadii, Signal`Resampling`padding], Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`data]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Last[Signal`Resampling`causal], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`norms = Function[Signal`Resampling`alpha, NestList[Signal`Resampling`alpha*#1 & , 1, Signal`Resampling`n - 1]] \/@ Signal`Resampling`alphas; Signal`Resampling`norms += Signal`Resampling`alphas^Signal`Resampling`n*Reverse \/@ Signal`Resampling`norms; Signal`Resampling`norms = MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {(Signal`Resampling`alphas\/(1 - Signal`Resampling`alphas^(2*Signal`Resampling`n)))*Signal`Resampling`anticausals[[All,1]], Signal`Resampling`norms}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals + Signal`Resampling`norms), Signal`Resampling`padRadii, Signal`Resampling`padding]]]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"ReversedDifferences\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`padns, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`norms, Signal`Resampling`n = Length[Signal`Resampling`data]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`padns = Signal`Resampling`RecursiveResamplingPadLength[Signal`Resampling`method, Signal`Resampling`precision]; If[Max[Signal`Resampling`padns] < Signal`Resampling`n, Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Signal`Resampling`data, {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]], {Signal`Resampling`alphas, Signal`Resampling`padns}]; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , (2\/(1 - Signal`Resampling`alpha))*Last[Signal`Resampling`data] - Last[Signal`Resampling`causal], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals), Signal`Resampling`padRadii, {Signal`Resampling`padding, First[Signal`Resampling`data], Last[Signal`Resampling`data]}], Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`data]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , (2\/(1 - Signal`Resampling`alpha))*Last[Signal`Resampling`data] - Last[Signal`Resampling`causal], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`norms = Function[Signal`Resampling`alpha, NestList[Signal`Resampling`alpha*#1 & , 1, Signal`Resampling`n - 1]] \/@ Signal`Resampling`alphas; Signal`Resampling`norms -= Signal`Resampling`alphas^Signal`Resampling`n*Reverse \/@ Signal`Resampling`norms; Signal`Resampling`norms = MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {((2*Signal`Resampling`alphas)\/((Signal`Resampling`alphas - 1)*(Signal`Resampling`alphas^(2*Signal`Resampling`n) - 1)))*First[Signal`Resampling`data] + (Signal`Resampling`alphas\/(Signal`Resampling`alphas^(2*Signal`Resampling`n) - 1))*Signal`Resampling`anticausals[[All,1]], Signal`Resampling`norms}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals + Signal`Resampling`norms), Signal`Resampling`padRadii, {Signal`Resampling`padding, First[Signal`Resampling`data], Last[Signal`Resampling`data]}]]]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"ReversedNegation\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`padns, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`norms, Signal`Resampling`n = Length[Signal`Resampling`data]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`padns = Signal`Resampling`RecursiveResamplingPadLength[Signal`Resampling`method, Signal`Resampling`precision]; If[Max[Signal`Resampling`padns] < Signal`Resampling`n, Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Signal`Resampling`data, {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]], {Signal`Resampling`alphas, Signal`Resampling`padns}]; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , -Last[Signal`Resampling`causal], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals), Signal`Resampling`padRadii, Signal`Resampling`padding], Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`data]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , -Last[Signal`Resampling`causal], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`norms = Function[Signal`Resampling`alpha, NestList[Signal`Resampling`alpha*#1 & , 1, Signal`Resampling`n - 1]] \/@ Signal`Resampling`alphas; Signal`Resampling`norms -= Signal`Resampling`alphas^Signal`Resampling`n*Reverse \/@ Signal`Resampling`norms; Signal`Resampling`norms = MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {Signal`Resampling`alphas*(First \/@ Signal`Resampling`anticausals\/(Signal`Resampling`alphas^(2*Signal`Resampling`n) - 1)), Signal`Resampling`norms}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals + Signal`Resampling`norms), Signal`Resampling`padRadii, Signal`Resampling`padding]]]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"Reflected\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`padns, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`norms, Signal`Resampling`n = Length[Signal`Resampling`data]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`padns = Signal`Resampling`RecursiveResamplingPadLength[Signal`Resampling`method, Signal`Resampling`precision]; If[Max[Signal`Resampling`padns] < Signal`Resampling`n, Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Signal`Resampling`data, {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]], {Signal`Resampling`alphas, Signal`Resampling`padns}]; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Signal`Resampling`causal[[-2]], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals), Signal`Resampling`padRadii, Signal`Resampling`padding], Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`data]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Signal`Resampling`causal[[-2]], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`norms = Function[Signal`Resampling`alpha, NestList[Signal`Resampling`alpha*#1 & , 1, Signal`Resampling`n - 1]] \/@ Signal`Resampling`alphas; Signal`Resampling`norms += Signal`Resampling`alphas^(Signal`Resampling`n - 1)*Reverse \/@ Signal`Resampling`norms; Signal`Resampling`norms = MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {(Signal`Resampling`alphas\/(1 - Signal`Resampling`alphas^(2*Signal`Resampling`n - 2)))*Signal`Resampling`anticausals[[All,2]], Signal`Resampling`norms}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals + Signal`Resampling`norms), Signal`Resampling`padRadii, Signal`Resampling`padding]]]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"ReflectedDifferences\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`padns, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`norms, Signal`Resampling`n = Length[Signal`Resampling`data]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`padns = Signal`Resampling`RecursiveResamplingPadLength[Signal`Resampling`method, Signal`Resampling`precision]; If[Max[Signal`Resampling`padns] < Signal`Resampling`n, Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Signal`Resampling`data, {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]], {Signal`Resampling`alphas, Signal`Resampling`padns}]; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , (2\/(1 - Signal`Resampling`alpha))*Last[Signal`Resampling`data] - Signal`Resampling`causal[[-2]], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals), Signal`Resampling`padRadii, Signal`Resampling`padding], Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`data]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`causal}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , (2\/(1 - Signal`Resampling`alpha))*Last[Signal`Resampling`data] - Signal`Resampling`causal[[-2]], Reverse[Signal`Resampling`data]]]]], {Signal`Resampling`alphas, Signal`Resampling`causals}]; Signal`Resampling`norms = Function[Signal`Resampling`alpha, NestList[Signal`Resampling`alpha*#1 & , 1, Signal`Resampling`n - 1]] \/@ Signal`Resampling`alphas; Signal`Resampling`norms -= Signal`Resampling`alphas^(Signal`Resampling`n - 1)*Reverse \/@ Signal`Resampling`norms; Signal`Resampling`norms = MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {((2*Signal`Resampling`alphas)\/((1 - Signal`Resampling`alphas)*(1 - Signal`Resampling`alphas^(2*(Signal`Resampling`n - 1)))))*First[Signal`Resampling`data] + (Signal`Resampling`alphas\/(Signal`Resampling`alphas^(2*(Signal`Resampling`n - 1)) - 1))*Signal`Resampling`anticausals[[All,2]], Signal`Resampling`norms}]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals + Signal`Resampling`norms), Signal`Resampling`padRadii, Signal`Resampling`padding]]]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"Periodic\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`padns, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`norms, Signal`Resampling`n = Length[Signal`Resampling`data]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`padns = Signal`Resampling`RecursiveResamplingPadLength[Signal`Resampling`method, Signal`Resampling`precision]; If[Max[Signal`Resampling`padns] < Signal`Resampling`n, Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Signal`Resampling`data, {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]], {Signal`Resampling`alphas, Signal`Resampling`padns}]; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`padn}, Reverse[Drop[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`ListPad[Reverse[Signal`Resampling`data], {Signal`Resampling`padn, 0}, Signal`Resampling`padding]], Signal`Resampling`padn + 1]]], {Signal`Resampling`alphas, Signal`Resampling`padns}], Signal`Resampling`norms = Function[Signal`Resampling`alpha, NestList[Signal`Resampling`alpha*#1 & , 1, Signal`Resampling`n - 1]] \/@ Signal`Resampling`alphas; Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Signal`Resampling`data]]] \/@ Signal`Resampling`alphas; Signal`Resampling`causals += MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {Signal`Resampling`alphas*(Last \/@ Signal`Resampling`causals\/(1 - Signal`Resampling`alphas^Signal`Resampling`n)), Signal`Resampling`norms}]; Signal`Resampling`anticausals = Function[Signal`Resampling`alpha, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , 0, Reverse[Signal`Resampling`data]]]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals += MapThread[Function[{Signal`Resampling`s, Signal`Resampling`vec}, (Signal`Resampling`s*#1 & ) \/@ Signal`Resampling`vec], {Signal`Resampling`alphas*(Signal`Resampling`anticausals[[All,1]]\/(1 - Signal`Resampling`alphas^Signal`Resampling`n)), Reverse \/@ Signal`Resampling`norms}]]; Signal`Resampling`ListPad[First[Signal`Resampling`betas]*Signal`Resampling`data + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals), Signal`Resampling`padRadii, Signal`Resampling`padding]]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:\"Fixed\", Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`source = Signal`Resampling`ListPad[Signal`Resampling`data, Signal`Resampling`padRadii, Signal`Resampling`padding]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , First[Signal`Resampling`source]\/(1 - Signal`Resampling`alpha), Signal`Resampling`source]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = Function[Signal`Resampling`alpha, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Last[Signal`Resampling`source]\/(1 - Signal`Resampling`alpha), Reverse[Signal`Resampling`source]]]]] \/@ Signal`Resampling`alphas; First[Signal`Resampling`betas]*Signal`Resampling`source + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals)]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`padding:{\"Extrapolated\", (Signal`Resampling`order_Integer)?NonNegative}, Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`initials, Signal`Resampling`n = Min[Signal`Resampling`order + 1, Length[Signal`Resampling`data]], Signal`Resampling`source = Signal`Resampling`ListPad[Signal`Resampling`data, Signal`Resampling`padRadii, Signal`Resampling`padding, InterpolationOrder -> Signal`Resampling`order]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`initials = ((Table[PolyLog[-Signal`Resampling`k, #1]\/#1, {Signal`Resampling`k, 0, Signal`Resampling`n - 1}] . Signal`Resampling`InterpolatingPolynomialCoefficientMatrix[Signal`Resampling`n]) . Take[Signal`Resampling`source, Signal`Resampling`n] & ) \/@ Signal`Resampling`alphas; Signal`Resampling`causals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`initial}, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Signal`Resampling`initial, Signal`Resampling`source]]], {Signal`Resampling`alphas, Signal`Resampling`initials}]; Signal`Resampling`initials = ((Table[PolyLog[-Signal`Resampling`k, #1]\/#1, {Signal`Resampling`k, 0, Signal`Resampling`n - 1}] . Reverse \/@ Signal`Resampling`InterpolatingPolynomialCoefficientMatrix[Signal`Resampling`n]) . Take[Signal`Resampling`source, -Signal`Resampling`n] & ) \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = MapThread[Function[{Signal`Resampling`alpha, Signal`Resampling`initial}, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Signal`Resampling`initial, Reverse[Signal`Resampling`source]]]]], {Signal`Resampling`alphas, Signal`Resampling`initials}]; First[Signal`Resampling`betas]*Signal`Resampling`source + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals)]\nSignal`Resampling`RecursiveResamplingPrefilter[Signal`Resampling`data_, Signal`Resampling`method:{\"Spline\" | \"OMOMS\", _Integer?(#1 >= 2 & )}, Signal`Resampling`c:Except[_List], Signal`Resampling`padRadii_, Signal`Resampling`precision_] := Module[{Signal`Resampling`alphas, Signal`Resampling`betas, Signal`Resampling`causals, Signal`Resampling`anticausals, Signal`Resampling`source = Signal`Resampling`ListPad[Signal`Resampling`data, Signal`Resampling`padRadii, Signal`Resampling`c]}, Signal`Resampling`alphas = SetPrecision[Signal`Resampling`Alpha @@ Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`betas = Signal`Resampling`BetaP @@ Append[Signal`Resampling`method, Signal`Resampling`precision]; Signal`Resampling`causals = Function[Signal`Resampling`alpha, Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Signal`Resampling`c\/(1 - Signal`Resampling`alpha), Signal`Resampling`source]]] \/@ Signal`Resampling`alphas; Signal`Resampling`anticausals = Function[Signal`Resampling`alpha, Reverse[Rest[FoldList[Signal`Resampling`alpha*#1 + #2 & , Signal`Resampling`c\/(1 - Signal`Resampling`alpha), Reverse[Signal`Resampling`source]]]]] \/@ Signal`Resampling`alphas; First[Signal`Resampling`betas]*Signal`Resampling`source + Rest[Signal`Resampling`betas] . (Signal`Resampling`causals + Signal`Resampling`anticausals)]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`Resampling`RecursiveResamplingPrefilter",
	"Region`Mesh`RediscretizeBoundarySegments":"ObjectType: Symbol\nUsage: Region`Mesh`RediscretizeBoundarySegments\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`RediscretizeBoundarySegments[(Region`Mesh`DiscretizeRegionDump`rspec_)?Region`Mesh`RegionSpecificationDataQ, Region`Mesh`DiscretizeRegionDump`segments_, Region`Mesh`DiscretizeRegionDump`optsin:OptionsPattern[]] := Region`Mesh`CatchRegionException[Module[{Region`Mesh`DiscretizeRegionDump`maxlen, Region`Mesh`DiscretizeRegionDump`mord = OptionValue[\"MeshOrder\"], Region`Mesh`DiscretizeRegionDump`X, Region`Mesh`DiscretizeRegionDump`segs, Region`Mesh`DiscretizeRegionDump`bbox, Region`Mesh`DiscretizeRegionDump`separate, Region`Mesh`DiscretizeRegionDump`bsegs, Region`Mesh`DiscretizeRegionDump`psegs, Region`Mesh`DiscretizeRegionDump`cfun, Region`Mesh`DiscretizeRegionDump`opts, Region`Mesh`DiscretizeRegionDump`tol, Region`Mesh`DiscretizeRegionDump`ag, Region`Mesh`DiscretizeRegionDump`pg, Region`Mesh`DiscretizeRegionDump`temp}, Region`Mesh`DiscretizeRegionDump`bbox = Region`Mesh`DiscretizeRegionDump`rspec[\"Bounds\"]; Region`Mesh`DiscretizeRegionDump`tol = Region`Mesh`Utilities`ProcessTolerance[Region`Mesh`DiscretizeRegionDump`bbox, Region`Mesh`DiscretizeRegionDump`optsin]; Region`Mesh`DiscretizeRegionDump`segs = Region`Mesh`DiscretizeRegionDump`segments; If[ !ListQ[Region`Mesh`DiscretizeRegionDump`segs], Region`Mesh`DiscretizeRegionDump`segs = {Region`Mesh`DiscretizeRegionDump`segs}]; Region`Mesh`DiscretizeRegionDump`segs = Flatten[Region`Mesh`DiscretizeRegionDump`RemoveDegenerateLines \/@ Region`Mesh`DiscretizeRegionDump`segs]; Region`Mesh`DiscretizeRegionDump`dPrint[4, Region`Mesh`DiscretizeRegionDump`segs]; Region`Mesh`DiscretizeRegionDump`temp = Region`Mesh`ToIncidents[Region`Mesh`DiscretizeRegionDump`segs, Region`Mesh`DiscretizeRegionDump`bbox, OptionValue[\"DuplicateCoordinateTolerance\"]]; If[ !MatchQ[Region`Mesh`DiscretizeRegionDump`temp, {_, _}], Region`Mesh`ThrowRegionException[$Failed]]; {Region`Mesh`DiscretizeRegionDump`X, Region`Mesh`DiscretizeRegionDump`segs} = Region`Mesh`DiscretizeRegionDump`temp; Region`Mesh`DiscretizeRegionDump`cfun = Region`Mesh`DiscretizeRegionDump`rspec[\"BoundaryFunction\"[\"IncludeBounds\" -> Automatic]]; Region`Mesh`DiscretizeRegionDump`temp = Region`Mesh`Utilities`ProcessMaxCellMeasure[Region`Mesh`DiscretizeRegionDump`bbox, Region`Mesh`DiscretizeRegionDump`optsin]; Region`Mesh`DiscretizeRegionDump`maxlen = Region`Mesh`DiscretizeRegionDump`temp[\"Length\"]; Region`Mesh`DiscretizeRegionDump`dPrint[4, \"SeparateBoundarySegments\"[Region`Mesh`DiscretizeRegionDump`segs]]; Region`Mesh`DiscretizeRegionDump`separate = Region`Mesh`SeparateBoundarySegments[Region`Mesh`DiscretizeRegionDump`segs]; If[ !ListQ[Region`Mesh`DiscretizeRegionDump`separate], Region`Mesh`ThrowRegionException[$Failed]]; Region`Mesh`DiscretizeRegionDump`bsegs = Region`Mesh`ToCoordinates[Region`Mesh`DiscretizeRegionDump`separate, Region`Mesh`DiscretizeRegionDump`X]; Region`Mesh`DiscretizeRegionDump`psegs = Region`Mesh`DiscretizeRegionDump`ParameterizeSegment \/@ Region`Mesh`DiscretizeRegionDump`bsegs; If[TrueQ[Positive[Region`Mesh`DiscretizeRegionDump`tol]], Region`Mesh`DiscretizeRegionDump`ag = -Log[10, Region`Mesh`DiscretizeRegionDump`tol]; Region`Mesh`DiscretizeRegionDump`pg = Infinity, Region`Mesh`DiscretizeRegionDump`ag = OptionValue[AccuracyGoal]; Region`Mesh`DiscretizeRegionDump`pg = OptionValue[PrecisionGoal]]; Region`Mesh`DiscretizeRegionDump`opts = {AccuracyGoal -> Region`Mesh`DiscretizeRegionDump`ag, PrecisionGoal -> Region`Mesh`DiscretizeRegionDump`pg, \"MaxLength\" -> Region`Mesh`DiscretizeRegionDump`maxlen, \"MeshOrder\" -> Region`Mesh`DiscretizeRegionDump`mord, \"BoundingBox\" -> Region`Mesh`DiscretizeRegionDump`bbox, \"RefineSegment\" -> TrueQ[Length[Region`Mesh`DiscretizeRegionDump`psegs] == 1 && OptionValue[\"RefineSegment\"]]}; ((Region`Mesh`DiscretizeRegionDump`dPrint[2, \"Region`Mesh`FirstOrSecondOrderDiscretizeSegment\"[#1, Region`Mesh`DiscretizeRegionDump`opts]]; Line[Region`Mesh`FirstOrSecondOrderDiscretizeSegment[#1, Region`Mesh`DiscretizeRegionDump`rspec, #1[\"Domain\"[1]], {}, Region`Mesh`DiscretizeRegionDump`opts]]) & ) \/@ Region`Mesh`DiscretizeRegionDump`psegs]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AccuracyGoal -> Automatic, PrecisionGoal -> Automatic, PerformanceGoal :> $PerformanceGoal, MaxCellMeasure -> Automatic, MeshOrder -> 1, DuplicateCoordinateTolerance -> Automatic, RefineSegment -> False}\nAttributes: {}\nFullName: Region`Mesh`RediscretizeBoundarySegments",
	"Reduce`RedRealV":"ObjectType: Symbol\nUsage: Reduce`RedRealV\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RedRealV",
	"Control`Misc`RedressNonEquilibrium":"ObjectType: Symbol\nUsage: Control`Misc`RedressNonEquilibrium\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`Misc`RedressNonEquilibrium",
	"FittedModels`ReduceBasisFunction":"ObjectType: Symbol\nUsage: FittedModels`ReduceBasisFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FittedModels`ReduceBasisFunction[FittedModels`FittedModelsCommonDump`basislist_, FittedModels`FittedModelsCommonDump`caller_] := Module[{FittedModels`FittedModelsCommonDump`reducedBasis, FittedModels`FittedModelsCommonDump`checks}, FittedModels`FittedModelsCommonDump`checks = Pick[Range[Length[FittedModels`FittedModelsCommonDump`basislist]], NumericQ \/@ FittedModels`FittedModelsCommonDump`basislist, True]; If[Length[FittedModels`FittedModelsCommonDump`checks] > 1, FittedModels`FittedModelsCommonDump`reducedBasis = Delete[FittedModels`FittedModelsCommonDump`basislist, Partition[Rest[FittedModels`FittedModelsCommonDump`checks], 1]], FittedModels`FittedModelsCommonDump`reducedBasis = FittedModels`FittedModelsCommonDump`basislist]; FittedModels`FittedModelsCommonDump`reducedBasis = DeleteDuplicates[FittedModels`FittedModelsCommonDump`reducedBasis]; If[Length[FittedModels`FittedModelsCommonDump`reducedBasis] =!= Length[FittedModels`FittedModelsCommonDump`basislist], Message[FittedModels`FittedModelsCommonDump`caller::dpbss, Length[FittedModels`FittedModelsCommonDump`basislist] - Length[FittedModels`FittedModelsCommonDump`reducedBasis], FittedModels`FittedModelsCommonDump`basislist]]; FittedModels`FittedModelsCommonDump`reducedBasis]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ReduceBasisFunction",
	"FittedModels`Reducedesign":"ObjectType: Symbol\nUsage: FittedModels`Reducedesign\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FittedModels`Reducedesign[FittedModels`FittedModelsCommonDump`mat_, FittedModels`FittedModelsCommonDump`basis_, FittedModels`FittedModelsCommonDump`matrank_, FittedModels`FittedModelsCommonDump`pos_] := Block[{FittedModels`FittedModelsCommonDump`newmat, FittedModels`FittedModelsCommonDump`len = Length[FittedModels`FittedModelsCommonDump`mat[[1]]], FittedModels`FittedModelsCommonDump`i = 1, FittedModels`FittedModelsCommonDump`oldmat, FittedModels`FittedModelsCommonDump`j = 0, FittedModels`FittedModelsCommonDump`oldrank, FittedModels`FittedModelsCommonDump`newrank, FittedModels`FittedModelsCommonDump`newbasis = FittedModels`FittedModelsCommonDump`basis}, FittedModels`FittedModelsCommonDump`newmat = Transpose[{FittedModels`FittedModelsCommonDump`mat[[All,1]]}]; FittedModels`FittedModelsCommonDump`newrank = MatrixRank[FittedModels`FittedModelsCommonDump`newmat]; If[FittedModels`FittedModelsCommonDump`newrank === 0, {Table[{}, {Length[FittedModels`FittedModelsCommonDump`mat]}], {}}, While[FittedModels`FittedModelsCommonDump`newrank < FittedModels`FittedModelsCommonDump`matrank && FittedModels`FittedModelsCommonDump`i < FittedModels`FittedModelsCommonDump`len, FittedModels`FittedModelsCommonDump`i++; FittedModels`FittedModelsCommonDump`oldrank = FittedModels`FittedModelsCommonDump`newrank; FittedModels`FittedModelsCommonDump`oldmat = FittedModels`FittedModelsCommonDump`newmat; FittedModels`FittedModelsCommonDump`newmat = Join[FittedModels`FittedModelsCommonDump`oldmat, FittedModels`FittedModelsCommonDump`mat[[All,{FittedModels`FittedModelsCommonDump`i}]], 2]; FittedModels`FittedModelsCommonDump`newrank = MatrixRank[FittedModels`FittedModelsCommonDump`newmat]; If[FittedModels`FittedModelsCommonDump`newrank <= FittedModels`FittedModelsCommonDump`oldrank, FittedModels`FittedModelsCommonDump`newbasis = Drop[FittedModels`FittedModelsCommonDump`newbasis, {FittedModels`FittedModelsCommonDump`i - FittedModels`FittedModelsCommonDump`j}]; FittedModels`FittedModelsCommonDump`j++; FittedModels`FittedModelsCommonDump`newmat = FittedModels`FittedModelsCommonDump`oldmat]]; FittedModels`FittedModelsCommonDump`newbasis = Take[FittedModels`FittedModelsCommonDump`newbasis, FittedModels`FittedModelsCommonDump`newrank]; {FittedModels`FittedModelsCommonDump`newmat, FittedModels`FittedModelsCommonDump`newbasis}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`Reducedesign",
	"NDSolve`ReduceIndex":"ObjectType: Symbol\nUsage: Reduces the index for a system of DAEs.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ReduceIndex[NDSolve`IndexReductionDump`alleqnsOriginal_, NDSolve`IndexReductionDump`allvars_, NDSolve`IndexReductionDump`t_, OptionsPattern[]] := Catch[Module[{NDSolve`IndexReductionDump`igoal, NDSolve`IndexReductionDump`method, NDSolve`IndexReductionDump`mopts, NDSolve`IndexReductionDump`eqns, NDSolve`IndexReductionDump`peqns, NDSolve`IndexReductionDump`prule, NDSolve`IndexReductionDump`invariantrules, NDSolve`IndexReductionDump`reqns, NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`vars, NDSolve`IndexReductionDump`rvars, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`dord, NDSolve`IndexReductionDump`events = {}, NDSolve`IndexReductionDump`invariants = {}, NDSolve`IndexReductionDump`sspec = {}, NDSolve`IndexReductionDump`svars = {}, NDSolve`IndexReductionDump`drules = {}, NDSolve`IndexReductionDump`ovpos, NDSolve`IndexReductionDump`vpos, NDSolve`IndexReductionDump`vorder, NDSolve`IndexReductionDump`orig, NDSolve`IndexReductionDump`new, NDSolve`IndexReductionDump`extra, NDSolve`IndexReductionDump`offset, NDSolve`IndexReductionDump`predecessor, NDSolve`IndexReductionDump`irMethod, NDSolve`IndexReductionDump`linQ, NDSolve`IndexReductionDump`ddlist, NDSolve`IndexReductionDump`irmOpt, NDSolve`IndexReductionDump`METHODCHANGED, NDSolve`IndexReductionDump`pdaeflag, NDSolve`IndexReductionDump`pdaerules, NDSolve`IndexReductionDump`allindepvars, NDSolve`IndexReductionDump`alleqns = NDSolve`IndexReductionDump`alleqnsOriginal}, If[ !Length[NDSolve`IndexReductionDump`alleqns] == Length[NDSolve`IndexReductionDump`allvars], Throw[$Failed]]; If[ !And @@ (Internal`LiteralPresentQ[NDSolve`IndexReductionDump`alleqns, #1] & ) \/@ NDSolve`IndexReductionDump`allvars, Throw[$Failed]]; NDSolve`IndexReductionDump`igoal = OptionValue[\"IndexGoal\"]; If[ !MatchQ[NDSolve`IndexReductionDump`igoal, 0 | 1 | Automatic], NDSolve`NDSolveMessage[NDSolve, NDSolve`IndexReductionDump`badindexgoal, NDSolve`IndexReductionDump`igoal]; Throw[$Failed]]; NDSolve`IndexReductionDump`method = OptionValue[\"ConstraintMethod\"]; If[ListQ[NDSolve`IndexReductionDump`method] && Length[NDSolve`IndexReductionDump`method] > 0, NDSolve`IndexReductionDump`mopts = Rest[NDSolve`IndexReductionDump`method]; NDSolve`IndexReductionDump`method = NDSolve`IndexReductionDump`method[[1]], NDSolve`IndexReductionDump`mopts = {}]; If[NDSolve`IndexReductionDump`method == Automatic, NDSolve`IndexReductionDump`method = If[NDSolve`IndexReductionDump`igoal === 0, \"Projection\", \"DummyDerivatives\"]]; If[NDSolve`IndexReductionDump`igoal == Automatic, NDSolve`IndexReductionDump`igoal = If[MatchQ[NDSolve`IndexReductionDump`method, \"Projection\"], 0, 1]]; If[ !MatchQ[NDSolve`IndexReductionDump`method, \"DummyDerivatives\" | \"Projection\" | _Symbol], NDSolve`NDSolveMessage[NDSolve, NDSolve`IndexReductionDump`badmethod, NDSolve`IndexReductionDump`method]; ]; NDSolve`IndexReductionDump`pdaeflag = NDSolve`IndexReductionDump`PDAEQ[NDSolve`IndexReductionDump`alleqns, NDSolve`IndexReductionDump`allvars, NDSolve`IndexReductionDump`t]; If[NDSolve`IndexReductionDump`pdaeflag, {NDSolve`IndexReductionDump`alleqns, NDSolve`IndexReductionDump`pdaerules, NDSolve`IndexReductionDump`allindepvars} = NDSolve`IndexReductionDump`ConvertPDAE[NDSolve`IndexReductionDump`alleqns, NDSolve`IndexReductionDump`allvars, NDSolve`IndexReductionDump`t]; NDSolve`IndexReductionDump`igoal = 0; NDSolve`IndexReductionDump`method = \"Projection\"; ]; NDSolve`IndexReductionDump`dPrint[1, \"ConstraintMethod\" -> NDSolve`IndexReductionDump`method, \", IndexGoal\" -> NDSolve`IndexReductionDump`igoal]; NDSolve`IndexReductionDump`dord = Flatten[Internal`ProcessEquations`DifferentialOrder[NDSolve`IndexReductionDump`alleqns, {NDSolve`IndexReductionDump`t}, NDSolve`IndexReductionDump`allvars]]; {NDSolve`IndexReductionDump`eqns, NDSolve`IndexReductionDump`vars, NDSolve`IndexReductionDump`peqns} = NDSolve`IndexReductionDump`EliminatePredecessorEquations[NDSolve`IndexReductionDump`alleqns, NDSolve`IndexReductionDump`allvars, NDSolve`IndexReductionDump`t, NDSolve`IndexReductionDump`dord]; NDSolve`IndexReductionDump`dPrint[2, \"Removed PrececessorEquations \", NDSolve`IndexReductionDump`peqns]; NDSolve`IndexReductionDump`dord = Flatten[Internal`ProcessEquations`DifferentialOrder[NDSolve`IndexReductionDump`eqns, {NDSolve`IndexReductionDump`t}, NDSolve`IndexReductionDump`vars]]; NDSolve`IndexReductionDump`vars = MapThread[Function[{NDSolve`IndexReductionDump`d, NDSolve`IndexReductionDump`v}, If[NDSolve`IndexReductionDump`d == 0, If[NDSolve`IndexReductionDump`igoal == 0, Derivative[1][NDSolve`IndexReductionDump`v][NDSolve`IndexReductionDump`t], NDSolve`IndexReductionDump`v[NDSolve`IndexReductionDump`t]], Derivative[NDSolve`IndexReductionDump`d][NDSolve`IndexReductionDump`v][NDSolve`IndexReductionDump`t]]], {NDSolve`IndexReductionDump`dord, NDSolve`IndexReductionDump`vars}]; NDSolve`IndexReductionDump`irmOpt = OptionValue[Method]; If[MatchQ[NDSolve`IndexReductionDump`irmOpt, Automatic | \"Automatic\"], NDSolve`IndexReductionDump`linQ = And @@ Join[VectorQ[Flatten[NDSolve`IndexReductionDump`alleqns], Internal`LinearQ[#1, Join[Through[NDSolve`IndexReductionDump`allvars[NDSolve`IndexReductionDump`t]], D[Through[NDSolve`IndexReductionDump`allvars[NDSolve`IndexReductionDump`t]], NDSolve`IndexReductionDump`t]]] & ], True]; NDSolve`IndexReductionDump`irMethod = If[NDSolve`IndexReductionDump`linQ && Length[NDSolve`IndexReductionDump`alleqns] <= NDSolve`IndexReductionDump`EQNSCUTOFF, \"StructuralMatrix\", \"Pantelides\"]; , NDSolve`IndexReductionDump`irMethod = OptionValue[Method]; ]; {{NDSolve`IndexReductionDump`reqns, NDSolve`IndexReductionDump`rvars}, NDSolve`IndexReductionDump`METHODCHANGED} = NDSolve`IndexReductionDump`EqnsIndexReduction[NDSolve`IndexReductionDump`peqns, {NDSolve`IndexReductionDump`alleqns, NDSolve`IndexReductionDump`allvars}, {NDSolve`IndexReductionDump`eqns, NDSolve`IndexReductionDump`vars}, NDSolve`IndexReductionDump`t, {NDSolve`IndexReductionDump`irMethod, NDSolve`IndexReductionDump`irmOpt}, NDSolve`IndexReductionDump`igoal]; If[NDSolve`IndexReductionDump`reqns === $Failed || NDSolve`IndexReductionDump`rvars === $Failed, Throw[$Failed]]; NDSolve`IndexReductionDump`dPrint[1, NDSolve`IndexReductionDump`irMethod[NDSolve`IndexReductionDump`eqns, NDSolve`IndexReductionDump`vars, NDSolve`IndexReductionDump`t] -> {NDSolve`IndexReductionDump`reqns, NDSolve`IndexReductionDump`rvars}]; Switch[NDSolve`IndexReductionDump`method, \"DummyDerivatives\", NDSolve`IndexReductionDump`ddlist = Catch[Quiet[NDSolve`IndexReductionDump`DummyDerivatives[NDSolve`IndexReductionDump`reqns, NDSolve`IndexReductionDump`rvars, NDSolve`IndexReductionDump`t, NDSolve`IndexReductionDump`mopts]]]; If[MatchQ[NDSolve`IndexReductionDump`ddlist, $Failed], If[MatchQ[NDSolve`IndexReductionDump`irmOpt, Automatic | \"Automatic\"] &&  !NDSolve`IndexReductionDump`METHODCHANGED, NDSolve`IndexReductionDump`irMethod = Switch[NDSolve`IndexReductionDump`irMethod, \"Pantelides\", \"StructuralMatrix\", \"StructuralMatrix\", \"Pantelides\"]; {{NDSolve`IndexReductionDump`reqns, NDSolve`IndexReductionDump`rvars}, NDSolve`IndexReductionDump`METHODCHANGED} = NDSolve`IndexReductionDump`EqnsIndexReduction[NDSolve`IndexReductionDump`peqns, {NDSolve`IndexReductionDump`alleqns, NDSolve`IndexReductionDump`allvars}, {NDSolve`IndexReductionDump`eqns, NDSolve`IndexReductionDump`vars}, NDSolve`IndexReductionDump`t, {NDSolve`IndexReductionDump`irMethod, NDSolve`IndexReductionDump`irMethod}, NDSolve`IndexReductionDump`igoal]; If[NDSolve`IndexReductionDump`reqns === $Failed || NDSolve`IndexReductionDump`rvars === $Failed, Throw[$Failed]]; NDSolve`IndexReductionDump`ddlist = Catch[Quiet[NDSolve`IndexReductionDump`DummyDerivatives[NDSolve`IndexReductionDump`reqns, NDSolve`IndexReductionDump`rvars, NDSolve`IndexReductionDump`t, NDSolve`IndexReductionDump`mopts]]]; If[MatchQ[NDSolve`IndexReductionDump`ddlist, $Failed], Throw[$Failed]]; {NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`drules, NDSolve`IndexReductionDump`events, NDSolve`IndexReductionDump`svars, NDSolve`IndexReductionDump`sspec} = NDSolve`IndexReductionDump`ddlist; , Throw[$Failed]]; , {NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`drules, NDSolve`IndexReductionDump`events, NDSolve`IndexReductionDump`svars, NDSolve`IndexReductionDump`sspec} = NDSolve`IndexReductionDump`ddlist; ], None, NDSolve`IndexReductionDump`deqns = NDSolve`IndexReductionDump`reqns[[All,-1]]; NDSolve`IndexReductionDump`dvars = NDSolve`IndexReductionDump`rvars, _, NDSolve`IndexReductionDump`deqns = NDSolve`IndexReductionDump`reqns[[All,-1]]; NDSolve`IndexReductionDump`dvars = NDSolve`IndexReductionDump`rvars; NDSolve`IndexReductionDump`invariantrules = If[Length[NDSolve`IndexReductionDump`peqns] == 0, {}, NDSolve`IndexReductionDump`prule[Derivative[1][NDSolve`IndexReductionDump`dv_][NDSolve`IndexReductionDump`t] == (NDSolve`IndexReductionDump`v_)[NDSolve`IndexReductionDump`t]] := {{NDSolve`IndexReductionDump`v[NDSolve`IndexReductionDump`t], NDSolve`IndexReductionDump`dv[NDSolve`IndexReductionDump`t]}, Derivative[NDSolve`IndexReductionDump`i_][NDSolve`IndexReductionDump`dv][NDSolve`IndexReductionDump`t] :> Derivative[NDSolve`IndexReductionDump`i - 1][NDSolve`IndexReductionDump`v][NDSolve`IndexReductionDump`t]}; Transpose[NDSolve`IndexReductionDump`prule \/@ NDSolve`IndexReductionDump`peqns][[2]]]; NDSolve`IndexReductionDump`invariants = Apply[Subtract, Flatten[Drop[NDSolve`IndexReductionDump`reqns, None, -1]], {1}] \/\/. NDSolve`IndexReductionDump`invariantrules; If[NDSolve`IndexReductionDump`pdaeflag, {NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`invariants} = NDSolve`IndexReductionDump`RecoverPDAE[{NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`invariants}, NDSolve`IndexReductionDump`pdaerules, NDSolve`IndexReductionDump`t]; NDSolve`IndexReductionDump`deqns[[1]] = NDSolve`IndexReductionDump`deqns[[1]] \/. (NDSolve`IndexReductionDump`lhs__) == (NDSolve`IndexReductionDump`rhs__) :> NDSolve`IndexReductionDump`lhs == NDSolve`IndexReductionDump`rhs + If[NDSolve`IndexReductionDump`t <= 0 || NDSolve`IndexReductionDump`t > 0, 0, Evaluate[Times @@ NDSolve`IndexReductionDump`allindepvars]]; NDSolve`IndexReductionDump`method = None; ]; ]; {NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`drules, NDSolve`IndexReductionDump`events} = NDSolve`IndexReductionDump`RestorePredecessorEquations[NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`drules, NDSolve`IndexReductionDump`events, NDSolve`IndexReductionDump`peqns, NDSolve`IndexReductionDump`svars, NDSolve`IndexReductionDump`t]; NDSolve`IndexReductionDump`dvars = NDSolve`IndexReductionDump`dvars \/. (NDSolve`IndexReductionDump`v_)[NDSolve`IndexReductionDump`t] :> NDSolve`IndexReductionDump`v; If[NDSolve`IndexReductionDump`method === \"DummyDerivatives\", MapIndexed[Function[{NDSolve`IndexReductionDump`v, NDSolve`IndexReductionDump`i}, NDSolve`IndexReductionDump`ovpos[NDSolve`IndexReductionDump`v] = Flatten[{NDSolve`IndexReductionDump`i, 0}]; NDSolve`IndexReductionDump`ovpos[Derivative[NDSolve`IndexReductionDump`o_][NDSolve`IndexReductionDump`v]] = Flatten[{NDSolve`IndexReductionDump`i, NDSolve`IndexReductionDump`o}]], NDSolve`IndexReductionDump`allvars]; NDSolve`IndexReductionDump`drules = Reverse[NDSolve`IndexReductionDump`drules, {2}]; NDSolve`IndexReductionDump`vpos = NDSolve`IndexReductionDump`varpos[NDSolve`IndexReductionDump`drules, NDSolve`IndexReductionDump`ovpos, NDSolve`IndexReductionDump`t] \/@ NDSolve`IndexReductionDump`dvars; NDSolve`IndexReductionDump`vorder = Ordering[NDSolve`IndexReductionDump`vpos]; NDSolve`IndexReductionDump`vpos = NDSolve`IndexReductionDump`vpos[[NDSolve`IndexReductionDump`vorder]]; NDSolve`IndexReductionDump`dvars = NDSolve`IndexReductionDump`dvars[[NDSolve`IndexReductionDump`vorder]]; NDSolve`IndexReductionDump`vpos = GatherBy[Cases[NDSolve`IndexReductionDump`vpos, _List], First]; NDSolve`IndexReductionDump`vpos = Length \/@ NDSolve`IndexReductionDump`vpos; {NDSolve`IndexReductionDump`orig, NDSolve`IndexReductionDump`new, NDSolve`IndexReductionDump`dord, NDSolve`IndexReductionDump`extra, NDSolve`IndexReductionDump`offset, NDSolve`IndexReductionDump`predecessor} = NDSolve`IndexReductionDump`SimpleReap[Module[{NDSolve`IndexReductionDump`i, NDSolve`IndexReductionDump`k = 1, NDSolve`IndexReductionDump`vi, NDSolve`IndexReductionDump`vl}, NDSolve`IndexReductionDump`k = 1; Do[NDSolve`IndexReductionDump`vi = NDSolve`IndexReductionDump`allvars[[NDSolve`IndexReductionDump`i]]; NDSolve`IndexReductionDump`vl = NDSolve`IndexReductionDump`vpos[[NDSolve`IndexReductionDump`i]]; If[NDSolve`IndexReductionDump`vl > 1 || NDSolve`IndexReductionDump`vi =!= NDSolve`IndexReductionDump`dvars[[NDSolve`IndexReductionDump`k]], Sow[NDSolve`IndexReductionDump`vi, 1]; Sow[Take[NDSolve`IndexReductionDump`dvars, {NDSolve`IndexReductionDump`k, NDSolve`IndexReductionDump`k + NDSolve`IndexReductionDump`vl - 1}], 2]; Sow[NDSolve`IndexReductionDump`vl, 4], Sow[NDSolve`IndexReductionDump`vl - 1, 4]]; Sow[NDSolve`IndexReductionDump`dvars[[NDSolve`IndexReductionDump`k + NDSolve`IndexReductionDump`vl - 1]], 3]; Sow[NDSolve`IndexReductionDump`k - NDSolve`IndexReductionDump`i, 5]; Sow[Take[NDSolve`IndexReductionDump`dvars, {NDSolve`IndexReductionDump`k, NDSolve`IndexReductionDump`k + NDSolve`IndexReductionDump`vl - 1}], 6]; NDSolve`IndexReductionDump`k += NDSolve`IndexReductionDump`vl, {NDSolve`IndexReductionDump`i, Length[NDSolve`IndexReductionDump`allvars]}]; Sow[NDSolve`IndexReductionDump`k - Length[NDSolve`IndexReductionDump`allvars] - 1, 5]; Do[Sow[NDSolve`IndexReductionDump`dvars[[NDSolve`IndexReductionDump`i]], 3]; Sow[0, 4]; Sow[NDSolve`IndexReductionDump`dvars[[{NDSolve`IndexReductionDump`i}]], 6], {NDSolve`IndexReductionDump`i, NDSolve`IndexReductionDump`k, Length[NDSolve`IndexReductionDump`dvars]}]; ], {1, 2, 3, 4, 5, 6}]; NDSolve`IndexReductionDump`dord = Internal`ProcessEquations`DifferentialOrder[NDSolve`IndexReductionDump`deqns, {NDSolve`IndexReductionDump`t}, NDSolve`IndexReductionDump`dord]; NDSolve`IndexReductionDump`dord = NDSolve`IndexReductionDump`dord + NDSolve`IndexReductionDump`extra; NDSolve`IndexReductionDump`predecessor = MapThread[If[#1 > 1, #2, Join[#2, Table[Derivative[NDSolve`IndexReductionDump`i][Last[#2]], {NDSolve`IndexReductionDump`i, 1, #1 - 1}]]] & , {Flatten[NDSolve`IndexReductionDump`dord], NDSolve`IndexReductionDump`predecessor}]; {NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`predecessor, NDSolve`IndexReductionDump`dord, NDSolve`IndexReductionDump`offset, {NDSolve`IndexReductionDump`orig, NDSolve`IndexReductionDump`new}, NDSolve`IndexReductionDump`events, NDSolve`IndexReductionDump`sspec}, {NDSolve`IndexReductionDump`deqns, NDSolve`IndexReductionDump`dvars, NDSolve`IndexReductionDump`invariants}]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IndexGoal -> Automatic, ConstraintMethod -> Automatic, Method -> Automatic}\nAttributes: {}\nFullName: NDSolve`ReduceIndex",
	"Reduce`ReduceInstance":"ObjectType: Symbol\nUsage: Reduce`ReduceInstance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ReduceInstance[System`InstanceDump`red_, System`InstanceDump`p_] := System`InstanceDump`RandomSampleI[Union[{ToRules[System`InstanceDump`red]}], System`InstanceDump`p]\nReduce`ReduceInstance[System`InstanceDump`sol_, System`InstanceDump`vars_, System`InstanceDump`dd_, System`InstanceDump`p_, System`InstanceDump`mode_] := Module[{System`InstanceDump`esol, System`InstanceDump`dds, System`InstanceDump`params, System`InstanceDump`tmp, System`InstanceDump`ans, System`InstanceDump`aa, System`InstanceDump`vs, System`InstanceDump`i, System`InstanceDump`opt, System`InstanceDump`rtf}, Internal`WithLocalSettings[System`InstanceDump`opt = \"SymbolicEqualityTest\" \/. (\"ArithmeticOptions\" \/. SystemOptions[]); SetSystemOptions[\"ArithmeticOptions\" -> {\"SymbolicEqualityTest\" -> False}], If[System`InstanceDump`sol === False, Return[{}]]; System`InstanceDump`dds = If[Head[System`InstanceDump`dd] === Integers, System`InstanceDump`dd[[1]], If[System`InstanceDump`dd === Complexes || System`InstanceDump`dd === Algebraics, System`InstanceDump`tmp = Select[System`InstanceDump`vars, TrueQ[Refine[Element[#1, Reals], Assumptions -> True]] & ]; Join[({#1 -> System`InstanceDump`dd} & ) \/@ System`InstanceDump`vars, ({#1 -> Reals} & ) \/@ System`InstanceDump`tmp], ({#1 -> System`InstanceDump`dd} & ) \/@ System`InstanceDump`vars]]; If[System`InstanceDump`sol === True, Return[System`InstanceDump`freepts[System`InstanceDump`vars, System`InstanceDump`dds, System`InstanceDump`p]]]; System`InstanceDump`params = Complement[Union[Cases[System`InstanceDump`sol, C[_Integer], Infinity]], System`InstanceDump`vars]; System`InstanceDump`vs = Join[System`InstanceDump`params, System`InstanceDump`vars]; System`InstanceDump`esol = Reduce`InequalityExpand[System`InstanceDump`sol, If[System`InstanceDump`mode == 1, \"ROUT\", \"INST\"]]; If[System`InstanceDump`esol === $Failed, Return[$Failed]]; Block[{System`InstanceDump`$RIFailed = False, System`InstanceDump`$RTFailed = False}, System`InstanceDump`ans = System`InstanceDump`redinst[System`InstanceDump`esol, System`InstanceDump`vs, System`InstanceDump`dds, System`InstanceDump`p, System`InstanceDump`mode, True]; System`InstanceDump`rtf = System`InstanceDump`$RTFailed; System`InstanceDump`tmp = System`InstanceDump`$RIFailed]; System`InstanceDump`aa = If[System`InstanceDump`ans === {}, {}, Union[System`InstanceDump`vars \/. System`InstanceDump`ans]]; If[System`InstanceDump`rtf && Length[System`InstanceDump`aa] < System`InstanceDump`p, Block[{System`InstanceDump`$RIFailed = False}, System`InstanceDump`ans = System`InstanceDump`redinst[System`InstanceDump`esol, System`InstanceDump`vs, System`InstanceDump`dds, System`InstanceDump`p, System`InstanceDump`mode, False]; System`InstanceDump`tmp = System`InstanceDump`$RIFailed]; System`InstanceDump`aa = If[System`InstanceDump`ans === {}, {}, Union[System`InstanceDump`vars \/. System`InstanceDump`ans]]]; If[System`InstanceDump`aa === {}, If[ !System`InstanceDump`tmp, Return[{}]]; If[System`InstanceDump`mode == 0, If[System`InstanceDump`p == 1 && System`InstanceDump`dd =!= Primes, System`InstanceDump`ans = Thread[System`InstanceDump`vars -> 0]; System`InstanceDump`i = 0; System`InstanceDump`tmp = If[Length[System`InstanceDump`vars] < 7, System`InstanceDump`ans, Dispatch[System`InstanceDump`ans]]; System`InstanceDump`tmp = TraceScan[System`InstanceDump`i++ & , System`InstanceDump`sol \/. System`InstanceDump`tmp, _DirectedInfinity]; If[System`InstanceDump`tmp === True && System`InstanceDump`i == 0, Return[{System`InstanceDump`ans}]]]; Return[$Failed]]]; If[Length[System`InstanceDump`aa] < System`InstanceDump`p && System`InstanceDump`mode == 0, Return[$Failed]]; If[Length[System`InstanceDump`aa] < System`InstanceDump`p && Length[System`InstanceDump`ans] >= System`InstanceDump`p && IntegerQ[System`InstanceDump`dds] && System`InstanceDump`params =!= {} && System`InstanceDump`dds^Length[System`InstanceDump`params] <= \"MaxModularPoints\" \/. Internal`ReduceOptions[], System`InstanceDump`tmp = Or @@ Union[System`InstanceDump`esol \/. (Thread[System`InstanceDump`params -> #1] & ) \/@ System`InstanceDump`CartesianPower[Range[0, System`InstanceDump`dds - 1], Length[System`InstanceDump`params]]]; Block[{System`InstanceDump`$RIFailed = False}, System`InstanceDump`ans = Union[System`InstanceDump`redinst[System`InstanceDump`tmp, System`InstanceDump`vars, System`InstanceDump`dds, System`InstanceDump`p, System`InstanceDump`mode, False]]; System`InstanceDump`tmp = System`InstanceDump`$RIFailed]; If[System`InstanceDump`ans =!= {}, System`InstanceDump`aa = Union[System`InstanceDump`vars \/. System`InstanceDump`ans]]]; If[Length[System`InstanceDump`aa] < System`InstanceDump`p && (System`InstanceDump`tmp || Length[Union[System`InstanceDump`ans]] >= System`InstanceDump`p), Block[{System`InstanceDump`$RIFailed = False}, System`InstanceDump`ans = System`InstanceDump`redinst[System`InstanceDump`esol, System`InstanceDump`vs, System`InstanceDump`dds, 5*System`InstanceDump`p, System`InstanceDump`mode, False]; System`InstanceDump`tmp = System`InstanceDump`$RIFailed]; If[System`InstanceDump`ans =!= {}, System`InstanceDump`aa = Union[System`InstanceDump`aa, Union[System`InstanceDump`vars \/. System`InstanceDump`ans]]]; If[Length[System`InstanceDump`aa] < System`InstanceDump`p && (System`InstanceDump`tmp || Length[System`InstanceDump`ans] >= 5*System`InstanceDump`p), If[System`InstanceDump`aa === {}, Return[$Failed]]; Return[$Failed[Evaluate[(Thread[System`InstanceDump`vars -> #1] & ) \/@ System`InstanceDump`aa]]]]]; System`InstanceDump`ans = System`InstanceDump`RandomSampleI[System`InstanceDump`aa, System`InstanceDump`p]; (Thread[System`InstanceDump`vars -> #1] & ) \/@ System`InstanceDump`ans, SetSystemOptions[\"ArithmeticOptions\" -> {\"SymbolicEqualityTest\" -> System`InstanceDump`opt}]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ReduceInstance",
	"Internal`ReduceOptions":"ObjectType: Symbol\nUsage: Internal`ReduceOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ReduceOptions",
	"Simplify`ReducePFQ":"ObjectType: Symbol\nUsage: Simplify`ReducePFQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`ReducePFQ[{System`HypergeometricDump`c1___, System`HypergeometricDump`b_, System`HypergeometricDump`c2___}, {System`HypergeometricDump`d1___, System`HypergeometricDump`a_, System`HypergeometricDump`d2___}, System`HypergeometricDump`arg_] := Module[{}, Sum[(System`HypergeometricDump`arg^System`HypergeometricDump`k*Binomial[System`HypergeometricDump`b - System`HypergeometricDump`a, System`HypergeometricDump`k]*System`HypergeometricDump`MultPochham[{System`HypergeometricDump`c1, System`HypergeometricDump`c2}, System`HypergeometricDump`k]*Simplify`ReducePFQ[{System`HypergeometricDump`c1, System`HypergeometricDump`c2} + System`HypergeometricDump`k, {System`HypergeometricDump`d1, System`HypergeometricDump`d2} + System`HypergeometricDump`k, System`HypergeometricDump`arg])\/System`HypergeometricDump`MultPochham[{System`HypergeometricDump`a, System`HypergeometricDump`d1, System`HypergeometricDump`d2}, System`HypergeometricDump`k], {System`HypergeometricDump`k, 0, Together[System`HypergeometricDump`b - System`HypergeometricDump`a]}]] \/; With[{System`HypergeometricDump`bma = Together[System`HypergeometricDump`b - System`HypergeometricDump`a]}, IntegerQ[System`HypergeometricDump`bma] && Inequality[10, GreaterEqual, System`HypergeometricDump`bma, Greater, 0] && System`HypergeometricDump`MultPochham[{System`HypergeometricDump`a, System`HypergeometricDump`d1, System`HypergeometricDump`d2}, System`HypergeometricDump`bma] =!= 0] && Internal`LiterallyAbsentQ[System`HypergeometricDump`arg, DirectedInfinity] &&  !(Assumptions`AIntegerQ[System`HypergeometricDump`b] && Assumptions`ANonPositive[System`HypergeometricDump`b]) &&  !(Assumptions`AIntegerQ[System`HypergeometricDump`a] && Assumptions`ANonPositive[System`HypergeometricDump`a]) &&  !(NumericQ[System`HypergeometricDump`arg] && TrueQ[System`HypergeometricDump`arg == 0])\nSimplify`ReducePFQ[System`HypergeometricDump`a_List, System`HypergeometricDump`b_List, System`HypergeometricDump`arg_] := HypergeometricPFQ[System`HypergeometricDump`a, System`HypergeometricDump`b, System`HypergeometricDump`arg]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`ReducePFQ",
	"Region`ReduceRegionIntegrate":"ObjectType: Symbol\nUsage: Region`ReduceRegionIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`ReduceRegionIntegrate[MeasureDump`f_, Element[MeasureDump`vv_, MeasureDump`reg_], MeasureDump`opts:OptionsPattern[]] := Module[{MeasureDump`ans, MeasureDump`ff = MeasureDump`f, MeasureDump`vars = MeasureDump`vv, MeasureDump`i, MeasureDump`n}, If[ !ListQ[MeasureDump`vv], MeasureDump`n = RegionEmbeddingDimension[MeasureDump`reg]; If[ !IntegerQ[MeasureDump`n], Return[$Failed]]; MeasureDump`vars = Table[Indexed[MeasureDump`vv, {MeasureDump`i}], {MeasureDump`i, MeasureDump`n}]; If[ !System`Private`ValidQ[MeasureDump`vars[[1]]], Return[$Failed]]; MeasureDump`ff = MeasureDump`f \/. MeasureDump`vv -> MeasureDump`vars]; Block[{MeasureDump`$InactiveIntegrals = True}, MeasureDump`ans = Region`RegionIntegrate[MeasureDump`ff, MeasureDump`vars, MeasureDump`reg, {MeasureDump`opts}]]; If[Head[MeasureDump`ans] === Region`RegionIntegrate, $Failed, MeasureDump`ans]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ReduceRegionIntegrate",
	"Reduce`ReduceToRules":"ObjectType: Symbol\nUsage: Reduce`ReduceToRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ReduceToRules[System`ReduceUtilsDump`e_] := With[{System`ReduceUtilsDump`ans = System`ReduceUtilsDump`rtorules[Reduce`InequalityExpand[System`ReduceUtilsDump`e, \"ROUT\"]]}, If[FreeQ[System`ReduceUtilsDump`ans, $Failed], System`ReduceUtilsDump`ans, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ReduceToRules",
	"Reduce`ReduceVar":"ObjectType: Symbol\nUsage: Reduce`ReduceVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ReduceVar",
	"Algebra`ReduciblePolynomialModListQ":"ObjectType: Symbol\nUsage: Algebra`ReduciblePolynomialModListQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`ReduciblePolynomialModListQ",
	"Compile`Utilities`Reference`Impl`ReferenceObject":"ObjectType: Symbol\nUsage: Compile`Utilities`Reference`Impl`ReferenceObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Compile`Utilities`Reference`Impl`ReferenceObject",
	"Compile`Utilities`Reference`Impl`ReferenceQ":"ObjectType: Symbol\nUsage: Compile`Utilities`Reference`Impl`ReferenceQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Compile`Utilities`Reference`Impl`ReferenceQ",
	"SurfaceGraphics`Methods`RefineBoundingBox":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`RefineBoundingBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`RefineBoundingBox",
	"Simplify`Private`RefineConstant":"ObjectType: Symbol\nUsage: Simplify`Private`RefineConstant\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`Private`RefineConstant[RefineDump`name_] \/; RefineDump`$RefineConstantUninitialized := (RefineDump`InitRefineConstant[]; Simplify`Private`RefineConstant[RefineDump`name])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`Private`RefineConstant",
	"Image`SegmentationDump`RefineCorners":"ObjectType: Symbol\nUsage: Image`SegmentationDump`RefineCorners\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SegmentationDump`RefineCorners",
	"Reduce`RefineHomotopySolutions":"ObjectType: Symbol\nUsage: Reduce`RefineHomotopySolutions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RefineHomotopySolutions[System`ReduceUtilsDump`polys_, System`ReduceUtilsDump`vars_, System`ReduceUtilsDump`sols_, System`ReduceUtilsDump`prec_] := Module[{System`ReduceUtilsDump`ans, System`ReduceUtilsDump`mp, System`ReduceUtilsDump`eps, System`ReduceUtilsDump`i, System`ReduceUtilsDump`sol, System`ReduceUtilsDump`solb, System`ReduceUtilsDump`solc, System`ReduceUtilsDump`solp, System`ReduceUtilsDump`norm, System`ReduceUtilsDump`normd}, System`ReduceUtilsDump`ans = System`ReduceUtilsDump`sols; System`ReduceUtilsDump`mp = MachinePrecision - 6.; System`ReduceUtilsDump`eps = 10^(-System`ReduceUtilsDump`mp); Do[System`ReduceUtilsDump`sol = System`ReduceUtilsDump`vars \/. System`ReduceUtilsDump`sols[[System`ReduceUtilsDump`i]]; System`ReduceUtilsDump`solb = SetPrecision[System`ReduceUtilsDump`sol, System`ReduceUtilsDump`mp]; System`ReduceUtilsDump`norm = Norm[System`ReduceUtilsDump`solb]; If[System`ReduceUtilsDump`norm == 0, System`ReduceUtilsDump`solp = Thread[System`ReduceUtilsDump`vars -> 0]; If[Norm[System`ReduceUtilsDump`polys \/. System`ReduceUtilsDump`solp] == 0, System`ReduceUtilsDump`ans[[System`ReduceUtilsDump`i]] = System`ReduceUtilsDump`solp], System`ReduceUtilsDump`solc = Chop[System`ReduceUtilsDump`sol, System`ReduceUtilsDump`eps*System`ReduceUtilsDump`norm]; System`ReduceUtilsDump`solp = FindRoot[System`ReduceUtilsDump`polys, Transpose[{System`ReduceUtilsDump`vars, System`ReduceUtilsDump`solc}], WorkingPrecision -> System`ReduceUtilsDump`prec]; If[ListQ[System`ReduceUtilsDump`solp], System`ReduceUtilsDump`normd = Norm[(System`ReduceUtilsDump`vars \/. System`ReduceUtilsDump`solp) - System`ReduceUtilsDump`solb]; If[System`ReduceUtilsDump`normd == 0 || Precision[System`ReduceUtilsDump`normd] < Internal`$EqualTolerance || System`ReduceUtilsDump`normd\/System`ReduceUtilsDump`norm < System`ReduceUtilsDump`eps, System`ReduceUtilsDump`ans[[System`ReduceUtilsDump`i]] = System`ReduceUtilsDump`solp, System`ReduceUtilsDump`solp = $Failed]]; If[ !ListQ[System`ReduceUtilsDump`solp] && System`ReduceUtilsDump`solc =!= System`ReduceUtilsDump`sol, System`ReduceUtilsDump`solp = FindRoot[System`ReduceUtilsDump`polys, Transpose[{System`ReduceUtilsDump`vars, System`ReduceUtilsDump`sol}], WorkingPrecision -> System`ReduceUtilsDump`prec]; If[ListQ[System`ReduceUtilsDump`solp], System`ReduceUtilsDump`normd = Norm[(System`ReduceUtilsDump`vars \/. System`ReduceUtilsDump`solp) - System`ReduceUtilsDump`solb]; If[System`ReduceUtilsDump`normd == 0 || System`ReduceUtilsDump`normd\/System`ReduceUtilsDump`norm < System`ReduceUtilsDump`eps, System`ReduceUtilsDump`ans[[System`ReduceUtilsDump`i]] = System`ReduceUtilsDump`solp]]]], {System`ReduceUtilsDump`i, Length[System`ReduceUtilsDump`sols]}]; System`ReduceUtilsDump`ans]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RefineHomotopySolutions",
	"RandomProcesses`Library`RefineInitialValues":"ObjectType: Symbol\nUsage: RandomProcesses`Library`RefineInitialValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`RefineInitialValues[RandomProcesses`Library`Dump`sproc_, RandomProcesses`Library`Dump`init_List] := RandomProcesses`Library`Dump`init\nRandomProcesses`Library`RefineInitialValues[RandomProcesses`Library`Dump`sproc_, RandomProcesses`Library`Dump`iproc_] := Statistics`Library`DestructureToList[RandomProcesses`Library`Dump`iproc]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`RefineInitialValues",
	"ComputationalGeometry`Dump`Refinement":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`Refinement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`Refinement",
	"ComputationalGeometry`Dump`RefinementControl":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`RefinementControl\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`RefinementControl",
	"Graphics`Region`RefinementRegion":"ObjectType: Symbol\nUsage: Graphics`Region`RefinementRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Region`RefinementRegion",
	"RandomProcesses`Library`RefineProcess":"ObjectType: Symbol\nUsage: RandomProcesses`Library`RefineProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`RefineProcess[RandomProcesses`Library`Dump`sproc_, RandomProcesses`Library`Dump`iproc_] := RandomProcesses`Library`Dump`sproc\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`RefineProcess",
	"Graphics`Mesh`RefineScheme":"ObjectType: Symbol\nUsage: Graphics`Mesh`RefineScheme\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`RefineScheme",
	"XML`RSS`RefreshRSS":"ObjectType: Symbol\nUsage: XML`RSS`RefreshRSS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: XML`RSS`RefreshRSS[System`Convert`RSSDump`nb_NotebookObject, System`Convert`RSSDump`link_String] := Module[{System`Convert`RSSDump`in}, System`Convert`RSSDump`in = FrontEnd`MessagesToConsole[Import[System`Convert`RSSDump`link, \"RSS\"]]; If[System`Convert`RSSDump`in =!= $Failed, NotebookPut[System`Convert`RSSDump`in, System`Convert`RSSDump`nb]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: XML`RSS`RefreshRSS",
	"StringPattern`Dump`RegExManyMonths":"ObjectType: Symbol\nUsage: StringPattern`Dump`RegExManyMonths\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StringPattern`Dump`RegExManyMonths[StringPattern`Dump`slist_] := With[{StringPattern`Dump`first = StringJoin[Union[(StringTake[#1, 1] & ) \/@ StringPattern`Dump`slist]]}, StringJoin[\"[\", StringPattern`Dump`first, \"]\", \"(?:\", Riffle[(StringJoin[\"(?<=\", StringTake[#1, 1], \")\", If[StringLength[#1] >= 3, StringJoin[StringTake[#1, {2, 3}], If[StringLength[#1] > 3, StringJoin[\"(?:\", StringTake[#1, {4, -1}], \")?\"], \"\"]], \"\"]] & ) \/@ StringPattern`Dump`slist, \"|\"], \")?\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StringPattern`Dump`RegExManyMonths",
	"Region`RegionAbbreviation":"ObjectType: Symbol\nUsage: Region`RegionAbbreviation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionAbbreviation",
	"Region`RegionCategory":"ObjectType: Symbol\nUsage: Region`RegionCategory\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionCategory",
	"Region`RegionContextMenu":"ObjectType: Symbol\nUsage: Region`RegionContextMenu\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionContextMenu",
	"Graphics`Region`RegionConvert":"ObjectType: Symbol\nUsage: Graphics`Region`RegionConvert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Region`RegionConvert[Graphics`Region`RegionDump`pregion_, 1, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; RegionQ[Graphics`Region`RegionDump`pregion] && RegionDimension[Graphics`Region`RegionDump`pregion] == 1 && RegionEmbeddingDimension[Graphics`Region`RegionDump`pregion] == 1 := Module[{Graphics`Region`RegionDump`bbox, Graphics`Region`RegionDump`tmr, Graphics`Region`RegionDump`mo, Graphics`Region`RegionDump`ppts, Graphics`Region`RegionDump`delta}, Graphics`Region`RegionDump`ppts = OptionValue[PlotPoints]; If[ !IntegerQ[Graphics`Region`RegionDump`ppts] || Graphics`Region`RegionDump`ppts == 0, Return[$Failed]]; Graphics`Region`RegionDump`bbox = RegionBounds[Graphics`Region`RegionDump`pregion]; Graphics`Region`RegionDump`delta = Infinity; If[IntegerQ[Graphics`Region`RegionDump`ppts] && Length[Graphics`Region`RegionDump`bbox] > 0 && Length[Graphics`Region`RegionDump`bbox[[1]]] == 2, Graphics`Region`RegionDump`bbox = Graphics`Region`RegionDump`bbox[[1]]; Graphics`Region`RegionDump`delta = (Graphics`Region`RegionDump`bbox[[2]] - Graphics`Region`RegionDump`bbox[[1]])\/Graphics`Region`RegionDump`ppts; ]; Graphics`Region`RegionDump`tmr = If[MeshRegionQ[Graphics`Region`RegionDump`pregion] || BoundaryMeshRegionQ[Graphics`Region`RegionDump`pregion], Quiet[TriangulateMesh[Graphics`Region`RegionDump`pregion, MaxCellMeasure -> {\"Length\" -> Graphics`Region`RegionDump`delta}]], Quiet[DiscretizeRegion[Graphics`Region`RegionDump`pregion, MaxCellMeasure -> {\"Length\" -> Graphics`Region`RegionDump`delta}]]]; If[ !MeshRegionQ[Graphics`Region`RegionDump`tmr], Return[$Failed]]; Graphics`Region`RegionDump`mo = Quiet[Graphics`Region`RegionDump`tmr[\"MakeRepresentation\"[\"MeshObject\"]]]; If[ !Graphics`Region`RegionDump`MeshObjectQ[Graphics`Region`RegionDump`mo], Return[$Failed]]; Graphics`Region`RegionDump`mo[\"SetDimension\"[2]]; Graphics`Region`RegionDump`mo]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`pregion_, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; NDSolve`FEM`ElementMeshQ[Graphics`Region`RegionDump`pregion] := Module[{Graphics`Region`RegionDump`mr}, Graphics`Region`RegionDump`mr = Quiet[MeshRegion[Graphics`Region`RegionDump`pregion][\"MakeLinear\"]]; If[MeshRegionQ[Graphics`Region`RegionDump`mr], Graphics`Region`RegionConvert[Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`dim, Graphics`Region`RegionDump`opts], Graphics`Region`RegionDump`pregion]]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`pregion_, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Graphics`Region`RegionDump`meshObjectQ[Graphics`Region`RegionDump`pregion] := MeshRegion[Graphics`Region`RegionDump`pregion]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`pregion_, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; MeshRegionQ[Graphics`Region`RegionDump`pregion] && Length[MeshCellCount[Graphics`Region`RegionDump`pregion]] >= 3 := Module[{Graphics`Region`RegionDump`bmr, Graphics`Region`RegionDump`mo, Graphics`Region`RegionDump`mr}, Graphics`Region`RegionDump`bmr = Quiet[BoundaryMesh[Graphics`Region`RegionDump`pregion]]; If[ !BoundaryMeshRegionQ[Graphics`Region`RegionDump`bmr], Return[EmptyRegion[3]]]; Graphics`Region`RegionDump`mo = Graphics`Region`RegionDump`bmr[\"MakeRepresentation\"[\"MeshObject\"]]; If[ !Graphics`Region`RegionDump`meshObjectQ[Graphics`Region`RegionDump`mo], Return[EmptyRegion[3]]]; Graphics`Region`RegionDump`mr = MeshRegion[Graphics`Region`RegionDump`mo[\"Coordinates\"], Polygon[Graphics`Region`RegionDump`mo[\"Faces\"]]]; If[ !MeshRegionQ[Graphics`Region`RegionDump`mr], Return[EmptyRegion[3]]]; Graphics`Region`RegionDump`mr]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`pregion_, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; MeshRegionQ[Graphics`Region`RegionDump`pregion] := Graphics`Region`RegionDump`pregion\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`reg_BoundaryMeshRegion, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; BoundaryMeshRegionQ[Graphics`Region`RegionDump`reg] := Module[{Graphics`Region`RegionDump`maxcellmeasure}, Graphics`Region`RegionDump`maxcellmeasure = OptionValue[MaxCellMeasure]; TriangulateMesh[Graphics`Region`RegionDump`reg, MaxCellMeasure -> Graphics`Region`RegionDump`maxcellmeasure]]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`reg_ImplicitRegion, 2, (Graphics`Region`RegionDump`opts___)?OptionQ] \/; RegionQ[Graphics`Region`RegionDump`reg] && RegionEmbeddingDimension[Graphics`Region`RegionDump`reg] == 2 := Graphics`Region`RegionDump`iSymbolicRegionConvert2[Graphics`Region`RegionDump`reg, Graphics`Region`RegionDump`opts]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`reg_, 2, (Graphics`Region`RegionDump`opts___)?OptionQ] \/; RegionQ[Graphics`Region`RegionDump`reg] && Graphics`Region`SymbolicRegionQ[Graphics`Region`RegionDump`reg] && RegionEmbeddingDimension[Graphics`Region`RegionDump`reg] == 2 := Graphics`Region`RegionDump`iSymbolicRegionConvert2[Graphics`Region`RegionDump`reg, Graphics`Region`RegionDump`opts]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`reg_, 3, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Graphics`Region`SymbolicRegionQ[Graphics`Region`RegionDump`reg] && RegionEmbeddingDimension[Graphics`Region`RegionDump`reg] == 3 := Module[{Graphics`Region`RegionDump`ppts, Graphics`Region`RegionDump`bbox, Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`volume, Graphics`Region`RegionDump`maxcellmeasure, Graphics`Region`RegionDump`method}, Graphics`Region`RegionDump`ppts = OptionValue[PlotPoints]; Graphics`Region`RegionDump`bbox = OptionValue[PlotRange]; Graphics`Region`RegionDump`method = OptionValue[Method]; If[ !MatrixQ[Graphics`Region`RegionDump`bbox], Graphics`Region`RegionDump`bbox = Graphics`Region`RegionDump`getBBoxFromRegion[Graphics`Region`RegionDump`reg]]; Graphics`Region`RegionDump`maxcellmeasure = Automatic; If[MatrixQ[Graphics`Region`RegionDump`bbox] && Length[Graphics`Region`RegionDump`ppts] == Length[Graphics`Region`RegionDump`bbox], Graphics`Region`RegionDump`volume = Times @@ ((Last[#1] - First[#1] & ) \/@ Graphics`Region`RegionDump`bbox\/Graphics`Region`RegionDump`ppts)\/2.; Graphics`Region`RegionDump`maxcellmeasure = {\"Volume\" -> Graphics`Region`RegionDump`volume}; ]; If[Graphics`Region`RegionDump`method == Automatic, Graphics`Region`RegionDump`mr = Graphics`Region`iBoundaryMesh[Graphics`Region`RegionDump`reg, Graphics`Region`RegionDump`bbox, Graphics`Region`RegionDump`opts]; If[BoundaryMeshRegionQ[Graphics`Region`RegionDump`mr], Return[Graphics`Region`RegionDump`mr]]; If[Length[Graphics`Region`RegionDump`mr] > 0 && Graphics`Region`RegionDump`meshObjectQ[Graphics`Region`RegionDump`mr[[1]]], Return[Graphics`Region`RegionDump`mr[[1]]]]]; Graphics`Region`RegionDump`mr = Quiet[DiscretizeRegion[Graphics`Region`RegionDump`reg, Graphics`Region`RegionDump`bbox, MaxCellMeasure -> Graphics`Region`RegionDump`maxcellmeasure]]; If[MeshRegionQ[Graphics`Region`RegionDump`mr], Return[Graphics`Region`RegionConvert[Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`dim]]]; Graphics`Region`RegionDump`reg]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`str_String, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] := With[{Graphics`Region`RegionDump`res = Catch[Graphics`Region`RegionDump`iRegionConvert[Graphics`Region`RegionDump`str, Graphics`Region`RegionDump`opts], Graphics`Region`RegionDump`MeshRegionError[___]]}, Graphics`Region`RegionDump`res \/; Head[Unevaluated[Graphics`Region`RegionDump`res]] =!= $Failed]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`ent_Entity, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] := Module[{Graphics`Region`RegionDump`polys}, Graphics`Region`RegionDump`polys = Quiet[EntityValue[Graphics`Region`RegionDump`ent, \"Polygon\"]]; If[Head[Graphics`Region`RegionDump`polys] === EntityValue, Return[EmptyRegion[2]]]; Graphics`Region`RegionDump`polys = Graphics`Region`RegionDump`removeGeoPositionPolygonCoordinates[Graphics`Region`RegionDump`polys]; Graphics`Region`RegionDump`mo = Graphics`Region`RegionDump`meshObject[Graphics`Region`RegionDump`polys]]\nGraphics`Region`RegionConvert[Graphics`Region`RegionDump`em_, Graphics`Region`RegionDump`dim_, Graphics`Region`RegionDump`opts:OptionsPattern[]] \/; Graphics`Region`RegionDump`elementMeshQ[Graphics`Region`RegionDump`em] := Module[{Graphics`Region`RegionDump`mr, Graphics`Region`RegionDump`mo}, Graphics`Region`RegionDump`mr = MeshRegion[Graphics`Region`RegionDump`em][\"MakeLinear\"]; Graphics`Region`RegionDump`mo = Graphics`Region`ToMeshObject[Graphics`Region`RegionDump`mr]; Graphics`Region`RegionDump`mo]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxCellMeasure -> Automatic, PlotRange -> Automatic, PlotPoints -> Automatic, Method -> Automatic}\nAttributes: {}\nFullName: Graphics`Region`RegionConvert",
	"Region`RegionCylindricalDecomposition":"ObjectType: Symbol\nUsage: Region`RegionCylindricalDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionCylindricalDecomposition",
	"Region`Mesh`Utilities`RegionDebugPrint":"ObjectType: Symbol\nUsage: Region`Mesh`Utilities`RegionDebugPrint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Region`Mesh`Utilities`RegionDebugPrint",
	"Region`Mesh`Utilities`RegionDebugUnquiet":"ObjectType: Symbol\nUsage: Region`Mesh`Utilities`RegionDebugUnquiet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Region`Mesh`Utilities`RegionDebugUnquiet",
	"Region`RegionElementConditions":"ObjectType: Symbol\nUsage: Region`RegionElementConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionElementConditions",
	"Optimization`Transformations`RegionElementToInequalities":"ObjectType: Symbol\nUsage: Optimization`Transformations`RegionElementToInequalities\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Optimization`Transformations`RegionElementToInequalities[Optimization`TransformFunctionsDump`data_Optimization`OptimizationProblem, Optimization`TransformFunctionsDump`constraint:Element[Optimization`TransformFunctionsDump`varsin_, Optimization`TransformFunctionsDump`regin_]] := Catch[Block[{Optimization`TransformFunctionsDump`d, Optimization`TransformFunctionsDump`rd, Optimization`TransformFunctionsDump`vars = Optimization`TransformFunctionsDump`varsin, Optimization`TransformFunctionsDump`vdims, Optimization`TransformFunctionsDump`temp, Optimization`TransformFunctionsDump`mesh, Optimization`TransformFunctionsDump`res = $Failed, Optimization`TransformFunctionsDump`reg = Optimization`TransformFunctionsDump`regin}, If[ !RegionQ[Optimization`TransformFunctionsDump`reg], If[NDSolve`FEM`ElementMeshQ[Optimization`TransformFunctionsDump`reg], Optimization`TransformFunctionsDump`reg = MeshRegion[Optimization`TransformFunctionsDump`reg]]; If[ !RegionQ[Optimization`TransformFunctionsDump`reg], Throw[$Failed, \"RegionElementToInequality\"]]; ]; Optimization`TransformFunctionsDump`d = RegionEmbeddingDimension[Optimization`TransformFunctionsDump`reg]; Optimization`TransformFunctionsDump`rd = RegionDimension[Optimization`TransformFunctionsDump`reg]; If[Optimization`TransformFunctionsDump`d =!= Optimization`TransformFunctionsDump`rd, Optimization`TransformFunctionsDump`data[\"Message\"[\"ctrfd\", Optimization`TransformFunctionsDump`constraint, Optimization`TransformFunctionsDump`rd, Optimization`TransformFunctionsDump`d]]; Throw[Failure[\"NotConvex\", Association[]], \"RegionElementToInequality\"]]; Optimization`TransformFunctionsDump`vdims = Optimization`TransformFunctionsDump`getDimensions[Optimization`TransformFunctionsDump`vars, Optimization`TransformFunctionsDump`data, True]; If[ !MatchQ[Optimization`TransformFunctionsDump`vdims, {Optimization`TransformFunctionsDump`d}], Throw[$Failed, \"RegionElementToInequality\"]]; If[(Optimization`TransformFunctionsDump`data[\"WorkingPrecision\"] === MachinePrecision || Precision[Optimization`TransformFunctionsDump`reg] === MachinePrecision) && TrueQ[Optimization`TransformFunctionsDump`convertToBoundaryMesh[Head[Optimization`TransformFunctionsDump`reg], Optimization`TransformFunctionsDump`d]], Optimization`TransformFunctionsDump`mesh = BoundaryDiscretizeGraphics[Optimization`TransformFunctionsDump`reg], Optimization`TransformFunctionsDump`mesh = Optimization`TransformFunctionsDump`reg]; If[MeshRegionQ[Optimization`TransformFunctionsDump`mesh] || BoundaryMeshRegionQ[Optimization`TransformFunctionsDump`mesh], Optimization`TransformFunctionsDump`temp = Optimization`TransformFunctionsDump`convexMeshToLinearInequality[Optimization`TransformFunctionsDump`mesh, Optimization`TransformFunctionsDump`vars]; Switch[Optimization`TransformFunctionsDump`temp, _VectorGreaterEqual, Optimization`TransformFunctionsDump`res = {Optimization`TransformFunctionsDump`temp}, Failure[\"NotConvex\", ___], Optimization`TransformFunctionsDump`data[\"Message\"[\"ctreg\", Optimization`TransformFunctionsDump`constraint]]; Optimization`TransformFunctionsDump`res = Optimization`TransformFunctionsDump`temp, _, Optimization`TransformFunctionsDump`res = $Failed; Optimization`TransformFunctionsDump`dPrint[2, \"Extraction of linear inequalities from mesh region failed\"]; ]; , Optimization`TransformFunctionsDump`res = Optimization`TransformFunctionsDump`specialRegionConstraint[Optimization`TransformFunctionsDump`reg, Optimization`TransformFunctionsDump`vars]; If[Optimization`TransformFunctionsDump`res === $Failed, If[ !ListQ[Optimization`TransformFunctionsDump`vars] || Length[Optimization`TransformFunctionsDump`vars] != Optimization`TransformFunctionsDump`d, Optimization`TransformFunctionsDump`vars = Flatten[Optimization`TransformFunctionsDump`vars \/. Thread[Optimization`TransformFunctionsDump`data[\"Variables\"] -> Optimization`TransformFunctionsDump`data[\"IndexedVariables\"]]]; ]; If[ListQ[Optimization`TransformFunctionsDump`vars] && Length[Optimization`TransformFunctionsDump`vars] == Optimization`TransformFunctionsDump`d, Optimization`TransformFunctionsDump`res = Optimization`TransformFunctionsDump`dUnquiet[1, TimeConstrained[Region`RegionProperty[Optimization`TransformFunctionsDump`reg, Optimization`TransformFunctionsDump`vars, \"ImplicitDescription\"], Optimization`TransformFunctionsDump`$RegionElementToInequalitiesTimeLimit, $Failed]]; If[MatchQ[Optimization`TransformFunctionsDump`res, _Region`RegionProperty], Optimization`TransformFunctionsDump`res = $Failed]; If[ !FreeQ[Optimization`TransformFunctionsDump`res, Or], Optimization`TransformFunctionsDump`data[\"Message\"[\"ctror\", Optimization`TransformFunctionsDump`constraint]]; Optimization`TransformFunctionsDump`res = Failure[\"NotConvex\", Association[]]; ]; ]; ]; ]; If[Optimization`TransformFunctionsDump`res === $Failed, Optimization`TransformFunctionsDump`data[\"Message\"[\"ctrinq\", Optimization`TransformFunctionsDump`constraint]]; ]; Optimization`TransformFunctionsDump`res], \"RegionElementToInequality\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`Transformations`RegionElementToInequalities",
	"Region`Mesh`RegionException":"ObjectType: Symbol\nUsage: Region`Mesh`RegionException\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`RegionException",
	"Image`RegionGrowingComponents":"ObjectType: Symbol\nUsage: Image`RegionGrowingComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RegionGrowingComponents[Image`SegmentationDump`s___] := Block[{Image`SegmentationDump`a, Image`SegmentationDump`res}, Image`SegmentationDump`a = System`Private`Arguments[Image`RegionGrowingComponents[Image`SegmentationDump`s], 3]; Image`SegmentationDump`res \/; Image`SegmentationDump`a =!= {} && (Image`SegmentationDump`res = Image`SegmentationDump`iRegionGrowingComponents @@ Image`SegmentationDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxIterations -> 1, Method -> MeanEuclidean}\nAttributes: {}\nFullName: Image`RegionGrowingComponents",
	"Region`RegionInformation":"ObjectType: Symbol\nUsage: Region`RegionInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RegionInformation[\"2DGraphicsOptions\"] = {}\nRegion`RegionInformation[\"3DGraphicsOptions\"] = {}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionInformation",
	"Region`RegionIntegrate":"ObjectType: Symbol\nUsage: Region`RegionIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RegionIntegrate[MeasureDump`f_, MeasureDump`vars_, (MeasureDump`reg_)?RegionQ, MeasureDump`opts_List] := Block[{MeasureDump`res}, MeasureDump`res = MeasureDump`iRegionIntegrate[MeasureDump`f, MeasureDump`vars, MeasureDump`reg, MeasureDump`opts]; MeasureDump`res \/; MeasureDump`res =!= $Failed]\nRegion`RegionIntegrate[MeasureDump`f_, MeasureDump`vars_, MeasureDump`reg:Except[_?RegionQ], MeasureDump`opts_List] := (If[ !Region`PossibleRegionQ[MeasureDump`reg], Message[Integrate::reg, MeasureDump`reg]]; $Failed)\nRegion`RegionIntegrate[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionIntegrate",
	"Region`RegionMakeBoxes":"ObjectType: Symbol\nUsage: Region`RegionMakeBoxes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RegionMakeBoxes[Region`RegionGraphicsBoxDump`reg_, Region`RegionGraphicsBoxDump`fmt_] \/; Refresh[BoxForm`UseTextFormattingQ, None] := ToString[Unevaluated[Region`RegionGraphicsBoxDump`reg], InputForm]\nRegion`RegionMakeBoxes[Region`RegionGraphicsBoxDump`reg_, Region`RegionGraphicsBoxDump`fmt_] := Block[{Region`RegionGraphicsBoxDump`res, Region`RegionGraphicsBoxDump`graphics}, Region`RegionGraphicsBoxDump`graphics = Region`RegionToGraphics[Region`RegionGraphicsBoxDump`reg]; If[Region`RegionGraphicsBoxDump`graphicsDisplayFunctionQ[Region`RegionGraphicsBoxDump`graphics], Region`RegionGraphicsBoxDump`graphics = Show[Region`RegionGraphicsBoxDump`graphics]]; Region`RegionGraphicsBoxDump`res = Region`RegionGraphicsBoxDump`makeBoxes[Region`RegionGraphicsBoxDump`graphics, Region`RegionGraphicsBoxDump`reg, Region`RegionGraphicsBoxDump`fmt]; Region`RegionGraphicsBoxDump`res \/; Region`RegionGraphicsBoxDump`res =!= $Failed]\nRegion`RegionMakeBoxes[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionMakeBoxes",
	"Graphics`Mesh`RegionMemberQ":"ObjectType: Symbol\nUsage: Graphics`Mesh`RegionMemberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`RegionMemberQ",
	"Region`RegionNIntegrate":"ObjectType: Symbol\nUsage: Region`RegionNIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RegionNIntegrate[MeasureDump`f_, MeasureDump`vars_, MeasureDump`reg_] := Module[{MeasureDump`X, MeasureDump`vs, MeasureDump`rr, MeasureDump`fx, MeasureDump`vx, MeasureDump`n, MeasureDump`ans}, MeasureDump`n = Quiet[Region`RegionProperty[MeasureDump`reg, \"SpaceDimension\"]]; If[ !IntegerQ[MeasureDump`n], If[ !Region`PossibleRegionQ[MeasureDump`reg], Message[NIntegrate::reg, MeasureDump`reg]]; Return[$Failed]]; MeasureDump`vs = If[ListQ[MeasureDump`vars], MeasureDump`vars, {MeasureDump`vars}]; If[Length[MeasureDump`vs] != MeasureDump`n, If[Length[MeasureDump`vs] != 1, Message[MeasureDump`RegionElement::dim, MeasureDump`vars, MeasureDump`n]; Return[$Failed]]; MeasureDump`vs = (Indexed[MeasureDump`vs[[1]], #1] & ) \/@ Range[MeasureDump`n]; MeasureDump`vx = MeasureDump`X \/@ Range[MeasureDump`n]; MeasureDump`rr = Append[Thread[MeasureDump`vs -> MeasureDump`vx], MeasureDump`vs[[1,1]] -> MeasureDump`vx], MeasureDump`vx = MeasureDump`X \/@ Range[MeasureDump`n]; MeasureDump`rr = Thread[MeasureDump`vs -> MeasureDump`vx]]; MeasureDump`fx = MeasureDump`f \/. MeasureDump`rr; MeasureDump`ans = Catch[MeasureDump`regintL[MeasureDump`fx, MeasureDump`vx, MeasureDump`reg, NIntegrate]]; If[ListQ[MeasureDump`ans], MeasureDump`ans = (MeasureDump`toorigvars[#1, MeasureDump`vs] & ) \/@ MeasureDump`ans]; MeasureDump`ans]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionNIntegrate",
	"Region`RegionNormal":"ObjectType: Symbol\nUsage: Region`RegionNormal\nDocumentation: None\nOwnValues: None\nUpValues: Region`RegionNormal \/: System`Private`InternalNormal[Region`RegionNormalDump`p_Polygon, Region`RegionNormal] := Block[{Region`RegionNormalDump`res}, Region`RegionNormalDump`res = Region`RegionNormalDump`iNormalPolygon[Region`RegionNormalDump`p]; Region`RegionNormalDump`res \/; Region`RegionNormalDump`res =!= $Failed]\nRegion`RegionNormal \/: System`Private`InternalNormal[Region`RegionNormalDump`p_Polyhedron, Region`RegionNormal] := Block[{Region`RegionNormalDump`res}, Region`RegionNormalDump`res = Region`RegionNormalDump`iNormalPolyhedron[Region`RegionNormalDump`p]; Region`RegionNormalDump`res \/; Region`RegionNormalDump`res =!= $Failed]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionNormal",
	"Internal`RegionOptions":"ObjectType: Symbol\nUsage: Internal`RegionOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RegionOptions",
	"Region`RegionPerformance":"ObjectType: Symbol\nUsage: Region`RegionPerformance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RegionPerformance[Region`RegionPerformanceDump`expr__] := Block[{Region`RegionPerformanceDump`res}, Region`RegionPerformanceDump`res = Region`RegionPerformanceDump`regionPerformance[Region`RegionPerformanceDump`expr]; Region`RegionPerformanceDump`res \/; Region`RegionPerformanceDump`res =!= $Failed]\nRegion`RegionPerformance[Region`RegionPerformanceDump`expr___] := (Region`RegionPerformanceDump`messageRegionPerformance[Region`RegionPerformanceDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionPerformance",
	"Visualization`Core`RegionPlot":"ObjectType: Symbol\nUsage: Visualization`Core`RegionPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> 1, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, FormatType :> TraditionalForm, Frame -> True, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> {#1 & , #2 & }, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> Full, PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, TextureCoordinateFunction -> Automatic, TextureCoordinateScaling -> Automatic, Ticks -> Automatic, TicksStyle -> {}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`RegionPlot",
	"Visualization`Core`RegionPlot3D":"ObjectType: Symbol\nUsage: Visualization`Core`RegionPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> GrayLevel[0], Boxed -> True, BoxRatios -> {1, 1, 1}, BoxStyle -> {}, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, FaceGrids -> None, FaceGridsStyle -> {}, FormatType :> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxRecursion -> Automatic, Mesh -> Automatic, MeshFunctions -> {#1 & , #2 & , #3 & }, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotPoints -> Automatic, PlotRange -> Full, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotationAction -> Fit, SphericalRegion -> Automatic, TextureCoordinateFunction -> Automatic, TextureCoordinateScaling -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`RegionPlot3D",
	"NDSolve`FEM`RegionPlotBoundaryMeshGenerator":"ObjectType: Symbol\nUsage: NDSolve`FEM`RegionPlotBoundaryMeshGenerator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`RegionPlotBoundaryMeshGenerator[NDSolve`FEM`ElementMeshDump`region_, NDSolve`FEM`ElementMeshDump`optsIn:OptionsPattern[]] := Module[{NDSolve`FEM`ElementMeshDump`dim, NDSolve`FEM`ElementMeshDump`bbox, NDSolve`FEM`ElementMeshDump`pred, NDSolve`FEM`ElementMeshDump`vars, NDSolve`FEM`ElementMeshDump`args, NDSolve`FEM`ElementMeshDump`fun, NDSolve`FEM`ElementMeshDump`generalOpts, NDSolve`FEM`ElementMeshDump`moreopts, NDSolve`FEM`ElementMeshDump`meshobject, NDSolve`FEM`ElementMeshDump`msghead, NDSolve`FEM`ElementMeshDump`polygonReductionQ, NDSolve`FEM`ElementMeshDump`specialRegionTreatQ, NDSolve`FEM`ElementMeshDump`findCornersQ, NDSolve`FEM`ElementMeshDump`plotPoints, NDSolve`FEM`ElementMeshDump`cornerPoints, NDSolve`FEM`ElementMeshDump`pltPts, NDSolve`FEM`ElementMeshDump`pr, NDSolve`FEM`ElementMeshDump`opts, NDSolve`FEM`ElementMeshDump`rationalizedRegion, NDSolve`FEM`ElementMeshDump`bm, NDSolve`FEM`ElementMeshDump`symbolicRegionType, NDSolve`FEM`ElementMeshDump`bndrQ, NDSolve`FEM`ElementMeshDump`boundsPad}, NDSolve`FEM`ElementMeshDump`dbprint[1, \"RegionPlotBoundaryMeshGenerator\"]; NDSolve`FEM`ElementMeshDump`dbprint[3, MemoryInUse[]]; NDSolve`FEM`ElementMeshDump`msghead = OptionValue[\"MessageHead\"]; If[NDSolve`FEM`ElementMeshDump`msghead === Automatic, NDSolve`FEM`ElementMeshDump`msghead = NDSolve`FEM`ToBoundaryMesh; ]; NDSolve`FEM`ElementMeshDump`opts = Sequence @@ Flatten[{\"MessageHead\" -> NDSolve`FEM`ElementMeshDump`msghead, NDSolve`FEM`ElementMeshDump`optsIn}]; NDSolve`FEM`ElementMeshDump`dim = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"EmbeddingDimension\"]; NDSolve`FEM`ElementMeshDump`bm = EmptyRegion[NDSolve`FEM`ElementMeshDump`dim]; NDSolve`FEM`ElementMeshDump`bbox = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"Bounds\"]; NDSolve`FEM`FailIf[ !NDSolve`FEM`ElementMeshDump`validBoundingBoxQ[NDSolve`FEM`ElementMeshDump`bbox], NDSolve`FEM`ElementMeshDump`msghead, \"femtbmnbb\", NDSolve`FEM`ElementMeshDump`region]; If[NDSolve`FEM`ElementMeshDump`dim == 1 || NDSolve`FEM`ElementMeshDump`nonlinearRegionQ[NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"SymbolicRegion\"]], NDSolve`FEM`ElementMeshDump`opts = FilterRules[{NDSolve`FEM`ElementMeshDump`opts}, Options[NDSolve`FEM`ToElementMesh]]; NDSolve`FEM`ElementMeshDump`bm = NDSolve`FEM`ElementMeshDump`RegionPlotBoundaryMeshGeneratorSpecialRegions[NDSolve`FEM`ElementMeshDump`region, NDSolve`FEM`ElementMeshDump`opts]; Return[NDSolve`FEM`ElementMeshDump`bm, Module]; ]; NDSolve`FEM`ElementMeshDump`bndrQ = OptionValue[\"BoundPadding\"]; NDSolve`FEM`ElementMeshDump`boundsPad = NDSolve`FEM`ElementMeshDump`$defaultBoundsPad; If[NumericQ[NDSolve`FEM`ElementMeshDump`bndrQ], NDSolve`FEM`ElementMeshDump`boundsPad = NDSolve`FEM`ElementMeshDump`bndrQ; NDSolve`FEM`ElementMeshDump`bndrQ = True; ]; If[NDSolve`FEM`ElementMeshDump`dim === 2, If[ !TrueQ[NDSolve`FEM`ElementMeshDump`bndrQ], NDSolve`FEM`ElementMeshDump`bndrQ = False]; , Switch[NDSolve`FEM`ElementMeshDump`bndrQ, Automatic | True, NDSolve`FEM`ElementMeshDump`bndrQ = True, _, NDSolve`FEM`ElementMeshDump`bndrQ = False]]; If[NDSolve`FEM`ElementMeshDump`bndrQ, TimeConstrained[NDSolve`FEM`ElementMeshDump`bndrQ = Quiet[BoundedRegionQ[NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"SymbolicRegion\"]]]; If[TrueQ[NDSolve`FEM`ElementMeshDump`bndrQ], NDSolve`FEM`ElementMeshDump`bbox += Sign[NDSolve`FEM`ElementMeshDump`bbox]*Abs[Apply[Subtract, NDSolve`FEM`ElementMeshDump`bbox, {1}]]*NDSolve`FEM`ElementMeshDump`boundsPad]; , NDSolve`FEM`ElementMeshDump`defaultSymbolicProcessingTime[], $Failed]; ]; NDSolve`FEM`ElementMeshDump`plotPoints = OptionValue[\"SamplePoints\"]; If[NDSolve`FEM`ElementMeshDump`dim === 2 || NDSolve`FEM`ElementMeshDump`dim === 3, Switch[NDSolve`FEM`ElementMeshDump`plotPoints, _?(IntegerQ && NDSolve`FEM`ElementMeshDump`plotPoints > 2), NDSolve`FEM`ElementMeshDump`pltPts = NDSolve`FEM`ElementMeshDump`plotPoints, _?(MatchQ[#1, {_Integer, _Integer}] && Min[#1] > 2 & ), NDSolve`FEM`ElementMeshDump`pltPts = NDSolve`FEM`ElementMeshDump`plotPoints, _?(MatchQ[#1, {_Integer, _Integer, _Integer}] && Min[#1] > 2 & ), NDSolve`FEM`ElementMeshDump`pltPts = NDSolve`FEM`ElementMeshDump`plotPoints, _, NDSolve`FEM`ElementMeshDump`pltPts = Automatic]; ]; NDSolve`FEM`ElementMeshDump`findCornersQ = OptionValue[\"FindCorners\"]; Switch[NDSolve`FEM`ElementMeshDump`findCornersQ, True | Automatic, NDSolve`FEM`ElementMeshDump`findCornersQ = True; NDSolve`FEM`ElementMeshDump`cornerPoints = Sequence[]; , _?(MatrixQ[#1, NumericQ] && MatchQ[Last[Dimensions[#1]], 2 | 3] & ), NDSolve`FEM`ElementMeshDump`cornerPoints = NDSolve`FEM`ElementMeshDump`pack[N[NDSolve`FEM`ElementMeshDump`findCornersQ]]; NDSolve`FEM`ElementMeshDump`findCornersQ = Automatic; , _, NDSolve`FEM`ElementMeshDump`findCornersQ = False; NDSolve`FEM`ElementMeshDump`cornerPoints = Sequence[]; ]; If[NDSolve`FEM`ElementMeshDump`dim === 2, If[TrueQ[NDSolve`FEM`ElementMeshDump`findCornersQ], NDSolve`FEM`ElementMeshDump`rationalizedRegion = Rationalize[NDSolve`FEM`ElementMeshDump`region]; If[Precision[NDSolve`FEM`ElementMeshDump`rationalizedRegion] === Infinity, NDSolve`FEM`ElementMeshDump`cornerPoints = NDSolve`FEM`ElementMeshDump`FindCorners[NDSolve`FEM`ElementMeshDump`rationalizedRegion]; NDSolve`FEM`ElementMeshDump`cornerPoints = NDSolve`FEM`ElementMeshDump`pack[N[NDSolve`FEM`ElementMeshDump`cornerPoints]]; ]; ]; ]; NDSolve`FEM`ElementMeshDump`generalOpts = {\"BoundaryOffset\" -> False, \"Refinement\" -> {\"Divisions\" -> 100, \"VertexTolerance\" -> 1.*^-12}, \"ReturnMeshObject\" -> True}; If[NDSolve`FEM`ElementMeshDump`dim === 2, NDSolve`FEM`ElementMeshDump`fun = Visualization`Core`RegionPlot; NDSolve`FEM`ElementMeshDump`moreopts = {PlotPoints -> {NDSolve`FEM`ElementMeshDump`pltPts, NDSolve`FEM`ElementMeshDump`cornerPoints}}; ]; If[NDSolve`FEM`ElementMeshDump`dim === 3, NDSolve`FEM`ElementMeshDump`fun = Visualization`Core`RegionPlot3D; NDSolve`FEM`ElementMeshDump`pr = OptionValue[\"PolygonReduction\"]; NDSolve`FEM`ElementMeshDump`symbolicRegionType = Head[NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"SymbolicRegion\"]]; NDSolve`FEM`ElementMeshDump`specialRegionTreatQ = NDSolve`FEM`ElementMeshDump`specialCaseRegion3D[NDSolve`FEM`ElementMeshDump`symbolicRegionType] && NDSolve`FEM`ElementMeshDump`pr =!= False; NDSolve`FEM`ElementMeshDump`polygonReductionQ = NDSolve`FEM`ElementMeshDump`pr === True || (NumericQ[NDSolve`FEM`ElementMeshDump`pr] && (Inequality[0, Less, NDSolve`FEM`ElementMeshDump`pr, LessEqual, 1] || NDSolve`FEM`ElementMeshDump`pr >= 2)); If[NDSolve`FEM`ElementMeshDump`polygonReductionQ || NDSolve`FEM`ElementMeshDump`specialRegionTreatQ, NDSolve`FEM`ElementMeshDump`moreopts = {\"Closed3DRegion\" -> True, Sequence @@ NDSolve`FEM`ElementMeshDump`specialRegionPolygonReductionOpts[NDSolve`FEM`ElementMeshDump`symbolicRegionType, NDSolve`FEM`ElementMeshDump`pr, NDSolve`FEM`ElementMeshDump`pltPts], Mesh -> All, NormalsFunction -> None}; , NDSolve`FEM`ElementMeshDump`generalOpts = {}; NDSolve`FEM`ElementMeshDump`moreopts = {Method -> {\"ReturnMeshObject\" -> True}, \"PolygonTriangulate\" -> True, PlotPoints -> NDSolve`FEM`ElementMeshDump`pltPts, Mesh -> All, NormalsFunction -> None}; ]; ]; NDSolve`FEM`ElementMeshDump`pred = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"Predicates\"]; NDSolve`FEM`ElementMeshDump`vars = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"PredicateVariables\"]; NDSolve`FEM`ElementMeshDump`args = Join[{NDSolve`FEM`ElementMeshDump`pred}, MapThread[Prepend, {NDSolve`FEM`ElementMeshDump`bbox, NDSolve`FEM`ElementMeshDump`vars}], NDSolve`FEM`ElementMeshDump`generalOpts, NDSolve`FEM`ElementMeshDump`moreopts, FilterRules[{NDSolve`FEM`ElementMeshDump`optsIn}, Options[NDSolve`FEM`ElementMeshDump`fun]]]; NDSolve`FEM`ElementMeshDump`dbprint[4, \"RPBMG:\", NDSolve`FEM`ElementMeshDump`fun]; NDSolve`FEM`ElementMeshDump`dbprint[4, \"RPBMG:\", NDSolve`FEM`ElementMeshDump`args]; NDSolve`FEM`ElementMeshDump`meshobject = NDSolve`FEM`ElementMeshDump`fun @@ NDSolve`FEM`ElementMeshDump`args; If[NDSolve`FEM`ElementMeshDump`meshobjectQ[NDSolve`FEM`ElementMeshDump`meshobject] && Length[NDSolve`FEM`ElementMeshDump`meshobject[\"MeshElements\"]] > 0, NDSolve`FEM`ElementMeshDump`bm = NDSolve`FEM`ElementMeshDump`iMeshObjectToInitialBoundaryMesh[NDSolve`FEM`ElementMeshDump`meshobject, NDSolve`FEM`ElementMeshDump`region, NDSolve`FEM`ElementMeshDump`msghead, Sequence @@ FilterRules[{NDSolve`FEM`ElementMeshDump`opts, \"PredicateVariables\" -> NDSolve`FEM`ElementMeshDump`vars, \"Predicates\" -> NDSolve`FEM`ElementMeshDump`PredicateConverter[{NDSolve`FEM`ElementMeshDump`pred}]}, Join[Options[NDSolve`FEM`ToBoundaryMesh], Options[NDSolve`FEM`ElementMeshDump`SimplifyBoundary]]]]; ]; NDSolve`FEM`ElementMeshDump`bm = NDSolve`FEM`ElementMeshDump`RegionPlotBoundaryMeshGeneratorPostProcess[NDSolve`FEM`ElementMeshDump`region, NDSolve`FEM`ElementMeshDump`bm, NDSolve`FEM`ElementMeshDump`opts]; NDSolve`FEM`ElementMeshDump`dbprint[2, \"\\tRegionPlotBoundaryMeshGenerator\"]; NDSolve`FEM`ElementMeshDump`bm]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {BoundPadding -> Automatic, FindCorners -> Automatic, ImproveBoundaryPosition -> Automatic, MaxCellLength -> Automatic, MeshElementType -> Automatic, MeshOrder -> Automatic, MessageHead -> Automatic, PolygonReduction -> Automatic, SamplePoints -> Automatic, AccuracyGoal -> Automatic, MaxRecursion -> Automatic, PrecisionGoal -> Automatic, PerformanceGoal :> $PerformanceGoal}\nAttributes: {}\nFullName: NDSolve`FEM`RegionPlotBoundaryMeshGenerator",
	"Region`RegionProperty":"ObjectType: Symbol\nUsage: Region`RegionProperty\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionProperty",
	"Region`RegionRelationConditions":"ObjectType: Symbol\nUsage: Region`RegionRelationConditions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionRelationConditions",
	"Region`Mesh`RegionSpecificationData":"ObjectType: Symbol\nUsage: Region`Mesh`RegionSpecificationData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {BoundsPadding -> Automatic, MessageHead -> None, RegionDimensionTimeLimit -> 1.}\nAttributes: {}\nFullName: Region`Mesh`RegionSpecificationData",
	"Region`Mesh`RegionSpecificationDataQ":"ObjectType: Symbol\nUsage: Region`Mesh`RegionSpecificationDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`RegionSpecificationDataQ",
	"Region`RegionToGraphics":"ObjectType: Symbol\nUsage: Region`RegionToGraphics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`RegionToGraphics[Region`RegionToGraphicsDump`expr:Region[Region`RegionToGraphicsDump`reg_, Region`RegionToGraphicsDump`opts___]] \/; ConstantRegionQ[Region`RegionToGraphicsDump`expr] && RegionEmbeddingDimension[Region`RegionToGraphicsDump`reg] < 4 := Block[{Region`RegionToGraphicsDump`res}, Region`RegionToGraphicsDump`res = Region`RegionToGraphicsDump`regionToGraphics[Region`RegionToGraphicsDump`reg, Region`RegionToGraphicsDump`iFilterOptions[Region`RegionToGraphicsDump`opts]]; Region`RegionToGraphicsDump`iApplyWrapper[Region`RegionToGraphicsDump`res, Region`RegionToGraphicsDump`opts] \/; Region`RegionToGraphicsDump`res =!= $Failed]\nRegion`RegionToGraphics[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionToGraphics",
	"Region`RegionType":"ObjectType: Symbol\nUsage: Region`RegionType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionType",
	"Region`Private`RegionVar":"ObjectType: Symbol\nUsage: Region`Private`RegionVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Private`RegionVar",
	"Region`Mesh`RegionVariable":"ObjectType: Symbol\nUsage: Region`Mesh`RegionVariable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`RegionVariable",
	"Region`RegionVariables":"ObjectType: Symbol\nUsage: Region`RegionVariables\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegionVariables",
	"StructuredArray`RegisterArrayStructure":"ObjectType: Symbol\nUsage: StructuredArray`RegisterArrayStructure\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StructuredArray`RegisterArrayStructure",
	"System`ConvertersDump`RegisterCommon":"ObjectType: Symbol\nUsage: System`ConvertersDump`RegisterCommon\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: System`ConvertersDump`RegisterCommon[System`ConvertersDump`ie_][System`ConvertersDump`format_, (System`ConvertersDump`ropts___)?OptionQ] := Module[{System`ConvertersDump`functionchannels, System`ConvertersDump`defelem, System`ConvertersDump`optelem, System`ConvertersDump`source, System`ConvertersDump`webfmt}, {System`ConvertersDump`functionchannels, System`ConvertersDump`defelem, System`ConvertersDump`optelem, System`ConvertersDump`source, System`ConvertersDump`webfmt} = {\"FunctionChannels\", \"DefaultElement\", \"Options\", \"Sources\", \"OriginalChannel\"} \/. Flatten[Join[{System`ConvertersDump`ropts}, Options[ImportExport`RegisterFormat]]]; System`ConvertersDump`JoinTo[System`ConvertersDump`$allFormats[System`ConvertersDump`ie], System`ConvertersDump`format]; Which[System`ConvertersDump`ie === Import, System`ConvertersDump`ImportFormatQ[System`ConvertersDump`format] = True; , System`ConvertersDump`ie === Export, System`ConvertersDump`ExportFormatQ[System`ConvertersDump`format] = True; ]; System`ConvertersDump`functionchannels = Flatten[{System`ConvertersDump`functionchannels}]; If[Complement[System`ConvertersDump`functionchannels, {\"FileNames\", \"Streams\", \"Directories\", \"ByteArrays\"}] =!= {}, System`ConvertersDump`functionchannels = \"FunctionChannels\" \/. Options[ImportExport`RegisterFormat]; Message[ImportExport`RegisterImport::fch, \"FunctionChannels\", System`ConvertersDump`functionchannels]; ]; If[System`ConvertersDump`functionchannels === {\"ByteArrays\"}, System`ConvertersDump`functionchannels = \"FunctionChannels\" \/. Options[ImportExport`RegisterFormat]; Message[ImportExport`RegisterImport::fchba, \"FunctionChannels\", System`ConvertersDump`functionchannels]; ]; Which[System`ConvertersDump`ie === Import, If[MemberQ[System`ConvertersDump`functionchannels, \"Directories\"], System`ConvertersDump`importDirectoriesQ[System`ConvertersDump`format] = True]; If[MemberQ[System`ConvertersDump`functionchannels, \"FileNames\"], System`ConvertersDump`importFileNamesQ[System`ConvertersDump`format] = True]; If[MemberQ[System`ConvertersDump`functionchannels, \"Streams\"], System`ConvertersDump`importStreamsQ[System`ConvertersDump`format] = True]; If[MemberQ[System`ConvertersDump`functionchannels, \"ByteArrays\"], System`ConvertersDump`importByteArraysQ[System`ConvertersDump`format] = True]; , System`ConvertersDump`ie === Export, If[MemberQ[System`ConvertersDump`functionchannels, \"Directories\"], System`ConvertersDump`exportDirectoriesQ[System`ConvertersDump`format] = True]; If[MemberQ[System`ConvertersDump`functionchannels, \"FileNames\"], System`ConvertersDump`exportFileNamesQ[System`ConvertersDump`format] = True]; If[MemberQ[System`ConvertersDump`functionchannels, \"Streams\"], System`ConvertersDump`exportStreamsQ[System`ConvertersDump`format] = True]; If[MemberQ[System`ConvertersDump`functionchannels, \"ByteArrays\"], System`ConvertersDump`exportByteArraysQ[System`ConvertersDump`format] = True]; ]; If[System`ConvertersDump`defelem =!= \"DefaultElement\", System`ConvertersDump`defelem = If[ListQ[System`ConvertersDump`defelem], System`ConvertersDump`defelem, {System`ConvertersDump`defelem}]; System`ConvertersDump`defaultElement[System`ConvertersDump`ie][System`ConvertersDump`format] = System`ConvertersDump`defelem]; If[System`ConvertersDump`optelem =!= {}, System`ConvertersDump`optelem = If[ListQ[System`ConvertersDump`optelem], System`ConvertersDump`optelem, {System`ConvertersDump`optelem}]; Which[System`ConvertersDump`ie === Export, System`ConvertersDump`exportOptions[System`ConvertersDump`format] = Sort[System`ConvertersDump`optelem], System`ConvertersDump`ie === Import, System`ConvertersDump`importOptions[System`ConvertersDump`format] = Sort[System`ConvertersDump`optelem]]]; If[System`ConvertersDump`webfmt, System`ConvertersDump`JoinTo[System`ConvertersDump`$webFormats, System`ConvertersDump`format]]; If[System`ConvertersDump`source === None, System`ConvertersDump`source = ImportExport`DefaultSources[System`ConvertersDump`prettynameFormat[System`ConvertersDump`format]]]; System`ConvertersDump`source]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`RegisterCommon",
	"Optimization`ConvexSolvers`RegisterConvexBuiltInMethod":"ObjectType: Symbol\nUsage: Optimization`ConvexSolvers`RegisterConvexBuiltInMethod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Optimization`ConvexSolvers`RegisterConvexBuiltInMethod[\"SCS\"] := Optimization`ConvexSolvers`RegisterConvexMethod[\"SCS\", Association[\"SolveFunction\" -> Optimization`ConvexSolvers`BuiltIn`SCSConicOptimization, \"ConicConstraintSupport\" -> Optimization`ConvexSolvers`ConvexMethodDump`SCSConeSupport]]\nOptimization`ConvexSolvers`RegisterConvexBuiltInMethod[\"SuperSCS\"] := Optimization`ConvexSolvers`RegisterConvexMethod[\"SuperSCS\", Association[\"SolveFunction\" -> Optimization`ConvexSolvers`BuiltIn`SCSConicOptimization, \"ConicConstraintSupport\" -> Optimization`ConvexSolvers`ConvexMethodDump`SCSConeSupport]]\nOptimization`ConvexSolvers`RegisterConvexBuiltInMethod[\"SCSDual\"] := Optimization`ConvexSolvers`RegisterConvexMethod[\"SCSDual\", Association[\"SolveFunction\" -> Optimization`ConvexSolvers`BuiltIn`SCSDualOptimization, \"ConicConstraintSupport\" -> Optimization`ConvexSolvers`ConvexMethodDump`SCSDualConeSupport]]\nOptimization`ConvexSolvers`RegisterConvexBuiltInMethod[\"MOSEK\"] := Optimization`Utilities`LoadOptimizationMethodLibrary[\"MOSEK\"]\nOptimization`ConvexSolvers`RegisterConvexBuiltInMethod[\"ADMM\"] := Optimization`ConvexSolvers`RegisterConvexMethod[\"ADMM\", Association[\"SolveFunction\" -> Optimization`ConvexSolvers`BuiltIn`ADMMConicOptimization, \"ConicConstraintSupport\" -> Thread[{\"EqualityConstraint\", \"NonNegativeCone\", \"NormCone\"} -> \"Affine\"], \"ExtendedPrecisionSupport\" -> True]]\nOptimization`ConvexSolvers`RegisterConvexBuiltInMethod[\"IPOPT\"] := Optimization`ConvexSolvers`RegisterConvexMethod[\"IPOPT\", Association[\"SolveFunction\" -> Optimization`ConvexSolvers`BuiltIn`IPOPTConicOptimization, \"ConicConstraintSupport\" -> Optimization`ConvexSolvers`ConvexMethodDump`IPOPTConeSupport, \"NonlinearObjectiveSupport\" -> True]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`ConvexSolvers`RegisterConvexBuiltInMethod",
	"Optimization`ConvexSolvers`RegisterConvexMethod":"ObjectType: Symbol\nUsage: Optimization`ConvexSolvers`RegisterConvexMethod\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`ConvexSolvers`RegisterConvexMethod",
	"CloudObject`Internal`RegisteredUserNameStatus":"ObjectType: Symbol\nUsage: CloudObject`Internal`RegisteredUserNameStatus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CloudObject`Internal`RegisteredUserNameStatus[] := CloudObject`Private`$RUserNameStatus\nCloudObject`Internal`RegisteredUserNameStatus[CloudObject`Private`server_String] := Replace[CloudObject`Private`$RUserNameStatus[CloudObject`Private`extractURLDomain[CloudObject`Private`server]], _Missing :> None]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: CloudObject`Internal`RegisteredUserNameStatus",
	"ImportExport`RegisterExport":"ObjectType: Symbol\nUsage: ImportExport`RegisterExport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ImportExport`RegisterExport[System`ConvertersDump`fmt_String, System`ConvertersDump`function_, (System`ConvertersDump`ropts___)?OptionQ] := With[{System`ConvertersDump`format = ToUpperCase[System`ConvertersDump`fmt]}, Module[{System`ConvertersDump`source, System`ConvertersDump`exe}, If[System`ConvertersDump`canonicalFormat[System`ConvertersDump`fmt] === $Failed, ImportExport`RegisterFormat[System`ConvertersDump`fmt, Sequence @@ Flatten[{System`ConvertersDump`ropts}]]]; System`ConvertersDump`RegisterFormatInternal[Export][System`ConvertersDump`format, Sequence @@ {System`ConvertersDump`ropts}]; System`ConvertersDump`source = System`ConvertersDump`RegisterCommon[Export][System`ConvertersDump`format, Sequence @@ {System`ConvertersDump`ropts}]; If[System`ConvertersDump`exportByteArraysQ[System`ConvertersDump`format], System`ConvertersDump`exe = System`ConvertersDump`installSource[System`ConvertersDump`source, Automatic]; If[System`ConvertersDump`exe =!= $Failed, System`ConvertersDump`ExportByteArrayTest[System`ConvertersDump`expr_, {System`ConvertersDump`format}, System`ConvertersDump`opts___] := System`ConvertersDump`function[System`ConvertersDump`expr, System`ConvertersDump`opts]; ]; ]; System`ConvertersDump`export[System`ConvertersDump`channel_, System`ConvertersDump`expr_, System`ConvertersDump`format, System`ConvertersDump`opts___] := System`ConvertersDump`installExport[System`ConvertersDump`format, System`ConvertersDump`function, System`ConvertersDump`source, Automatic, System`ConvertersDump`channel, Unevaluated[System`ConvertersDump`expr], System`ConvertersDump`opts]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ImportExport`RegisterExport",
	"ImportExport`RegisterFormat":"ObjectType: Symbol\nUsage: ImportExport`RegisterFormat\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ImportExport`RegisterFormat[System`ConvertersDump`format_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`binformat, System`ConvertersDump`extensions, System`ConvertersDump`encoding, System`ConvertersDump`alphachannel, System`ConvertersDump`allFormats, System`ConvertersDump`cformat, System`ConvertersDump`prettyformat}, {System`ConvertersDump`binformat, System`ConvertersDump`extensions, System`ConvertersDump`encoding, System`ConvertersDump`alphachannel} = {\"BinaryFormat\", \"Extensions\", \"Encoding\", \"AlphaChannel\"} \/. Flatten[{System`ConvertersDump`opts}] \/. Options[ImportExport`RegisterFormat]; System`ConvertersDump`allFormats = ToUpperCase[Flatten[{System`ConvertersDump`format}]]; System`ConvertersDump`cformat = First[System`ConvertersDump`allFormats]; System`ConvertersDump`prettyformat = First[Flatten[{System`ConvertersDump`format}]]; If[ !MatchQ[System`ConvertersDump`alphachannel, True | False], Message[ImportExport`RegisterFormat::erropts, \"AlphaChannel\", System`ConvertersDump`alphachannel]; System`ConvertersDump`alphachannel = \"AlphaChannel\" \/. Options[ImportExport`RegisterFormat]; ]; System`ConvertersDump`alphaChannelQ[System`ConvertersDump`cformat] = System`ConvertersDump`alphachannel; If[ !MatchQ[System`ConvertersDump`encoding, True | False], Message[ImportExport`RegisterFormat::erropts, \"Encoding\", System`ConvertersDump`encoding]; System`ConvertersDump`encoding = \"Encoding\" \/. Options[ImportExport`RegisterFormat]; ]; System`ConvertersDump`EncodingQ[System`ConvertersDump`cformat] = System`ConvertersDump`encoding; If[System`ConvertersDump`encoding, System`ConvertersDump`JoinTo[System`ConvertersDump`$encodingFormats, System`ConvertersDump`cformat]]; If[ !MatchQ[System`ConvertersDump`binformat, True | False], Message[ImportExport`RegisterFormat::erropts, \"BinaryFormat\", System`ConvertersDump`binformat]; System`ConvertersDump`binformat = \"BinaryFormat\" \/. Options[ImportExport`RegisterFormat]; ]; System`ConvertersDump`TextFormatQ[System`ConvertersDump`cformat] =  !System`ConvertersDump`binformat; System`ConvertersDump`JoinTo[System`ConvertersDump`$canonicalFormats, System`ConvertersDump`cformat]; System`ConvertersDump`JoinTo[System`ConvertersDump`$prettynameFormats, {System`ConvertersDump`cformat -> System`ConvertersDump`prettyformat}]; System`ConvertersDump`JoinTo[System`ConvertersDump`FormatMappings, Thread[Rest[System`ConvertersDump`allFormats] -> System`ConvertersDump`cformat]]; Switch[System`ConvertersDump`extensions, _String | {__String}, System`ConvertersDump`JoinTo[System`ConvertersDump`ExtensionMappings, (#1 -> System`ConvertersDump`cformat & ) \/@ Flatten[{System`ConvertersDump`extensions}]], None | {}, Null, _, Message[ImportExport`RegisterFormat::erropts, \"Extensions\", System`ConvertersDump`extensions]]; System`ConvertersDump`cformat]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Path -> Automatic, FunctionChannels -> {FileNames}, Sources -> None, AvailableElements -> None, Options -> {}, OriginalChannel -> False, BinaryFormat -> False, Encoding -> False, Extensions -> {}, AlphaChannel -> False}\nAttributes: {}\nFullName: ImportExport`RegisterFormat",
	"System`ConvertersDump`RegisterFormatInternal":"ObjectType: Symbol\nUsage: System`ConvertersDump`RegisterFormatInternal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: System`ConvertersDump`RegisterFormatInternal[System`ConvertersDump`ie_][System`ConvertersDump`fmt_, System`ConvertersDump`ropts___] := Module[{System`ConvertersDump`supported, System`ConvertersDump`intenv, System`ConvertersDump`sysid, System`ConvertersDump`uneval, System`ConvertersDump`returnQ, System`ConvertersDump`skip, System`ConvertersDump`prog}, System`ConvertersDump`supported = \"Visible\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[ !MatchQ[System`ConvertersDump`supported, True | False], Message[ImportExport`RegisterFormat::erropts, \"Visible\", System`ConvertersDump`supported]; System`ConvertersDump`supported = \"Visible\"\/System`ConvertersDump`$InternalRegistrationOptions; ]; If[System`ConvertersDump`supported, System`ConvertersDump`JoinTo[System`ConvertersDump`$visibleFormats[System`ConvertersDump`ie], System`ConvertersDump`prettynameFormat[System`ConvertersDump`fmt]]]; System`ConvertersDump`intenv = \"InterfaceEnvironment\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[System`ConvertersDump`intenv =!= All, System`ConvertersDump`InterfaceEnvironment[System`ConvertersDump`ie, System`ConvertersDump`fmt] = System`ConvertersDump`intenv]; System`ConvertersDump`sysid = \"SystemID\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[System`ConvertersDump`sysid =!= All, System`ConvertersDump`SystemID[System`ConvertersDump`ie, System`ConvertersDump`fmt] = System`ConvertersDump`sysid]; System`ConvertersDump`uneval = \"Unevaluated\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[ !MatchQ[System`ConvertersDump`uneval, True | False], Message[ImportExport`RegisterExport::erropts, \"Unevaluated\", System`ConvertersDump`uneval]; System`ConvertersDump`uneval = \"Unevaluated\" \/. System`ConvertersDump`$InternalRegistrationOptions; ]; System`ConvertersDump`UnevaluatedQ[System`ConvertersDump`fmt] = System`ConvertersDump`uneval; System`ConvertersDump`returnQ = \"ReturnsOutputToUser\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[ !MatchQ[System`ConvertersDump`returnQ, True | False], Message[ImportExport`RegisterExport::erropts, \"ReturnsOutputToUser\", System`ConvertersDump`supported]; System`ConvertersDump`returnQ = \"ReturnsOutputToUser\" \/. System`ConvertersDump`$InternalRegistrationOptions; ]; System`ConvertersDump`FormatAllowedToReturnExprQ[System`ConvertersDump`fmt] = System`ConvertersDump`returnQ; System`ConvertersDump`prog = \"ProgressIndicator\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[ !MatchQ[System`ConvertersDump`prog, _?AssociationQ | None], Message[ImportExport`RegisterFormat::erropts, \"ProgressIndicator\", System`ConvertersDump`prog]; System`ConvertersDump`prog = \"ProgressIndicator\" \/. System`ConvertersDump`$InternalRegistrationOptions; ]; If[System`ConvertersDump`prog =!= None, System`ConvertersDump`FormatProgressIndicator[System`ConvertersDump`ie][System`ConvertersDump`fmt] = System`ConvertersDump`prog; ]; If[System`ConvertersDump`ie === Import, System`ConvertersDump`skip = \"SkipPostImport\" \/. Flatten[{System`ConvertersDump`ropts}] \/. System`ConvertersDump`$InternalRegistrationOptions; If[ !MatchQ[System`ConvertersDump`skip, (Association | List)[(_?StringQ -> _)..] | None], Message[ImportExport`RegisterExport::erropts, \"SkipPostImport\", System`ConvertersDump`skip]; System`ConvertersDump`skip = \"SkipPostImport\" \/. System`ConvertersDump`$InternalRegistrationOptions; ]; System`ConvertersDump`skip = Replace[System`ConvertersDump`skip, System`ConvertersDump`x:Except[_List] :> {System`ConvertersDump`x}, {1}]; If[System`ConvertersDump`skip =!= None, System`ConvertersDump`PostImportSkips[System`ConvertersDump`fmt] = System`ConvertersDump`skip; ]; ]; ]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`RegisterFormatInternal",
	"ImportExport`RegisterImport":"ObjectType: Symbol\nUsage: ImportExport`RegisterImport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ImportExport`RegisterImport[System`ConvertersDump`fmt_String, System`ConvertersDump`raw_List, System`ConvertersDump`post_List, (System`ConvertersDump`ropts___)?System`ConvertersDump`RuleQ] := Module[{System`ConvertersDump`format, System`ConvertersDump`imElem, System`ConvertersDump`source, System`ConvertersDump`test, System`ConvertersDump`exe}, If[System`ConvertersDump`canonicalFormat[System`ConvertersDump`fmt] === $Failed, ImportExport`RegisterFormat[System`ConvertersDump`fmt, Sequence @@ Flatten[{System`ConvertersDump`ropts}]]]; System`ConvertersDump`format = ToUpperCase[System`ConvertersDump`fmt]; System`ConvertersDump`RegisterFormatInternal[Import][System`ConvertersDump`format, Sequence @@ {System`ConvertersDump`ropts}]; System`ConvertersDump`source = System`ConvertersDump`RegisterCommon[Import][System`ConvertersDump`format, Sequence @@ {System`ConvertersDump`ropts}]; System`ConvertersDump`imElem = \"AvailableElements\" \/. {System`ConvertersDump`ropts} \/. {\"AvailableElements\" -> None}; System`ConvertersDump`importElements = DeleteCases[System`ConvertersDump`importElements, System`ConvertersDump`format -> ___]; System`ConvertersDump`JoinTo[System`ConvertersDump`importElements, System`ConvertersDump`format -> System`ConvertersDump`imElem]; System`ConvertersDump`test = \"FormatTest\" \/. {System`ConvertersDump`ropts}; If[System`ConvertersDump`test =!= \"FormatTest\", System`ConvertersDump`AddFormatTest[System`ConvertersDump`fmt, System`ConvertersDump`test]]; If[System`ConvertersDump`importByteArraysQ[System`ConvertersDump`format], System`ConvertersDump`exe = System`ConvertersDump`installSource[System`ConvertersDump`source, Automatic]; If[System`ConvertersDump`exe =!= $Failed, System`ConvertersDump`defineRawImport[System`ConvertersDump`format, System`ConvertersDump`raw]]; ]; System`ConvertersDump`import[System`ConvertersDump`channel_, System`ConvertersDump`format, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := System`ConvertersDump`installImport[{System`ConvertersDump`raw, System`ConvertersDump`post}, System`ConvertersDump`source, Automatic, System`ConvertersDump`channel, System`ConvertersDump`format, System`ConvertersDump`elements, System`ConvertersDump`opts]]\nImportExport`RegisterImport[System`ConvertersDump`fmt_String, System`ConvertersDump`raw_List, (System`ConvertersDump`ropts___)?System`ConvertersDump`RuleQ] := ImportExport`RegisterImport[System`ConvertersDump`fmt, System`ConvertersDump`raw, {}, System`ConvertersDump`ropts]\nImportExport`RegisterImport[System`ConvertersDump`fmt_String, System`ConvertersDump`function_, (System`ConvertersDump`ropts___)?System`ConvertersDump`RuleQ] := ImportExport`RegisterImport[System`ConvertersDump`fmt, {System`ConvertersDump`function}, {}, System`ConvertersDump`ropts]\nImportExport`RegisterImport[System`ConvertersDump`fmt_String, System`ConvertersDump`function_, System`ConvertersDump`post_List, (System`ConvertersDump`ropts___)?System`ConvertersDump`RuleQ] := ImportExport`RegisterImport[System`ConvertersDump`fmt, {System`ConvertersDump`function}, System`ConvertersDump`post, System`ConvertersDump`ropts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ImportExport`RegisterImport",
	"Developer`RegisterInputStream":"ObjectType: Symbol\nUsage: Developer`RegisterInputStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Developer`RegisterInputStream",
	"ResourceLocator`RegisterListener":"ObjectType: Symbol\nUsage: RegisterListener[ type, listener] adds listener to be called when resources of type are added.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceLocator`RegisterListener[ResourceLocator`Private`type_String, ResourceLocator`Private`listener_] := Module[{ResourceLocator`Private`obj}, ResourceLocator`Private`obj = ResourceLocator`Private`resourceListenerRegistry[ResourceLocator`Private`type]; If[ResourceLocator`Private`obj === Null, ResourceLocator`Private`obj = ResourceLocator`Private`makeListener[ResourceLocator`Private`type]; ResourceLocator`Private`resourceListenerRegistry[ResourceLocator`Private`type] = ResourceLocator`Private`obj]; ResourceLocator`Private`obj[\"addListener\"][ResourceLocator`Private`listener]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceLocator`RegisterListener",
	"Developer`RegisterOutputStream":"ObjectType: Symbol\nUsage: Developer`RegisterOutputStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Developer`RegisterOutputStream",
	"PersistenceLocations`RegisterPersistenceLocation":"ObjectType: Symbol\nUsage: PersistenceLocations`RegisterPersistenceLocation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PersistenceLocations`RegisterPersistenceLocation[PersistenceLocations`Dump`ass_Association] \/; StringQ[PersistenceLocations`Dump`ass[\"Type\"]] := With[{PersistenceLocations`Dump`type = PersistenceLocations`Dump`ass[\"Type\"]}, PersistenceLocations`Dump`locationQ[PersistenceLocations`Dump`type] = True; PersistenceLocations`Dump`dispatch[PersistenceLocations`Dump`type] = PersistenceLocations`Dump`ass[\"Dispatcher\"]; PersistenceLocations`Dump`$persistenceImplementations[PersistenceLocations`Dump`type] = PersistenceLocations`Dump`ass; ]\nPersistenceLocations`RegisterPersistenceLocation[PersistenceLocations`Dump`rules__Rule] := Module[{PersistenceLocations`Dump`ass = PersistenceLocations`$RegistrationTemplate}, AssociateTo[PersistenceLocations`Dump`ass, {PersistenceLocations`Dump`rules}]; PersistenceLocations`RegisterPersistenceLocation[PersistenceLocations`Dump`ass]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`RegisterPersistenceLocation",
	"ResourceFunctionHelpers`RegressionDataQuiz":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`RegressionDataQuiz\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`RegressionDataQuiz[ResourceFunctionHelpers`RegressionDataQuiz`Private`class:\"Linear\" | \"Quadratic\" | \"Exponential\"] := ResourceFunctionHelpers`RegressionDataQuiz`Private`iRegressionDataQuiz[ResourceFunctionHelpers`RegressionDataQuiz`Private`class]\nResourceFunctionHelpers`RegressionDataQuiz[___] := $Failed \/; False\nSubValues: None\nDefaultValues: SyntaxInformation[ResourceFunctionHelpers`RegressionDataQuiz] = {\"ArgumentsPattern\" -> {_}}\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`RegressionDataQuiz",
	"Algebra`RegularChainDecomposition":"ObjectType: Symbol\nUsage: Algebra`RegularChainDecomposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Modulus -> 0}\nAttributes: {}\nFullName: Algebra`RegularChainDecomposition",
	"Region`RegularClosedSemialgebraicRegionQ":"ObjectType: Symbol\nUsage: Region`RegularClosedSemialgebraicRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegularClosedSemialgebraicRegionQ",
	"Reduce`RegularizedHolomorphic":"ObjectType: Symbol\nUsage: Reduce`RegularizedHolomorphic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RegularizedHolomorphic",
	"Reduce`RegularizedHolomorphicValue":"ObjectType: Symbol\nUsage: Reduce`RegularizedHolomorphicValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`RegularizedHolomorphicValue[System`HIntegralDump`f_, System`HIntegralDump`rp_, System`HIntegralDump`c_] := Quiet[Module[{System`HIntegralDump`i, System`HIntegralDump`e}, Do[If[Reduce`PzeroQ[System`HIntegralDump`rp[[System`HIntegralDump`i,1]] - System`HIntegralDump`c], System`HIntegralDump`e = Switch[Sign[System`HIntegralDump`rp[[System`HIntegralDump`i,2]]], -1, System`HIntegralDump`evpole[System`HIntegralDump`f, System`HIntegralDump`c, -System`HIntegralDump`rp[[System`HIntegralDump`i,2]]], 0, System`HIntegralDump`evrem[System`HIntegralDump`f, System`HIntegralDump`c], _, System`HIntegralDump`evzero[System`HIntegralDump`f, System`HIntegralDump`c, System`HIntegralDump`rp[[System`HIntegralDump`i,2]]]]; If[System`HIntegralDump`e === $Failed, Return[$Failed, Module]]; System`HIntegralDump`e *= Times @@ ((System`HIntegralDump`c - #1[[1]])^(-#1[[2]]) & ) \/@ Drop[System`HIntegralDump`rp, {System`HIntegralDump`i}]; Return[System`HIntegralDump`e, Module]], {System`HIntegralDump`i, Length[System`HIntegralDump`rp]}]; System`HIntegralDump`f[System`HIntegralDump`c]*Times @@ ((System`HIntegralDump`c - #1[[1]])^(-#1[[2]]) & ) \/@ System`HIntegralDump`rp]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`RegularizedHolomorphicValue",
	"Control`Utilities`RegularModelQ":"ObjectType: Symbol\nUsage: Control`Utilities`RegularModelQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`CommonDump`in:Control`Utilities`RegularModelQ[Control`CommonDump`f_, Control`CommonDump`rest___] := With[{Control`CommonDump`result = Control`Utilities`regularQ[Control`CommonDump`f, Control`CommonDump`rest]}, Control`CommonDump`result \/; Control`CommonDump`result =!= $Failed] \/; Control`Utilities`validOptionsQ[Control`CommonDump`in, Control`Utilities`RegularModelQ, Control`CommonDump`rest]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tolerance -> Automatic, Method -> Matrix}\nAttributes: {}\nFullName: Control`Utilities`RegularModelQ",
	"Region`RegularOpenSemialgebraicRegionQ":"ObjectType: Symbol\nUsage: Region`RegularOpenSemialgebraicRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`RegularOpenSemialgebraicRegionQ",
	"ResourceFunctionHelpers`RegularPolygonDiagonals":"ObjectType: Symbol\nUsage: RegularPolygonDiagonals[n_] returns the number of diagonals of a regular polygon.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`RegularPolygonDiagonals[1] := 0\nResourceFunctionHelpers`RegularPolygonDiagonals[2] := 0\nResourceFunctionHelpers`RegularPolygonDiagonals[ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n_Integer] := ((ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n - 3)*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n)\/2\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`RegularPolygonDiagonals",
	"ResourceFunctionHelpers`RegularPolygonRegionCount":"ObjectType: Symbol\nUsage: RegularPolygonRegionCount[n_] returns the number of regions which the diagonals divide a regular polygon into.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`RegularPolygonRegionCount[ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n_Integer] := With[{ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d = Boole[Divisible[ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n, #1]] & }, (1*(ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n^4 - 6*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n^3 + 23*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n^2 - 42*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n + 24))\/24 + (1*(-5*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n^3 + 42*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n^2 - 40*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n - 48)*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[2])\/48 - (3*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[4])\/4 + (1*(-53*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n^2 + 310*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n)*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[6])\/12 + (49*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[12])\/2 + 32*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[18] + 19*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[24] - 36*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[30] - 50*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[42] - 190*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[60] - 78*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[84] - 48*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[90] - 78*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[120] - 48*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`n*ResourceFunctionHelpers`DiagonalIntersectionsCount`Private`d[210]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`RegularPolygonRegionCount",
	"System`ComplexExpand`ReImExpr":"ObjectType: Symbol\nUsage: System`ComplexExpand`ReImExpr\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ComplexExpand`ReImExpr",
	"System`ComplexExpand`ReImFail":"ObjectType: Symbol\nUsage: System`ComplexExpand`ReImFail\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ComplexExpand`ReImFail",
	"System`Private`ReImPair":"ObjectType: Symbol\nUsage: System`Private`ReImPair\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`ReImPair",
	"ComputationalGeometry`Surface`ReIndex":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`ReIndex\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`ReIndex",
	"DocumentationSearch`ReindexLegacyPacletsAndSearch":"ObjectType: Symbol\nUsage: DocumentationSearch`ReindexLegacyPacletsAndSearch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DocumentationSearch`ReindexLegacyPacletsAndSearch",
	"NDSolve`Reinitialize":"ObjectType: Symbol\nUsage: NDSolve`Reinitialize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                                                                                                  1\n{AccuracyGoal -> Automatic, EvaluationMonitor -> None, InitialSeeding -> {}, InterpolationOrder -> Automatic, MaxStepFraction -> --, MaxSteps -> Automatic, MaxStepSize -> Automatic, NormFunction -> Automatic, PrecisionGoal -> Automatic, StartingStepSize -> Automatic, StepMonitor -> None}\n                                                                                                                                 10\nAttributes: {}\nFullName: NDSolve`Reinitialize",
	"NDSolve`ReinitializeVector":"ObjectType: Symbol\nUsage: NDSolve`ReinitializeVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                                                                                                  1\n{AccuracyGoal -> Automatic, EvaluationMonitor -> None, InitialSeeding -> {}, InterpolationOrder -> Automatic, MaxStepFraction -> --, MaxSteps -> Automatic, MaxStepSize -> Automatic, NormFunction -> Automatic, PrecisionGoal -> Automatic, StartingStepSize -> Automatic, StepMonitor -> None}\n                                                                                                                                 10\nAttributes: {}\nFullName: NDSolve`ReinitializeVector",
	"JSONTools`Private`REJECTDUPLICATES":"None",
	"Graphics`Mesh`RejectedVertices":"ObjectType: Symbol\nUsage: Graphics`Mesh`RejectedVertices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`RejectedVertices",
	"Random`Private`RejectionStandardBallUniformDistribution":"ObjectType: Symbol\nUsage: Random`Private`RejectionStandardBallUniformDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldAll}\nFullName: Random`Private`RejectionStandardBallUniformDistribution",
	"NumericalMath`RelativeError":"ObjectType: Symbol\nUsage: NumericalMath`RelativeError\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable, NumericFunction}\nFullName: NumericalMath`RelativeError",
	"Internal`RelativelyPrimeBasis":"ObjectType: Symbol\nUsage: Internal`RelativelyPrimeBasis\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`RelativelyPrimeBasis",
	"Region`Mesh`RelaxMesh":"ObjectType: Symbol\nUsage: Region`Mesh`RelaxMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CheckIntersections -> Automatic, Gradient -> Automatic, MaxIterations -> Automatic, MaxSteps -> Automatic, NoisyMesh -> False, Parallelization -> Automatic, RestrictedVertices -> Automatic, StepSize -> Automatic, Tolerance -> Automatic}\nAttributes: {HoldFirst}\nFullName: Region`Mesh`RelaxMesh",
	"DragAndDrop`ReleaseFunction":"ObjectType: Symbol\nUsage: DragAndDrop`ReleaseFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DragAndDrop`ReleaseFunction",
	"Typeset`ReleaseHold":"ObjectType: Symbol\nUsage: Typeset`ReleaseHold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Typeset`ReleaseHold[System`Dump`a_] := System`Dump`a \/\/. Typeset`Hold[System`Dump`x___] :> System`Dump`x\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Typeset`ReleaseHold"
}