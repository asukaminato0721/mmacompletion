{
	"GraphComputation`GraphInformationPanel":"ObjectType: Symbol\nUsage: GraphComputation`GraphInformationPanel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphInformationPanel[(GraphComputation`GraphInformationPaletteDump`g_)?GraphQ] := Deploy[Panel[Grid[{{GraphComputation`GraphInformationPaletteDump`iPanel[GraphComputation`GraphInformationPaletteDump`g], GraphComputation`GraphInformationPaletteDump`propertyTabview[GraphComputation`GraphInformationPaletteDump`g, ImageSize -> Dynamic[FEPrivate`If[FEPrivate`SameQ[FEPrivate`$OperatingSystem, \"MacOSX\"], {220, 172}, {220, 174}]], FrameMargins -> {{5, 0}, {0, 8}}]}}, Alignment -> Top]]]\nGraphComputation`GraphInformationPanel[GraphComputation`GraphInformationPaletteDump`g_] := (GraphComputation`GraphInformationPaletteDump`graphInformationPanelMessage[GraphComputation`GraphInformationPaletteDump`g]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphInformationPanel",
	"GraphComputation`GraphInformationPanelInNetworkPalette":"ObjectType: Symbol\nUsage: GraphComputation`GraphInformationPanelInNetworkPalette\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphInformationPanelInNetworkPalette[GraphComputation`GraphInformationPaletteDump`g_] := Deploy[Grid[{{GraphComputation`GraphInformationPaletteDump`propertyTabview[GraphComputation`GraphInformationPaletteDump`g, ImageSize -> Dynamic[FEPrivate`If[FEPrivate`SameQ[FEPrivate`$OperatingSystem, \"MacOSX\"], {250, 172}, {250, 174}]], FrameMargins -> {{5, 0}, {0, 8}}]}}, Alignment -> Top]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphInformationPanelInNetworkPalette",
	"GraphComputation`GraphInheritance":"ObjectType: Symbol\nUsage: GraphComputation`GraphInheritance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphInheritance[GraphComputation`GraphInheritanceDump`func_, GraphComputation`GraphInheritanceDump`g_, GraphComputation`GraphInheritanceDump`h_, GraphComputation`GraphInheritanceDump`useropts_List, GraphComputation`GraphInheritanceDump`sysopts_List] := Block[{GraphComputation`GraphInheritanceDump`res, GraphComputation`GraphInheritanceDump`nopts, GraphComputation`GraphInheritanceDump`opts, GraphComputation`GraphInheritanceDump`iopts}, GraphComputation`GraphInheritanceDump`opts = GraphComputation`GraphInheritanceDump`expandOptions[GraphComputation`GraphInheritanceDump`func, GraphComputation`GraphInheritanceDump`g, GraphComputation`GraphInheritanceDump`useropts \/. Properties -> AnnotationRules, GraphComputation`GraphInheritanceDump`sysopts \/. Properties -> AnnotationRules]; ({GraphComputation`GraphInheritanceDump`opts, GraphComputation`GraphInheritanceDump`iopts} = GraphComputation`GraphInheritanceDump`opts; GraphComputation`GraphInheritanceDump`nopts = Quiet[GraphComputation`GraphInheritanceDump`graphInheritance[GraphComputation`GraphInheritanceDump`func, GraphComputation`GraphInheritanceDump`g, GraphComputation`GraphInheritanceDump`h, GraphComputation`GraphInheritanceDump`iopts]]; (GraphComputation`GraphInheritanceDump`res = DeleteDuplicatesBy[Flatten[{GraphComputation`GraphInheritanceDump`opts, GraphComputation`GraphInheritanceDump`nopts}], First]; Quiet[Complement[GraphComputation`GraphInheritanceDump`res, GraphComputation`GraphInheritanceDump`iOptions[Graph, GraphComputation`GraphInheritanceDump`res[[All,1]]]]]) \/; GraphComputation`GraphInheritanceDump`nopts =!= $Failed) \/; ListQ[GraphComputation`GraphInheritanceDump`opts] && Length[GraphComputation`GraphInheritanceDump`opts] == 2]\nGraphComputation`GraphInheritance[GraphComputation`GraphInheritanceDump`func_, GraphComputation`GraphInheritanceDump`g_, GraphComputation`GraphInheritanceDump`h_, {}, Inherited] := Block[{GraphComputation`GraphInheritanceDump`res}, GraphComputation`GraphInheritanceDump`res = GraphComputation`GraphInheritance[GraphComputation`GraphInheritanceDump`func, GraphComputation`GraphInheritanceDump`g, GraphComputation`GraphInheritanceDump`h, {}, Thread[Append[GraphComputation`GraphInheritanceDump`iOptions[GraphComputation`GraphInheritanceDump`g][[All,1]], VertexCoordinates] -> Inherited]]; GraphComputation`GraphInheritanceDump`res \/; GraphComputation`GraphInheritanceDump`res =!= $Failed]\nGraphComputation`GraphInheritance[GraphComputation`GraphInheritanceDump`func_, GraphComputation`GraphInheritanceDump`g_, GraphComputation`GraphInheritanceDump`h_, {}, All | Automatic] := Block[{GraphComputation`GraphInheritanceDump`res, GraphComputation`GraphInheritanceDump`opts, GraphComputation`GraphInheritanceDump`vc}, GraphComputation`GraphInheritanceDump`opts = DeleteCases[GraphComputation`GraphInheritanceDump`iOptions[GraphComputation`GraphInheritanceDump`g][[All,1]], VertexCoordinates]; If[(VertexCoordinates \/. GraphComputation`GraphInheritanceDump`iOptions[GraphComputation`GraphInheritanceDump`g, VertexCoordinates]) =!= Automatic, GraphComputation`GraphInheritanceDump`vc = Inherited, GraphComputation`GraphInheritanceDump`vc = Automatic]; GraphComputation`GraphInheritanceDump`res = GraphComputation`GraphInheritance[GraphComputation`GraphInheritanceDump`func, GraphComputation`GraphInheritanceDump`g, GraphComputation`GraphInheritanceDump`h, {}, Append[Thread[GraphComputation`GraphInheritanceDump`opts -> Inherited], VertexCoordinates -> GraphComputation`GraphInheritanceDump`vc]]; GraphComputation`GraphInheritanceDump`res \/; GraphComputation`GraphInheritanceDump`res =!= $Failed]\nGraphComputation`GraphInheritance[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphInheritance",
	"GraphComputation`GraphJoin":"ObjectType: Symbol\nUsage: GraphComputation`GraphJoin\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphJoin[GraphComputation`GraphOperationsDump`graph__ \/; VectorQ[{GraphComputation`GraphOperationsDump`graph}, GraphQ], GraphComputation`GraphOperationsDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`graphJoin[GraphComputation`GraphOperationsDump`graph, GraphComputation`GraphOperationsDump`opts]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nGraphComputation`GraphJoin[GraphComputation`GraphOperationsDump`expr___] := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`messageGraphJoin[GraphComputation`GraphOperationsDump`expr]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, EdgeLabels -> None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, PerformanceGoal -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> Automatic}\nAttributes: {}\nFullName: GraphComputation`GraphJoin",
	"Network`GraphPlot`GraphLayout1D":"ObjectType: Symbol\nUsage: Network`GraphPlot`GraphLayout1D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Network`GraphPlot`GraphLayout1D[Network`GraphPlotDump`Private`caller_, Network`GraphPlotDump`Private`G_, (Network`GraphPlotDump`Private`opts___)?OptionQ] := Module[{Network`GraphPlotDump`Private`comps, Network`GraphPlotDump`Private`x, Network`GraphPlotDump`Private`offset = 0, Network`GraphPlotDump`Private`max = 0, Network`GraphPlotDump`Private`method}, Network`GraphPlotDump`Private`A = Network`GraphPlot`AdjacencyMatrix[Network`GraphPlotDump`Private`G]; If[ !SquareMatrixQ[Network`GraphPlotDump`Private`A], Message[Network`GraphPlotDump`Private`caller::sqma, Network`GraphPlotDump`Private`A]; Throw[$Failed]]; Network`GraphPlotDump`Private`x = Table[1, {Dimensions[Network`GraphPlotDump`Private`A][[1]]}]; Network`GraphPlotDump`Private`method = Quiet[OptionValue[Network`GraphPlotDump`Private`caller, {Network`GraphPlotDump`Private`opts}, \"Method\"]]; Network`GraphPlotDump`Private`method = Switch[System`Utilities`StringName[Network`GraphPlotDump`Private`method], \"Automatic\", \"SpectralOrdering\", \"SpectralOrdering\", \"SpectralOrdering\", \"Spectral\", \"Spectral\", \"TwoNormApproximate\", \"TwoNormApproximate\", \"TwoNormApproximateOrdering\", \"TwoNormApproximateOrdering\", _, Message[Network`GraphPlotDump`Private`caller::gc1dm, Network`GraphPlotDump`Private`method]; Throw[$Failed]]; Network`GraphPlotDump`Private`comps = SparseArray`StronglyConnectedComponents[Network`GraphPlotDump`Private`A + Transpose[Network`GraphPlotDump`Private`A]]; Do[Network`GraphPlotDump`Private`comp = Network`GraphPlotDump`Private`comps[[Network`GraphPlotDump`Private`i]]; Network`GraphPlotDump`Private`x[[Network`GraphPlotDump`Private`comp]] = Network`GraphPlotDump`Private`getGraphCoordinates1Dinternal[Network`GraphPlotDump`Private`caller, Network`GraphPlotDump`Private`A[[Network`GraphPlotDump`Private`comp,Network`GraphPlotDump`Private`comp]], Network`GraphPlotDump`Private`method]; Network`GraphPlotDump`Private`min = Min[Network`GraphPlotDump`Private`x[[Network`GraphPlotDump`Private`comp]]]; Network`GraphPlotDump`Private`x[[Network`GraphPlotDump`Private`comp]] = Network`GraphPlotDump`Private`x[[Network`GraphPlotDump`Private`comp]] - Network`GraphPlotDump`Private`min + Network`GraphPlotDump`Private`max; Network`GraphPlotDump`Private`max = Max[Network`GraphPlotDump`Private`x[[Network`GraphPlotDump`Private`comp]]] + 1; , {Network`GraphPlotDump`Private`i, Length[Network`GraphPlotDump`Private`comps]}]; Network`GraphPlotDump`Private`x]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Network`GraphPlot`GraphLayout1D",
	"GraphComputation`GraphMakeBoxes":"ObjectType: Symbol\nUsage: GraphComputation`GraphMakeBoxes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphMakeBoxes[(GraphComputation`GraphBoxesDump`graph_)?GraphQ, GraphComputation`GraphBoxesDump`fmt_] \/; Refresh[BoxForm`UseTextFormattingQ, None] := ToString[Unevaluated[GraphComputation`GraphBoxesDump`graph], InputForm]\nGraphComputation`GraphMakeBoxes[(GraphComputation`GraphBoxesDump`graph_)?GraphQ, GraphComputation`GraphBoxesDump`fmt_] := Block[{GraphComputation`GraphBoxesDump`res, GraphComputation`GraphBoxesDump`graphics}, GraphComputation`GraphBoxesDump`graphics = GraphComputation`GraphDrawing[GraphComputation`GraphBoxesDump`graph]; GraphComputation`GraphBoxesDump`res = GraphComputation`GraphBoxesDump`makeBoxes[GraphComputation`GraphBoxesDump`graphics, GraphComputation`GraphBoxesDump`graph, GraphComputation`GraphBoxesDump`fmt]; GraphComputation`GraphBoxesDump`res \/; GraphComputation`GraphBoxesDump`res =!= $Failed]\nGraphComputation`GraphMakeBoxes[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphMakeBoxes",
	"GraphComputation`GraphOptions":"ObjectType: Symbol\nUsage: GraphComputation`GraphOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphOptions",
	"Internal`GraphOptions":"ObjectType: Symbol\nUsage: Internal`GraphOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`GraphOptions",
	"GraphComputation`GraphPalette":"ObjectType: Symbol\nUsage: GraphComputation`GraphPalette\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphPalette[GraphComputation`GraphPaletteDump`expr_] := Block[{GraphComputation`GraphPaletteDump`res}, GraphComputation`GraphPaletteDump`res = GraphComputation`GraphPaletteDump`graphPalette[GraphComputation`GraphPaletteDump`expr]; Null \/; GraphComputation`GraphPaletteDump`res =!= $Failed]\nGraphComputation`GraphPalette[___] := Null\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphPalette",
	"GraphComputation`GraphPathDistance":"ObjectType: Symbol\nUsage: GraphComputation`GraphPathDistance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, WorkingPrecision -> Automatic}\nAttributes: {}\nFullName: GraphComputation`GraphPathDistance",
	"GraphComputation`GraphPatternMatch":"ObjectType: Symbol\nUsage: GraphComputation`GraphPatternMatch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphPatternMatch[GraphComputation`GraphDeveloperDump`patt_, GraphComputation`GraphDeveloperDump`expr_] := GraphComputation`GraphDeveloperDump`extendedPatternQ[GraphComputation`GraphDeveloperDump`patt, GraphComputation`GraphDeveloperDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphPatternMatch",
	"GraphComputation`GraphPerformance":"ObjectType: Symbol\nUsage: GraphComputation`GraphPerformance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphPerformance[GraphComputation`GraphPerformanceDump`expr__] := Block[{GraphComputation`GraphPerformanceDump`res}, GraphComputation`GraphPerformanceDump`res = GraphComputation`GraphPerformanceDump`graphPerformance[GraphComputation`GraphPerformanceDump`expr]; GraphComputation`GraphPerformanceDump`res \/; GraphComputation`GraphPerformanceDump`res =!= $Failed]\nGraphComputation`GraphPerformance[GraphComputation`GraphPerformanceDump`expr___] := (GraphComputation`GraphPerformanceDump`messageGraphPerformance[GraphComputation`GraphPerformanceDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphPerformance",
	"SparseArray`GraphPlacement":"ObjectType: Symbol\nUsage: SparseArray`GraphPlacement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DataRange -> Automatic, DirectedEdges -> False, EdgeColor -> Automatic, EdgeLabeling -> True, EdgeLabels -> None, EdgeRenderingFunction -> Automatic, EdgeTooltips -> Automatic, Method -> Automatic, MultiedgeStyle -> False, PackingMethod -> Automatic, PlotStyle -> Automatic, SelfLoopStyle -> False, VertexColor -> Automatic, VertexCoordinateRules -> Automatic, VertexFrameBackground -> Automatic, VertexFrameMargins -> Automatic, VertexFrameStyle -> Automatic, VertexLabeling -> Automatic, VertexNames -> Automatic, VertexRenderingFunction -> Automatic, VertexSizes -> None, VertexTextStyle -> Automatic, VertexTooltips -> Automatic}\nAttributes: {}\nFullName: SparseArray`GraphPlacement",
	"SparseArray`GraphPlacement3D":"ObjectType: Symbol\nUsage: SparseArray`GraphPlacement3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DataRange -> Automatic, DirectedEdges -> False, EdgeColor -> Automatic, EdgeLabeling -> True, EdgeLabels -> None, EdgeRenderingFunction -> Automatic, EdgeTooltips -> Automatic, Method -> Automatic, MultiedgeStyle -> False, PackingMethod -> Automatic, PlotStyle -> Automatic, SelfLoopStyle -> False, VertexColor -> Automatic, VertexCoordinateRules -> Automatic, VertexFrameBackground -> Automatic, VertexFrameMargins -> Automatic, VertexFrameStyle -> Automatic, VertexLabeling -> Automatic, VertexNames -> Automatic, VertexRenderingFunction -> Automatic, VertexSizes -> None, VertexTextStyle -> Automatic, VertexTooltips -> Automatic}\nAttributes: {}\nFullName: SparseArray`GraphPlacement3D",
	"SparseArray`Private`GraphPlot":"ObjectType: Symbol\nUsage: SparseArray`Private`GraphPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DataRange -> Automatic, DirectedEdges -> False, EdgeColor -> Automatic, EdgeLabeling -> True, EdgeLabels -> None, EdgeRenderingFunction -> Automatic, EdgeTooltips -> Automatic, Method -> Automatic, MultiedgeStyle -> False, PackingMethod -> Automatic, PlotStyle -> Automatic, SelfLoopStyle -> False, VertexColor -> Automatic, VertexCoordinateRules -> Automatic, VertexFrameBackground -> Automatic, VertexFrameMargins -> Automatic, VertexFrameStyle -> Automatic, VertexLabeling -> Automatic, VertexNames -> Automatic, VertexRenderingFunction -> Automatic, VertexSizes -> None, VertexTextStyle -> Automatic, VertexTooltips -> Automatic}\nAttributes: {}\nFullName: SparseArray`Private`GraphPlot",
	"SparseArray`Private`GraphPlot3D":"ObjectType: Symbol\nUsage: SparseArray`Private`GraphPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DataRange -> Automatic, DirectedEdges -> False, EdgeColor -> Automatic, EdgeLabeling -> True, EdgeLabels -> None, EdgeRenderingFunction -> Automatic, EdgeTooltips -> Automatic, Method -> Automatic, MultiedgeStyle -> False, PackingMethod -> Automatic, PlotStyle -> Automatic, SelfLoopStyle -> False, VertexColor -> Automatic, VertexCoordinateRules -> Automatic, VertexFrameBackground -> Automatic, VertexFrameMargins -> Automatic, VertexFrameStyle -> Automatic, VertexLabeling -> Automatic, VertexNames -> Automatic, VertexRenderingFunction -> Automatic, VertexSizes -> None, VertexTextStyle -> Automatic, VertexTooltips -> Automatic}\nAttributes: {}\nFullName: SparseArray`Private`GraphPlot3D",
	"GraphComputation`GraphPlot3DLegacy":"ObjectType: Symbol\nUsage: GraphComputation`GraphPlot3DLegacy\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Network`GraphPlotDump`Private`e:GraphComputation`GraphPlot3DLegacy[{}, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := Graphics3D[{}, Sequence @@ Network`GraphPlotDump`Private`filterOptions[Graphics, Network`GraphPlotDump`Private`opts]]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlot3DLegacy[Network`GraphPlotDump`Private`G_Combinatorica`Graph, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := With[{Network`GraphPlotDump`Private`res = Catch[Network`GraphPlotDump`Private`GraphPlot23DInternal[GraphComputation`GraphPlot3DLegacy, Network`GraphPlotDump`Private`G, 3, \"Plot\", \"Combinatorica\", Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`NondefaultOptions[GraphComputation`GraphPlot3DLegacy]]]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlot3DLegacy[(Network`GraphPlotDump`Private`G_)?Network`GraphPlotDump`Private`RuleListGraphQ, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := With[{Network`GraphPlotDump`Private`res = Network`GraphPlotDump`Private`GraphPlotInternalRuleList23D[Network`GraphPlotDump`Private`G, 3, \"Plot\", Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`NondefaultOptions[GraphComputation`GraphPlot3DLegacy]]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlot3DLegacy[(Network`GraphPlotDump`Private`A_)?MatrixQ, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := With[{Network`GraphPlotDump`Private`res = Network`GraphPlotDump`Private`GraphPlot23DInternal[Network`GraphPlot`AdjacencyMatrix[Network`GraphPlotDump`Private`A], 3, \"Plot\", \"Matrix\", Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`NondefaultOptions[GraphComputation`GraphPlot3DLegacy]]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nGraphComputation`GraphPlot3DLegacy[(Network`GraphPlotDump`Private`g_)?GraphQ, Network`GraphPlotDump`Private`expr___] := Block[{Network`GraphPlotDump`Private`res, Network`GraphPlotDump`Private`adj, Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`embedding}, Network`GraphPlotDump`Private`adj = AdjacencyMatrix[Network`GraphPlotDump`Private`g]; (Network`GraphPlotDump`Private`opts = Network`GraphPlotDump`Private`toGraphPlot3DOptions[Network`GraphPlotDump`Private`g]; If[(Method \/. {Network`GraphPlotDump`Private`opts} \/. {Method -> Automatic}) == Automatic && (VertexCoordinateRules \/. {Network`GraphPlotDump`Private`opts} \/. VertexCoordinateRules -> Automatic) == Automatic, Network`GraphPlotDump`Private`embedding = GraphEmbedding[Network`GraphPlotDump`Private`g, Automatic, 3]; Network`GraphPlotDump`Private`opts = Flatten[{Network`GraphPlotDump`Private`opts, VertexCoordinateRules -> Network`GraphPlotDump`Private`embedding}]; ]; Network`GraphPlotDump`Private`res = GraphComputation`GraphPlot3DLegacy[Network`GraphPlotDump`Private`adj, Network`GraphPlotDump`Private`expr, Network`GraphPlotDump`Private`opts]; Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed) \/; MatrixQ[Network`GraphPlotDump`Private`adj]]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlot3DLegacy[Network`GraphPlotDump`Private`x___, (Network`GraphPlotDump`Private`opts___)?OptionQ] := With[{Network`GraphPlotDump`Private`res = Network`GraphPlotDump`Private`IssueArgsMessage[GraphComputation`GraphPlot3DLegacy, Network`GraphPlotDump`Private`argLength[Network`GraphPlotDump`Private`e], 1, 1]}, If[Length[{Network`GraphPlotDump`Private`x}] == 1, Message[GraphComputation`GraphPlot3DLegacy::grph, Network`GraphPlotDump`Private`x]]; Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, Boxed -> True, BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, DataRange -> Automatic, DisplayFunction :> $DisplayFunction, EdgeRenderingFunction -> Automatic, Epilog -> {}, FaceGrids -> None, FaceGridsStyle -> {}, FormatType :> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Lighting -> Automatic, Method -> Automatic, MultiedgeStyle -> Automatic, PackingMethod -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotationAction -> Fit, SelfLoopStyle -> Automatic, SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, VertexCoordinateRules -> Automatic, VertexLabeling -> Automatic, VertexRenderingFunction -> Automatic, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}}\nAttributes: {}\nFullName: GraphComputation`GraphPlot3DLegacy",
	"GraphComputation`GraphPlotLegacy":"ObjectType: Symbol\nUsage: GraphComputation`GraphPlotLegacy\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Network`GraphPlotDump`Private`e:GraphComputation`GraphPlotLegacy[Network`GraphPlotDump`Private`G_Combinatorica`Graph, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := With[{Network`GraphPlotDump`Private`res = Catch[Network`GraphPlotDump`Private`GraphPlot2[GraphComputation`GraphPlotLegacy, Network`GraphPlotDump`Private`G, 2, \"Combinatorica\", Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`NondefaultOptions[GraphComputation`GraphPlotLegacy]]]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlotLegacy[(Network`GraphPlotDump`Private`G_)?Network`GraphPlotDump`Private`RuleListGraphQ, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := With[{Network`GraphPlotDump`Private`res = Catch[Network`GraphPlotDump`Private`GraphPlot2[GraphComputation`GraphPlotLegacy, Network`GraphPlotDump`Private`G, 2, \"RuleList\", Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`NondefaultOptions[GraphComputation`GraphPlotLegacy]]]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlotLegacy[{}, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := Graphics[{}, Sequence @@ Network`GraphPlotDump`Private`filterOptions[Graphics, Network`GraphPlotDump`Private`opts]]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlotLegacy[(Network`GraphPlotDump`Private`A_)?MatrixQ, (Network`GraphPlotDump`Private`opts___)?OptionQ] \/; Network`GraphPlotDump`Private`checkopt[Network`GraphPlotDump`Private`e] := With[{Network`GraphPlotDump`Private`res = Catch[Network`GraphPlotDump`Private`GraphPlot2[GraphComputation`GraphPlotLegacy, Network`GraphPlot`AdjacencyMatrix[Network`GraphPlotDump`Private`A], 2, \"Matrix\", Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`NondefaultOptions[GraphComputation`GraphPlotLegacy]]]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nGraphComputation`GraphPlotLegacy[(Network`GraphPlotDump`Private`g_)?GraphQ, Network`GraphPlotDump`Private`expr___] := Block[{Network`GraphPlotDump`Private`res, Network`GraphPlotDump`Private`adj, Network`GraphPlotDump`Private`opts, Network`GraphPlotDump`Private`embedding}, Network`GraphPlotDump`Private`adj = AdjacencyMatrix[Network`GraphPlotDump`Private`g]; (Network`GraphPlotDump`Private`opts = Network`GraphPlotDump`Private`toGraphPlotOptions[Network`GraphPlotDump`Private`g]; If[(Method \/. {Network`GraphPlotDump`Private`opts} \/. {Method -> Automatic}) == Automatic && (VertexCoordinateRules \/. {Network`GraphPlotDump`Private`opts} \/. VertexCoordinateRules -> Automatic) == Automatic, Network`GraphPlotDump`Private`embedding = GraphEmbedding[Network`GraphPlotDump`Private`g, Automatic, 2]; Network`GraphPlotDump`Private`opts = Flatten[{Network`GraphPlotDump`Private`opts, VertexCoordinateRules -> Network`GraphPlotDump`Private`embedding}]; ]; Network`GraphPlotDump`Private`res = GraphComputation`GraphPlotLegacy[Network`GraphPlotDump`Private`adj, Network`GraphPlotDump`Private`expr, Network`GraphPlotDump`Private`opts]; Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed) \/; MatrixQ[Network`GraphPlotDump`Private`adj]]\nNetwork`GraphPlotDump`Private`e:GraphComputation`GraphPlotLegacy[Network`GraphPlotDump`Private`x___, (Network`GraphPlotDump`Private`opts___)?OptionQ] := With[{Network`GraphPlotDump`Private`res = Network`GraphPlotDump`Private`IssueArgsMessage[GraphComputation`GraphPlotLegacy, Network`GraphPlotDump`Private`argLength[Network`GraphPlotDump`Private`e], 1, 1]}, If[Length[{Network`GraphPlotDump`Private`x}] == 1, Message[GraphComputation`GraphPlotLegacy::grph, Network`GraphPlotDump`Private`x]]; Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DataRange -> Automatic, DirectedEdges -> False, DisplayFunction :> $DisplayFunction, EdgeLabeling -> True, EdgeRenderingFunction -> Automatic, Epilog -> {}, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> Automatic, MultiedgeStyle -> Automatic, PackingMethod -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, SelfLoopStyle -> Automatic, Ticks -> Automatic, TicksStyle -> {}, VertexCoordinateRules -> Automatic, VertexLabeling -> Automatic, VertexRenderingFunction -> Automatic}\nAttributes: {}\nFullName: GraphComputation`GraphPlotLegacy",
	"GraphComputation`GraphProduct":"ObjectType: Symbol\nUsage: GraphComputation`GraphProduct\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphProduct[GraphComputation`GraphOperationsDump`graph__ \/; VectorQ[{GraphComputation`GraphOperationsDump`graph}, GraphQ], GraphComputation`GraphOperationsDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphProduct[GraphComputation`GraphOperationsDump`graph, \"Cartesian\", GraphComputation`GraphOperationsDump`opts]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nGraphComputation`GraphProduct[(GraphComputation`GraphOperationsDump`a_)?GraphQ, (GraphComputation`GraphOperationsDump`b_)?GraphQ, GraphComputation`GraphOperationsDump`method:\"Cartesian\" | \"Tensor\" | \"Lexicographic\" | \"Normal\" | \"Conormal\" | \"Rooted\", GraphComputation`GraphOperationsDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphOperationsDump`res, GraphComputation`GraphOperationsDump`acoor, GraphComputation`GraphOperationsDump`bcoor, GraphComputation`GraphOperationsDump`coor, GraphComputation`GraphOperationsDump`v, GraphComputation`GraphOperationsDump`nopts, GraphComputation`GraphOperationsDump`i, GraphComputation`GraphOperationsDump`j}, GraphComputation`GraphOperationsDump`acoor = GraphEmbedding[GraphComputation`GraphOperationsDump`a]; GraphComputation`GraphOperationsDump`bcoor = GraphEmbedding[GraphComputation`GraphOperationsDump`b]; If[Head[GraphComputation`GraphOperationsDump`acoor[[1]]] === Rule, GraphComputation`GraphOperationsDump`acoor = GraphComputation`GraphOperationsDump`acoor[[All,2]], GraphComputation`GraphOperationsDump`acoor]; If[Head[GraphComputation`GraphOperationsDump`bcoor[[1]]] === Rule, GraphComputation`GraphOperationsDump`bcoor = GraphComputation`GraphOperationsDump`bcoor[[All,2]], GraphComputation`GraphOperationsDump`bcoor]; GraphComputation`GraphOperationsDump`coor = If[GraphComputation`GraphOperationsDump`method === \"Rooted\", Flatten[Table[GraphComputation`GraphOperationsDump`acoor[[GraphComputation`GraphOperationsDump`i]] + GraphComputation`GraphOperationsDump`bcoor[[GraphComputation`GraphOperationsDump`j]], {GraphComputation`GraphOperationsDump`i, Length[GraphComputation`GraphOperationsDump`acoor]}, {GraphComputation`GraphOperationsDump`j, Length[GraphComputation`GraphOperationsDump`bcoor]}], 1], Flatten[Table[GraphComputation`GraphOperationsDump`acoor[[GraphComputation`GraphOperationsDump`j]] + GraphComputation`GraphOperationsDump`bcoor[[GraphComputation`GraphOperationsDump`i]], {GraphComputation`GraphOperationsDump`i, Length[GraphComputation`GraphOperationsDump`bcoor]}, {GraphComputation`GraphOperationsDump`j, Length[GraphComputation`GraphOperationsDump`acoor]}], 1]]; GraphComputation`GraphOperationsDump`v = Which[GraphComputation`GraphVertices[GraphComputation`GraphOperationsDump`a] === Automatic && GraphComputation`GraphVertices[GraphComputation`GraphOperationsDump`b] === Automatic, Automatic, Intersection[VertexList[GraphComputation`GraphOperationsDump`a], VertexList[GraphComputation`GraphOperationsDump`b]] === {}, Flatten[Outer[List, VertexList[GraphComputation`GraphOperationsDump`b], VertexList[GraphComputation`GraphOperationsDump`a]], 1] \/. {GraphComputation`GraphOperationsDump`p_, GraphComputation`GraphOperationsDump`q_} -> {GraphComputation`GraphOperationsDump`q, GraphComputation`GraphOperationsDump`p}, True, Automatic]; (GraphComputation`GraphOperationsDump`coor = If[GraphComputation`GraphOperationsDump`v === Automatic, Thread[Range[Length[GraphComputation`GraphOperationsDump`acoor]*Length[GraphComputation`GraphOperationsDump`bcoor]] -> GraphComputation`GraphOperationsDump`coor], Thread[GraphComputation`GraphOperationsDump`v -> GraphComputation`GraphOperationsDump`coor]]; GraphComputation`GraphOperationsDump`nopts = {GraphComputation`GraphOperationsDump`opts}; If[GraphComputation`GraphOperationsDump`iOptionValue[GraphComputation`GraphProduct, GraphComputation`GraphOperationsDump`nopts, {GraphLayout, VertexCoordinates}] === {Automatic, Automatic}, GraphComputation`GraphOperationsDump`nopts = Prepend[GraphComputation`GraphOperationsDump`nopts, VertexCoordinates -> GraphComputation`GraphOperationsDump`coor]]; GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`graphProduct[GraphComputation`GraphOperationsDump`a, GraphComputation`GraphOperationsDump`b, GraphComputation`GraphOperationsDump`method, GraphComputation`GraphOperationsDump`nopts]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed) \/; GraphComputation`GraphOperationsDump`v =!= $Failed]\nGraphComputation`GraphProduct[(GraphComputation`GraphOperationsDump`graph_)?GraphQ, GraphComputation`GraphOperationsDump`expr__ \/; VectorQ[{GraphComputation`GraphOperationsDump`expr}, GraphQ], GraphComputation`GraphOperationsDump`method_String, GraphComputation`GraphOperationsDump`opts:OptionsPattern[]] \/; Length[{GraphComputation`GraphOperationsDump`expr}] > 1 := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`graph; Do[GraphComputation`GraphOperationsDump`res = GraphComputation`GraphProduct[GraphComputation`GraphOperationsDump`res, GraphComputation`GraphOperationsDump`g, GraphComputation`GraphOperationsDump`method, GraphComputation`GraphOperationsDump`opts]; If[GraphComputation`GraphOperationsDump`res === $Failed, Break[]]; , {GraphComputation`GraphOperationsDump`g, {GraphComputation`GraphOperationsDump`expr}}]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nGraphComputation`GraphProduct[GraphComputation`GraphOperationsDump`expr___] := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`messageGraphProduct[GraphComputation`GraphOperationsDump`expr]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, EdgeLabels -> None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, PerformanceGoal -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> Automatic}\nAttributes: {}\nFullName: GraphComputation`GraphProduct",
	"GraphComputation`GraphProgressIndicator":"ObjectType: Symbol\nUsage: GraphComputation`GraphProgressIndicator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphProgressIndicator[] := GraphComputation`SetNetworkGraphicsState[\"ProgressIndicator\"]\nGraphComputation`GraphProgressIndicator[GraphComputation`GraphGraphicsLibraryDump`flag_] \/; GraphComputation`GraphGraphicsLibraryDump`flag[\"State\"] == \"ProgressIndicator\" := GraphComputation`ClearNetworkGraphicsState[GraphComputation`GraphGraphicsLibraryDump`flag]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphProgressIndicator",
	"GraphComputation`GraphPropertyChart":"ObjectType: Symbol\nUsage: GraphComputation`GraphPropertyChart\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphPropertyChart[GraphComputation`GraphChartDump`expr___] := Block[{GraphComputation`GraphChartDump`res}, GraphComputation`GraphChartDump`res = GraphComputation`GraphChartDump`graphPropertyChart[GraphComputation`GraphChartDump`expr]; GraphComputation`GraphChartDump`res \/; GraphComputation`GraphChartDump`res =!= $Failed]\nGraphComputation`GraphPropertyChart[GraphComputation`GraphChartDump`expr___] := (GraphComputation`GraphChartDump`messageGraphPropertyChart[GraphComputation`GraphChartDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ChartBaseStyle -> Automatic, ChartElementFunction -> Automatic, ChartLabels -> None, ChartLayout -> Automatic, ChartLegends -> None, ChartStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DirectedEdges -> Automatic, EdgeLabels -> Automatic, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicks -> None, FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelingFunction -> Automatic, LabelStyle -> {}, LegendAppearance -> Automatic, Method -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRange -> Automatic, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PolarAxes -> False, PolarAxesOrigin -> Automatic, PolarGridLines -> None, PolarTicks -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, AnnotationRules -> {}, RotateLabel -> True, SectorOrigin -> Automatic, SectorSpacing -> Automatic, Ticks -> Automatic, TicksStyle -> {}, VertexCoordinates -> Automatic, VertexLabels -> Automatic, VertexLabelStyle -> Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> Automatic, DisplayFunction :> $DisplayFunction, FormatType :> TraditionalForm, PerformanceGoal :> $PerformanceGoal}\nAttributes: {}\nFullName: GraphComputation`GraphPropertyChart",
	"GraphComputation`GraphPropertyHighlight":"ObjectType: Symbol\nUsage: GraphComputation`GraphPropertyHighlight\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphPropertyHighlight[GraphComputation`GraphPropertyHighlightDump`quant_, \"ValidQ\"] := GraphComputation`GraphPropertyHighlightDump`iGraphPropertyHighlightValue[GraphComputation`GraphPropertyHighlightDump`quant, \"ValidQ\"]\nGraphComputation`GraphPropertyHighlight[GraphComputation`GraphPropertyHighlightDump`quant_, \"QuantityValidQ\"] := GraphComputation`GraphPropertyHighlightDump`iGraphPropertyHighlightValue[GraphComputation`GraphPropertyHighlightDump`quant, \"QuantityValidQ\"]\nGraphComputation`GraphPropertyHighlight[(GraphComputation`GraphPropertyHighlightDump`g_)?GraphQ, GraphComputation`GraphPropertyHighlightDump`quant_] := Block[{GraphComputation`GraphPropertyHighlightDump`res}, GraphComputation`GraphPropertyHighlightDump`res = GraphComputation`GraphPropertyHighlightDump`iGraphPropertyHighlightValue[GraphComputation`GraphPropertyHighlightDump`quant, GraphComputation`GraphPropertyHighlightDump`g]; GraphComputation`GraphPropertyHighlightDump`res \/; GraphComputation`GraphPropertyHighlightDump`res =!= $Failed]\nGraphComputation`GraphPropertyHighlight[(GraphComputation`GraphPropertyHighlightDump`g_)?GraphQ, GraphComputation`GraphPropertyHighlightDump`quant_, GraphComputation`GraphPropertyHighlightDump`prop_] := Block[{GraphComputation`GraphPropertyHighlightDump`res}, GraphComputation`GraphPropertyHighlightDump`res = GraphComputation`GraphPropertyHighlightDump`iGraphPropertyHighlightValue[GraphComputation`GraphPropertyHighlightDump`quant, GraphComputation`GraphPropertyHighlightDump`prop, GraphComputation`GraphPropertyHighlightDump`g]; GraphComputation`GraphPropertyHighlightDump`res \/; GraphComputation`GraphPropertyHighlightDump`res =!= $Failed]\nGraphComputation`GraphPropertyHighlight[(GraphComputation`GraphPropertyHighlightDump`g_)?GraphQ, GraphComputation`GraphPropertyHighlightDump`quant_, GraphComputation`GraphPropertyHighlightDump`prop_, GraphComputation`GraphPropertyHighlightDump`e:_DirectedEdge | _UndirectedEdge] := Block[{GraphComputation`GraphPropertyHighlightDump`res}, GraphComputation`GraphPropertyHighlightDump`res = GraphComputation`CachedGraphPropertyHighlight[GraphComputation`GraphPropertyHighlightDump`g, GraphComputation`GraphPropertyHighlightDump`quant, GraphComputation`GraphPropertyHighlightDump`prop]; GraphComputation`GraphPropertyHighlightDump`res[[EdgeIndex[GraphComputation`GraphPropertyHighlightDump`g, GraphComputation`GraphPropertyHighlightDump`e]]] \/; GraphComputation`GraphPropertyHighlightDump`res =!= $Failed]\nGraphComputation`GraphPropertyHighlight[(GraphComputation`GraphPropertyHighlightDump`g_)?GraphQ, GraphComputation`GraphPropertyHighlightDump`quant_, GraphComputation`GraphPropertyHighlightDump`prop_, GraphComputation`GraphPropertyHighlightDump`e:Except[_DirectedEdge | _UndirectedEdge]] := Block[{GraphComputation`GraphPropertyHighlightDump`res}, GraphComputation`GraphPropertyHighlightDump`res = GraphComputation`CachedGraphPropertyHighlight[GraphComputation`GraphPropertyHighlightDump`g, GraphComputation`GraphPropertyHighlightDump`quant, GraphComputation`GraphPropertyHighlightDump`prop]; GraphComputation`GraphPropertyHighlightDump`res[[VertexIndex[GraphComputation`GraphPropertyHighlightDump`g, GraphComputation`GraphPropertyHighlightDump`e]]] \/; GraphComputation`GraphPropertyHighlightDump`res =!= $Failed]\nGraphComputation`GraphPropertyHighlight[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {}\nAttributes: {}\nFullName: GraphComputation`GraphPropertyHighlight",
	"Network`GraphPlot`GraphQ":"ObjectType: Symbol\nUsage: Network`GraphPlot`GraphQ\nDocumentation: None\nOwnValues: Network`GraphPlot`GraphQ := Network`GraphPlot`GraphQ\nUpValues: None\nDownValues: Network`GraphPlot`GraphQ[Network`GraphPlotDump`Private`A_] := Module[{}, Network`GraphPlotDump`Private`res = MatrixQ[Network`GraphPlotDump`Private`A] || Head[Network`GraphPlotDump`Private`A] === Combinatorica`Graph || Network`GraphPlotDump`Private`RuleListGraphQ[Network`GraphPlotDump`Private`A]; Network`GraphPlotDump`Private`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Network`GraphPlot`GraphQ",
	"GraphComputation`GraphRepresentation":"ObjectType: Symbol\nUsage: GraphComputation`GraphRepresentation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphRepresentation",
	"GraphComputation`GraphSetGraphicsOptions":"ObjectType: Symbol\nUsage: GraphComputation`GraphSetGraphicsOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphSetGraphicsOptions[GraphComputation`GraphGraphicsLibraryDump`opt_] := FrontEndExecute[FrontEnd`SetOptions[FrontEnd`SelectionObject, {GraphicsBoxOptions -> GraphComputation`GraphGraphicsLibraryDump`opt}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphSetGraphicsOptions",
	"GraphComputation`GraphSpectrum":"ObjectType: Symbol\nUsage: GraphComputation`GraphSpectrum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphSpectrum[(GraphComputation`GraphBasicDump`graph_)?GraphQ] := Block[{GraphComputation`GraphBasicDump`res}, GraphComputation`GraphBasicDump`res = GraphComputation`GraphBasicDump`graphSpectrum[GraphComputation`GraphBasicDump`graph]; GraphComputation`GraphBasicDump`res \/; GraphComputation`GraphBasicDump`res =!= $Failed]\nGraphComputation`GraphSpectrum[GraphComputation`GraphBasicDump`expr___] := Block[{GraphComputation`GraphBasicDump`res}, GraphComputation`GraphBasicDump`res = GraphComputation`GraphBasicDump`messageGraphSpectrum[GraphComputation`GraphBasicDump`expr]; GraphComputation`GraphBasicDump`res \/; GraphComputation`GraphBasicDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphSpectrum",
	"GraphComputation`GraphSum":"ObjectType: Symbol\nUsage: GraphComputation`GraphSum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphSum[GraphComputation`GraphOperationsDump`graphs__ \/; VectorQ[{GraphComputation`GraphOperationsDump`graphs}, GraphQ], GraphComputation`GraphOperationsDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`graphSum[GraphComputation`GraphOperationsDump`graphs, GraphComputation`GraphOperationsDump`opts]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nGraphComputation`GraphSum[GraphComputation`GraphOperationsDump`expr___] := Block[{GraphComputation`GraphOperationsDump`res}, GraphComputation`GraphOperationsDump`res = GraphComputation`GraphOperationsDump`messageGraphSum[GraphComputation`GraphOperationsDump`expr]; GraphComputation`GraphOperationsDump`res \/; GraphComputation`GraphOperationsDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, EdgeLabels -> None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, PerformanceGoal -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> Automatic}\nAttributes: {}\nFullName: GraphComputation`GraphSum",
	"ComputationalGeometry`Surface`GraphSurface":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`GraphSurface\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ComputationalGeometry`Dump`Color -> False, Graphics`Mesh`Developer`Dimension -> Automatic, EdgeStyle -> None, Graphics`Mesh`FaceStyle -> None, ComputationalGeometry`Dump`Gap -> False, ComputationalGeometry`Dump`Labels -> False, Prolog -> Null, ComputationalGeometry`Surface`PrologParameter -> False, ComputationalGeometry`Surface`SurfaceColorFunction -> Null, ComputationalGeometry`Surface`UseCoordExpr -> False, VertexStyle -> None, ComputationalGeometry`Surface`VisibilityFunction -> Null}\nAttributes: {}\nFullName: ComputationalGeometry`Surface`GraphSurface",
	"SparseArray`GraphToSparseMatrix":"ObjectType: Symbol\nUsage: SparseArray`GraphToSparseMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`GraphToSparseMatrix",
	"RandomProcesses`MarkovProcessUtilities`GraphToStochasticMatrix":"ObjectType: Symbol\nUsage: RandomProcesses`MarkovProcessUtilities`GraphToStochasticMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`MarkovProcessUtilities`GraphToStochasticMatrix[RandomProcesses`MarkovChainDump`gr_Graph] := Module[{RandomProcesses`MarkovChainDump`sm}, RandomProcesses`MarkovChainDump`sm = WeightedAdjacencyMatrix[RandomProcesses`MarkovChainDump`gr, EdgeWeight -> \"Probability\"]; If[ !MatrixQ[RandomProcesses`MarkovChainDump`sm], RandomProcesses`MarkovChainDump`sm = AdjacencyMatrix[RandomProcesses`MarkovChainDump`gr]]; RandomProcesses`MarkovProcessUtilities`ToStochasticMatrix[RandomProcesses`MarkovChainDump`sm]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`MarkovProcessUtilities`GraphToStochasticMatrix",
	"GraphComputation`GraphVertexCoordinatesOption":"ObjectType: Symbol\nUsage: GraphComputation`GraphVertexCoordinatesOption\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GraphVertexCoordinatesOption[GraphComputation`GraphLibraryDump`symb_, (GraphComputation`GraphLibraryDump`opts_)?OptionQ, GraphComputation`GraphLibraryDump`c_List] := Block[{GraphComputation`GraphLibraryDump`res}, GraphComputation`GraphLibraryDump`res = GraphComputation`GraphLibraryDump`opts; If[GraphComputation`GraphLibraryDump`iOptionValue[GraphComputation`GraphLibraryDump`symb, GraphComputation`GraphLibraryDump`res, {GraphLayout, VertexCoordinates}] === {Automatic, Automatic}, GraphComputation`GraphLibraryDump`res = Prepend[GraphComputation`GraphLibraryDump`res, VertexCoordinates -> GraphComputation`GraphLibraryDump`c]]; GraphComputation`GraphLibraryDump`res \/; ListQ[GraphComputation`GraphLibraryDump`res]]\nGraphComputation`GraphVertexCoordinatesOption[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphVertexCoordinatesOption",
	"GraphComputation`GraphVertices":"ObjectType: Symbol\nUsage: GraphComputation`GraphVertices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GraphVertices",
	"Experimental`GrayCode":"ObjectType: Symbol\nUsage: Experimental`GrayCode\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Experimental`GrayCode[NumberTheory`GrayCodeDump`n_Integer] := Block[{NumberTheory`GrayCodeDump`res}, NumberTheory`GrayCodeDump`res = NumberTheory`GrayCodeDump`iGrayCode[NumberTheory`GrayCodeDump`n]; NumberTheory`GrayCodeDump`res \/; NumberTheory`GrayCodeDump`res =!= $Failed]\nExperimental`GrayCode[NumberTheory`GrayCodeDump`n_Integer, NumberTheory`GrayCodeDump`m_Integer] := Block[{NumberTheory`GrayCodeDump`res}, NumberTheory`GrayCodeDump`res = NumberTheory`GrayCodeDump`iGrayCode[NumberTheory`GrayCodeDump`n, NumberTheory`GrayCodeDump`m]; NumberTheory`GrayCodeDump`res \/; NumberTheory`GrayCodeDump`res =!= $Failed]\nExperimental`GrayCode[All | Infinity, NumberTheory`GrayCodeDump`m_Integer] := Block[{NumberTheory`GrayCodeDump`res}, NumberTheory`GrayCodeDump`res = NumberTheory`GrayCodeDump`iGrayCode[All, NumberTheory`GrayCodeDump`m]; NumberTheory`GrayCodeDump`res \/; NumberTheory`GrayCodeDump`res =!= $Failed]\nExperimental`GrayCode[NumberTheory`GrayCodeDump`n___] := (NumberTheory`GrayCodeDump`iGrayCodeMessages[NumberTheory`GrayCodeDump`n]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Experimental`GrayCode",
	"SurfaceGraphics`Methods`GrayColorSpace":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`GrayColorSpace\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`GrayColorSpace",
	"Image`SegmentationDump`GrayLevelThreshold":"ObjectType: Symbol\nUsage: Image`SegmentationDump`GrayLevelThreshold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`SegmentationDump`GrayLevelThreshold[Image`SegmentationDump`s___] := Block[{Image`SegmentationDump`a, Image`SegmentationDump`r}, Image`SegmentationDump`a = System`Private`Arguments[Image`SegmentationDump`GrayLevelThreshold[Image`SegmentationDump`s], 1]; Image`SegmentationDump`r \/; Image`SegmentationDump`a =!= {} && (Image`SegmentationDump`r = Image`SegmentationDump`iGrayLevelThreshold @@ Image`SegmentationDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic}\nAttributes: {}\nFullName: Image`SegmentationDump`GrayLevelThreshold",
	"BoxForm`GreekStyle":"ObjectType: Symbol\nUsage: BoxForm`GreekStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`GreekStyle",
	"Internal`GregorianLeapYearQ":"ObjectType: Symbol\nUsage: Internal`GregorianLeapYearQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`GregorianLeapYearQ",
	"NDSolve`FiniteDifferenceDerivativeFunction`Grid":"ObjectType: Symbol\nUsage: NDSolve`FiniteDifferenceDerivativeFunction`Grid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DropPeriodicEndpoints -> False}\nAttributes: {}\nFullName: NDSolve`FiniteDifferenceDerivativeFunction`Grid",
	"System`InterpolatingFunction`Grid":"ObjectType: Symbol\nUsage: System`InterpolatingFunction`Grid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DropPeriodicEndpoint -> False}\nAttributes: {}\nFullName: System`InterpolatingFunction`Grid",
	"GraphComputation`GridEmbedding":"ObjectType: Symbol\nUsage: GraphComputation`GridEmbedding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`GridEmbedding[(GraphComputation`GraphEmbeddingDump`m_)?GraphComputation`GraphEmbeddingDump`mIntegerQ, (GraphComputation`GraphEmbeddingDump`n_)?GraphComputation`GraphEmbeddingDump`mIntegerQ] := Block[{GraphComputation`GraphEmbeddingDump`res}, GraphComputation`GraphEmbeddingDump`res = GraphComputation`GraphEmbeddingDump`CompiledGrid[GraphComputation`GraphEmbeddingDump`m, GraphComputation`GraphEmbeddingDump`n]; GraphComputation`GraphEmbeddingDump`res \/; ListQ[GraphComputation`GraphEmbeddingDump`res]]\nGraphComputation`GridEmbedding[GraphComputation`GraphEmbeddingDump`m_Integer, GraphComputation`GraphEmbeddingDump`n_Integer] := Block[{GraphComputation`GraphEmbeddingDump`res}, GraphComputation`GraphEmbeddingDump`res = Quiet[Flatten[Table[{GraphComputation`GraphEmbeddingDump`j, GraphComputation`GraphEmbeddingDump`i}, {GraphComputation`GraphEmbeddingDump`j, GraphComputation`GraphEmbeddingDump`n}, {GraphComputation`GraphEmbeddingDump`i, GraphComputation`GraphEmbeddingDump`m}], 1]]; GraphComputation`GraphEmbeddingDump`res \/; ListQ[GraphComputation`GraphEmbeddingDump`res]]\nGraphComputation`GridEmbedding[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`GridEmbedding",
	"Legending`GridLegend":"ObjectType: Symbol\nUsage: Legending`GridLegend\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Legending`GridLegend[Legending`LegendDump`data_, Legending`LegendDump`o:OptionsPattern[Legending`GridLegend]] := Block[{Legending`LegendDump`container, Legending`LegendDump`position, Legending`LegendDump`layout, Legending`LegendDump`itemlayout, Legending`LegendDump`legend, Legending`LegendDump`wholelayout, Legending`LegendDump`appearance}, {Legending`LegendDump`container, Legending`LegendDump`position, Legending`LegendDump`layout, Legending`LegendDump`appearance} = Quiet[OptionValue[{Legending`LegendContainer, Legending`LegendPosition, LegendLayout, LegendAppearance}]]; Legending`LegendDump`appearance = Switch[Legending`LegendDump`appearance, Automatic, {}, _String, {Legending`LegendDump`appearance}, _List, Flatten[Legending`LegendDump`appearance], _, {Legending`LegendDump`appearance}]; If[Legending`LegendDump`container === Automatic, Legending`LegendDump`container = Cases[Legending`LegendDump`appearance, None | \"Box\" | \"Panel\"]; If[Legending`LegendDump`container === {}, Legending`LegendDump`container = Automatic, Legending`LegendDump`container = First[Legending`LegendDump`container]]; ]; If[Legending`LegendDump`position === Automatic, Legending`LegendDump`position = Cases[Legending`LegendDump`appearance, Above | Below | Left | Right]; If[Legending`LegendDump`position === {}, Legending`LegendDump`position = Automatic, Legending`LegendDump`position = First[Legending`LegendDump`position]]; ]; If[Legending`LegendDump`layout === Automatic, Legending`LegendDump`layout = Cases[Legending`LegendDump`appearance, \"Row\" | \"Grid\" | \"Horizontal\" | \"Vertical\" | \"Column\"]; If[Legending`LegendDump`layout === {}, Legending`LegendDump`layout = Automatic, Legending`LegendDump`layout = First[Legending`LegendDump`layout]]; ]; Charting`dbPrint[\"{appearance, container, position, layout}: \", {Legending`LegendDump`appearance, Legending`LegendDump`container, Legending`LegendDump`position, Legending`LegendDump`layout}]; {Legending`LegendDump`wholelayout, Legending`LegendDump`itemlayout, Legending`LegendDump`position} = Switch[{Legending`LegendDump`layout, Legending`LegendDump`position}, {\"Grid\", Automatic}, {\"Column\", \"Left\", Right}, {\"Grid\", _}, {\"Column\", \"Left\", Legending`LegendDump`position}, {\"Row\", Automatic}, {\"Row\", \"Left\", Below}, {\"Row\", _}, {\"Row\", \"Left\", Legending`LegendDump`position}, {\"Horizontal\", Automatic}, {\"Horizontal\", \"Left\", Below}, {\"Horizontal\", _}, {\"Horizontal\", \"Left\", Legending`LegendDump`position}, {\"Vertical\", Automatic}, {\"Column\", \"Left\", Right}, {\"Vertical\", _}, {\"Column\", \"Left\", Legending`LegendDump`position}, {\"Column\", Automatic}, {\"Column\", \"Left\", Right}, {\"Column\", _}, {\"Column\", \"Left\", Legending`LegendDump`position}, {Automatic, _}, Switch[Legending`LegendDump`position, Left | Right, {\"Column\", \"Left\", Legending`LegendDump`position}, Top | Bottom | Above | Below, {\"Row\", \"Left\", Legending`LegendDump`position}, _, {\"Column\", \"Left\", Right}], {{_, _}, _}, Append[Legending`LegendDump`layout, Legending`LegendDump`position]]; Charting`dbPrint[\"{wholelayout, itemlayout, position}: \", {Legending`LegendDump`wholelayout, Legending`LegendDump`itemlayout, Legending`LegendDump`position}]; Legending`LegendDump`legend = Legending`LegendDump`data; Legending`LegendDump`legend = Legending`LegendDump`listLayout[Legending`LegendDump`wholelayout][Legending`LegendDump`itemLayout[Legending`LegendDump`itemlayout][Legending`LegendDump`legend]]; Legending`Legend[Legending`LegendDump`legend, FilterRules[Flatten[{Legending`LegendPosition -> Legending`LegendDump`position, Legending`LegendContainer -> Legending`LegendDump`container, Legending`LegendDump`o}], Options[Legending`Legend]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FontSize -> Automatic, LegendBoxFunction -> Automatic, LegendElementFunction -> Automatic, LegendElementHeight -> Automatic, LegendElementSpacing -> Automatic, LegendElementWidth -> Automatic, LegendLabel -> None, LegendLabelDirection -> Automatic, LegendLabelOffset -> Automatic, LegendLabelPosition -> Automatic, LegendLabelSpacing -> Automatic, LegendLayout -> Automatic, LegendPadding -> Automatic, LegendPartitions -> Automatic, LegendPlacementFunction -> Automatic, LegendStyle -> Automatic, LegendTextDirection -> Automatic, LegendTextOffset -> Automatic, LegendTextSpacing -> Automatic, LegendAppearance -> Automatic, Legending`LegendContainer -> Automatic, Legending`LegendHeading -> None, Legending`LegendImage -> Automatic, Legending`LegendImage -> Automatic, LegendLayout -> Automatic, Legending`LegendPosition -> Automatic, Legending`LegendSize -> Automatic}\nAttributes: {}\nFullName: Legending`GridLegend",
	"Visualization`Utilities`GridLinesExpand":"ObjectType: Symbol\nUsage: Visualization`Utilities`GridLinesExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`GridLinesExpand[Visualization`Utilities`OptionsDump`t:Except[_List]] := {Visualization`Utilities`OptionsDump`t, Visualization`Utilities`OptionsDump`t}\nVisualization`Utilities`GridLinesExpand[{(Visualization`Utilities`OptionsDump`l__)?Visualization`Utilities`OptionsDump`gridListQ}] := Take[{Visualization`Utilities`OptionsDump`l, Visualization`Utilities`OptionsDump`l}, 2]\nVisualization`Utilities`GridLinesExpand[_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`GridLinesExpand",
	"Visualization`Utilities`GridLinesQ":"ObjectType: Symbol\nUsage: Visualization`Utilities`GridLinesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`GridLinesQ[Except[_List]] := True\nVisualization`Utilities`GridLinesQ[{__?Visualization`Utilities`OptionsDump`gridListQ}] := True\nVisualization`Utilities`GridLinesQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`GridLinesQ",
	"ComputationalGeometry`Dump`GridMesh":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`GridMesh\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`GridMesh",
	"Region`Mesh`GridMeshMember":"ObjectType: Symbol\nUsage: Region`Mesh`GridMeshMember\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DistanceClipping -> Automatic, Thickness -> 0}\nAttributes: {}\nFullName: Region`Mesh`GridMeshMember",
	"GIS`GridPointsBoundary":"ObjectType: Symbol\nUsage: GIS`GridPointsBoundary[{{minA, maxA}, {minB, maxB}}, {nA, nB}] returns a pair {L1, {}}\nin which L1 is a list of points corresponding to the boundary of the nA x nB grid of the given ranges.\nGIS`GridPointsBoundary[{{minA, maxA}, {minB, maxB}}, {nA, nB}, True] returns {L1, L2}, in which L1 is the same boundary\nlist and L2 is a list containing about the same number of interior points of the range.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`GridPointsBoundary[{{GIS`GeoRangesDump`minA_, GIS`GeoRangesDump`maxA_}, {GIS`GeoRangesDump`minB_, GIS`GeoRangesDump`maxB_}}, {GIS`GeoRangesDump`nA_, GIS`GeoRangesDump`nB_}, GIS`GeoRangesDump`cross_:False] := With[{GIS`GeoRangesDump`rangeA = GIS`GeoSubdivide[{GIS`GeoRangesDump`minA, GIS`GeoRangesDump`maxA}, GIS`GeoRangesDump`nA + 1], GIS`GeoRangesDump`rangeB = GIS`GeoSubdivide[{GIS`GeoRangesDump`minB, GIS`GeoRangesDump`maxB}, GIS`GeoRangesDump`nB + 1]}, {Developer`ToPackedArray[Join[Thread[{Most[GIS`GeoRangesDump`rangeA], GIS`GeoRangesDump`minB}], Thread[{GIS`GeoRangesDump`maxA, Most[GIS`GeoRangesDump`rangeB]}], Thread[{Most[Reverse[GIS`GeoRangesDump`rangeA]], GIS`GeoRangesDump`maxB}], Thread[{GIS`GeoRangesDump`minA, Most[Reverse[GIS`GeoRangesDump`rangeB]]}]]], If[GIS`GeoRangesDump`cross, Developer`ToPackedArray[Join[Thread[{(3*GIS`GeoRangesDump`minA + GIS`GeoRangesDump`maxA)\/4, GIS`GeoRangesDump`rangeB}], Thread[{(GIS`GeoRangesDump`minA + GIS`GeoRangesDump`maxA)\/2, GIS`GeoRangesDump`rangeB}], Thread[{(GIS`GeoRangesDump`minA + 3*GIS`GeoRangesDump`maxA)\/4, GIS`GeoRangesDump`rangeB}], Thread[{GIS`GeoRangesDump`rangeA, (GIS`GeoRangesDump`minB + GIS`GeoRangesDump`maxB)\/2}]]], {}]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`GridPointsBoundary",
	"GIS`GridPointsList":"ObjectType: Symbol\nUsage: GIS`GridPointsList[{{minA, maxA}, {minB, maxB}}, {nA, nB}] returns a flattened list of points\nin the nA x nB grid of the given ranges.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`GridPointsList[{}, {GIS`GeoRangesDump`nA_, GIS`GeoRangesDump`nB_}] := {}\nGIS`GridPointsList[{{GIS`GeoRangesDump`minA_, GIS`GeoRangesDump`maxA_}, {GIS`GeoRangesDump`minB_, GIS`GeoRangesDump`maxB_}}, {GIS`GeoRangesDump`nA_, GIS`GeoRangesDump`nB_}] := Flatten[GIS`GeoRangesDump`gridofpoints[{{GIS`GeoRangesDump`minA, GIS`GeoRangesDump`maxA}, {GIS`GeoRangesDump`minB, GIS`GeoRangesDump`maxB}}, {GIS`GeoRangesDump`nA, GIS`GeoRangesDump`nB}], 1]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`GridPointsList",
	"Region`Mesh`GridSignedMeshDistance":"ObjectType: Symbol\nUsage: Region`Mesh`GridSignedMeshDistance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DistanceClipping -> Automatic, Thickness -> 0}\nAttributes: {}\nFullName: Region`Mesh`GridSignedMeshDistance",
	"GroebnerGCD`GroebnerPolynomialExtendedGCD":"ObjectType: Symbol\nUsage: GroebnerGCD`GroebnerPolynomialExtendedGCD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GroebnerGCD`GroebnerPolynomialExtendedGCD[GroebnerGCDDump`p1_, GroebnerGCDDump`p2_, GroebnerGCDDump`y_, GroebnerGCDDump`mod_:0] := Catch[Module[{GroebnerGCDDump`e1, GroebnerGCDDump`e2, GroebnerGCDDump`e3, GroebnerGCDDump`polys, GroebnerGCDDump`basis, GroebnerGCDDump`egcdpolys, GroebnerGCDDump`gcdpoly, GroebnerGCDDump`content, GroebnerGCDDump`gcd, GroebnerGCDDump`m1, GroebnerGCDDump`m2}, If[GroebnerGCDDump`mod =!= 0 &&  !PrimeQ[GroebnerGCDDump`mod], Throw[$Failed]]; GroebnerGCDDump`polys = {GroebnerGCDDump`p1*GroebnerGCDDump`e1 + GroebnerGCDDump`e2, GroebnerGCDDump`p2*GroebnerGCDDump`e1 + GroebnerGCDDump`e3}; GroebnerGCDDump`basis = GroebnerBasis[GroebnerGCDDump`polys, {GroebnerGCDDump`e1, GroebnerGCDDump`e2, GroebnerGCDDump`e3, GroebnerGCDDump`y}, MonomialOrder -> Lexicographic, CoefficientDomain -> RationalFunctions, Modulus -> GroebnerGCDDump`mod, Method -> \"Buchberger\", GroebnerGCDDump`DegreeBound -> {{1, 2, 2, 0}, 1}]; If[ !ListQ[GroebnerGCDDump`basis], Throw[$Failed]]; GroebnerGCDDump`egcdpolys = Normal[CoefficientArrays[GroebnerGCDDump`basis, {GroebnerGCDDump`e1, GroebnerGCDDump`e2, GroebnerGCDDump`e3}][[2]]]; GroebnerGCDDump`gcdpoly = Select[GroebnerGCDDump`egcdpolys, #1[[1]] =!= 0 & ]; If[Length[GroebnerGCDDump`gcdpoly] =!= 1, Throw[$Failed], GroebnerGCDDump`gcdpoly = First[GroebnerGCDDump`gcdpoly]; If[Length[GroebnerGCDDump`gcdpoly] =!= 3, Throw[$Failed]]]; GroebnerGCDDump`content = PolynomialGCD @@ CoefficientList[First[GroebnerGCDDump`gcdpoly], GroebnerGCDDump`y]; If[Internal`DependsOnQ[GroebnerGCDDump`content, GroebnerGCDDump`y], Throw[$Failed]]; Together[{First[GroebnerGCDDump`gcdpoly], Rest[GroebnerGCDDump`gcdpoly]}\/GroebnerGCDDump`content]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroebnerGCD`GroebnerPolynomialExtendedGCD",
	"GroebnerBasis`GroebnerWalk`GroebnerWalk":"ObjectType: Symbol\nUsage: GroebnerBasis`GroebnerWalk`GroebnerWalk\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CoefficientDomain -> Automatic, ConvertOnly -> False, DegreeBound -> Infinity, EarlyEliminate -> False, FirstConeSelectionStrategy -> SimulatedHomogenization, InitialMonomialOrder -> DegreeReverseLexicographic, MinimalGroebnerBasis -> True, Modulus -> 0, MonomialOrder -> Lexicographic, ParameterVariables -> {}, Perturbation -> True, RestConesMethod -> Buchberger, RestConesSelectionStrategy -> None, Sort -> False, Tolerance -> 0}\nAttributes: {}\nFullName: GroebnerBasis`GroebnerWalk`GroebnerWalk",
	"NDSolve`FEM`GroupBoundariesByNormals":"ObjectType: Symbol\nUsage: NDSolve`FEM`GroupBoundariesByNormals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`GroupBoundariesByNormals[NDSolve`FEM`ElementMeshDump`bmesh_, NDSolve`FEM`ElementMeshDump`t_] \/; NDSolve`FEM`ElementMeshQ[NDSolve`FEM`ElementMeshDump`bmesh] := Block[{NDSolve`FEM`ElementMeshDump`nn, NDSolve`FEM`ElementMeshDump`bcc, NDSolve`FEM`ElementMeshDump`range, NDSolve`FEM`ElementMeshDump`data, NDSolve`FEM`ElementMeshDump`sa, NDSolve`FEM`ElementMeshDump`len}, NDSolve`FEM`ElementMeshDump`nn = NDSolve`FEM`ElementMeshDump`bmesh[\"BoundaryNormals\"]; If[ !MatchQ[NDSolve`FEM`ElementMeshDump`nn, {__?MatrixQ}], Return[{0, {}}, Block]]; NDSolve`FEM`ElementMeshDump`nn = Join @@ NDSolve`FEM`ElementMeshDump`nn; NDSolve`FEM`ElementMeshDump`len = Length[NDSolve`FEM`ElementMeshDump`nn]; NDSolve`FEM`ElementMeshDump`bcc = NDSolve`FEM`ElementMeshDump`bmesh[\"BoundaryConnectivity\"]; NDSolve`FEM`ElementMeshDump`range = Range[NDSolve`FEM`ElementMeshDump`len]; NDSolve`FEM`ElementMeshDump`data = NDSolve`FEM`ElementMeshDump`pack[Join @@ MapThread[NDSolve`FEM`ElementMeshDump`selectNeighborsByNormals[#1, #2, NDSolve`FEM`ElementMeshDump`nn, NDSolve`FEM`ElementMeshDump`t] & , {NDSolve`FEM`ElementMeshDump`range, NDSolve`FEM`ElementMeshDump`bcc}]]; NDSolve`FEM`ElementMeshDump`sa = SparseArray[NDSolve`FEM`ElementMeshDump`data -> 1, {Length[NDSolve`FEM`ElementMeshDump`bcc], Length[NDSolve`FEM`ElementMeshDump`bcc]}]; NDSolve`FEM`ElementMeshDump`data = Null; {NDSolve`FEM`ElementMeshDump`len, SparseArray`StronglyConnectedComponents[NDSolve`FEM`ElementMeshDump`sa]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`GroupBoundariesByNormals",
	"Charting`GroupedPlot":"ObjectType: Symbol\nUsage: Charting`GroupedPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`GroupedPlot[System`GroupedPlotDump`fulldata_, System`GroupedPlotDump`slicedice_, System`GroupedPlotDump`o:OptionsPattern[]] := Charting`GroupedPlot[System`GroupedPlotDump`fulldata, System`GroupedPlotDump`slicedice, Automatic, System`GroupedPlotDump`o]\nCharting`GroupedPlot[System`GroupedPlotDump`fulldata_, {System`GroupedPlotDump`type:\"Column\" | \"Row\" | \"Grid\", System`GroupedPlotDump`d_}, System`GroupedPlotDump`fn_:Automatic, System`GroupedPlotDump`o:OptionsPattern[{}]] := Block[{System`GroupedPlotDump`data, System`GroupedPlotDump`slice, System`GroupedPlotDump`dice, System`GroupedPlotDump`plotter = System`GroupedPlotDump`fn, System`GroupedPlotDump`depth, System`GroupedPlotDump`plots, System`GroupedPlotDump`labels, System`GroupedPlotDump`method}, System`GroupedPlotDump`depth = 2; System`GroupedPlotDump`data = System`GroupedPlotDump`listify[System`GroupedPlotDump`fulldata]; System`GroupedPlotDump`labels = PadRight[Charting`padList[OptionValue[\"ItemLabels\"]], Length[System`GroupedPlotDump`data], None]; System`GroupedPlotDump`data = System`GroupedPlotDump`partitionData[System`GroupedPlotDump`data, System`GroupedPlotDump`type, System`GroupedPlotDump`d]; System`GroupedPlotDump`labels = System`GroupedPlotDump`partitionData[System`GroupedPlotDump`labels, System`GroupedPlotDump`type, System`GroupedPlotDump`d]; If[System`GroupedPlotDump`plotter === Automatic, System`GroupedPlotDump`plotter = ListPlot]; System`GroupedPlotDump`plots = MapThread[If[MissingQ[#1], #1, System`GroupedPlotDump`plotter[#1, FilterRules[{PlotLabel -> #2, System`GroupedPlotDump`o}, Options[System`GroupedPlotDump`plotter]]]] & , {System`GroupedPlotDump`data, System`GroupedPlotDump`labels}, System`GroupedPlotDump`depth]; System`GroupedPlotDump`method = Select[OptionValue[{System`GroupedPlotDump`o, \"Method\" -> {}}, \"Method\"], OptionQ]; Charting`GraphicsAlign[System`GroupedPlotDump`plots, FilterRules[{System`GroupedPlotDump`o, System`GroupedPlotDump`method, \"SharedScales\" -> All, \"GridTicks\" -> \"Interior\", \"ScalingFunctions\" -> OptionValue[\"ScalingFunctions\"], \"DefaultTicks\" -> OptionValue[\"DefaultTicks\"]}, Options[Charting`GraphicsAlign]]]]\nCharting`GroupedPlot[System`GroupedPlotDump`fulldata_, System`GroupedPlotDump`slicedice_, System`GroupedPlotDump`fn_:Automatic, System`GroupedPlotDump`o:OptionsPattern[]] := Block[{System`GroupedPlotDump`data, System`GroupedPlotDump`slice, System`GroupedPlotDump`dice, System`GroupedPlotDump`plotter = System`GroupedPlotDump`fn, System`GroupedPlotDump`depth, System`GroupedPlotDump`plots}, If[Head[System`GroupedPlotDump`slicedice] === Rule, System`GroupedPlotDump`slice = First[System`GroupedPlotDump`slicedice]; System`GroupedPlotDump`dice = Last[System`GroupedPlotDump`slicedice], System`GroupedPlotDump`slice = System`GroupedPlotDump`slicedice; System`GroupedPlotDump`dice = Automatic]; System`GroupedPlotDump`depth = System`GroupedPlotDump`finalDepth[System`GroupedPlotDump`slice]; System`GroupedPlotDump`data = Charting`SliceAndDice[System`GroupedPlotDump`fulldata, System`GroupedPlotDump`slice, System`GroupedPlotDump`dice]; If[System`GroupedPlotDump`plotter === Automatic, System`GroupedPlotDump`plotter = ListPlot]; System`GroupedPlotDump`plots = Map[System`GroupedPlotDump`plotter[#1, FilterRules[{System`GroupedPlotDump`o}, Options[System`GroupedPlotDump`plotter]]] & , System`GroupedPlotDump`data, {System`GroupedPlotDump`depth}]; Charting`GraphicsAlign[System`GroupedPlotDump`listify[System`GroupedPlotDump`plots], FilterRules[{System`GroupedPlotDump`o}, Options[Charting`GraphicsAlign]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, SharedScales -> None, ItemLabels -> None, ScalingFunctions -> None, DefaultTicks -> {Automatic, Automatic}}\nAttributes: {}\nFullName: Charting`GroupedPlot",
	"BoxForm`GroupName":"ObjectType: Symbol\nUsage: BoxForm`GroupName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`GroupName",
	"Internal`GroupTheoryOptions":"ObjectType: Symbol\nUsage: Internal`GroupTheoryOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`GroupTheoryOptions[] := \"GroupTheoryOptions\" \/. SystemOptions[\"GroupTheoryOptions\"]\nInternal`GroupTheoryOptions[GroupTheory`PermutationGroups`Private`string_String] := Internal`GroupTheoryOptions[{GroupTheory`PermutationGroups`Private`string}]\nInternal`GroupTheoryOptions[GroupTheory`PermutationGroups`Private`strings_List] := With[{GroupTheory`PermutationGroups`Private`invalid = Complement[GroupTheory`PermutationGroups`Private`strings, {\"StandardListToCyclesConvention\", \"RandomizedSchreierSimsChecks\"}]}, Cases[Internal`GroupTheoryOptions[], _[Alternatives @@ GroupTheory`PermutationGroups`Private`strings, _]] \/; GroupTheory`PermutationGroups`Private`invalid === {} || (Message[Internal`GroupTheoryOptions::sysname, #1] & ) \/@ GroupTheory`PermutationGroups`Private`invalid]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`GroupTheoryOptions",
	"Image`SegmentationDump`GrowCut":"ObjectType: Symbol\nUsage: Image`SegmentationDump`GrowCut\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SegmentationDump`GrowCut",
	"Image`GrowCutBinarize":"ObjectType: Symbol\nUsage: Image`GrowCutBinarize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`GrowCutBinarize[Image`SegmentationDump`s___] := Block[{Image`SegmentationDump`a, Image`SegmentationDump`res}, Image`SegmentationDump`a = System`Private`Arguments[Image`GrowCutBinarize[Image`SegmentationDump`s], 3]; Image`SegmentationDump`res \/; Image`SegmentationDump`a =!= {} && (Image`SegmentationDump`res = Image`SegmentationDump`iGrowCutBinarize @@ Image`SegmentationDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CornerNeighbors -> True, MaxIterations -> Automatic}\nAttributes: {}\nFullName: Image`GrowCutBinarize",
	"Image`SegmentationDump`GrowCutComponents":"ObjectType: Symbol\nUsage: Image`SegmentationDump`GrowCutComponents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SegmentationDump`GrowCutComponents",
	"System`Dump`GRTest":"ObjectType: Symbol\nUsage: System`Dump`GRTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`GRTest[Graphics[__]] := True\nSystem`Dump`GRTest[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`GRTest",
	"NIntegrate`GRule":"ObjectType: Symbol\nUsage: NIntegrate`GRule\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: NIntegrate`GRule[{NIntegrate`CommonRulesDump`absc_, NIntegrate`CommonRulesDump`weights_, NIntegrate`CommonRulesDump`errweights_}, NIntegrate`CommonRulesDump`rest___][\"ApproximateIntegral\"[NIntegrate`CommonRulesDump`region_]] := Block[{NIntegrate`CommonRulesDump`fs, NIntegrate`CommonRulesDump`isum, NIntegrate`CommonRulesDump`esum, NIntegrate`CommonRulesDump`a, NIntegrate`CommonRulesDump`b}, {{NIntegrate`CommonRulesDump`a, NIntegrate`CommonRulesDump`b}} = NIntegrate`CommonRulesDump`region[\"Boundaries\"[]]; NIntegrate`CommonRulesDump`fs = (NIntegrate`CommonRulesDump`region[\"EvaluateTransformedIntegrand\"[{#1}]] & ) \/@ NIntegrate`CommonRulesDump`absc; NIntegrate`CommonRulesDump`isum = NIntegrate`CommonRulesDump`fs . NIntegrate`CommonRulesDump`weights; NIntegrate`CommonRulesDump`esum = Abs[NIntegrate`CommonRulesDump`fs . NIntegrate`CommonRulesDump`errweights]; {NIntegrate`CommonRulesDump`isum, NIntegrate`CommonRulesDump`esum, 1, NIntegrate`CommonRulesDump`a + (NIntegrate`CommonRulesDump`b - NIntegrate`CommonRulesDump`a)*NIntegrate`CommonRulesDump`absc, NIntegrate`CommonRulesDump`fs}]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`GRule",
	"System`Dump`GTest":"ObjectType: Symbol\nUsage: System`Dump`GTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`GTest[System`Dump`x_] := MemberQ[{Graphics, Graphics3D, SurfaceGraphics, DensityGraphics, ContourGraphics}, System`Dump`x]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`GTest",
	"ResourceFunctionHelpers`GyrationTensor":"ObjectType: Symbol\nUsage: GyrationTensor[list] returns the gyration tensor (or derived quantities) of a list of coordinates.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`GyrationTensor[ResourceFunctionHelpers`GyrationTensor`Private`coords_List, ResourceFunctionHelpers`GyrationTensor`Private`QoI:\"GyrationTensor\" | \"RadiusOfGyration\" | \"Eigenvalues\" | \"Acircularity\" | \"NormalizedAcircularity\" | \"Asphericity\" | \"NormalizedAsphericity\" | \"Acylindricity\" | \"NormalizedAcylindricity\" | \"RelativeAnisotropy\" | \"HyperAsphericity\" | \"NormalizedHyperAsphericity\" | All:\"GyrationTensor\"] := Module[{ResourceFunctionHelpers`GyrationTensor`Private`dim, ResourceFunctionHelpers`GyrationTensor`Private`axialComponents, ResourceFunctionHelpers`GyrationTensor`Private`axialMeans, ResourceFunctionHelpers`GyrationTensor`Private`eigens, ResourceFunctionHelpers`GyrationTensor`Private`Tensor, ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration, ResourceFunctionHelpers`GyrationTensor`Private`associationList, ResourceFunctionHelpers`GyrationTensor`Private`Acircularity, ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcircularity, ResourceFunctionHelpers`GyrationTensor`Private`Asphericity, ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAsphericity, ResourceFunctionHelpers`GyrationTensor`Private`Acylindricity, ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcylindricity, ResourceFunctionHelpers`GyrationTensor`Private`RelativeAnisotropy, ResourceFunctionHelpers`GyrationTensor`Private`HyperAsphericity, ResourceFunctionHelpers`GyrationTensor`Private`NormalizedHyperAsphericity, ResourceFunctionHelpers`GyrationTensor`Private`resFlag = True, ResourceFunctionHelpers`GyrationTensor`Private`metricFlag = True, ResourceFunctionHelpers`GyrationTensor`Private`derivedMetricsRequested = False}, If[(MatrixQ[#1] && FreeQ[#1, {}] && Length[Tally[N[#1]]] > 1 & )[ResourceFunctionHelpers`GyrationTensor`Private`coords], ResourceFunctionHelpers`GyrationTensor`Private`resFlag = True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`GyrationTensor::coords]; ResourceFunctionHelpers`GyrationTensor`Private`resFlag = False; ]; ResourceFunctionHelpers`GyrationTensor`Private`dim = Length[ResourceFunctionHelpers`GyrationTensor`Private`coords[[1]]]; ResourceFunctionHelpers`GyrationTensor`Private`derivedMetricsRequested =  !MatchQ[ResourceFunctionHelpers`GyrationTensor`Private`QoI, \"GyrationTensor\"]; Which[MemberQ[{All, \"GyrationTensor\", \"Eigenvalues\", \"RadiusOfGyration\"}, ResourceFunctionHelpers`GyrationTensor`Private`QoI], ResourceFunctionHelpers`GyrationTensor`Private`metricFlag = True, ResourceFunctionHelpers`GyrationTensor`Private`dim == 2 && MemberQ[{All, \"Acircularity\", \"NormalizedAcircularity\"}, ResourceFunctionHelpers`GyrationTensor`Private`QoI], ResourceFunctionHelpers`GyrationTensor`Private`metricFlag = True, ResourceFunctionHelpers`GyrationTensor`Private`dim == 3 && MemberQ[{All, \"Asphericity\", \"NormalizedAsphericity\", \"Acylindricity\", \"NormalizedAcylindricity\", \"RelativeAnisotropy\"}, ResourceFunctionHelpers`GyrationTensor`Private`QoI], ResourceFunctionHelpers`GyrationTensor`Private`metricFlag = True, ResourceFunctionHelpers`GyrationTensor`Private`dim >= 4 && MemberQ[{All, \"HyperAsphericity\", \"NormalizedHyperAsphericity\"}, ResourceFunctionHelpers`GyrationTensor`Private`QoI], ResourceFunctionHelpers`GyrationTensor`Private`metricFlag = True, True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`GyrationTensor::metric]; ResourceFunctionHelpers`GyrationTensor`Private`metricFlag = False]; (ResourceFunctionHelpers`GyrationTensor`Private`axialComponents = Transpose[ResourceFunctionHelpers`GyrationTensor`Private`coords]; ResourceFunctionHelpers`GyrationTensor`Private`axialMeans = Mean[ResourceFunctionHelpers`GyrationTensor`Private`coords]; ResourceFunctionHelpers`GyrationTensor`Private`Tensor = (1*Table[(ResourceFunctionHelpers`GyrationTensor`Private`axialComponents[[ResourceFunctionHelpers`GyrationTensor`Private`i]] - ResourceFunctionHelpers`GyrationTensor`Private`axialMeans[[ResourceFunctionHelpers`GyrationTensor`Private`i]]) . (ResourceFunctionHelpers`GyrationTensor`Private`axialComponents[[ResourceFunctionHelpers`GyrationTensor`Private`j]] - ResourceFunctionHelpers`GyrationTensor`Private`axialMeans[[ResourceFunctionHelpers`GyrationTensor`Private`j]]), {ResourceFunctionHelpers`GyrationTensor`Private`i, Length[ResourceFunctionHelpers`GyrationTensor`Private`axialComponents]}, {ResourceFunctionHelpers`GyrationTensor`Private`j, Length[ResourceFunctionHelpers`GyrationTensor`Private`axialComponents]}])\/Length[ResourceFunctionHelpers`GyrationTensor`Private`coords]; If[ResourceFunctionHelpers`GyrationTensor`Private`derivedMetricsRequested, ResourceFunctionHelpers`GyrationTensor`Private`eigens = Chop \/@ NumericalSort[Eigenvalues[ResourceFunctionHelpers`GyrationTensor`Private`Tensor]]; ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration = Sqrt[Tr[ResourceFunctionHelpers`GyrationTensor`Private`Tensor]]; ResourceFunctionHelpers`GyrationTensor`Private`associationList = Association[\"GyrationTensor\" -> ResourceFunctionHelpers`GyrationTensor`Private`Tensor, \"RadiusOfGyration\" -> ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration, \"Eigenvalues\" -> ResourceFunctionHelpers`GyrationTensor`Private`eigens]; ]; If[ResourceFunctionHelpers`GyrationTensor`Private`dim == 2 && ResourceFunctionHelpers`GyrationTensor`Private`derivedMetricsRequested, ResourceFunctionHelpers`GyrationTensor`Private`Acircularity = ResourceFunctionHelpers`GyrationTensor`Private`eigens[[-1]] - ResourceFunctionHelpers`GyrationTensor`Private`eigens[[1]]; ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcircularity = ResourceFunctionHelpers`GyrationTensor`Private`Acircularity\/ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration^2; (AppendTo[ResourceFunctionHelpers`GyrationTensor`Private`associationList, #1] & ) \/@ {\"Acircularity\" -> ResourceFunctionHelpers`GyrationTensor`Private`Acircularity, \"NormalizedAcircularity\" -> ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcircularity}; ]; If[ResourceFunctionHelpers`GyrationTensor`Private`dim == 3 && ResourceFunctionHelpers`GyrationTensor`Private`derivedMetricsRequested, ResourceFunctionHelpers`GyrationTensor`Private`Asphericity = ResourceFunctionHelpers`GyrationTensor`Private`eigens[[-1]] - Mean[ResourceFunctionHelpers`GyrationTensor`Private`eigens[[1 ;; -2]]]; ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAsphericity = ResourceFunctionHelpers`GyrationTensor`Private`Asphericity\/ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration^2; ResourceFunctionHelpers`GyrationTensor`Private`Acylindricity = ResourceFunctionHelpers`GyrationTensor`Private`eigens[[2]] - ResourceFunctionHelpers`GyrationTensor`Private`eigens[[1]]; ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcylindricity = ResourceFunctionHelpers`GyrationTensor`Private`Acylindricity\/ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration^2; ResourceFunctionHelpers`GyrationTensor`Private`RelativeAnisotropy = (ResourceFunctionHelpers`GyrationTensor`Private`Asphericity^2 + (3*ResourceFunctionHelpers`GyrationTensor`Private`Acylindricity^2)\/4)\/ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration^4; (AppendTo[ResourceFunctionHelpers`GyrationTensor`Private`associationList, #1] & ) \/@ {\"Asphericity\" -> ResourceFunctionHelpers`GyrationTensor`Private`Asphericity, \"NormalizedAsphericity\" -> ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAsphericity, \"Acylindricity\" -> ResourceFunctionHelpers`GyrationTensor`Private`Acylindricity, \"NormalizedAcylindricity\" -> ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcylindricity, \"RelativeAnisotropy\" -> ResourceFunctionHelpers`GyrationTensor`Private`RelativeAnisotropy}; ]; If[ResourceFunctionHelpers`GyrationTensor`Private`dim >= 4 && ResourceFunctionHelpers`GyrationTensor`Private`derivedMetricsRequested, ResourceFunctionHelpers`GyrationTensor`Private`HyperAsphericity = ResourceFunctionHelpers`GyrationTensor`Private`eigens[[-1]] - Mean[ResourceFunctionHelpers`GyrationTensor`Private`eigens[[1 ;; -2]]]; ResourceFunctionHelpers`GyrationTensor`Private`NormalizedHyperAsphericity = ResourceFunctionHelpers`GyrationTensor`Private`HyperAsphericity\/ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration^2; (AppendTo[ResourceFunctionHelpers`GyrationTensor`Private`associationList, #1] & ) \/@ {\"HyperAsphericity\" -> ResourceFunctionHelpers`GyrationTensor`Private`HyperAsphericity, \"NormalizedHyperAsphericity\" -> ResourceFunctionHelpers`GyrationTensor`Private`NormalizedHyperAsphericity}; ]; Switch[ResourceFunctionHelpers`GyrationTensor`Private`QoI, \"GyrationTensor\", ResourceFunctionHelpers`GyrationTensor`Private`Tensor, \"RadiusOfGyration\", ResourceFunctionHelpers`GyrationTensor`Private`RadiusOfGyration, \"Eigenvalues\", ResourceFunctionHelpers`GyrationTensor`Private`eigens, \"Acircularity\", ResourceFunctionHelpers`GyrationTensor`Private`Acircularity, \"NormalizedAcircularity\", ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcircularity, \"Asphericity\", ResourceFunctionHelpers`GyrationTensor`Private`Asphericity, \"NormalizedAsphericity\", ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAsphericity, \"Acylindricity\", ResourceFunctionHelpers`GyrationTensor`Private`Acylindricity, \"NormalizedAcylindricity\", ResourceFunctionHelpers`GyrationTensor`Private`NormalizedAcylindricity, \"RelativeAnisotropy\", ResourceFunctionHelpers`GyrationTensor`Private`RelativeAnisotropy, \"HyperAsphericity\", ResourceFunctionHelpers`GyrationTensor`Private`HyperAsphericity, \"NormalizedHyperAsphericity\", ResourceFunctionHelpers`GyrationTensor`Private`NormalizedHyperAsphericity, All, ResourceFunctionHelpers`GyrationTensor`Private`associationList]) \/; ResourceFunctionHelpers`GyrationTensor`Private`resFlag && ResourceFunctionHelpers`GyrationTensor`Private`metricFlag]\nSubValues: None\nDefaultValues: SyntaxInformation[ResourceFunctionHelpers`GyrationTensor] = {\"ArgumentsPattern\" -> {_, _.}}\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`GyrationTensor",
	"Region`Polyhedron`GyroPolyhedron":"ObjectType: Symbol\nUsage: Region`Polyhedron`GyroPolyhedron\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Polyhedron`GyroPolyhedron[Region`SnubPolyhedronDump`expr__] := Block[{Region`SnubPolyhedronDump`res}, Region`SnubPolyhedronDump`res = Region`SnubPolyhedronDump`dGyroPolyhedron[Region`SnubPolyhedronDump`expr]; Region`SnubPolyhedronDump`res \/; Region`SnubPolyhedronDump`res =!= $Failed]\nRegion`Polyhedron`GyroPolyhedron[Region`SnubPolyhedronDump`expr___] := (Region`SnubPolyhedronDump`mGyroPolyhedron[Region`SnubPolyhedronDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {WorkingPrecision -> Automatic}\nAttributes: {}\nFullName: Region`Polyhedron`GyroPolyhedron",
	"Image`TransformsDump`H":"ObjectType: Symbol\nUsage: Image`TransformsDump`H\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`H",
	"Integrate`H":"ObjectType: Symbol\nUsage: Integrate`H\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`H",
	"Random`Private`H2PE":"ObjectType: Symbol\nUsage: Random`Private`H2PE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`H2PE",
	"NDSolve`HairerOstermannSequenceFunction":"ObjectType: Symbol\nUsage: NDSolve`HairerOstermannSequenceFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`HairerOstermannSequenceFunction[(NDSolve`ExtrapolationDump`n1_)?Internal`PositiveMachineIntegerQ, (NDSolve`ExtrapolationDump`n2_)?Internal`PositiveMachineIntegerQ, _.] := Range[2*NDSolve`ExtrapolationDump`n1 - 1, 2*NDSolve`ExtrapolationDump`n2 - 1, 2] \/; NDSolve`ExtrapolationDump`n1 <= NDSolve`ExtrapolationDump`n2\nSubValues: None\nDefaultValues: NDSolve`HairerOstermannSequenceFunction \/: Default[NDSolve`HairerOstermannSequenceFunction, 3] = 1\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`HairerOstermannSequenceFunction",
	"Graphics`HalftoneShadingDirective":"ObjectType: Symbol\nUsage: Graphics`HalftoneShadingDirective\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`HalftoneShadingDirective[Graphics`HalftoneShadingDump`a__] \/; System`Utilities`HashTableContainsQ[Graphics`HalftoneShadingDump`RampShaderHashTable, Graphics`HalftoneShadingDump`a] := System`Utilities`HashTableGet[Graphics`HalftoneShadingDump`RampShaderHashTable, Graphics`HalftoneShadingDump`a]\nGraphics`HalftoneShadingDirective[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`HalftoneShadingDirective",
	"Audio`Internals`HALPause":"ObjectType: Symbol\nUsage: Audio`Internals`HALPause\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALPause[Audio`RendererDump`renderer_Audio`Internals`Renderer] := If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Quiet[Audio`AudioStreamInternals`pauseAudioStream[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]]]; True, False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALPause",
	"Audio`Internals`HALPlay":"ObjectType: Symbol\nUsage: Audio`Internals`HALPlay\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALPlay[Audio`RendererDump`renderer_Audio`Internals`Renderer, Dynamic[Audio`RendererDump`ps_], Dynamic[Audio`RendererDump`pos_]] := (If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] === Null, Audio`RendererDump`CreateAudioStream[Audio`RendererDump`renderer, Dynamic[Audio`RendererDump`ps], Dynamic[Audio`RendererDump`pos]]; ]; If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Module[{Audio`RendererDump`stream = Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]}, Audio`RendererDump`stream[\"Position\"] = Audio`RendererDump`pos; Audio`RendererDump`stream[\"Position\"]; Catch[Audio`AudioStreamInternals`playAudioStream[Audio`RendererDump`stream]]; ]; True, False])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALPlay",
	"Audio`Internals`HALSeek":"ObjectType: Symbol\nUsage: Audio`Internals`HALSeek\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALSeek[Audio`RendererDump`renderer_Audio`Internals`Renderer, Audio`RendererDump`pos_Real:0.] := Module[{Audio`RendererDump`stream}, If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Audio`RendererDump`stream = Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]; Quiet[Audio`RendererDump`stream[\"Position\"] = Audio`RendererDump`pos]; True, False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALSeek",
	"Audio`Internals`HALSetLoop":"ObjectType: Symbol\nUsage: Audio`Internals`HALSetLoop\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALSetLoop[Audio`RendererDump`renderer_Audio`Internals`Renderer, (Audio`RendererDump`loop_)?BooleanQ] := Module[{Audio`RendererDump`stream}, If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Audio`RendererDump`stream = Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]; Quiet[Audio`RendererDump`stream[\"Looping\"] = Audio`RendererDump`loop]; True, False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALSetLoop",
	"Audio`Internals`HALSetOutputDevice":"ObjectType: Symbol\nUsage: Audio`Internals`HALSetOutputDevice\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALSetOutputDevice[Audio`RendererDump`renderer_Audio`Internals`Renderer, Audio`RendererDump`audioDevice_] \/; Audio`RendererDump`validDevice[Audio`RendererDump`audioDevice] := Module[{Audio`RendererDump`stream}, If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Audio`RendererDump`stream = Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]; Quiet[Audio`RendererDump`stream[\"AudioOutputDevice\"] = Audio`RendererDump`audioDevice]; ]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALSetOutputDevice",
	"Audio`Internals`HALSetVolume":"ObjectType: Symbol\nUsage: Audio`Internals`HALSetVolume\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALSetVolume[Audio`RendererDump`renderer_Audio`Internals`Renderer, Audio`RendererDump`vol_Real:0.] := Module[{Audio`RendererDump`stream}, If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Audio`RendererDump`stream = Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]; Quiet[Audio`RendererDump`stream[\"SoundVolume\"] = Audio`RendererDump`vol]; True, False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALSetVolume",
	"Audio`Internals`HALStop":"ObjectType: Symbol\nUsage: Audio`Internals`HALStop\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALStop[Audio`RendererDump`renderer_Audio`Internals`Renderer] := If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Quiet[Audio`AudioStreamInternals`stopAudioStream[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]]]; True, False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALStop",
	"Audio`Internals`HALSuspend":"ObjectType: Symbol\nUsage: Audio`Internals`HALSuspend\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Internals`HALSuspend[Audio`RendererDump`renderer_Audio`Internals`Renderer] := Module[{}, If[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer] =!= Null, Quiet[Audio`AudioStreamInternals`pauseAudioStream[Audio`RendererDump`GetMapValue[\"AudioStreamMap\", Audio`RendererDump`renderer]]]; True, False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Internals`HALSuspend",
	"SparseArray`HamiltonianCycle":"ObjectType: Symbol\nUsage: SparseArray`HamiltonianCycle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`HamiltonianCycle",
	"NIntegrate`Hammersley":"ObjectType: Symbol\nUsage: NIntegrate`Hammersley\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`Hammersley",
	"Control`Sim`HandleDiracDelta":"None",
	"Language`HandleMutation":"ObjectType: Symbol\nUsage: Language`HandleMutation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Language`HandleMutation",
	"Internal`HandlerBlock":"ObjectType: Symbol\nUsage: Internal`HandlerBlock\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Internal`HandlerBlock",
	"Internal`Handlers":"ObjectType: Symbol\nUsage: Internal`Handlers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`Handlers",
	"NDSolve`FEM`HangingNodeLagrangeMultipliers":"ObjectType: Symbol\nUsage: NDSolve`FEM`HangingNodeLagrangeMultipliers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`HangingNodeLagrangeMultipliers[NDSolve`FEM`BoundaryConditionsDump`coords_, NDSolve`FEM`BoundaryConditionsDump`hn_, NDSolve`FEM`BoundaryConditionsDump`order:{__Integer}, NDSolve`FEM`BoundaryConditionsDump`offset:{__Integer}] \/; Length[NDSolve`FEM`BoundaryConditionsDump`offset] === Length[NDSolve`FEM`BoundaryConditionsDump`order] + 1 := Block[{NDSolve`FEM`BoundaryConditionsDump`prec = Precision[NDSolve`FEM`BoundaryConditionsDump`coords[[1]]], NDSolve`FEM`BoundaryConditionsDump`distance, NDSolve`FEM`BoundaryConditionsDump`res, NDSolve`FEM`BoundaryConditionsDump`tmp}, NDSolve`FEM`BoundaryConditionsDump`distance[NDSolve`FEM`BoundaryConditionsDump`id1_, NDSolve`FEM`BoundaryConditionsDump`id2_] := Sqrt[Total[Subtract @@ NDSolve`FEM`BoundaryConditionsDump`coords[[{NDSolve`FEM`BoundaryConditionsDump`id1, NDSolve`FEM`BoundaryConditionsDump`id2}]]^2]]; NDSolve`FEM`BoundaryConditionsDump`res = ConstantArray[Null, {Length[NDSolve`FEM`BoundaryConditionsDump`order]}]; Do[NDSolve`FEM`BoundaryConditionsDump`tmp = NDSolve`FEM`ToLowerOrderHangingNodes[NDSolve`FEM`BoundaryConditionsDump`hn, NDSolve`FEM`BoundaryConditionsDump`order[[NDSolve`FEM`BoundaryConditionsDump`i]]]; NDSolve`FEM`BoundaryConditionsDump`res[[NDSolve`FEM`BoundaryConditionsDump`i]] = NDSolve`FEM`BoundaryConditionsDump`iHangingNodeLagrangeMultipliersBody[NDSolve`FEM`BoundaryConditionsDump`distance, NDSolve`FEM`BoundaryConditionsDump`tmp, NDSolve`FEM`BoundaryConditionsDump`offset[[NDSolve`FEM`BoundaryConditionsDump`i]], NDSolve`FEM`BoundaryConditionsDump`prec]; , {NDSolve`FEM`BoundaryConditionsDump`i, Length[NDSolve`FEM`BoundaryConditionsDump`order]}]; (Flatten[#1, 1] & ) \/@ Transpose[NDSolve`FEM`BoundaryConditionsDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`HangingNodeLagrangeMultipliers",
	"ResourceFunctionHelpers`HarmonicConjugate":"ObjectType: Symbol\nUsage: HarmonicConjugate[expr_, var_] returns the harmonic conjugate of the expression expr specified by the variable var.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`HarmonicConjugate[ResourceFunctionHelpers`HarmonicConjugate`Private`expr_, {ResourceFunctionHelpers`HarmonicConjugate`Private`varx_, ResourceFunctionHelpers`HarmonicConjugate`Private`vary_}, ResourceFunctionHelpers`HarmonicConjugate`Private`specification:All | \"HarmonicConjugate\" | \"ContourPlot\":\"HarmonicConjugate\"] := Module[{ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicFlag = ResourceFunctionHelpers`HarmonicConjugate`Private`isHarmonicQ[ResourceFunctionHelpers`HarmonicConjugate`Private`expr, ResourceFunctionHelpers`HarmonicConjugate`Private`varx, ResourceFunctionHelpers`HarmonicConjugate`Private`vary], ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicC}, If[ !ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicFlag, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`HarmonicConjugate::notharmonic, ResourceFunctionHelpers`HarmonicConjugate`Private`expr]]; (ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicC = ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicConjugate[ResourceFunctionHelpers`HarmonicConjugate`Private`expr, {ResourceFunctionHelpers`HarmonicConjugate`Private`varx, ResourceFunctionHelpers`HarmonicConjugate`Private`vary}]; Switch[ResourceFunctionHelpers`HarmonicConjugate`Private`specification, \"HarmonicConjugate\", ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicC, \"ContourPlot\", ResourceFunctionHelpers`HarmonicConjugate`Private`contourPlot[ResourceFunctionHelpers`HarmonicConjugate`Private`expr, {ResourceFunctionHelpers`HarmonicConjugate`Private`varx, ResourceFunctionHelpers`HarmonicConjugate`Private`vary}], All, Association[\"HarmonicConjugate\" -> ResourceFunctionHelpers`HarmonicConjugate`Private`expr, \"ContourPlot\" -> ResourceFunctionHelpers`HarmonicConjugate`Private`contourPlot[ResourceFunctionHelpers`HarmonicConjugate`Private`expr, {ResourceFunctionHelpers`HarmonicConjugate`Private`varx, ResourceFunctionHelpers`HarmonicConjugate`Private`vary}]]]) \/; ResourceFunctionHelpers`HarmonicConjugate`Private`harmonicFlag]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`HarmonicConjugate",
	"Internal`HarmonicNumber":"ObjectType: Symbol\nUsage: Internal`HarmonicNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HarmonicNumber",
	"SpecialFunctions`HarmonicPolyLog":"ObjectType: Symbol\nUsage: SpecialFunctions`HarmonicPolyLog\nDocumentation: None\nOwnValues: None\nUpValues: Derivative[{(0)..}, 1][SpecialFunctions`HarmonicPolyLog] ^:= Piecewise[{{SpecialFunctions`HarmonicPolyLog[Rest[#1], #2]\/(1 + #2), First[#1] == -1}, {SpecialFunctions`HarmonicPolyLog[Rest[#1], #2]\/(1 - #2), First[#1] == 1}, {SpecialFunctions`HarmonicPolyLog[Prepend[Rest[#1], First[#1] - Sign[First[#1]]], #2]\/#2, Abs[First[#1]] > 1}, {SpecialFunctions`HarmonicPolyLog[Rest[#1], #2]\/#2, First[#1] == 0}}, Undefined] & \nDerivative[System`HarmonicPolyLogDump`mm:{(0)..}, (System`HarmonicPolyLogDump`n_Integer)?(#1 > 1 & )][SpecialFunctions`HarmonicPolyLog] ^:= If[#2 == 0, If[Last[#1] =!= 0, If[System`HarmonicPolyLogDump`n >= Length[System`HarmonicPolyLogDump`ToAbbreviatedNotation[#1]], System`HarmonicPolyLogDump`n!*SpecialFunctions`MultipleFiniteHarmonicSumS[#1, System`HarmonicPolyLogDump`n], 0], SpecialFunctions`HarmonicPolyLog[{0}, 0]], Derivative[System`HarmonicPolyLogDump`mm, 1][Derivative[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`n - 1][SpecialFunctions`HarmonicPolyLog]][#1, #2]] & \nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[{0}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, 0, System`HarmonicPolyLogDump`n_Integer}]] := Series[Log[System`HarmonicPolyLogDump`x], {System`HarmonicPolyLogDump`x, 0, System`HarmonicPolyLogDump`n}]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer, 0}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, 0, System`HarmonicPolyLogDump`n_Integer}]] := System`HarmonicPolyLogDump`ExtractSingularPart[System`HarmonicPolyLogDump`H @@ System`HarmonicPolyLogDump`FromAbbreviatedNotation[System`HarmonicPolyLogDump`mm], {0}] \/. System`HarmonicPolyLogDump`H[System`HarmonicPolyLogDump`args__] :> System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[{System`HarmonicPolyLogDump`args}, System`HarmonicPolyLogDump`x], {System`HarmonicPolyLogDump`x, 0, System`HarmonicPolyLogDump`n}]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, 0, System`HarmonicPolyLogDump`n_Integer}]] := SeriesData[System`HarmonicPolyLogDump`x, 0, (SpecialFunctions`MultipleFiniteHarmonicSumS[System`HarmonicPolyLogDump`mm, #1] & ) \/@ Range[System`HarmonicPolyLogDump`n], 1, System`HarmonicPolyLogDump`n + 1, 1]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer?NonNegative}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, 1, System`HarmonicPolyLogDump`n_Integer}]] := Module[{System`HarmonicPolyLogDump`tmp, System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`TransformArgument[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`x],  -> 1 - ] \/. System`HarmonicPolyLogDump`x -> 1 - System`HarmonicPolyLogDump`x; System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`tmp \/. {HoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`args_, System`HarmonicPolyLogDump`x] :> System`HarmonicPolyLogDump`ExtractSingularPartP1[System`HarmonicPolyLogDump`H @@ System`HarmonicPolyLogDump`args]}; System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`tmp \/. {System`HarmonicPolyLogDump`H[0] :> Log[System`HarmonicPolyLogDump`x] + (-2*I*Pi)*(1 + Floor[-(Arg[System`HarmonicPolyLogDump`x]\/(2*Pi))]), System`HarmonicPolyLogDump`H[System`HarmonicPolyLogDump`args__] :> SpecialFunctions`HarmonicPolyLog[{System`HarmonicPolyLogDump`args}, System`HarmonicPolyLogDump`x]}; System`HarmonicPolyLogDump`tmp = Series[System`HarmonicPolyLogDump`tmp, {System`HarmonicPolyLogDump`x, 0, System`HarmonicPolyLogDump`n + 1}]; (System`HarmonicPolyLogDump`res = Series[Normal[System`HarmonicPolyLogDump`tmp] \/. System`HarmonicPolyLogDump`x -> 1 - System`HarmonicPolyLogDump`x, {System`HarmonicPolyLogDump`x, 1, System`HarmonicPolyLogDump`n}]; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, Series] && Internal`LiterallyOccurringQ[System`HarmonicPolyLogDump`res, SeriesData]) \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`tmp, Series]]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, 1, System`HarmonicPolyLogDump`n_Integer}]] := Module[{System`HarmonicPolyLogDump`tmp, System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`TransformArgument[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`x],  -> (1 - )\/(1 + )] \/. System`HarmonicPolyLogDump`x -> (1 - System`HarmonicPolyLogDump`x)\/(1 + System`HarmonicPolyLogDump`x); System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`tmp \/. HoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`args_, System`HarmonicPolyLogDump`xx_] :> SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`args, Simplify[System`HarmonicPolyLogDump`xx]]; System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`tmp \/. {HoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`args_, System`HarmonicPolyLogDump`x] :> System`HarmonicPolyLogDump`ExtractSingularPartP1[System`HarmonicPolyLogDump`H @@ System`HarmonicPolyLogDump`args]}; System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`tmp \/. {System`HarmonicPolyLogDump`H[0] :> Log[System`HarmonicPolyLogDump`x] + (-2*I*Pi)*(1 + Floor[-(Arg[System`HarmonicPolyLogDump`x]\/(2*Pi))]), System`HarmonicPolyLogDump`H[System`HarmonicPolyLogDump`args__] :> SpecialFunctions`HarmonicPolyLog[{System`HarmonicPolyLogDump`args}, System`HarmonicPolyLogDump`x]}; System`HarmonicPolyLogDump`tmp = Series[System`HarmonicPolyLogDump`tmp, {System`HarmonicPolyLogDump`x, 0, System`HarmonicPolyLogDump`n + 1}]; (System`HarmonicPolyLogDump`res = Series[Normal[System`HarmonicPolyLogDump`tmp] \/. System`HarmonicPolyLogDump`x -> (1 - System`HarmonicPolyLogDump`x)\/(1 + System`HarmonicPolyLogDump`x), {System`HarmonicPolyLogDump`x, 1, System`HarmonicPolyLogDump`n}]; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, Series] && Internal`LiterallyOccurringQ[System`HarmonicPolyLogDump`res, SeriesData]) \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`tmp, Series]]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, -1, System`HarmonicPolyLogDump`n_Integer}]] := Module[{System`HarmonicPolyLogDump`tmp}, System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`TransformArgument[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`x],  -> -] \/. System`HarmonicPolyLogDump`x -> -System`HarmonicPolyLogDump`x; System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`tmp \/. HoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`mmm_, System`HarmonicPolyLogDump`x] :> System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mmm, System`HarmonicPolyLogDump`x], {System`HarmonicPolyLogDump`x, 1, System`HarmonicPolyLogDump`n + 1}]; System`HarmonicPolyLogDump`tmp = Series[Normal[System`HarmonicPolyLogDump`tmp] \/. System`HarmonicPolyLogDump`x -> -System`HarmonicPolyLogDump`x, {System`HarmonicPolyLogDump`x, -1, System`HarmonicPolyLogDump`n}]; System`HarmonicPolyLogDump`tmp \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`tmp, Series]]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, DirectedInfinity[Except[-1, System`HarmonicPolyLogDump`c_]], System`HarmonicPolyLogDump`n_Integer}]] := Module[{System`HarmonicPolyLogDump`tmp = SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`x], System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`tmp = System`HarmonicPolyLogDump`TransformArgument[System`HarmonicPolyLogDump`tmp,  -> 1\/] \/. Boole[System`HarmonicPolyLogDump`arg_] :> (Boole[System`HarmonicPolyLogDump`arg] \/. System`HarmonicPolyLogDump`x -> DirectedInfinity[System`HarmonicPolyLogDump`c]) \/. System`HarmonicPolyLogDump`x -> 1\/System`HarmonicPolyLogDump`x; System`HarmonicPolyLogDump`tmp = Series[System`HarmonicPolyLogDump`tmp, {System`HarmonicPolyLogDump`x, 0, System`HarmonicPolyLogDump`n + 1}]; (System`HarmonicPolyLogDump`res = Series[Normal[System`HarmonicPolyLogDump`tmp] \/. System`HarmonicPolyLogDump`x -> 1\/System`HarmonicPolyLogDump`x, {System`HarmonicPolyLogDump`x, DirectedInfinity[System`HarmonicPolyLogDump`c], System`HarmonicPolyLogDump`n}]; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, Series] && Internal`LiterallyOccurringQ[System`HarmonicPolyLogDump`res, SeriesData]) \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`tmp, Series]]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`x_], {System`HarmonicPolyLogDump`x_, Except[_DirectedInfinity, System`HarmonicPolyLogDump`x0_], System`HarmonicPolyLogDump`n_Integer}]] := SeriesData[System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0, Table[D[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`x], {System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`i}] \/. System`HarmonicPolyLogDump`x -> System`HarmonicPolyLogDump`x0, {System`HarmonicPolyLogDump`i, 0, System`HarmonicPolyLogDump`n}], 0, System`HarmonicPolyLogDump`n + 1, 1]\nSpecialFunctions`HarmonicPolyLog \/: HoldPattern[System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`fx_], {System`HarmonicPolyLogDump`x_, System`HarmonicPolyLogDump`x0_, System`HarmonicPolyLogDump`n_Integer}]] := Module[{System`HarmonicPolyLogDump`lim, System`HarmonicPolyLogDump`ord, System`HarmonicPolyLogDump`fxser, System`HarmonicPolyLogDump`ser, System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`lim = System`SeriesDump`getExpansionPoint[System`HarmonicPolyLogDump`fx, System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0]; System`HarmonicPolyLogDump`ord = System`SeriesDump`AdjustExpansionOrder[System`HarmonicPolyLogDump`fx, System`HarmonicPolyLogDump`lim, System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0, System`HarmonicPolyLogDump`n]; System`HarmonicPolyLogDump`fxser = Series[System`HarmonicPolyLogDump`fx, {System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0, System`HarmonicPolyLogDump`ord + 1}]; System`HarmonicPolyLogDump`ser = System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`x], {System`HarmonicPolyLogDump`x, SeriesCoefficient[System`HarmonicPolyLogDump`fxser, 0], System`HarmonicPolyLogDump`ord + 1}]; (System`HarmonicPolyLogDump`res = Quiet[ComposeSeries[System`HarmonicPolyLogDump`ser, System`HarmonicPolyLogDump`fxser] \/. _ComposeSeries -> $Failed]; If[Internal`LiterallyOccurringQ[System`HarmonicPolyLogDump`res, $Failed] && PolynomialQ[System`HarmonicPolyLogDump`fx, System`HarmonicPolyLogDump`x], System`HarmonicPolyLogDump`res = (Normal[System`HarmonicPolyLogDump`ser] \/. System`HarmonicPolyLogDump`x -> System`HarmonicPolyLogDump`fx) + O[System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0]^(System`HarmonicPolyLogDump`n + 1)]; System`HarmonicPolyLogDump`res \/. System`HarmonicPolyLogDump`sd_SeriesData :> System`SeriesDump`truncateSeriesData[System`HarmonicPolyLogDump`sd, {System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0, System`HarmonicPolyLogDump`n}] \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, $Failed]) \/; Internal`LiterallyAbsentQ[Normal[System`HarmonicPolyLogDump`ser], DirectedInfinity]] \/; Internal`DependsOnQ[System`HarmonicPolyLogDump`fx, System`HarmonicPolyLogDump`x] && System`SeriesDump`limitPointAccessibleQ[System`HarmonicPolyLogDump`fx, System`HarmonicPolyLogDump`x, System`HarmonicPolyLogDump`x0]\nDownValues: HoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`mm:{___Integer, 0, ___Integer, Except[0, _Integer], ___Integer}, System`HarmonicPolyLogDump`z_] := SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`ToAbbreviatedNotation[System`HarmonicPolyLogDump`mm], System`HarmonicPolyLogDump`z]\nHoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`z_List] \/; Length[System`HarmonicPolyLogDump`mm] == Length[System`HarmonicPolyLogDump`z] && LinearAlgebra`Private`ZeroVectorQ[Rest[System`HarmonicPolyLogDump`z] - 1] := SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, First[System`HarmonicPolyLogDump`z]]\nHoldPattern[SpecialFunctions`HarmonicPolyLog][System`HarmonicPolyLogDump`mm:{___Integer}, System`HarmonicPolyLogDump`z_List] := (SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, #1] & ) \/@ System`HarmonicPolyLogDump`z\nSpecialFunctions`HarmonicPolyLog[{}, Except[_List, System`HarmonicPolyLogDump`z_]] := N[1, Precision[System`HarmonicPolyLogDump`z]]\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, 0] \/;  !LinearAlgebra`Private`ZeroVectorQ[System`HarmonicPolyLogDump`mm] := 0\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{System`HarmonicPolyLogDump`x:0 | -1 | 1, (System`HarmonicPolyLogDump`x:0 | -1 | 1)..}, System`HarmonicPolyLogDump`z_] := Module[{System`HarmonicPolyLogDump`len = Length[System`HarmonicPolyLogDump`mm]}, SpecialFunctions`HarmonicPolyLog[{First[System`HarmonicPolyLogDump`mm]}, System`HarmonicPolyLogDump`z]^System`HarmonicPolyLogDump`len\/System`HarmonicPolyLogDump`len! \/; System`HarmonicPolyLogDump`len > 1]\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, (System`HarmonicPolyLogDump`z_)?NumericQ] \/; Precision[System`HarmonicPolyLogDump`z] == Infinity && System`HarmonicPolyLogDump`FiniteQ[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`z] := Module[{System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`res = System`HarmonicPolyLogDump`autoevalHarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`z]; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, {$Failed, Undefined, SpecialFunctions`HarmonicPolyLog}]]\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer, 0}, (System`HarmonicPolyLogDump`z_)?NumericQ] \/; Precision[System`HarmonicPolyLogDump`z] == Infinity && System`HarmonicPolyLogDump`FiniteQ[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`z] := Module[{System`HarmonicPolyLogDump`res, System`HarmonicPolyLogDump`y}, System`HarmonicPolyLogDump`res = SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`y] \/\/. System`HarmonicPolyLogDump`$TrailingZerosExtractionRule2 \/. System`HarmonicPolyLogDump`y -> System`HarmonicPolyLogDump`z; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, {$Failed, Undefined, SpecialFunctions`HarmonicPolyLog}]]\nHoldPattern[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, System`HarmonicPolyLogDump`fx_SeriesData]] := Module[{System`HarmonicPolyLogDump`xx = First[System`HarmonicPolyLogDump`fx], System`HarmonicPolyLogDump`x0 = System`HarmonicPolyLogDump`fx[[2]], System`HarmonicPolyLogDump`n = System`SeriesDump`mterms[1, System`HarmonicPolyLogDump`fx], System`HarmonicPolyLogDump`ser, System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`ser = System`Private`InternalSeries[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`xx], {System`HarmonicPolyLogDump`xx, SeriesCoefficient[System`HarmonicPolyLogDump`fx, 0], System`HarmonicPolyLogDump`n + 1}]; System`HarmonicPolyLogDump`res = Quiet[ComposeSeries[System`HarmonicPolyLogDump`ser, System`HarmonicPolyLogDump`fx]]; System`SeriesDump`truncateSeriesData[System`HarmonicPolyLogDump`res, {System`HarmonicPolyLogDump`xx, System`HarmonicPolyLogDump`x0, System`HarmonicPolyLogDump`n}] \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, ComposeSeries]]\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, (System`HarmonicPolyLogDump`z_)?NumberQ] \/; Precision[System`HarmonicPolyLogDump`z] < Infinity && System`HarmonicPolyLogDump`FiniteQ[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`z] := Block[{System`HarmonicPolyLogDump`intdefHarmonicPolyLog = $Failed & , System`HarmonicPolyLogDump`res, System`HarmonicPolyLogDump`y}, System`HarmonicPolyLogDump`res = SpecialFunctions`FunctionExpandHarmonicPolyLog[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`y]]; (System`HarmonicPolyLogDump`res = Quiet[System`HarmonicPolyLogDump`res \/. System`HarmonicPolyLogDump`y -> System`HarmonicPolyLogDump`z]; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, {Indeterminate, Undefined}]) \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, {SpecialFunctions`HarmonicPolyLog, $Failed}]]\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`mm:{__Integer}, (System`HarmonicPolyLogDump`z_)?NumberQ] := Module[{System`HarmonicPolyLogDump`res}, System`HarmonicPolyLogDump`res = System`HarmonicPolyLogDump`nHarmonicPolyLog[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`z, Precision[System`HarmonicPolyLogDump`z]]; System`HarmonicPolyLogDump`res \/; Internal`LiterallyAbsentQ[System`HarmonicPolyLogDump`res, System`HarmonicPolyLogDump`nHarmonicPolyLog]] \/; Precision[System`HarmonicPolyLogDump`z] < Infinity && System`HarmonicPolyLogDump`FiniteQ[System`HarmonicPolyLogDump`mm, System`HarmonicPolyLogDump`z]\nSystem`HarmonicPolyLogDump`e:SpecialFunctions`HarmonicPolyLog[Except[_List, System`HarmonicPolyLogDump`a_], System`HarmonicPolyLogDump`z_] := Null \/; (Message[SpecialFunctions`HarmonicPolyLog::list, HoldForm[System`HarmonicPolyLogDump`e], 1]; False)\nSpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`a_List, System`HarmonicPolyLogDump`z_] \/;  !System`HarmonicPolyLogDump`ValidParametersQ[System`HarmonicPolyLogDump`a] := Null \/; (Message[SpecialFunctions`HarmonicPolyLog::parvec, System`HarmonicPolyLogDump`a]; False)\nHoldPattern[Except[SpecialFunctions`HarmonicPolyLog[_, _], SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`args___]]] := Null \/; ArgumentCountQ[SpecialFunctions`HarmonicPolyLog, Length[{System`HarmonicPolyLogDump`args}], 2, 2]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: SpecialFunctions`HarmonicPolyLog \/: MakeBoxes[SpecialFunctions`HarmonicPolyLog[System`HarmonicPolyLogDump`plist_List, System`HarmonicPolyLogDump`z_], TraditionalForm] := TemplateBox[{RowBox[Riffle[BoxForm`ToTrad \/@ System`HarmonicPolyLogDump`plist, \",\"]], BoxForm`ToTrad[System`HarmonicPolyLogDump`z]}, \"SpecialFunctions`HarmonicPolyLog\", DisplayFunction -> (RowBox[{SubscriptBox[\"H\", #1], \"(\", #2, \")\"}] & ), InterpretationFunction -> (RowBox[{\"SpecialFunctions`HarmonicPolyLog\", \"[\", RowBox[{RowBox[{\"{\", #1, \"}\"}], \",\", #2}], \"]\"}] & ), Tooltip -> Automatic]\nOptions: None\nAttributes: {NHoldFirst, NumericFunction}\nFullName: SpecialFunctions`HarmonicPolyLog",
	"NDSolve`HarmonicSequenceFunction":"ObjectType: Symbol\nUsage: NDSolve`HarmonicSequenceFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`HarmonicSequenceFunction[(NDSolve`ExtrapolationDump`n1_)?Internal`PositiveMachineIntegerQ, (NDSolve`ExtrapolationDump`n2_)?Internal`PositiveMachineIntegerQ, _.] := Range[NDSolve`ExtrapolationDump`n1, NDSolve`ExtrapolationDump`n2] \/; NDSolve`ExtrapolationDump`n1 <= NDSolve`ExtrapolationDump`n2\nSubValues: None\nDefaultValues: NDSolve`HarmonicSequenceFunction \/: Default[NDSolve`HarmonicSequenceFunction, 3] = 1\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`HarmonicSequenceFunction",
	"System`Private`HasAnyCodesQ":"ObjectType: Symbol\nUsage: System`Private`HasAnyCodesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasAnyCodesQ",
	"System`Private`HasAnyEvaluationsQ":"ObjectType: Symbol\nUsage: System`Private`HasAnyEvaluationsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasAnyEvaluationsQ",
	"System`Private`HasDelayedValueQ":"ObjectType: Symbol\nUsage: System`Private`HasDelayedValueQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasDelayedValueQ",
	"System`Private`HasDownCodeQ":"ObjectType: Symbol\nUsage: System`Private`HasDownCodeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasDownCodeQ",
	"System`Private`HasDownEvaluationsQ":"ObjectType: Symbol\nUsage: System`Private`HasDownEvaluationsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasDownEvaluationsQ",
	"Compile`HasExternalEvaluation":"ObjectType: Symbol\nUsage: Compile`HasExternalEvaluation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Compile`HasExternalEvaluation",
	"Data`HashCode":"ObjectType: Symbol\nUsage: Data`HashCode\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Data`HashCode",
	"Internal`HashSameQ":"ObjectType: Symbol\nUsage: Internal`HashSameQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HashSameQ",
	"System`Utilities`HashTable":"ObjectType: Symbol\nUsage: System`Utilities`HashTable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTable",
	"System`Utilities`HashTableAdd":"ObjectType: Symbol\nUsage: System`Utilities`HashTableAdd\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableAdd",
	"System`Utilities`HashTableClone":"ObjectType: Symbol\nUsage: System`Utilities`HashTableClone\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableClone",
	"System`Utilities`HashTableContainsQ":"ObjectType: Symbol\nUsage: System`Utilities`HashTableContainsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableContainsQ",
	"System`Utilities`HashTableGet":"ObjectType: Symbol\nUsage: System`Utilities`HashTableGet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableGet",
	"System`Utilities`HashTableKeys":"ObjectType: Symbol\nUsage: System`Utilities`HashTableKeys\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableKeys",
	"System`Utilities`HashTableMapAt":"ObjectType: Symbol\nUsage: System`Utilities`HashTableMapAt\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableMapAt",
	"System`Utilities`HashTableQ":"ObjectType: Symbol\nUsage: System`Utilities`HashTableQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableQ",
	"System`Utilities`HashTableRemove":"ObjectType: Symbol\nUsage: System`Utilities`HashTableRemove\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableRemove",
	"System`Utilities`HashTableSet":"ObjectType: Symbol\nUsage: System`Utilities`HashTableSet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableSet",
	"System`Utilities`HashTableToAssociation":"ObjectType: Symbol\nUsage: System`Utilities`HashTableToAssociation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableToAssociation",
	"System`Utilities`HashTableValues":"ObjectType: Symbol\nUsage: System`Utilities`HashTableValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Utilities`HashTableValues",
	"ImportExport`Private`HashTwo":"ObjectType: Symbol\nUsage: ImportExport`Private`HashTwo\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ImportExport`Private`HashTwo[ImportExport`HashDump`data_, ImportExport`HashDump`meth_, ImportExport`HashDump`legacy:True | False] := Catch[Module[{ImportExport`HashDump`method = ImportExport`HashDump`meth, ImportExport`HashDump`str, ImportExport`HashDump`bits, ImportExport`HashDump`res}, If[ImportExport`HashDump`method === \"SHA\", ImportExport`HashDump`method = \"SHA1\"]; If[ !ImportExport`HashDump`digestHashQ[ImportExport`HashDump`method], Throw[$Failed]]; ImportExport`HashDump`str = ImportExport`HashDump`inputToString[ImportExport`HashDump`data]; ImportExport`HashDump`bits = Lookup[ImportExport`HashDump`digestHashes, ImportExport`HashDump`method, $Failed]; If[ImportExport`HashDump`bits === $Failed, Message[FileHash::umeth, ImportExport`HashDump`meth]; Throw[$Failed]]; ImportExport`HashDump`res = If[ImportExport`HashDump`legacy, ImportExport`HashDump`iHashTwoJava[ImportExport`HashDump`str, ImportExport`HashDump`method], ImportExport`HashDump`iHashTwoLib[ImportExport`HashDump`str, ImportExport`HashDump`method]]; {ImportExport`HashDump`res, ImportExport`HashDump`bits}]]\nImportExport`Private`HashTwo[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: ImportExport`Private`HashTwo",
	"System`Private`HasImmediateValueQ":"ObjectType: Symbol\nUsage: System`Private`HasImmediateValueQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasImmediateValueQ",
	"Language`HasMutationHandlerQ":"ObjectType: Symbol\nUsage: Language`HasMutationHandlerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Language`HasMutationHandlerQ",
	"System`Private`HasNoCodesQ":"ObjectType: Symbol\nUsage: System`Private`HasNoCodesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasNoCodesQ",
	"System`Private`HasNoEvaluationsQ":"ObjectType: Symbol\nUsage: System`Private`HasNoEvaluationsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasNoEvaluationsQ",
	"System`Private`HasOwnCodeQ":"ObjectType: Symbol\nUsage: System`Private`HasOwnCodeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasOwnCodeQ",
	"System`Private`HasOwnEvaluationsQ":"ObjectType: Symbol\nUsage: System`Private`HasOwnEvaluationsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasOwnEvaluationsQ",
	"System`Private`HasPrintCodeQ":"ObjectType: Symbol\nUsage: System`Private`HasPrintCodeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasPrintCodeQ",
	"GIS`HasSatelliteTilesQ":"ObjectType: Symbol\nUsage: GIS`HasSatelliteTilesQ[body] returns True if there are satellite tiles in the \"Wolfram\"\ngeo server for the given body, and False otherwise..\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HasSatelliteTilesQ[\"Earth\"] := True\nGIS`HasSatelliteTilesQ[\"Mercury\"] := True\nGIS`HasSatelliteTilesQ[\"Mars\"] := True\nGIS`HasSatelliteTilesQ[\"Pluto\"] := True\nGIS`HasSatelliteTilesQ[\"Moon\"] := True\nGIS`HasSatelliteTilesQ[GIS`GeoServerDump`body_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`HasSatelliteTilesQ",
	"System`Private`HasSubCodeQ":"ObjectType: Symbol\nUsage: System`Private`HasSubCodeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasSubCodeQ",
	"System`Private`HasSubEvaluationsQ":"ObjectType: Symbol\nUsage: System`Private`HasSubEvaluationsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasSubEvaluationsQ",
	"System`Private`HasUpCodeQ":"ObjectType: Symbol\nUsage: System`Private`HasUpCodeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasUpCodeQ",
	"System`Private`HasUpEvaluationsQ":"ObjectType: Symbol\nUsage: System`Private`HasUpEvaluationsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HasUpEvaluationsQ",
	"Graphics`HatchFillingDirective":"ObjectType: Symbol\nUsage: Graphics`HatchFillingDirective\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`HatchFillingDirective[Directive[Graphics`HatchFillingDump`a__]] \/; System`Private`CouldContainQ[{Graphics`HatchFillingDump`a}, Dynamic] := Dynamic @@ (Hold[HatchFilling[Graphics`HatchFillingDump`a]] \/. Dynamic[Graphics`HatchFillingDump`x_, ___] :> Graphics`HatchFillingDump`x) \/; Internal`LiteralPresentQ[{Graphics`HatchFillingDump`a}, Dynamic]\nGraphics`HatchFillingDirective[Directive[Graphics`HatchFillingDump`angle_]] := SurfaceAppearance[\"HatchFilling\", \"Angle\" -> Graphics`HatchFillingDump`angle]\nGraphics`HatchFillingDirective[Directive[Graphics`HatchFillingDump`angle_, Graphics`HatchFillingDump`thickness_]] := SurfaceAppearance[\"HatchFilling\", \"Angle\" -> Graphics`HatchFillingDump`angle, \"Thickness\" -> Graphics`HatchFillingDump`thickness\/5]\nGraphics`HatchFillingDirective[Directive[Graphics`HatchFillingDump`angle_, Graphics`HatchFillingDump`thickness_, Graphics`HatchFillingDump`spacing_]] := SurfaceAppearance[\"HatchFilling\", \"Angle\" -> Graphics`HatchFillingDump`angle, \"Thickness\" -> Graphics`HatchFillingDump`thickness\/5, \"Spacing\" -> 4*Graphics`HatchFillingDump`spacing]\nGraphics`HatchFillingDirective[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`HatchFillingDirective",
	"Graphics`HatchShadingDirective":"ObjectType: Symbol\nUsage: Graphics`HatchShadingDirective\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`HatchShadingDirective[Graphics`HatchShadingDump`a__] \/; System`Utilities`HashTableContainsQ[Graphics`HatchShadingDump`RampShaderHashTable, Graphics`HatchShadingDump`a] := System`Utilities`HashTableGet[Graphics`HatchShadingDump`RampShaderHashTable, Graphics`HatchShadingDump`a]\nGraphics`HatchShadingDirective[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`HatchShadingDirective",
	"Statistics`Library`HazardFunctionDefinition":"ObjectType: Symbol\nUsage: Statistics`Library`HazardFunctionDefinition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HazardFunctionDefinition[(Statistics`DistributionPropertiesDump`dist_)?Statistics`DistributionPropertiesDump`OneDimensionalQ, Statistics`DistributionPropertiesDump`y:Except[_?VectorQ]] := Module[{Statistics`DistributionPropertiesDump`pdf, Statistics`DistributionPropertiesDump`sf, Statistics`DistributionPropertiesDump`domain = Reals}, Statistics`DistributionPropertiesDump`pdf = PDF[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y]; (Statistics`DistributionPropertiesDump`sf = Which[Statistics`Library`DiscreteUnivariateDistributionQ[Statistics`DistributionPropertiesDump`dist], Statistics`DistributionPropertiesDump`domain = Integers; SurvivalFunction[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y - 1], Statistics`Library`ContinuousUnivariateDistributionQ[Statistics`DistributionPropertiesDump`dist], SurvivalFunction[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y], True, Block[{Statistics`DistributionPropertiesDump`z, Statistics`DistributionPropertiesDump`temp}, Statistics`DistributionPropertiesDump`temp = Probability[Statistics`DistributionPropertiesDump`z >= Statistics`DistributionPropertiesDump`y, Distributed[Statistics`DistributionPropertiesDump`z, Statistics`DistributionPropertiesDump`dist]]; If[Internal`LiterallyOccurringQ[Statistics`DistributionPropertiesDump`temp, Probability], $Failed, Statistics`DistributionPropertiesDump`temp]]]; Refine[Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`DistributionPropertiesDump`PWDressUp[Statistics`DistributionPropertiesDump`pdf, Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y], Statistics`DistributionPropertiesDump`sf], Element[Statistics`DistributionPropertiesDump`y, Statistics`DistributionPropertiesDump`domain] && DistributionParameterAssumptions[Statistics`DistributionPropertiesDump`dist]] \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`sf, {$Failed, SurvivalFunction}]) \/; Head[Statistics`DistributionPropertiesDump`pdf] =!= PDF]\nStatistics`Library`HazardFunctionDefinition[(Statistics`DistributionPropertiesDump`dist_)?Statistics`DistributionPropertiesDump`MultiDimensionalQ, (Statistics`DistributionPropertiesDump`y_)?VectorQ] := Module[{Statistics`DistributionPropertiesDump`pdf, Statistics`DistributionPropertiesDump`sf}, Statistics`DistributionPropertiesDump`pdf = PDF[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y]; (Statistics`DistributionPropertiesDump`sf = Which[Statistics`Library`DiscreteMultivariateDistributionQ[Statistics`DistributionPropertiesDump`dist], SurvivalFunction[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y - 1], Statistics`Library`ContinuousMultivariateDistributionQ[Statistics`DistributionPropertiesDump`dist], SurvivalFunction[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y], True, $Failed]; Refine[Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`DistributionPropertiesDump`PWDressUp[Statistics`DistributionPropertiesDump`pdf, Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`y], Statistics`DistributionPropertiesDump`sf], Element[Statistics`DistributionPropertiesDump`y, Reals] && DistributionParameterAssumptions[Statistics`DistributionPropertiesDump`dist]] \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`sf, {$Failed, SurvivalFunction}]) \/; Head[Statistics`DistributionPropertiesDump`pdf] =!= PDF]\nStatistics`Library`HazardFunctionDefinition[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HazardFunctionDefinition",
	"Statistics`Library`HazardFunctionFromPDFAndCDF":"ObjectType: Symbol\nUsage: Statistics`Library`HazardFunctionFromPDFAndCDF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HazardFunctionFromPDFAndCDF[Statistics`Library`Dump`pdf_Piecewise, Statistics`Library`Dump`cdf_Piecewise, Statistics`Library`Dump`def_:0] := Module[{Statistics`Library`Dump`l1, Statistics`Library`Dump`l2}, Statistics`Library`Dump`l1 = Internal`FromPiecewise[Statistics`Library`Dump`pdf]; Statistics`Library`Dump`l2 = Internal`FromPiecewise[Statistics`Library`Dump`cdf]; Statistics`Library`Dump`iCombineHazardPiecewise[Statistics`Library`Dump`l1, {Statistics`Library`Dump`l2[[1]], 1 - Statistics`Library`Dump`l2[[2]]}, Statistics`Library`Dump`def] \/; ListQ[Statistics`Library`Dump`l1] && ListQ[Statistics`Library`Dump`l2] && Length[Statistics`Library`Dump`l1] == Length[Statistics`Library`Dump`l2] == 2]\nStatistics`Library`HazardFunctionFromPDFAndCDF[Statistics`Library`Dump`pdf_, Statistics`Library`Dump`cdf_, None] := Statistics`Library`Dump`pdf\/(1 - Statistics`Library`Dump`cdf)\nStatistics`Library`HazardFunctionFromPDFAndCDF[Statistics`Library`Dump`pdf_, Statistics`Library`Dump`cdf_, Statistics`Library`Dump`def_:0] := Statistics`Library`SLPiecewiseExpand[Piecewise[{{Statistics`Library`Dump`def, Statistics`Library`Dump`cdf == 1}}, Statistics`Library`Dump`pdf\/(1 - Statistics`Library`Dump`cdf)]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HazardFunctionFromPDFAndCDF",
	"Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction":"ObjectType: Symbol\nUsage: Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`Library`Dump`pdf_Piecewise, Statistics`Library`Dump`sf_Piecewise, Statistics`Library`Dump`def_:0] := Module[{Statistics`Library`Dump`l1, Statistics`Library`Dump`l2}, Statistics`Library`Dump`l1 = Internal`FromPiecewise[Statistics`Library`Dump`pdf]; Statistics`Library`Dump`l2 = Internal`FromPiecewise[Statistics`Library`Dump`sf]; Statistics`Library`Dump`iCombineHazardPiecewise[Statistics`Library`Dump`l1, Statistics`Library`Dump`l2, Statistics`Library`Dump`def] \/; ListQ[Statistics`Library`Dump`l1] && ListQ[Statistics`Library`Dump`l2] && Length[Statistics`Library`Dump`l1] == Length[Statistics`Library`Dump`l2] == 2]\nStatistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`Library`Dump`pdf_, Statistics`Library`Dump`sf_Piecewise, None] := Module[{Statistics`Library`Dump`res}, Statistics`Library`Dump`res = Statistics`Library`SLPiecewiseExpand[Piecewise[{{Statistics`Library`Dump`def, Statistics`Library`Dump`sf == 0}}, Statistics`Library`Dump`pdf\/Statistics`Library`Dump`sf]]; Statistics`Library`Dump`res = Internal`FromPiecewise[Statistics`Library`Dump`res]; Internal`ToPiecewise[First[Statistics`Library`Dump`res] \/. HoldPattern[Equal][Statistics`Library`Dump`a_, 0] :> False, Last[Statistics`Library`Dump`res], Last[First[Statistics`Library`Dump`res]] =!= True]]\nStatistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`Library`Dump`pdf_, Statistics`Library`Dump`sf_, None] := Statistics`Library`Dump`pdf\/Statistics`Library`Dump`sf\nStatistics`Library`HazardFunctionFromPDFAndSurvivalFunction[Statistics`Library`Dump`pdf_, Statistics`Library`Dump`sf_, Statistics`Library`Dump`def_:0] := Statistics`Library`SLPiecewiseExpand[Piecewise[{{Statistics`Library`Dump`def, Statistics`Library`Dump`sf == 0}}, Statistics`Library`Dump`pdf\/Statistics`Library`Dump`sf]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HazardFunctionFromPDFAndSurvivalFunction",
	"Image`ImportExportDump`HeaderKeyReadFITS":"ObjectType: Symbol\nUsage: Image`ImportExportDump`HeaderKeyReadFITS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`HeaderKeyReadFITS",
	"Image`ImportExportDump`HeaderReadFITS":"ObjectType: Symbol\nUsage: Image`ImportExportDump`HeaderReadFITS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`HeaderReadFITS",
	"Image`ImportExportDump`HeaderTypesRead":"ObjectType: Symbol\nUsage: Image`ImportExportDump`HeaderTypesRead\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`HeaderTypesRead",
	"Image`ImportExportDump`HeaderWriteFITS":"ObjectType: Symbol\nUsage: Image`ImportExportDump`HeaderWriteFITS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`HeaderWriteFITS",
	"NIntegrate`Heap":"ObjectType: Symbol\nUsage: NIntegrate`Heap\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`Heap",
	"NIntegrate`HeapDelete":"ObjectType: Symbol\nUsage: NIntegrate`HeapDelete\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapDelete",
	"NIntegrate`HeapElements":"ObjectType: Symbol\nUsage: NIntegrate`HeapElements\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapElements",
	"NIntegrate`HeapEmptyQ":"ObjectType: Symbol\nUsage: NIntegrate`HeapEmptyQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapEmptyQ",
	"NIntegrate`HeapInsert":"ObjectType: Symbol\nUsage: NIntegrate`HeapInsert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapInsert",
	"NIntegrate`HeapLookup":"ObjectType: Symbol\nUsage: NIntegrate`HeapLookup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapLookup",
	"NIntegrate`HeapMerge":"ObjectType: Symbol\nUsage: NIntegrate`HeapMerge\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapMerge",
	"NIntegrate`HeapTopElement":"ObjectType: Symbol\nUsage: NIntegrate`HeapTopElement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`HeapTopElement",
	"Statistics`MCMC`HeidelbergerWelchDiagnostic":"ObjectType: Symbol\nUsage: Statistics`MCMC`HeidelbergerWelchDiagnostic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`MCMC`HeidelbergerWelchDiagnostic[(Statistics`MCMCSamplersDump`sample_)?VectorQ, Statistics`MCMCSamplersDump`opts:OptionsPattern[]] := Module[{Statistics`MCMCSamplersDump`sn, Statistics`MCMCSamplersDump`bn, Statistics`MCMCSamplersDump`mean, Statistics`MCMCSamplersDump`len, Statistics`MCMCSamplersDump`len1, Statistics`MCMCSamplersDump`m, Statistics`MCMCSamplersDump`stat, Statistics`MCMCSamplersDump`f0, Statistics`MCMCSamplersDump`k, Statistics`MCMCSamplersDump`rhw, Statistics`MCMCSamplersDump`mthd, Statistics`MCMCSamplersDump`val, Statistics`MCMCSamplersDump`res, Statistics`MCMCSamplersDump`lev, Statistics`MCMCSamplersDump`pval, Statistics`MCMCSamplersDump`pval2, Statistics`MCMCSamplersDump`eps}, {Statistics`MCMCSamplersDump`mthd, Statistics`MCMCSamplersDump`lev, Statistics`MCMCSamplersDump`eps} = {Method, SignificanceLevel, Tolerance} \/. Flatten[{Statistics`MCMCSamplersDump`opts}] \/. Options[Statistics`MCMC`HeidelbergerWelchDiagnostic]; If[ListQ[Statistics`MCMCSamplersDump`lev], {Statistics`MCMCSamplersDump`pval, Statistics`MCMCSamplersDump`pval2} = Statistics`MCMCSamplersDump`lev, Statistics`MCMCSamplersDump`pval = Statistics`MCMCSamplersDump`lev; Statistics`MCMCSamplersDump`pval2 = Statistics`MCMCSamplersDump`lev]; Statistics`MCMCSamplersDump`len = Length[Statistics`MCMCSamplersDump`sample]; If[Statistics`MCMCSamplersDump`len < 100, Return[$Failed]]; Statistics`MCMCSamplersDump`f0 = Statistics`MCMCSamplersDump`iSpectralVariance[Take[Statistics`MCMCSamplersDump`sample, -Quotient[Statistics`MCMCSamplersDump`len, 2]]]; Statistics`MCMCSamplersDump`sn = Accumulate[Statistics`MCMCSamplersDump`sample]; Statistics`MCMCSamplersDump`k = -1; Do[Statistics`MCMCSamplersDump`len1 = Statistics`MCMCSamplersDump`len - Round[(Statistics`MCMCSamplersDump`len*Statistics`MCMCSamplersDump`i)\/10]; If[Statistics`MCMCSamplersDump`len1 == Statistics`MCMCSamplersDump`len, Statistics`MCMCSamplersDump`bn = Statistics`MCMCSamplersDump`sn; PrependTo[Statistics`MCMCSamplersDump`bn, N[1, Internal`PrecAccur[Statistics`MCMCSamplersDump`sample]] - 1]; , Statistics`MCMCSamplersDump`bn = Take[Statistics`MCMCSamplersDump`sn, -(Statistics`MCMCSamplersDump`len1 + 1)]; Statistics`MCMCSamplersDump`bn -= First[Statistics`MCMCSamplersDump`bn]; ]; Statistics`MCMCSamplersDump`mean = Last[Statistics`MCMCSamplersDump`bn]\/Statistics`MCMCSamplersDump`len1; Statistics`MCMCSamplersDump`bn -= Range[0, Statistics`MCMCSamplersDump`len1]*Statistics`MCMCSamplersDump`mean; Statistics`MCMCSamplersDump`bn \/= Sqrt[Statistics`MCMCSamplersDump`len1*Statistics`MCMCSamplersDump`f0]; Statistics`MCMCSamplersDump`bn *= Statistics`MCMCSamplersDump`bn; Statistics`MCMCSamplersDump`m = Quotient[Statistics`MCMCSamplersDump`len1, 2]; Statistics`MCMCSamplersDump`stat = 6*Total[Take[Statistics`MCMCSamplersDump`bn, {3, 2*Statistics`MCMCSamplersDump`m - 1}]]; Statistics`MCMCSamplersDump`stat += 4*(Statistics`MCMCSamplersDump`bn[[2]] + Statistics`MCMCSamplersDump`bn[[2*Statistics`MCMCSamplersDump`m]]) + Statistics`MCMCSamplersDump`bn[[2*Statistics`MCMCSamplersDump`m + 1]]; Statistics`MCMCSamplersDump`stat \/= 6*Statistics`MCMCSamplersDump`len1; Statistics`MCMCSamplersDump`val = Statistics`MCMCSamplersDump`cvmPVal[Statistics`MCMCSamplersDump`stat]; If[Statistics`MCMCSamplersDump`val > Statistics`MCMCSamplersDump`pval, Statistics`MCMCSamplersDump`k = Statistics`MCMCSamplersDump`i; Break[]], {Statistics`MCMCSamplersDump`i, 0, 5}]; Statistics`MCMCSamplersDump`res = {Statistics`MCMCSamplersDump`k, Statistics`MCMCSamplersDump`val}; If[Statistics`MCMCSamplersDump`mthd === \"Stationarity\", Return[Statistics`MCMCSamplersDump`res]]; If[Statistics`MCMCSamplersDump`k == -1, Statistics`MCMCSamplersDump`res = {Statistics`MCMCSamplersDump`res, {-1, False}}, Statistics`MCMCSamplersDump`f0 = Statistics`MCMCSamplersDump`iSpectralVariance[Take[Statistics`MCMCSamplersDump`sample, -Statistics`MCMCSamplersDump`len1]]; Statistics`MCMCSamplersDump`rhw = Sqrt[Statistics`MCMCSamplersDump`f0\/Statistics`MCMCSamplersDump`len1]\/Statistics`MCMCSamplersDump`mean; Statistics`MCMCSamplersDump`rhw *= Quantile[NormalDistribution[], 1 - Statistics`MCMCSamplersDump`pval2\/2]; Statistics`MCMCSamplersDump`res = {Statistics`MCMCSamplersDump`res, {Statistics`MCMCSamplersDump`rhw, Statistics`MCMCSamplersDump`rhw < Statistics`MCMCSamplersDump`eps}}]; Statistics`MCMCSamplersDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                               1                1\n{Method -> Stationarity, SignificanceLevel -> --, Tolerance -> --}\n                                              20               10\nAttributes: {}\nFullName: Statistics`MCMC`HeidelbergerWelchDiagnostic",
	"System`Dump`HeldConstantQ":"ObjectType: Symbol\nUsage: System`Dump`HeldConstantQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldConstantQ[System`Dump`x_Symbol] := System`Dump`HeldConstantQ[System`Dump`x] = MemberQ[Attributes[Unevaluated[System`Dump`x]], Constant]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`Dump`HeldConstantQ",
	"DateAndTime`HeldDateIntervalQ":"ObjectType: Symbol\nUsage: DateAndTime`HeldDateIntervalQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`HeldDateIntervalQ[HoldPattern[System`DateIntervalDump`d:DateInterval[{{_, _}...}, _, _, _, ___]]] := Internal`PatternFreeQ[HoldComplete[System`DateIntervalDump`d]]\nDateAndTime`HeldDateIntervalQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: DateAndTime`HeldDateIntervalQ",
	"BoxForm`HeldFENumberQ":"ObjectType: Symbol\nUsage: BoxForm`HeldFENumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldFENumberQ[_?BoxForm`HeldIntegerQ] := True\nBoxForm`HeldFENumberQ[_?BoxForm`HeldRealNumberQ] := True\nBoxForm`HeldFENumberQ[Pi | E | GoldenRatio | Degree] := True\nBoxForm`HeldFENumberQ[Length[_List]] := True\nBoxForm`HeldFENumberQ[(Sin | Cos | ArcSin | ArcCos | Sqrt | Round | Floor | Ceiling | Abs)[BoxForm`x_]] := BoxForm`HeldFENumberQ[BoxForm`x]\nBoxForm`HeldFENumberQ[(Times | Divide | Rational | Plus | Minus | Power | Min | Max | Mod)[BoxForm`x___]] := TrueQ[And @@ BoxForm`HeldFENumberQ \/@ Unevaluated[{BoxForm`x}]]\nBoxForm`HeldFENumberQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldFENumberQ",
	"System`Dump`HeldFENumericQ":"ObjectType: Symbol\nUsage: System`Dump`HeldFENumericQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldFENumericQ[System`Dump`n_Integer] := IntegerQ[Unevaluated[System`Dump`n]]\nSystem`Dump`HeldFENumericQ[System`Dump`r_Real] := NumberQ[Unevaluated[System`Dump`r]]\nSystem`Dump`HeldFENumericQ[Pi | E | GoldenRatio | Degree] := True\nSystem`Dump`HeldFENumericQ[_Random] := True\nSystem`Dump`HeldFENumericQ[_AbsoluteTime] := True\nSystem`Dump`HeldFENumericQ[Length[_List]] := True\nSystem`Dump`HeldFENumericQ[(Sin | Cos | Tan | ArcSin | ArcCos | ArcTan | Sqrt | Round | Floor | Ceiling | Abs)[System`Dump`x_]] := System`Dump`HeldFENumericQ[System`Dump`x]\nSystem`Dump`HeldFENumericQ[(Times | Divide | Rational | Plus | Minus | Power | Min | Max | Mod)[System`Dump`x___]] := TrueQ[And @@ System`Dump`HeldFENumericQ \/@ Unevaluated[{System`Dump`x}]]\nSystem`Dump`HeldFENumericQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`HeldFENumericQ",
	"GIS`HeldGeneralGeoLocationQ":"ObjectType: Symbol\nUsage: GIS`HeldGeneralGeoLocationQ[pos ...] behaves like GIS`GeneralGeoLocationQ[pos, ...] but does not evaluate pos.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_] := GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc, {0, Infinity}, False]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_, GIS`GeoPositionDump`depth_] := GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc, GIS`GeoPositionDump`depth, False]\nGIS`HeldGeneralGeoLocationQ[Automatic, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := True\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_GeoPosition, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`loc, GeoPosition, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_GeoPositionXYZ, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`loc, GeoPositionXYZ, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_GeoPositionENU, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`loc, GeoPositionENU, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_GeoGridPosition, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`loc, GeoGridPosition, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GeoGraphics`ReversedGeoPosition[GIS`GeoPositionDump`array_], GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoPositionDump`array, GIS`GeoPositionDump`depth, {2, 4}, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_Entity, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`GeoPositionDump`checkDepth[0, GIS`GeoPositionDump`depth] && GIS`GeoEntityQ[GIS`GeoPositionDump`loc]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc_EntityClass, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`GeoPositionDump`checkDepth[1, GIS`GeoPositionDump`depth] && GIS`GeoEntityClassQ[GIS`GeoPositionDump`loc]\nGIS`HeldGeneralGeoLocationQ[Dated[GIS`GeoPositionDump`loc, _], GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GeoVariant[GIS`GeoPositionDump`loc_, _], GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GeoGraphics`ToResolve[GIS`GeoPositionDump`e_, __], GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`e, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`s_String, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := Quiet[With[{GIS`GeoPositionDump`pos = GeoPosition[GIS`GeoPositionDump`s]}, GIS`HeldGeoLocationQ[GIS`GeoPositionDump`pos, GeoPosition, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]]]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`s:{__String}, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := Quiet[With[{GIS`GeoPositionDump`pos = GeoPosition[GIS`GeoPositionDump`s]}, GIS`HeldGeoLocationQ[GIS`GeoPositionDump`pos, GeoPosition, GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]]]\nGIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`locs_List, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := If[GIS`HeldGeoCoordinateArrayQ[GIS`GeoPositionDump`locs, GIS`GeoPositionDump`depth, {2, 4}, GIS`GeoPositionDump`missingQ], True, With[{GIS`GeoPositionDump`depthm1 = Clip[GIS`GeoPositionDump`depth - 1, {0, Infinity}]}, AllTrue[Unevaluated[GIS`GeoPositionDump`locs], Function[GIS`GeoPositionDump`loc, GIS`HeldGeneralGeoLocationQ[GIS`GeoPositionDump`loc, GIS`GeoPositionDump`depthm1, GIS`GeoPositionDump`missingQ], HoldFirst]]]]\nGIS`HeldGeneralGeoLocationQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: GIS`HeldGeneralGeoLocationQ",
	"GIS`HeldGeoCoordinateArrayQ":"ObjectType: Symbol\nUsage: GIS`HeldGeoCoordinateArray has the same argument structure of GeoCoordinateArray, but does not let arguments evaluate.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array, {0, Infinity}, {0, Infinity}, False, True]\nGIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array_, GIS`GeoArrayDump`minmaxdepth_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array, GIS`GeoArrayDump`minmaxdepth, {0, Infinity}, False, True]\nGIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array_, GIS`GeoArrayDump`minmaxdepth_, GIS`GeoArrayDump`minmaxdim_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array, GIS`GeoArrayDump`minmaxdepth, GIS`GeoArrayDump`minmaxdim, False, True]\nGIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array_, GIS`GeoArrayDump`minmaxdepth_, GIS`GeoArrayDump`minmaxdim_, GIS`GeoArrayDump`missingQ_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array, GIS`GeoArrayDump`minmaxdepth, GIS`GeoArrayDump`minmaxdim, GIS`GeoArrayDump`missingQ, True]\nGIS`HeldGeoCoordinateArrayQ[GIS`GeoArrayDump`array_, GIS`GeoArrayDump`minmaxdepth_, GIS`GeoArrayDump`minmaxdim_, GIS`GeoArrayDump`missingQ_, GIS`GeoArrayDump`quantityQ_] := Complement[GIS`NonNumericList[Unevaluated[GIS`GeoArrayDump`array]], {List}, GIS`GeoArrayDump`missingHeads[GIS`GeoArrayDump`missingQ], GIS`GeoArrayDump`quantityHeads[GIS`GeoArrayDump`quantityQ]] === {} && GIS`GeoArrayDump`validStructureQ[GIS`GeoCoordinateStructure[Unevaluated[GIS`GeoArrayDump`array], GIS`GeoArrayDump`quantityQ], GIS`GeoArrayDump`minmaxdepth, GIS`GeoArrayDump`minmaxdim, GIS`GeoArrayDump`missingQ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: GIS`HeldGeoCoordinateArrayQ",
	"GIS`HeldGeoLocationQ":"ObjectType: Symbol\nUsage: GIS`HeldGeoLocationQ[pos, ...] behaves like GIS`GeoLocationQ[pos, ...] but does not evaluate pos.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HeldGeoLocationQ[GeoPosition[{(GIS`GeoPositionDump`lat:_Real | _Integer)?GIS`LatitudeQ, GIS`GeoPositionDump`lon:_Real | _Integer}]] := True\nGIS`HeldGeoLocationQ[GeoPosition[{(GIS`GeoPositionDump`lat:_Real | _Integer)?GIS`LatitudeQ, GIS`GeoPositionDump`lon:_Real | _Integer}], GeoPosition] := True\nGIS`HeldGeoLocationQ[GeoPosition[{(GIS`GeoPositionDump`lat:_Real | _Integer)?GIS`LatitudeQ, GIS`GeoPositionDump`lon:_Real | _Integer}], GeoPosition, {0, _}, _:False] := True\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, Head[Unevaluated[GIS`GeoPositionDump`x]], {0, Infinity}, False]\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_, GIS`GeoPositionDump`head_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, GIS`GeoPositionDump`head, {0, Infinity}, False]\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_, GIS`GeoPositionDump`head_, GIS`GeoPositionDump`depth_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, GIS`GeoPositionDump`head, GIS`GeoPositionDump`depth, False]\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_, All | Automatic, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, Head[Unevaluated[GIS`GeoPositionDump`x]], GIS`GeoPositionDump`depth, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_, GIS`GeoPositionDump`head_, First, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, GIS`GeoPositionDump`head, {0, 0}, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_, GIS`GeoPositionDump`head_, Rest, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, GIS`GeoPositionDump`head, {1, Infinity}, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeoLocationQ[GIS`GeoPositionDump`x_, GIS`GeoPositionDump`head_, All | Automatic, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoLocationQ[GIS`GeoPositionDump`x, GIS`GeoPositionDump`head, {0, Infinity}, GIS`GeoPositionDump`missing]\nGIS`HeldGeoLocationQ[GeoPosition[GIS`GeoPositionDump`array_List, Repeated[_?GIS`GeoPositionDump`GeneralizedDatumQ, {0, 1}], ___?BoxForm`HeldOptionQ], GeoPosition, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoPositionDump`array, GIS`GeoPositionDump`depth, {2, 4}, GIS`GeoPositionDump`missingQ] && GIS`GeoPositionDump`checkGeoPositionLatitude[GIS`GeoPositionDump`array, TrueQ[GIS`GeoPositionDump`missingQ]]\nGIS`HeldGeoLocationQ[GeoPositionXYZ[GIS`GeoPositionDump`array_List, Repeated[_?GIS`GeoPositionDump`GeneralizedDatumQ, {0, 1}], ___?BoxForm`HeldOptionQ], GeoPositionXYZ, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoPositionDump`array, GIS`GeoPositionDump`depth, {3, 4}, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeoLocationQ[GeoPositionENU[GIS`GeoPositionDump`array_List, GIS`GeoPositionDump`origin_GeoPosition \/; GIS`HeldGeoLocationQ[GIS`GeoPositionDump`origin, GeoPosition, 0, False]], GeoPositionENU, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoPositionDump`array, GIS`GeoPositionDump`depth, {3, 4}, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeoLocationQ[GeoGridPosition[GIS`GeoPositionDump`array_List, _?GIS`GeoPositionDump`projectionQ, Repeated[_?GIS`GeoPositionDump`GeneralizedDatumQ, {0, 1}]], GeoGridPosition, GIS`GeoPositionDump`depth_, GIS`GeoPositionDump`missingQ_] := GIS`HeldGeoCoordinateArrayQ[GIS`GeoPositionDump`array, GIS`GeoPositionDump`depth, {2, 4}, GIS`GeoPositionDump`missingQ]\nGIS`HeldGeoLocationQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: GIS`HeldGeoLocationQ",
	"GIS`HeldGeoVectorQ":"ObjectType: Symbol\nUsage: GIS`HeldGeoVectorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv_] := GIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv, Head[Unevaluated[GIS`GeoMappingDump`gv]], {0, Infinity}, False]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv_, GIS`GeoMappingDump`head_] := GIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv, GIS`GeoMappingDump`head, {0, Infinity}, False]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv_, GIS`GeoMappingDump`head_, GIS`GeoMappingDump`depth_] := GIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv, GIS`GeoMappingDump`head, GIS`GeoMappingDump`depth, False]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv_, All | Automatic, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv, Head[Unevaluated[GIS`GeoMappingDump`gv]], GIS`GeoMappingDump`depth, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv_, GIS`GeoMappingDump`head_, All | Automatic, GIS`GeoMappingDump`missingQ_] := GIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv, GIS`GeoMappingDump`head, {0, Infinity}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoVector[GIS`GeoMappingDump`locs_ -> GIS`GeoMappingDump`vecs_], GeoVector, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {2, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoVectorENU[GIS`GeoMappingDump`locs_ -> GIS`GeoMappingDump`vecs_], GeoVectorENU, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {2, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoVectorXYZ[GIS`GeoMappingDump`locs_ -> GIS`GeoMappingDump`vecs_], GeoVectorXYZ, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {3, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoGridVector[GIS`GeoMappingDump`locs_ -> GIS`GeoMappingDump`vecs_, GIS`GeoMappingDump`proj_, GIS`GeoMappingDump`csym_:Automatic], GeoGridVector, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {2, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoVector[GIS`GeoMappingDump`vecs_], GeoVector, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {2, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoVectorENU[GIS`GeoMappingDump`vecs_], GeoVectorENU, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {2, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoVectorXYZ[GIS`GeoMappingDump`vecs_], GeoVectorXYZ, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {3, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[GIS`GeoMappingDump`gv:GeoGridVector[GIS`GeoMappingDump`vecs_, GIS`GeoMappingDump`proj_, GIS`GeoMappingDump`csym_:Automatic], GeoGridVector, GIS`GeoMappingDump`depth_, GIS`GeoMappingDump`missingQ_] := GIS`GeoMappingDump`validGeoVectorQ[GIS`GeoMappingDump`gv] && GIS`GeoMappingDump`checkStructureQ[GIS`GeoMappingDump`vecs, GIS`GeoMappingDump`depth, {2, 4}, GIS`GeoMappingDump`missingQ]\nGIS`HeldGeoVectorQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: GIS`HeldGeoVectorQ",
	"BoxForm`HeldIntegerQ":"ObjectType: Symbol\nUsage: BoxForm`HeldIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldIntegerQ[BoxForm`n_Integer] := IntegerQ[Unevaluated[BoxForm`n]]\nBoxForm`HeldIntegerQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldIntegerQ",
	"System`Dump`HeldIntegerQ":"ObjectType: Symbol\nUsage: System`Dump`HeldIntegerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldIntegerQ[System`Dump`n_Integer] := IntegerQ[Unevaluated[System`Dump`n]]\nSystem`Dump`HeldIntegerQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`HeldIntegerQ",
	"BoxForm`HeldNonOptionQ":"ObjectType: Symbol\nUsage: BoxForm`HeldNonOptionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldNonOptionQ[BoxForm`expr_] :=  !BoxForm`HeldOptionQ[BoxForm`expr]\nBoxForm`HeldNonOptionQ[BoxForm`exprs__] := Thread[Unevaluated[BoxForm`HeldNonOptionQ[And[BoxForm`exprs]]], And]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldNonOptionQ",
	"BoxForm`HeldNumberQ":"ObjectType: Symbol\nUsage: BoxForm`HeldNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldNumberQ[(BoxForm`numer_)\/(BoxForm`denom_)] := BoxForm`HeldIntegerQ[BoxForm`numer] && BoxForm`HeldIntegerQ[BoxForm`denom]\nBoxForm`HeldNumberQ[(BoxForm`a_.) + (BoxForm`b_.)*I] := BoxForm`HeldRealNumberQ[BoxForm`a] && BoxForm`HeldRealNumberQ[BoxForm`b]\nBoxForm`HeldNumberQ[(BoxForm`a_.) + (BoxForm`b_.)*I] := BoxForm`HeldRealNumberQ[BoxForm`a] && BoxForm`HeldRealNumberQ[BoxForm`b]\nBoxForm`HeldNumberQ[BoxForm`z_] := NumberQ[Unevaluated[BoxForm`z]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldNumberQ",
	"System`Dump`HeldNumberQ":"ObjectType: Symbol\nUsage: System`Dump`HeldNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldNumberQ[(System`Dump`numer_)\/(System`Dump`denom_)] := System`Dump`HeldIntegerQ[System`Dump`numer] && System`Dump`HeldIntegerQ[System`Dump`denom]\nSystem`Dump`HeldNumberQ[System`Dump`z_] := NumberQ[Unevaluated[System`Dump`z]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`HeldNumberQ",
	"Uncertainty`HeldNumericAroundQ":"ObjectType: Symbol\nUsage: Uncertainty`HeldNumericAroundQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Uncertainty`HeldNumericAroundQ[Around[Language`UncertaintyDump`x_, Language`UncertaintyDump`sigmas_List]] := Language`UncertaintyDump`numericQ[Language`UncertaintyDump`x] && Language`UncertaintyDump`numericPairQ[Language`UncertaintyDump`sigmas]\nUncertainty`HeldNumericAroundQ[Around[Language`UncertaintyDump`x_, Language`UncertaintyDump`sigma_]] := Language`UncertaintyDump`numericQ[Language`UncertaintyDump`x] && Language`UncertaintyDump`numericQ[Language`UncertaintyDump`sigma]\nUncertainty`HeldNumericAroundQ[Around[Language`UncertaintyDump`x_, Language`UncertaintyDump`cumuls__]] := Language`UncertaintyDump`numericVectorQ[{Language`UncertaintyDump`x, Language`UncertaintyDump`cumuls}]\nUncertainty`HeldNumericAroundQ[VectorAround[Language`UncertaintyDump`v_, Language`UncertaintyDump`cov_List]] := Language`UncertaintyDump`numericVectorQ[Language`UncertaintyDump`v] && With[{Language`UncertaintyDump`n = Length[Unevaluated[Language`UncertaintyDump`v]]}, Language`UncertaintyDump`numericSymmetricArrayQ[Language`UncertaintyDump`cov, 1, Language`UncertaintyDump`n] || Language`UncertaintyDump`numericSymmetricArrayQ[Language`UncertaintyDump`cov, 2, Language`UncertaintyDump`n]]\nUncertainty`HeldNumericAroundQ[VectorAround[Language`UncertaintyDump`v_, Language`UncertaintyDump`cumuls__List]] := Language`UncertaintyDump`numericVectorQ[Language`UncertaintyDump`v] && With[{Language`UncertaintyDump`n = Length[Unevaluated[Language`UncertaintyDump`v]]}, And @@ MapIndexed[Function[{Language`UncertaintyDump`array, Language`UncertaintyDump`rank}, Language`UncertaintyDump`numericSymmetricArrayQ[Language`UncertaintyDump`array, Language`UncertaintyDump`rank, Language`UncertaintyDump`n], HoldFirst], Unevaluated[{Language`UncertaintyDump`v, Language`UncertaintyDump`cumuls}]]]\nUncertainty`HeldNumericAroundQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Uncertainty`HeldNumericAroundQ",
	"System`Dump`HeldNumericFunctionQ":"ObjectType: Symbol\nUsage: System`Dump`HeldNumericFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldNumericFunctionQ[System`Dump`x_Symbol] := System`Dump`HeldNumericFunctionQ[System`Dump`x] = MemberQ[Attributes[Unevaluated[System`Dump`x]], NumericFunction]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`Dump`HeldNumericFunctionQ",
	"System`Dump`HeldNumericQ":"ObjectType: Symbol\nUsage: System`Dump`HeldNumericQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldNumericQ[_Integer | _Real | _Rational | _Complex | I] := True\nSystem`Dump`HeldNumericQ[Root[System`Dump`poly_ & , _Integer, System`Dump`a:0 | 1:0]] := System`Dump`NumericRootPolynomial[System`Dump`poly]\nSystem`Dump`HeldNumericQ[Root[{_Function, _?System`Dump`HeldNumericQ}, ___]] := True\nSystem`Dump`HeldNumericQ[Root[{_Function, _?System`Dump`HeldNumericQ, _}, ___]] := True\nSystem`Dump`HeldNumericQ[AlgebraicNumber[(System`Dump`expr_)?System`Dump`HeldNumericQ, {(System`Dump`coeffs___)?System`Dump`HeldNumericQ}]] := True\nSystem`Dump`HeldNumericQ[PartitionsP[_Integer]] := True\nSystem`Dump`HeldNumericQ[PartitionsQ[_Integer]] := True\nSystem`Dump`HeldNumericQ[ProductLog[(System`Dump`expr_)?System`Dump`HeldNumericQ]] := True\nSystem`Dump`HeldNumericQ[ProductLog[System`Dump`k_Integer, (System`Dump`expr_)?System`Dump`HeldNumericQ]] := True\nSystem`Dump`HeldNumericQ[(System`Dump`f_)?System`Dump`HeldNumericFunctionQ[(System`Dump`x___)?System`Dump`HeldNumericQ]] := True\nSystem`Dump`HeldNumericQ[_Symbol?System`Dump`HeldConstantQ] := True\nSystem`Dump`HeldNumericQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`Dump`HeldNumericQ",
	"BoxForm`HeldOptionQ":"ObjectType: Symbol\nUsage: BoxForm`HeldOptionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldOptionQ[BoxForm`expr_] := OptionQ[Unevaluated[BoxForm`expr]]\nBoxForm`HeldOptionQ[BoxForm`exprs__] := Thread[Unevaluated[BoxForm`HeldOptionQ[And[BoxForm`exprs]]], And]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldOptionQ",
	"Charting`HeldOptionQ":"ObjectType: Symbol\nUsage: Charting`HeldOptionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`HeldOptionQ[(Graphics`ReliefPlotDump`e_)?Graphics`ReliefPlotDump`AssocationQ] := True\nCharting`HeldOptionQ[Charting`CommonDump`e_] := Replace[Hold[Charting`CommonDump`e], Charting`CommonDump`heldoptionqrules]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Charting`HeldOptionQ",
	"System`Dump`HeldOptionQ":"ObjectType: Symbol\nUsage: System`Dump`HeldOptionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldOptionQ[System`Dump`z_] := OptionQ[Unevaluated[System`Dump`z]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`HeldOptionQ",
	"FunctionProperties`Private`HeldPWArg":"ObjectType: Symbol\nUsage: FunctionProperties`Private`HeldPWArg\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: FunctionProperties`Private`HeldPWArg",
	"BoxForm`HeldRealNumberQ":"ObjectType: Symbol\nUsage: BoxForm`HeldRealNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldRealNumberQ[BoxForm`r:_Integer | _Rational | _Real] := NumberQ[Unevaluated[BoxForm`r]]\nBoxForm`HeldRealNumberQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldRealNumberQ",
	"System`Dump`HeldRealNumberQ":"ObjectType: Symbol\nUsage: System`Dump`HeldRealNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldRealNumberQ[System`Dump`r:_Integer | _Rational | _Real] := NumberQ[Unevaluated[System`Dump`r]]\nSystem`Dump`HeldRealNumberQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`HeldRealNumberQ",
	"System`Dump`HeldRulePresentQ":"ObjectType: Symbol\nUsage: System`Dump`HeldRulePresentQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`HeldRulePresentQ[System`Dump`expr_] := Internal`LiteralPresentQ[Unevaluated[System`Dump`expr], Rule]\nSystem`Dump`HeldRulePresentQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`HeldRulePresentQ",
	"BoxForm`HeldSparseOrStructuredArrayQ":"ObjectType: Symbol\nUsage: BoxForm`HeldSparseOrStructuredArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldSparseOrStructuredArrayQ[BoxForm`arr_] := ArrayQ[Unevaluated[BoxForm`arr]] && StructuredArray`ContainsSparseOrStructuredArray[Unevaluated[BoxForm`arr]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldSparseOrStructuredArrayQ",
	"StructuredArray`HeldStructuredArrayQ":"ObjectType: Symbol\nUsage: StructuredArray`HeldStructuredArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: StructuredArray`HeldStructuredArrayQ",
	"BoxForm`HeldSymbolQ":"ObjectType: Symbol\nUsage: BoxForm`HeldSymbolQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`HeldSymbolQ[BoxForm`s_Symbol] := AtomQ[Unevaluated[BoxForm`s]]\nBoxForm`HeldSymbolQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: BoxForm`HeldSymbolQ",
	"GIS`HelmertComposition":"ObjectType: Symbol\nUsage: GIS`HelmertComposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HelmertComposition[GIS`GeoModelDump`rules1_List, GIS`GeoModelDump`rules2_List] := GIS`GeoModelDump`HelmertParametersToRules[GIS`GeoModelDump`HelmertCompositionParameters[GIS`GeoModelDump`HelmertParametersFromRules[Flatten[GIS`GeoModelDump`rules1]], GIS`GeoModelDump`HelmertParametersFromRules[Flatten[GIS`GeoModelDump`rules2]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`HelmertComposition",
	"GIS`HelmertInverse":"ObjectType: Symbol\nUsage: GIS`HelmertInverse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`HelmertInverse[GIS`GeoModelDump`rules_List] := GIS`GeoModelDump`HelmertParametersToRules[GIS`GeoModelDump`HelmertInverseParameters[GIS`GeoModelDump`HelmertParametersFromRules[Flatten[GIS`GeoModelDump`rules]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`HelmertInverse",
	"Internal`HelpBrowserHyperlinkText":"ObjectType: Symbol\nUsage: Internal`HelpBrowserHyperlinkText\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`HelpBrowserHyperlinkText[_] := \"\"\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HelpBrowserHyperlinkText",
	"FrontEnd`HelpBrowserNotebook":"ObjectType: Symbol\nUsage: FrontEnd`HelpBrowserNotebook\nDocumentation: None\nOwnValues: None\nUpValues: Options[System`FEDump`obj_FrontEnd`HelpBrowserNotebook] := System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`Options[System`FEDump`obj]]]\nOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook, System`FEDump`option_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`Options[System`FEDump`obj, System`FEDump`optlist]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf}, Message[Options::optnf, System`FEDump`sf, FrontEnd`HelpBrowserNotebook]], System`FEDump`resnames]]; System`FEDump`result]\nFullOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook] ^:= System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`FullOptions[System`FEDump`obj]]]\nFrontEnd`HelpBrowserNotebook \/: FullOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook, System`FEDump`opts_List] := (FullOptions[System`FEDump`obj, #1] & ) \/@ Flatten[{System`FEDump`opts}]\nFullOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook, System`FEDump`option_] ^:= Block[{System`FEDump`result}, System`FEDump`result = MathLink`CallFrontEnd[FrontEnd`FullOptions[System`FEDump`obj, System`FEDump`option]]; If[System`FEDump`result === $Failed, Message[FullOptions::optx, System`FEDump`option, System`FEDump`obj]]; System`FEDump`result]\nAbsoluteOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook] ^:= System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`AbsoluteOptions[System`FEDump`obj]]]\nAbsoluteOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook, System`FEDump`option_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option}]}, System`FEDump`result = System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`AbsoluteOptions[System`FEDump`obj, System`FEDump`optlist]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, System`FEDump`obj] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[System`FEDump`obj_FrontEnd`HelpBrowserNotebook, System`FEDump`opts__] ^:= MathLink`CallFrontEnd[FrontEnd`SetOptions[System`FEDump`obj, System`FEDump`opts], System`FEDump`NoResult]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FrontEnd`HelpBrowserNotebook",
	"Documentation`HelpLookup":"ObjectType: Symbol\nUsage: Documentation`HelpLookup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Documentation`HelpLookup[System`Dump`link_String, System`Dump`opts:OptionsPattern[]] := Documentation`HelpLookup[System`Dump`link, FrontEnd`ButtonNotebook[], System`Dump`opts]\nDocumentation`HelpLookup[System`Dump`link_String, System`Dump`nb_, System`Dump`opts:OptionsPattern[]] := Documentation`HelpLookup[System`Dump`link, System`Dump`nb, CurrentValue[$FrontEnd, Language], System`Dump`opts]\nDocumentation`HelpLookup[System`Dump`link_String, System`Dump`nb_, System`Dump`language_String, System`Dump`opts:OptionsPattern[]] := Which[System`Dump`link == \"\" && CurrentValue[$FrontEnd, HomePage] =!= \"\", Documentation`HelpLookup[CurrentValue[$FrontEnd, HomePage], System`Dump`nb, System`Dump`language, System`Dump`opts], StringMatchQ[System`Dump`link, \"paclet:\"~~__], Documentation`HelpLookupPacletURI[System`Dump`link, System`Dump`nb, System`Dump`language, System`Dump`opts], StringMatchQ[System`Dump`link, \"http:\"~~__] || StringMatchQ[System`Dump`link, \"file:\"~~__], System`Dump`helpLookupURL[System`Dump`link, System`Dump`opts], StringMatchQ[System`Dump`link, __~~\"\/\"~~__] &&  !TrueQ[PacletManager`PacletManagerEnabled[]], Documentation`HelpLookupPacletURI[StringJoin[\"paclet:\", System`Dump`link], System`Dump`nb, System`Dump`language, System`Dump`opts], StringLength[System`Dump`link] === 1 || StringMatchQ[System`Dump`link, \"\\\\[\"~~__~~\"]\"], System`Dump`helpLookupCharacter[System`Dump`link, System`Dump`nb, System`Dump`language, System`Dump`opts], True, System`Dump`helpLookupFunctionName[System`Dump`link, System`Dump`nb, System`Dump`language, System`Dump`opts]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Documentation`CompletionFunction -> None}\nAttributes: {}\nFullName: Documentation`HelpLookup",
	"Documentation`HelpLookupMessage":"ObjectType: Symbol\nUsage: Documentation`HelpLookupMessage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Documentation`HelpLookupMessage[{System`Dump`context_String, System`Dump`symbolname_String, System`Dump`msgtag_String}, System`Dump`opts:OptionsPattern[]] := Documentation`HelpLookupMessage[{System`Dump`context, System`Dump`symbolname, System`Dump`msgtag}, FrontEnd`ButtonNotebook[], System`Dump`opts]\nDocumentation`HelpLookupMessage[{System`Dump`context_String, System`Dump`symbolname_String, System`Dump`msgtag_String}, System`Dump`nb_, System`Dump`opts:OptionsPattern[]] := Documentation`HelpLookupMessage[{System`Dump`context, System`Dump`symbolname, System`Dump`msgtag}, System`Dump`nb, CurrentValue[$FrontEnd, Language], System`Dump`opts]\nDocumentation`HelpLookupMessage[{System`Dump`context_String, System`Dump`symbolname_String, System`Dump`msgtag_String}, System`Dump`nb_, System`Dump`language_, System`Dump`opts:OptionsPattern[]] := Module[{System`Dump`messageuri, System`Dump`symbolpath}, System`Dump`symbolpath = System`Dump`symbolname; System`Dump`messageuri = StringJoin[\"paclet:ref\/message\/\", System`Dump`symbolpath, \"\/\", System`Dump`msgtag]; If[ !Documentation`LinkExists[System`Dump`messageuri], System`Dump`messageuri = StringJoin[\"paclet:ref\/message\/General\/\", System`Dump`msgtag]; If[ !Documentation`LinkExists[System`Dump`messageuri], System`Dump`messageuri = StringJoin[\"paclet:ref\/\", System`Dump`symbolname]; If[ !Documentation`LinkExists[System`Dump`messageuri], System`Dump`messageuri = \"paclet:guide\/Mathematica\"]]]; Documentation`HelpLookupPacletURI[System`Dump`messageuri, System`Dump`nb, System`Dump`language, System`Dump`opts]] \/;  !TrueQ[PacletManager`PacletManagerEnabled[]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Documentation`CompletionFunction -> None}\nAttributes: {}\nFullName: Documentation`HelpLookupMessage",
	"Documentation`HelpLookupPacletURI":"ObjectType: Symbol\nUsage: Documentation`HelpLookupPacletURI\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Documentation`HelpLookupPacletURI[System`Dump`link_String, System`Dump`opts:OptionsPattern[]] := Documentation`HelpLookupPacletURI[System`Dump`link, FrontEnd`ButtonNotebook[], CurrentValue[$FrontEnd, Language], System`Dump`opts]\nDocumentation`HelpLookupPacletURI[System`Dump`link_String, System`Dump`nb_, System`Dump`language_, System`Dump`opts:OptionsPattern[]] := If[System`Dump`language =!= \"English\" &&  !Documentation`LinkExists[System`Dump`link, System`Dump`language], Documentation`HelpLookupPacletURI[System`Dump`link, System`Dump`nb, \"English\", System`Dump`opts], NotebookLocate[{Documentation`ResolveLink[System`Dump`link, System`Dump`language], None}, FrontEnd`HistoryData -> {System`Dump`nb, System`Dump`link}]] \/;  !TrueQ[PacletManager`PacletManagerEnabled[]]\nDocumentation`HelpLookupPacletURI[PacletManager`Documentation`Private`link_String, PacletManager`Documentation`Private`feData_, PacletManager`Documentation`Private`language_, PacletManager`Documentation`Private`opts:OptionsPattern[]] := Module[{PacletManager`Documentation`Private`feDataFixed, PacletManager`Documentation`Private`resolved, PacletManager`Documentation`Private`lang = PacletManager`Documentation`Private`language, PacletManager`Documentation`Private`completionFunc, PacletManager`Documentation`Private`nb}, If[ !StringQ[PacletManager`Documentation`Private`lang], PacletManager`Documentation`Private`lang = \"English\"]; PacletManager`Documentation`Private`feDataFixed = PacletManager`Documentation`Private`feData \/. FrontEnd`ButtonNotebook[] :> ButtonNotebook[]; PacletManager`Documentation`Private`completionFunc = OptionValue[Documentation`CompletionFunction]; PacletManager`Documentation`Private`resolved = AbortProtect[If[ !StringStartsQ[PacletManager`Documentation`Private`link, \"paclet:\"] && TrueQ[DocumentationSearch`ReindexLegacyPacletsAndSearch[{PacletManager`Documentation`Private`link, PacletManager`Documentation`Private`feDataFixed, PacletManager`Documentation`Private`lang, PacletManager`Documentation`Private`opts}]], PacletManager`Documentation`Private`$future, PacletManager`Package`resolveURL[PacletManager`Documentation`Private`link, PacletManager`Documentation`Private`lang, PacletManager`Documentation`Private`feDataFixed, PacletManager`Documentation`Private`completionFunc, False, TrueQ[PacletManager`Package`$allowDialogs], True]]]; Which[PacletManager`Documentation`Private`resolved === PacletManager`Documentation`Private`$future, Null, ListQ[PacletManager`Documentation`Private`resolved], If[Head[First[PacletManager`Documentation`Private`resolved]] === URL, PacletManager`Documentation`Private`$webDocOpeningFunction[First[PacletManager`Documentation`Private`resolved]], PacletManager`Documentation`Private`nb = PacletManager`Documentation`Private`locateNotebook[PacletManager`Documentation`Private`resolved, PacletManager`Documentation`Private`feDataFixed]; If[Head[PacletManager`Documentation`Private`nb] === NotebookObject, PacletManager`Documentation`Private`completionFunc[PacletManager`Documentation`Private`nb]]; PacletManager`Documentation`Private`nb], True, MathLink`CallFrontEnd[FrontEnd`ErrorMessage[\"ItemNotFound\", PacletManager`Documentation`Private`link]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Documentation`CompletionFunction -> None}\nAttributes: {}\nFullName: Documentation`HelpLookupPacletURI",
	"LinearAlgebra`BLAS`HERK":"ObjectType: Symbol\nUsage: LinearAlgebra`BLAS`HERK\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`BLAS`HERK",
	"SparseArray`HermitianQ":"ObjectType: Symbol\nUsage: SparseArray`HermitianQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`HermitianQ",
	"ResourceFunctionHelpers`HessianMatrix":"ObjectType: Symbol\nUsage: \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`HessianMatrix[ResourceFunctionHelpers`HessianMatrix`Private`f_, ResourceFunctionHelpers`HessianMatrix`Private`v_List] := D[ResourceFunctionHelpers`HessianMatrix`Private`f, {ResourceFunctionHelpers`HessianMatrix`Private`v, 2}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`HessianMatrix",
	"NDSolve`FEM`HeuristicRegionDimension":"ObjectType: Symbol\nUsage: NDSolve`FEM`HeuristicRegionDimension\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`em_, NDSolve`FEM`ElementMeshDump`opts:OptionsPattern[NDSolve`FEM`HeuristicRegionDimension]] \/; NDSolve`FEM`BoundaryElementMeshQ[NDSolve`FEM`ElementMeshDump`em] := Last[Dimensions[NDSolve`FEM`ElementMeshDump`em[\"Coordinates\"]]] - 1\nNDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`em_, NDSolve`FEM`ElementMeshDump`opts:OptionsPattern[NDSolve`FEM`HeuristicRegionDimension]] \/; NDSolve`FEM`ElementMeshQ[NDSolve`FEM`ElementMeshDump`em] &&  !NDSolve`FEM`BoundaryElementMeshQ[NDSolve`FEM`ElementMeshDump`em] := Last[Dimensions[NDSolve`FEM`ElementMeshDump`em[\"Coordinates\"]]]\nNDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`mr_, NDSolve`FEM`ElementMeshDump`opts:OptionsPattern[NDSolve`FEM`HeuristicRegionDimension]] \/; MeshRegionQ[NDSolve`FEM`ElementMeshDump`mr] || BoundaryMeshRegionQ[NDSolve`FEM`ElementMeshDump`mr] := RegionDimension[NDSolve`FEM`ElementMeshDump`mr]\nNDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`nr_, NDSolve`FEM`ElementMeshDump`opts:OptionsPattern[NDSolve`FEM`HeuristicRegionDimension]] \/; NDSolve`FEM`ElementMeshDump`regionQ[NDSolve`FEM`ElementMeshDump`nr] := Block[{NDSolve`FEM`ElementMeshDump`sr, NDSolve`FEM`ElementMeshDump`m, NDSolve`FEM`ElementMeshDump`hrd}, NDSolve`FEM`ElementMeshDump`sr = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`nr, \"SymbolicRegion\"]; NDSolve`FEM`ElementMeshDump`hrd = NDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`sr, NDSolve`FEM`ElementMeshDump`opts]; If[NDSolve`FEM`ElementMeshDump`HeuristicRegionDimensionQ[NDSolve`FEM`ElementMeshDump`hrd], Return[NDSolve`FEM`ElementMeshDump`hrd, Block]; ]; NDSolve`FEM`ElementMeshDump`m = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`nr, \"ElementMesh\"]; If[NDSolve`FEM`ElementMeshQ[NDSolve`FEM`ElementMeshDump`m], Return[NDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`m, NDSolve`FEM`ElementMeshDump`opts], Block]; ]; NDSolve`FEM`ElementMeshDump`m = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`nr, \"BoundaryMesh\"]; If[NDSolve`FEM`BoundaryElementMeshQ[NDSolve`FEM`ElementMeshDump`m], Return[NDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`m, NDSolve`FEM`ElementMeshDump`opts], Block]; ]; $Failed]\nNDSolve`FEM`HeuristicRegionDimension[NDSolve`FEM`ElementMeshDump`r_, NDSolve`FEM`ElementMeshDump`opts:OptionsPattern[NDSolve`FEM`HeuristicRegionDimension]] := Block[{NDSolve`FEM`ElementMeshDump`hrd, NDSolve`FEM`ElementMeshDump`timeLimit}, NDSolve`FEM`ElementMeshDump`timeLimit = N[OptionValue[\"TimeConstraint\"]]; NDSolve`FEM`ElementMeshDump`timeLimit = Switch[NDSolve`FEM`ElementMeshDump`timeLimit, _?(#1 >= 0 & ), NDSolve`FEM`ElementMeshDump`timeLimit, None | False, 0, _, NDSolve`FEM`ElementMeshDump`defaultSymbolicProcessingTime[]]; If[Positive[NDSolve`FEM`ElementMeshDump`timeLimit], NDSolve`FEM`ElementMeshDump`hrd = TimeConstrained[Quiet[RegionDimension[NDSolve`FEM`ElementMeshDump`r]], NDSolve`FEM`ElementMeshDump`timeLimit, $Failed]; If[NDSolve`FEM`ElementMeshDump`HeuristicRegionDimensionQ[NDSolve`FEM`ElementMeshDump`hrd], Return[NDSolve`FEM`ElementMeshDump`hrd, Block]; ]; ]; NDSolve`FEM`ElementMeshDump`hrd = Max[Region`Mesh`RegionSpecificationData[NDSolve`FEM`ElementMeshDump`r, \"RegionDimensionTimeLimit\" -> NDSolve`FEM`ElementMeshDump`timeLimit][\"ComponentDimensions\"]]; If[NDSolve`FEM`ElementMeshDump`HeuristicRegionDimensionQ[NDSolve`FEM`ElementMeshDump`hrd], Return[NDSolve`FEM`ElementMeshDump`hrd, Block]; ]; $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {TimeConstraint -> Automatic}\nAttributes: {}\nFullName: NDSolve`FEM`HeuristicRegionDimension",
	"NDSolve`FEM`HexahedronElement":"ObjectType: Symbol\nUsage: NDSolve`FEM`HexahedronElement\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`FEM`MeshElementFaceType[_NDSolve`FEM`HexahedronElement] ^= NDSolve`FEM`QuadElement\nNDSolve`FEM`MeshElementFaceIncidents[NDSolve`FEM`MeshElementsDump`e_NDSolve`FEM`HexahedronElement] ^:= NDSolve`FEM`MeshElementsDump`HexFaces[NDSolve`FEM`MeshElementOrder[NDSolve`FEM`MeshElementsDump`e]]\nNDSolve`FEM`MeshElementDimensionality[_NDSolve`FEM`HexahedronElement] ^= 3\nNDSolve`FEM`GetInterpolationData[NDSolve`FEM`HexahedronElement, NDSolve`FEM`MeshElementsDump`order_] ^:= Block[{NDSolve`FEM`MeshElementsDump`f, NDSolve`FEM`MeshElementsDump`F, NDSolve`FEM`MeshElementsDump`basecoords, NDSolve`FEM`MeshElementsDump`ebasis, NDSolve`FEM`MeshElementsDump`nx, NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s, NDSolve`FEM`MeshElementsDump`t, NDSolve`FEM`MeshElementsDump`mat, NDSolve`FEM`MeshElementsDump`coeffs, NDSolve`FEM`MeshElementsDump`ifun, NDSolve`FEM`MeshElementsDump`d, NDSolve`FEM`MeshElementsDump`ni, NDSolve`FEM`MeshElementsDump`ecoords, NDSolve`FEM`MeshElementsDump`ivals, NDSolve`FEM`MeshElementsDump`Sv}, NDSolve`FEM`MeshElementsDump`basecoords = NDSolve`FEM`MeshElementBaseCoordinates[NDSolve`FEM`HexahedronElement, NDSolve`FEM`MeshElementsDump`order]; NDSolve`FEM`MeshElementsDump`nx = Length[NDSolve`FEM`MeshElementsDump`basecoords]; NDSolve`FEM`MeshElementsDump`F = Table[NDSolve`FEM`MeshElementsDump`f[NDSolve`FEM`MeshElementsDump`i], {NDSolve`FEM`MeshElementsDump`i, 0, NDSolve`FEM`MeshElementsDump`nx - 1}]; NDSolve`FEM`MeshElementsDump`ebasis[{NDSolve`FEM`MeshElementsDump`r_, NDSolve`FEM`MeshElementsDump`s_, NDSolve`FEM`MeshElementsDump`t_}] = NDSolve`FEM`MeshElementBasePolynomial[NDSolve`FEM`HexahedronElement, NDSolve`FEM`MeshElementsDump`order, {NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s, NDSolve`FEM`MeshElementsDump`t}]; NDSolve`FEM`MeshElementsDump`mat = NDSolve`FEM`MeshElementsDump`ebasis \/@ NDSolve`FEM`MeshElementsDump`basecoords; NDSolve`FEM`MeshElementsDump`coeffs = FullSimplify[LinearSolve[NDSolve`FEM`MeshElementsDump`mat, NDSolve`FEM`MeshElementsDump`F]]; NDSolve`FEM`MeshElementsDump`ifun[{NDSolve`FEM`MeshElementsDump`r_, NDSolve`FEM`MeshElementsDump`s_, NDSolve`FEM`MeshElementsDump`t_}] = NDSolve`FEM`MeshElementsDump`coeffs . NDSolve`FEM`MeshElementsDump`ebasis[{NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s, NDSolve`FEM`MeshElementsDump`t}]; NDSolve`FEM`MeshElementsDump`d = Max[(Sum[Exponent[#1, NDSolve`FEM`MeshElementsDump`v], {NDSolve`FEM`MeshElementsDump`v, {NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s, NDSolve`FEM`MeshElementsDump`t}}] & ) \/@ NDSolve`FEM`MeshElementsDump`ebasis[{NDSolve`FEM`MeshElementsDump`r, NDSolve`FEM`MeshElementsDump`s, NDSolve`FEM`MeshElementsDump`t}]]; NDSolve`FEM`MeshElementsDump`ni = Binomial[NDSolve`FEM`MeshElementsDump`d + 3, 3]; NDSolve`FEM`MeshElementsDump`ivals = NDSolve`FEM`MeshElementsDump`ifun \/@ Take[NDSolve`FEM`MeshElementsDump`hextracoordinates, NDSolve`FEM`MeshElementsDump`ni - Length[NDSolve`FEM`MeshElementsDump`basecoords]]; NDSolve`FEM`MeshElementsDump`Sv = Last[CoefficientArrays[NDSolve`FEM`MeshElementsDump`ivals, NDSolve`FEM`MeshElementsDump`F]]; NDSolve`FEM`MeshElementsDump`Sv = SparseArray[NDSolve`FEM`MeshElementsDump`Sv]; {NDSolve`FEM`MeshElementsDump`hextracoordinates, NDSolve`FEM`MeshElementsDump`Sv}]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`HexahedronElement",
	"Internal`HGCD":"ObjectType: Symbol\nUsage: Internal`HGCD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: Internal`HGCD",
	"LinearAlgebra`LAPACK`HGEQZ":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`HGEQZ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`LAPACK`HGEQZ",
	"Package`HiddenContexts":"ObjectType: Symbol\nUsage: Package`HiddenContexts\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Package`HiddenContexts",
	"Image`TransformsDump`HiddenImagePyramidProperties":"None",
	"Package`HiddenImport":"ObjectType: Symbol\nUsage: Package`HiddenImport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Package`HiddenImport",
	"PacletManager`Paclet`Private`HiddenImport":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`HiddenImport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`HiddenImport",
	"Image`FilteringDump`HierarchicalMeanShiftFilter":"ObjectType: Symbol\nUsage: Image`FilteringDump`HierarchicalMeanShiftFilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`FilteringDump`HierarchicalMeanShiftFilter[Image`FilteringDump`image_, Image`FilteringDump`radius_, Image`FilteringDump`thr_, Image`FilteringDump`maxiter_] := Module[{Image`FilteringDump`tmp, Image`FilteringDump`diff, Image`FilteringDump`pyramid}, Image`FilteringDump`pyramid = Reverse[Image`Utilities`gaussianPyramid[Image`FilteringDump`image]]; Image`FilteringDump`tmp = Fold[(Image`FilteringDump`tmp = MeanShiftFilter[#1, Image`FilteringDump`radius, Image`FilteringDump`thr, MaxIterations -> Image`FilteringDump`maxiter]; Image`FilteringDump`tmp = Image`FilteringDump`gaussianPyramidUpsample[Image`FilteringDump`tmp, ImageDimensions[#2]]; Image`FilteringDump`diff = Binarize[ImageDifference[Image`FilteringDump`tmp, #2], Image`FilteringDump`thr]; ImageAdd[ImageMultiply[#2, Image`FilteringDump`diff], ImageMultiply[Image`FilteringDump`tmp, ColorNegate[Image`FilteringDump`diff]]]) & , First[Image`FilteringDump`pyramid], Rest[Image`FilteringDump`pyramid]]; MeanShiftFilter[Image`FilteringDump`tmp, Image`FilteringDump`radius, Image`FilteringDump`thr, MaxIterations -> Image`FilteringDump`maxiter]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FilteringDump`HierarchicalMeanShiftFilter",
	"SparseArray`HighDimensionalEmbedding":"ObjectType: Symbol\nUsage: SparseArray`HighDimensionalEmbedding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RandomSeed -> Automatic, RefinementMethod -> None, Rotation -> 0}\nAttributes: {}\nFullName: SparseArray`HighDimensionalEmbedding",
	"Charting`HighlightActionBox":"ObjectType: Symbol\nUsage: Charting`HighlightActionBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`HighlightActionBox[___] := {}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`HighlightActionBox",
	"Charting`Highlighted":"ObjectType: Symbol\nUsage: Charting`Highlighted\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`Highlighted",
	"GraphComputation`HighlightGraphics":"ObjectType: Symbol\nUsage: GraphComputation`HighlightGraphics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`HighlightGraphics[GraphComputation`GraphLibraryDump`expr_, GraphComputation`GraphLibraryDump`dir_:Automatic] := Block[{GraphComputation`GraphLibraryDump`res}, GraphComputation`GraphLibraryDump`res = If[GraphComputation`GraphLibraryDump`dir === Automatic, GraphComputation`GraphInformation[\"Highlighting\", \"Style\"], Directive[GraphComputation`GraphInformation[\"Highlighting\", \"Style\"], GraphComputation`GraphLibraryDump`dir]]; GraphComputation`GraphLibraryDump`highlightGraphics[GraphComputation`GraphLibraryDump`expr, GraphComputation`GraphLibraryDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`HighlightGraphics",
	"GraphComputation`HighlightPrimitive":"ObjectType: Symbol\nUsage: GraphComputation`HighlightPrimitive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`HighlightPrimitive[GraphComputation`GraphChartLibraryDump`expr_, GraphComputation`GraphChartLibraryDump`dir_:Automatic] := Block[{GraphComputation`GraphChartLibraryDump`res}, GraphComputation`GraphChartLibraryDump`res = If[GraphComputation`GraphChartLibraryDump`dir === Automatic, GraphComputation`GraphChartLibraryDump`$HighlightDefault, GraphComputation`GraphChartLibraryDump`dir]; GraphComputation`GraphChartLibraryDump`highlightPrimitive[GraphComputation`GraphChartLibraryDump`expr, GraphComputation`GraphChartLibraryDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`HighlightPrimitive",
	"Wavelets`HighpassFilters":"ObjectType: Symbol\nUsage: Wavelets`HighpassFilters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`HighpassFilters[Wavelets`WaveletsCommonDump`coef_List] := Module[{Wavelets`WaveletsCommonDump`L, Wavelets`WaveletsCommonDump`LL, Wavelets`WaveletsCommonDump`nIndex, Wavelets`WaveletsCommonDump`wfilter, Wavelets`WaveletsCommonDump`i}, Wavelets`WaveletsCommonDump`L = Length[Wavelets`WaveletsCommonDump`coef[[All,2]]]; Wavelets`WaveletsCommonDump`LL = 2 - Wavelets`WaveletsCommonDump`coef[[1,1]] - Wavelets`WaveletsCommonDump`L; Wavelets`WaveletsCommonDump`nIndex = Table[Wavelets`WaveletsCommonDump`i, {Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`LL, Wavelets`WaveletsCommonDump`LL + Wavelets`WaveletsCommonDump`L - 1}]; Wavelets`WaveletsCommonDump`wfilter = (-1)^(Wavelets`WaveletsCommonDump`L + Wavelets`WaveletsCommonDump`LL)*Table[(-1)^Wavelets`WaveletsCommonDump`i, {Wavelets`WaveletsCommonDump`i, 0, Wavelets`WaveletsCommonDump`L - 1}]*Reverse[Wavelets`WaveletsCommonDump`coef[[All,2]]]; Transpose[{Wavelets`WaveletsCommonDump`nIndex, Wavelets`WaveletsCommonDump`wfilter}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`HighpassFilters",
	"Region`HighPrecBoundingRegion":"ObjectType: Symbol\nUsage: Region`HighPrecBoundingRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`HighPrecBoundingRegion[BoundingRegionDump`points_, BoundingRegionDump`reg_, \"MinConvexPolygon\" | \"MinConvexPolyhedron\", BoundingRegionDump`prec_] := Module[{BoundingRegionDump`pts, BoundingRegionDump`head, BoundingRegionDump`vert, BoundingRegionDump`hpvt, BoundingRegionDump`cc}, BoundingRegionDump`pts = If[BoundingRegionDump`prec === Infinity, BoundingRegionDump`points, N[BoundingRegionDump`points, BoundingRegionDump`prec]]; BoundingRegionDump`head = Head[BoundingRegionDump`reg]; If[BoundingRegionDump`head =!= BoundaryMeshRegion && BoundingRegionDump`head =!= MeshRegion, Return[$Failed]]; BoundingRegionDump`vert = MeshCoordinates[BoundingRegionDump`reg]; If[ !MatrixQ[BoundingRegionDump`vert], Return[$Failed]]; BoundingRegionDump`hpvt = (Nearest[BoundingRegionDump`pts, #1][[1]] & ) \/@ BoundingRegionDump`vert; BoundingRegionDump`cc = MeshCells[BoundingRegionDump`reg, RegionDimension[BoundingRegionDump`reg] - Boole[BoundingRegionDump`head === BoundaryMeshRegion]]; BoundingRegionDump`head[BoundingRegionDump`hpvt, BoundingRegionDump`cc, WorkingPrecision -> BoundingRegionDump`prec]]\nRegion`HighPrecBoundingRegion[BoundingRegionDump`points_, (Disk | Ball)[BoundingRegionDump`c_, BoundingRegionDump`r_], BoundingRegionDump`op:\"MinDisk\" | \"MinBall\", BoundingRegionDump`prec_] := Module[{BoundingRegionDump`pts, BoundingRegionDump`r2, BoundingRegionDump`cc, BoundingRegionDump`rr}, BoundingRegionDump`pts = If[BoundingRegionDump`prec === Infinity, BoundingRegionDump`points, N[BoundingRegionDump`points, BoundingRegionDump`prec]]; BoundingRegionDump`r2 = 0.9999999*BoundingRegionDump`r^2; BoundingRegionDump`pts = Select[BoundingRegionDump`pts, BoundingRegionDump`rNorm2[#1 - BoundingRegionDump`c] >= BoundingRegionDump`r2 & ]; If[Length[BoundingRegionDump`pts] < 2, Return[$Failed]]; {BoundingRegionDump`cc, BoundingRegionDump`rr} = BoundingRegionDump`minball[BoundingRegionDump`pts]; If[BoundingRegionDump`op === \"MinDisk\", Disk, Ball][BoundingRegionDump`cc, BoundingRegionDump`rr]]\nRegion`HighPrecBoundingRegion[BoundingRegionDump`points_, Parallelogram[BoundingRegionDump`p_, {BoundingRegionDump`v1_, BoundingRegionDump`v2_}], \"FastOrientedRectangle\", BoundingRegionDump`prec_] := Module[{BoundingRegionDump`pts, BoundingRegionDump`c, BoundingRegionDump`w1, BoundingRegionDump`w2, BoundingRegionDump`u1, BoundingRegionDump`u2, BoundingRegionDump`r, BoundingRegionDump`eps}, BoundingRegionDump`pts = If[BoundingRegionDump`prec === Infinity, BoundingRegionDump`points, N[BoundingRegionDump`points, BoundingRegionDump`prec]]; BoundingRegionDump`w1 = BoundingRegionDump`v1\/2; BoundingRegionDump`w2 = BoundingRegionDump`v2\/2; BoundingRegionDump`c = SetPrecision[BoundingRegionDump`p + BoundingRegionDump`w1 + BoundingRegionDump`w2, BoundingRegionDump`prec]; BoundingRegionDump`eps = 1.0000000001; While[True, BoundingRegionDump`u1 = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`w1, BoundingRegionDump`prec]; BoundingRegionDump`u2 = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`w2, BoundingRegionDump`prec]; BoundingRegionDump`r = Parallelogram[BoundingRegionDump`c - BoundingRegionDump`u1 - BoundingRegionDump`u2, {2*BoundingRegionDump`u1, 2*BoundingRegionDump`u2}]; If[And @@ RegionMember[BoundingRegionDump`r, BoundingRegionDump`pts], Return[BoundingRegionDump`r, Module]]; BoundingRegionDump`eps *= 2]; $Failed]\nRegion`HighPrecBoundingRegion[BoundingRegionDump`points_, Parallelepiped[BoundingRegionDump`p_, {BoundingRegionDump`v1_, BoundingRegionDump`v2_, BoundingRegionDump`v3_}], \"FastOrientedCuboid\", BoundingRegionDump`prec_] := Module[{BoundingRegionDump`pts, BoundingRegionDump`c, BoundingRegionDump`w1, BoundingRegionDump`w2, BoundingRegionDump`w3, BoundingRegionDump`u1, BoundingRegionDump`u2, BoundingRegionDump`u3, BoundingRegionDump`reg, BoundingRegionDump`eps}, BoundingRegionDump`pts = If[BoundingRegionDump`prec === Infinity, BoundingRegionDump`points, N[BoundingRegionDump`points, BoundingRegionDump`prec]]; BoundingRegionDump`w1 = BoundingRegionDump`v1\/2; BoundingRegionDump`w2 = BoundingRegionDump`v2\/2; BoundingRegionDump`w3 = BoundingRegionDump`v3\/2; BoundingRegionDump`c = SetPrecision[BoundingRegionDump`p + BoundingRegionDump`w1 + BoundingRegionDump`w2 + BoundingRegionDump`w3, BoundingRegionDump`prec]; BoundingRegionDump`eps = 1.0000000001; While[True, BoundingRegionDump`u1 = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`w1, BoundingRegionDump`prec]; BoundingRegionDump`u2 = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`w2, BoundingRegionDump`prec]; BoundingRegionDump`u3 = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`w3, BoundingRegionDump`prec]; BoundingRegionDump`reg = Parallelepiped[BoundingRegionDump`c - BoundingRegionDump`u1 - BoundingRegionDump`u2 - BoundingRegionDump`u3, {2*BoundingRegionDump`u1, 2*BoundingRegionDump`u2, 2*BoundingRegionDump`u3}]; If[And @@ RegionMember[BoundingRegionDump`reg, BoundingRegionDump`pts], Return[BoundingRegionDump`reg, Module]]; BoundingRegionDump`eps *= 2]; $Failed]\nRegion`HighPrecBoundingRegion[BoundingRegionDump`points_, BoundingRegionDump`ireg:(Disk | Ball | Ellipsoid)[BoundingRegionDump`c_, BoundingRegionDump`r_], \"FastDisk\" | \"FastBall\" | \"FastEllipse\" | \"FastEllipsoid\" | \"FastStadium\" | \"FastCapsule\", BoundingRegionDump`prec_] := Module[{BoundingRegionDump`pts, BoundingRegionDump`cc, BoundingRegionDump`rr, BoundingRegionDump`reg, BoundingRegionDump`head}, BoundingRegionDump`pts = If[BoundingRegionDump`prec === Infinity, BoundingRegionDump`points, N[BoundingRegionDump`points, BoundingRegionDump`prec]]; BoundingRegionDump`cc = SetPrecision[BoundingRegionDump`c, BoundingRegionDump`prec]; BoundingRegionDump`eps = 1.0000000001; BoundingRegionDump`head = Head[BoundingRegionDump`ireg]; While[True, BoundingRegionDump`rr = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`r, BoundingRegionDump`prec]; BoundingRegionDump`reg = BoundingRegionDump`head[BoundingRegionDump`cc, BoundingRegionDump`rr]; If[And @@ RegionMember[BoundingRegionDump`reg, BoundingRegionDump`pts], Return[BoundingRegionDump`reg, Module]]; BoundingRegionDump`eps *= 2]; $Failed]\nRegion`HighPrecBoundingRegion[BoundingRegionDump`points_, BoundingRegionDump`ireg:(Cylinder | StadiumShape | CapsuleShape)[{BoundingRegionDump`p1_, BoundingRegionDump`p2_}, BoundingRegionDump`r_], \"FastCylinder\" | \"FastStadium\" | \"FastCapsule\", BoundingRegionDump`prec_] := Module[{BoundingRegionDump`pts, BoundingRegionDump`c, BoundingRegionDump`v, BoundingRegionDump`u, BoundingRegionDump`rr, BoundingRegionDump`reg, BoundingRegionDump`head}, BoundingRegionDump`pts = If[BoundingRegionDump`prec === Infinity, BoundingRegionDump`points, N[BoundingRegionDump`points, BoundingRegionDump`prec]]; BoundingRegionDump`v = (BoundingRegionDump`p2 - BoundingRegionDump`p1)\/2; BoundingRegionDump`c = SetPrecision[(BoundingRegionDump`p1 + BoundingRegionDump`p2)\/2, BoundingRegionDump`prec]; BoundingRegionDump`eps = 1.0000000001; BoundingRegionDump`head = Head[BoundingRegionDump`ireg]; While[True, BoundingRegionDump`u = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`v, BoundingRegionDump`prec]; BoundingRegionDump`rr = SetPrecision[BoundingRegionDump`eps*BoundingRegionDump`r, BoundingRegionDump`prec]; BoundingRegionDump`reg = BoundingRegionDump`head[{BoundingRegionDump`c - BoundingRegionDump`u, BoundingRegionDump`c + BoundingRegionDump`u}, BoundingRegionDump`rr]; If[And @@ RegionMember[BoundingRegionDump`reg, BoundingRegionDump`pts], Return[BoundingRegionDump`reg, Module]]; BoundingRegionDump`eps *= 2]; $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`HighPrecBoundingRegion",
	"Reduce`HIntegral":"ObjectType: Symbol\nUsage: Reduce`HIntegral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldAll}\nFullName: Reduce`HIntegral",
	"Reduce`HIntegralValue":"ObjectType: Symbol\nUsage: Reduce`HIntegralValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`HIntegralValue[System`HIntegralDump`f_, System`HIntegralDump`a_, System`HIntegralDump`bb_, System`HIntegralDump`c_] := Module[{System`HIntegralDump`d, System`HIntegralDump`one, System`HIntegralDump`g, System`HIntegralDump`gg, System`HIntegralDump`X, System`HIntegralDump`Y, System`HIntegralDump`p, System`HIntegralDump`q, System`HIntegralDump`i, System`HIntegralDump`k, System`HIntegralDump`tmp, System`HIntegralDump`maxt, System`HIntegralDump`prec}, System`HIntegralDump`d = Rationalize[System`HIntegralDump`c - System`HIntegralDump`a, 0]; System`HIntegralDump`one = (System`HIntegralDump`c - System`HIntegralDump`a)\/System`HIntegralDump`d; System`HIntegralDump`k = Length[System`HIntegralDump`bb]; System`HIntegralDump`g = System`HIntegralDump`d^System`HIntegralDump`k*System`HIntegralDump`f[System`HIntegralDump`a + System`HIntegralDump`d*System`HIntegralDump`X]; System`HIntegralDump`gg = Reduce`ToUnivariateFunction[System`HIntegralDump`g, System`HIntegralDump`X]; If[System`HIntegralDump`gg === $Failed, Return[$Failed]]; If[ !FunctionProperties`HolomorphicQ[System`HIntegralDump`gg, {0, 1}], Return[$Failed]]; System`HIntegralDump`prec = If[Internal`PrecAccur[{System`HIntegralDump`f, System`HIntegralDump`a, System`HIntegralDump`c}] === MachinePrecision, MachinePrecision, Internal`PrecAccur[{System`HIntegralDump`a, System`HIntegralDump`c}]]; If[System`HIntegralDump`prec === MachinePrecision ||  !System`HIntegralDump`ElementaryQ[System`HIntegralDump`f[[1]]], If[System`HIntegralDump`prec < 2, Return[$Failed]]; System`HIntegralDump`g = SetPrecision[System`HIntegralDump`g, System`HIntegralDump`prec]; If[System`HIntegralDump`k == 1, System`HIntegralDump`q = System`HIntegralDump`bb[[1]] + NIntegrate[System`HIntegralDump`g, {System`HIntegralDump`X, 0, 1}, WorkingPrecision -> System`HIntegralDump`prec], System`HIntegralDump`tmp = NDSolve[{Derivative[System`HIntegralDump`k][System`HIntegralDump`Y][System`HIntegralDump`X] == System`HIntegralDump`g, Sequence @@ Table[Derivative[System`HIntegralDump`i - 1][System`HIntegralDump`Y][0] == System`HIntegralDump`d^(System`HIntegralDump`i - 1)*System`HIntegralDump`bb[[System`HIntegralDump`i]], {System`HIntegralDump`i, System`HIntegralDump`k}]}, System`HIntegralDump`Y, {System`HIntegralDump`X, 0, 1}, WorkingPrecision -> System`HIntegralDump`prec]; If[ !ListQ[System`HIntegralDump`tmp] || Length[System`HIntegralDump`tmp] != 1, Return[$Failed]]; System`HIntegralDump`tmp = System`HIntegralDump`Y \/. System`HIntegralDump`tmp[[1]]; System`HIntegralDump`q = System`HIntegralDump`tmp[1]]; Return[If[NumberQ[System`HIntegralDump`q], System`HIntegralDump`q, $Failed]]]; System`HIntegralDump`d = System`HIntegralDump`c - System`HIntegralDump`a; System`HIntegralDump`p = System`HIntegralDump`bb[[1]] + Sum[(System`HIntegralDump`bb[[System`HIntegralDump`i + 1]]*System`HIntegralDump`d^System`HIntegralDump`i)\/System`HIntegralDump`i!, {System`HIntegralDump`i, System`HIntegralDump`k - 1}]; If[System`HIntegralDump`d == 0, Return[System`HIntegralDump`p + (System`HIntegralDump`d^System`HIntegralDump`k*System`HIntegralDump`f[System`HIntegralDump`c])\/System`HIntegralDump`k!]]; System`HIntegralDump`prec = Min[System`HIntegralDump`prec, Accuracy[System`HIntegralDump`p]] + Log[10., System`HIntegralDump`$MaxSteps] + 3; System`HIntegralDump`g = System`HIntegralDump`gg[SetPrecision[1, System`HIntegralDump`prec + System`HIntegralDump`$ExtraPrec]*System`HIntegralDump`X]; System`HIntegralDump`maxt = If[System`HIntegralDump`$MaxTaylorTerms === Automatic, Max[Round[2.5*System`HIntegralDump`prec], 50], System`HIntegralDump`$MaxTaylorTerms]; System`HIntegralDump`q = Block[{$RecursionLimit = Max[$RecursionLimit, 10*System`HIntegralDump`$MaxSteps]}, System`HIntegralDump`HoloInt[System`HIntegralDump`g, System`HIntegralDump`X, System`HIntegralDump`gg, 0, System`HIntegralDump`one, System`HIntegralDump`k, System`HIntegralDump`$MaxSteps, System`HIntegralDump`maxt, System`HIntegralDump`prec]]; If[ !NumberQ[System`HIntegralDump`q], Return[$Failed]]; System`HIntegralDump`q += SetAccuracy[0, System`HIntegralDump`prec - Log[10., System`HIntegralDump`$MaxSteps]]; System`HIntegralDump`p + System`HIntegralDump`q]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`HIntegralValue",
	"Charting`HistArgCheck":"ObjectType: Symbol\nUsage: Charting`HistArgCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`HistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[{}, Charting`CommonDump`opts:OptionsPattern[]], ___] := True\nCharting`HistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[{{}..}, Charting`CommonDump`opts:OptionsPattern[]], ___] := True\nCharting`HistArgCheck[Charting`CommonDump`b:(Charting`CommonDump`f_)[Charting`CommonDump`args___, Charting`CommonDump`opts:OptionsPattern[]], Charting`CommonDump`ifn_, Charting`CommonDump`n_:3] := Block[{Charting`CommonDump`len}, Charting`CommonDump`len = Length[Unevaluated[{Charting`CommonDump`args}]]; If[Charting`CommonDump`len <= Charting`CommonDump`n, ArgumentCountQ[Charting`CommonDump`f, Charting`CommonDump`len, 1, Charting`CommonDump`n], Message[Charting`CommonDump`f::nonopt, Last[Function[Charting`CommonDump`z, HoldForm[Charting`CommonDump`z], HoldAll] \/@ Unevaluated[{Charting`CommonDump`args}]], 3, HoldForm[Charting`CommonDump`b]]; False, False]] && Charting`optCheck[Charting`CommonDump`b, Charting`CommonDump`ifn]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Charting`HistArgCheck",
	"Charting`HistogramTranparencyIntervals":"ObjectType: Symbol\nUsage: Charting`HistogramTranparencyIntervals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`HistogramTranparencyIntervals",
	"Charting`CommonDump`HistogramTransparencyIntervals":"ObjectType: Symbol\nUsage: Charting`CommonDump`HistogramTransparencyIntervals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`CommonDump`HistogramTransparencyIntervals[Charting`CommonDump`data_, Charting`CommonDump`q_:0.8] := Module[{Charting`CommonDump`bins, Charting`CommonDump`vals, Charting`CommonDump`tot, Charting`CommonDump`count, Charting`CommonDump`p, Charting`CommonDump`i}, {Charting`CommonDump`bins, Charting`CommonDump`vals} = HistogramList[Flatten[Charting`CommonDump`data], 20]; Charting`CommonDump`tot = Total[Charting`CommonDump`vals]; Charting`CommonDump`p = Ordering[Charting`CommonDump`vals, All, Greater]; Charting`CommonDump`i = 1; Charting`CommonDump`count = Charting`CommonDump`vals[[Charting`CommonDump`p]][[1]]; While[Charting`CommonDump`count\/Charting`CommonDump`tot < Charting`CommonDump`q, Charting`CommonDump`i++; Charting`CommonDump`count += Charting`CommonDump`vals[[Charting`CommonDump`p]][[Charting`CommonDump`i]]]; Interval @@ Partition[Rescale[Charting`CommonDump`bins], 2, 1][[Take[Charting`CommonDump`p, Charting`CommonDump`i]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`CommonDump`HistogramTransparencyIntervals",
	"FrontEnd`HistoryData":"ObjectType: Symbol\nUsage: FrontEnd`HistoryData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FrontEnd`HistoryData",
	"Image`HMaxTransform":"ObjectType: Symbol\nUsage: Image`HMaxTransform\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`HMaxTransform[Image`CompositionOperationsDump`args___] := Module[{Image`CompositionOperationsDump`n, Image`CompositionOperationsDump`res}, Image`CompositionOperationsDump`n = System`Private`TestOptions[Image`HMaxTransform[Image`CompositionOperationsDump`args], 2, 2]; Image`CompositionOperationsDump`res = If[Image`CompositionOperationsDump`n < 0, $Failed, Image`MorphologicalOperationsDump`iHExtrema[Image`HMaxTransform, {Image`CompositionOperationsDump`args}[[1 ;; Image`CompositionOperationsDump`n]], {Image`CompositionOperationsDump`args}[[Image`CompositionOperationsDump`n + 1 ;; All]]]]; Image`CompositionOperationsDump`res \/; Image`CompositionOperationsDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CornerNeighbors -> True, Padding -> 0}\nAttributes: {}\nFullName: Image`HMaxTransform",
	"Image`HMinTransform":"ObjectType: Symbol\nUsage: Image`HMinTransform\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`HMinTransform[Image`CompositionOperationsDump`args___] := Module[{Image`CompositionOperationsDump`n, Image`CompositionOperationsDump`res}, Image`CompositionOperationsDump`n = System`Private`TestOptions[Image`HMinTransform[Image`CompositionOperationsDump`args], 2, 2]; Image`CompositionOperationsDump`res = If[Image`CompositionOperationsDump`n < 0, $Failed, Image`MorphologicalOperationsDump`iHExtrema[Image`HMinTransform, {Image`CompositionOperationsDump`args}[[1 ;; Image`CompositionOperationsDump`n]], {Image`CompositionOperationsDump`args}[[Image`CompositionOperationsDump`n + 1 ;; All]]]]; Image`CompositionOperationsDump`res \/; Image`CompositionOperationsDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CornerNeighbors -> True, Padding -> 1}\nAttributes: {}\nFullName: Image`HMinTransform",
	"NSolve`HNSolve":"ObjectType: Symbol\nUsage: NSolve`HNSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {NSolve`MaxPathsFollow -> 1, RandomSeeding -> 0}\nAttributes: {}\nFullName: NSolve`HNSolve",
	"Statistics`RobustStatistics`HodgesLehmannEstimator":"ObjectType: Symbol\nUsage: Statistics`RobustStatistics`HodgesLehmannEstimator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[Statistics`RobustStatistics`Dump`e:Statistics`RobustStatistics`HodgesLehmannEstimator[___]] := Module[{Statistics`RobustStatistics`Dump`parse, Statistics`RobustStatistics`Dump`args, Statistics`RobustStatistics`Dump`dummy, Statistics`RobustStatistics`Dump`res}, Statistics`RobustStatistics`Dump`parse = System`Private`Arguments[Statistics`RobustStatistics`Dump`e, {1, 2}, List, {}]; ({Statistics`RobustStatistics`Dump`args, Statistics`RobustStatistics`Dump`dummy} = Statistics`RobustStatistics`Dump`parse; If[Length[Statistics`RobustStatistics`Dump`args] == 1, Statistics`RobustStatistics`Dump`res = Statistics`RobustStatistics`Dump`iHodgesLehmannCenter @@ Statistics`RobustStatistics`Dump`args, Statistics`RobustStatistics`Dump`res = Statistics`RobustStatistics`Dump`iHodgesLehmannDiff @@ Statistics`RobustStatistics`Dump`args; If[Internal`LiterallyOccurringQ[Statistics`RobustStatistics`Dump`res, MessageName], Message @@ Insert[Statistics`RobustStatistics`Dump`res, HoldForm[Statistics`RobustStatistics`Dump`e], 2]; Statistics`RobustStatistics`Dump`res = $Failed]]; Statistics`RobustStatistics`Dump`res \/; Statistics`RobustStatistics`Dump`res =!= $Failed) \/; Length[Statistics`RobustStatistics`Dump`parse] === 2 && ListQ[Statistics`RobustStatistics`Dump`parse]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`RobustStatistics`HodgesLehmannEstimator",
	"Typeset`Hold":"ObjectType: Symbol\nUsage: Typeset`Hold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Typeset`Hold",
	"Developer`HoldAtomQ":"ObjectType: Symbol\nUsage: Developer`HoldAtomQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Developer`HoldAtomQ",
	"System`Private`HoldEntryQ":"ObjectType: Symbol\nUsage: System`Private`HoldEntryQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HoldEntryQ",
	"System`Private`HoldNoEntryQ":"ObjectType: Symbol\nUsage: System`Private`HoldNoEntryQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HoldNoEntryQ",
	"System`Private`HoldNotValidQ":"ObjectType: Symbol\nUsage: System`Private`HoldNotValidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HoldNotValidQ",
	"System`ConvertersDump`Utilities`HoldSet":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`HoldSet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`HoldSet[Hold[System`ConvertersDump`Utilities`Private`sym_], System`ConvertersDump`Utilities`Private`rhs_] := System`ConvertersDump`Utilities`Private`sym = System`ConvertersDump`Utilities`Private`rhs\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`HoldSet",
	"System`Private`HoldSetNoEntry":"ObjectType: Symbol\nUsage: System`Private`HoldSetNoEntry\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HoldSetNoEntry",
	"System`Private`HoldSetValid":"ObjectType: Symbol\nUsage: System`Private`HoldSetValid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HoldSetValid",
	"Developer`HoldSymbolQ":"ObjectType: Symbol\nUsage: Developer`HoldSymbolQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Developer`HoldSymbolQ",
	"Internal`HoldUntil":"ObjectType: Symbol\nUsage: Internal`HoldUntil\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Internal`HoldUntil",
	"System`Private`HoldValidQ":"ObjectType: Symbol\nUsage: System`Private`HoldValidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`HoldValidQ",
	"DateAndTime`HolidayCalendarEpochBound":"ObjectType: Symbol\nUsage: DateAndTime`HolidayCalendarEpochBound\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`HolidayCalendarEpochBound[DataPaclets`CalendarDataDump`args___] := DataPaclets`CalendarDataDump`epochBound[DataPaclets`CalendarDataDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`HolidayCalendarEpochBound",
	"DateAndTime`HolidayIncrementQ":"ObjectType: Symbol\nUsage: DateAndTime`HolidayIncrementQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`HolidayIncrementQ[System`InternalDateUtilitiesDump`arg_] := If[MemberQ[Join[System`InternalDateUtilitiesDump`$businessDays, System`InternalDateUtilitiesDump`$holidays], Verbatim[System`InternalDateUtilitiesDump`arg]], DateAndTime`InitializeHolidayCalendar[]; True, False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`HolidayIncrementQ",
	"ComplexAnalysis`HolomorphicQ":"ObjectType: Symbol\nUsage: HolomorphicQ[f, z] returns True if f is a holomorphic function. HolomorphicQ works best if there are no symbolic parameters.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ComplexAnalysis`HolomorphicQ[ComplexAnalysis`Private`expr_, ComplexAnalysis`Private`x_] := FunctionProperties`HolomorphicQ[ComplexAnalysis`Private`expr, ComplexAnalysis`Private`x, {-Infinity, Infinity}]\nComplexAnalysis`HolomorphicQ[ComplexAnalysis`Private`f:_Symbol | _Function] := Module[{ComplexAnalysis`Private`xx, ComplexAnalysis`Private`res}, ComplexAnalysis`Private`res = ComplexAnalysis`HolomorphicQ[ComplexAnalysis`Private`f[ComplexAnalysis`Private`xx], ComplexAnalysis`Private`xx]; ComplexAnalysis`Private`res \/; FreeQ[ComplexAnalysis`Private`res, ComplexAnalysis`HolomorphicQ]]\nSubValues: None\nDefaultValues: SyntaxInformation[ComplexAnalysis`HolomorphicQ] = {\"ArgumentsPattern\" -> {_, _.}, \"LocalVariables\" -> {Solve, {2}}}\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComplexAnalysis`HolomorphicQ",
	"FunctionProperties`HolomorphicQ":"ObjectType: Symbol\nUsage: FunctionProperties`HolomorphicQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FunctionProperties`HolomorphicQ[System`HolomorphicDump`f_, {System`HolomorphicDump`a_, System`HolomorphicDump`b_}, System`HolomorphicDump`dd_:1\/10] := If[TrueQ[Re[System`HolomorphicDump`b] < Re[System`HolomorphicDump`a] || Im[System`HolomorphicDump`b] < Im[System`HolomorphicDump`a]], True, Module[{System`HolomorphicDump`X}, System`HolomorphicDump`holoQ[System`HolomorphicDump`f[System`HolomorphicDump`X], System`HolomorphicDump`X, {System`HolomorphicDump`a, System`HolomorphicDump`b}, System`HolomorphicDump`dd]]]\nFunctionProperties`HolomorphicQ[System`HolomorphicDump`f_, System`HolomorphicDump`x_, {System`HolomorphicDump`a_, System`HolomorphicDump`b_}, System`HolomorphicDump`dd_:1\/10] := If[TrueQ[Re[System`HolomorphicDump`b] < Re[System`HolomorphicDump`a] || Im[System`HolomorphicDump`b] < Im[System`HolomorphicDump`a]], True, System`HolomorphicDump`holoQ[System`HolomorphicDump`f, System`HolomorphicDump`x, {System`HolomorphicDump`a, System`HolomorphicDump`b}, System`HolomorphicDump`dd]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FunctionProperties`HolomorphicQ",
	"Holonomic`HolonomicAddPolynomial":"ObjectType: Symbol\nUsage: Holonomic`HolonomicAddPolynomial\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicAddPolynomial[Holonomic`Private`HolonomicOperationsDump`a_, Holonomic`Private`HolonomicOperationsDump`b:(_DifferenceRoot | _DifferentialRoot)[Holonomic`Private`HolonomicOperationsDump`k_], Holonomic`Private`HolonomicOperationsDump`k_] \/;  !Holonomic`Private`HolonomicDependsOnQ[{Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`b}, Holonomic`Private`HolonomicOperationsDump`k] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`HolonomicPlus[Holonomic`Private`HolonomicOperationsDump`a + Holonomic`Private`HolonomicOperationsDump`b, Holonomic`Private`HolonomicOperationsDump`k]; Holonomic`Private`HolonomicOperationsDump`res \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res, $Failed]]\nHolonomic`HolonomicAddPolynomial[Holonomic`Private`HolonomicOperationsDump`a_, (Holonomic`Private`HolonomicOperationsDump`b:DifferenceRoot[__])[Holonomic`Private`HolonomicOperationsDump`k_], Holonomic`Private`HolonomicOperationsDump`k_] \/;  !Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicOperationsDump`b, Holonomic`Private`HolonomicOperationsDump`k] && PolynomialQ[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`k] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`res2, Holonomic`Private`HolonomicOperationsDump`parm, Holonomic`Private`HolonomicOperationsDump`y}, Holonomic`Private`HolonomicOperationsDump`parm = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`b, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}]; (Holonomic`Private`HolonomicOperationsDump`res1 = Collect[Holonomic`Private`HolonomicOperationsDump`parm[[2]] \/. Holonomic`Private`HolonomicOperationsDump`y -> Function[Holonomic`Private`HolonomicOperationsDump`k, Holonomic`Private`HolonomicOperationsDump`y[Holonomic`Private`HolonomicOperationsDump`k] - Holonomic`Private`HolonomicOperationsDump`a], Holonomic`Private`HolonomicOperationsDump`y[_]]; Holonomic`Private`HolonomicOperationsDump`res2 = MapIndexed[Function[{Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`v}, MapIndexed[#1 + (Holonomic`Private`HolonomicOperationsDump`a \/. Holonomic`Private`HolonomicOperationsDump`k -> Holonomic`Private`HolonomicOperationsDump`u + First[#2] - 1) & , Holonomic`Private`HolonomicOperationsDump`parm[[4,First[Holonomic`Private`HolonomicOperationsDump`v]]]]], Holonomic`Private`HolonomicOperationsDump`parm[[3]]]; Holonomic`Private`HolonomicOperationsDump`res = Holonomic`ToDifferenceRoot[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parm[[3]], Holonomic`Private`HolonomicOperationsDump`res2]; Holonomic`Private`HolonomicOperationsDump`res[Holonomic`Private`HolonomicOperationsDump`k] \/; Head[Holonomic`Private`HolonomicOperationsDump`res] === DifferenceRoot) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`parm, $Failed]]\nHolonomic`HolonomicAddPolynomial[Holonomic`Private`HolonomicOperationsDump`a_, (Holonomic`Private`HolonomicOperationsDump`b:DifferentialRoot[__])[Holonomic`Private`HolonomicOperationsDump`x_], Holonomic`Private`HolonomicOperationsDump`x_] \/;  !Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicOperationsDump`b, Holonomic`Private`HolonomicOperationsDump`x] && PolynomialQ[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`x] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`res2, Holonomic`Private`HolonomicOperationsDump`res3, Holonomic`Private`HolonomicOperationsDump`parm, Holonomic`Private`HolonomicOperationsDump`i, Holonomic`Private`HolonomicOperationsDump`y}, Holonomic`Private`HolonomicOperationsDump`parm = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`b, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}]; (Holonomic`Private`HolonomicOperationsDump`res1 = Collect[Holonomic`Private`HolonomicOperationsDump`parm[[2]] \/. Holonomic`Private`HolonomicOperationsDump`y -> Function[Holonomic`Private`HolonomicOperationsDump`x, Holonomic`Private`HolonomicOperationsDump`y[Holonomic`Private`HolonomicOperationsDump`x] - Holonomic`Private`HolonomicOperationsDump`a], Holonomic`Private`HolonomicOperationsDump`y[Holonomic`Private`HolonomicOperationsDump`x] | Derivative[_][Holonomic`Private`HolonomicOperationsDump`y][Holonomic`Private`HolonomicOperationsDump`x]]; Holonomic`Private`HolonomicOperationsDump`res2 = Table[D[Holonomic`Private`HolonomicOperationsDump`a, {Holonomic`Private`HolonomicOperationsDump`x, Holonomic`Private`HolonomicOperationsDump`i}], {Holonomic`Private`HolonomicOperationsDump`i, 0, Length[Holonomic`Private`HolonomicOperationsDump`parm[[4,1]]] - 1}]; Holonomic`Private`HolonomicOperationsDump`res3 = MapIndexed[(Holonomic`Private`HolonomicOperationsDump`res2 \/. Holonomic`Private`HolonomicOperationsDump`x -> #1) + Holonomic`Private`HolonomicOperationsDump`parm[[4,First[#2]]] & , Holonomic`Private`HolonomicOperationsDump`parm[[3]]]; Holonomic`Private`HolonomicOperationsDump`res = Holonomic`ToDifferentialRoot[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parm[[3]], Holonomic`Private`HolonomicOperationsDump`res3, Holonomic`Private`HolonomicOperationsDump`parm[[5]]]; Holonomic`Private`HolonomicOperationsDump`res[Holonomic`Private`HolonomicOperationsDump`x] \/; Head[Holonomic`Private`HolonomicOperationsDump`res] === DifferentialRoot) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`parm, $Failed]]\nHolonomic`HolonomicAddPolynomial[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicAddPolynomial",
	"Holonomic`HolonomicAlgebraicComposition":"ObjectType: Symbol\nUsage: Holonomic`HolonomicAlgebraicComposition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicAlgebraicComposition[Holonomic`Private`HolonomicOperationsDump`f_, Holonomic`Private`HolonomicOperationsDump`g_, Holonomic`Private`HolonomicOperationsDump`x_, Holonomic`Private`HolonomicOperationsDump`u_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicAlgebraicComposition[Holonomic`Private`HolonomicOperationsDump`f, Holonomic`Private`HolonomicOperationsDump`g, Holonomic`Private`HolonomicOperationsDump`x, Holonomic`Private`HolonomicOperationsDump`u]; Holonomic`Private`HolonomicOperationsDump`res \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res, $Failed]]\nHolonomic`HolonomicAlgebraicComposition[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicAlgebraicComposition",
	"Holonomic`Developer`HolonomicAlgebraicFunctionDerivatives":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicAlgebraicFunctionDerivatives\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicAlgebraicFunctionDerivatives[Holonomic`Developer`HolonomicDeveloperDump`expr_, Holonomic`Developer`HolonomicDeveloperDump`x_, Holonomic`Developer`HolonomicDeveloperDump`y_, Holonomic`Developer`HolonomicDeveloperDump`d_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`algebraicFunctionDerivatives[Holonomic`Developer`HolonomicDeveloperDump`expr, Holonomic`Developer`HolonomicDeveloperDump`x, Holonomic`Developer`HolonomicDeveloperDump`y, Holonomic`Developer`HolonomicDeveloperDump`d]; Holonomic`Developer`HolonomicDeveloperDump`res \/; FreeQ[Holonomic`Developer`HolonomicDeveloperDump`res, $Failed]]\nHolonomic`Developer`HolonomicAlgebraicFunctionDerivatives[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicAlgebraicFunctionDerivatives",
	"Holonomic`Developer`HolonomicAlgebraicFunctionQ":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicAlgebraicFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicAlgebraicFunctionQ[Holonomic`Developer`HolonomicDeveloperDump`expr_, Holonomic`Developer`HolonomicDeveloperDump`x_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res, Holonomic`Developer`HolonomicDeveloperDump`y}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`holonomicAlgebraicRelationQ[Holonomic`Developer`HolonomicDeveloperDump`expr, Holonomic`Developer`HolonomicDeveloperDump`x, Holonomic`Developer`HolonomicDeveloperDump`y]; True \/; TrueQ[Holonomic`Developer`HolonomicDeveloperDump`res]]\nHolonomic`Developer`HolonomicAlgebraicFunctionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicAlgebraicFunctionQ",
	"Holonomic`Developer`HolonomicAlgebraicRelation":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicAlgebraicRelation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicAlgebraicRelation[Holonomic`Developer`HolonomicDeveloperDump`expr_, Holonomic`Developer`HolonomicDeveloperDump`x_, Holonomic`Developer`HolonomicDeveloperDump`y_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`holonomicAlgebraicRelation[Holonomic`Developer`HolonomicDeveloperDump`expr, Holonomic`Developer`HolonomicDeveloperDump`x, Holonomic`Developer`HolonomicDeveloperDump`y]; Holonomic`Developer`HolonomicDeveloperDump`res \/; FreeQ[Holonomic`Developer`HolonomicDeveloperDump`res, $Failed]]\nHolonomic`Developer`HolonomicAlgebraicRelation[Holonomic`Developer`HolonomicDeveloperDump`expr_, Holonomic`Developer`HolonomicDeveloperDump`x_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res, Holonomic`Developer`HolonomicDeveloperDump`y}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`holonomicAlgebraicRelation[Holonomic`Developer`HolonomicDeveloperDump`expr, Holonomic`Developer`HolonomicDeveloperDump`x, Holonomic`Developer`HolonomicDeveloperDump`y]; (Evaluate[Holonomic`Developer`HolonomicDeveloperDump`res \/. Holonomic`Developer`HolonomicDeveloperDump`y -> #1] & ) \/; FreeQ[Holonomic`Developer`HolonomicDeveloperDump`res, $Failed]]\nHolonomic`Developer`HolonomicAlgebraicRelation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicAlgebraicRelation",
	"Holonomic`Developer`HolonomicBranchCuts":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicBranchCuts\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicBranchCuts[Holonomic`Developer`HolonomicDeveloperDump`a_, Holonomic`Developer`HolonomicDeveloperDump`x_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`holonomicBranchCuts[Holonomic`Developer`HolonomicDeveloperDump`a, Holonomic`Developer`HolonomicDeveloperDump`x]; Holonomic`Developer`HolonomicDeveloperDump`res \/; FreeQ[Holonomic`Developer`HolonomicDeveloperDump`res, $Failed]]\nHolonomic`Developer`HolonomicBranchCuts[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicBranchCuts",
	"Holonomic`Developer`HolonomicCertificateFoldHypergeometricTerm":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicCertificateFoldHypergeometricTerm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicCertificateFoldHypergeometricTerm[Holonomic`Developer`HolonomicDeveloperDump`expr_, Holonomic`Developer`HolonomicDeveloperDump`n_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`certificateFoldHypergeometricTerm[Holonomic`Developer`HolonomicDeveloperDump`expr, Holonomic`Developer`HolonomicDeveloperDump`n]; Together[Holonomic`Developer`HolonomicDeveloperDump`res] \/; Holonomic`Developer`HolonomicDeveloperDump`res =!= $Failed]\nHolonomic`Developer`HolonomicCertificateFoldHypergeometricTerm[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicCertificateFoldHypergeometricTerm",
	"Holonomic`HolonomicCoefficientList":"ObjectType: Symbol\nUsage: Holonomic`HolonomicCoefficientList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicCoefficientList",
	"Holonomic`HolonomicDefiniteSum":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDefiniteSum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDefiniteSum[Holonomic`Private`HolonomicSolversDump`expr_, {Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`a_, Holonomic`Private`HolonomicSolversDump`b_}] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`y}, Holonomic`Private`HolonomicSolversDump`res1 = Sum`SumZeilbergerRecurrence[Holonomic`Private`HolonomicSolversDump`expr, {Holonomic`Private`HolonomicSolversDump`n, Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`b}, Holonomic`Private`HolonomicSolversDump`y, 3]; (Holonomic`Private`HolonomicSolversDump`res = Holonomic`HolonomicRSolve[Holonomic`Private`HolonomicSolversDump`res1[[1]], Holonomic`Private`HolonomicSolversDump`res1[[2]], Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`res1[[3]], C, 1]; Holonomic`Private`HolonomicSolversDump`res[[1,1,2]] \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res1, $Failed]]\nHolonomic`HolonomicDefiniteSum[Holonomic`Private`HolonomicSolversDump`expr_, {Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`a_, Holonomic`Private`HolonomicSolversDump`b_}] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`expr, Holonomic`Private`HolonomicSolversDump`n]; (Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicDefiniteSum[Holonomic`Private`HolonomicSolversDump`res1, {Holonomic`Private`HolonomicSolversDump`n, Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`b}]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res1, $Failed]]\nHolonomic`HolonomicDefiniteSum[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDefiniteSum",
	"Holonomic`Private`HolonomicDependsOnQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicDependsOnQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicLibraryDump`r_, Holonomic`Private`HolonomicLibraryDump`k_] := Internal`DependsOnQ[Holonomic`Private`HolonomicLibraryDump`r, Holonomic`Private`HolonomicLibraryDump`k]\nHolonomic`Private`HolonomicDependsOnQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicDependsOnQ",
	"Holonomic`HolonomicDerivative":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDerivative\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDerivative[(Holonomic`Private`HolonomicSolversDump`n_Integer)?Positive, Holonomic`Private`HolonomicSolversDump`f_DifferentialRoot] := Block[{Holonomic`Private`HolonomicSolversDump`res}, Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicDerivative[Holonomic`Private`HolonomicSolversDump`n, Holonomic`Private`HolonomicSolversDump`f]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]]\nHolonomic`HolonomicDerivative[1, Holonomic`Private`HolonomicSolversDump`f_DifferentialRoot, Holonomic`Private`HolonomicSolversDump`a:Except[_List | _?NumericQ]] := Block[{Holonomic`Private`HolonomicSolversDump`res}, Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicDerivative[1, Holonomic`Private`HolonomicSolversDump`f, Holonomic`Private`HolonomicSolversDump`a]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]]\nHolonomic`HolonomicDerivative[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDerivative",
	"Holonomic`HolonomicDifferenceDelta":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDifferenceDelta\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDifferenceDelta[Holonomic`Private`HolonomicSolversDump`expr_, {Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`k_, Holonomic`Private`HolonomicSolversDump`h_}] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`expr, Holonomic`Private`HolonomicSolversDump`n]; (Holonomic`Private`HolonomicSolversDump`res = Catch[Holonomic`Private`HolonomicSolversDump`holonomicDifferenceDelta[Holonomic`Private`HolonomicSolversDump`res1, {Holonomic`Private`HolonomicSolversDump`n, Holonomic`Private`HolonomicSolversDump`k, Holonomic`Private`HolonomicSolversDump`h}]]; Holonomic`Private`HolonomicSolversDump`res \/; Holonomic`Private`HolonomicSolversDump`res =!= $Failed) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferenceRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`n]]\nHolonomic`HolonomicDifferenceDelta[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDifferenceDelta",
	"Holonomic`HolonomicDifferenceRootObjectQ":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDifferenceRootObjectQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDifferenceRootObjectQ[Holonomic`Private`HolonomicLibraryDump`r:DifferenceRoot[_][_], Holonomic`Private`HolonomicLibraryDump`k_] \/; Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicLibraryDump`r, Holonomic`Private`HolonomicLibraryDump`k] := True\nHolonomic`HolonomicDifferenceRootObjectQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDifferenceRootObjectQ",
	"Holonomic`Private`HolonomicDifferenceRootVariables":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicDifferenceRootVariables\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicDifferenceRootVariables[Holonomic`Private`HolonomicLibraryDump`expr_] := Block[{Holonomic`Private`HolonomicLibraryDump`res}, Holonomic`Private`HolonomicLibraryDump`res = Holonomic`Private`HolonomicLibraryDump`holonomicDifferenceRootVariables[Holonomic`Private`HolonomicLibraryDump`expr]; Holonomic`Private`HolonomicLibraryDump`res \/; Holonomic`Private`HolonomicLibraryDump`res =!= $Failed]\nHolonomic`Private`HolonomicDifferenceRootVariables[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicDifferenceRootVariables",
	"Holonomic`Private`HolonomicDifferenceSets":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicDifferenceSets\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicDifferenceSets[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`k_, Holonomic`Private`HolonomicLibraryDump`d_, {}, {}] := Block[{Holonomic`Private`HolonomicLibraryDump`res}, Holonomic`Private`HolonomicLibraryDump`res = Quiet[Check[Table[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`k, 0, Holonomic`Private`HolonomicLibraryDump`d - 1}], $Failed]]; {{0}, {Holonomic`Private`HolonomicLibraryDump`res}} \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed | Indeterminate | DirectedInfinity]]\nHolonomic`Private`HolonomicDifferenceSets[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`k_, Holonomic`Private`HolonomicLibraryDump`d_, {Holonomic`Private`HolonomicLibraryDump`x_}, {}] := Block[{Holonomic`Private`HolonomicLibraryDump`res}, Holonomic`Private`HolonomicLibraryDump`res = Quiet[Check[Table[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`x, Holonomic`Private`HolonomicLibraryDump`x + Holonomic`Private`HolonomicLibraryDump`d}], $Failed]]; {{Holonomic`Private`HolonomicLibraryDump`x}, {Holonomic`Private`HolonomicLibraryDump`res}} \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed | Indeterminate | DirectedInfinity]]\nHolonomic`Private`HolonomicDifferenceSets[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`k_, Holonomic`Private`HolonomicLibraryDump`d_, {}, {Holonomic`Private`HolonomicLibraryDump`x_}] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1}, Holonomic`Private`HolonomicLibraryDump`res1 = Quiet[Check[Table[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`x + 1, Holonomic`Private`HolonomicLibraryDump`x + Holonomic`Private`HolonomicLibraryDump`d}], $Failed]]; (Holonomic`Private`HolonomicLibraryDump`res = Quiet[Check[Table[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`x - Holonomic`Private`HolonomicLibraryDump`d, Holonomic`Private`HolonomicLibraryDump`x - 1}], $Failed]]; {{Holonomic`Private`HolonomicLibraryDump`x - Holonomic`Private`HolonomicLibraryDump`d, Holonomic`Private`HolonomicLibraryDump`x + 1}, {Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1}} \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed | Indeterminate | DirectedInfinity]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res1, $Failed | Indeterminate | DirectedInfinity]]\nHolonomic`Private`HolonomicDifferenceSets[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`k_, Holonomic`Private`HolonomicLibraryDump`d_, Holonomic`Private`HolonomicLibraryDump`iroots_, Holonomic`Private`HolonomicLibraryDump`droots_] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`pairs, Holonomic`Private`HolonomicLibraryDump`roots, Holonomic`Private`HolonomicLibraryDump`u, Holonomic`Private`HolonomicLibraryDump`v}, Holonomic`Private`HolonomicLibraryDump`roots = Union[Holonomic`Private`HolonomicLibraryDump`iroots, Holonomic`Private`HolonomicLibraryDump`droots]; (Holonomic`Private`HolonomicLibraryDump`u = Last[Holonomic`Private`HolonomicLibraryDump`roots]; Holonomic`Private`HolonomicLibraryDump`res2 = Quiet[Check[Table[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`u + 1, Holonomic`Private`HolonomicLibraryDump`u + Holonomic`Private`HolonomicLibraryDump`d}], $Failed]]; (Holonomic`Private`HolonomicLibraryDump`v = First[Holonomic`Private`HolonomicLibraryDump`roots]; Holonomic`Private`HolonomicLibraryDump`res1 = Quiet[Check[Table[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`v - Holonomic`Private`HolonomicLibraryDump`d, Holonomic`Private`HolonomicLibraryDump`v - 1}], $Failed]]; (Holonomic`Private`HolonomicLibraryDump`res = Catch[(Holonomic`Private`HolonomicLibraryDump`initialValuesSets[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`d, #1, Holonomic`Private`HolonomicLibraryDump`iroots, Holonomic`Private`HolonomicLibraryDump`droots] & ) \/@ Partition[Flatten[{Holonomic`Private`HolonomicLibraryDump`roots, Holonomic`Private`HolonomicLibraryDump`u + 1}], 2, 1]]; {{Holonomic`Private`HolonomicLibraryDump`v - Holonomic`Private`HolonomicLibraryDump`d, Sequence @@ Holonomic`Private`HolonomicLibraryDump`res[[All,1]], Holonomic`Private`HolonomicLibraryDump`u + 1}, {Holonomic`Private`HolonomicLibraryDump`res1, Sequence @@ Holonomic`Private`HolonomicLibraryDump`res[[All,2]], Holonomic`Private`HolonomicLibraryDump`res2}} \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed | Indeterminate | DirectedInfinity] && Holonomic`Private`HolonomicLibraryDump`res =!= {}) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res1, $Failed | Indeterminate | DirectedInfinity]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res2, $Failed | Indeterminate | DirectedInfinity]) \/; Length[Holonomic`Private`HolonomicLibraryDump`roots] >= 2]\nHolonomic`Private`HolonomicDifferenceSets[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicDifferenceSets",
	"Holonomic`Private`HolonomicDifferenceSetsOperation":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicDifferenceSetsOperation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicDifferenceSetsOperation[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`b_, Holonomic`Private`HolonomicLibraryDump`ord_, Holonomic`Private`HolonomicLibraryDump`sing_, Holonomic`Private`HolonomicLibraryDump`op_] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`pts, Holonomic`Private`HolonomicLibraryDump`vals, Holonomic`Private`HolonomicLibraryDump`len, Holonomic`Private`HolonomicLibraryDump`u, Holonomic`Private`HolonomicLibraryDump`v, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`k}, Holonomic`Private`HolonomicLibraryDump`u = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`k}]; Holonomic`Private`HolonomicLibraryDump`v = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`b, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`k}]; (Holonomic`Private`HolonomicLibraryDump`pts = Flatten[{Transpose[{Holonomic`Private`HolonomicLibraryDump`u[[3]], Length \/@ Holonomic`Private`HolonomicLibraryDump`u[[4]]}], Transpose[{Holonomic`Private`HolonomicLibraryDump`v[[3]], Length \/@ Holonomic`Private`HolonomicLibraryDump`v[[4]]}]}, 1]; Holonomic`Private`HolonomicLibraryDump`pts = Join[Holonomic`Private`HolonomicLibraryDump`pts, ({#1, 1} & ) \/@ Flatten[{Holonomic`Private`HolonomicLibraryDump`sing, Holonomic`Private`HolonomicLibraryDump`sing + 1, Holonomic`Private`HolonomicLibraryDump`sing - Holonomic`Private`HolonomicLibraryDump`ord}]]; Holonomic`Private`HolonomicLibraryDump`pts = Split[Sort[Holonomic`Private`HolonomicLibraryDump`pts], #1[[1]] == #2[[1]] & ][[All,-1]]; Holonomic`Private`HolonomicLibraryDump`vals = MapIndexed[Catch[Holonomic`Private`HolonomicLibraryDump`len = #1 + Max[Holonomic`Private`HolonomicLibraryDump`ord, Holonomic`Private`HolonomicLibraryDump`pts[[First[#2],2]]] - 1; Holonomic`Private`HolonomicLibraryDump`res1 = Quiet[Table[Holonomic`Private`HolonomicLibraryDump`a[Holonomic`Private`HolonomicLibraryDump`k], {Holonomic`Private`HolonomicLibraryDump`k, #1, Holonomic`Private`HolonomicLibraryDump`len}]]; If[ !FreeQ[Holonomic`Private`HolonomicLibraryDump`res1, $Failed | Indeterminate | DirectedInfinity | Holonomic`Private`HolonomicLibraryDump`a], Throw[$Failed]]; Holonomic`Private`HolonomicLibraryDump`res2 = Quiet[Table[Holonomic`Private`HolonomicLibraryDump`b[Holonomic`Private`HolonomicLibraryDump`k], {Holonomic`Private`HolonomicLibraryDump`k, #1, Holonomic`Private`HolonomicLibraryDump`len}]]; If[ !FreeQ[Holonomic`Private`HolonomicLibraryDump`res2, $Failed | Indeterminate | DirectedInfinity | Holonomic`Private`HolonomicLibraryDump`b], Throw[$Failed]]; Throw[{#1, Holonomic`Private`HolonomicLibraryDump`op[Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2]}]] & , Holonomic`Private`HolonomicLibraryDump`pts[[All,1]]]; Holonomic`Private`HolonomicLibraryDump`res = Select[Holonomic`Private`HolonomicLibraryDump`vals, #1 =!= $Failed & ]; {Holonomic`Private`HolonomicLibraryDump`res[[All,1]], Holonomic`Private`HolonomicLibraryDump`res[[All,2]]} \/; Length[Holonomic`Private`HolonomicLibraryDump`res] > 0) \/; FreeQ[{Holonomic`Private`HolonomicLibraryDump`u, Holonomic`Private`HolonomicLibraryDump`v}, $Failed]]\nHolonomic`Private`HolonomicDifferenceSetsOperation[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`ord_, Holonomic`Private`HolonomicLibraryDump`sing_, Holonomic`Private`HolonomicLibraryDump`op_] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`pts, Holonomic`Private`HolonomicLibraryDump`vals, Holonomic`Private`HolonomicLibraryDump`len, Holonomic`Private`HolonomicLibraryDump`u, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`k}, Holonomic`Private`HolonomicLibraryDump`u = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`k}]; (Holonomic`Private`HolonomicLibraryDump`pts = Transpose[{Holonomic`Private`HolonomicLibraryDump`u[[3]], Length \/@ Holonomic`Private`HolonomicLibraryDump`u[[4]]}]; Holonomic`Private`HolonomicLibraryDump`pts = Join[Holonomic`Private`HolonomicLibraryDump`pts, ({#1, 1} & ) \/@ Flatten[{Holonomic`Private`HolonomicLibraryDump`sing, Holonomic`Private`HolonomicLibraryDump`sing + 1, Holonomic`Private`HolonomicLibraryDump`sing - Holonomic`Private`HolonomicLibraryDump`ord}]]; Holonomic`Private`HolonomicLibraryDump`pts = Split[Sort[Holonomic`Private`HolonomicLibraryDump`pts], #1[[1]] == #2[[1]] & ][[All,-1]]; Holonomic`Private`HolonomicLibraryDump`vals = MapIndexed[Catch[Holonomic`Private`HolonomicLibraryDump`len = #1 + Max[Holonomic`Private`HolonomicLibraryDump`ord, Holonomic`Private`HolonomicLibraryDump`pts[[First[#2],2]]] - 1; Holonomic`Private`HolonomicLibraryDump`res1 = Quiet[Table[Holonomic`Private`HolonomicLibraryDump`a[Holonomic`Private`HolonomicLibraryDump`k], {Holonomic`Private`HolonomicLibraryDump`k, #1, Holonomic`Private`HolonomicLibraryDump`len}]]; If[ !FreeQ[Holonomic`Private`HolonomicLibraryDump`res1, $Failed | Indeterminate | DirectedInfinity | Holonomic`Private`HolonomicLibraryDump`a], Throw[$Failed]]; Throw[{#1, Holonomic`Private`HolonomicLibraryDump`op[Holonomic`Private`HolonomicLibraryDump`res1]}]] & , Holonomic`Private`HolonomicLibraryDump`pts[[All,1]]]; Holonomic`Private`HolonomicLibraryDump`res = Select[Holonomic`Private`HolonomicLibraryDump`vals, #1 =!= $Failed & ]; {Holonomic`Private`HolonomicLibraryDump`res[[All,1]], Holonomic`Private`HolonomicLibraryDump`res[[All,2]]} \/; Length[Holonomic`Private`HolonomicLibraryDump`res] > 0) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`u, $Failed]]\nHolonomic`Private`HolonomicDifferenceSetsOperation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicDifferenceSetsOperation",
	"Holonomic`HolonomicDifferentialRootObjectQ":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDifferentialRootObjectQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDifferentialRootObjectQ[Holonomic`Private`HolonomicLibraryDump`r:DifferentialRoot[__][_], Holonomic`Private`HolonomicLibraryDump`x_] \/; Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicLibraryDump`r, Holonomic`Private`HolonomicLibraryDump`x] := True\nHolonomic`HolonomicDifferentialRootObjectQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDifferentialRootObjectQ",
	"Holonomic`HolonomicDiscreteQShift":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDiscreteQShift\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDiscreteQShift[Holonomic`Private`HolonomicSolversDump`a_, {Holonomic`Private`HolonomicSolversDump`x_, Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`h_:1}, Holonomic`Private`HolonomicSolversDump`q_] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`c}, Holonomic`Private`HolonomicSolversDump`c = Holonomic`Private`HolonomicSolversDump`q^(Holonomic`Private`HolonomicSolversDump`n*Holonomic`Private`HolonomicSolversDump`h); (Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`x]; (Holonomic`Private`HolonomicSolversDump`res = DifferenceRootReduce[Head[Holonomic`Private`HolonomicSolversDump`res1][Holonomic`Private`HolonomicSolversDump`x*Holonomic`Private`HolonomicSolversDump`q^(Holonomic`Private`HolonomicSolversDump`n*Holonomic`Private`HolonomicSolversDump`h)], Holonomic`Private`HolonomicSolversDump`x]; Holonomic`Private`HolonomicSolversDump`res \/; Holonomic`Private`HolonomicSolversDump`res =!= $Failed) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferenceRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`x]) \/; IntegerQ[Holonomic`Private`HolonomicSolversDump`c]]\nHolonomic`HolonomicDiscreteQShift[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDiscreteQShift",
	"Holonomic`HolonomicDiscreteShift":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDiscreteShift\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDiscreteShift[Holonomic`Private`HolonomicSolversDump`a_, {Holonomic`Private`HolonomicSolversDump`k_, Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`h_:1}] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`k]; (Holonomic`Private`HolonomicSolversDump`res = DifferenceRootReduce[Head[Holonomic`Private`HolonomicSolversDump`res1][Holonomic`Private`HolonomicSolversDump`k + Holonomic`Private`HolonomicSolversDump`n*Holonomic`Private`HolonomicSolversDump`h], Holonomic`Private`HolonomicSolversDump`k]; Holonomic`Private`HolonomicSolversDump`res \/; Holonomic`Private`HolonomicSolversDump`res =!= $Failed) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferenceRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`k]]\nHolonomic`HolonomicDiscreteShift[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDiscreteShift",
	"Holonomic`HolonomicDSolve":"ObjectType: Symbol\nUsage: Holonomic`HolonomicDSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicDSolve[Holonomic`Private`HolonomicSolversDump`expr_, Holonomic`Private`HolonomicSolversDump`init_, (Holonomic`Private`HolonomicSolversDump`y_)[Holonomic`Private`HolonomicSolversDump`x_], Holonomic`Private`HolonomicSolversDump`x_, Holonomic`Private`HolonomicSolversDump`param_, Holonomic`Private`HolonomicSolversDump`index_] := Block[{Holonomic`Private`HolonomicSolversDump`res}, Holonomic`Private`HolonomicSolversDump`res = Holonomic`HolonomicDSolve[Holonomic`Private`HolonomicSolversDump`expr, Holonomic`Private`HolonomicSolversDump`init, Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`x, Holonomic`Private`HolonomicSolversDump`param, Holonomic`Private`HolonomicSolversDump`index]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]]\nHolonomic`HolonomicDSolve[Holonomic`Private`HolonomicSolversDump`expr_, Holonomic`Private`HolonomicSolversDump`init_, Holonomic`Private`HolonomicSolversDump`y_, Holonomic`Private`HolonomicSolversDump`x_, Holonomic`Private`HolonomicSolversDump`param_, Holonomic`Private`HolonomicSolversDump`index_] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`res2, Holonomic`Private`HolonomicSolversDump`nexpr}, Holonomic`Private`HolonomicSolversDump`nexpr = Collect[Subtract @@ Holonomic`Private`HolonomicSolversDump`expr, Derivative[_][Holonomic`Private`HolonomicSolversDump`y][Holonomic`Private`HolonomicSolversDump`x] | Holonomic`Private`HolonomicSolversDump`y[Holonomic`Private`HolonomicSolversDump`x], Together]; (Holonomic`Private`HolonomicSolversDump`res1 = Holonomic`Private`HolonomicSolversDump`holonomicDSolve[Holonomic`Private`HolonomicSolversDump`nexpr == 0, Holonomic`Private`HolonomicSolversDump`init, Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`x, Holonomic`Private`HolonomicSolversDump`param, Holonomic`Private`HolonomicSolversDump`index]; (Holonomic`Private`HolonomicSolversDump`res = Catch[((Holonomic`Private`HolonomicSolversDump`res2 = Quiet[Holonomic`ToDifferentialRoot[{Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`x}, Sequence @@ #1, Null]]; If[Head[Holonomic`Private`HolonomicSolversDump`res2] === DifferentialRoot && System`Private`ValidQ[Holonomic`Private`HolonomicSolversDump`res2], {Holonomic`Private`HolonomicSolversDump`y[Holonomic`Private`HolonomicSolversDump`x] -> Holonomic`Private`HolonomicSolversDump`res2[Holonomic`Private`HolonomicSolversDump`x]}, Throw[$Failed]]) & ) \/@ Holonomic`Private`HolonomicSolversDump`res1]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res1, $Failed]) \/; Head[Holonomic`Private`HolonomicSolversDump`nexpr] === Plus && VectorQ[List @@ Holonomic`Private`HolonomicSolversDump`nexpr, MatchQ[#1, ((Holonomic`Private`HolonomicSolversDump`a_.)*Derivative[_][Holonomic`Private`HolonomicSolversDump`y][Holonomic`Private`HolonomicSolversDump`x] \/; Holonomic`Private`HolonomicRationalFunctionQ[Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`x]) | ((Holonomic`Private`HolonomicSolversDump`a_.)*Holonomic`Private`HolonomicSolversDump`y[Holonomic`Private`HolonomicSolversDump`x] \/; Holonomic`Private`HolonomicRationalFunctionQ[Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`x]) | _?(FreeQ[#1, Holonomic`Private`HolonomicSolversDump`y] & )] & ]]\nHolonomic`HolonomicDSolve[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicDSolve",
	"Holonomic`HolonomicExponent":"ObjectType: Symbol\nUsage: Holonomic`HolonomicExponent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicExponent",
	"Holonomic`HolonomicFullSimplify":"ObjectType: Symbol\nUsage: Holonomic`HolonomicFullSimplify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicFullSimplify[Holonomic`Private`HolonomicSimplifiersDump`expr_] := Block[{Holonomic`Private`HolonomicSimplifiersDump`res, Holonomic`Private`HolonomicSimplifiersDump`tlimit}, Holonomic`Private`HolonomicSimplifiersDump`tlimit = (If[NumericQ[#1], #1, 300] & )[OptionValue[FullSimplify, TimeConstraint]]; Holonomic`Private`HolonomicSimplifiersDump`res = Quiet[TimeConstrained[Holonomic`Private`HolonomicSimplifiersDump`holonomicFullSimplify[Holonomic`Private`HolonomicSimplifiersDump`expr], Holonomic`Private`HolonomicSimplifiersDump`tlimit, $Failed]]; Holonomic`Private`HolonomicSimplifiersDump`res \/; Holonomic`Private`HolonomicSimplifiersDump`res =!= $Failed]\nHolonomic`HolonomicFullSimplify[Holonomic`Private`HolonomicSimplifiersDump`expr___] := Holonomic`Private`HolonomicSimplifiersDump`expr\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicFullSimplify",
	"Holonomic`HolonomicFunctionExpand":"ObjectType: Symbol\nUsage: Holonomic`HolonomicFunctionExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicFunctionExpand[Holonomic`Private`HolonomicSimplifiersDump`expr_] := Block[{Holonomic`Private`HolonomicSimplifiersDump`res}, Holonomic`Private`HolonomicSimplifiersDump`res = Holonomic`Private`HolonomicSimplifiersDump`holonomicFunctionExpand[Holonomic`Private`HolonomicSimplifiersDump`expr]; Holonomic`Private`HolonomicSimplifiersDump`res \/; FreeQ[Holonomic`Private`HolonomicSimplifiersDump`res, $Failed]]\nHolonomic`HolonomicFunctionExpand[Holonomic`Private`HolonomicSimplifiersDump`expr_] := Holonomic`Private`HolonomicSimplifiersDump`expr\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicFunctionExpand",
	"Holonomic`HolonomicGeneratingFunction":"ObjectType: Symbol\nUsage: Holonomic`HolonomicGeneratingFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicGeneratingFunction[Holonomic`Private`HolonomicSolversDump`f_, Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`z_] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`f, Holonomic`Private`HolonomicSolversDump`n]; (Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicGeneratingFunction[Head[Holonomic`Private`HolonomicSolversDump`res1]]; Holonomic`Private`HolonomicSolversDump`res[Holonomic`Private`HolonomicSolversDump`z] \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferenceRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`n]]\nHolonomic`HolonomicGeneratingFunction[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicGeneratingFunction",
	"Holonomic`HolonomicHomogeneousQ":"ObjectType: Symbol\nUsage: Holonomic`HolonomicHomogeneousQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicHomogeneousQ[Holonomic`Private`HolonomicLibraryDump`a:_DifferenceRoot | _DifferentialRoot] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`n}, Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`n]; Holonomic`Private`HolonomicZeroQ[First[Holonomic`Private`HolonomicLibraryDump`res]] \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed]]\nHolonomic`HolonomicHomogeneousQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicHomogeneousQ",
	"Holonomic`HolonomicIndefiniteIntegrate":"ObjectType: Symbol\nUsage: Holonomic`HolonomicIndefiniteIntegrate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicIndefiniteIntegrate[Holonomic`Private`HolonomicSolversDump`f_, Holonomic`Private`HolonomicSolversDump`x:Except[_List]] \/;  !FreeQ[Holonomic`Private`HolonomicSolversDump`f, DifferentialRoot] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferentialRootReduce[Holonomic`Private`HolonomicSolversDump`f, Holonomic`Private`HolonomicSolversDump`x]; (Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicIndefiniteIntegrate[Head[Holonomic`Private`HolonomicSolversDump`res1]]; Holonomic`Private`HolonomicSolversDump`res[Holonomic`Private`HolonomicSolversDump`x] \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferentialRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`x]]\nHolonomic`HolonomicIndefiniteIntegrate[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicIndefiniteIntegrate",
	"Holonomic`HolonomicIndefiniteSum":"ObjectType: Symbol\nUsage: Holonomic`HolonomicIndefiniteSum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicIndefiniteSum[Holonomic`Private`HolonomicSolversDump`expr_, Holonomic`Private`HolonomicSolversDump`n_] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`expr, Holonomic`Private`HolonomicSolversDump`n]; (Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicIndefiniteSum[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`n]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res1, $Failed]]\nHolonomic`HolonomicIndefiniteSum[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicIndefiniteSum",
	"Holonomic`Private`HolonomicInitialValues":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicInitialValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicInitialValues[Holonomic`Private`HolonomicLibraryDump`u_DifferentialRoot, (Holonomic`Private`HolonomicLibraryDump`n_Integer)?Positive] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`res3, Holonomic`Private`HolonomicLibraryDump`res4, Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`m, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}, Holonomic`Private`HolonomicLibraryDump`a = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`u, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; (Holonomic`Private`HolonomicLibraryDump`m = Holonomic`HolonomicExponent[Holonomic`Private`HolonomicLibraryDump`u]; (If[Holonomic`Private`HolonomicLibraryDump`n <= Holonomic`Private`HolonomicLibraryDump`m, Return[(Take[#1, Holonomic`Private`HolonomicLibraryDump`n] & ) \/@ Holonomic`Private`HolonomicLibraryDump`a[[4]]]]; Holonomic`Private`HolonomicLibraryDump`res1 = NestList[Collect[D[#1, Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicLibraryDump`y[Holonomic`Private`HolonomicLibraryDump`x] | Derivative[_][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x]] & , Holonomic`Private`HolonomicLibraryDump`a[[2]], Holonomic`Private`HolonomicLibraryDump`n - Holonomic`Private`HolonomicLibraryDump`m - 1]; Holonomic`Private`HolonomicLibraryDump`res1 = (Thread[(Holonomic`Private`HolonomicLibraryDump`res1 \/. Holonomic`Private`HolonomicLibraryDump`x -> #1) == 0] & ) \/@ Holonomic`Private`HolonomicLibraryDump`a[[3]]; Holonomic`Private`HolonomicLibraryDump`res2 = Apply[Function[{Holonomic`Private`HolonomicLibraryDump`i, Holonomic`Private`HolonomicLibraryDump`j}, MapIndexed[Derivative[First[#2] - 1][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`i] == #1 & , Holonomic`Private`HolonomicLibraryDump`j]], Transpose[{Holonomic`Private`HolonomicLibraryDump`a[[3]], Holonomic`Private`HolonomicLibraryDump`a[[4]]}], {1}]; Holonomic`Private`HolonomicLibraryDump`res3 = (Table[Derivative[Holonomic`Private`HolonomicLibraryDump`i][Holonomic`Private`HolonomicLibraryDump`y][#1], {Holonomic`Private`HolonomicLibraryDump`i, 0, Holonomic`Private`HolonomicLibraryDump`n - 1}] & ) \/@ Holonomic`Private`HolonomicLibraryDump`a[[3]]; Holonomic`Private`HolonomicLibraryDump`res4 = Solve[Flatten[{Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`res1}], Flatten[Holonomic`Private`HolonomicLibraryDump`res3]]; (Holonomic`Private`HolonomicLibraryDump`res = Holonomic`Private`HolonomicLibraryDump`res3 \/. First[Holonomic`Private`HolonomicLibraryDump`res4]; Holonomic`Private`HolonomicLibraryDump`res \/; ListQ[Holonomic`Private`HolonomicLibraryDump`res]) \/; Head[Holonomic`Private`HolonomicLibraryDump`res4] =!= Solve && Length[Holonomic`Private`HolonomicLibraryDump`res4] == 1) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`m, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`a, $Failed]]\nHolonomic`Private`HolonomicInitialValues[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicInitialValues",
	"Holonomic`Private`HolonomicIntegerRoots":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicIntegerRoots\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicIntegerRoots[Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`k_] \/; PolynomialQ[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`k] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`coeffs}, Holonomic`Private`HolonomicLibraryDump`coeffs = GroebnerBasis`DistributedTermsList[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`k]; (Holonomic`Private`HolonomicLibraryDump`res = Holonomic`Private`HolonomicLibraryDump`integerRoots[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`k, Holonomic`Private`HolonomicLibraryDump`coeffs[[1,All,-1]]]; Holonomic`Private`HolonomicLibraryDump`res \/; VectorQ[Holonomic`Private`HolonomicLibraryDump`res, Assumptions`AIntegerQ]) \/; ListQ[Holonomic`Private`HolonomicLibraryDump`coeffs]]\nHolonomic`Private`HolonomicIntegerRoots[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicIntegerRoots",
	"Holonomic`HolonomicInterlace":"ObjectType: Symbol\nUsage: Holonomic`HolonomicInterlace\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicInterlace[Holonomic`Private`HolonomicOperationsDump`expr_, Holonomic`Private`HolonomicOperationsDump`n_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicInterlace[Holonomic`Private`HolonomicOperationsDump`expr, Holonomic`Private`HolonomicOperationsDump`n]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed]\nHolonomic`HolonomicInterlace[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicInterlace",
	"Holonomic`Private`HolonomicLinearQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicLinearQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicLinearQ[Holonomic`Private`HolonomicLibraryDump`r_, Holonomic`Private`HolonomicLibraryDump`k_] := Internal`LinearQ[Holonomic`Private`HolonomicLibraryDump`r, Holonomic`Private`HolonomicLibraryDump`k]\nHolonomic`Private`HolonomicLinearQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicLinearQ",
	"Holonomic`Private`HolonomicLowerExponent":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicLowerExponent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicLowerExponent[Holonomic`Private`HolonomicLibraryDump`u_DifferentialRoot] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`res3, Holonomic`Private`HolonomicLibraryDump`coeffs, Holonomic`Private`HolonomicLibraryDump`parms, Holonomic`Private`HolonomicLibraryDump`pols, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}, Holonomic`Private`HolonomicLibraryDump`parms = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`u, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; (Holonomic`Private`HolonomicLibraryDump`coeffs = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`u, Holonomic`Private`HolonomicLibraryDump`x]; (Holonomic`Private`HolonomicLibraryDump`pols = Function[Holonomic`Private`HolonomicLibraryDump`p, NestList[D[#1, Holonomic`Private`HolonomicLibraryDump`x] & , Holonomic`Private`HolonomicLibraryDump`p, Exponent[Holonomic`Private`HolonomicLibraryDump`p, Holonomic`Private`HolonomicLibraryDump`x]]] \/@ Rest[Holonomic`Private`HolonomicLibraryDump`coeffs][[All,-1]]; Holonomic`Private`HolonomicLibraryDump`pols = ({First[#1], Sequence @@ (-Rest[#1])} & ) \/@ Holonomic`Private`HolonomicLibraryDump`pols; Holonomic`Private`HolonomicLibraryDump`res1 = MapThread[Function[{Holonomic`Private`HolonomicLibraryDump`d, Holonomic`Private`HolonomicLibraryDump`p}, MapIndexed[{Holonomic`Private`HolonomicLibraryDump`d - First[#2], #1} & , Holonomic`Private`HolonomicLibraryDump`p]], {Rest[Holonomic`Private`HolonomicLibraryDump`coeffs][[All,1]], Holonomic`Private`HolonomicLibraryDump`pols}]; Holonomic`Private`HolonomicLibraryDump`res1 = Flatten[Holonomic`Private`HolonomicLibraryDump`res1, 1]; (Holonomic`Private`HolonomicLibraryDump`res2 = Quiet[Integrate[First[Holonomic`Private`HolonomicLibraryDump`coeffs], Holonomic`Private`HolonomicLibraryDump`x]]; (Holonomic`Private`HolonomicLibraryDump`res2 = Holonomic`Private`HolonomicToDifferentialEquation[Prepend[Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2], {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; (Holonomic`Private`HolonomicLibraryDump`res3 = Holonomic`Private`HolonomicLibraryDump`lowerInitialValues[Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`parms[[3]], Holonomic`Private`HolonomicLibraryDump`parms[[4]], Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x]; If[Holonomic`Private`HolonomicLibraryDump`res3 === $Failed, Holonomic`Private`HolonomicLibraryDump`res3 = Most \/@ Holonomic`Private`HolonomicLibraryDump`parms[[4]]; Holonomic`Private`HolonomicLibraryDump`res2 = Holonomic`Private`HolonomicLibraryDump`res2 - (Holonomic`Private`HolonomicLibraryDump`res2 \/\/. Prepend[Thread[(Derivative[#1][Holonomic`Private`HolonomicLibraryDump`y][First[Holonomic`Private`HolonomicLibraryDump`parms[[3]]]] & ) \/@ Range[Length[Holonomic`Private`HolonomicLibraryDump`parms[[4]]]] -> Holonomic`Private`HolonomicLibraryDump`parms[[4]]], Holonomic`Private`HolonomicLibraryDump`x -> First[Holonomic`Private`HolonomicLibraryDump`parms[[3]]]])]; Holonomic`Private`HolonomicLibraryDump`res = Holonomic`ToDifferentialRoot[{Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}, Holonomic`Private`HolonomicLibraryDump`res2, Sequence @@ Holonomic`Private`HolonomicLibraryDump`res3, Holonomic`Private`HolonomicLibraryDump`parms[[5]]]; Holonomic`Private`HolonomicLibraryDump`res \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res2, $Failed]) \/; PolynomialQ[Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`x]) \/; And @@ (ListQ[#1] && Length[#1] == 2 && NonNegative[First[#1]] & ) \/@ Holonomic`Private`HolonomicLibraryDump`res1) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`coeffs, $Failed] && And @@ Apply[Positive[#1 - Exponent[#2, Holonomic`Private`HolonomicLibraryDump`x]] & , Rest[Holonomic`Private`HolonomicLibraryDump`coeffs], {1}]) \/; Holonomic`Private`HolonomicLibraryDump`parms =!= $Failed && Length[Holonomic`Private`HolonomicLibraryDump`parms[[3]]] == 1]\nHolonomic`Private`HolonomicLowerExponent[Holonomic`Private`HolonomicLibraryDump`u_DifferentialRoot] := Holonomic`Private`HolonomicLibraryDump`u\nHolonomic`Private`HolonomicLowerExponent[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicLowerExponent",
	"Holonomic`Developer`HolonomicModularBrunoProduct":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicModularBrunoProduct\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicModularBrunoProduct[Holonomic`Developer`HolonomicDeveloperDump`a_, Holonomic`Developer`HolonomicDeveloperDump`rel_, {Holonomic`Developer`HolonomicDeveloperDump`y_, Holonomic`Developer`HolonomicDeveloperDump`x_}, Holonomic`Developer`HolonomicDeveloperDump`k_] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`holonomicModularBrunoProduct[Holonomic`Developer`HolonomicDeveloperDump`a, Holonomic`Developer`HolonomicDeveloperDump`rel, {Holonomic`Developer`HolonomicDeveloperDump`y, Holonomic`Developer`HolonomicDeveloperDump`x}, Holonomic`Developer`HolonomicDeveloperDump`k]; Holonomic`Developer`HolonomicDeveloperDump`res \/; FreeQ[Holonomic`Developer`HolonomicDeveloperDump`res, $Failed]]\nHolonomic`Developer`HolonomicModularBrunoProduct[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicModularBrunoProduct",
	"Holonomic`Developer`HolonomicModularBrunoSum":"ObjectType: Symbol\nUsage: Holonomic`Developer`HolonomicModularBrunoSum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Developer`HolonomicModularBrunoSum[{Holonomic`Developer`HolonomicDeveloperDump`k_, Holonomic`Developer`HolonomicDeveloperDump`n_}, Holonomic`Developer`HolonomicDeveloperDump`a_, Holonomic`Developer`HolonomicDeveloperDump`rel_, {Holonomic`Developer`HolonomicDeveloperDump`y_, Holonomic`Developer`HolonomicDeveloperDump`x_}] := Block[{Holonomic`Developer`HolonomicDeveloperDump`res}, Holonomic`Developer`HolonomicDeveloperDump`res = Holonomic`Developer`HolonomicDeveloperDump`holonomicModularBrunoSum[{Holonomic`Developer`HolonomicDeveloperDump`k, Holonomic`Developer`HolonomicDeveloperDump`n}, Holonomic`Developer`HolonomicDeveloperDump`a, Holonomic`Developer`HolonomicDeveloperDump`rel, {Holonomic`Developer`HolonomicDeveloperDump`y, Holonomic`Developer`HolonomicDeveloperDump`x}]; Holonomic`Developer`HolonomicDeveloperDump`res \/; FreeQ[Holonomic`Developer`HolonomicDeveloperDump`res, $Failed]]\nHolonomic`Developer`HolonomicModularBrunoSum[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Developer`HolonomicModularBrunoSum",
	"Holonomic`Private`HolonomicNonZeroQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicNonZeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicNonZeroQ[Holonomic`Private`HolonomicLibraryDump`r_] :=  !Holonomic`Private`HolonomicZeroQ[Holonomic`Private`HolonomicLibraryDump`r]\nHolonomic`Private`HolonomicNonZeroQ[___] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicNonZeroQ",
	"Holonomic`Private`HolonomicNullSpace":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicNullSpace\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicNullSpace[Holonomic`Private`HolonomicLibraryDump`m__] := Block[{Holonomic`Private`HolonomicLibraryDump`res}, Holonomic`Private`HolonomicLibraryDump`res = Holonomic`Private`HolonomicLibraryDump`holonomicNullSpace[Holonomic`Private`HolonomicLibraryDump`m]; Holonomic`Private`HolonomicLibraryDump`res \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed]]\nHolonomic`Private`HolonomicNullSpace[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicNullSpace",
	"Holonomic`Private`HolonomicNumericFunctionQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicNumericFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicNumericFunctionQ[Holonomic`Private`HolonomicLibraryDump`expr_DifferentialRoot] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}, Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`expr, Holonomic`Private`HolonomicLibraryDump`x]; (Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`expr, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; VectorQ[Flatten[{Holonomic`Private`HolonomicLibraryDump`res[[3]], Holonomic`Private`HolonomicLibraryDump`res[[4]]}], Holonomic`Private`HolonomicLibraryDump`HolonomicNumericQ] \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed]) \/; Holonomic`Private`HolonomicLibraryDump`res =!= $Failed && VectorQ[CoefficientList[Holonomic`Private`HolonomicLibraryDump`res[[1]], Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicLibraryDump`HolonomicNumericQ] && VectorQ[Rest[Holonomic`Private`HolonomicLibraryDump`res][[All,-1]], VectorQ[CoefficientList[#1, Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicLibraryDump`HolonomicNumericQ] & ]]\nHolonomic`Private`HolonomicNumericFunctionQ[Holonomic`Private`HolonomicLibraryDump`expr_] \/; Length[Holonomic`Private`HolonomicLibraryDump`expr] >= 1 && Head[Holonomic`Private`HolonomicLibraryDump`expr] === Symbol && MemberQ[Attributes[Head[Holonomic`Private`HolonomicLibraryDump`expr]], NumericFunction] := VectorQ[List @@ Holonomic`Private`HolonomicLibraryDump`expr, Holonomic`Private`HolonomicLibraryDump`HolonomicNumericQ]\nHolonomic`Private`HolonomicNumericFunctionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicNumericFunctionQ",
	"Internal`HolonomicOptions":"ObjectType: Symbol\nUsage: Internal`HolonomicOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HolonomicOptions",
	"Holonomic`HolonomicParameters":"ObjectType: Symbol\nUsage: Holonomic`HolonomicParameters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicParameters",
	"Holonomic`HolonomicPlus":"ObjectType: Symbol\nUsage: Holonomic`HolonomicPlus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicPlus[Holonomic`Private`HolonomicOperationsDump`a_, Holonomic`Private`HolonomicOperationsDump`k_] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`v}, Holonomic`Private`HolonomicOperationsDump`u = Select[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`HolonomicDifferenceRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`k] & ]; (Holonomic`Private`HolonomicOperationsDump`v = Select[Holonomic`Private`HolonomicOperationsDump`a,  !Holonomic`HolonomicDifferenceRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`k] & ]; Holonomic`Private`HolonomicOperationsDump`res = Catch[If[Head[Holonomic`Private`HolonomicOperationsDump`u] =!= Plus, Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootPlus[Holonomic`Private`HolonomicOperationsDump`v, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`k], Fold[Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootPlus[##1, Holonomic`Private`HolonomicOperationsDump`k] & , Holonomic`Private`HolonomicOperationsDump`v, List @@ Holonomic`Private`HolonomicOperationsDump`u]]]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed) \/; Length[Holonomic`Private`HolonomicOperationsDump`u] > 0]\nHolonomic`HolonomicPlus[Holonomic`Private`HolonomicOperationsDump`a_, Holonomic`Private`HolonomicOperationsDump`x_] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`v}, Holonomic`Private`HolonomicOperationsDump`u = Select[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`HolonomicDifferentialRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`x] & ]; (Holonomic`Private`HolonomicOperationsDump`v = Select[Holonomic`Private`HolonomicOperationsDump`a,  !Holonomic`HolonomicDifferentialRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`x] & ]; Holonomic`Private`HolonomicOperationsDump`res = Catch[If[Head[Holonomic`Private`HolonomicOperationsDump`u] =!= Plus, Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialRootPlus[Holonomic`Private`HolonomicOperationsDump`v, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`x], Fold[Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialRootPlus[##1, Holonomic`Private`HolonomicOperationsDump`x] & , Holonomic`Private`HolonomicOperationsDump`v, List @@ Holonomic`Private`HolonomicOperationsDump`u]]]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed) \/; Length[Holonomic`Private`HolonomicOperationsDump`u] > 0]\nHolonomic`HolonomicPlus[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicPlus",
	"Holonomic`HolonomicPower":"ObjectType: Symbol\nUsage: Holonomic`HolonomicPower\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicPower[Holonomic`Private`HolonomicOperationsDump`a:DifferenceRoot[__][Holonomic`Private`HolonomicOperationsDump`k_], (Holonomic`Private`HolonomicOperationsDump`d_Integer)?Positive, Holonomic`Private`HolonomicOperationsDump`k_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootPower[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`d, Holonomic`Private`HolonomicOperationsDump`k]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed]\nHolonomic`HolonomicPower[Holonomic`Private`HolonomicOperationsDump`a:DifferentialRoot[__][Holonomic`Private`HolonomicOperationsDump`x_], (Holonomic`Private`HolonomicOperationsDump`d_Integer)?Positive, Holonomic`Private`HolonomicOperationsDump`x_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialRootPower[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`d, Holonomic`Private`HolonomicOperationsDump`x]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed]\nHolonomic`HolonomicPower[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicPower",
	"Holonomic`HolonomicQDifference":"ObjectType: Symbol\nUsage: Holonomic`HolonomicQDifference\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicQDifference[Holonomic`Private`HolonomicSolversDump`a_, {Holonomic`Private`HolonomicSolversDump`x_, Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`h_:1}, Holonomic`Private`HolonomicSolversDump`q_] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`c}, Holonomic`Private`HolonomicSolversDump`c = Holonomic`Private`HolonomicSolversDump`q^(Holonomic`Private`HolonomicSolversDump`n*Holonomic`Private`HolonomicSolversDump`h); (Holonomic`Private`HolonomicSolversDump`res1 = DifferenceRootReduce[Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`x]; (Holonomic`Private`HolonomicSolversDump`res = DifferenceRootReduce[Head[Holonomic`Private`HolonomicSolversDump`res1][Holonomic`Private`HolonomicSolversDump`x*Holonomic`Private`HolonomicSolversDump`q^(Holonomic`Private`HolonomicSolversDump`n*Holonomic`Private`HolonomicSolversDump`h)] - Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`x]; Holonomic`Private`HolonomicSolversDump`res \/; Holonomic`Private`HolonomicSolversDump`res =!= $Failed) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferenceRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`x]) \/; IntegerQ[Holonomic`Private`HolonomicSolversDump`c]]\nHolonomic`HolonomicQDifference[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicQDifference",
	"Holonomic`Private`HolonomicRationalFunctionQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicRationalFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicRationalFunctionQ[Holonomic`Private`HolonomicLibraryDump`expr_, Holonomic`Private`HolonomicLibraryDump`k_] := Block[{Holonomic`Private`HolonomicLibraryDump`res}, Holonomic`Private`HolonomicLibraryDump`res = Internal`RationalFunctionQ[Holonomic`Private`HolonomicLibraryDump`expr, Holonomic`Private`HolonomicLibraryDump`k]; Holonomic`Private`HolonomicLibraryDump`res \/; TrueQ[Holonomic`Private`HolonomicLibraryDump`res]]\nHolonomic`Private`HolonomicRationalFunctionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicRationalFunctionQ",
	"Holonomic`Private`HolonomicRationalNumberQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicRationalNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicRationalNumberQ[Holonomic`Private`HolonomicLibraryDump`k_] := IntegerQ[Holonomic`Private`HolonomicLibraryDump`k] || Head[Holonomic`Private`HolonomicLibraryDump`k] === Rational\nHolonomic`Private`HolonomicRationalNumberQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicRationalNumberQ",
	"Holonomic`Private`HolonomicRemainder":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicRemainder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicRemainder[Holonomic`Private`HolonomicLibraryDump`a_DifferenceRoot, Holonomic`Private`HolonomicLibraryDump`n_, Holonomic`Private`HolonomicLibraryDump`d_Integer] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`parm, Holonomic`Private`HolonomicLibraryDump`coeffs, Holonomic`Private`HolonomicLibraryDump`deg}, Holonomic`Private`HolonomicLibraryDump`parm = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`n]; (Holonomic`Private`HolonomicLibraryDump`deg = Holonomic`Private`HolonomicLibraryDump`parm[[-1,1]]; (Holonomic`Private`HolonomicLibraryDump`coeffs = Most[Rest[Holonomic`Private`HolonomicLibraryDump`parm]]; Holonomic`Private`HolonomicLibraryDump`coeffs = ReplacePart[ConstantArray[0, Holonomic`Private`HolonomicLibraryDump`deg + 1], Flatten[{Thread[Holonomic`Private`HolonomicLibraryDump`coeffs[[All,1]] + 2 -> -Holonomic`Private`HolonomicLibraryDump`coeffs[[All,2]]], 1 -> -First[Holonomic`Private`HolonomicLibraryDump`parm]}]]; Holonomic`Private`HolonomicLibraryDump`res = Holonomic`Private`HolonomicLibraryDump`iteratedDifferenceRootBasis[Holonomic`Private`HolonomicLibraryDump`deg, Holonomic`Private`HolonomicLibraryDump`coeffs, Holonomic`Private`HolonomicLibraryDump`parm[[-1,2]], Holonomic`Private`HolonomicLibraryDump`n, Holonomic`Private`HolonomicLibraryDump`d]; Holonomic`Private`HolonomicLibraryDump`res \/; Holonomic`Private`HolonomicLibraryDump`res =!= $Failed) \/; Holonomic`Private`HolonomicLibraryDump`d >= Holonomic`Private`HolonomicLibraryDump`deg) \/; Holonomic`Private`HolonomicLibraryDump`parm =!= $Failed]\nHolonomic`Private`HolonomicRemainder[Holonomic`Private`HolonomicLibraryDump`a_DifferentialRoot, Holonomic`Private`HolonomicLibraryDump`x_, (Holonomic`Private`HolonomicLibraryDump`d_Integer)?Positive] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2, Holonomic`Private`HolonomicLibraryDump`parms, Holonomic`Private`HolonomicLibraryDump`coeffs, Holonomic`Private`HolonomicLibraryDump`equ, Holonomic`Private`HolonomicLibraryDump`ord, Holonomic`Private`HolonomicLibraryDump`y}, Holonomic`Private`HolonomicLibraryDump`parms = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`a, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; (Holonomic`Private`HolonomicLibraryDump`coeffs = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`a, Holonomic`Private`HolonomicLibraryDump`x]; (Holonomic`Private`HolonomicLibraryDump`ord = Holonomic`Private`HolonomicLibraryDump`coeffs[[-1,1]]; (Holonomic`Private`HolonomicLibraryDump`equ = Collect[Holonomic`Private`HolonomicLibraryDump`parms[[2]]\/Holonomic`Private`HolonomicLibraryDump`coeffs[[-1,2]] - Derivative[Holonomic`Private`HolonomicLibraryDump`ord][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicLibraryDump`y[Holonomic`Private`HolonomicLibraryDump`x] | Derivative[_][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicTogether]; Holonomic`Private`HolonomicLibraryDump`res1 = NestList[Collect[D[#1, Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicLibraryDump`y[Holonomic`Private`HolonomicLibraryDump`x] | Derivative[_][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicTogether] & , Derivative[Holonomic`Private`HolonomicLibraryDump`ord][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x] == -Holonomic`Private`HolonomicLibraryDump`equ, Holonomic`Private`HolonomicLibraryDump`d - Holonomic`Private`HolonomicLibraryDump`ord]; Holonomic`Private`HolonomicLibraryDump`res2 = Table[Derivative[Holonomic`Private`HolonomicLibraryDump`i][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x], {Holonomic`Private`HolonomicLibraryDump`i, Holonomic`Private`HolonomicLibraryDump`ord, Holonomic`Private`HolonomicLibraryDump`d}]; Holonomic`Private`HolonomicLibraryDump`res1 = Solve[Holonomic`Private`HolonomicLibraryDump`res1, Holonomic`Private`HolonomicLibraryDump`res2]; (Holonomic`Private`HolonomicLibraryDump`res = Collect[Holonomic`Private`HolonomicLibraryDump`res2 \/. First[Holonomic`Private`HolonomicLibraryDump`res1], Holonomic`Private`HolonomicLibraryDump`y[Holonomic`Private`HolonomicLibraryDump`x] | Derivative[_][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x], Holonomic`Private`HolonomicTogether]; Holonomic`Private`HolonomicLibraryDump`res = (Prepend[Table[Coefficient[#1, Derivative[Holonomic`Private`HolonomicLibraryDump`i][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x]], {Holonomic`Private`HolonomicLibraryDump`i, 0, Holonomic`Private`HolonomicLibraryDump`ord - 1}], #1 \/. Holonomic`Private`HolonomicLibraryDump`y -> (0 & )] & ) \/@ Holonomic`Private`HolonomicLibraryDump`res; Join[Rest[Table[ReplacePart[ConstantArray[0, Holonomic`Private`HolonomicLibraryDump`ord + 1], Holonomic`Private`HolonomicLibraryDump`i -> 1], {Holonomic`Private`HolonomicLibraryDump`i, Holonomic`Private`HolonomicLibraryDump`ord + 1}]], Holonomic`Private`HolonomicLibraryDump`res]) \/; Head[Holonomic`Private`HolonomicLibraryDump`res1] =!= Solve && Length[Holonomic`Private`HolonomicLibraryDump`res1] == 1) \/; NonNegative[Holonomic`Private`HolonomicLibraryDump`d - Holonomic`Private`HolonomicLibraryDump`ord]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`coeffs, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`parms, $Failed]]\nHolonomic`Private`HolonomicRemainder[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicRemainder",
	"Holonomic`HolonomicRSolve":"ObjectType: Symbol\nUsage: Holonomic`HolonomicRSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicRSolve[Holonomic`Private`HolonomicSolversDump`expr_, Holonomic`Private`HolonomicSolversDump`init_, (Holonomic`Private`HolonomicSolversDump`y_)[Holonomic`Private`HolonomicSolversDump`n_], Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`param_, Holonomic`Private`HolonomicSolversDump`index_] := Block[{Holonomic`Private`HolonomicSolversDump`res}, Holonomic`Private`HolonomicSolversDump`res = Holonomic`HolonomicRSolve[Holonomic`Private`HolonomicSolversDump`expr, Holonomic`Private`HolonomicSolversDump`init, Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`n, Holonomic`Private`HolonomicSolversDump`param, Holonomic`Private`HolonomicSolversDump`index]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]]\nHolonomic`HolonomicRSolve[Holonomic`Private`HolonomicSolversDump`expr_, Holonomic`Private`HolonomicSolversDump`init_, Holonomic`Private`HolonomicSolversDump`y_, Holonomic`Private`HolonomicSolversDump`n_, Holonomic`Private`HolonomicSolversDump`param_, Holonomic`Private`HolonomicSolversDump`index_] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`res2}, Holonomic`Private`HolonomicSolversDump`res1 = Holonomic`Private`HolonomicSolversDump`holonomicRSolve[Holonomic`Private`HolonomicSolversDump`expr, Holonomic`Private`HolonomicSolversDump`init, Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`n, Holonomic`Private`HolonomicSolversDump`param, Holonomic`Private`HolonomicSolversDump`index]; (Holonomic`Private`HolonomicSolversDump`res = Catch[((Holonomic`Private`HolonomicSolversDump`res2 = Holonomic`ToDifferenceRoot[{Holonomic`Private`HolonomicSolversDump`y, Holonomic`Private`HolonomicSolversDump`n}, Sequence @@ #1]; If[Head[Holonomic`Private`HolonomicSolversDump`res2] === DifferenceRoot && System`Private`ValidQ[Holonomic`Private`HolonomicSolversDump`res2], {Holonomic`Private`HolonomicSolversDump`y[Holonomic`Private`HolonomicSolversDump`n] -> Holonomic`Private`HolonomicSolversDump`res2[Holonomic`Private`HolonomicSolversDump`n]}, Throw[$Failed]]) & ) \/@ Holonomic`Private`HolonomicSolversDump`res1]; Holonomic`Private`HolonomicSolversDump`res \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res1, $Failed]]\nHolonomic`HolonomicRSolve[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicRSolve",
	"Holonomic`HolonomicSeries":"ObjectType: Symbol\nUsage: Holonomic`HolonomicSeries\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicSeries[Holonomic`Private`HolonomicSolversDump`expr__] := Block[{Holonomic`Private`HolonomicSolversDump`res}, Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicSeries[Holonomic`Private`HolonomicSolversDump`expr]; Holonomic`Private`HolonomicSolversDump`res \/; Holonomic`Private`HolonomicSolversDump`res =!= $Failed]\nHolonomic`HolonomicSeries[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicSeries",
	"Holonomic`HolonomicSeriesCoefficient":"ObjectType: Symbol\nUsage: Holonomic`HolonomicSeriesCoefficient\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicSeriesCoefficient[Holonomic`Private`HolonomicSolversDump`expr_, {Holonomic`Private`HolonomicSolversDump`z_Symbol, Holonomic`Private`HolonomicSolversDump`a_, Holonomic`Private`HolonomicSolversDump`n_}] := Block[{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`res1}, Holonomic`Private`HolonomicSolversDump`res1 = DifferentialRootReduce[Holonomic`Private`HolonomicSolversDump`expr, {Holonomic`Private`HolonomicSolversDump`z, Holonomic`Private`HolonomicSolversDump`a}, Method -> \"Homogeneous\"]; (Holonomic`Private`HolonomicSolversDump`res = Holonomic`Private`HolonomicSolversDump`holonomicSeriesCoefficient[Holonomic`Private`HolonomicSolversDump`res1, {Holonomic`Private`HolonomicSolversDump`z, Holonomic`Private`HolonomicSolversDump`a, Holonomic`Private`HolonomicSolversDump`n}]; Piecewise[{{Holonomic`Private`HolonomicSolversDump`res, Holonomic`Private`HolonomicSolversDump`n >= 0}}] \/; FreeQ[Holonomic`Private`HolonomicSolversDump`res, $Failed]) \/; Holonomic`Private`HolonomicSolversDump`reducedDifferentialRootObjectQ[Holonomic`Private`HolonomicSolversDump`res1, Holonomic`Private`HolonomicSolversDump`z]]\nHolonomic`HolonomicSeriesCoefficient[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicSeriesCoefficient",
	"Holonomic`HolonomicShadow":"ObjectType: Symbol\nUsage: Holonomic`HolonomicShadow\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicShadow[Holonomic`Private`HolonomicOperationsDump`a_DifferenceRoot] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`res2, Holonomic`Private`HolonomicOperationsDump`pts, Holonomic`Private`HolonomicOperationsDump`parms, Holonomic`Private`HolonomicOperationsDump`c, Holonomic`Private`HolonomicOperationsDump`d, Holonomic`Private`HolonomicOperationsDump`q, Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`n}, Holonomic`Private`HolonomicOperationsDump`parms = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`a, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`n}]; (Holonomic`Private`HolonomicOperationsDump`res1 = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`n]; (Holonomic`Private`HolonomicOperationsDump`d = Holonomic`Private`HolonomicOperationsDump`res1[[-1,1]]; Holonomic`Private`HolonomicOperationsDump`res1 = Holonomic`Private`HolonomicOperationsDump`res1 \/. Holonomic`Private`HolonomicOperationsDump`n -> -Holonomic`Private`HolonomicOperationsDump`n - Holonomic`Private`HolonomicOperationsDump`d; Holonomic`Private`HolonomicOperationsDump`res1 = {First[Holonomic`Private`HolonomicOperationsDump`res1], Sequence @@ Apply[{Holonomic`Private`HolonomicOperationsDump`d - #1, #2} & , Rest[Holonomic`Private`HolonomicOperationsDump`res1], {1}]}; Holonomic`Private`HolonomicOperationsDump`res2 = Holonomic`Private`HolonomicToDifferenceEquation[Holonomic`Private`HolonomicOperationsDump`res1, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`n}]; (Holonomic`Private`HolonomicOperationsDump`pts = -Holonomic`Private`HolonomicOperationsDump`parms[[3]] - Length \/@ Holonomic`Private`HolonomicOperationsDump`parms[[4]] + 1; Holonomic`Private`HolonomicOperationsDump`res = Holonomic`ToDifferenceRoot[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`n}, Holonomic`Private`HolonomicOperationsDump`res2, Holonomic`Private`HolonomicOperationsDump`pts, Reverse \/@ Holonomic`Private`HolonomicOperationsDump`parms[[4]]]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed) \/; Holonomic`Private`HolonomicOperationsDump`res2 =!= $Failed) \/; Holonomic`Private`HolonomicOperationsDump`res1 =!= $Failed) \/; Holonomic`Private`HolonomicOperationsDump`parms =!= $Failed]\nHolonomic`HolonomicShadow[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicShadow",
	"Developer`HolonomicSimplify":"ObjectType: Symbol\nUsage: Developer`HolonomicSimplify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Developer`HolonomicSimplify[Holonomic`Private`HolonomicSimplifiersDump`expr___] := Holonomic`HolonomicFullSimplify[Holonomic`Private`HolonomicSimplifiersDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`HolonomicSimplify",
	"Holonomic`HolonomicSubsequence":"ObjectType: Symbol\nUsage: Holonomic`HolonomicSubsequence\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicSubsequence[Holonomic`Private`HolonomicOperationsDump`a_, 1, _] := Holonomic`Private`HolonomicOperationsDump`a\nHolonomic`HolonomicSubsequence[Holonomic`Private`HolonomicOperationsDump`a_, (Holonomic`Private`HolonomicOperationsDump`n_Integer)?Positive, Holonomic`Private`HolonomicOperationsDump`k_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootSubsequence[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`n, Holonomic`Private`HolonomicOperationsDump`k]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed]\nHolonomic`HolonomicSubsequence[(Holonomic`Private`HolonomicOperationsDump`a_)[Holonomic`Private`HolonomicOperationsDump`k_], (Holonomic`Private`HolonomicOperationsDump`n_Integer)?Negative, Holonomic`Private`HolonomicOperationsDump`k_] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`b}, Holonomic`Private`HolonomicOperationsDump`b = Holonomic`HolonomicShadow[Holonomic`Private`HolonomicOperationsDump`a]; (Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootSubsequence[Holonomic`Private`HolonomicOperationsDump`b[Holonomic`Private`HolonomicOperationsDump`k], -Holonomic`Private`HolonomicOperationsDump`n, Holonomic`Private`HolonomicOperationsDump`k]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed) \/; Holonomic`Private`HolonomicOperationsDump`b =!= $Failed]\nHolonomic`HolonomicSubsequence[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicSubsequence",
	"Holonomic`HolonomicTimes":"ObjectType: Symbol\nUsage: Holonomic`HolonomicTimes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicTimes[Holonomic`Private`HolonomicOperationsDump`a_Times, Holonomic`Private`HolonomicOperationsDump`k_] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`v}, Holonomic`Private`HolonomicOperationsDump`u = Select[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`HolonomicDifferenceRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`k] & ]; Holonomic`Private`HolonomicOperationsDump`v = Select[Holonomic`Private`HolonomicOperationsDump`a,  !Holonomic`HolonomicDifferenceRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`k] & ]; (Holonomic`Private`HolonomicOperationsDump`res = Catch[If[Head[Holonomic`Private`HolonomicOperationsDump`u] =!= Times, Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootTimes[Holonomic`Private`HolonomicOperationsDump`v, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`k], Fold[Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceRootTimes[##1, Holonomic`Private`HolonomicOperationsDump`k] & , Holonomic`Private`HolonomicOperationsDump`v, List @@ Holonomic`Private`HolonomicOperationsDump`u]]]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed) \/; Length[Holonomic`Private`HolonomicOperationsDump`u] > 0]\nHolonomic`HolonomicTimes[Holonomic`Private`HolonomicOperationsDump`a_Times, Holonomic`Private`HolonomicOperationsDump`x_] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`v}, Holonomic`Private`HolonomicOperationsDump`u = Select[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`HolonomicDifferentialRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`x] & ]; Holonomic`Private`HolonomicOperationsDump`v = Select[Holonomic`Private`HolonomicOperationsDump`a,  !Holonomic`HolonomicDifferentialRootObjectQ[#1, Holonomic`Private`HolonomicOperationsDump`x] & ]; (Holonomic`Private`HolonomicOperationsDump`res = Catch[If[Head[Holonomic`Private`HolonomicOperationsDump`u] =!= Times, Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialRootTimes[Holonomic`Private`HolonomicOperationsDump`v, Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`x], Fold[Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialRootTimes[##1, Holonomic`Private`HolonomicOperationsDump`x] & , Holonomic`Private`HolonomicOperationsDump`v, List @@ Holonomic`Private`HolonomicOperationsDump`u]]]; Holonomic`Private`HolonomicOperationsDump`res \/; Holonomic`Private`HolonomicOperationsDump`res =!= $Failed) \/; Length[Holonomic`Private`HolonomicOperationsDump`u] > 0]\nHolonomic`HolonomicTimes[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicTimes",
	"Holonomic`HolonomicTimesRationalFunction":"ObjectType: Symbol\nUsage: Holonomic`HolonomicTimesRationalFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicTimesRationalFunction[(Holonomic`Private`HolonomicOperationsDump`b_)*(Holonomic`Private`HolonomicOperationsDump`a:DifferenceRoot[__])[Holonomic`Private`HolonomicOperationsDump`k_], Holonomic`Private`HolonomicOperationsDump`k_] \/;  !Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`k] && Holonomic`Private`HolonomicRationalFunctionQ[Holonomic`Private`HolonomicOperationsDump`b, Holonomic`Private`HolonomicOperationsDump`k] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`res2, Holonomic`Private`HolonomicOperationsDump`num, Holonomic`Private`HolonomicOperationsDump`dem, Holonomic`Private`HolonomicOperationsDump`parm, Holonomic`Private`HolonomicOperationsDump`y}, {Holonomic`Private`HolonomicOperationsDump`num, Holonomic`Private`HolonomicOperationsDump`dem} = ({Numerator[#1], Denominator[#1]} & )[Together[Holonomic`Private`HolonomicOperationsDump`b]]; Holonomic`Private`HolonomicOperationsDump`num = Holonomic`Private`HolonomicIntegerRoots[Holonomic`Private`HolonomicOperationsDump`num, Holonomic`Private`HolonomicOperationsDump`k]; (Holonomic`Private`HolonomicOperationsDump`dem = Holonomic`Private`HolonomicIntegerRoots[Holonomic`Private`HolonomicOperationsDump`dem, Holonomic`Private`HolonomicOperationsDump`k]; (Holonomic`Private`HolonomicOperationsDump`parm = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`a, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}]; (Holonomic`Private`HolonomicOperationsDump`res1 = Collect[Holonomic`Private`HolonomicOperationsDump`parm[[2]] \/. Holonomic`Private`HolonomicOperationsDump`y -> Function[Holonomic`Private`HolonomicOperationsDump`k, Holonomic`Private`HolonomicOperationsDump`y[Holonomic`Private`HolonomicOperationsDump`k]\/Holonomic`Private`HolonomicOperationsDump`b], Holonomic`Private`HolonomicOperationsDump`y[_]]; Holonomic`Private`HolonomicOperationsDump`res2 = MapIndexed[Function[{Holonomic`Private`HolonomicOperationsDump`u, Holonomic`Private`HolonomicOperationsDump`v}, MapIndexed[#1*(Holonomic`Private`HolonomicOperationsDump`b \/. Holonomic`Private`HolonomicOperationsDump`k -> Holonomic`Private`HolonomicOperationsDump`u + First[#2] - 1) & , Holonomic`Private`HolonomicOperationsDump`parm[[4,First[Holonomic`Private`HolonomicOperationsDump`v]]]]], Holonomic`Private`HolonomicOperationsDump`parm[[3]]]; Holonomic`Private`HolonomicOperationsDump`res = Holonomic`ToDifferenceRoot[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parm[[3]], Holonomic`Private`HolonomicOperationsDump`res2]; Holonomic`Private`HolonomicOperationsDump`res[Holonomic`Private`HolonomicOperationsDump`k] \/; Head[Holonomic`Private`HolonomicOperationsDump`res] === DifferenceRoot) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`parm, $Failed]) \/; Holonomic`Private`HolonomicOperationsDump`dem === {}) \/; Holonomic`Private`HolonomicOperationsDump`num === {}]\nHolonomic`HolonomicTimesRationalFunction[(Holonomic`Private`HolonomicOperationsDump`b_)*(Holonomic`Private`HolonomicOperationsDump`a:DifferentialRoot[__])[Holonomic`Private`HolonomicOperationsDump`x_], Holonomic`Private`HolonomicOperationsDump`x_] \/;  !Holonomic`Private`HolonomicDependsOnQ[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`x] && Holonomic`Private`HolonomicRationalFunctionQ[Holonomic`Private`HolonomicOperationsDump`b, Holonomic`Private`HolonomicOperationsDump`x] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`res2, Holonomic`Private`HolonomicOperationsDump`num, Holonomic`Private`HolonomicOperationsDump`dem, Holonomic`Private`HolonomicOperationsDump`parm, Holonomic`Private`HolonomicOperationsDump`y}, Holonomic`Private`HolonomicOperationsDump`parm = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`a, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}]; ({Holonomic`Private`HolonomicOperationsDump`num, Holonomic`Private`HolonomicOperationsDump`dem} = ({Numerator[#1], Denominator[#1]} & )[Together[Holonomic`Private`HolonomicOperationsDump`b]]; (Holonomic`Private`HolonomicOperationsDump`res1 = Collect[Holonomic`Private`HolonomicOperationsDump`parm[[2]] \/. Holonomic`Private`HolonomicOperationsDump`y -> Function[Holonomic`Private`HolonomicOperationsDump`x, Holonomic`Private`HolonomicOperationsDump`y[Holonomic`Private`HolonomicOperationsDump`x]\/Holonomic`Private`HolonomicOperationsDump`b], Derivative[_][Holonomic`Private`HolonomicOperationsDump`y][Holonomic`Private`HolonomicOperationsDump`x] | Holonomic`Private`HolonomicOperationsDump`y[_], Together]; Holonomic`Private`HolonomicOperationsDump`res2 = Flatten[{Holonomic`Private`HolonomicOperationsDump`x -> Holonomic`Private`HolonomicOperationsDump`parm[[3,1]], MapIndexed[Derivative[First[#2] - 1][Holonomic`Private`HolonomicOperationsDump`y][Holonomic`Private`HolonomicOperationsDump`parm[[3,1]]] -> #1 & , Holonomic`Private`HolonomicOperationsDump`parm[[4,1]]]}]; Holonomic`Private`HolonomicOperationsDump`res2 = Table[D[Holonomic`Private`HolonomicOperationsDump`b*Holonomic`Private`HolonomicOperationsDump`y[Holonomic`Private`HolonomicOperationsDump`x], {Holonomic`Private`HolonomicOperationsDump`x, Holonomic`Private`HolonomicOperationsDump`i}] \/\/. Holonomic`Private`HolonomicOperationsDump`res2, {Holonomic`Private`HolonomicOperationsDump`i, 0, Length[Holonomic`Private`HolonomicOperationsDump`parm[[4,1]]] - 1}]; Holonomic`Private`HolonomicOperationsDump`res = Holonomic`ToDifferentialRoot[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parm[[3]], {Holonomic`Private`HolonomicOperationsDump`res2}, Holonomic`Private`HolonomicOperationsDump`parm[[5]]]; Holonomic`Private`HolonomicOperationsDump`res[Holonomic`Private`HolonomicOperationsDump`x] \/; Head[Holonomic`Private`HolonomicOperationsDump`res] === DifferentialRoot) \/; Holonomic`Private`HolonomicNonZeroQ[Holonomic`Private`HolonomicOperationsDump`num*Holonomic`Private`HolonomicOperationsDump`dem \/. Holonomic`Private`HolonomicOperationsDump`x -> Holonomic`Private`HolonomicOperationsDump`parm[[3,1]]]) \/; Holonomic`Private`HolonomicOperationsDump`parm =!= $Failed]\nHolonomic`HolonomicTimesRationalFunction[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicTimesRationalFunction",
	"Holonomic`Private`HolonomicToDifferenceEquation":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicToDifferenceEquation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicToDifferenceEquation[{Holonomic`Private`HolonomicLibraryDump`q_, Holonomic`Private`HolonomicLibraryDump`terms:{_, _}..}, {Holonomic`Private`HolonomicLibraryDump`a_, Holonomic`Private`HolonomicLibraryDump`n_}] := Holonomic`Private`HolonomicLibraryDump`q + Plus @@ Apply[#2*Holonomic`Private`HolonomicLibraryDump`a[Holonomic`Private`HolonomicLibraryDump`n + #1] & , {Holonomic`Private`HolonomicLibraryDump`terms}, {1}]\nHolonomic`Private`HolonomicToDifferenceEquation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicToDifferenceEquation",
	"Holonomic`Private`HolonomicToDifferentialEquation":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicToDifferentialEquation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicToDifferentialEquation[{Holonomic`Private`HolonomicLibraryDump`q_, Holonomic`Private`HolonomicLibraryDump`terms:{_, _}..}, {Holonomic`Private`HolonomicLibraryDump`y_, Holonomic`Private`HolonomicLibraryDump`x_}] := Holonomic`Private`HolonomicLibraryDump`q + Plus @@ Apply[#2*Derivative[#1][Holonomic`Private`HolonomicLibraryDump`y][Holonomic`Private`HolonomicLibraryDump`x] & , {Holonomic`Private`HolonomicLibraryDump`terms}, {1}]\nHolonomic`Private`HolonomicToDifferentialEquation[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicToDifferentialEquation",
	"Holonomic`Private`HolonomicTogether":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicTogether\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicTogether[Holonomic`Private`HolonomicLibraryDump`r_] := TimeConstrained[Together[Holonomic`Private`HolonomicLibraryDump`r], Holonomic`Private`HolonomicLibraryDump`$HolonomicMaxTimeInTogether, Holonomic`Private`HolonomicLibraryDump`r]\nHolonomic`Private`HolonomicTogether[Holonomic`Private`HolonomicLibraryDump`r___] := Holonomic`Private`HolonomicLibraryDump`r\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicTogether",
	"Holonomic`HolonomicToHomogeneous":"ObjectType: Symbol\nUsage: Holonomic`HolonomicToHomogeneous\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`HolonomicToHomogeneous[Holonomic`Private`HolonomicOperationsDump`a_DifferenceRoot] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parms, Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}, Holonomic`Private`HolonomicOperationsDump`parms = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`a, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}]; (Holonomic`Private`HolonomicOperationsDump`res1 = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`k]; (Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceToHomogeneous[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`k}, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parms[[3]], Holonomic`Private`HolonomicOperationsDump`parms[[4]]]; Holonomic`Private`HolonomicOperationsDump`res \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res1, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`parms, $Failed]]\nHolonomic`HolonomicToHomogeneous[Holonomic`Private`HolonomicOperationsDump`a_DifferentialRoot] := Block[{Holonomic`Private`HolonomicOperationsDump`res, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parms, Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}, Holonomic`Private`HolonomicOperationsDump`parms = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicOperationsDump`a, {Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}]; (Holonomic`Private`HolonomicOperationsDump`res1 = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicOperationsDump`a, Holonomic`Private`HolonomicOperationsDump`x]; (Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialToHomogeneous[{Holonomic`Private`HolonomicOperationsDump`y, Holonomic`Private`HolonomicOperationsDump`x}, Holonomic`Private`HolonomicOperationsDump`res1, Holonomic`Private`HolonomicOperationsDump`parms[[3]], Holonomic`Private`HolonomicOperationsDump`parms[[4]], Holonomic`Private`HolonomicOperationsDump`parms[[5]]]; Holonomic`Private`HolonomicOperationsDump`res \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res1, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`parms, $Failed]]\nHolonomic`HolonomicToHomogeneous[DifferenceRoot, Holonomic`Private`HolonomicOperationsDump`args_, Holonomic`Private`HolonomicOperationsDump`q_, Holonomic`Private`HolonomicOperationsDump`coeffs_, Holonomic`Private`HolonomicOperationsDump`ords_, Holonomic`Private`HolonomicOperationsDump`pts_, Holonomic`Private`HolonomicOperationsDump`vals_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferenceToHomogeneous[Holonomic`Private`HolonomicOperationsDump`args, {Holonomic`Private`HolonomicOperationsDump`q, Sequence @@ Transpose[{Holonomic`Private`HolonomicOperationsDump`ords, Holonomic`Private`HolonomicOperationsDump`coeffs}]}, Holonomic`Private`HolonomicOperationsDump`pts, Holonomic`Private`HolonomicOperationsDump`vals]; Holonomic`Private`HolonomicOperationsDump`res \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res, $Failed]]\nHolonomic`HolonomicToHomogeneous[DifferentialRoot, Holonomic`Private`HolonomicOperationsDump`args_, Holonomic`Private`HolonomicOperationsDump`q_, Holonomic`Private`HolonomicOperationsDump`coeffs_, Holonomic`Private`HolonomicOperationsDump`ords_, Holonomic`Private`HolonomicOperationsDump`pts_, Holonomic`Private`HolonomicOperationsDump`vals_] := Block[{Holonomic`Private`HolonomicOperationsDump`res}, Holonomic`Private`HolonomicOperationsDump`res = Holonomic`Private`HolonomicOperationsDump`holonomicDifferentialToHomogeneous[Holonomic`Private`HolonomicOperationsDump`args, {Holonomic`Private`HolonomicOperationsDump`q, Sequence @@ Transpose[{Holonomic`Private`HolonomicOperationsDump`ords, Holonomic`Private`HolonomicOperationsDump`coeffs}]}, Holonomic`Private`HolonomicOperationsDump`pts, Holonomic`Private`HolonomicOperationsDump`vals, {}]; Holonomic`Private`HolonomicOperationsDump`res \/; FreeQ[Holonomic`Private`HolonomicOperationsDump`res, $Failed]]\nHolonomic`HolonomicToHomogeneous[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`HolonomicToHomogeneous",
	"Holonomic`Private`HolonomicZeroQ":"ObjectType: Symbol\nUsage: Holonomic`Private`HolonomicZeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Holonomic`Private`HolonomicZeroQ[(Holonomic`Private`HolonomicLibraryDump`r_DifferenceRoot) | (Holonomic`Private`HolonomicLibraryDump`r_DifferenceRoot)[_]] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}, Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`r, Holonomic`Private`HolonomicLibraryDump`x]; (Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`r, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; VectorQ[Flatten[Holonomic`Private`HolonomicLibraryDump`res[[4]]], Holonomic`Private`HolonomicZeroQ] \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed] && Holonomic`Private`HolonomicZeroQ[First[Holonomic`Private`HolonomicLibraryDump`res]]]\nHolonomic`Private`HolonomicZeroQ[(Holonomic`Private`HolonomicLibraryDump`r_DifferentialRoot) | (Holonomic`Private`HolonomicLibraryDump`r_DifferentialRoot)[_]] := Block[{Holonomic`Private`HolonomicLibraryDump`res, Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}, If[Length[Holonomic`Private`HolonomicLibraryDump`r] =!= 1, Return[False]]; Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicCoefficientList[Holonomic`Private`HolonomicLibraryDump`r, Holonomic`Private`HolonomicLibraryDump`x]; (Holonomic`Private`HolonomicLibraryDump`res = Holonomic`HolonomicParameters[Holonomic`Private`HolonomicLibraryDump`r, {Holonomic`Private`HolonomicLibraryDump`y, Holonomic`Private`HolonomicLibraryDump`x}]; VectorQ[Flatten[Holonomic`Private`HolonomicLibraryDump`res[[4]]], Holonomic`Private`HolonomicZeroQ] \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed]) \/; FreeQ[Holonomic`Private`HolonomicLibraryDump`res, $Failed] && Holonomic`Private`HolonomicZeroQ[First[Holonomic`Private`HolonomicLibraryDump`res]]]\nHolonomic`Private`HolonomicZeroQ[Holonomic`Private`HolonomicLibraryDump`r:Except[_List]] := Quiet[Check[PossibleZeroQ[Holonomic`Private`HolonomicLibraryDump`r], False]]\nHolonomic`Private`HolonomicZeroQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Holonomic`Private`HolonomicZeroQ",
	"GeometricFunctions`HomogeneousCoordinates":"ObjectType: Symbol\nUsage: GeometricFunctions`HomogeneousCoordinates\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeometricFunctions`HomogeneousCoordinates",
	"NSolve`HomotopyForm":"ObjectType: Symbol\nUsage: NSolve`HomotopyForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NSolve`HomotopyForm",
	"Reduce`HomotopyNSolve":"ObjectType: Symbol\nUsage: Reduce`HomotopyNSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`HomotopyNSolve",
	"NSolve`HomotopyType":"ObjectType: Symbol\nUsage: NSolve`HomotopyType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NSolve`HomotopyType",
	"NotebookTools`HorizontalInsertionPointQ":"ObjectType: Symbol\nUsage: NotebookTools`HorizontalInsertionPointQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NotebookTools`HorizontalInsertionPointQ[NotebookTools`UtilitiesDump`nb_NotebookObject] := Developer`CellInformation[NotebookTools`UtilitiesDump`nb] === $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NotebookTools`HorizontalInsertionPointQ",
	"Charting`HorizontalScale":"ObjectType: Symbol\nUsage: Charting`HorizontalScale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`HorizontalScale[Charting`AxisDump`y_, {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`HorizontalScale, {\"Line\", {{Charting`AxisDump`min, Charting`AxisDump`y} -> Charting`AxisDump`min, {Charting`AxisDump`max, Charting`AxisDump`y} -> Charting`AxisDump`max}}, {Charting`AxisDump`min, Charting`AxisDump`max}, Charting`AxisDump`opts]\nCharting`HorizontalScale[Charting`AxisDump`y_, {Charting`AxisDump`scalemin_, Charting`AxisDump`scalemax_} -> {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`HorizontalScale, {\"Line\", {{Charting`AxisDump`min, Charting`AxisDump`y} -> Charting`AxisDump`scalemin, {Charting`AxisDump`max, Charting`AxisDump`y} -> Charting`AxisDump`scalemax}}, {Charting`AxisDump`scalemin, Charting`AxisDump`scalemax}, Charting`AxisDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Charting`AxisDump`DivisionAlignment -> Automatic, Charting`AxisDump`DivisionAnnotations -> None, Charting`AxisDump`DivisionLabelAlignment -> Automatic, Charting`AxisDump`DivisionLabels -> Automatic, Charting`AxisDump`DivisionLabelStyle -> Automatic, Charting`AxisDump`DivisionMarker -> Automatic, Charting`AxisDump`DivisionSizes -> Automatic, Charting`AxisDump`DivisionStyle -> Automatic, LabelingFunction -> Automatic, Method -> Automatic, Charting`AxisDump`ScaleAppearance -> Automatic, ScaleDivisions -> Automatic, Charting`AxisDump`ScaleFactor -> None, Charting`AxisDump`ScaleLabels -> Automatic, Charting`AxisDump`ScaleLabelStyle -> Automatic, ScaleRanges -> {}, ScaleRangeStyle -> Automatic, Charting`AxisDump`ScaleStyle -> Automatic, ScalingFunctions -> None}\nAttributes: {}\nFullName: Charting`HorizontalScale",
	"Image`HorizontalZoombar":"ObjectType: Symbol\nUsage: HorizontalZoombar[Dynamic[s], Dynamic[{x, y}], Dynamic[{width, height}, None], Dynamic[{W, H}, None]] represent a horizontal scrollbar with zoom-handles at the ends. s represent the zoom factor,  {x, y} determine the scaled zoombar positions. {width, height} is the width and height of the pane to which the zoombar is attached. {W, H} is the ImageSize of the pane content.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[Image`HorizontalZoombar[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: Image`HorizontalZoombar",
	"GeometricFunctions`BernsteinBasis`HornerCoefficientList":"ObjectType: Symbol\nUsage: GeometricFunctions`BernsteinBasis`HornerCoefficientList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeometricFunctions`BernsteinBasis`HornerCoefficientList",
	"Internal`HornerEvaluate":"ObjectType: Symbol\nUsage: Internal`HornerEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HornerEvaluate",
	"NRoots`HornerEvaluateToPrecision":"ObjectType: Symbol\nUsage: NRoots`HornerEvaluateToPrecision\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NRoots`HornerEvaluateToPrecision",
	"Internal`HostLookupInternal":"ObjectType: Symbol\nUsage: Internal`HostLookupInternal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HostLookupInternal",
	"Image`TransformsDump`HoughLineBreak":"ObjectType: Symbol\nUsage: Image`TransformsDump`HoughLineBreak\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`HoughLineBreak[{Image`TransformsDump`p0_, Image`TransformsDump`p1_}, Image`TransformsDump`img_] := Module[{Image`TransformsDump`l, Image`TransformsDump`thr, Image`TransformsDump`pts}, {Image`TransformsDump`pts, Image`TransformsDump`l} = Image`TransformsDump`HoughLineValue[Image`TransformsDump`p0, Image`TransformsDump`p1, Image`TransformsDump`img]; If[ImageChannels[Image`TransformsDump`img] > 1, Image`TransformsDump`l = Total[Image`TransformsDump`l, {2}]\/ImageChannels[Image`TransformsDump`img]]; Image`TransformsDump`thr = FindThreshold[Image`TransformsDump`l]; Image`TransformsDump`l = First[ImageData[Binarize[Image[{Image`TransformsDump`l}], Image`TransformsDump`thr]]]; Image`TransformsDump`l = Image`MorphologicalOperationsDump`arrayRectErode[Image`MorphologicalOperationsDump`arrayRectDilate[Image`TransformsDump`l, 2], 2]; (Image`TransformsDump`pts[[#1]] & ) \/@ Image`TransformsDump`ToSegments[Image`TransformsDump`l, False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`HoughLineBreak",
	"Image`TransformsDump`HoughLineRemoveSegments":"ObjectType: Symbol\nUsage: Image`TransformsDump`HoughLineRemoveSegments\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`HoughLineRemoveSegments[Image`TransformsDump`linesPTS_] := Module[{Image`TransformsDump`seg, Image`TransformsDump`n, Image`TransformsDump`res, Image`TransformsDump`MINLEN = 5, Image`TransformsDump`keepQ, Image`TransformsDump`l1, Image`TransformsDump`l2, Image`TransformsDump`seg2, Image`TransformsDump`lsmall, Image`TransformsDump`llarge}, Image`TransformsDump`n = Length[Image`TransformsDump`linesPTS]; If[Image`TransformsDump`n == 1, Return[Image`TransformsDump`linesPTS]]; Image`TransformsDump`res = Table[Last[Reap[Scan[Sow[#1, If[EuclideanDistance @@ #1 >= Image`TransformsDump`MINLEN, Large, Small]] & , Image`TransformsDump`l1], _, Rule]], {Image`TransformsDump`l1, Image`TransformsDump`linesPTS}]; Image`TransformsDump`lsmall = (Small \/. #1 \/. Small -> {} & ) \/@ Image`TransformsDump`res; Image`TransformsDump`llarge = (Large \/. #1 \/. Large -> {} & ) \/@ Image`TransformsDump`res; Image`TransformsDump`res = Image`TransformsDump`llarge; Do[Image`TransformsDump`keepQ = Catch[Do[If[Image`TransformsDump`SegmentIntersectionQ[Image`TransformsDump`seg, Image`TransformsDump`seg2], Throw[False]], {Image`TransformsDump`l2, DeleteCases[Range[Image`TransformsDump`n], Image`TransformsDump`l1]}, {Image`TransformsDump`seg2, Image`TransformsDump`llarge[[Image`TransformsDump`l2]]}]; True]; If[Image`TransformsDump`keepQ, AppendTo[Image`TransformsDump`res[[Image`TransformsDump`l1]], Image`TransformsDump`seg]], {Image`TransformsDump`l1, Image`TransformsDump`n}, {Image`TransformsDump`seg, Image`TransformsDump`lsmall[[Image`TransformsDump`l1]]}]; DeleteCases[Image`TransformsDump`res, {}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`HoughLineRemoveSegments",
	"Image`TransformsDump`HoughLines":"ObjectType: Symbol\nUsage: Image`TransformsDump`HoughLines\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`HoughLines[Image`TransformsDump`s___] := Block[{Image`TransformsDump`a, Image`TransformsDump`r}, Image`TransformsDump`a = System`Private`Arguments[Image`TransformsDump`HoughLines[Image`TransformsDump`s], {1, 2}, List, Image`TransformsDump`HoughLinesHiddenOptions]; Image`TransformsDump`r \/; Image`TransformsDump`a =!= {} && (Image`TransformsDump`r = Image`TransformsDump`iHoughLines @@ Image`TransformsDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`HoughLines",
	"Image`TransformsDump`HoughLinesHiddenOptions":"ObjectType: Symbol\nUsage: Image`TransformsDump`HoughLinesHiddenOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {BreakLines -> False, ButterflyFilterRadius -> 0, Distinctness -> 0, LengthNormalization -> {False, 0.05}, MaxFeatures -> All}\nAttributes: {}\nFullName: Image`TransformsDump`HoughLinesHiddenOptions",
	"Image`TransformsDump`HoughLineValue":"ObjectType: Symbol\nUsage: Image`TransformsDump`HoughLineValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`HoughLineValue[Image`TransformsDump`p0_, Image`TransformsDump`p1_, Image`TransformsDump`img_] := Module[{Image`TransformsDump`l, Image`TransformsDump`pts, Image`TransformsDump`i}, Image`TransformsDump`l = 2*EuclideanDistance[Image`TransformsDump`p0, Image`TransformsDump`p1]; Image`TransformsDump`pts = N[Table[Image`TransformsDump`p0 + Min[1, Image`TransformsDump`i\/Image`TransformsDump`l]*(Image`TransformsDump`p1 - Image`TransformsDump`p0), {Image`TransformsDump`i, 0, Ceiling[Image`TransformsDump`l]}]]; {Image`TransformsDump`pts, ImageValue[Image`TransformsDump`img, Image`TransformsDump`pts]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`HoughLineValue",
	"Internal`HouseKeep":"ObjectType: Symbol\nUsage: Internal`HouseKeep\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HouseKeep",
	"Statistics`Library`HRMest":"ObjectType: Symbol\nUsage: Statistics`Library`HRMest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HRMest[(Statistics`MultivariateNPFunctionsDump`data_)?MatrixQ, Statistics`MultivariateNPFunctionsDump`Caller_, Statistics`MultivariateNPFunctionsDump`f_:Statistics`Library`SpatialSign, OptionsPattern[]] := With[{Statistics`MultivariateNPFunctionsDump`res = Statistics`MultivariateNPFunctionsDump`iHRMest[Statistics`MultivariateNPFunctionsDump`data, Statistics`MultivariateNPFunctionsDump`f, OptionValue[MaxIterations], OptionValue[\"Tolerance\"], Statistics`MultivariateNPFunctionsDump`Caller]}, Statistics`MultivariateNPFunctionsDump`res \/; Statistics`MultivariateNPFunctionsDump`res =!= $Failed]\nStatistics`Library`HRMest[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                           -8\n{MaxIterations -> 1000, Tolerance -> 1. 10  }\nAttributes: {}\nFullName: Statistics`Library`HRMest",
	"SurfaceGraphics`Methods`HSBChannel":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`HSBChannel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`HSBChannel",
	"LinearAlgebra`LAPACK`HSEQR":"ObjectType: Symbol\nUsage: LinearAlgebra`LAPACK`HSEQR\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`LAPACK`HSEQR",
	"Statistics`Library`HTDAdmissibleDataQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDAdmissibleDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: HoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`data1_, Statistics`HypothesisTestingUtilitiesDump`data2_, Statistics`HypothesisTestingUtilitiesDump`Caller_][Statistics`HypothesisTestingUtilitiesDump`pPattern_:_Integer?Positive, Statistics`HypothesisTestingUtilitiesDump`kPattern_:1, Statistics`HypothesisTestingUtilitiesDump`dmtch_:True, Statistics`HypothesisTestingUtilitiesDump`lmtch_:False]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput := Statistics`HypothesisTestingUtilitiesDump`HTDSpecialValidate[Statistics`HypothesisTestingUtilitiesDump`data1, Statistics`HypothesisTestingUtilitiesDump`data2, Statistics`HypothesisTestingUtilitiesDump`Caller][Statistics`HypothesisTestingUtilitiesDump`pPattern, Statistics`HypothesisTestingUtilitiesDump`kPattern, Statistics`HypothesisTestingUtilitiesDump`dmtch, Statistics`HypothesisTestingUtilitiesDump`lmtch]\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`Caller_][Statistics`HypothesisTestingUtilitiesDump`pttrn_:_Integer?Positive, Statistics`HypothesisTestingUtilitiesDump`kPattern_:1, Statistics`HypothesisTestingUtilitiesDump`dmtch_:True]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput := Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`Caller][Statistics`HypothesisTestingUtilitiesDump`pttrn, Statistics`HypothesisTestingUtilitiesDump`kPattern, Statistics`HypothesisTestingUtilitiesDump`dmtch, False]\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`Caller_][Statistics`HypothesisTestingUtilitiesDump`pPattern_ \/; MatchQ[1, Statistics`HypothesisTestingUtilitiesDump`pPattern], Statistics`HypothesisTestingUtilitiesDump`kPattern_ \/; MatchQ[1, Statistics`HypothesisTestingUtilitiesDump`kPattern], _, _]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput \/; Statistics`Library`HTDValidVectorDataQ[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`Caller] := True\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`Caller_][Statistics`HypothesisTestingUtilitiesDump`pPattern_, Statistics`HypothesisTestingUtilitiesDump`kPattern_ \/; MatchQ[1, Statistics`HypothesisTestingUtilitiesDump`kPattern], _, _]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput \/; Statistics`Library`HTDValidMatrixDataQ[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`Caller] \/; MatchQ[Statistics`HypothesisTestingUtilitiesDump`dataDimensionality[Statistics`HypothesisTestingUtilitiesDump`data], Statistics`HypothesisTestingUtilitiesDump`pPattern] && Statistics`HypothesisTestingUtilitiesDump`dataDimensionality[Statistics`HypothesisTestingUtilitiesDump`data] > 1 := True\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`data_List, Statistics`HypothesisTestingUtilitiesDump`Caller_][Statistics`HypothesisTestingUtilitiesDump`pPattern_, Statistics`HypothesisTestingUtilitiesDump`kPattern_, Statistics`HypothesisTestingUtilitiesDump`dmtch:True | False, Statistics`HypothesisTestingUtilitiesDump`lmtch:True | False]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput \/; MatchQ[AugmentedData`ADLength[Statistics`HypothesisTestingUtilitiesDump`data], Statistics`HypothesisTestingUtilitiesDump`kPattern] && AugmentedData`ADLength[Statistics`HypothesisTestingUtilitiesDump`data] > 1 \/; First[Statistics`HypothesisTestingUtilitiesDump`data] =!= Automatic \/; VectorQ[Statistics`HypothesisTestingUtilitiesDump`data, Quiet[Statistics`Library`HTDAdmissibleDataQ[#1, Statistics`HypothesisTestingUtilitiesDump`Caller][Statistics`HypothesisTestingUtilitiesDump`pPattern, 1, Statistics`HypothesisTestingUtilitiesDump`dmtch, Statistics`HypothesisTestingUtilitiesDump`lmtch]] & ] := Block[{Statistics`HypothesisTestingUtilitiesDump`check = True}, If[Statistics`HypothesisTestingUtilitiesDump`dmtch, Statistics`HypothesisTestingUtilitiesDump`check = Equal @@ Statistics`Library`HTDDimensionality \/@ Statistics`HypothesisTestingUtilitiesDump`data]; If[Statistics`HypothesisTestingUtilitiesDump`check === True && Statistics`HypothesisTestingUtilitiesDump`lmtch, Statistics`HypothesisTestingUtilitiesDump`check = Equal @@ Statistics`HypothesisTestingUtilitiesDump`HTDLength \/@ Statistics`HypothesisTestingUtilitiesDump`data]; True \/; MatchQ[Statistics`HypothesisTestingUtilitiesDump`check, True]]\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`a_, Statistics`HypothesisTestingUtilitiesDump`Caller_][Statistics`HypothesisTestingUtilitiesDump`args___]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput := (Statistics`HypothesisTestingUtilitiesDump`invalidDataMessaging[Statistics`HypothesisTestingUtilitiesDump`a, Statistics`HypothesisTestingUtilitiesDump`Caller][Statistics`HypothesisTestingUtilitiesDump`args]; False)\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[Statistics`HypothesisTestingUtilitiesDump`a__, Statistics`HypothesisTestingUtilitiesDump`Caller_][___]] \/; Statistics`HypothesisTestingUtilitiesDump`$ValidateInput := (Message[Statistics`HypothesisTestingUtilitiesDump`Caller::ivldtd, Statistics`HypothesisTestingUtilitiesDump`msgForm[Statistics`HypothesisTestingUtilitiesDump`a]]; False)\nHoldPattern[Statistics`Library`HTDAdmissibleDataQ[___][___]] \/;  !Statistics`HypothesisTestingUtilitiesDump`$ValidateInput := True\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDAdmissibleDataQ",
	"Statistics`Library`HTDAugmentedDataFreeQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDAugmentedDataFreeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDAugmentedDataFreeQ[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData] \/; MatchQ[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Type\"], \"SampleToNull\"] :=  !AugmentedData`AugmentedDataQ[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Data\"]]\nStatistics`Library`HTDAugmentedDataFreeQ[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData] :=  !Or @@ AugmentedData`AugmentedDataQ \/@ Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"AllData\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDAugmentedDataFreeQ",
	"Statistics`Library`HTDDiagnosticResult":"ObjectType: Symbol\nUsage: Statistics`Library`HTDDiagnosticResult\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, All, OptionsPattern[]] := (Statistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd, #1, Assumptions -> OptionValue[Assumptions]] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`$DiagnosticTestList\nStatistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, Statistics`HypothesisTestingUtilitiesDump`diag_List, OptionsPattern[]] := (Statistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd, #1, Assumptions -> OptionValue[Assumptions]] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`diag\nStatistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _], \"Normality\", OptionsPattern[]] := Block[{Statistics`HypothesisTestingUtilitiesDump`pval, Statistics`HypothesisTestingUtilitiesDump`data = Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"AllData\"], Statistics`HypothesisTestingUtilitiesDump`sz = Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Size\"], Statistics`HypothesisTestingUtilitiesDump`assump = OptionValue[Assumptions], Statistics`HypothesisTestingUtilitiesDump`norm, Statistics`HypothesisTestingUtilitiesDump`opval}, Statistics`HypothesisTestingUtilitiesDump`norm = \"Normality\" \/. If[Statistics`HypothesisTestingUtilitiesDump`assump === None, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"NormalityAssumption\"], Statistics`HypothesisTestingUtilitiesDump`assump] \/. {\"Normality\" -> 0}; Switch[Statistics`HypothesisTestingUtilitiesDump`norm, False, {False, 0}, 0 | True, {True, 1}, 1 | Automatic, Statistics`HypothesisTestingUtilitiesDump`getCachedProperty[Statistics`HypothesisTestingUtilitiesDump`opval = Statistics`HypothesisTestingUtilitiesDump`$CachingEnabled; Internal`WithLocalSettings[Statistics`HypothesisTestingUtilitiesDump`$CachingEnabled = False, Switch[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Type\"], \"SampleToNull\", Statistics`HypothesisTestingUtilitiesDump`pval = Quiet[DistributionFitTest[Statistics`HypothesisTestingUtilitiesDump`vectorizeColumnMatrix[Statistics`HypothesisTestingUtilitiesDump`data]]]; {TrueQ[Statistics`HypothesisTestingUtilitiesDump`pval > Statistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`sz, {0, 1}]], Statistics`HypothesisTestingUtilitiesDump`pval}, _, Statistics`HypothesisTestingUtilitiesDump`pval = Quiet[DistributionFitTest \/@ Statistics`HypothesisTestingUtilitiesDump`vectorizeColumnMatrix \/@ Statistics`HypothesisTestingUtilitiesDump`data]; {TrueQ[Min[Statistics`HypothesisTestingUtilitiesDump`pval] >= Clip[Statistics`HypothesisTestingUtilitiesDump`sz, {0, 1}]\/Length[Statistics`HypothesisTestingUtilitiesDump`data]], Statistics`HypothesisTestingUtilitiesDump`pval}], Statistics`HypothesisTestingUtilitiesDump`$CachingEnabled = Statistics`HypothesisTestingUtilitiesDump`opval], \"Normality\", Statistics`HypothesisTestingUtilitiesDump`htd], _, {True, 1}]]\nStatistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"EqualVariance\", OptionsPattern[]] := Block[{Statistics`HypothesisTestingUtilitiesDump`pval, Statistics`HypothesisTestingUtilitiesDump`data = Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"AllData\"], Statistics`HypothesisTestingUtilitiesDump`sz = Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Size\"], Statistics`HypothesisTestingUtilitiesDump`assump = OptionValue[Assumptions], Statistics`HypothesisTestingUtilitiesDump`ev, Statistics`HypothesisTestingUtilitiesDump`opval}, Statistics`HypothesisTestingUtilitiesDump`ev = \"EqualVariance\" \/. If[Statistics`HypothesisTestingUtilitiesDump`assump === None, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"EqualVarianceAssumption\"], Statistics`HypothesisTestingUtilitiesDump`assump] \/. {\"EqualVariance\" -> 0}; Switch[Statistics`HypothesisTestingUtilitiesDump`ev, False, {False, 0}, 0 | True, {True, 1}, 1 | Automatic, Statistics`HypothesisTestingUtilitiesDump`getCachedProperty[Statistics`HypothesisTestingUtilitiesDump`opval = Statistics`HypothesisTestingUtilitiesDump`$CachingEnabled; Internal`WithLocalSettings[Statistics`HypothesisTestingUtilitiesDump`$CachingEnabled = False, Switch[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Type\"], \"SampleToNull\", {True, 1}, _, Statistics`HypothesisTestingUtilitiesDump`pval = Quiet[VarianceEquivalenceTest[Statistics`HypothesisTestingUtilitiesDump`data]]; {TrueQ[Statistics`HypothesisTestingUtilitiesDump`pval >= Clip[Statistics`HypothesisTestingUtilitiesDump`sz, {0, 1}]], Statistics`HypothesisTestingUtilitiesDump`pval}], Statistics`HypothesisTestingUtilitiesDump`$CachingEnabled = Statistics`HypothesisTestingUtilitiesDump`opval], \"EqualVariance\", Statistics`HypothesisTestingUtilitiesDump`htd], _, {True, 1}]]\nStatistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"Symmetry\", OptionsPattern[]] := Block[{Statistics`HypothesisTestingUtilitiesDump`pval, Statistics`HypothesisTestingUtilitiesDump`sz = Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Size\"], Statistics`HypothesisTestingUtilitiesDump`assump = OptionValue[Assumptions], Statistics`HypothesisTestingUtilitiesDump`sym}, Statistics`HypothesisTestingUtilitiesDump`sym = \"Symmetry\" \/. If[Statistics`HypothesisTestingUtilitiesDump`assump === None, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"SymmetryAssumption\"], Statistics`HypothesisTestingUtilitiesDump`assump] \/. {\"Symmetry\" -> 0}; Switch[Statistics`HypothesisTestingUtilitiesDump`sym, False, {False, 0}, 0 | True, {True, 1}, 1 | Automatic, Statistics`HypothesisTestingUtilitiesDump`getCachedProperty[Statistics`HypothesisTestingUtilitiesDump`pval = Quiet[Statistics`HypothesisTestingUtilitiesDump`HTDSymmetryTest[Statistics`HypothesisTestingUtilitiesDump`htd]]; {TrueQ[Statistics`HypothesisTestingUtilitiesDump`pval > Statistics`Library`PValueClip[Statistics`HypothesisTestingUtilitiesDump`sz, {0, 1}]], Statistics`HypothesisTestingUtilitiesDump`pval}, \"Symmetry\", Statistics`HypothesisTestingUtilitiesDump`htd], _, {True, 1}]]\nStatistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, Statistics`HypothesisTestingUtilitiesDump`diag_, Statistics`HypothesisTestingUtilitiesDump`test_String, OptionsPattern[]] := Statistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`HypothesisTestingUtilitiesDump`diag, {Statistics`HypothesisTestingUtilitiesDump`test}, Assumptions -> OptionValue[Assumptions]]\nStatistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _], Statistics`HypothesisTestingUtilitiesDump`diag_, Statistics`HypothesisTestingUtilitiesDump`tests:{__String}, OptionsPattern[]] := Block[{Statistics`HypothesisTestingUtilitiesDump`assump}, Statistics`HypothesisTestingUtilitiesDump`assump = Pick[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Assumptions\"], Sign[Total[Statistics`HypothesisTestingUtilitiesDump`iGetDiagnosticPattern[Statistics`HypothesisTestingUtilitiesDump`tests, Statistics`HypothesisTestingUtilitiesDump`Caller][[All,All,2]]]], 1]; Statistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`HypothesisTestingUtilitiesDump`diag, Assumptions -> Statistics`HypothesisTestingUtilitiesDump`assump]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions -> None}\nAttributes: {}\nFullName: Statistics`Library`HTDDiagnosticResult",
	"Statistics`Library`HTDDiagnosticsParser":"ObjectType: Symbol\nUsage: Statistics`Library`HTDDiagnosticsParser\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDDiagnosticsParser[Automatic, VarianceEquivalenceTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, WilksWTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, BaringhausHenzeTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, KuiperTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, MardiaCombinedTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, ShapiroWilkTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, VarianceTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, PillaiTraceTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, MannWhitneyTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, SpearmanRankTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, KolmogorovSmirnovTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, MardiaSkewnessTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, CorrelationTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, GoodmanKruskalGammaTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, JarqueBeraALMTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, SignedRankTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, DistributionFitTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, TTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 1, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, PairedZTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, LogRankTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, BlomqvistBetaTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, ZTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, LocationEquivalenceTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 1, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, PearsonChiSquareTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, KendallTauTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, LeveneTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, UnitRootTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, IndependenceTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, HoeffdingDTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, LocationTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 1, \"Symmetry\" -> 1}\nStatistics`Library`HTDDiagnosticsParser[Automatic, CramerVonMisesTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, MardiaKurtosisTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, AndersonDarlingTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, PearsonCorrelationTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, SignTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, WatsonUSquareTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, FisherRatioTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, ConoverTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, PairedTTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, BrownForsytheTest] = {\"Normality\" -> 1, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, SiegelTukeyTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[Automatic, AutocorrelationTest] = {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[None, Statistics`HypothesisTestingUtilitiesDump`Caller_] := {\"Normality\" -> 0, \"EqualVariance\" -> 0, \"Symmetry\" -> 0}\nStatistics`Library`HTDDiagnosticsParser[All, Statistics`HypothesisTestingUtilitiesDump`Caller_] := {\"Normality\" -> 1, \"EqualVariance\" -> 1, \"Symmetry\" -> 1}\nStatistics`Library`HTDDiagnosticsParser[Statistics`HypothesisTestingUtilitiesDump`dargs_, Statistics`HypothesisTestingUtilitiesDump`Caller_] := Block[{Statistics`HypothesisTestingUtilitiesDump`args = Flatten[{Statistics`HypothesisTestingUtilitiesDump`dargs}], Statistics`HypothesisTestingUtilitiesDump`norm, Statistics`HypothesisTestingUtilitiesDump`var, Statistics`HypothesisTestingUtilitiesDump`sym, Statistics`HypothesisTestingUtilitiesDump`x}, If[ !AllTrue[Statistics`HypothesisTestingUtilitiesDump`args, Statistics`HypothesisTestingUtilitiesDump`diagnosticArgumentQ], Message[Statistics`HypothesisTestingUtilitiesDump`Caller::dgnstcs, Pick[Statistics`HypothesisTestingUtilitiesDump`args, Statistics`HypothesisTestingUtilitiesDump`diagnosticArgumentQ \/@ Statistics`HypothesisTestingUtilitiesDump`args, False]]]; (Statistics`HypothesisTestingUtilitiesDump`iGetDiagnostic[Statistics`HypothesisTestingUtilitiesDump`args, #1] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`$DiagnosticTestList]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDDiagnosticsParser",
	"Statistics`Library`HTDDimensionality":"ObjectType: Symbol\nUsage: Statistics`Library`HTDDimensionality\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDDimensionality[Automatic] := Sequence[]\nStatistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d_, 2] := Statistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d]\nStatistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d_, 1] := AugmentedData`ADLength[Statistics`HypothesisTestingUtilitiesDump`d]\nStatistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d_, 0] := 1\nStatistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d_List] := With[{Statistics`HypothesisTestingUtilitiesDump`dim = Dimensions[Statistics`HypothesisTestingUtilitiesDump`d]}, If[Length[Statistics`HypothesisTestingUtilitiesDump`dim] <= 1, 1, Statistics`HypothesisTestingUtilitiesDump`dim[[2]]]]\nStatistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d:_SparseArray | _?StructuredArray`StructuredArrayQ] := With[{Statistics`HypothesisTestingUtilitiesDump`dim = Dimensions[Statistics`HypothesisTestingUtilitiesDump`d]}, If[Length[Statistics`HypothesisTestingUtilitiesDump`dim] <= 1, 1, Statistics`HypothesisTestingUtilitiesDump`dim[[2]]]]\nStatistics`Library`HTDDimensionality[(Statistics`HypothesisTestingUtilitiesDump`d_)?AugmentedData`AugmentedDataQ] := With[{Statistics`HypothesisTestingUtilitiesDump`dim = AugmentedData`ADDimensions[Statistics`HypothesisTestingUtilitiesDump`d]}, If[Length[Statistics`HypothesisTestingUtilitiesDump`dim] <= 1, 1, Statistics`HypothesisTestingUtilitiesDump`dim[[2]]]]\nStatistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d_] := With[{Statistics`HypothesisTestingUtilitiesDump`dim = Quiet[Statistics`Library`DistributionDimensionality[Statistics`HypothesisTestingUtilitiesDump`d]]}, Statistics`HypothesisTestingUtilitiesDump`dim \/; IntegerQ[Statistics`HypothesisTestingUtilitiesDump`dim]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDDimensionality",
	"Statistics`Library`HTDGetAppropriateTests":"ObjectType: Symbol\nUsage: Statistics`Library`HTDGetAppropriateTests\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDGetAppropriateTests[All, Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _]] := Statistics`Library`HTDTestAssumptionsAndReturnAppropriate[Statistics`HypothesisTestingUtilitiesDump`htd][[1]]\nStatistics`Library`HTDGetAppropriateTests[Automatic, Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _]] := Statistics`HypothesisTestingUtilitiesDump`inContext[\"iGetMostAppropriateTest\", Statistics`HypothesisTestingUtilitiesDump`Caller][Statistics`HypothesisTestingUtilitiesDump`htd]\nStatistics`Library`HTDGetAppropriateTests[Statistics`HypothesisTestingUtilitiesDump`test_String, Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _]] := Statistics`HypothesisTestingUtilitiesDump`HTDTestAssumptions[{Statistics`HypothesisTestingUtilitiesDump`test}, Statistics`HypothesisTestingUtilitiesDump`htd]\nStatistics`Library`HTDGetAppropriateTests[Statistics`HypothesisTestingUtilitiesDump`test_List, Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _]] \/; Internal`LiterallyAbsentQ[Statistics`HypothesisTestingUtilitiesDump`test, {All, Automatic}] := Statistics`HypothesisTestingUtilitiesDump`HTDTestAssumptions[Statistics`HypothesisTestingUtilitiesDump`test, Statistics`HypothesisTestingUtilitiesDump`htd]\nStatistics`Library`HTDGetAppropriateTests[Statistics`HypothesisTestingUtilitiesDump`test_List, Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _]] := Flatten[(Statistics`Library`HTDGetAppropriateTests[#1, Statistics`HypothesisTestingUtilitiesDump`htd] & ) \/@ Statistics`HypothesisTestingUtilitiesDump`test, 1]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDGetAppropriateTests",
	"Statistics`Library`HTDGetPrecision":"ObjectType: Symbol\nUsage: Statistics`Library`HTDGetPrecision\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDGetPrecision[Statistics`HypothesisTestingUtilitiesDump`htd_] := Statistics`HypothesisTestingUtilitiesDump`precision[Internal`PrecAccur[Statistics`HypothesisTestingUtilitiesDump`htd]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDGetPrecision",
	"Statistics`Library`HTDMatrixQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDMatrixQ[(Statistics`HypothesisTestingUtilitiesDump`d_)?MatrixQ] := True\nStatistics`Library`HTDMatrixQ[(Statistics`HypothesisTestingUtilitiesDump`d_)?AugmentedData`AugmentedDataQ] \/; Statistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d] > 1 := True\nStatistics`Library`HTDMatrixQ[Statistics`HypothesisTestingUtilitiesDump`d_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDMatrixQ",
	"Statistics`Library`HTDQuantityTest":"ObjectType: Symbol\nUsage: Statistics`Library`HTDQuantityTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDQuantityTest[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`sigma_, Statistics`HypothesisTestingUtilitiesDump`nullval_, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller:PairedZTest | ZTest] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`newsigma, Statistics`HypothesisTestingUtilitiesDump`units}, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`sigma, Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation, Throw[$Failed]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newsigma, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newsigma, Statistics`HypothesisTestingUtilitiesDump`newnull, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[(Statistics`HypothesisTestingUtilitiesDump`data_)?Internal`QuantityVectorQ, (Statistics`HypothesisTestingUtilitiesDump`nullval_)?Internal`PossibleQuantityQ, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller:VarianceTest | FisherRatioTest | LeveneTest | BrownForsytheTest | ConoverTest | SiegelTukeyTest] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units}, Statistics`HypothesisTestingUtilitiesDump`newnull = Sqrt[Statistics`HypothesisTestingUtilitiesDump`nullval]; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`newnull]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation, Throw[$Failed]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`newnull = Statistics`HypothesisTestingUtilitiesDump`newnull^2; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[{(Statistics`HypothesisTestingUtilitiesDump`data1_)?Internal`QuantityVectorQ, (Statistics`HypothesisTestingUtilitiesDump`data2_)?Internal`QuantityVectorQ}, (Statistics`HypothesisTestingUtilitiesDump`nullval_)?Statistics`Library`RealNumberQ, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller:VarianceTest | FisherRatioTest | LeveneTest | BrownForsytheTest | ConoverTest | SiegelTukeyTest] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units}, If[Head[Statistics`QuantityUtilities`GetUnitlessVector[{Statistics`HypothesisTestingUtilitiesDump`data1[[1]], Statistics`HypothesisTestingUtilitiesDump`data2[[2]]}]] =!= List, Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[{Statistics`HypothesisTestingUtilitiesDump`data1, Statistics`HypothesisTestingUtilitiesDump`data2}, Automatic]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation, Throw[$Failed]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`newnull = Statistics`HypothesisTestingUtilitiesDump`nullval; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = {Statistics`HypothesisTestingUtilitiesDump`units, Statistics`HypothesisTestingUtilitiesDump`units}]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[{Statistics`HypothesisTestingUtilitiesDump`data1:_?Internal`QuantityVectorQ | _?Statistics`Library`RealVectorQ, Statistics`HypothesisTestingUtilitiesDump`data2:_?Internal`QuantityVectorQ | _?Statistics`Library`RealVectorQ}, Statistics`HypothesisTestingUtilitiesDump`nullval:_?Internal`PossibleQuantityQ | Automatic, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller:VarianceTest | FisherRatioTest | LeveneTest | BrownForsytheTest | ConoverTest | SiegelTukeyTest] \/;  !(Statistics`Library`RealVectorQ[Statistics`HypothesisTestingUtilitiesDump`data1] && Statistics`Library`RealVectorQ[Statistics`HypothesisTestingUtilitiesDump`data2]) := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`newdata, Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units, Statistics`HypothesisTestingUtilitiesDump`test}, If[Statistics`HypothesisTestingUtilitiesDump`nullval =!= Automatic && Head[Statistics`QuantityUtilities`GetUnitlessVector[{(Statistics`HypothesisTestingUtilitiesDump`data1[[1]]\/Statistics`HypothesisTestingUtilitiesDump`data2[[2]])^2, Statistics`HypothesisTestingUtilitiesDump`nullval}]] =!= List, Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`newdata = Statistics`HypothesisTestingUtilitiesDump`convertIndependentDataSets[Statistics`HypothesisTestingUtilitiesDump`data1, Statistics`HypothesisTestingUtilitiesDump`data2]; If[Statistics`HypothesisTestingUtilitiesDump`newdata === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`newdata] === Statistics`HypothesisTestingUtilitiesDump`convertIndependentDataSets, Throw[$Failed]]; {Statistics`HypothesisTestingUtilitiesDump`newdata, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`newdata; If[Statistics`HypothesisTestingUtilitiesDump`nullval === Automatic, Statistics`HypothesisTestingUtilitiesDump`newnull = 1, Statistics`HypothesisTestingUtilitiesDump`test = CompatibleUnitQ[Statistics`HypothesisTestingUtilitiesDump`nullval, Quantity[1, Divide @@ ((Statistics`HypothesisTestingUtilitiesDump`units \/. \"DimensionlessUnit\" -> 1)^2)]]; If[Statistics`HypothesisTestingUtilitiesDump`test === False, Message[Quantity::compatu]; Throw[$Failed]]; Statistics`HypothesisTestingUtilitiesDump`newnull = UnitConvert[Statistics`HypothesisTestingUtilitiesDump`nullval, Divide @@ ((Statistics`HypothesisTestingUtilitiesDump`units \/. \"DimensionlessUnit\" -> 1)^2)]]; If[Statistics`HypothesisTestingUtilitiesDump`newnull === $Failed || Head[Statistics`HypothesisTestingUtilitiesDump`newnull] === UnitConvert, Throw[$Failed], Statistics`HypothesisTestingUtilitiesDump`newnull = QuantityMagnitude[Statistics`HypothesisTestingUtilitiesDump`newnull]]; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Statistics`HypothesisTestingUtilitiesDump`newdata, Statistics`HypothesisTestingUtilitiesDump`newnull, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`nullval_, Statistics`HypothesisTestingUtilitiesDump`n_, Statistics`HypothesisTestingUtilitiesDump`optlist_, CorrelationTest] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units}, Statistics`HypothesisTestingUtilitiesDump`res = If[Statistics`HypothesisTestingUtilitiesDump`n === 1, Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Automatic], Statistics`HypothesisTestingUtilitiesDump`convertIndependentDataSets[Statistics`HypothesisTestingUtilitiesDump`data[[1]], Statistics`HypothesisTestingUtilitiesDump`data[[2]]]]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation, Throw[$Failed]]; If[Internal`PossibleQuantityQ[Statistics`HypothesisTestingUtilitiesDump`nullval], Throw[$Failed]]; If[Statistics`HypothesisTestingUtilitiesDump`n === 1, {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`res = CorrelationTest[Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`nullval, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist], Statistics`HypothesisTestingUtilitiesDump`units = Statistics`HypothesisTestingUtilitiesDump`res[[-1]]; Statistics`HypothesisTestingUtilitiesDump`res = CorrelationTest @@ {Sequence @@ First[Statistics`HypothesisTestingUtilitiesDump`res], \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}]; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === CorrelationTest, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller:LocationEquivalenceTest | VarianceEquivalenceTest] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units}, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Automatic]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation, Throw[$Failed]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Statistics`HypothesisTestingUtilitiesDump`res, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`nullval_, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller:IndependenceTest | PearsonCorrelationTest | SpearmanRankTest | KendallTauTest | GoodmanKruskalGammaTest | HoeffdingDTest | BlomqvistBetaTest | PillaiTraceTest | WilksWTest] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units}, Statistics`HypothesisTestingUtilitiesDump`res = If[Length[Statistics`HypothesisTestingUtilitiesDump`data] === 1, Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Automatic], Statistics`HypothesisTestingUtilitiesDump`convertIndependentDataSets[Statistics`HypothesisTestingUtilitiesDump`data[[1]], Statistics`HypothesisTestingUtilitiesDump`data[[2]]]]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || MatchQ[Head[Statistics`HypothesisTestingUtilitiesDump`res], Statistics`Library`QuantityHypothesisTestInformation | Statistics`HypothesisTestingUtilitiesDump`convertIndependentDataSets], Throw[$Failed]]; If[Length[Statistics`HypothesisTestingUtilitiesDump`data] === 1, {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Sequence @@ Statistics`HypothesisTestingUtilitiesDump`res, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}, Statistics`HypothesisTestingUtilitiesDump`units = Statistics`HypothesisTestingUtilitiesDump`res[[-1]]; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Sequence @@ First[Statistics`HypothesisTestingUtilitiesDump`res], \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}]; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nStatistics`Library`HTDQuantityTest[Statistics`HypothesisTestingUtilitiesDump`data_, Statistics`HypothesisTestingUtilitiesDump`nullval_, Statistics`HypothesisTestingUtilitiesDump`optlist_, Statistics`HypothesisTestingUtilitiesDump`caller_] := Catch[Block[{Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units}, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`Library`QuantityHypothesisTestInformation[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`nullval]; If[Internal`LiterallyOccurringQ[Statistics`HypothesisTestingUtilitiesDump`res, $Failed] || Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`Library`QuantityHypothesisTestInformation, Throw[$Failed]]; {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, Statistics`HypothesisTestingUtilitiesDump`units} = Statistics`HypothesisTestingUtilitiesDump`res; Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`caller @@ {Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`newnull, \"HypothesisTestData\", Statistics`HypothesisTestingUtilitiesDump`optlist}; If[Head[Statistics`HypothesisTestingUtilitiesDump`res] === Statistics`HypothesisTestingUtilitiesDump`caller, Throw[$Failed], Block[{HypothesisTestData}, Statistics`HypothesisTestingUtilitiesDump`res[[2,-1]] = Statistics`HypothesisTestingUtilitiesDump`units]; Statistics`HypothesisTestingUtilitiesDump`res]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDQuantityTest",
	"Statistics`Library`HTDRange":"ObjectType: Symbol\nUsage: Statistics`Library`HTDRange\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDRange",
	"Statistics`Library`HTDSharedPropertyList":"ObjectType: Symbol\nUsage: Statistics`Library`HTDSharedPropertyList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDSharedPropertyList[] := Drop[Statistics`HypothesisTestingUtilitiesDump`$SharedTestPropertyList, -1]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDSharedPropertyList",
	"Statistics`Library`HTDSharedSuperFunctionPropertyList":"ObjectType: Symbol\nUsage: Statistics`Library`HTDSharedSuperFunctionPropertyList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDSharedSuperFunctionPropertyList[] := Drop[Statistics`HypothesisTestingUtilitiesDump`$SharedSuperFunctionTestPropertyList, -1]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDSharedSuperFunctionPropertyList",
	"Statistics`Library`HTDTestAssumptionsAndReturnAppropriate":"ObjectType: Symbol\nUsage: Statistics`Library`HTDTestAssumptionsAndReturnAppropriate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDTestAssumptionsAndReturnAppropriate[Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`Caller_, _, _]] := Block[{Statistics`HypothesisTestingUtilitiesDump`tList, Statistics`HypothesisTestingUtilitiesDump`attr, Statistics`HypothesisTestingUtilitiesDump`diag, Statistics`HypothesisTestingUtilitiesDump`res, Statistics`HypothesisTestingUtilitiesDump`rest}, Statistics`HypothesisTestingUtilitiesDump`attr = Statistics`HypothesisTestingUtilitiesDump`HTDDataAttributes[Statistics`HypothesisTestingUtilitiesDump`htd]; Statistics`HypothesisTestingUtilitiesDump`tList = Statistics`HypothesisTestingUtilitiesDump`HTDWithAttributes[Statistics`HypothesisTestingUtilitiesDump`attr, Statistics`HypothesisTestingUtilitiesDump`Caller]; Statistics`HypothesisTestingUtilitiesDump`rest = Statistics`HypothesisTestingUtilitiesDump`iTestRestrictions[Statistics`HypothesisTestingUtilitiesDump`tList, Statistics`HypothesisTestingUtilitiesDump`Caller]; Statistics`HypothesisTestingUtilitiesDump`tList = If[MatchQ[Flatten[Statistics`HypothesisTestingUtilitiesDump`rest], {}], Statistics`HypothesisTestingUtilitiesDump`tList, Statistics`HypothesisTestingUtilitiesDump`HTDWithoutRestrictions[Statistics`HypothesisTestingUtilitiesDump`tList, Statistics`HypothesisTestingUtilitiesDump`rest, Statistics`HypothesisTestingUtilitiesDump`htd]]; If[ !LinearAlgebra`Private`ZeroVectorQ[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Assumptions\"][[All,2]]], Statistics`HypothesisTestingUtilitiesDump`diag = Statistics`Library`HTDDiagnosticResult[Statistics`HypothesisTestingUtilitiesDump`htd, All, Statistics`HypothesisTestingUtilitiesDump`tList]; Statistics`HypothesisTestingUtilitiesDump`res = Pick[Statistics`HypothesisTestingUtilitiesDump`tList, (Min[Boole[Statistics`HypothesisTestingUtilitiesDump`diag[[All,1]]] - #1] >= 0 & ) \/@ Statistics`HypothesisTestingUtilitiesDump`iGetDiagnosticPattern[Statistics`HypothesisTestingUtilitiesDump`tList, Statistics`HypothesisTestingUtilitiesDump`Caller][[All,All,2]]], Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`tList; Statistics`HypothesisTestingUtilitiesDump`diag = ConstantArray[{True, 1}, Length[Statistics`HypothesisTestingUtilitiesDump`$DiagnosticTestList]]]; If[MatchQ[Statistics`HypothesisTestingUtilitiesDump`res, {}], Message[Statistics`HypothesisTestingUtilitiesDump`Caller::nvldtst, Statistics`HypothesisTestingUtilitiesDump`res = Statistics`HypothesisTestingUtilitiesDump`iFallthroughTest[Statistics`HypothesisTestingUtilitiesDump`Caller]]; Statistics`HypothesisTestingUtilitiesDump`res = {Statistics`HypothesisTestingUtilitiesDump`iFallthroughTest[Statistics`HypothesisTestingUtilitiesDump`Caller]}]; {Sort[Statistics`HypothesisTestingUtilitiesDump`res], Statistics`HypothesisTestingUtilitiesDump`diag}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDTestAssumptionsAndReturnAppropriate",
	"Statistics`Library`HTDTestList":"ObjectType: Symbol\nUsage: Statistics`Library`HTDTestList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDTestList[DistributionFitTest] = {\"AndersonDarling\", \"CramerVonMises\", \"JarqueBeraALM\", \"KolmogorovSmirnov\", \"Kuiper\", \"PearsonChiSquare\", \"ShapiroWilk\", \"WatsonUSquare\", \"MardiaSkewness\", \"MardiaKurtosis\", \"DistanceToBoundary\", \"SzekelyEnergy\", \"MardiaCombined\", \"BaringhausHenze\"}\nStatistics`Library`HTDTestList[IndependenceTest] = {\"PearsonCorrelation\", \"SpearmanRank\", \"GoodmanKruskalGamma\", \"KendallTau\", \"HoeffdingD\", \"WilksW\", \"PillaiTrace\", \"BlomqvistBeta\"}\nStatistics`Library`HTDTestList[CorrelationTest] = {\"PearsonCorrelation\", \"SpearmanRank\"}\nStatistics`Library`HTDTestList[VarianceTest] = {\"FisherRatio\", \"Levene\", \"BrownForsythe\", \"Conover\", \"SiegelTukey\"}\nStatistics`Library`HTDTestList[LocationEquivalenceTest] = {\"FriedmanRank\", \"CompleteBlockF\", \"KruskalWallis\", \"KSampleT\"}\nStatistics`Library`HTDTestList[VarianceEquivalenceTest] = {\"FisherRatio\", \"Levene\", \"BrownForsythe\", \"Bartlett\", \"Conover\"}\nStatistics`Library`HTDTestList[AutocorrelationTest] = {\"BoxPierce\", \"LjungBox\"}\nStatistics`Library`HTDTestList[UnitRootTest] = {\"DickeyFullerF\", \"DickeyFullerT\", \"PhillipsPerronF\", \"PhillipsPerronT\"}\nStatistics`Library`HTDTestList[LocationTest] \/; Statistics`HypothesisTestingUtilitiesDump`$EnableDummyTest := {\"Dummy\", \"Sign\", \"SignedRank\", \"T\", \"PairedT\", \"MannWhitney\", \"Z\", \"PairedZ\"}\nStatistics`Library`HTDTestList[LocationTest] \/;  !Statistics`HypothesisTestingUtilitiesDump`$EnableDummyTest := {\"Sign\", \"SignedRank\", \"T\", \"PairedT\", \"MannWhitney\", \"Z\", \"PairedZ\"}\nStatistics`Library`HTDTestList[Statistics`HypothesisTestingUtilitiesDump`t_] := {StringDrop[ToString[Statistics`HypothesisTestingUtilitiesDump`t], -4]}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDTestList",
	"Statistics`Library`HTDValidMatrixDataQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDValidMatrixDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDValidMatrixDataQ[(Statistics`HypothesisTestingUtilitiesDump`data_)?Statistics`Library`RealMatrixQ, Statistics`HypothesisTestingUtilitiesDump`Caller_] := Inequality[Length[Statistics`HypothesisTestingUtilitiesDump`data], Greater, Statistics`HypothesisTestingUtilitiesDump`dataDimensionality[Statistics`HypothesisTestingUtilitiesDump`data], GreaterEqual, 1]\nStatistics`Library`HTDValidMatrixDataQ[(Statistics`HypothesisTestingUtilitiesDump`data_)?AugmentedData`AugmentedDataQ, Statistics`HypothesisTestingUtilitiesDump`Caller_] := Inequality[AugmentedData`ADLength[Statistics`HypothesisTestingUtilitiesDump`data], Greater, Statistics`HypothesisTestingUtilitiesDump`dataDimensionality[Statistics`HypothesisTestingUtilitiesDump`data], GreaterEqual, 1] && AugmentedData`AdmissibleAugmentedDataQ[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`Caller]\nStatistics`Library`HTDValidMatrixDataQ[(Statistics`HypothesisTestingUtilitiesDump`data_)?Internal`QuantityMatrixQ, Statistics`HypothesisTestingUtilitiesDump`Caller_] := Inequality[Length[Statistics`HypothesisTestingUtilitiesDump`data], Greater, Statistics`HypothesisTestingUtilitiesDump`dataDimensionality[Statistics`HypothesisTestingUtilitiesDump`data], GreaterEqual, 1] && Statistics`Library`RealMatrixQ[QuantityMagnitude[Statistics`HypothesisTestingUtilitiesDump`data]]\nStatistics`Library`HTDValidMatrixDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDValidMatrixDataQ",
	"Statistics`Library`HTDValidPropertyQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDValidPropertyQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDValidPropertyQ[Statistics`HypothesisTestingUtilitiesDump`property_, Statistics`HypothesisTestingUtilitiesDump`caller_] \/; MatchQ[Statistics`HypothesisTestingUtilitiesDump`caller, Alternatives @@ Statistics`HypothesisTestingUtilitiesDump`$SuperFunctionList] \/; Complement[Flatten[{Statistics`HypothesisTestingUtilitiesDump`property}], Join[Statistics`HypothesisTestingUtilitiesDump`$DeveloperSharedPropertyList, Statistics`HypothesisTestingUtilitiesDump`$SharedTestPropertyList, Statistics`HypothesisTestingUtilitiesDump`$SharedSuperFunctionTestPropertyList, Statistics`Library`HTDTestList[Statistics`HypothesisTestingUtilitiesDump`caller], Statistics`HypothesisTestingUtilitiesDump`$TestSpecificProperties[Statistics`HypothesisTestingUtilitiesDump`caller]]] === {} := True\nStatistics`Library`HTDValidPropertyQ[Statistics`HypothesisTestingUtilitiesDump`property_, Statistics`HypothesisTestingUtilitiesDump`caller_] \/;  !MatchQ[Statistics`HypothesisTestingUtilitiesDump`caller, Alternatives @@ Statistics`HypothesisTestingUtilitiesDump`$SuperFunctionList] \/; Complement[Flatten[{Statistics`HypothesisTestingUtilitiesDump`property}], Join[Statistics`HypothesisTestingUtilitiesDump`$DeveloperSharedPropertyList, Statistics`HypothesisTestingUtilitiesDump`$SharedTestPropertyList, {StringDrop[ToString[Statistics`HypothesisTestingUtilitiesDump`caller], -4]}, Statistics`HypothesisTestingUtilitiesDump`$TestSpecificProperties[Statistics`HypothesisTestingUtilitiesDump`caller]]] === {} := True\nStatistics`Library`HTDValidPropertyQ[Statistics`HypothesisTestingUtilitiesDump`p___, Statistics`HypothesisTestingUtilitiesDump`caller_] := (Message[Statistics`HypothesisTestingUtilitiesDump`caller::invprp, Statistics`HypothesisTestingUtilitiesDump`p]; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDValidPropertyQ",
	"Statistics`Library`HTDValidVectorDataQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDValidVectorDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDValidVectorDataQ[(Statistics`HypothesisTestingUtilitiesDump`data_)?Statistics`Library`RealVectorQ, Statistics`HypothesisTestingUtilitiesDump`Caller_] := Length[Statistics`HypothesisTestingUtilitiesDump`data] > 1\nStatistics`Library`HTDValidVectorDataQ[(Statistics`HypothesisTestingUtilitiesDump`data_)?AugmentedData`AugmentedDataQ, Statistics`HypothesisTestingUtilitiesDump`Caller_] := AugmentedData`ADLength[Statistics`HypothesisTestingUtilitiesDump`data] > 1 && Statistics`HypothesisTestingUtilitiesDump`dataDimensionality[Statistics`HypothesisTestingUtilitiesDump`data] == 1 && AugmentedData`AdmissibleAugmentedDataQ[Statistics`HypothesisTestingUtilitiesDump`data, Statistics`HypothesisTestingUtilitiesDump`Caller]\nStatistics`Library`HTDValidVectorDataQ[(Statistics`HypothesisTestingUtilitiesDump`data_)?Internal`QuantityVectorQ, Statistics`HypothesisTestingUtilitiesDump`Caller_] := Length[Statistics`HypothesisTestingUtilitiesDump`data] > 1 && Statistics`Library`RealVectorQ[QuantityMagnitude[Statistics`HypothesisTestingUtilitiesDump`data]]\nStatistics`Library`HTDValidVectorDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDValidVectorDataQ",
	"Statistics`Library`HTDValue":"ObjectType: Symbol\nUsage: Statistics`Library`HTDValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDValue[HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`c_, _, _], \"Caller\"] := Statistics`HypothesisTestingUtilitiesDump`c\nStatistics`Library`HTDValue[HypothesisTestData[_, {Statistics`HypothesisTestingUtilitiesDump`d_, _, _, _, _, _, _}, _], \"Data\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, {_, Statistics`HypothesisTestingUtilitiesDump`d_, _, _, _, _, _}, _], \"Type\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, {_, _, Statistics`HypothesisTestingUtilitiesDump`d_, _, _, _, _}, _], \"Dim\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, {_, _, _, Statistics`HypothesisTestingUtilitiesDump`d_, _, _, _}, _], \"Size\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, {_, _, _, _, Statistics`HypothesisTestingUtilitiesDump`d_, _, _}, _], \"TestSpecificArguments\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, {_, _, _, _, _, Statistics`HypothesisTestingUtilitiesDump`d_, _}, _], \"MethodOptions\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, {_, _, _, _, _, _, Statistics`HypothesisTestingUtilitiesDump`d_}, _], \"Units\"] := Statistics`HypothesisTestingUtilitiesDump`d\nStatistics`Library`HTDValue[HypothesisTestData[_, _, Statistics`HypothesisTestingUtilitiesDump`a_], \"Assumptions\"] := Statistics`HypothesisTestingUtilitiesDump`a\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd:HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`c_, _, _], \"AllData\"] := If[MatchQ[Statistics`HypothesisTestingUtilitiesDump`c, Alternatives @@ Statistics`HypothesisTestingUtilitiesDump`$GoodnessOfFitCallerList] && (ListQ[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"GOF\", \"Data2\"]] || AugmentedData`AugmentedDataQ[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"GOF\", \"Data2\"]]), {Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"GOF\", \"Data1\"], Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"GOF\", \"Data2\"]}, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Data\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"NormalityAssumption\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Assumptions\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"EqualVarianceAssumption\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Assumptions\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"SymmetryAssumption\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Assumptions\"][[3]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"Precision\"] := Internal`PrecAccur[Statistics`HypothesisTestingUtilitiesDump`htd] \/. {Infinity -> MachinePrecision}\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"Method\"] := Statistics`HypothesisTestingUtilitiesDump`MethodExtract[Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"MethodOptions\"], Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"RandomSeed\"] := Statistics`HypothesisTestingUtilitiesDump`RandomSeedExtract[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"MaxSamples\"] := Statistics`HypothesisTestingUtilitiesDump`MaxSamplesExtract[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"PrecisionGoal\"] := Statistics`HypothesisTestingUtilitiesDump`PrecisionGoalExtract[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"AccuracyGoal\"] := Statistics`HypothesisTestingUtilitiesDump`AccuracyGoalExtract[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"SamplingIncrement\"] := Statistics`HypothesisTestingUtilitiesDump`SamplingIncrementExtract[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"EvaluationMonitor\"] := Statistics`HypothesisTestingUtilitiesDump`EvaluationMonitorExtract[Statistics`HypothesisTestingUtilitiesDump`htd, Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Caller\"]]\nStatistics`Library`HTDValue[HypothesisTestData[Statistics`HypothesisTestingUtilitiesDump`c_, _, _], \"DeveloperProperties\"] := {\"AccuracyGoal\", \"AllData\", \"Assumptions\", \"Data\", \"Dim\", \"EqualVarianceAssumption\", \"EvaluationMonitor\", \"MaxSamples\", \"Method\", \"MethodOptions\", \"NormalityAssumption\", \"PrecisionGoal\", \"RandomSeed\", \"SamplingIncrement\", \"Size\", \"SymmetryAssumption\", \"TestSpecificArguments\", \"Type\", \"Units\"}\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"GOF\", \"TestDist\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"GOF\", \"Data1\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"Data\"]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"GOF\", \"Data2\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"GOF\", \"ParameterEstimationMethod\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LOC\", \"Mu0\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LOC\", \"Ha\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LOC\", \"Cov0\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[3]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LOC\", \"MaxIt\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[4]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"VAR\", \"Sigma0\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"VAR\", \"Ha\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"VET\", \"Means\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"VET\", \"Variances\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"IND\", \"Ha\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"IND\", \"MaxIt\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"IND\", \"p0\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[3]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LRT\", \"WeightFunction\" | \"FlemingHarringtonWeights\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LRT\", \"CensoringType\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[2]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LRT\", \"TruncationType\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[3]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"LRT\", \"SurvivalData\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[4]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"URT\", \"P0\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nStatistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd_HypothesisTestData, \"ACT\", \"Lag\"] := Statistics`Library`HTDValue[Statistics`HypothesisTestingUtilitiesDump`htd, \"TestSpecificArguments\"][[1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDValue",
	"Statistics`Library`HTDVectorQ":"ObjectType: Symbol\nUsage: Statistics`Library`HTDVectorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`HTDVectorQ[(Statistics`HypothesisTestingUtilitiesDump`d_)?VectorQ] := True\nStatistics`Library`HTDVectorQ[(Statistics`HypothesisTestingUtilitiesDump`d_)?AugmentedData`AugmentedDataQ] \/; Statistics`Library`HTDDimensionality[Statistics`HypothesisTestingUtilitiesDump`d] == 1 := True\nStatistics`Library`HTDVectorQ[Statistics`HypothesisTestingUtilitiesDump`d_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`HTDVectorQ",
	"Templating`HTMLTemplate":"ObjectType: Symbol\nUsage: Templating`HTMLTemplate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Templating`HTMLTemplate[Templating`HTMLExport`PackagePrivate`context_, Templating`HTMLExport`PackagePrivate`t_String, Templating`HTMLExport`PackagePrivate`rest___] := Templating`HTMLTemplate[Templating`HTMLExport`PackagePrivate`context, File[Templating`HTMLExport`PackagePrivate`t], Templating`HTMLExport`PackagePrivate`rest]\nTemplating`HTMLTemplate[_, $Failed, ___] := $Failed\nTemplating`HTMLTemplate[Templating`HTMLExport`PackagePrivate`expr_] := Templating`HTMLTemplate[Templating`HTMLExport`PackagePrivate`expr, Automatic]\nTemplating`HTMLTemplate[Templating`HTMLExport`PackagePrivate`expr_, Templating`HTMLExport`PackagePrivate`t:Automatic | Inherited | (None | Null | _Missing | Missing | Nothing), Templating`HTMLExport`PackagePrivate`rest___] := Templating`HTMLTemplate[Templating`HTMLExport`PackagePrivate`expr, Templating`HTMLExport`PackagePrivate`templateForHead[Templating`HTMLExport`PackagePrivate`expr], Templating`HTMLExport`PackagePrivate`rest]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ImageSize -> Automatic}\nAttributes: {}\nFullName: Templating`HTMLTemplate",
	"ExternalService`HTTPInitialize":"ObjectType: Symbol\nUsage: ExternalService`HTTPInitialize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ExternalService`HTTPInitialize[] := If[ExternalService`Private`$Initialized =!= True, Needs[\"JLink`\"]; JLink`InstallJava[]; JLink`LoadJavaClass[\"org.apache.commons.httpclient.HttpClient\"]; JLink`LoadJavaClass[\"org.apache.commons.httpclient.HostConfiguration\"]; JLink`LoadJavaClass[\"org.apache.commons.httpclient.methods.PostMethod\"]; JLink`LoadJavaClass[\"org.apache.commons.httpclient.NameValuePair\"]; ExternalService`Private`$Initialized = True]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ExternalService`HTTPInitialize",
	"ExternalService`HTTPRequest":"ObjectType: Symbol\nUsage: ExternalService`HTTPRequest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ExternalService`HTTPRequest[\"GET\", ExternalService`HTTPToolsDump`url_String, ExternalService`HTTPToolsDump`params_List, OptionsPattern[]] := JLink`JavaBlock[Module[{ExternalService`HTTPToolsDump`hc, ExternalService`HTTPToolsDump`pm, ExternalService`HTTPToolsDump`client, ExternalService`HTTPToolsDump`uri}, ExternalService`HTTPToolsDump`client = JLink`JavaNew[\"org.apache.commons.httpclient.HttpClient\"]; ExternalService`HTTPToolsDump`pm = JLink`JavaNew[\"org.apache.commons.httpclient.methods.GetMethod\", ExternalService`HTTPToolsDump`url]; Apply[ExternalService`HTTPToolsDump`pm[ExternalService`HTTPToolsDump`setParameter[##1]] & , ExternalService`HTTPToolsDump`params, {1}]; ExternalService`HTTPToolsDump`client[ExternalService`HTTPToolsDump`executeMethod[ExternalService`HTTPToolsDump`pm]]; ExternalService`HTTPToolsDump`pm[ExternalService`HTTPToolsDump`getResponseBodyAsString[]]]]\nExternalService`HTTPRequest[\"POST\", ExternalService`HTTPToolsDump`url_String, ExternalService`HTTPToolsDump`params_List, OptionsPattern[]] := JLink`JavaBlock[Module[{ExternalService`HTTPToolsDump`hc, ExternalService`HTTPToolsDump`pm, ExternalService`HTTPToolsDump`client, ExternalService`HTTPToolsDump`uri}, ExternalService`HTTPToolsDump`client = JLink`JavaNew[\"org.apache.commons.httpclient.HttpClient\"]; ExternalService`HTTPToolsDump`pm = JLink`JavaNew[\"org.apache.commons.httpclient.methods.PostMethod\", ExternalService`HTTPToolsDump`url]; Apply[ExternalService`HTTPToolsDump`pm[ExternalService`HTTPToolsDump`setParameter[##1]] & , ExternalService`HTTPToolsDump`params, {1}]; ExternalService`HTTPToolsDump`client[ExternalService`HTTPToolsDump`executeMethod[ExternalService`HTTPToolsDump`pm]]; ExternalService`HTTPToolsDump`pm[ExternalService`HTTPToolsDump`getResponseBodyAsString[]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ExternalService`HTTPRequest",
	"Optimization`Huber":"ObjectType: Symbol\nUsage: Optimization`Huber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: Optimization`Huber",
	"Internal`HullDimensions":"ObjectType: Symbol\nUsage: Internal`HullDimensions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`HullDimensions",
	"Graphics`Mesh`HullSegments":"ObjectType: Symbol\nUsage: Graphics`Mesh`HullSegments\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`HullSegments",
	"StochasticCalculus`HullWhiteProcess":"ObjectType: Symbol\nUsage: StochasticCalculus`HullWhiteProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StochasticCalculus`HullWhiteProcess",
	"NumberTheory`HurwitzClassNumber":"ObjectType: Symbol\nUsage: NumberTheory`HurwitzClassNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NumberTheory`HurwitzClassNumber[0] = -1\/12\nNumberTheory`HurwitzClassNumber[3] = 1\/3\nNumberTheory`HurwitzClassNumber[4] = 1\/2\nNumberTheory`HurwitzClassNumber[(NumberTheory`NumberTheoryFunctionsDump`n_Integer)?Positive] := 0 \/; MemberQ[{1, 2}, Mod[NumberTheory`NumberTheoryFunctionsDump`n, 4]]\nNumberTheory`HurwitzClassNumber[(NumberTheory`NumberTheoryFunctionsDump`n_Integer)?Positive] := NumberTheory`NumberTheoryFunctionsDump`NClassNumberFD[-NumberTheory`NumberTheoryFunctionsDump`n] \/; NumberTheory`FundamentalDiscriminantQ[-NumberTheory`NumberTheoryFunctionsDump`n]\nNumberTheory`HurwitzClassNumber[(NumberTheory`NumberTheoryFunctionsDump`n_Integer)?Positive] := With[{NumberTheory`NumberTheoryFunctionsDump`sqrdivisors = Select[Divisors[NumberTheory`NumberTheoryFunctionsDump`n], NumberTheory`NumberTheoryFunctionsDump`PerfectSquareQ], NumberTheory`NumberTheoryFunctionsDump`hclass = If[MemberQ[{2, 3}, Mod[#1, 4]], 0, NumberTheory`ClassNumber[#1]\/(NumberTheory`NumberTheoryFunctionsDump`unitQuadratic[#1]\/2)] & }, Plus @@ (NumberTheory`NumberTheoryFunctionsDump`hclass[-(NumberTheory`NumberTheoryFunctionsDump`n\/#1)] & ) \/@ NumberTheory`NumberTheoryFunctionsDump`sqrdivisors]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: NumberTheory`HurwitzClassNumber",
	"Deconvolve`Hybrid":"ObjectType: Symbol\nUsage: Deconvolve`Hybrid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Preconditioned -> True}\nAttributes: {}\nFullName: Deconvolve`Hybrid",
	"ResourceFunctionHelpers`HyperbolaProperties":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`HyperbolaProperties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`HyperbolaProperties[ResourceFunctionHelpers`ConicProperties`Private`iprops_, ResourceFunctionHelpers`ConicProperties`Private`vars:{_Symbol, _Symbol}, ResourceFunctionHelpers`ConicProperties`Private`requestedProps:_String | {_String..} | _Symbol:Automatic, ResourceFunctionHelpers`ConicProperties`Private`opt:OptionsPattern[]] := Block[{ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`res, ResourceFunctionHelpers`ConicProperties`Private`goodHyperbolaflag = True, ResourceFunctionHelpers`ConicProperties`Private`returnType, ResourceFunctionHelpers`ConicProperties`Private`temp}, ResourceFunctionHelpers`ConicProperties`Private`props = ResourceFunctionHelpers`ConicProperties`Private`processInput[ResourceFunctionHelpers`ConicProperties`Private`iprops, ResourceFunctionHelpers`ConicProperties`Private`vars, \"Hyperbola\"]; ResourceFunctionHelpers`ConicProperties`Private`returnType = OptionValue[\"ReturnType\"]; (If[KeyExistsQ[ResourceFunctionHelpers`ConicProperties`Private`props, \"Equation\"], ResourceFunctionHelpers`ConicProperties`Private`temp = Replace[ResourceFunctionHelpers`ConicProperties`Private`fromEquation[ResourceFunctionHelpers`ConicProperties`Private`props[\"Equation\"], ResourceFunctionHelpers`ConicProperties`Private`vars], ResourceFunctionHelpers`ConicProperties`Private`a:Except[_List] :> (ResourceFunctionHelpers`ConicProperties`Private`goodHyperbolaflag = False; Association[]), 0] \/. {ResourceFunctionHelpers`ConicProperties`Private`typ_, ResourceFunctionHelpers`ConicProperties`Private`rest__} :> Association[\"Type\" -> ResourceFunctionHelpers`ConicProperties`Private`typ, ResourceFunctionHelpers`ConicProperties`Private`rest]; ResourceFunctionHelpers`ConicProperties`Private`props = If[ !MatchQ[ResourceFunctionHelpers`ConicProperties`Private`temp, $Failed], Quiet[Check[Join[ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`temp], $Failed, Join::incpt], Join::incpt], $Failed]; If[ !FreeQ[ResourceFunctionHelpers`ConicProperties`Private`props[\"Equation\"], HoldPattern[_?( !FreeQ[#1, _?ResourceFunctionHelpers`CommonFunctions`usersymbolQ] & )^(-1)]], KeyDropFrom[ResourceFunctionHelpers`ConicProperties`Private`props, \"Equation\"]]]; If[ !ResourceFunctionHelpers`ConicProperties`Private`goodPropsTest[ResourceFunctionHelpers`ConicProperties`Private`props], ResourceFunctionHelpers`ConicProperties`Private`goodHyperbolaflag = False; ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`HyperbolaProperties::badprops]]; (ResourceFunctionHelpers`ConicProperties`Private`res = If[ResourceFunctionHelpers`ConicProperties`Private`goodHyperbolaQ[ResourceFunctionHelpers`ConicProperties`Private`props], ResourceFunctionHelpers`ConicProperties`Private`iHyperbolaProperties[ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`vars, ResourceFunctionHelpers`ConicProperties`Private`requestedProps, \"ReturnType\" -> True, ResourceFunctionHelpers`ConicProperties`Private`opt], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`HyperbolaProperties::badprops]; ResourceFunctionHelpers`ConicProperties`Private`returnType = True; ResourceFunctionHelpers`ConicProperties`Private`redirectProperties[ResourceFunctionHelpers`ConicProperties`Private`props, ResourceFunctionHelpers`ConicProperties`Private`vars, ResourceFunctionHelpers`ConicProperties`Private`requestedProps, \"Hyperbola\", ResourceFunctionHelpers`ConicProperties`Private`opt]]; (If[ !MatchQ[ResourceFunctionHelpers`ConicProperties`Private`res[\"Type\"], \"Circle\"], Block[{ResourceFunctionHelpers`ConicProperties`Private`tmp = ResourceFunctionHelpers`ConicProperties`Private`makeBaseConic[ResourceFunctionHelpers`ConicProperties`Private`res, ResourceFunctionHelpers`ConicProperties`Private`vars]}, If[MatchQ[ResourceFunctionHelpers`ConicProperties`Private`tmp, _Association], ResourceFunctionHelpers`ConicProperties`Private`res[\"BaseConic\"] = ResourceFunctionHelpers`ConicProperties`Private`tmp, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`HyperbolaProperties::insuf]]]]; ResourceFunctionHelpers`ConicProperties`Private`res = ResourceFunctionHelpers`ConicProperties`Private`sortProperties[ResourceFunctionHelpers`ConicProperties`Private`res, ResourceFunctionHelpers`ConicProperties`Private`res[\"Type\"]]; If[ !ResourceFunctionHelpers`ConicProperties`Private`returnType, KeyDrop[ResourceFunctionHelpers`ConicProperties`Private`res, \"Type\"], ResourceFunctionHelpers`ConicProperties`Private`res]) \/; MatchQ[ResourceFunctionHelpers`ConicProperties`Private`res, _Association]) \/; ResourceFunctionHelpers`ConicProperties`Private`goodHyperbolaflag) \/;  !MatchQ[ResourceFunctionHelpers`ConicProperties`Private`props, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ReturnType -> False, PropertiesForPlotting -> False}\nAttributes: {}\nFullName: ResourceFunctionHelpers`HyperbolaProperties",
	"StochasticCalculus`HyperbolicDiffusionProcess":"ObjectType: Symbol\nUsage: StochasticCalculus`HyperbolicDiffusionProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StochasticCalculus`HyperbolicDiffusionProcess",
	"HypergeometricLogDump`HypergeometricPFQMa":"ObjectType: Symbol\nUsage: HypergeometricLogDump`HypergeometricPFQMa\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HypergeometricLogDump`HypergeometricPFQMa[HypergeometricLogDump`a_List, HypergeometricLogDump`b_List, HypergeometricLogDump`z_, HypergeometricLogDump`tf_, HypergeometricLogDump`k_] \/; NumericQ[HypergeometricLogDump`z] && Precision[{HypergeometricLogDump`a, HypergeometricLogDump`b, HypergeometricLogDump`z}] < Infinity := Module[{HypergeometricLogDump`p, HypergeometricLogDump`t, HypergeometricLogDump`in, HypergeometricLogDump`a1, HypergeometricLogDump`b1, HypergeometricLogDump`res, HypergeometricLogDump`Sum1, HypergeometricLogDump`zz}, MeijerG; HypergeometricLogDump`t = If[HypergeometricLogDump`tf === True, Times @@ Gamma[HypergeometricLogDump`b], 1]\/Times @@ Gamma[HypergeometricLogDump`a]; {HypergeometricLogDump`b1, HypergeometricLogDump`a1} = Extract[System`MeijerGDump`RationalizeParameters[{{1}, HypergeometricLogDump`b, HypergeometricLogDump`a, {}}], {{2}, {3}}]; HypergeometricLogDump`in = HypergeometricLogDump`IntersectionN[HypergeometricLogDump`a1, HypergeometricLogDump`b1]; {HypergeometricLogDump`a1, HypergeometricLogDump`b1} = {HypergeometricLogDump`ComplementN[HypergeometricLogDump`a1, HypergeometricLogDump`in], HypergeometricLogDump`ComplementN[HypergeometricLogDump`b1, HypergeometricLogDump`in]}; HypergeometricLogDump`p = Length[HypergeometricLogDump`a1]; Block[{HypergeometricLogDump`$ForceLogarithmicSummation = Abs[HypergeometricLogDump`z] > 1, HypergeometricLogDump`$HeadToReplaceSumAWith = HypergeometricLogDump`Sum1}, HypergeometricLogDump`res = HypergeometricLogDump`t*HypergeometricLogDump`MeijerGAMain[{HypergeometricLogDump`p, 1, HypergeometricLogDump`p, HypergeometricLogDump`p, 1\/HypergeometricLogDump`zz, 1, Join[{1}, HypergeometricLogDump`b1], HypergeometricLogDump`a1}]; ]; HypergeometricLogDump`res = HypergeometricLogDump`res \/. {(1\/HypergeometricLogDump`zz)^(HypergeometricLogDump`w_) :> HypergeometricLogDump`zz^(-HypergeometricLogDump`w) \/; HypergeometricLogDump`z =!= 0} \/. {Log[1\/HypergeometricLogDump`zz] :> -Log[HypergeometricLogDump`zz]}; HypergeometricLogDump`res = System`MeijerGDump`ProcessSymbolicSum[HypergeometricLogDump`Sum1, HypergeometricLogDump`res, HypergeometricLogDump`zz -> -HypergeometricLogDump`z, Min[Internal`EffectivePrecision \/@ Flatten[{HypergeometricLogDump`a, HypergeometricLogDump`b, HypergeometricLogDump`z}]]]; If[Min[Internal`EffectivePrecision \/@ Flatten[{HypergeometricLogDump`a, HypergeometricLogDump`b, HypergeometricLogDump`z}]] === MachinePrecision, HypergeometricLogDump`res = N[HypergeometricLogDump`res]; ]; HypergeometricLogDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: HypergeometricLogDump`HypergeometricPFQMa",
	"NotebookTools`HyperlinkInterface":"ObjectType: Symbol\nUsage: NotebookTools`HyperlinkInterface\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NotebookTools`HyperlinkInterface[HyperlinkInterfaceDump`opts:OptionsPattern[]] := Module[{HyperlinkInterfaceDump`tagrules = Join[FilterRules[Options[NotebookTools`HyperlinkInterface], Except[{HyperlinkInterfaceDump`opts}]], {HyperlinkInterfaceDump`opts}]}, Cell[BoxData[ToBoxes[HyperlinkInterfaceDump`hyperlinkLayout[]]], TaggingRules -> HyperlinkInterfaceDump`tagrules, Evaluator -> \"System\", CellTags -> \"HyperlinkEditorAttachedCell\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AttachmentObject -> None, SelectedTab -> URLTab, URI -> , EditExistingLink -> False}\nAttributes: {}\nFullName: NotebookTools`HyperlinkInterface",
	"Audio`Utilities`HzToBark":"ObjectType: Symbol\nUsage: Audio`Utilities`HzToBark\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Utilities`HzToBark[Audio`AudioUtilitiesDump`s___] := Block[{Audio`AudioUtilitiesDump`a, Audio`AudioUtilitiesDump`r}, Audio`AudioUtilitiesDump`a = System`Private`Arguments[Audio`AudioUtilitiesDump`HzToBark[Audio`AudioUtilitiesDump`s], 1]; Audio`AudioUtilitiesDump`r \/; Audio`AudioUtilitiesDump`a =!= {} && (Audio`AudioUtilitiesDump`r = Audio`AudioUtilitiesDump`iHzToBark[Sequence @@ Audio`AudioUtilitiesDump`a]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst, Listable}\nFullName: Audio`Utilities`HzToBark",
	"Audio`Utilities`HzToMel":"ObjectType: Symbol\nUsage: Audio`Utilities`HzToMel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Utilities`HzToMel[Audio`AudioUtilitiesDump`s___] := Block[{Audio`AudioUtilitiesDump`a, Audio`AudioUtilitiesDump`r}, Audio`AudioUtilitiesDump`a = System`Private`Arguments[Audio`AudioUtilitiesDump`HzToMel[Audio`AudioUtilitiesDump`s], 1]; Audio`AudioUtilitiesDump`r \/; Audio`AudioUtilitiesDump`a =!= {} && (Audio`AudioUtilitiesDump`r = Audio`AudioUtilitiesDump`iHzToMel[Sequence @@ Audio`AudioUtilitiesDump`a]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst, Listable}\nFullName: Audio`Utilities`HzToMel",
	"Image`TransformsDump`H$":"ObjectType: Symbol\nUsage: Image`TransformsDump`H$\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Temporary}\nFullName: Image`TransformsDump`H$",
	"LinearAlgebra`BLAS`IAMAX":"ObjectType: Symbol\nUsage: LinearAlgebra`BLAS`IAMAX\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: LinearAlgebra`BLAS`IAMAX",
	"PacletManager`Paclet`Private`Icon":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`Icon\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`Icon",
	"IMAQ`Driver`IconFunction":"ObjectType: Symbol\nUsage: IMAQ`Driver`IconFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: IMAQ`Driver`IconFunction[{ImageAcquisition`CaptureDump`iHandle_, ImageAcquisition`CaptureDump`dHandle_}, ___] := Graphics[{{Thickness[0.0033783783783783786], {{FaceForm[{RGBColor[0.275, 0.537, 0.7919999999999999], Opacity[1.]}], FilledCurve[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{296., 20.982399999999995}, {296., 9.394399999999996}, {286.605, 0.00039999999999906777}, {275.01800000000003, 0.00039999999999906777}, {20.982000000000028, 0.00039999999999906777}, {9.394999999999982, 0.00039999999999906777}, {0., 9.394399999999996}, {0., 20.982399999999995}, {0., 165.01739999999998}, {0., 176.60539999999997}, {9.394999999999982, 186.00039999999998}, {20.982000000000028, 186.00039999999998}, {275.01800000000003, 186.00039999999998}, {286.605, 186.00039999999998}, {296., 176.60539999999997}, {296., 165.01739999999998}}}], FilledCurve[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{212.04299999999998, 194.6074}, {195.23099999999997, 217.13840000000002}, {195.23099999999997, 217.13840000000002}, {190.66799999999998, 224.0004}, {185.08499999999998, 224.0004}, {149.75199999999998, 224.0004}, {147.75199999999995, 224.0004}, {112.41899999999998, 224.0004}, {106.83599999999997, 224.0004}, {102.08599999999997, 217.13840000000002}, {102.08599999999997, 217.13840000000002}, {84.71099999999998, 194.7014}, {75.37699999999998, 184.0344}, {69., 185.5894}, {69., 185.5894}, {69., 177.0004}, {147.75199999999995, 177.0004}, {149.75199999999998, 177.0004}, {226.99999999999997, 177.0004}, {226.99999999999997, 185.5894}, {226.99999999999997, 185.5894}, {221.37499999999997, 183.94140000000002}, {212.04299999999998, 194.6074}}}], FilledCurve[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{59., 196.2217}, {59., 194.9937}, {58.006, 193.9997}, {56.778, 193.9997}, {26.221999999999994, 193.9997}, {24.994, 193.9997}, {24., 194.9937}, {24., 196.2217}, {24., 210.7787}, {24., 212.0057}, {24.994, 212.9997}, {26.221999999999994, 212.9997}, {56.778, 212.9997}, {58.006, 212.9997}, {59., 212.0057}, {59., 210.7787}}}]}}, {{FaceForm[{RGBColor[1., 1., 1.], Opacity[1.]}], FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{148.752, 158.7832}, {110.92600000000002, 158.7832}, {80.261, 128.11919999999998}, {80.261, 90.29119999999999}, {80.261, 52.465199999999996}, {110.92600000000002, 21.801199999999966}, {148.752, 21.801199999999966}, {186.578, 21.801199999999966}, {217.24400000000003, 52.465199999999996}, {217.24400000000003, 90.29119999999999}, {217.24400000000003, 128.11919999999998}, {186.578, 158.7832}, {148.752, 158.7832}}, {{148.752, 142.7832}, {177.696, 142.7832}, {201.24400000000003, 119.23519999999999}, {201.24400000000003, 90.29119999999999}, {201.24400000000003, 61.34719999999999}, {177.696, 37.801199999999994}, {148.752, 37.801199999999994}, {119.80900000000001, 37.801199999999994}, {96.26100000000001, 61.34719999999999}, {96.26100000000001, 90.29119999999999}, {96.26100000000001, 119.23519999999999}, {119.80900000000001, 142.7832}, {148.752, 142.7832}}}], FilledCurve[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{245.49020000000002, 147.168}, {245.49020000000002, 140.752}, {240.29020000000003, 135.555}, {233.8752, 135.555}, {227.46120000000002, 135.555}, {222.26120000000003, 140.752}, {222.26120000000003, 147.168}, {222.26120000000003, 153.582}, {227.46120000000002, 158.78300000000002}, {233.8752, 158.78300000000002}, {240.29020000000003, 158.78300000000002}, {245.49020000000002, 153.582}, {245.49020000000002, 147.168}}}]}}}}, AspectRatio -> 1, Axes -> False, Background -> GrayLevel[1], Frame -> True, FrameStyle -> Directive[Thickness[Tiny], GrayLevel[0.7]], FrameTicks -> None, ImageSize -> {Automatic, Dynamic[3.5*(CurrentValue[\"FontCapHeight\"]*AbsoluteCurrentValue[Magnification]), ImageSizeCache -> {45., {0., 9.}}]}, PlotRange -> {{0., 296.}, {-36., 260.}}, PlotRangePadding -> Scaled[0.1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: IMAQ`Driver`IconFunction",
	"Iconize`IconizedImage":"ObjectType: Symbol\nUsage: IconizedImage generates thumbnail icons of WL expressions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Iconize`IconizedImage[Iconize`ToFormattedIcon`PackagePrivate`expr_, Iconize`ToFormattedIcon`PackagePrivate`dpl_:\"Default\", OptionsPattern[]] := Module[{Iconize`ToFormattedIcon`PackagePrivate`$iconType, Iconize`ToFormattedIcon`PackagePrivate`itheicon, Iconize`ToFormattedIcon`PackagePrivate`paneColor, Iconize`ToFormattedIcon`PackagePrivate`imageSize, Iconize`ToFormattedIcon`PackagePrivate`deploy, Iconize`ToFormattedIcon`PackagePrivate`sz, Iconize`ToFormattedIcon`PackagePrivate`width, Iconize`ToFormattedIcon`PackagePrivate`height, Iconize`ToFormattedIcon`PackagePrivate`dIcon, Iconize`ToFormattedIcon`PackagePrivate`dColor, Iconize`ToFormattedIcon`PackagePrivate`theicon, Iconize`ToFormattedIcon`PackagePrivate`iconpositions, Iconize`ToFormattedIcon`PackagePrivate`temp}, Iconize`ToFormattedIcon`PackagePrivate`imageSize = OptionValue[ImageSize]; Iconize`ToFormattedIcon`PackagePrivate`sz = Switch[Iconize`ToFormattedIcon`PackagePrivate`imageSize, Small, {85, 85}, Medium, {128, 128}, Large, {256, 256}, _, Iconize`ToFormattedIcon`PackagePrivate`imageSize]; Iconize`ToFormattedIcon`PackagePrivate`width = Iconize`ToFormattedIcon`PackagePrivate`sz[[1]]; Iconize`ToFormattedIcon`PackagePrivate`height = Iconize`ToFormattedIcon`PackagePrivate`sz[[2]]; Iconize`ToFormattedIcon`PackagePrivate`deploy = If[MemberQ[Iconize`PackageScope`$deployments, Iconize`ToFormattedIcon`PackagePrivate`dpl], Iconize`ToFormattedIcon`PackagePrivate`dpl, Message[Iconize`IconizedImage::deployment, Iconize`ToFormattedIcon`PackagePrivate`dpl]; \"Default\"]; Iconize`ToFormattedIcon`PackagePrivate`dIcon = If[Iconize`ToFormattedIcon`PackagePrivate`deploy == \"API\" && Iconize`ToFormattedIcon`PackagePrivate`sz == {85, 85}, Iconize`PackageScope`$smallAPI, ImageResize[Iconize`PackageScope`deployInfo[Iconize`ToFormattedIcon`PackagePrivate`deploy][[1]], Iconize`PackageScope`$iconFraction*Iconize`ToFormattedIcon`PackagePrivate`sz[[2]]]]; Iconize`ToFormattedIcon`PackagePrivate`dColor = \"#F7F7F7\"; Iconize`ToFormattedIcon`PackagePrivate`$default := With[{Iconize`ToFormattedIcon`PackagePrivate`icon = Iconize`PackageScope`toicon[Evaluate[Iconize`PackageScope`$defaultSpikey], {Iconize`ToFormattedIcon`PackagePrivate`width, Iconize`PackageScope`$paneFraction*Iconize`ToFormattedIcon`PackagePrivate`height}, Iconize`ToFormattedIcon`PackagePrivate`dColor]}, ImagePad[Iconize`ToFormattedIcon`PackagePrivate`icon[[2]], {{0, 0}, {0, 1}}, Padding -> Iconize`PackageScope`hexToRGB[\"#b2b2b2\"]]]; Iconize`ToFormattedIcon`PackagePrivate`itheicon = Quiet[With[{Iconize`ToFormattedIcon`PackagePrivate`icon = Iconize`PackageScope`toicon[Unevaluated[Iconize`ToFormattedIcon`PackagePrivate`expr], {Iconize`ToFormattedIcon`PackagePrivate`width, Iconize`PackageScope`$paneFraction*Iconize`ToFormattedIcon`PackagePrivate`height}, Iconize`ToFormattedIcon`PackagePrivate`dColor]}, Iconize`ToFormattedIcon`PackagePrivate`$iconType = Iconize`ToFormattedIcon`PackagePrivate`icon[[1]]; ImagePad[Iconize`ToFormattedIcon`PackagePrivate`icon[[2]], {{0, 0}, {0, 1}}, Padding -> Iconize`PackageScope`hexToRGB[\"#b2b2b2\"]]]]; Iconize`ToFormattedIcon`PackagePrivate`theicon = If[Head[Iconize`ToFormattedIcon`PackagePrivate`itheicon] =!= Image, Iconize`ToFormattedIcon`PackagePrivate`$default, Iconize`ToFormattedIcon`PackagePrivate`itheicon]; Iconize`ToFormattedIcon`PackagePrivate`iconpositions = {}; If[Iconize`ToFormattedIcon`PackagePrivate`dpl != \"Default\", AppendTo[Iconize`ToFormattedIcon`PackagePrivate`iconpositions, Inactive[Sequence][Iconize`ToFormattedIcon`PackagePrivate`dIcon, {Iconize`PackageScope`$heightFraction*Iconize`ToFormattedIcon`PackagePrivate`width, Iconize`PackageScope`$paneFraction*Iconize`ToFormattedIcon`PackagePrivate`height + 0.5*(1 - Iconize`PackageScope`$paneFraction)*Iconize`ToFormattedIcon`PackagePrivate`height}]]]; Iconize`ToFormattedIcon`PackagePrivate`paneColor = Switch[OptionValue[Iconize`ToFormattedIcon`PackagePrivate`Platform], \"mobile\", Iconize`PackageScope`$mobilePaneColor, \"Android\", Iconize`PackageScope`$mobilePaneColor, \"IOS\", Iconize`PackageScope`$mobilePaneColor, \"FileBrowser\", Iconize`PackageScope`hexToRGB[\"#fafafa\"], \"Experimental\", Iconize`PackageScope`hexToRGB[Iconize`PackageScope`deployInfo[Iconize`ToFormattedIcon`PackagePrivate`deploy][[2]]], _, Iconize`PackageScope`$mobilePaneColor]; Iconize`ToFormattedIcon`PackagePrivate`temp = Fold[Inactive[ImageCompose], ImagePad[Iconize`ToFormattedIcon`PackagePrivate`theicon, {{0, 0}, {0, Iconize`PackageScope`$diffFraction*Iconize`ToFormattedIcon`PackagePrivate`height}}, Iconize`ToFormattedIcon`PackagePrivate`paneColor], Iconize`ToFormattedIcon`PackagePrivate`iconpositions]; Switch[Iconize`ToFormattedIcon`PackagePrivate`$iconType, \"Expression\", Iconize`PackageScope`fadeArray[Activate[Iconize`ToFormattedIcon`PackagePrivate`temp], Iconize`PackageScope`hexToRGB[Iconize`ToFormattedIcon`PackagePrivate`dColor], 0.3], _, Activate[Iconize`ToFormattedIcon`PackagePrivate`temp]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ImageSize -> Small, Iconize`ToFormattedIcon`PackagePrivate`Platform -> FileBrowser}\nAttributes: {HoldFirst}\nFullName: Iconize`IconizedImage",
	"BoxForm`IconMatrixPlot":"ObjectType: Symbol\nUsage: BoxForm`IconMatrixPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`IconMatrixPlot[ElisionsDump`mat_] := ElisionsDump`matrixPlot[ElisionsDump`mat]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`IconMatrixPlot",
	"NDSolve`IDA":"ObjectType: Symbol\nUsage: NDSolve`IDA\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`IDA \/: NDSolve`InitializeMethod[NDSolve`IDA, {NDSolve`MultistepDump`stepmode_, NDSolve`MultistepDump`stepcontrol_, NDSolve`MultistepDump`denseoutput_}, NDSolve`MultistepDump`sd_, NDSolve`MultistepDump`nf_, NDSolve`MultistepDump`ndstate_, NDSolve`MultistepDump`rawmopts_] := Catch[Module[{NDSolve`MultistepDump`denseQ, NDSolve`MultistepDump`mdo, NDSolve`MultistepDump`imps, NDSolve`MultistepDump`msghead}, {NDSolve`MultistepDump`mdo, NDSolve`MultistepDump`imps} = NDSolve`GetMethodOptionValues[NDSolve`IDA, NDSolve`MultistepDump`IDAProperties, NDSolve`MultistepDump`rawmopts]; NDSolve`MultistepDump`msghead = NDSolve`MultistepDump`ndstate[\"Caller\"]; NDSolve`MultistepDump`CheckMaxDifferenceOrder[NDSolve`IDA, NDSolve`MultistepDump`mdo, NDSolve`MultistepDump`msghead]; NDSolve`MultistepDump`imps = NDSolve`TestImplicitSolver[NDSolve`IDA, NDSolve`MultistepDump`imps, NDSolve`MultistepDump`msghead]; NDSolve`MultistepDump`imps = NDSolve`MultistepDump`TestBand[NDSolve`MultistepDump`imps, True, NDSolve`MultistepDump`msghead]; NDSolve`MultistepDump`imps = NDSolve`MultistepDump`TestGMRES[NDSolve`MultistepDump`imps, True, NDSolve`MultistepDump`msghead]; NDSolve`MultistepDump`denseQ = NDSolve`MultistepDump`denseoutput === True; NDSolve`CreateMethodData[NDSolve`IDA, {{}, True, NDSolve`MultistepDump`mdo, NDSolve`MultistepDump`imps, None, NDSolve`MultistepDump`denseQ}]]]\nDownValues: None\nSubValues: NDSolve`IDA[NDSolve`MethodData[NDSolve`MultistepDump`v_, __]][\"Version\"] := NDSolve`MultistepDump`v\nNDSolve`IDA[_][\"StepMode\"] := Automatic\nNDSolve`IDA[NDSolve`MultistepDump`data_][\"DenseOutputQ\"] := NDSolve`MultistepDump`DOQ[NDSolve`MultistepDump`data]\nNDSolve`IDA[_][\"DAESolverQ\"] := True\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxDifferenceOrder -> 5, ImplicitSolver -> Newton}\nAttributes: {HoldAllComplete}\nFullName: NDSolve`IDA",
	"Image`FilteringDump`IDCT":"ObjectType: Symbol\nUsage: Image`FilteringDump`IDCT\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FilteringDump`IDCT",
	"ResourceFunctionHelpers`IdealCoinTossStatistics":"ObjectType: Symbol\nUsage: IdealCoinTossStatistics[n_, w_] returns an association of probability for n coin tosses with weight w.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`IdealCoinTossStatistics[ResourceFunctionHelpers`IdealCoinTossStatistics`Private`n_Integer, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`type:All | \"PDFPlot\" | \"CDFPlot\" | \"SampleSpace\" | \"ExpectedNumberHeads\" | \"ProbabilityAllHeads\" | \"ProbabilityAllTails\" | \"ProbabilityAtLeastOneHeads\" | \"ProbabilityAtLeastOneTails\" | \"ProbabilityHalfHeads\" | \"PercentHeads\" | \"PercentTails\" | \"ProbabilitySetNumberHeads\" | \"ProbabilityGivenHeads\" | \"ProbabilityGivenOrFewerHeads\" | \"ProbabilityMoreThanGivenHeads\" | \"ProbabilityGivenOrMoreHeads\" | \"ProbabilityFewerThanGivenHeads\":All] := ResourceFunctionHelpers`IdealCoinTossStatistics[{ResourceFunctionHelpers`IdealCoinTossStatistics`Private`n, 1\/2}, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`type]\nResourceFunctionHelpers`IdealCoinTossStatistics[{ResourceFunctionHelpers`IdealCoinTossStatistics`Private`n_Integer, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight_:1\/2}, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`heads:_Integer | Automatic:Automatic, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`type:All | \"PDFPlot\" | \"CDFPlot\" | \"SampleSpace\" | \"ExpectedNumberHeads\" | \"ProbabilityAllHeads\" | \"ProbabilityAllTails\" | \"ProbabilityAtLeastOneHeads\" | \"ProbabilityAtLeastOneTails\" | \"ProbabilityHalfHeads\" | \"PercentHeads\" | \"PercentTails\" | \"ProbabilitySetNumberHeads\" | \"ProbabilityGivenHeads\" | \"ProbabilityGivenOrFewerHeads\" | \"ProbabilityMoreThanGivenHeads\" | \"ProbabilityGivenOrMoreHeads\" | \"ProbabilityFewerThanGivenHeads\":All] := Module[{ResourceFunctionHelpers`IdealCoinTossStatistics`Private`goodresFlag = True}, If[ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight < 0 || ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight > 1 ||  !NumericQ[ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`IdealCoinTossStatistics::positive, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight]; ResourceFunctionHelpers`IdealCoinTossStatistics`Private`goodresFlag = False]; ResourceFunctionHelpers`IdealCoinTossStatistics`Private`idealcoin[{ResourceFunctionHelpers`IdealCoinTossStatistics`Private`n, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight}, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`heads, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`type] \/; ResourceFunctionHelpers`IdealCoinTossStatistics`Private`goodresFlag]\nResourceFunctionHelpers`IdealCoinTossStatistics[ResourceFunctionHelpers`IdealCoinTossStatistics`Private`n_Integer, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`heads_Integer, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`type:All | \"PDFPlot\" | \"CDFPlot\" | \"SampleSpace\" | \"ExpectedNumberHeads\" | \"ProbabilityAllHeads\" | \"ProbabilityAllTails\" | \"ProbabilityAtLeastOneHeads\" | \"ProbabilityAtLeastOneTails\" | \"ProbabilityHalfHeads\" | \"PercentHeads\" | \"PercentTails\" | \"ProbabilitySetNumberHeads\" | \"ProbabilityGivenHeads\" | \"ProbabilityGivenOrFewerHeads\" | \"ProbabilityMoreThanGivenHeads\" | \"ProbabilityGivenOrMoreHeads\" | \"ProbabilityFewerThanGivenHeads\":All] := Module[{ResourceFunctionHelpers`IdealCoinTossStatistics`Private`goodresFlag = True}, If[ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight < 0 || ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight > 1, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`IdealCoinTossStatistics::positive, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`weight]; ResourceFunctionHelpers`IdealCoinTossStatistics`Private`goodresFlag = False]; ResourceFunctionHelpers`IdealCoinTossStatistics`Private`idealcoin[{ResourceFunctionHelpers`IdealCoinTossStatistics`Private`n, 1\/2}, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`heads, ResourceFunctionHelpers`IdealCoinTossStatistics`Private`type] \/; ResourceFunctionHelpers`IdealCoinTossStatistics`Private`goodresFlag]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`IdealCoinTossStatistics",
	"ResourceFunctionHelpers`IdealDiceRoll":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`IdealDiceRoll\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`IdealDiceRoll[Optional[(ResourceFunctionHelpers`DiceRoll`Private`diceType_)?ResourceFunctionHelpers`DiceRoll`Private`goodTypeQ, 6], Optional[(ResourceFunctionHelpers`DiceRoll`Private`b_Integer)?Positive, 1], ResourceFunctionHelpers`DiceRoll`Private`type:\"ExpectedTotal\" | \"SumProbabilities\" | \"ProbabilitiesKOfAKind\" | \"AllFacesShow\" | \"PDF\" | \"CDF\" | All:All] := Module[{ResourceFunctionHelpers`DiceRoll`Private`dicedist, ResourceFunctionHelpers`DiceRoll`Private`probabilities, ResourceFunctionHelpers`DiceRoll`Private`graph, ResourceFunctionHelpers`DiceRoll`Private`expectedtotal, ResourceFunctionHelpers`DiceRoll`Private`allfacesshow, ResourceFunctionHelpers`DiceRoll`Private`ofakind, ResourceFunctionHelpers`DiceRoll`Private`pdfplot, ResourceFunctionHelpers`DiceRoll`Private`cdfplot, ResourceFunctionHelpers`DiceRoll`Private`expectedstd, ResourceFunctionHelpers`DiceRoll`Private`num = ResourceFunctionHelpers`DiceRoll`Private`b, ResourceFunctionHelpers`DiceRoll`Private`dicetype = ResourceFunctionHelpers`DiceRoll`Private`typeToNum[ResourceFunctionHelpers`DiceRoll`Private`diceType]}, ResourceFunctionHelpers`DiceRoll`Private`dicedist = ProductDistribution[{DiscreteUniformDistribution[{1, ResourceFunctionHelpers`DiceRoll`Private`dicetype}], ResourceFunctionHelpers`DiceRoll`Private`num}]; ResourceFunctionHelpers`DiceRoll`Private`expectedtotal = Total[Mean[ResourceFunctionHelpers`DiceRoll`Private`dicedist]]; ResourceFunctionHelpers`DiceRoll`Private`expectedstd = Sqrt[ResourceFunctionHelpers`DiceRoll`Private`num*First[Variance[ResourceFunctionHelpers`DiceRoll`Private`dicedist]]]; Switch[ResourceFunctionHelpers`DiceRoll`Private`type, \"ExpectedTotal\", Total[Mean[ResourceFunctionHelpers`DiceRoll`Private`dicedist]], \"SumProbabilities\", ResourceFunctionHelpers`DiceRoll`Private`calculateProb[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num], \"PDF\", ResourceFunctionHelpers`DiceRoll`Private`graph = ResourceFunctionHelpers`DiceRoll`Private`exactListPlot[ResourceFunctionHelpers`DiceRoll`Private`calculateProb[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num], ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num]; ResourceFunctionHelpers`DiceRoll`Private`pdfPlot[ResourceFunctionHelpers`DiceRoll`Private`graph, ResourceFunctionHelpers`DiceRoll`Private`expectedtotal, ResourceFunctionHelpers`DiceRoll`Private`expectedstd, ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num], \"CDF\", ResourceFunctionHelpers`DiceRoll`Private`cdfPlot[ResourceFunctionHelpers`DiceRoll`Private`expectedtotal, ResourceFunctionHelpers`DiceRoll`Private`expectedstd, ResourceFunctionHelpers`DiceRoll`Private`num, ResourceFunctionHelpers`DiceRoll`Private`dicetype], \"ProbabilitiesKOfAKind\", Association[(IntegerName[#1] -> ResourceFunctionHelpers`DiceRoll`Private`probabilityCommon[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num, #1] & ) \/@ Range[2, ResourceFunctionHelpers`DiceRoll`Private`dicetype]], \"AllFacesShow\", 1 - Sum[Binomial[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`k]*(1 - ResourceFunctionHelpers`DiceRoll`Private`k\/ResourceFunctionHelpers`DiceRoll`Private`dicetype)^ResourceFunctionHelpers`DiceRoll`Private`num*(-1)^(ResourceFunctionHelpers`DiceRoll`Private`k + 1), {ResourceFunctionHelpers`DiceRoll`Private`k, 1, ResourceFunctionHelpers`DiceRoll`Private`dicetype}], All, ResourceFunctionHelpers`DiceRoll`Private`probabilities = ResourceFunctionHelpers`DiceRoll`Private`calculateProb[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num]; ResourceFunctionHelpers`DiceRoll`Private`graph = ResourceFunctionHelpers`DiceRoll`Private`exactListPlot[ResourceFunctionHelpers`DiceRoll`Private`probabilities, ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num]; ResourceFunctionHelpers`DiceRoll`Private`pdfplot = ResourceFunctionHelpers`DiceRoll`Private`pdfPlot[ResourceFunctionHelpers`DiceRoll`Private`graph, ResourceFunctionHelpers`DiceRoll`Private`expectedtotal, ResourceFunctionHelpers`DiceRoll`Private`expectedstd, ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num]; ResourceFunctionHelpers`DiceRoll`Private`cdfplot = ResourceFunctionHelpers`DiceRoll`Private`cdfPlot[ResourceFunctionHelpers`DiceRoll`Private`expectedtotal, ResourceFunctionHelpers`DiceRoll`Private`expectedstd, ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num]; ResourceFunctionHelpers`DiceRoll`Private`allfacesshow = 1 - Sum[Binomial[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`k]*(1 - ResourceFunctionHelpers`DiceRoll`Private`k\/ResourceFunctionHelpers`DiceRoll`Private`dicetype)^ResourceFunctionHelpers`DiceRoll`Private`num*(-1)^(ResourceFunctionHelpers`DiceRoll`Private`k + 1), {ResourceFunctionHelpers`DiceRoll`Private`k, 1, ResourceFunctionHelpers`DiceRoll`Private`dicetype}]; ResourceFunctionHelpers`DiceRoll`Private`ofakind = Association[(IntegerName[#1] -> ResourceFunctionHelpers`DiceRoll`Private`probabilityCommon[ResourceFunctionHelpers`DiceRoll`Private`dicetype, ResourceFunctionHelpers`DiceRoll`Private`num, #1] & ) \/@ Range[2, ResourceFunctionHelpers`DiceRoll`Private`num]]; Association[\"ExpectedTotal\" -> ResourceFunctionHelpers`DiceRoll`Private`expectedtotal, \"SumProbabilities\" -> ResourceFunctionHelpers`DiceRoll`Private`tooLongIconize[ResourceFunctionHelpers`DiceRoll`Private`probabilities], \"PDF\" -> ResourceFunctionHelpers`DiceRoll`Private`pdfplot, \"CDF\" -> ResourceFunctionHelpers`DiceRoll`Private`cdfplot, \"AllFacesShow\" -> ResourceFunctionHelpers`DiceRoll`Private`allfacesshow, \"ProbabilitiesKOfAKind\" -> ResourceFunctionHelpers`DiceRoll`Private`tooLongIconize[ResourceFunctionHelpers`DiceRoll`Private`ofakind]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`IdealDiceRoll",
	"SymbolicTensors`IdentityTensor":"ObjectType: Symbol\nUsage: SymbolicTensors`IdentityTensor\nDocumentation: None\nOwnValues: None\nUpValues: TensorRank[SymbolicTensors`IdentityTensor[SymbolicTensors`SymbolicTensorsDump`B_]] ^= 2\nSymbolicTensors`TensorBases[SymbolicTensors`IdentityTensor[SymbolicTensors`SymbolicTensorsDump`B_]] ^= {SymbolicTensors`SymbolicTensorsDump`B, SymbolicTensors`DualBasis[SymbolicTensors`SymbolicTensorsDump`B]}\nTensorSymmetry[SymbolicTensors`IdentityTensor[SymbolicTensors`SymbolicTensorsDump`B_]] ^:= If[SymbolicTensors`DualBasis[SymbolicTensors`SymbolicTensorsDump`B] === SymbolicTensors`SymbolicTensorsDump`B, Symmetric[{1, 2}], {}]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SymbolicTensors`IdentityTensor",
	"Image`FilteringDump`IDFT":"ObjectType: Symbol\nUsage: Image`FilteringDump`IDFT\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FilteringDump`IDFT",
	"System`ConvertersDump`IEDebugPrint":"ObjectType: Symbol\nUsage: System`ConvertersDump`IEDebugPrint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`IEDebugPrint[System`ConvertersDump`x___] := If[System`ConvertersDump`$IEDebugPrintQ, Print[System`ConvertersDump`x]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`IEDebugPrint",
	"System`ConvertersDump`IEInitQ":"None",
	"System`ConvertersDump`IEStringInitQ":"None",
	"FEPrivate`If":"ObjectType: Symbol\nUsage: FEPrivate`If\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FEPrivate`If",
	"StringPattern`Lexer`IfLexerState":"ObjectType: Symbol\nUsage: StringPattern`Lexer`IfLexerState\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StringPattern`Lexer`IfLexerState",
	"RandomProcesses`TimeSeriesCommon`IgnoringStationarity":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`IgnoringStationarity\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`IgnoringStationarity[RandomProcesses`TimeSeriesCommonDump`expr_] := Block[{RandomProcesses`TimeSeriesCommon`iVectorStationarity, RandomProcesses`TimeSeriesCommon`garchScalarWeakStationarity, RandomProcesses`TimeSeriesCommon`garchVectorWeakStationarity, RandomProcesses`TimeSeriesCommon`iScalarStationarity}, RandomProcesses`TimeSeriesCommon`iScalarStationarity = RandomProcesses`TimeSeriesCommon`iVectorStationarity = RandomProcesses`TimeSeriesCommon`garchScalarWeakStationarity = RandomProcesses`TimeSeriesCommon`garchVectorWeakStationarity = True & ; RandomProcesses`TimeSeriesCommonDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: RandomProcesses`TimeSeriesCommon`IgnoringStationarity",
	"Signal`FilteringIIRDump`IIRIPP":"ObjectType: Symbol\nUsage: Signal`FilteringIIRDump`IIRIPP\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`FilteringIIRDump`IIRIPP",
	"Signal`FilteringIIRDump`IIRSparseIPP":"ObjectType: Symbol\nUsage: Signal`FilteringIIRDump`IIRSparseIPP\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`FilteringIIRDump`IIRSparseIPP",
	"PlanetaryAstronomy`Private`IlluminationFraction":"ObjectType: Symbol\nUsage: PlanetaryAstronomy`Private`IlluminationFraction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PlanetaryAstronomy`Private`IlluminationFraction[PlanetaryAstronomy`Private`entity_, PlanetaryAstronomy`Private`datelistUT_] := Module[{PlanetaryAstronomy`Private`jd, PlanetaryAstronomy`Private`angle}, PlanetaryAstronomy`Private`jd = PlanetaryAstronomy`Private`JDU[PlanetaryAstronomy`Private`datelistUT]; PlanetaryAstronomy`Private`angle = PlanetaryAstronomy`Private`EarthSunAngle[PlanetaryAstronomy`Private`entity, PlanetaryAstronomy`Private`jd]\/(2*Pi); SetPrecision[(1 + Cos[PlanetaryAstronomy`Private`angle*2*Pi - Pi])\/2, 4]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PlanetaryAstronomy`Private`IlluminationFraction",
	"SurfaceGraphics`Methods`IlluminationModel":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`IlluminationModel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`IlluminationModel",
	"XML`MathML`Symbols`Image":"ObjectType: Symbol\nUsage: XML`MathML`Symbols`Image\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: XML`MathML`Symbols`Image",
	"Image`Image2DQ":"ObjectType: Symbol\nUsage: Image`Image2DQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`Image2DQ",
	"Image`Image3DBoxesQ":"ObjectType: Symbol\nUsage: Image`Image3DBoxesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`Image3DBoxesQ[Graphics3DBox[TagBox[Raster3DBox[__], BoxForm`ImageTag[__], ___], ___]] := True\nImage`Image3DBoxesQ[Graphics3DBox[TagBox[TagBox[TagBox[Raster3DBox[__], _DebugTag, ___], BoxForm`ImageTag[__], ___], _DebugTag, ___], ___]] := True\nImage`Image3DBoxesQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`Image3DBoxesQ",
	"Image`Utilities`Image3DPerformance":"ObjectType: Symbol\nUsage: Image`Utilities`Image3DPerformance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`Utilities`Image3DPerformance[Image`Utilities`Private`expr__] := Block[{Image`Utilities`Private`res}, Image`Utilities`Private`res = Image`Utilities`Private`image3DPerformance[Image`Utilities`Private`expr]; Image`Utilities`Private`res \/; Image`Utilities`Private`res =!= $Failed]\nImage`Utilities`Image3DPerformance[Image`Utilities`Private`expr___] := (Image`Utilities`Private`messageImage3DPerformance[Image`Utilities`Private`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`Utilities`Image3DPerformance",
	"Image`SpatialOperationsDump`Image3DProjection":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`Image3DProjection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`Image3DProjection",
	"Image`Image3DQ":"ObjectType: Symbol\nUsage: Image`Image3DQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`Image3DQ",
	"Image`ImportExportDump`Image3DReadTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`Image3DReadTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`Image3DReadTIFF",
	"Image`ImageDump`Image3DSeparate":"ObjectType: Symbol\nUsage: Image`ImageDump`Image3DSeparate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageDump`Image3DSeparate",
	"Image`ImageArithmeticFunction":"ObjectType: Symbol\nUsage: Image`ImageArithmeticFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageArithmeticFunction[Image`IntegrationDump`head_, 1, HoldComplete[(Image`IntegrationDump`head_)[Image`IntegrationDump`arg1___, Image`IntegrationDump`a:_Image | _Image3D, Image`IntegrationDump`arg2___]]] := Module[{Image`IntegrationDump`v, Image`IntegrationDump`vOut, Image`IntegrationDump`type, Image`IntegrationDump`res, Image`IntegrationDump`indeterminateValue, Image`IntegrationDump`img, Image`IntegrationDump`narg1, Image`IntegrationDump`narg2}, Image`IntegrationDump`indeterminateValue = Query[\"ImageProcessingOptions\", \"IndeterminateValue\"][SystemOptions[\"ImageProcessingOptions\" -> \"IndeterminateValue\"]]; If[ !Internal`RealValuedNumericQ[Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`indeterminateValue = 0.]; Image`IntegrationDump`type = ImageType[Image`IntegrationDump`a]; If[Image`IntegrationDump`head === Abs && MatchQ[Image`IntegrationDump`type, \"Bit\" | \"Byte\" | \"Bit16\"], Return[Image`IntegrationDump`a]; ]; If[MatchQ[Image`IntegrationDump`type, \"Bit\" | \"Byte\" | \"Bit16\"], Image`IntegrationDump`img = Head[Image`IntegrationDump`a][Image`IntegrationDump`a, \"Real32\"], Image`IntegrationDump`img = Image`IntegrationDump`a; ]; Image`IntegrationDump`type = ImageType[Image`IntegrationDump`img]; Quiet[If[Image`IntegrationDump`arg1 === Null, Image`IntegrationDump`narg1 = Image`IntegrationDump`arg1, Image`IntegrationDump`narg1 = N \/@ {Image`IntegrationDump`arg1}; If[Length[Image`IntegrationDump`narg1] == 1, Image`IntegrationDump`narg1 = First[Image`IntegrationDump`narg1]; ]; ]; If[Image`IntegrationDump`arg2 === Null, Image`IntegrationDump`narg2 = Image`IntegrationDump`arg2, Image`IntegrationDump`narg2 = N \/@ {Image`IntegrationDump`arg2}; If[Length[Image`IntegrationDump`narg2] == 1, Image`IntegrationDump`narg2 = First[Image`IntegrationDump`narg2]; ]; ]; Which[Image`IntegrationDump`head === Sqrt && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 === Null, Image`IntegrationDump`res = Image`ImagePower[Image`IntegrationDump`img, 0.5, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`head === CubeRoot && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 === Null, Image`IntegrationDump`res = Image`ImagePower[Image`IntegrationDump`img, 1\/3, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`head === Power && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = Image`ImagePower[Image`IntegrationDump`img, Image`IntegrationDump`narg2, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`head === Power && Image`IntegrationDump`narg2 === Null && Image`IntegrationDump`narg1 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg1], Image`IntegrationDump`res = Image`ImagePower[Image`IntegrationDump`narg1, Image`IntegrationDump`img, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`head === Log && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 === Null, Image`IntegrationDump`res = Image`ImageLog[Image`IntegrationDump`img, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue]; , Image`IntegrationDump`head === Log && Image`IntegrationDump`narg2 === Null && Image`IntegrationDump`narg1 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg1], Image`IntegrationDump`res = Image`ImageLog[Image`IntegrationDump`img, Image`IntegrationDump`narg1, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`head === Exp && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 === Null, Image`IntegrationDump`res = Image`ImageExp[Image`IntegrationDump`img], Image`IntegrationDump`head === Minus && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 === Null, Image`IntegrationDump`res = ImageMultiply[Image`IntegrationDump`img, -1], Image`IntegrationDump`head === Plus && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = ImageAdd[Image`IntegrationDump`img, Image`IntegrationDump`narg2], Image`IntegrationDump`head === Plus && Image`IntegrationDump`narg2 === Null && Image`IntegrationDump`narg1 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg1], Image`IntegrationDump`res = ImageAdd[Image`IntegrationDump`img, Image`IntegrationDump`narg1], Image`IntegrationDump`head === Plus && Image`IntegrationDump`narg1 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg1] && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = ImageAdd[Image`IntegrationDump`img, Image`IntegrationDump`narg1 + Image`IntegrationDump`narg2], Image`IntegrationDump`head === Subtract && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = ImageSubtract[Image`IntegrationDump`img, Image`IntegrationDump`narg2], Image`IntegrationDump`head === Times && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = ImageMultiply[Image`IntegrationDump`img, Image`IntegrationDump`narg2], Image`IntegrationDump`head === Times && Image`IntegrationDump`narg2 === Null && Image`IntegrationDump`narg1 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg1], Image`IntegrationDump`res = ImageMultiply[Image`IntegrationDump`img, Image`IntegrationDump`narg1], Image`IntegrationDump`head === Times && Image`IntegrationDump`narg1 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg1] && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = ImageMultiply[Image`IntegrationDump`img, Image`IntegrationDump`narg1*Image`IntegrationDump`narg2], Image`IntegrationDump`head === Divide && Image`IntegrationDump`narg1 === Null && Image`IntegrationDump`narg2 =!= Null && Internal`RealValuedNumericQ[Image`IntegrationDump`narg2], Image`IntegrationDump`res = Image`ImageDivide[Image`IntegrationDump`img, Image`IntegrationDump`narg2, \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], (Image`IntegrationDump`narg1 === Null || Internal`RealValuedNumericQ[Image`IntegrationDump`narg1] || VectorQ[Image`IntegrationDump`narg1, Internal`RealValuedNumericQ]) && (Image`IntegrationDump`narg2 === Null || Internal`RealValuedNumericQ[Image`IntegrationDump`narg2] || VectorQ[Image`IntegrationDump`narg2, Internal`RealValuedNumericQ]), Image`IntegrationDump`v = ImageData[Image`IntegrationDump`img]; If[Image`IntegrationDump`narg1 =!= Null && VectorQ[Image`IntegrationDump`narg1], Image`IntegrationDump`narg1 = Sequence @@ Image`IntegrationDump`narg1; ]; If[Image`IntegrationDump`narg2 =!= Null && VectorQ[Image`IntegrationDump`narg2], Image`IntegrationDump`narg2 = Sequence @@ Image`IntegrationDump`narg2; ]; Image`IntegrationDump`vOut = Quiet[Image`IntegrationDump`head[Image`IntegrationDump`narg1, Image`IntegrationDump`v, Image`IntegrationDump`narg2]]; If[ArrayQ[Image`IntegrationDump`v] && ArrayQ[Image`IntegrationDump`vOut] && Dimensions[Image`IntegrationDump`vOut] === Dimensions[Image`IntegrationDump`v], Image`IntegrationDump`vOut = Image`Utilities`replaceAndPackToReal[Image`IntegrationDump`vOut, Image`IntegrationDump`indeterminateValue]; If[ !Developer`PackedArrayQ[Image`IntegrationDump`vOut, Real], Return[$Failed]]; Image`IntegrationDump`res = Head[Image`IntegrationDump`img][Image`IntegrationDump`vOut, Image`IntegrationDump`type]; , Return[$Failed]], True, Return[$Failed]]]; If[ !ImageQ[Image`IntegrationDump`res], Return[$Failed], Return[Image`CopyOptions[Image`IntegrationDump`img, Image`IntegrationDump`res, ColorSpace -> \"FromSource\"]]]; ]\nImage`ImageArithmeticFunction[Image`IntegrationDump`head_, Image`IntegrationDump`n_Integer \/; Image`IntegrationDump`n > 1, HoldComplete[(Image`IntegrationDump`head_)[Image`IntegrationDump`as:__Image | __Image3D]]] := Module[{Image`IntegrationDump`av, Image`IntegrationDump`vOut, Image`IntegrationDump`type, Image`IntegrationDump`res, Image`IntegrationDump`cm, Image`IntegrationDump`indeterminateValue, Image`IntegrationDump`h}, Image`IntegrationDump`av = {Image`IntegrationDump`as}; If[ !Image`IntegrationDump`VectorOfImagesWithSameProperties[Image`IntegrationDump`av], If[MatchQ[Image`IntegrationDump`head, Plus | Times | Subtract] || (MatchQ[Image`IntegrationDump`head, Divide | Power] && Image`IntegrationDump`n == 2), Image`IntegrationDump`cm = \"None\", Image`IntegrationDump`cm = \"Repeat\"]; Image`IntegrationDump`av = Image`Utilities`conformObjects[Image`IntegrationDump`av, \"AllowedObjects\" -> {\"Image\"}, \"ChannelMatching\" -> Image`IntegrationDump`cm, ColorSpace -> \"Matching\", \"FailOnMixedSize\" -> True, \"Type\" -> \"NonInteger\", \"RGBClipping\" -> False]; If[ !VectorQ[Image`IntegrationDump`av], Return[$Failed]]; , If[MatchQ[ImageType[Image`IntegrationDump`av[[1]]], \"Bit\" | \"Byte\" | \"Bit16\"], Image`IntegrationDump`h = Head[Image`IntegrationDump`av[[1]]]; Image`IntegrationDump`av = (Image`IntegrationDump`h[#1, \"Real32\"] & ) \/@ Image`IntegrationDump`av; ]]; Image`IntegrationDump`indeterminateValue = Query[\"ImageProcessingOptions\", \"IndeterminateValue\"][SystemOptions[\"ImageProcessingOptions\" -> \"IndeterminateValue\"]]; If[ !Internal`RealValuedNumericQ[Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`indeterminateValue = 0.]; Quiet[Which[Image`IntegrationDump`head === Plus, Image`IntegrationDump`res = ImageAdd[Image`IntegrationDump`av], Image`IntegrationDump`head === Times, Image`IntegrationDump`res = ImageMultiply[Image`IntegrationDump`av], Image`IntegrationDump`head === Subtract, Image`IntegrationDump`res = ImageSubtract[Image`IntegrationDump`av], Image`IntegrationDump`head === Divide && Image`IntegrationDump`n == 2, Image`IntegrationDump`res = Image`ImageDivide[Image`IntegrationDump`av[[1]], Image`IntegrationDump`av[[2]], \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], Image`IntegrationDump`head === Power && Image`IntegrationDump`n == 2, Image`IntegrationDump`res = Image`ImagePower[Image`IntegrationDump`av[[1]], Image`IntegrationDump`av[[2]], \"IndeterminateValue\" -> Image`IntegrationDump`indeterminateValue], True, Image`IntegrationDump`type = ImageType[Image`IntegrationDump`av[[1]]]; Image`IntegrationDump`vOut = Image`IntegrationDump`head @@ (ImageData[#1] & ) \/@ Image`IntegrationDump`av; If[ArrayQ[Image`IntegrationDump`vOut], Image`IntegrationDump`vOut = Image`Utilities`replaceAndPackToReal[Image`IntegrationDump`vOut, Image`IntegrationDump`indeterminateValue]; If[ !Developer`PackedArrayQ[Image`IntegrationDump`vOut, Real], Return[$Failed]]; Image`IntegrationDump`res = Head[Image`IntegrationDump`av[[1]]][Image`IntegrationDump`vOut, If[Image`IntegrationDump`type === \"Real64\", \"Real64\", \"Real32\"]]; , Return[$Failed]]]]; If[ !ImageQ[Image`IntegrationDump`res], Return[$Failed], Return[Image`CopyOptions[Image`IntegrationDump`av[[1]], Image`IntegrationDump`res, ColorSpace -> \"FromSource\"]]]; ] \/; Length[HoldComplete[Image`IntegrationDump`as]] == Image`IntegrationDump`n\nImage`ImageArithmeticFunction[Image`IntegrationDump`head_, Image`IntegrationDump`n_Integer \/; Image`IntegrationDump`n > 1, Image`IntegrationDump`heldInp:HoldComplete[(Image`IntegrationDump`head_)[Image`IntegrationDump`args1___, Image`IntegrationDump`a:_Image | _Image3D, Image`IntegrationDump`args2___]]] := Module[{Image`IntegrationDump`fn, Image`IntegrationDump`pos, Image`IntegrationDump`imgs}, Image`IntegrationDump`pos = Position[Image`IntegrationDump`heldInp, _Image | _Image3D, {2}, Heads -> False]; Image`IntegrationDump`imgs = Flatten[HoldComplete @@ Extract[Image`IntegrationDump`heldInp, Image`IntegrationDump`pos, HoldComplete], 1, HoldComplete]; Image`IntegrationDump`fn = Function @@ ReplacePart[Image`IntegrationDump`heldInp, MapThread[Rule, {Image`IntegrationDump`pos, Array[Slot, Length[Image`IntegrationDump`pos]]}]]; Image`ImageArithmeticFunction[Image`IntegrationDump`fn, Image`IntegrationDump`n, Apply[Image`IntegrationDump`fn, With[{Image`IntegrationDump`iimgs = Image`IntegrationDump`imgs}, HoldComplete[Image`IntegrationDump`iimgs]], {1}]]] \/; Length[HoldComplete[Image`IntegrationDump`args1, Image`IntegrationDump`a, Image`IntegrationDump`args2]] > Image`IntegrationDump`n\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageArithmeticFunction",
	"Image`ImageBoundaryTaper":"ObjectType: Symbol\nUsage: Image`ImageBoundaryTaper\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageBoundaryTaper[Image`RegistrationDump`args___] := Block[{Image`RegistrationDump`a, Image`RegistrationDump`res}, Image`RegistrationDump`a = System`Private`Arguments[Image`ImageBoundaryTaper[Image`RegistrationDump`args], {1, 2}]; Image`RegistrationDump`res \/; Image`RegistrationDump`a =!= {} && (Image`RegistrationDump`res = Image`RegistrationDump`iImageBoundaryTaper @@ Image`RegistrationDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {BlurQ -> True}\nAttributes: {}\nFullName: Image`ImageBoundaryTaper",
	"Image`ImageBoxesQ":"ObjectType: Symbol\nUsage: Image`ImageBoxesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageBoxesQ[GraphicsBox[TagBox[_RasterBox, _BoxForm`ImageTag, ___], ___]] := True\nImage`ImageBoxesQ[GraphicsBox[TagBox[TagBox[TagBox[_RasterBox, _DebugTag, ___], _BoxForm`ImageTag, ___], _DebugTag, ___], ___]] := True\nImage`ImageBoxesQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageBoxesQ",
	"IMAQ`ImageCaptureBox":"ObjectType: Symbol\nUsage: IMAQ`ImageCaptureBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: IMAQ`ImageCaptureBox[2, ImageAcquisition`CaptureDump`previewFunction_, ImageAcquisition`CaptureDump`captureAction_, Dynamic[ImageAcquisition`CaptureDump`captureFunction_], Dynamic[ImageAcquisition`CaptureDump`device_], Dynamic[ImageAcquisition`CaptureDump`frameRate_], Dynamic[ImageAcquisition`CaptureDump`imageSize_], Dynamic[ImageAcquisition`CaptureDump`rasterSize_], ImageAcquisition`CaptureDump`captureRunning_] := Quiet[IMAQ`LoadAdapter[]; If[ImageAcquisition`CaptureDump`iCamToIndex[ImageAcquisition`CaptureDump`device] === $Failed, Message[ImageCapture::unknowncam, ImageAcquisition`CaptureDump`device]; Return[$Failed]]; DynamicModule[{ImageAcquisition`CaptureDump`f, ImageAcquisition`CaptureDump`captureActionTooltip, ImageAcquisition`CaptureDump`camMenu = $ImagingDevices, ImageAcquisition`CaptureDump`runningCam = ImageAcquisition`CaptureDump`device, ImageAcquisition`CaptureDump`currFrame, ImageAcquisition`CaptureDump`blankImg, ImageAcquisition`CaptureDump`supResList, ImageAcquisition`CaptureDump`res, ImageAcquisition`CaptureDump`deviceObj, ImageAcquisition`CaptureDump`pDevObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device], ImageAcquisition`CaptureDump`index = ImageAcquisition`CaptureDump`iCamToIndex[ImageAcquisition`CaptureDump`device]}, If[ImageAcquisition`CaptureDump`captureAction === Automatic, ImageAcquisition`CaptureDump`f = ImageAcquisition`CaptureDump`$defaultCaptureAction, ImageAcquisition`CaptureDump`f = ImageAcquisition`CaptureDump`captureAction]; ImageAcquisition`CaptureDump`captureActionTooltip = If[ImageAcquisition`CaptureDump`captureAction === Automatic, Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureCaptureAction\"]], Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureCustomCaptureAction\"]]]; ImageAcquisition`CaptureDump`blankImg = Image[ConstantArray[1, {ImageAcquisition`CaptureDump`$defaultFrameSize[[2]], ImageAcquisition`CaptureDump`$defaultFrameSize[[1]]}]]; If[ImageAcquisition`CaptureDump`captureRunning && ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index] === \"live\", If[ImageAcquisition`CaptureDump`getDynamicCaptureTask[ImageAcquisition`CaptureDump`index] === Null, If[(ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device]) =!= None, ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`checkDeviceOpen[ImageCapture, ImageAcquisition`CaptureDump`device, \"FrameRate\" -> ImageAcquisition`CaptureDump`deviceObj[\"FrameRate\"], \"RasterSize\" -> ImageAcquisition`CaptureDump`deviceObj[\"RasterSize\"], \"ImageCaptureFunction\" -> ImageAcquisition`CaptureDump`deviceObj[\"ImageCaptureFunction\"]]; , ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`checkDeviceOpen[ImageCapture, ImageAcquisition`CaptureDump`device, \"FrameRate\" -> ImageAcquisition`CaptureDump`frameRate, \"RasterSize\" -> ImageAcquisition`CaptureDump`rasterSize, \"ImageCaptureFunction\" -> ImageAcquisition`CaptureDump`captureFunction]; ]; , ImageAcquisition`CaptureDump`deviceObj = Replace[ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`index], None -> $Failed]; ImageAcquisition`CaptureDump`conditionalRestartCamera[ImageAcquisition`CaptureDump`index, False]; ]; If[ImageAcquisition`CaptureDump`deviceObj === $Failed, ImageAcquisition`CaptureDump`setCameraState[ImageAcquisition`CaptureDump`index, \"stopped\"]; ]; , If[(ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`index]) =!= None, DeviceClose[ImageAcquisition`CaptureDump`deviceObj]; ]; ImageAcquisition`CaptureDump`setCameraState[ImageAcquisition`CaptureDump`index, \"stopped\"]; ]; ImageAcquisition`CaptureDump`supResList = IMAQTools`OmniStream`GetSupportedResolutions[ImageAcquisition`CaptureDump`index]; Deploy[Panel[Column[{Dynamic[ImageAcquisition`CaptureDump`currFrame = ImageAcquisition`CaptureDump`getCurrentImage[ImageAcquisition`CaptureDump`index]; IMAQTools`OmniStream`UpdateFrontend[ImageAcquisition`CaptureDump`index]; IMAQTools`OmniStream`KeepAlive[ImageAcquisition`CaptureDump`index]; If[ImageAcquisition`CaptureDump`currFrame === $Failed || ImageAcquisition`CaptureDump`currFrame === Null, If[ImageAcquisition`CaptureDump`currFrame === $Failed, Message[ImageCapture::checkcam, ImageAcquisition`CaptureDump`device]; ]; Panel[Image[ImageAcquisition`CaptureDump`blankImg, ImageSize -> ImageAcquisition`CaptureDump`imageSize]], ImageAcquisition`CaptureDump`previewFunction[Image[ImageAcquisition`CaptureDump`currFrame, \"Byte\", ImageSize -> ImageAcquisition`CaptureDump`imageSize]]], TrackedSymbols :> {ImageAcquisition`CaptureDump`i$currentImage, ImageAcquisition`CaptureDump`index}], Grid[{{Button[Dynamic[RawBoxes[FEPrivate`FrontEndResource[\"FEBitmaps\", \"ImageCapturePowerIcon\"]]], Switch[ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index], \"stopped\", If[(ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device]) =!= None, ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`checkDeviceOpen[ImageCapture, ImageAcquisition`CaptureDump`device, \"FrameRate\" -> ImageAcquisition`CaptureDump`deviceObj[\"FrameRate\"], \"RasterSize\" -> ImageAcquisition`CaptureDump`deviceObj[\"RasterSize\"], \"ImageCaptureFunction\" -> ImageAcquisition`CaptureDump`deviceObj[\"ImageCaptureFunction\"]]; , ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`checkDeviceOpen[ImageCapture, ImageAcquisition`CaptureDump`device, \"FrameRate\" -> ImageAcquisition`CaptureDump`frameRate, \"RasterSize\" -> ImageAcquisition`CaptureDump`rasterSize, \"ImageCaptureFunction\" -> ImageAcquisition`CaptureDump`captureFunction]; ]; If[ImageAcquisition`CaptureDump`deviceObj === $Failed, ImageAcquisition`CaptureDump`setCameraState[ImageAcquisition`CaptureDump`index, \"stopped\"]; , ImageAcquisition`CaptureDump`setCameraState[ImageAcquisition`CaptureDump`index, \"live\"]; ]; , \"live\", ImageAcquisition`CaptureDump`setCameraState[ImageAcquisition`CaptureDump`index, \"stopped\"]; Quiet[ImageAcquisition`CaptureDump`iCallDeviceClose[ImageAcquisition`CaptureDump`deviceObj]]; ], Appearance -> Dynamic[If[ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index] === \"stopped\", \"FramedPalette\", {\"FramedPalette\", \"Pressed\"}]], ImageSize -> ImageAcquisition`CaptureDump`$imageCaptureDialogButtonSize, Tooltip -> Dynamic[If[ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index] === \"stopped\", DynamicBox[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureStartCamera\"]], DynamicBox[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureStopCamera\"]]]]], Button[Dynamic[RawBoxes[FEPrivate`FrontEndResource[\"FEBitmaps\", \"ImageCaptureCameraIcon\"]]], If[ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index] === \"stopped\", (If[#1 =!= Null, ImageAcquisition`CaptureDump`f[ImageAcquisition`CaptureDump`previewFunction[#1]]] & )[ImageAcquisition`CaptureDump`getCurrentImage[ImageAcquisition`CaptureDump`index]], ImageAcquisition`CaptureDump`f[ImageAcquisition`CaptureDump`previewFunction[IMAQTools`OmniStream`GrabFrame[ImageAcquisition`CaptureDump`index, \"CheckAutoExposure\" -> ImageAcquisition`CaptureDump`enableAutoExposureCheck[IMAQTools`OmniStream`GetBufferMode[ImageAcquisition`CaptureDump`index]]]]]], ImageSize -> ImageAcquisition`CaptureDump`$imageCaptureDialogButtonSize, Appearance -> \"FramedPalette\", Tooltip -> ImageAcquisition`CaptureDump`captureActionTooltip], Button[Dynamic[RawBoxes[FEPrivate`FrontEndResource[\"FEBitmaps\", \"ImageCaptureCopyImageIcon\"]]], If[ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index] === \"stopped\", (If[#1 =!= Null, CopyToClipboard[ImageAcquisition`CaptureDump`previewFunction[#1]]; ] & )[ImageAcquisition`CaptureDump`getCurrentImage[ImageAcquisition`CaptureDump`index]], CopyToClipboard[ImageAcquisition`CaptureDump`previewFunction[IMAQTools`OmniStream`GrabFrame[ImageAcquisition`CaptureDump`index, \"CheckAutoExposure\" -> ImageAcquisition`CaptureDump`enableAutoExposureCheck[IMAQTools`OmniStream`GetBufferMode[ImageAcquisition`CaptureDump`index]]]]]; ], ImageSize -> ImageAcquisition`CaptureDump`$imageCaptureDialogButtonSize, Appearance -> \"FramedPalette\", Tooltip -> Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureCopy\"]]]}}, ItemSize -> All], OpenerView[{Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureDeviceControls\"]], Grid[Join[{{Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureDevice\"]], Spacer[5], EventHandler[Dynamic[PopupMenu[Dynamic[ImageAcquisition`CaptureDump`device, (ImageAcquisition`CaptureDump`device = #1; If[ImageAcquisition`CaptureDump`device =!= ImageAcquisition`CaptureDump`runningCam, ImageAcquisition`CaptureDump`index = ImageAcquisition`CaptureDump`iCamToIndex[ImageAcquisition`CaptureDump`device]; If[ImageAcquisition`CaptureDump`getCameraState[ImageAcquisition`CaptureDump`index] === \"live\", If[(ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`index]) =!= None, ImageAcquisition`CaptureDump`conditionalRestartCamera[ImageAcquisition`CaptureDump`index, False]; IMAQTools`OmniStream`KeepAlive[ImageAcquisition`CaptureDump`index]; IMAQTools`OmniStream`UpdateFrontend[ImageAcquisition`CaptureDump`index]; , If[(ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device]) =!= None, ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`checkDeviceOpen[ImageCapture, ImageAcquisition`CaptureDump`device, \"FrameRate\" -> ImageAcquisition`CaptureDump`deviceObj[\"FrameRate\"], \"RasterSize\" -> ImageAcquisition`CaptureDump`deviceObj[\"RasterSize\"], \"ImageCaptureFunction\" -> ImageAcquisition`CaptureDump`deviceObj[\"ImageCaptureFunction\"]]; , ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`checkDeviceOpen[ImageCapture, ImageAcquisition`CaptureDump`device, \"FrameRate\" -> ImageAcquisition`CaptureDump`$defaultFrameRate, \"RasterSize\" -> ImageAcquisition`CaptureDump`$defaultFrameSize, \"ImageCaptureFunction\" -> ImageAcquisition`CaptureDump`$defaultCaptureFunction]; ]; If[ImageAcquisition`CaptureDump`deviceObj === $Failed, ImageAcquisition`CaptureDump`setCameraState[\"stopped\"]; ]; ]; ]; ImageAcquisition`CaptureDump`runningCam = ImageAcquisition`CaptureDump`device; If[(ImageAcquisition`CaptureDump`deviceObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device]) =!= None, ImageAcquisition`CaptureDump`rasterSize = ImageAcquisition`CaptureDump`$cfgFrameSize = ImageAcquisition`CaptureDump`iBoundingNativeRes[ImageAcquisition`CaptureDump`index, ImageAcquisition`CaptureDump`deviceObj[\"RasterSize\"] \/. Automatic -> ImageAcquisition`CaptureDump`$defaultFrameSize]; ImageAcquisition`CaptureDump`frameRate = ImageAcquisition`CaptureDump`$cfgFrameRate = N[ImageAcquisition`CaptureDump`deviceObj[\"FrameRate\"] \/. Automatic -> ImageAcquisition`CaptureDump`$defaultFrameRate]; ImageAcquisition`CaptureDump`captureFunction = ImageAcquisition`CaptureDump`deviceObj[\"ImageCaptureFunction\"] \/. Automatic -> ImageAcquisition`CaptureDump`$defaultCaptureFunction; , ImageAcquisition`CaptureDump`rasterSize = ImageAcquisition`CaptureDump`$cfgFrameSize = ImageAcquisition`CaptureDump`iBoundingNativeRes[ImageAcquisition`CaptureDump`index, ImageAcquisition`CaptureDump`$defaultFrameSize]; ImageAcquisition`CaptureDump`frameRate = ImageAcquisition`CaptureDump`$cfgFrameRate = ImageAcquisition`CaptureDump`$defaultFrameRate; ImageAcquisition`CaptureDump`captureFunction = ImageAcquisition`CaptureDump`$defaultCaptureFunction; ]; ImageAcquisition`CaptureDump`supResList = IMAQ`GetSupportedResolutions[ImageAcquisition`CaptureDump`index]; ]; ) & ], Replace[ImageAcquisition`CaptureDump`camMenu, $Failed -> {}]], SynchronousUpdating -> False, TrackedSymbols :> {ImageAcquisition`CaptureDump`camMenu}], \"MouseDown\" :> (ImageAcquisition`CaptureDump`camMenu = $ImagingDevices), PassEventsDown -> True]}, {Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureFrameRate\"]], Spacer[5], Dynamic[ImageAcquisition`CaptureDump`$cfgFrameRate; If[(ImageAcquisition`CaptureDump`pDevObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device]) =!= None, ImageAcquisition`CaptureDump`frameRate = N[ImageAcquisition`CaptureDump`pDevObj[\"FrameRate\"] \/. Automatic -> ImageAcquisition`CaptureDump`$defaultFrameRate]; ]; Quiet[InputField[Dynamic[ImageAcquisition`CaptureDump`frameRate, {None, If[ImageAcquisition`CaptureDump`validateOption[\"FrameRate\", #1], Quiet[ImageAcquisition`CaptureDump`pDevObj[\"FrameRate\"] = ImageAcquisition`CaptureDump`frameRate = N[#1 \/. Automatic -> ImageAcquisition`CaptureDump`$defaultFrameRate]]; ] & }], Expression, FieldSize -> {{3, ImageAcquisition`CaptureDump`$maxFrameRateFieldLength}, {1, Infinity}}]], SynchronousUpdating -> False, TrackedSymbols :> {ImageAcquisition`CaptureDump`$cfgFrameRate}]}}, If[ImageAcquisition`CaptureDump`$turnOnRasterSize, {{Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureRasterSize\"]], Spacer[5], Dynamic[ImageAcquisition`CaptureDump`$cfgFrameSize; If[(ImageAcquisition`CaptureDump`pDevObj = ImageAcquisition`CaptureDump`getDeviceObj[ImageAcquisition`CaptureDump`device]) =!= None, ImageAcquisition`CaptureDump`rasterSize = ImageAcquisition`CaptureDump`iBoundingNativeRes[ImageAcquisition`CaptureDump`index, Ceiling[ImageAcquisition`CaptureDump`pDevObj[\"RasterSize\"] \/. Automatic -> ImageAcquisition`CaptureDump`$defaultFrameSize]]; ]; PopupMenu[Dynamic[ImageAcquisition`CaptureDump`rasterSize, {None, (If[ImageAcquisition`CaptureDump`pDevObj =!= None && DeviceOpenQ[ImageAcquisition`CaptureDump`pDevObj] && #1 =!= ImageAcquisition`CaptureDump`iBoundingNativeRes[ImageAcquisition`CaptureDump`index, Ceiling[ImageAcquisition`CaptureDump`pDevObj[\"RasterSize\"] \/. Automatic -> ImageAcquisition`CaptureDump`$defaultFrameSize]], Quiet[ImageAcquisition`CaptureDump`pDevObj[\"RasterSize\"] = #1]; , ImageAcquisition`CaptureDump`$cfgFrameSize = #1; ]; ImageAcquisition`CaptureDump`rasterSize = #1; ) & }], ImageAcquisition`CaptureDump`supResList], SynchronousUpdating -> False, TrackedSymbols :> {ImageAcquisition`CaptureDump`supResList, ImageAcquisition`CaptureDump`$cfgFrameSize}]}}, {}]], Alignment -> {{Right, Center, Left}, Baseline}]}, BaseStyle -> \"DialogStyle\", Deployed -> True]}]]]], {$ImagingDevices::checkcam}]\nIMAQ`ImageCaptureBox[ImageAcquisition`CaptureDump`prev:Except[_Integer], Dynamic[ImageAcquisition`CaptureDump`cf_], ImageAcquisition`CaptureDump`ca_, Dynamic[ImageAcquisition`CaptureDump`d_], Dynamic[ImageAcquisition`CaptureDump`fr_], Dynamic[ImageAcquisition`CaptureDump`is_], Dynamic[ImageAcquisition`CaptureDump`rs_], ImageAcquisition`CaptureDump`cr_] := ImageAcquisition`CaptureDump`execImageCapture[ImagePreviewFunction -> ImageAcquisition`CaptureDump`prev, ImageCaptureFunction -> ImageAcquisition`CaptureDump`cf, \"CaptureAction\" -> ImageAcquisition`CaptureDump`ca, ImagingDevice -> ImageAcquisition`CaptureDump`d, FrameRate -> ImageAcquisition`CaptureDump`fr, ImageSize -> ImageAcquisition`CaptureDump`is, RasterSize -> ImageAcquisition`CaptureDump`rs, \"CaptureRunning\" -> ImageAcquisition`CaptureDump`cr]\nIMAQ`ImageCaptureBox[ImageAcquisition`CaptureDump`prev:Except[_Integer], ImageAcquisition`CaptureDump`ca_, Dynamic[ImageAcquisition`CaptureDump`d_], Dynamic[ImageAcquisition`CaptureDump`fr_], Dynamic[ImageAcquisition`CaptureDump`is_], Dynamic[ImageAcquisition`CaptureDump`rs_], ImageAcquisition`CaptureDump`cr_] := ImageAcquisition`CaptureDump`execImageCapture[ImagePreviewFunction -> ImageAcquisition`CaptureDump`prev, \"CaptureAction\" -> ImageAcquisition`CaptureDump`ca, ImagingDevice -> ImageAcquisition`CaptureDump`d, FrameRate -> ImageAcquisition`CaptureDump`fr, ImageSize -> ImageAcquisition`CaptureDump`is, RasterSize -> ImageAcquisition`CaptureDump`rs, \"CaptureRunning\" -> ImageAcquisition`CaptureDump`cr]\nIMAQ`ImageCaptureBox[ImageAcquisition`CaptureDump`ca:Except[_Integer], Dynamic[ImageAcquisition`CaptureDump`d_], Dynamic[ImageAcquisition`CaptureDump`fr_], Dynamic[ImageAcquisition`CaptureDump`is_], Dynamic[ImageAcquisition`CaptureDump`rs_], ImageAcquisition`CaptureDump`cr_] := ImageAcquisition`CaptureDump`execImageCapture[\"CaptureAction\" -> ImageAcquisition`CaptureDump`ca, ImagingDevice -> ImageAcquisition`CaptureDump`d, FrameRate -> ImageAcquisition`CaptureDump`fr, ImageSize -> ImageAcquisition`CaptureDump`is, RasterSize -> ImageAcquisition`CaptureDump`rs, \"CaptureRunning\" -> ImageAcquisition`CaptureDump`cr]\nIMAQ`ImageCaptureBox[ImageAcquisition`CaptureDump`boxVersion_Integer, ___] \/; TrueQ[ImageAcquisition`CaptureDump`boxVersion > ImageAcquisition`CaptureDump`currentIMAQVersion[]] := Framed[Row[{ImageAcquisition`CaptureDump`ttTextStyler[Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"ImageCaptureVersionText\"]], ImageAcquisition`CaptureDump`$darkGray], Hyperlink[Style[\"\", FontSize -> 9], \"http:\/\/www.wolfram.com\/\"]}], Background -> ImageAcquisition`CaptureDump`$warningBackground, FrameStyle -> ImageAcquisition`CaptureDump`$warningBorder, FrameMargins -> {{10, 10}, {Automatic, Automatic}}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: IMAQ`ImageCaptureBox",
	"GeoGraphics`ImageCases":"ObjectType: Symbol\nUsage: GeoGraphics`ImageCases[expr] returns a list of rules image -> ImageDimensions[image] for\nall images found inside the given expression.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeoGraphics`ImageCases[System`GeoImageDump`expr_] := (#1 -> ImageDimensions[#1] & ) \/@ Cases[System`GeoImageDump`expr, _Image, {0, Infinity}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeoGraphics`ImageCases",
	"Image`RegistrationDump`ImageChessboardCompose":"ObjectType: Symbol\nUsage: Image`RegistrationDump`ImageChessboardCompose\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RegistrationDump`ImageChessboardCompose[Image`RegistrationDump`img1_, Image`RegistrationDump`img2_] := Module[{Image`RegistrationDump`mask1, Image`RegistrationDump`mask2, Image`RegistrationDump`d, Image`RegistrationDump`w, Image`RegistrationDump`h, Image`RegistrationDump`i, Image`RegistrationDump`j, Image`RegistrationDump`NCHESS = 8}, Image`RegistrationDump`d = Image[Table[Mod[Image`RegistrationDump`i + Image`RegistrationDump`j, 2], {Image`RegistrationDump`i, Image`RegistrationDump`NCHESS}, {Image`RegistrationDump`j, Image`RegistrationDump`NCHESS}], \"Bit\"]; {Image`RegistrationDump`w, Image`RegistrationDump`h} = ImageDimensions[Image`RegistrationDump`img1]; Image`RegistrationDump`mask1 = ImagePad[ImageResize[Image`RegistrationDump`d, Min[{Image`RegistrationDump`w, Image`RegistrationDump`h}], Resampling -> \"Nearest\"], {{0, Image`RegistrationDump`w - Min[{Image`RegistrationDump`w, Image`RegistrationDump`h}]}, {Image`RegistrationDump`h - Min[{Image`RegistrationDump`w, Image`RegistrationDump`h}], 0}}, Padding -> \"Periodic\"]; {Image`RegistrationDump`w, Image`RegistrationDump`h} = ImageDimensions[Image`RegistrationDump`img2]; Image`RegistrationDump`mask2 = ColorNegate[ImagePad[ImageResize[Image`RegistrationDump`d, Min[{Image`RegistrationDump`w, Image`RegistrationDump`h}], Resampling -> \"Nearest\"], {{0, Image`RegistrationDump`w - Min[{Image`RegistrationDump`w, Image`RegistrationDump`h}]}, {Image`RegistrationDump`h - Min[{Image`RegistrationDump`w, Image`RegistrationDump`h}], 0}}, Padding -> \"Periodic\"]]; ImageAdd[RemoveAlphaChannel[ImageMultiply[Image`RegistrationDump`img1, Image`RegistrationDump`mask1]], RemoveAlphaChannel[ImageMultiply[Image`RegistrationDump`img2, Image`RegistrationDump`mask2]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`RegistrationDump`ImageChessboardCompose",
	"Image`ImageDepthMap":"ObjectType: Symbol\nUsage: Image`ImageDepthMap\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageDepthMap[Image`SpatialOperationsDump`args___] := Module[{Image`SpatialOperationsDump`a, Image`SpatialOperationsDump`r}, Image`SpatialOperationsDump`a = System`Private`Arguments[Image`ImageDepthMap[Image`SpatialOperationsDump`args], {1, 3}, List, Image`SpatialOperationsDump`ImageDepthMapHiddenOptions]; Image`SpatialOperationsDump`r \/; Image`SpatialOperationsDump`a =!= {} && (Image`SpatialOperationsDump`r = Image`SpatialOperationsDump`iImageDepthMap @@ Image`SpatialOperationsDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageDepthMap",
	"Image`SpatialOperationsDump`ImageDepthMap":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageDepthMap\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageDepthMap",
	"Image`MeasurementsDump`ImageDistanceFunctionQ":"ObjectType: Symbol\nUsage: Image`MeasurementsDump`ImageDistanceFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`MeasurementsDump`ImageDistanceFunctionQ[Image`MeasurementsDump`fun_] := MatchQ[Image`MeasurementsDump`fun, EuclideanDistance | \"EuclideanDistance\" | SquaredEuclideanDistance | \"SquaredEuclideanDistance\" | NormalizedSquaredEuclideanDistance | \"NormalizedSquaredEuclideanDistance\" | ManhattanDistance | \"ManhattanDistance\" | CosineDistance | \"CosineDistance\" | CorrelationDistance | \"CorrelationDistance\" | RootMeanSquare | \"RootMeanSquare\" | \"MeanEuclideanDistance\" | \"MeanSquaredEuclideanDistance\" | \"MeanReciprocalSquaredEuclideanDistance\" | {\"MeanReciprocalSquaredEuclideanDistance\", Image`MeasurementsDump`k_ \/; TrueQ[Image`MeasurementsDump`k != 0.]} | \"MutualInformationVariation\" | {\"MutualInformationVariation\", Image`MeasurementsDump`n_ \/; Image`MeasurementsDump`checkNbinsWithThrownMessage[Image`MeasurementsDump`n, False]} | \"NormalizedMutualInformationVariation\" | {\"NormalizedMutualInformationVariation\", Image`MeasurementsDump`n_ \/; Image`MeasurementsDump`checkNbinsWithThrownMessage[Image`MeasurementsDump`n, False]} | \"DifferenceNormalizedEntropy\" | {\"DifferenceNormalizedEntropy\", Image`MeasurementsDump`n_ \/; Image`MeasurementsDump`checkNbinsWithThrownMessage[Image`MeasurementsDump`n, False]} | \"MeanPatternIntensity\" | {\"MeanPatternIntensity\", Image`MeasurementsDump`l_ \/; TrueQ[Image`MeasurementsDump`l != 0.], Image`MeasurementsDump`r_ \/; TrueQ[IntegerQ[Image`MeasurementsDump`r] && Image`MeasurementsDump`r >= 0]} | \"GradientCorrelation\" | \"MeanReciprocalGradientDistance\" | \"EarthMoverDistance\" | {\"EarthMoverDistance\", Image`MeasurementsDump`n_ \/; Image`MeasurementsDump`checkNbinsWithThrownMessage[Image`MeasurementsDump`n, False]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`MeasurementsDump`ImageDistanceFunctionQ",
	"Image`MeasurementsDump`ImageDistanceFunctionRealVectorsQ":"ObjectType: Symbol\nUsage: Image`MeasurementsDump`ImageDistanceFunctionRealVectorsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`MeasurementsDump`ImageDistanceFunctionRealVectorsQ[Image`MeasurementsDump`fun_] := MatchQ[Image`MeasurementsDump`fun, Automatic | \"Automatic\" | EuclideanDistance | \"EuclideanDistance\" | SquaredEuclideanDistance | \"SquaredEuclideanDistance\" | NormalizedSquaredEuclideanDistance | \"NormalizedSquaredEuclideanDistance\" | ManhattanDistance | \"ManhattanDistance\" | CosineDistance | \"CosineDistance\" | CorrelationDistance | \"CorrelationDistance\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`MeasurementsDump`ImageDistanceFunctionRealVectorsQ",
	"Image`ImageDivide":"ObjectType: Symbol\nUsage: Image`ImageDivide\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageDivide[Image`CompositionOperationsDump`args___] := Block[{Image`CompositionOperationsDump`a, Image`CompositionOperationsDump`res}, Image`CompositionOperationsDump`a = System`Private`Arguments[Image`ImageDivide[Image`CompositionOperationsDump`args], 2]; Image`CompositionOperationsDump`res \/; Image`CompositionOperationsDump`a =!= {} && (Image`CompositionOperationsDump`res = Image`CompositionOperationsDump`iImageDivide @@ Image`CompositionOperationsDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IndeterminateValue -> 1}\nAttributes: {}\nFullName: Image`ImageDivide",
	"Image`FeaturesDump`ImageDominantPeaks":"ObjectType: Symbol\nUsage: Image`FeaturesDump`ImageDominantPeaks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`FeaturesDump`ImageDominantPeaks[Image`Utilities`img_, Image`FeaturesDump`r_:1] := Module[{Image`FeaturesDump`pos, Image`FeaturesDump`idx, Image`FeaturesDump`nms, Image`FeaturesDump`d}, Image`FeaturesDump`nms = ImageData[Image`FeaturesDump`ImageNonMaxSuppression[Image`Utilities`img, Image`FeaturesDump`r*{1, 1}], \"Bit\"]; Image`FeaturesDump`pos = ComponentMeasurements[Image`FeaturesDump`nms, \"PixelList\"]; If[Image`FeaturesDump`pos === {}, Return[Image`FeaturesDump`pos]]; Image`FeaturesDump`pos = Image`FeaturesDump`pos[[1,2]]; Image`FeaturesDump`idx = Ordering[-Extract[ImageData[Image`Utilities`img], Image`FeaturesDump`pos]]; Image`FeaturesDump`pos = Image`FeaturesDump`pos[[Image`FeaturesDump`idx]]; If[Length[Image`FeaturesDump`pos] < 2, Return[Image`FeaturesDump`pos]]; Image`FeaturesDump`d = Prepend[Image`FeaturesDump`cMinDistance[N[Image`FeaturesDump`pos]], $MaxMachineNumber]; Image`FeaturesDump`idx = Ordering[-Image`FeaturesDump`d]; Image`FeaturesDump`pos[[Image`FeaturesDump`idx]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FeaturesDump`ImageDominantPeaks",
	"Image`SpatialOperationsDump`ImageDownsample":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageDownsample\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageDownsample",
	"AlphaIntegration`ImageEditingQuery":"ObjectType: Symbol\nUsage: AlphaIntegration`ImageEditingQuery\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AlphaIntegration`ImageEditingQuery[\"ImageEditing NestedCategoryListing\"] := If[TrueQ[WolframAlphaClient`Private`$MInterfaceUseCachedCategories], Uncompress[Last[WolframAlphaClient`Private`$CategoryCacheDefault]], WolframAlphaClient`Private`UpdateCategoryCacheIfNecessary[]; WolframAlphaClient`Private`GetCategoryMenus[]]\nAlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes_] := AlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes, Thumbnail[ExampleData[{\"TestImage\", \"Lena\"}]], StandardForm]\nAlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes_, WolframAlphaClient`Private`fmt_] := AlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes, Thumbnail[ExampleData[{\"TestImage\", \"Lena\"}]], WolframAlphaClient`Private`fmt]\nAlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes_, WolframAlphaClient`Private`imageThumbnail_, WolframAlphaClient`Private`fmt_] := AlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes, WolframAlphaClient`Private`imageThumbnail, WolframAlphaClient`Private`imageThumbnail, WolframAlphaClient`Private`fmt]\nAlphaIntegration`ImageEditingQuery[WolframAlphaClient`Private`boxes_, WolframAlphaClient`Private`imageThumbnail_, WolframAlphaClient`Private`image_, WolframAlphaClient`Private`fmt_] := AlphaIntegration`ImageEditingQuery[Dynamic[{WolframAlphaClient`Private`thing1, WolframAlphaClient`Private`thing2}], WolframAlphaClient`Private`boxes, WolframAlphaClient`Private`imageThumbnail, WolframAlphaClient`Private`image, WolframAlphaClient`Private`fmt]\nAlphaIntegration`ImageEditingQuery[Dynamic[WolframAlphaClient`Private`ievars_], WolframAlphaClient`Private`boxes_, WolframAlphaClient`Private`imageThumbnail_, WolframAlphaClient`Private`image_, WolframAlphaClient`Private`fmt_] := Block[{WolframAlphaClient`Private`opts = {}, WolframAlphaClient`Private`query, WolframAlphaClient`Private`result, WolframAlphaClient`Private`$AlphaQueryMMode = \"query\"}, If[WolframAlphaClient`Private`boxes === None, Return[Pane[Animator[Appearance -> \"Necklace\"], ImageSize -> Full, Alignment -> Center]]]; WolframAlphaClient`Private`query = StringTrim[WolframAlphaClient`Private`queryBoxesToQueryString[WolframAlphaClient`Private`boxes, WolframAlphaClient`Private`fmt]]; If[WolframAlphaClient`Private`query === \"\", Return[Null]]; If[WolframAlphaClient`Private`doQuerySideEffects[WolframAlphaClient`Private`query], Return[Null]]; WolframAlphaClient`Private`result = WolframAlpha[WolframAlphaClient`Private`query, \"RawImageEditingQuery\", WolframAlphaClient`Private`opts]; Switch[WolframAlphaClient`Private`result, {Hold[_], Hold[{_, _, _}]}, WolframAlphaClient`Private`formatImageEditor[Dynamic[WolframAlphaClient`Private`ievars], WolframAlphaClient`Private`result, WolframAlphaClient`Private`imageThumbnail, WolframAlphaClient`Private`image, WolframAlphaClient`Private`query, WolframAlphaClient`Private`opts], {Hold[WolframAlphaClient`Private`expr_], Hold[Null]} \/; Cases[Hold[WolframAlphaClient`Private`expr], _Placeholder, Infinity] === {Placeholder[\"image\"]}, WolframAlphaClient`Private`formatImageEditor[Dynamic[WolframAlphaClient`Private`ievars], Replace[WolframAlphaClient`Private`result, {Hold[WolframAlphaClient`Private`expr_], Hold[Null]} :> {Hold[WolframAlphaClient`Private`expr], Hold[{WolframAlphaClient`Private`expr, {}, {}}]}], WolframAlphaClient`Private`imageThumbnail, WolframAlphaClient`Private`image, WolframAlphaClient`Private`query, WolframAlphaClient`Private`opts], $Failed, Grid[{{Dynamic[RawBoxes[FEPrivate`FrontEndResource[\"WABitmaps\", \"WAErrorIcon\"]]], Style[\"This feature requires internet connectivity. Please check your network connection.\", Gray]}}], _, Style[StringJoin[\"\\\"\", WolframAlphaClient`Private`query, \"\\\" is not currently supported\"], Gray]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: AlphaIntegration`ImageEditingQuery",
	"BoxForm`ImageEditMode":"ObjectType: Symbol\nUsage: BoxForm`ImageEditMode\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`ImageEditMode",
	"Image`ImageExp":"ObjectType: Symbol\nUsage: Image`ImageExp\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageExp[Image`CompositionOperationsDump`args___] := Block[{Image`CompositionOperationsDump`a, Image`CompositionOperationsDump`res}, Image`CompositionOperationsDump`a = System`Private`Arguments[Image`ImageExp[Image`CompositionOperationsDump`args], 1]; Image`CompositionOperationsDump`res \/; Image`CompositionOperationsDump`a =!= {} && (Image`CompositionOperationsDump`res = Image`CompositionOperationsDump`iImageExp[Image`CompositionOperationsDump`a[[1]]]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageExp",
	"System`ConvertersDump`ImageExportPreProcess":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImageExportPreProcess\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: System`ConvertersDump`ImageExportPreProcess[\"BMP\"][System`ConvertersDump`img_] := Switch[{\"AbsoluteColorSpace\", \"DataType\"} \/. Image`ImageInformation[Evaluate @@ System`ConvertersDump`img], {\"RGB\", _}, System`ConvertersDump`img, {\"Grayscale\", \"Bit\"}, System`ConvertersDump`img, _, Hold[Evaluate[ColorConvert[Evaluate @@ System`ConvertersDump`img, \"RGB\"]]]]\nSystem`ConvertersDump`ImageExportPreProcess[\"PGM\"][System`ConvertersDump`img_] := System`ConvertersDump`ImageExportPreProcessGeneric[System`ConvertersDump`img, \"Grayscale\" | \"RGB\", \"Grayscale\"]\nSystem`ConvertersDump`ImageExportPreProcess[\"TGA\" | \"PPM\" | \"PNM\" | \"PCX\" | \"JPEG2000\"][System`ConvertersDump`img_] := System`ConvertersDump`ImageExportPreProcessGeneric[System`ConvertersDump`img, \"Grayscale\" | \"RGB\", \"RGB\"]\nSystem`ConvertersDump`ImageExportPreProcess[\"SCT\"][System`ConvertersDump`img_] := System`ConvertersDump`ImageExportPreProcessGeneric[System`ConvertersDump`img, \"Grayscale\" | \"RGB\" | \"CMYK\", \"RGB\"]\nSystem`ConvertersDump`ImageExportPreProcess[_][System`ConvertersDump`img_] := System`ConvertersDump`img\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImageExportPreProcess",
	"System`ConvertersDump`ImageExportPreProcessGeneric":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImageExportPreProcessGeneric\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImageExportPreProcessGeneric[System`ConvertersDump`img_, System`ConvertersDump`accepted_, System`ConvertersDump`target_] := Which[ !MatchQ[\"AbsoluteColorSpace\" \/. Image`ImageInformation[Evaluate @@ System`ConvertersDump`img], System`ConvertersDump`accepted], Hold[Evaluate[ColorConvert[Evaluate @@ System`ConvertersDump`img, System`ConvertersDump`target]]], True, System`ConvertersDump`img]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImageExportPreProcessGeneric",
	"Image`ImageFileBlockApply":"ObjectType: Symbol\nUsage: Image`ImageFileBlockApply\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageFileBlockApply[Image`FilteringDump`args___] := Block[{Image`FilteringDump`a, Image`FilteringDump`res}, Image`FilteringDump`a = System`Private`Arguments[Image`ImageFileBlockApply[Image`FilteringDump`args], {2, 4}]; Image`FilteringDump`res \/; Image`FilteringDump`a =!= {} && (Image`FilteringDump`res = Image`IntegrationDump`iImageFileBlockApply @@ Image`FilteringDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ImageList -> All, MaxBlockSize -> 8000000, Padding -> Fixed}\nAttributes: {}\nFullName: Image`ImageFileBlockApply",
	"Image`ImageFileBlockScan":"ObjectType: Symbol\nUsage: Image`ImageFileBlockScan\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageFileBlockScan[Image`FilteringDump`args___] := Block[{Image`FilteringDump`a, Image`FilteringDump`res}, Image`FilteringDump`a = System`Private`Arguments[Image`ImageFileBlockScan[Image`FilteringDump`args], {2, 4}]; Image`FilteringDump`res \/; Image`FilteringDump`a =!= {} && (Image`FilteringDump`res = Image`IntegrationDump`iImageFileBlockScan @@ Image`FilteringDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ImageList -> All, MaxBlockSize -> 8000000, Padding -> Fixed}\nAttributes: {}\nFullName: Image`ImageFileBlockScan",
	"Image`SpatialOperationsDump`ImageFileThumbnail":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageFileThumbnail\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`SpatialOperationsDump`ImageFileThumbnail[Image`SpatialOperationsDump`args___] := Block[{Image`SpatialOperationsDump`a, Image`SpatialOperationsDump`res}, Image`SpatialOperationsDump`a = System`Private`Arguments[Image`SpatialOperationsDump`ImageFileThumbnail[Image`SpatialOperationsDump`args], {1, 7}]; Image`SpatialOperationsDump`res \/; Image`SpatialOperationsDump`a =!= {} && (Image`SpatialOperationsDump`res = Image`SpatialOperationsDump`iImageFileThumbnail[Image`SpatialOperationsDump`a[[1]]]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageFileThumbnail",
	"Image`SpatialOperationsDump`ImageFileThumbnailModifyMetaInformation":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageFileThumbnailModifyMetaInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`SpatialOperationsDump`ImageFileThumbnailModifyMetaInformation[Image`SpatialOperationsDump`args___] := Block[{Image`SpatialOperationsDump`a, Image`SpatialOperationsDump`res}, Image`SpatialOperationsDump`a = System`Private`Arguments[Image`SpatialOperationsDump`ImageFileThumbnailModifyMetaInformation[Image`SpatialOperationsDump`args], {1, 2}]; Image`SpatialOperationsDump`res \/; Image`SpatialOperationsDump`a =!= {} && (Image`SpatialOperationsDump`res = Image`SpatialOperationsDump`iImageFileThumbnailModifyMetaInformation[Image`SpatialOperationsDump`a[[1]]]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageFileThumbnailModifyMetaInformation",
	"Image`ImageFileViewer":"ObjectType: Symbol\nUsage: Image`ImageFileViewer\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageFileViewer[Image`ImageDump`args___] := Block[{Image`ImageDump`a, Image`ImageDump`res}, Image`ImageDump`a = System`Private`Arguments[Image`ImageFileViewer[Image`ImageDump`args], 1]; Image`ImageDump`res \/; Image`ImageDump`a =!= {} && (Image`ImageDump`res = Image`ImageDump`iImageFileViewer[Image`ImageDump`a[[1]]]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageFileViewer",
	"Image`ImportExportDump`ImageFrameCountPNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageFrameCountPNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageFrameCountPNG",
	"Image`ImportExportDump`ImageFrameCountTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageFrameCountTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageFrameCountTIFF",
	"Image`RegistrationDump`ImageFromLogPolar":"ObjectType: Symbol\nUsage: Image`RegistrationDump`ImageFromLogPolar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RegistrationDump`ImageFromLogPolar[Image`RegistrationDump`img_] := Module[{Image`RegistrationDump`w, Image`RegistrationDump`h, Image`RegistrationDump`W, Image`RegistrationDump`H, Image`RegistrationDump`k = 2}, {Image`RegistrationDump`w, Image`RegistrationDump`h} = ImageDimensions[Image`RegistrationDump`img]; {Image`RegistrationDump`W, Image`RegistrationDump`H} = Round[{Image`RegistrationDump`w, Image`RegistrationDump`h}\/Image`RegistrationDump`k]; ImageTransformation[Image`RegistrationDump`img, Image`RegistrationDump`ToLogPolar, {Image`RegistrationDump`W, Image`RegistrationDump`H}, DataRange -> {{-Pi, Pi}, {0, Log[1 + Sqrt[Image`RegistrationDump`w^2 + Image`RegistrationDump`h^2]\/2]}}, PlotRange -> {(Image`RegistrationDump`W*{-1, 1})\/2, (Image`RegistrationDump`H*{-1, 1})\/2}, Resampling -> \"Bilinear\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`RegistrationDump`ImageFromLogPolar",
	"Image`RegistrationDump`ImageFromPolar":"ObjectType: Symbol\nUsage: Image`RegistrationDump`ImageFromPolar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RegistrationDump`ImageFromPolar[Image`RegistrationDump`img_] := Module[{Image`RegistrationDump`w, Image`RegistrationDump`h, Image`RegistrationDump`W, Image`RegistrationDump`H, Image`RegistrationDump`k = 2}, {Image`RegistrationDump`w, Image`RegistrationDump`h} = ImageDimensions[Image`RegistrationDump`img]; {Image`RegistrationDump`W, Image`RegistrationDump`H} = Round[{Image`RegistrationDump`w, Image`RegistrationDump`h}\/Image`RegistrationDump`k]; ImageTransformation[Image`RegistrationDump`img, Image`RegistrationDump`ToPolar, {Image`RegistrationDump`W, Image`RegistrationDump`H}, DataRange -> {Pi*{-1, 1}, {0, Sqrt[Image`RegistrationDump`W^2 + Image`RegistrationDump`H^2]\/2}}, PlotRange -> {(Image`RegistrationDump`W*{-1, 1})\/2, (Image`RegistrationDump`H*{-1, 1})\/2}, Resampling -> \"Bilinear\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`RegistrationDump`ImageFromPolar",
	"Image`ImageFunction":"ObjectType: Symbol\nUsage: Image`ImageFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[Image`ImageFunction[Mean, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Mean, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Median, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Median, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Quantile, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Quantile, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[MedianDeviation, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[MedianDeviation, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[GeometricMean, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[GeometricMean, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[HarmonicMean, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[HarmonicMean, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[ContraharmonicMean, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[ContraharmonicMean, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[RootMeanSquare, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[RootMeanSquare, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Quartiles, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Quartiles, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Variance, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Variance, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[StandardDeviation, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[StandardDeviation, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[MeanDeviation, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[MeanDeviation, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[InterquartileRange, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[InterquartileRange, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[QuartileDeviation, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[QuartileDeviation, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[CentralMoment, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[CentralMoment, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Skewness, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Skewness, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Kurtosis, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Kurtosis, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[QuartileSkewness, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[QuartileSkewness, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Moment, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Moment, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[FactorialMoment, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[FactorialMoment, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Cumulant, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Cumulant, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[EmpiricalDistribution, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[EmpiricalDistribution, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[HistogramDistribution, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[HistogramDistribution, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[SmoothKernelDistribution, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[SmoothKernelDistribution, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[KernelMixtureDistribution, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[KernelMixtureDistribution, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[EstimatedDistribution, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[EstimatedDistribution, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[FindDistributionParameters, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[FindDistributionParameters, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Commonest, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Commonest, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[TrimmedMean, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[TrimmedMean, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Max, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Max, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Min, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Min, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[MinMax, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[MinMax, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Entropy, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Entropy, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Total, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[Total, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[TrimmedVariance, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[TrimmedVariance, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[WinsorizedMean, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[WinsorizedMean, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[WinsorizedVariance, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[WinsorizedVariance, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[QnDispersion, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[QnDispersion, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[SnDispersion, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[SnDispersion, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[BiweightMidvariance, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[BiweightMidvariance, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[BiweightLocation, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[BiweightLocation, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[SpatialMedian, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[SpatialMedian, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[CentralFeature, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`imageDescriptiveStatisticsFunction[CentralFeature, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Clip, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`filterFunction[Clip, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nHoldPattern[Image`ImageFunction[Chop, (Image`IntegrationDump`a_)?ImageQ, Image`IntegrationDump`args___]] := Module[{Image`IntegrationDump`res = Image`IntegrationDump`filterFunction[Chop, Image`IntegrationDump`a, Image`IntegrationDump`args]}, Image`IntegrationDump`res \/; Image`IntegrationDump`res =!= $Failed]\nImage`ImageFunction[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageFunction",
	"Image`ImageHoughCircles":"ObjectType: Symbol\nUsage: Image`ImageHoughCircles\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageHoughCircles[Image`TransformsDump`s___] := Block[{Image`TransformsDump`a, Image`TransformsDump`r}, Image`TransformsDump`a = System`Private`Arguments[Image`ImageHoughCircles[Image`TransformsDump`s], {1, 4}, List, Image`TransformsDump`ImageHoughCirclesHiddenOptions]; Image`TransformsDump`r \/; Image`TransformsDump`a =!= {} && (Image`TransformsDump`r = Image`TransformsDump`iImageHoughCircles @@ Image`TransformsDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxFeatures -> All}\nAttributes: {}\nFullName: Image`ImageHoughCircles",
	"Image`TransformsDump`ImageHoughCirclesHiddenOptions":"None",
	"Image`ImageInformation":"ObjectType: Symbol\nUsage: Image`ImageInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageInformation",
	"Image`ImageInterleaved":"ObjectType: Symbol\nUsage: Image`ImageInterleaved\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageInterleaved[Image`ImageDump`args___] := Block[{Image`ImageDump`a, Image`ImageDump`res}, Image`ImageDump`a = System`Private`Arguments[Image`ImageInterleaved[Image`ImageDump`args], 1]; Image`ImageDump`res \/; Image`ImageDump`a =!= {} && (Image`ImageDump`res = Image`ImageDump`iImageInterleaved[Image`ImageDump`a[[1]]]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageInterleaved",
	"Image`ImageDump`ImageJaehneIPP":"ObjectType: Symbol\nUsage: Image`ImageDump`ImageJaehneIPP\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageDump`ImageJaehneIPP",
	"Image`ImageLog":"ObjectType: Symbol\nUsage: Image`ImageLog\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageLog[Image`CompositionOperationsDump`args___] := Block[{Image`CompositionOperationsDump`a, Image`CompositionOperationsDump`res}, Image`CompositionOperationsDump`a = System`Private`Arguments[Image`ImageLog[Image`CompositionOperationsDump`args], {1, 2}]; Image`CompositionOperationsDump`res \/; Image`CompositionOperationsDump`a =!= {} && (Image`CompositionOperationsDump`res = Image`CompositionOperationsDump`iImageLog @@ Image`CompositionOperationsDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IndeterminateValue -> 1}\nAttributes: {}\nFullName: Image`ImageLog",
	"Image`ImageMarginals":"ObjectType: Symbol\nUsage: Image`ImageMarginals\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageMarginals",
	"Image`FeaturesDump`ImageNonMaxSuppression":"ObjectType: Symbol\nUsage: Image`FeaturesDump`ImageNonMaxSuppression\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`FeaturesDump`ImageNonMaxSuppression[Image`Utilities`img_ \/; ImageChannels[Image`Utilities`img] == 1, {Image`FeaturesDump`r1_, Image`FeaturesDump`r2_}, Image`FeaturesDump`strengthfraction_:1.] := Image[Image`FeaturesDump`nonMaxSuppression[ImageData[Image`Utilities`img], {Image`FeaturesDump`r1, Image`FeaturesDump`r2}, If[ !TrueQ[Inequality[0, Less, Image`FeaturesDump`strengthfraction, LessEqual, 1]], 1., Image`FeaturesDump`strengthfraction]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FeaturesDump`ImageNonMaxSuppression",
	"Image`SpatialOperationsDump`ImagePartitionInternal":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImagePartitionInternal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImagePartitionInternal",
	"Image`Utilities`ImagePerformance":"ObjectType: Symbol\nUsage: Image`Utilities`ImagePerformance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`Utilities`ImagePerformance[Image`Utilities`Private`expr__] := Block[{Image`Utilities`Private`res}, Image`Utilities`Private`res = Image`Utilities`Private`imagePerformance[Image`Utilities`Private`expr]; Image`Utilities`Private`res \/; Image`Utilities`Private`res =!= $Failed]\nImage`Utilities`ImagePerformance[Image`Utilities`Private`expr___] := (Image`Utilities`Private`messageImagePerformance[Image`Utilities`Private`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`Utilities`ImagePerformance",
	"Image`ImagePower":"ObjectType: Symbol\nUsage: Image`ImagePower\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImagePower[Image`CompositionOperationsDump`args___] := Block[{Image`CompositionOperationsDump`a, Image`CompositionOperationsDump`res}, Image`CompositionOperationsDump`a = System`Private`Arguments[Image`ImagePower[Image`CompositionOperationsDump`args], 2]; Image`CompositionOperationsDump`res \/; Image`CompositionOperationsDump`a =!= {} && (Image`CompositionOperationsDump`res = Image`CompositionOperationsDump`iImagePower @@ Image`CompositionOperationsDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IndeterminateValue -> 1}\nAttributes: {}\nFullName: Image`ImagePower",
	"Internal`ImageProcessingOptions":"ObjectType: Symbol\nUsage: Internal`ImageProcessingOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ImageProcessingOptions",
	"Image`ImagePyramidApplyIndexed":"ObjectType: Symbol\nUsage: Image`ImagePyramidApplyIndexed\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImagePyramidApplyIndexed[Image`ImageDump`s___] := Block[{Image`ImageDump`a, Image`ImageDump`r}, Image`ImageDump`a = System`Private`Arguments[Image`ImagePyramidApplyIndexed[Image`ImageDump`s], {2, 2}]; Image`ImageDump`r \/; Image`ImageDump`a =!= {} && (Image`ImageDump`r = Image`TransformsDump`iImagePyramidApplyIndexed @@ Image`ImageDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImagePyramidApplyIndexed",
	"Image`TransformsDump`ImagePyramidCollage":"ObjectType: Symbol\nUsage: Image`TransformsDump`ImagePyramidCollage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`ImagePyramidCollage[{(Image`Utilities`img_)?ImageQ}] := Grid[{{Image`Utilities`img}}, Alignment -> {Left, Top}, Spacings -> {0, 0}, ItemSize -> {0, 0}]\nImage`TransformsDump`ImagePyramidCollage[{(Image`ImageDump`img1_)?ImageQ, (Image`ImageDump`img2_)?ImageQ}] := Grid[{{Image`ImageDump`img1, Image`ImageDump`img2}}, Alignment -> {Left, Top}, Spacings -> {0, 0}, ItemSize -> {0, 0}]\nImage`TransformsDump`ImagePyramidCollage[{(Image`ImageDump`img1_)?ImageQ, (Image`ImageDump`img2_)?ImageQ, (Image`TransformsDump`img3__)?ImageQ}] := Grid[{{Image`ImageDump`img1, Image`ImageDump`img2}, {SpanFromAbove, Image`TransformsDump`ImagePyramidCollage[{Image`TransformsDump`img3}]}}, Alignment -> {Left, Top}, Spacings -> {0, 0}, ItemSize -> {0, 0}]\nImage`TransformsDump`ImagePyramidCollage[(Image`TransformsDump`ip_)?Image`TransformsDump`ImagePyramidQ] := With[{Image`TransformsDump`m = (360*CurrentValue[Magnification])\/N[Norm[First[Image`TransformsDump`ip[\"ImageDimensions\"], 360]]]}, Image`TransformsDump`ImagePyramidCollage[(Head[#1][#1, Magnification -> Image`TransformsDump`m] & ) \/@ Image`TransformsDump`ip[\"Levels\"]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`ImagePyramidCollage",
	"Image`TransformsDump`ImagePyramidHiddenOptions":"None",
	"Image`TransformsDump`ImagePyramidProperties":"None",
	"Image`TransformsDump`ImagePyramidQ":"ObjectType: Symbol\nUsage: Image`TransformsDump`ImagePyramidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`ImagePyramidQ[HoldPattern[ImagePyramid[Image`TransformsDump`props_Association]]] := Block[{Image`ImageDump`rank}, ArrayQ[Image`TransformsDump`props[\"Levels\"], 1, ImageQ] && Image`TransformsDump`props[\"ImageDimensions\"] === ImageDimensions \/@ Image`TransformsDump`props[\"Levels\"] && Image`TransformsDump`props[\"LevelCount\"] === Length[Image`TransformsDump`props[\"Levels\"]] && Internal`RealValuedNumericQ[Image`TransformsDump`props[\"ScalingFactor\"]] && TrueQ[1 < Image`TransformsDump`props[\"ScalingFactor\"]] && IntervalMemberQ[Image`TransformsDump`scaleFactorInterval[Image`TransformsDump`props[\"ImageDimensions\"]], Image`TransformsDump`props[\"ScalingFactor\"]] && Image`MorphologicalOperationsDump`CheckPaddingOpt[Image`TransformsDump`props[\"Padding\"]] && Signal`Resampling`CheckResamplingOpt[Image`TransformsDump`props[\"KernelSampling\"]] && (Image`ImageDump`rank = Length[ImageDimensions[First[Image`TransformsDump`props[\"Levels\"]]]]; Image`ImageDump`ResamplingOptionForImageQ[Image`TransformsDump`props[\"LowpassKernel\"]] || ArrayQ[Image`TransformsDump`props[\"LowpassKernel\"], 1 | Image`ImageDump`rank, Internal`RealValuedNumericQ]) && (MatchQ[Image`TransformsDump`props[\"HighpassKernel\"], Automatic] || Image`ImageDump`ResamplingOptionForImageQ[Image`TransformsDump`props[\"HighpassKernel\"]] || ArrayQ[Image`TransformsDump`props[\"HighpassKernel\"], 1 | Image`ImageDump`rank, Internal`RealValuedNumericQ])]\nImage`TransformsDump`ImagePyramidQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`ImagePyramidQ",
	"Image`ImagePyramidTake":"ObjectType: Symbol\nUsage: Image`ImagePyramidTake\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImagePyramidTake[Image`ImageDump`s___] := Block[{Image`ImageDump`a, Image`ImageDump`r}, Image`ImageDump`a = System`Private`Arguments[Image`ImagePyramidTake[Image`ImageDump`s], {2, 2}, List, {}]; Image`ImageDump`r \/; Image`ImageDump`a =!= {} && (Image`ImageDump`r = Image`TransformsDump`iImagePyramidTake @@ Image`ImageDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {}\nAttributes: {}\nFullName: Image`ImagePyramidTake",
	"Image`ImportExportDump`ImageReadColormapJPEG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadColormapJPEG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadColormapJPEG",
	"Image`ImportExportDump`ImageReadColormapPNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadColormapPNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadColormapPNG",
	"Image`ImportExportDump`ImageReadColormapTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadColormapTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadColormapTIFF",
	"Image`ImportExportDump`ImageReadFITS":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadFITS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadFITS",
	"Image`ImportExportDump`ImageReadFromNumericArrayPNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadFromNumericArrayPNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadFromNumericArrayPNG",
	"Image`ImportExportDump`ImageReadICCProfileJPEG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadICCProfileJPEG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadICCProfileJPEG",
	"Image`ImportExportDump`ImageReadICCProfilePNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadICCProfilePNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadICCProfilePNG",
	"Image`ImportExportDump`ImageReadICCProfileTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadICCProfileTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadICCProfileTIFF",
	"Image`ImportExportDump`ImageReadJPEG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadJPEG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadJPEG",
	"Image`ImportExportDump`ImageReadMetadataJPEG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadMetadataJPEG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadMetadataJPEG",
	"Image`ImportExportDump`ImageReadMetadataPNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadMetadataPNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadMetadataPNG",
	"Image`ImportExportDump`ImageReadMetadataTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadMetadataTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadMetadataTIFF",
	"Image`ImportExportDump`ImageReadPNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadPNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadPNG",
	"Image`ImportExportDump`ImageReadStripedTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadStripedTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadStripedTIFF",
	"Image`ImportExportDump`ImageReadTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadTIFF",
	"Image`ImportExportDump`ImageReadTiledTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadTiledTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadTiledTIFF",
	"Image`ImportExportDump`ImageReadTileTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageReadTileTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageReadTileTIFF",
	"Image`ImageRectangle":"ObjectType: Symbol\nUsage: ImageRectangle[img, Dynamic[s, None], Dynamic[{x, y}, None], Dynamic[{w, h}, None], Dynamic[{W, H}, None]] returns a Graphics Inset of width w and height h exhibiting the image of size {W, H}.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`ImageRectangle[Image`InteractiveDump`img_, Dynamic[Image`InteractiveDump`s_, None], Dynamic[{Image`InteractiveDump`x_, Image`InteractiveDump`y_}, None], Dynamic[{Image`InteractiveDump`width_, Image`InteractiveDump`height_}, None], Dynamic[{Image`InteractiveDump`W_, Image`InteractiveDump`H_}, None], OptionsPattern[]] := DynamicModule[{Image`InteractiveDump`left, Image`InteractiveDump`right, Image`InteractiveDump`bottom, Image`InteractiveDump`top, Image`InteractiveDump`stepSize}, Dynamic[Image`InteractiveDump`left = Clip[Image`InteractiveDump`x*(Image`InteractiveDump`W - Image`InteractiveDump`width\/Image`InteractiveDump`s), {0, Image`InteractiveDump`W}]; Image`InteractiveDump`right = Clip[(Image`InteractiveDump`width*(1 - Image`InteractiveDump`x) + Image`InteractiveDump`s*Image`InteractiveDump`W*Image`InteractiveDump`x)\/Image`InteractiveDump`s, {0, Image`InteractiveDump`W}]; Image`InteractiveDump`bottom = Clip[Image`InteractiveDump`y*(Image`InteractiveDump`H - Image`InteractiveDump`height\/Image`InteractiveDump`s), {0, Image`InteractiveDump`H}]; Image`InteractiveDump`top = Clip[(Image`InteractiveDump`height*(1 - Image`InteractiveDump`y) + Image`InteractiveDump`s*Image`InteractiveDump`H*Image`InteractiveDump`y)\/Image`InteractiveDump`s, {0, Image`InteractiveDump`H}]; Image`InteractiveDump`stepSize = Max[Floor[1\/Image`InteractiveDump`s], 1]; Quiet[Check[Inset[ImageTake[Image`InteractiveDump`img, {Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`stepSize] + 1, Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize], Image`InteractiveDump`stepSize}, {Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize] + 1, Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`stepSize], Image`InteractiveDump`stepSize}], {Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize], Image`InteractiveDump`H - Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize]}, {Left, Bottom}, {Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize], Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`stepSize]}], Inset[\"image\\nmissing\", Scaled[{0.5, 0.5}], {Center, Center}, {Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize], Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`stepSize]}]]], None, TrackedSymbols :> {Image`InteractiveDump`s, Image`InteractiveDump`x, Image`InteractiveDump`y, Image`InteractiveDump`W, Image`InteractiveDump`H, Image`InteractiveDump`width, Image`InteractiveDump`height}]] \/;  !StringQ[Image`InteractiveDump`img]\nImage`ImageRectangle[Image`InteractiveDump`file_, Dynamic[Image`InteractiveDump`s_, None], Dynamic[{Image`InteractiveDump`x_, Image`InteractiveDump`y_}, None], Dynamic[{Image`InteractiveDump`width_, Image`InteractiveDump`height_}, None], Dynamic[{Image`InteractiveDump`W_, Image`InteractiveDump`H_}, None], OptionsPattern[]] := DynamicModule[{Image`InteractiveDump`left, Image`InteractiveDump`right, Image`InteractiveDump`bottom, Image`InteractiveDump`top, Image`InteractiveDump`preview, Image`InteractiveDump`previewFactor = Ceiling[Sqrt[FileByteCount[Image`InteractiveDump`file]\/Image`InteractiveDump`previewByteSize]], Image`InteractiveDump`stepSize}, Dynamic[Image`InteractiveDump`left = Clip[Image`InteractiveDump`x*(Image`InteractiveDump`W - Image`InteractiveDump`width\/Image`InteractiveDump`s), {0, Image`InteractiveDump`W}]; Image`InteractiveDump`right = Clip[(Image`InteractiveDump`width*(1 - Image`InteractiveDump`x) + Image`InteractiveDump`s*Image`InteractiveDump`W*Image`InteractiveDump`x)\/Image`InteractiveDump`s, {0, Image`InteractiveDump`W}]; Image`InteractiveDump`bottom = Clip[Image`InteractiveDump`y*(Image`InteractiveDump`H - Image`InteractiveDump`height\/Image`InteractiveDump`s), {0, Image`InteractiveDump`H}]; Image`InteractiveDump`top = Clip[(Image`InteractiveDump`height*(1 - Image`InteractiveDump`y) + Image`InteractiveDump`s*Image`InteractiveDump`H*Image`InteractiveDump`y)\/Image`InteractiveDump`s, {0, Image`InteractiveDump`H}]; Image`InteractiveDump`stepSize = Max[Floor[1\/Image`InteractiveDump`s], 1]; If[Image`InteractiveDump`stepSize < Image`InteractiveDump`previewFactor, Inset[ImageTake[Import[Image`InteractiveDump`file, \"TakeRows\" -> {Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`stepSize] + 1, Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize]}], {1, -1, Image`InteractiveDump`stepSize}, {Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize] + 1, Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`stepSize], Image`InteractiveDump`stepSize}], {Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize], Image`InteractiveDump`H - Ceiling[1 - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize]}, {Left, Bottom}, {Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize], Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`stepSize]}], With[{Image`InteractiveDump`pStepSize = Floor[Image`InteractiveDump`stepSize, Image`InteractiveDump`previewFactor]}, Inset[ImageTake[Image`InteractiveDump`preview, {Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`pStepSize]\/Image`InteractiveDump`previewFactor + 1, Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`pStepSize]\/Image`InteractiveDump`previewFactor}, {Floor[Image`InteractiveDump`left, Image`InteractiveDump`pStepSize]\/Image`InteractiveDump`previewFactor + 1, Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`pStepSize]\/Image`InteractiveDump`previewFactor}], {Floor[Image`InteractiveDump`left, Image`InteractiveDump`pStepSize], Image`InteractiveDump`H - Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`pStepSize]}, {Left, Bottom}, {Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`pStepSize] - Floor[Image`InteractiveDump`left, Image`InteractiveDump`pStepSize], Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`pStepSize] - Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`pStepSize]}]], Inset[\"image\\nmissing\", Scaled[{0.5, 0.5}], {Center, Center}, {Ceiling[Image`InteractiveDump`right, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`left, Image`InteractiveDump`stepSize], Ceiling[Image`InteractiveDump`H - Image`InteractiveDump`bottom, Image`InteractiveDump`stepSize] - Floor[Image`InteractiveDump`H - Image`InteractiveDump`top, Image`InteractiveDump`stepSize]}]], None, TrackedSymbols :> {Image`InteractiveDump`s, Image`InteractiveDump`x, Image`InteractiveDump`y, Image`InteractiveDump`width, Image`InteractiveDump`height, Image`InteractiveDump`W, Image`InteractiveDump`H}], Initialization :> (Image`InteractiveDump`preview = Thumbnail[Image`InteractiveDump`file, Scaled[1\/Image`InteractiveDump`previewFactor], Padding -> None]; )] \/; StringQ[Image`InteractiveDump`file]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {}\nAttributes: {HoldFirst}\nFullName: Image`ImageRectangle",
	"Experimental`ImageRescale":"ObjectType: Symbol\nUsage: Experimental`ImageRescale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {RoundToInteger -> False}\nAttributes: {}\nFullName: Experimental`ImageRescale",
	"Image`CompositionOperationsDump`ImageResizeCrop":"ObjectType: Symbol\nUsage: Image`CompositionOperationsDump`ImageResizeCrop\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`CompositionOperationsDump`ImageResizeCrop[Image`CompositionOperationsDump`img_Image, Image`CompositionOperationsDump`size_List, OptionsPattern[Image`CompositionOperationsDump`ImageResizeCrop]] := With[{Image`CompositionOperationsDump`imgsize = Image`CompositionOperationsDump`size - Plus @@ Transpose[OptionValue[ImagePadding]], Image`CompositionOperationsDump`padFun = ImagePad[#1, OptionValue[ImagePadding], OptionValue[Padding]] & }, Image`CompositionOperationsDump`padFun[ImageCrop[ImageResize[Image`CompositionOperationsDump`img, Scaled[Max[Image`CompositionOperationsDump`imgsize\/ImageDimensions[Image`CompositionOperationsDump`img]]], Resampling -> OptionValue[Resampling]], Image`CompositionOperationsDump`imgsize, Padding -> OptionValue[Background]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Background -> GrayLevel[0.2], ImagePadding -> 0, Padding -> Automatic, Resampling -> Automatic}\nAttributes: {}\nFullName: Image`CompositionOperationsDump`ImageResizeCrop",
	"Image`CompositionOperationsDump`ImageResizeSafe":"ObjectType: Symbol\nUsage: Image`CompositionOperationsDump`ImageResizeSafe\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`CompositionOperationsDump`ImageResizeSafe[Image`CompositionOperationsDump`img_Image, Image`CompositionOperationsDump`size_List, OptionsPattern[Image`CompositionOperationsDump`ImageResizeSafe]] := With[{Image`CompositionOperationsDump`imgsize = Image`CompositionOperationsDump`size - Plus @@ Transpose[OptionValue[ImagePadding]], Image`CompositionOperationsDump`padFun = ImagePad[#1, OptionValue[ImagePadding], OptionValue[Padding]] & }, ImageCrop[Image`CompositionOperationsDump`padFun[ImageResize[Image`CompositionOperationsDump`img, Scaled[Min[Image`CompositionOperationsDump`imgsize\/ImageDimensions[Image`CompositionOperationsDump`img]]], Resampling -> OptionValue[Resampling]]], Image`CompositionOperationsDump`size, Padding -> OptionValue[Background]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Background -> GrayLevel[0.2], ImagePadding -> 0, Padding -> Automatic, Resampling -> Automatic}\nAttributes: {}\nFullName: Image`CompositionOperationsDump`ImageResizeSafe",
	"Image`CompositionOperationsDump`ImageResizeStretch":"ObjectType: Symbol\nUsage: Image`CompositionOperationsDump`ImageResizeStretch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`CompositionOperationsDump`ImageResizeStretch[Image`CompositionOperationsDump`img_Image, Image`CompositionOperationsDump`size_List, OptionsPattern[Image`CompositionOperationsDump`ImageResizeStretch]] := With[{Image`CompositionOperationsDump`imgsize = Image`CompositionOperationsDump`size - Plus @@ Transpose[OptionValue[ImagePadding]], Image`CompositionOperationsDump`padFun = ImagePad[#1, OptionValue[ImagePadding], OptionValue[Padding]] & }, Image`CompositionOperationsDump`padFun[ImageResize[Image`CompositionOperationsDump`img, Image`CompositionOperationsDump`imgsize, Resampling -> OptionValue[Resampling]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Background -> GrayLevel[0.2], ImagePadding -> 0, Padding -> Automatic, Resampling -> Automatic}\nAttributes: {}\nFullName: Image`CompositionOperationsDump`ImageResizeStretch",
	"Image`TransformsDump`ImageShow":"ObjectType: Symbol\nUsage: Image`TransformsDump`ImageShow\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`ImageShow",
	"Image`FeaturesDump`ImageShowKeyPoints":"ObjectType: Symbol\nUsage: Image`FeaturesDump`ImageShowKeyPoints\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`FeaturesDump`ImageShowKeyPoints[Image`Utilities`img_, Image`FeaturesDump`pts_, Image`FeaturesDump`scales_, Image`FeaturesDump`orientations_, Image`FeaturesDump`contrast_] := Module[{Image`FeaturesDump`pos = Image`FeaturesDump`pts, Image`FeaturesDump`cols = {Red, Blue}, Image`FeaturesDump`SCALEFACTOR = 2.5, Image`Utilities`i}, Show[Image`ToGraphicsRaster[Image`Utilities`img], Graphics[Table[{{If[Image`FeaturesDump`contrast[[Image`Utilities`i]] == 1, Image`FeaturesDump`cols[[1]], Image`FeaturesDump`cols[[2]]], Circle[Image`FeaturesDump`pos[[Image`Utilities`i]], Image`FeaturesDump`scales[[Image`Utilities`i]]*Image`FeaturesDump`SCALEFACTOR], Line[{Image`FeaturesDump`pos[[Image`Utilities`i]], Image`FeaturesDump`pos[[Image`Utilities`i]] + Image`FeaturesDump`scales[[Image`Utilities`i]]*Image`FeaturesDump`SCALEFACTOR*{Cos[Image`FeaturesDump`orientations[[Image`Utilities`i]]], Sin[Image`FeaturesDump`orientations[[Image`Utilities`i]]]}}]}}, {Image`Utilities`i, Length[Image`FeaturesDump`pos]}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FeaturesDump`ImageShowKeyPoints",
	"Image`FeaturesDump`ImageShowKeyPointsNumbered":"ObjectType: Symbol\nUsage: Image`FeaturesDump`ImageShowKeyPointsNumbered\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`FeaturesDump`ImageShowKeyPointsNumbered[Image`Utilities`img_, Image`FeaturesDump`pts_] := Module[{Image`FeaturesDump`pos = Image`FeaturesDump`pts, Image`Utilities`i}, Image`TransformsDump`ImageShow[Image`Utilities`img, Graphics[Table[{{Pink, Disk[Image`FeaturesDump`pos[[Image`Utilities`i]], Offset[14\/2]]}, Text[Style[Image`Utilities`i, 14], Image`FeaturesDump`pos[[Image`Utilities`i]]]}, {Image`Utilities`i, Length[Image`FeaturesDump`pos]}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`FeaturesDump`ImageShowKeyPointsNumbered",
	"Image`TransformsDump`ImageShowLines":"ObjectType: Symbol\nUsage: Image`TransformsDump`ImageShowLines\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`TransformsDump`ImageShowLines[(Image`TransformsDump`img_)?ImageQ, Image`TransformsDump`lspec_] := Image`TransformsDump`ImageShow[Image`TransformsDump`img, Graphics[{Thick, Red, Line \/@ Image`TransformsDump`lspec}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`TransformsDump`ImageShowLines",
	"System`ConvertersDump`FormatUtilities`ImageSizeConstraintsPatternQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`ImageSizeConstraintsPatternQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`ImageSizeConstraintsPatternQ[Automatic | None | \"MultipleOfTwo\" | \"MultipleOfFour\" | \"MultipleOfEight\" | \"MultipleOfSixteen\"] := True\nSystem`ConvertersDump`FormatUtilities`ImageSizeConstraintsPatternQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`ImageSizeConstraintsPatternQ",
	"System`ConvertersDump`FormatUtilities`ImageSizePatternQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`ImageSizePatternQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`ImageSizePatternQ[Automatic | Tiny | Small | Medium | Large | _?Internal`PositiveMachineIntegerQ | _?System`ConvertersDump`FormatUtilities`PairOfPositiveMachineIntegersQ] := True\nSystem`ConvertersDump`FormatUtilities`ImageSizePatternQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`ImageSizePatternQ",
	"Visualization`Utilities`ImageSizeQ":"ObjectType: Symbol\nUsage: Visualization`Utilities`ImageSizeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`ImageSizeQ",
	"BoxForm`ImageSizeRules":"ObjectType: Symbol\nUsage: BoxForm`ImageSizeRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`ImageSizeRules",
	"Image`ImageSliceMap":"ObjectType: Symbol\nUsage: Image`ImageSliceMap\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImageSliceMap",
	"BoxForm`ImageTag":"ObjectType: Symbol\nUsage: BoxForm`ImageTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`ImageTag",
	"Image`RegistrationDump`ImageToLogPolar":"ObjectType: Symbol\nUsage: Image`RegistrationDump`ImageToLogPolar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RegistrationDump`ImageToLogPolar[Image`RegistrationDump`img_] := Module[{Image`RegistrationDump`w, Image`RegistrationDump`h, Image`RegistrationDump`W, Image`RegistrationDump`H, Image`RegistrationDump`k = 2}, {Image`RegistrationDump`w, Image`RegistrationDump`h} = ImageDimensions[Image`RegistrationDump`img]; {Image`RegistrationDump`W, Image`RegistrationDump`H} = Image`RegistrationDump`k*{Image`RegistrationDump`w, Image`RegistrationDump`h}; ImageTransformation[Image`RegistrationDump`img, Image`RegistrationDump`FromLogPolar, {Image`RegistrationDump`W, Image`RegistrationDump`H}, DataRange -> {(Image`RegistrationDump`w*{-1, 1})\/2, (Image`RegistrationDump`h*{-1, 1})\/2}, PlotRange -> {{-Pi, Pi}, {0, Log[1 + Sqrt[Image`RegistrationDump`w^2 + Image`RegistrationDump`h^2]\/2]}}, Resampling -> \"Bilinear\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`RegistrationDump`ImageToLogPolar",
	"Image`RegistrationDump`ImageToPolar":"ObjectType: Symbol\nUsage: Image`RegistrationDump`ImageToPolar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`RegistrationDump`ImageToPolar[Image`RegistrationDump`img_] := Module[{Image`RegistrationDump`w, Image`RegistrationDump`h, Image`RegistrationDump`W, Image`RegistrationDump`H, Image`RegistrationDump`k = 2}, {Image`RegistrationDump`w, Image`RegistrationDump`h} = ImageDimensions[Image`RegistrationDump`img]; {Image`RegistrationDump`W, Image`RegistrationDump`H} = Image`RegistrationDump`k*{Image`RegistrationDump`w, Image`RegistrationDump`h}; ImageTransformation[Image`RegistrationDump`img, Image`RegistrationDump`FromPolar, {Image`RegistrationDump`W, Image`RegistrationDump`H}, DataRange -> {(Image`RegistrationDump`w*{-1, 1})\/2, (Image`RegistrationDump`h*{-1, 1})\/2}, PlotRange -> {Pi*{-1, 1}, {0, Sqrt[Image`RegistrationDump`w^2 + Image`RegistrationDump`h^2]\/2}}, Resampling -> \"Bilinear\"]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`RegistrationDump`ImageToPolar",
	"Image`SpatialOperationsDump`ImageTransformation":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageTransformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Background -> 0, DataRange -> Automatic, Masking -> Full, Padding -> 0, PlotRange -> Automatic, Resampling -> Automatic}\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageTransformation",
	"Image`SpatialOperationsDump`ImageUpsample":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageUpsample\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageUpsample",
	"Image`SpatialOperationsDump`ImageValue":"ObjectType: Symbol\nUsage: Image`SpatialOperationsDump`ImageValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`SpatialOperationsDump`ImageValue",
	"Image`ImportExportDump`ImageWriteColormapPNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWriteColormapPNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWriteColormapPNG",
	"Image`ImportExportDump`ImageWriteColormapTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWriteColormapTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWriteColormapTIFF",
	"Image`ImportExportDump`ImageWriteFITS":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWriteFITS\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWriteFITS",
	"Image`ImportExportDump`ImageWriteJPEG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWriteJPEG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWriteJPEG",
	"Image`ImportExportDump`ImageWritePNG":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWritePNG\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWritePNG",
	"Image`ImportExportDump`ImageWriteTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWriteTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWriteTIFF",
	"Image`ImportExportDump`ImageWriteTileTIFF":"ObjectType: Symbol\nUsage: Image`ImportExportDump`ImageWriteTileTIFF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ImportExportDump`ImageWriteTileTIFF",
	"IMAPLink`IMAPConnect":"ObjectType: Symbol\nUsage: IMAPLink`IMAPConnect\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: IMAPLink`IMAPConnect[(IMAPLink`Private`data_)?AssociationQ] := Module[{IMAPLink`Private`handle, IMAPLink`Private`result, IMAPLink`Private`url = Lookup[IMAPLink`Private`data, \"URL\", None], IMAPLink`Private`username = Lookup[IMAPLink`Private`data, \"Username\", None], IMAPLink`Private`domain}, IMAPLink`Private`handle = IMAPLink`Private`setConnectionOptions[IMAPLink`Private`data]; IMAPLink`Private`result = IMAPLink`Private`establishConnection[IMAPLink`Private`handle]; IMAPLink`Private`domain = IMAPLink`Private`getDomain[IMAPLink`Private`url]; IMAPLink`Private`result = Join[Association[\"URL\" -> IMAPLink`Private`url, \"ObjectType\" -> \"Server\", \"Username\" -> IMAPLink`Private`username, \"Domain\" -> IMAPLink`Private`domain], IMAPLink`Private`result]; Association[\"Connection\" -> KeyTake[IMAPLink`Private`result, {\"Username\", \"InternalID\", \"URL\", \"Domain\"}], \"Folders\" -> IMAPLink`Private`result[\"Folders\"]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: IMAPLink`IMAPConnect",
	"IMAPLink`IMAPExecute":"ObjectType: Symbol\nUsage: IMAPLink`IMAPExecute\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: IMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"ExamineFolder\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`res, IMAPLink`Private`rawres, IMAPLink`Private`command, IMAPLink`Private`dir, IMAPLink`Private`prettyFolderName, IMAPLink`Private`folderPath}, IMAPLink`Private`resetConnection[IMAPLink`Private`connection]; IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"]; IMAPLink`Private`dir = IMAPLink`Private`createLocalDirectory[IMAPLink`Private`connection, IMAPLink`Private`params]; IMAPLink`Private`command = StringTemplate[\"STATUS \\\"`1`\\\" (UNSEEN MESSAGES)\"][IMAPLink`Private`folderPath]; IMAPLink`Private`rawres = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, IMAPLink`Private`command]; IMAPLink`Private`prettyFolderName = IMAPLink`Utilities`import[IMAPLink`Private`folderPath, \"PrettyFolderName\"]; IMAPLink`Private`res = IMAPLink`Utilities`import[IMAPLink`Private`rawres, \"ExamineFolder\"]; IMAPLink`Private`res = Join[IMAPLink`Private`res, Association[\"Path\" -> IMAPLink`Private`folderPath, \"Name\" -> IMAPLink`Private`prettyFolderName, \"Directory\" -> File[IMAPLink`Private`dir], \"ObjectType\" -> \"MailFolder\", \"Connection\" -> IMAPLink`Private`connection]]; IMAPLink`Private`res]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"CreateFolder\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`res, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"]}, IMAPLink`Private`res = IMAPLink`IMAPExecute[IMAPLink`Private`connection, StringJoin[{\"CREATE\", \" \", IMAPLink`Private`folderPath}]]; IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"ExamineFolder\", {\"Path\" -> IMAPLink`Private`folderPath}]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"SelectFolder\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`prettyFolderName, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"], IMAPLink`Private`rawres, IMAPLink`Private`command, IMAPLink`Private`dir, IMAPLink`Private`res}, Catch[IMAPLink`Private`resetConnection[IMAPLink`Private`connection]; IMAPLink`Private`dir = IMAPLink`Private`createLocalDirectory[IMAPLink`Private`connection, IMAPLink`Private`params]; IMAPLink`Private`prettyFolderName = IMAPLink`Utilities`import[IMAPLink`Private`folderPath, \"PrettyFolderName\"]; IMAPLink`Private`command = ToString[StringForm[\"SELECT \\\"`1`\\\"\", IMAPLink`Private`folderPath]]; IMAPLink`Private`rawres = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, IMAPLink`Private`command]; If[StringContainsQ[IMAPLink`Private`rawres, \"NO SELECT failed\"] || StringContainsQ[IMAPLink`Private`rawres, \"NONEXISTENT\"] || StringContainsQ[IMAPLink`Private`rawres, ToString[StringForm[\"NO `1` doesn't exist\", IMAPLink`Private`folderPath]]], Throw[{$Failed, \"NonExistentFolder\", IMAPLink`Private`folderPath}, IMAPLink`exception]]; IMAPLink`Private`command = ToString[StringForm[\"STATUS \\\"`1`\\\" (UNSEEN MESSAGES)\", IMAPLink`Private`folderPath]]; IMAPLink`Private`rawres = StringJoin[{IMAPLink`Private`rawres, IMAPLink`Private`sendCommand[IMAPLink`Private`connection, IMAPLink`Private`command]}]; IMAPLink`Private`res = IMAPLink`Utilities`import[IMAPLink`Private`rawres, \"SelectFolder\"]; IMAPLink`Private`prettyFolderName = IMAPLink`Utilities`import[IMAPLink`Private`folderPath, \"PrettyFolderName\"]; IMAPLink`Private`res = Join[IMAPLink`Private`res, Association[\"Path\" -> IMAPLink`Private`folderPath, \"Name\" -> IMAPLink`Private`prettyFolderName, \"Directory\" -> File[IMAPLink`Private`dir], \"ObjectType\" -> \"MailFolder\", \"Connection\" -> IMAPLink`Private`connection]]; IMAPLink`Private`res, IMAPLink`exception, IMAPLink`Utilities`handleError]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"UIDS\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`folderPath, IMAPLink`Private`positions, IMAPLink`Private`mailFolderAssoc, IMAPLink`Private`rawIMAPResponses, IMAPLink`Private`commands, IMAPLink`Private`chunkSize = 100, IMAPLink`Private`range, IMAPLink`Private`uids, IMAPLink`Private`totalMessages, IMAPLink`Private`validPositionsQ}, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"]; IMAPLink`Private`positions = Lookup[IMAPLink`Private`params, \"Positions\", Missing[\"Absent\"]]; IMAPLink`Private`mailFolderAssoc = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SelectFolder\", {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`totalMessages = ToExpression[IMAPLink`Private`mailFolderAssoc[\"TotalMessageCount\"]]; IMAPLink`Private`positions = IMAPLink`Private`toValidPositions[IMAPLink`Private`positions, IMAPLink`Private`totalMessages]; IMAPLink`Private`validPositionsQ = AllTrue[(#1 <= IMAPLink`Private`totalMessages & ) \/@ IMAPLink`Private`positions, TrueQ]; IMAPLink`Private`range = IMAPLink`Utilities`Private`getRangesInChunks[IMAPLink`Private`positions, IMAPLink`Private`chunkSize]; IMAPLink`Private`commands = (StringJoin[\"FETCH \", #1, \" (UID)\"] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`rawIMAPResponses = (IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1, \"Body\"] & ) \/@ IMAPLink`Private`commands; IMAPLink`Private`uids = StringCases[IMAPLink`Private`rawIMAPResponses, Shortest[\"* \"~~IMAPLink`Private`id:NumberString..~~__~~\"UID \"~~IMAPLink`Private`uid:NumberString..~~__] :> ToExpression[IMAPLink`Private`uid]]; Flatten[IMAPLink`Private`uids]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"UIDDownload\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`files = {}, IMAPLink`Private`chunkSize = 25, IMAPLink`Private`i = 0, IMAPLink`Private`count = 0, IMAPLink`Private`percent = 0, IMAPLink`Private`nb, IMAPLink`Private`time, IMAPLink`Private`res, IMAPLink`Private`dir, IMAPLink`Private`range, IMAPLink`Private`commands, IMAPLink`Private`diff, IMAPLink`Private`total, IMAPLink`Private`uids, IMAPLink`Private`prettyFolderName, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"], IMAPLink`Private`alluids = Lookup[IMAPLink`Private`params, \"UIDS\"]}, {IMAPLink`Private`time, IMAPLink`Private`res} = AbsoluteTiming[IMAPLink`Private`prettyFolderName = IMAPLink`Utilities`import[IMAPLink`Private`folderPath, \"PrettyFolderName\"]; IMAPLink`Private`dir = IMAPLink`Private`createLocalDirectory[IMAPLink`Private`connection, IMAPLink`Private`params]; IMAPLink`Private`uids = IMAPLink`Private`uidsToDownload[IMAPLink`Private`alluids, IMAPLink`Private`dir]; IMAPLink`Private`range = IMAPLink`Utilities`Private`getRangesInChunks[IMAPLink`Private`uids, IMAPLink`Private`chunkSize]; IMAPLink`Private`commands = (StringJoin[\"UID FETCH \", #1, \" (UID BODY.PEEK[])\"] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`total = Length[IMAPLink`Private`uids]; IMAPLink`Private`$downloadMessage = IMAPLink`Private`$downloadMessageTemplate[IMAPLink`Private`total, IMAPLink`Private`prettyFolderName, IMAPLink`Private`percent, IMAPLink`Private`total - IMAPLink`Private`count]; ((IMAPLink`Private`i++; IMAPLink`Private`diff = IMAPLink`Utilities`Private`findCount[IMAPLink`Private`range[[IMAPLink`Private`i]]]; If[IMAPLink`Private`diff == 0, IMAPLink`Private`diff = 1]; IMAPLink`Private`count = IMAPLink`Private`count + IMAPLink`Private`diff; IMAPLink`Private`percent = Floor[(IMAPLink`Private`count*100)\/IMAPLink`Private`total]; IMAPLink`Private`files = Join[IMAPLink`Private`files, IMAPLink`Utilities`Private`saveMessages[IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1], IMAPLink`Private`dir]]; IMAPLink`Private`$downloadMessage = IMAPLink`Private`$downloadMessageTemplate[IMAPLink`Private`total, IMAPLink`Private`prettyFolderName, IMAPLink`Private`percent, IMAPLink`Private`total - IMAPLink`Private`count]; ) & ) \/@ IMAPLink`Private`commands; IMAPLink`Private`count = 0; ]; If[$Notebooks, NotebookDelete[IMAPLink`Private`nb]]; Association[\"Name\" -> IMAPLink`Private`prettyFolderName, \"MessageCount\" -> Length[IMAPLink`Private`alluids], \"TotalMessageCount\" -> Length[FileNames[\"*.eml\", {IMAPLink`Private`dir}]], \"Directory\" -> IMAPLink`Private`dir, \"EMLFiles\" -> IMAPLink`Private`files, \"TimeElapsed\" -> IMAPLink`Private`time, \"TimeElapsedString\" -> IMAPLink`Utilities`toReadableTime[IMAPLink`Private`time]]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"GetMailItems\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`uids = {}, IMAPLink`Private`assoc, IMAPLink`Private`emlFiles, IMAPLink`Private`wlFiles, IMAPLink`Private`mail, IMAPLink`Private`mails, IMAPLink`Private`template, IMAPLink`Private`messagesImported = 0, IMAPLink`Private`totalMessagesToImport = 0, IMAPLink`Private`nb, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"], IMAPLink`Private`dir, IMAPLink`Private`messagePositions, IMAPLink`Private`totalMessages, IMAPLink`Private`uidMessagePosition, IMAPLink`Private`positions}, Catch[IMAPLink`Private`template = StringTemplate[\"Loading...\\n`1`% complete.\\nItems remaining: `2`.\\nImporting `3` messages.\"]; IMAPLink`Private`assoc = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SelectFolder\", {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`$downloadMessage = \"Finding messages...\"; IMAPLink`Private`uids = Lookup[IMAPLink`Private`params, \"UIDS\", IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"UIDS\", IMAPLink`Private`params]]; IMAPLink`Private`nb = If[$Notebooks && Length[IMAPLink`Private`uids] > 10, PrintTemporary[Dynamic[Internal`LoadingPanel[IMAPLink`Private`$downloadMessage]]]]; IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"UIDDownload\", {\"Path\" -> IMAPLink`Private`folderPath, \"UIDS\" -> IMAPLink`Private`uids}]; IMAPLink`Private`dir = IMAPLink`Private`createLocalDirectory[IMAPLink`Private`connection, {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`totalMessages = ToExpression[IMAPLink`Private`assoc[\"TotalMessageCount\"]]; IMAPLink`Private`positions = Lookup[IMAPLink`Private`params, \"Positions\", IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SearchIds\", IMAPLink`Private`params]]; IMAPLink`Private`messagePositions = IMAPLink`Private`toValidPositions[IMAPLink`Private`positions, IMAPLink`Private`totalMessages]; IMAPLink`Private`uidMessagePosition = Association[MapThread[#1 -> #2 & , {IMAPLink`Private`uids, IMAPLink`Private`messagePositions}]]; IMAPLink`Private`emlFiles = IMAPLink`Private`getFileNames[IMAPLink`Private`uids, IMAPLink`Private`dir]; IMAPLink`Private`wlFiles = IMAPLink`Private`saveMessageSummary[IMAPLink`Private`emlFiles]; IMAPLink`Private`totalMessagesToImport = Length[IMAPLink`Private`wlFiles]; IMAPLink`Private`mails = ((IMAPLink`Private`mail = Join[Get[#1], Association[\"MessagePosition\" -> Lookup[IMAPLink`Private`uidMessagePosition, ToExpression[FileBaseName[FileNameTake[#1]]]], \"UID\" -> ToExpression[FileBaseName[FileNameTake[#1]]], \"EMLFile\" -> IMAPLink`Private`toEMLFileName[#1], \"FileName\" -> #1, \"MailFolder\" -> MailFolder[IMAPLink`Private`assoc]]]; IMAPLink`Private`messagesImported++; IMAPLink`Private`$downloadMessage = IMAPLink`Private`template[N[(IMAPLink`Private`messagesImported*100)\/IMAPLink`Private`totalMessagesToImport, 3], IMAPLink`Private`totalMessagesToImport - IMAPLink`Private`messagesImported, IMAPLink`Private`totalMessagesToImport]; IMAPLink`Private`mail) & ) \/@ IMAPLink`Private`wlFiles; If[$Notebooks, NotebookDelete[IMAPLink`Private`nb]]; IMAPLink`Private`mails, IMAPLink`exception, IMAPLink`Utilities`handleError]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"DownloadMailItems\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`uids = {}, IMAPLink`Private`assoc, IMAPLink`Private`emlFiles, IMAPLink`Private`wlFiles, IMAPLink`Private`template, IMAPLink`Private`nb, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"], IMAPLink`Private`dir}, IMAPLink`Private`template = StringTemplate[\"Loading...\\n`1`% complete.\\nItems remaining: `2`.\\nImporting `3` messages.\"]; IMAPLink`Private`assoc = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SelectFolder\", {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`$downloadMessage = \"Finding messages...\"; IMAPLink`Private`uids = Lookup[IMAPLink`Private`params, \"UIDS\", IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"UIDS\", IMAPLink`Private`params]]; IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"UIDDownload\", {\"Path\" -> IMAPLink`Private`folderPath, \"UIDS\" -> IMAPLink`Private`uids}]; IMAPLink`Private`dir = IMAPLink`Private`createLocalDirectory[IMAPLink`Private`connection, {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`emlFiles = IMAPLink`Private`getFileNames[IMAPLink`Private`uids, IMAPLink`Private`dir]; IMAPLink`Private`wlFiles = IMAPLink`Private`saveMessageSummary[IMAPLink`Private`emlFiles]; If[$Notebooks, NotebookDelete[IMAPLink`Private`nb]]; File[IMAPLink`Private`dir]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, IMAPLink`Private`action:\"ClearFlags\" | \"SetFlags\" | \"UIDSetFlags\" | \"UIDClearFlags\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`total, IMAPLink`Private`count = 0, IMAPLink`Private`counts, IMAPLink`Private`countsIndex = 1, IMAPLink`Private`flags, IMAPLink`Private`rawIMAPResponses, IMAPLink`Private`rawIMAPResponse, IMAPLink`Private`chunkSize = 200, IMAPLink`Private`range, IMAPLink`Private`commands, IMAPLink`Private`uids, IMAPLink`Private`itemsRemaining, IMAPLink`Private`allflags, IMAPLink`Private`command, IMAPLink`Private`flagsStr, IMAPLink`Private`template, IMAPLink`Private`flagsToSet, IMAPLink`Private`commands2}, IMAPLink`Private`uids = Lookup[IMAPLink`Private`params, \"UIDS\"]; IMAPLink`Private`itemsRemaining = Length[IMAPLink`Private`uids]; IMAPLink`Private`flagsToSet = Lookup[IMAPLink`Private`params, \"FlagsToSet\"]; IMAPLink`Private`flagsStr = IMAPLink`Private`makeFlagsString[IMAPLink`Private`flagsToSet]; Which[MatchQ[IMAPLink`Private`action, \"UIDSetFlags\" | \"SetFlags\"], IMAPLink`Private`template = StringTemplate[\" +FLAGS `1`\"]; , MatchQ[IMAPLink`Private`action, \"UIDClearFlags\" | \"ClearFlags\"], IMAPLink`Private`template = StringTemplate[\" -FLAGS `1`\"]; ]; IMAPLink`Private`command = IMAPLink`Private`template[IMAPLink`Private`flagsStr]; IMAPLink`Private`range = IMAPLink`Utilities`Private`getRangesInChunks[IMAPLink`Private`uids, IMAPLink`Private`chunkSize]; IMAPLink`Private`counts = IMAPLink`Utilities`Private`findCount \/@ IMAPLink`Private`range; IMAPLink`Private`commands = (StringJoin[\"UID STORE \", #1, IMAPLink`Private`command] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`commands2 = (StringJoin[\"UID FETCH \", #1, \" FLAGS\"] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`total = Length[IMAPLink`Private`uids]; IMAPLink`Private`rawIMAPResponses = ((IMAPLink`Private`rawIMAPResponse = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1]; IMAPLink`Private`count = IMAPLink`Private`count + IMAPLink`Private`counts[[IMAPLink`Private`countsIndex]]; IMAPLink`Private`countsIndex++; IMAPLink`Private`$downloadMessage = StringTemplate[\"Setting flags...\\n`1`% complete\"][N[(IMAPLink`Private`count*100)\/IMAPLink`Private`total, 2]]; IMAPLink`Private`rawIMAPResponse) & ) \/@ IMAPLink`Private`commands; IMAPLink`Private`countsIndex = 1; IMAPLink`Private`rawIMAPResponses = ((IMAPLink`Private`rawIMAPResponse = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1]; IMAPLink`Private`count = IMAPLink`Private`count + IMAPLink`Private`counts[[IMAPLink`Private`countsIndex]]; IMAPLink`Private`countsIndex++; IMAPLink`Private`$downloadMessage = StringTemplate[\"Getting flags...\\n`1`% complete\"][N[(IMAPLink`Private`count*100)\/IMAPLink`Private`total, 2]]; IMAPLink`Private`rawIMAPResponse) & ) \/@ IMAPLink`Private`commands2; IMAPLink`Private`allflags = ((IMAPLink`Private`flags = IMAPLink`Utilities`getFlags[#1]; IMAPLink`Private`itemsRemaining = IMAPLink`Private`itemsRemaining - Length[IMAPLink`Private`flags]; IMAPLink`Private`$downloadMessage = StringTemplate[\"Importing flags...\\nItems Remaining: `1`\"][IMAPLink`Private`itemsRemaining]; IMAPLink`Private`flags) & ) \/@ IMAPLink`Private`rawIMAPResponses; IMAPLink`Private`$downloadMessage = \"Finished importing flags for all messages.\"; DeleteDuplicates[Flatten[IMAPLink`Private`allflags]]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"UIDFetchFlags\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`total, IMAPLink`Private`count = 0, IMAPLink`Private`counts, IMAPLink`Private`countsIndex = 1, IMAPLink`Private`flags, IMAPLink`Private`rawIMAPResponses, IMAPLink`Private`rawIMAPResponse, IMAPLink`Private`chunkSize = 200, IMAPLink`Private`range, IMAPLink`Private`commands, IMAPLink`Private`itemsRemaining, IMAPLink`Private`allflags, IMAPLink`Private`uids}, IMAPLink`Private`uids = Lookup[IMAPLink`Private`params, \"UIDS\"]; IMAPLink`Private`itemsRemaining = Length[IMAPLink`Private`uids]; IMAPLink`Private`range = IMAPLink`Utilities`Private`getRangesInChunks[IMAPLink`Private`uids, IMAPLink`Private`chunkSize]; IMAPLink`Private`counts = IMAPLink`Utilities`Private`findCount \/@ IMAPLink`Private`range; IMAPLink`Private`commands = (StringJoin[\"UID FETCH \", #1, \" (FLAGS)\"] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`total = Length[IMAPLink`Private`uids]; IMAPLink`Private`rawIMAPResponses = ((IMAPLink`Private`rawIMAPResponse = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1]; IMAPLink`Private`count = IMAPLink`Private`count + IMAPLink`Private`counts[[IMAPLink`Private`countsIndex]]; IMAPLink`Private`countsIndex++; IMAPLink`Private`$downloadMessage = StringTemplate[\"Fetching flags...\\n`1`% complete\"][N[(IMAPLink`Private`count*100)\/IMAPLink`Private`total, 2]]; IMAPLink`Private`rawIMAPResponse) & ) \/@ IMAPLink`Private`commands; IMAPLink`Private`allflags = ((IMAPLink`Private`flags = IMAPLink`Utilities`getFlags[#1]; IMAPLink`Private`itemsRemaining = IMAPLink`Private`itemsRemaining - Length[IMAPLink`Private`flags]; IMAPLink`Private`$downloadMessage = StringTemplate[\"Importing flags...\\nItems Remaining: `1`\"][IMAPLink`Private`itemsRemaining]; IMAPLink`Private`flags) & ) \/@ IMAPLink`Private`rawIMAPResponses; IMAPLink`Private`$downloadMessage = \"Finished importing flags for all messages.\"; Flatten[IMAPLink`Private`allflags]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"Copy\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`rawIMAPResponses, IMAPLink`Private`commands, IMAPLink`Private`range, IMAPLink`Private`chunkSize = 500, IMAPLink`Private`uids, IMAPLink`Private`destinationFolder}, IMAPLink`Private`destinationFolder = Lookup[IMAPLink`Private`params, \"Path\"]; IMAPLink`Private`uids = Lookup[IMAPLink`Private`params, \"UIDS\"]; IMAPLink`Private`range = IMAPLink`Utilities`Private`getRangesInChunks[IMAPLink`Private`uids, IMAPLink`Private`chunkSize]; IMAPLink`Private`commands = (StringJoin[\"UID COPY \", #1, \" \", IMAPLink`Private`destinationFolder] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`rawIMAPResponses = (IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1] & ) \/@ IMAPLink`Private`commands; (IMAPLink`Utilities`import[#1, \"CopyResponse\"] & ) \/@ IMAPLink`Private`rawIMAPResponses]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"SearchIds\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`ids, IMAPLink`Private`rawIMAPResponses, IMAPLink`Private`commands, IMAPLink`Private`range, IMAPLink`Private`chunkSize = 100, IMAPLink`Private`uids}, IMAPLink`Private`uids = Lookup[IMAPLink`Private`params, \"UIDS\"]; IMAPLink`Private`range = IMAPLink`Utilities`Private`getRangesInChunks[IMAPLink`Private`uids, IMAPLink`Private`chunkSize]; IMAPLink`Private`commands = (StringJoin[\"SEARCH UID \", #1] & ) \/@ IMAPLink`Private`range; IMAPLink`Private`rawIMAPResponses = (IMAPLink`Private`sendCommand[IMAPLink`Private`connection, #1, \"Body\"] & ) \/@ IMAPLink`Private`commands; IMAPLink`Private`ids = (IMAPLink`Utilities`import[#1, Automatic, \"SearchIds\"] & ) \/@ IMAPLink`Private`rawIMAPResponses; Flatten[IMAPLink`Private`ids]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"MarkFolderRead\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`uids, IMAPLink`Private`mailFolderAssoc, IMAPLink`Private`folderPath}, IMAPLink`Private`folderPath = Lookup[IMAPLink`Private`params, \"Path\"]; IMAPLink`Private`mailFolderAssoc = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SelectFolder\", {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`uids = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SearchUIDs\", {\"Seen\" -> False}]; IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SetFlags\", {\"FlagsToSet\" -> {\"Seen\"}, \"UIDS\" -> IMAPLink`Private`uids}]; IMAPLink`Private`mailFolderAssoc = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SelectFolder\", {\"Path\" -> IMAPLink`Private`folderPath}]; IMAPLink`Private`mailFolderAssoc]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"Search\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`result, IMAPLink`Private`total, IMAPLink`Private`count = 0, IMAPLink`Private`res, IMAPLink`Private`percent, IMAPLink`Private`template, IMAPLink`Private`msgStr, IMAPLink`Private`msgSummary, IMAPLink`Private`mailItem, IMAPLink`Private`uids, IMAPLink`Private`flags, IMAPLink`Private`dir, IMAPLink`Private`emlFiles, IMAPLink`Private`wlFiles, IMAPLink`Private`mailFolderAssoc, IMAPLink`Private`folderPathAssoc}, IMAPLink`Private`template = StringTemplate[\"Loading `1` `2`...\\n`3`% complete.\\nItems remaining: `4`\"]; IMAPLink`Private`mailFolderAssoc = Lookup[IMAPLink`Private`params, \"MailFolderAssociation\"]; IMAPLink`Private`folderPathAssoc = KeyTake[IMAPLink`Private`mailFolderAssoc, \"Path\"]; IMAPLink`Private`dir = Lookup[IMAPLink`Private`mailFolderAssoc, \"Directory\"]; IMAPLink`Private`uids = IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"SearchUIDs\", IMAPLink`Private`params]; IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"UIDDownload\", Join[IMAPLink`Private`folderPathAssoc, Association[\"UIDS\" -> IMAPLink`Private`uids]]]; IMAPLink`Private`emlFiles = FileNames[(StringJoin[ToString[#1], \".eml\"] & ) \/@ IMAPLink`Private`uids, {IMAPLink`Private`dir}]; IMAPLink`Private`wlFiles = IMAPLink`Private`saveMessageSummary[IMAPLink`Private`emlFiles]; IMAPLink`Private`flags = SortBy[IMAPLink`IMAPExecute[IMAPLink`Private`connection, \"UIDFetchFlags\", {\"UIDS\" -> IMAPLink`Private`uids}], #UID & ]; IMAPLink`Private`total = Length[IMAPLink`Private`wlFiles]; IMAPLink`Private`msgStr = If[IMAPLink`Private`total === 1, \"message\", \"messages\"]; If[IMAPLink`Private`wlFiles =!= {}, IMAPLink`Private`result = MapThread[(IMAPLink`Private`msgSummary = If[#1 =!= $Failed, Get[#1], MailLink`Utilities`Private`emptyMessageSummary]; IMAPLink`Private`mailItem = MailItem[Join[IMAPLink`Private`msgSummary, Association[\"UID\" -> Lookup[#2, \"UID\"], \"EMLFile\" -> File[FileNameJoin[{DirectoryName[#1], StringJoin[FileBaseName[#1], \".eml\"]}]], \"FileName\" -> #1, \"MailFolder\" -> MailFolder[IMAPLink`Private`mailFolderAssoc]]]]; IMAPLink`Private`res = Join[Association[\"MailItem\" -> IMAPLink`Private`mailItem], IMAPLink`Private`msgSummary, #2]; IMAPLink`Private`count++; IMAPLink`Private`percent = N[(IMAPLink`Private`count*100)\/IMAPLink`Private`total, 3]; IMAPLink`Private`$downloadMessage = IMAPLink`Private`template[IMAPLink`Private`total, IMAPLink`Private`msgStr, IMAPLink`Private`percent, IMAPLink`Private`total - IMAPLink`Private`count]; IMAPLink`Private`res) & , {IMAPLink`Private`wlFiles, IMAPLink`Private`flags}]; IMAPLink`Private`result, Missing[\"No matches found.\"]]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"SearchUIDs\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`ids, IMAPLink`Private`command, IMAPLink`Private`raw, IMAPLink`Private`maxItems}, IMAPLink`Private`command = IMAPLink`Private`makeFullCommand[IMAPLink`Private`params]; IMAPLink`Private`raw = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, IMAPLink`Private`command, \"Body\"]; IMAPLink`Private`maxItems = Lookup[IMAPLink`Private`params, MaxItems, Automatic]; IMAPLink`Private`ids = IMAPLink`Utilities`import[IMAPLink`Private`raw, IMAPLink`Private`maxItems, \"SearchIds\"]; IMAPLink`Private`ids]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, \"Expunge\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`str}, IMAPLink`Private`str = IMAPLink`Private`sendCommand[IMAPLink`Private`connection, \"EXPUNGE\"]; IMAPLink`Utilities`import[IMAPLink`Private`str, \"Expunge\"]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, IMAPLink`Private`action:\"UploadEMLString\" | \"UploadMBOXFile\" | \"UploadEMLFile\", (IMAPLink`Private`params_)?IMAPLink`Private`paramsQ] := Module[{IMAPLink`Private`file, IMAPLink`Private`folder, IMAPLink`Private`message, IMAPLink`Private`index}, IMAPLink`Private`file = Lookup[IMAPLink`Private`params, \"File\", Missing[\"NotAvailable\"]]; IMAPLink`Private`index = Lookup[IMAPLink`Private`params, \"Index\", \"\"]; IMAPLink`Private`message = Lookup[IMAPLink`Private`params, \"Message\", Missing[\"NotAvailable\"]]; IMAPLink`Private`folder = Lookup[IMAPLink`Private`params, \"Folder\"]; Which[IMAPLink`Private`action === \"UploadMBOXFile\", IMAPLink`Private`uploadMBOX[IMAPLink`Private`connection, IMAPLink`Private`folder, IMAPLink`Private`file, IMAPLink`Private`index], IMAPLink`Private`action === \"UploadEMLFile\", IMAPLink`Private`uploadEML[IMAPLink`Private`connection, IMAPLink`Private`folder, IMAPLink`Private`file], IMAPLink`Private`action === \"UploadEMLString\", IMAPLink`Private`uploadEMLString[IMAPLink`Private`connection, IMAPLink`Private`folder, IMAPLink`Private`message]]]\nIMAPLink`IMAPExecute[(IMAPLink`Private`connection_)?AssociationQ, (IMAPLink`Private`command_)?StringQ] := IMAPLink`Private`sendCommand[IMAPLink`Private`connection, IMAPLink`Private`command]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: IMAPLink`IMAPExecute",
	"System`ConvertersDump`ImElem":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImElem\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImElem[System`ConvertersDump`fmt_String] := Module[{System`ConvertersDump`format}, System`ConvertersDump`format = System`ConvertersDump`canonicalFormat[System`ConvertersDump`fmt]; If[System`ConvertersDump`format === $Failed, Message[Import::fmtnosup, System`ConvertersDump`fmt]; Return[$Failed]]; System`ConvertersDump`format \/. System`ConvertersDump`importElements \/. System`ConvertersDump`format -> None]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImElem",
	"MathLink`ImmediateStart":"ObjectType: Symbol\nUsage: MathLink`ImmediateStart\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MathLink`ImmediateStart",
	"System`Dump`ParameterValidation`ImplementationHead":"ObjectType: Symbol\nUsage: System`Dump`ParameterValidation`ImplementationHead\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`ParameterValidation`ImplementationHead",
	"ResourceFunctionHelpers`ImplicitD":"ObjectType: Symbol\nUsage: ImplicitD[expr, D[y,x]] returns the derivative y' as a function of x from expr.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`ImplicitD[ResourceFunctionHelpers`ImplicitD`Private`eqtn_Equal, ResourceFunctionHelpers`ImplicitD`Private`deriv:_Dt | _D | Derivative[_][_][_], ResourceFunctionHelpers`ImplicitD`Private`ipt:{__?NumericQ}:None, ResourceFunctionHelpers`ImplicitD`Private`opt:OptionsPattern[]] := Block[{ResourceFunctionHelpers`ImplicitD`Private`goodResFlag, ResourceFunctionHelpers`ImplicitD`Private`pt = ResourceFunctionHelpers`ImplicitD`Private`ipt, ResourceFunctionHelpers`ImplicitD`Private`parsedDeriv, ResourceFunctionHelpers`ImplicitD`Private`res}, ResourceFunctionHelpers`ImplicitD`Private`goodResFlag = Catch[ResourceFunctionHelpers`ImplicitD`Private`goodInputCheck[{ResourceFunctionHelpers`ImplicitD`Private`eqtn, ResourceFunctionHelpers`ImplicitD`Private`deriv}, ResourceFunctionHelpers`ImplicitD`Private`ipt, OptionValue[Constants]], \"implicitd\"]; If[IntegerQ[ResourceFunctionHelpers`ImplicitD`Private`goodResFlag], Return[ResourceFunctionHelpers`ImplicitD`Private`goodResFlag]]; If[StringQ[ResourceFunctionHelpers`ImplicitD`Private`goodResFlag], {ResourceFunctionHelpers`ImplicitD`Private`goodResFlag, ResourceFunctionHelpers`ImplicitD`Private`pt} = {True, None}]; ResourceFunctionHelpers`ImplicitD`Private`parsedDeriv = ResourceFunctionHelpers`ImplicitD`Private`parseDerivInput[ResourceFunctionHelpers`ImplicitD`Private`deriv]; (ResourceFunctionHelpers`ImplicitD`Private`res = ResourceFunctionHelpers`ImplicitD`Private`iImplicitD[{ResourceFunctionHelpers`ImplicitD`Private`eqtn, ResourceFunctionHelpers`ImplicitD`Private`deriv}, ResourceFunctionHelpers`ImplicitD`Private`parsedDeriv, ResourceFunctionHelpers`ImplicitD`Private`pt, ResourceFunctionHelpers`ImplicitD`Private`opt]; ResourceFunctionHelpers`ImplicitD`Private`res \/; FreeQ[ResourceFunctionHelpers`ImplicitD`Private`res, ResourceFunctionHelpers`ImplicitD`Private`iImplicitD]) \/; ResourceFunctionHelpers`ImplicitD`Private`goodResFlag]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {EliminateDependentVariables -> False, SubstituteDerivatives -> False, Constants -> {}}\nAttributes: {HoldAll}\nFullName: ResourceFunctionHelpers`ImplicitD",
	"Region`ImplicitDecomposeList":"ObjectType: Symbol\nUsage: Region`ImplicitDecomposeList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`ImplicitDecomposeList[RegionUtilsDump`cond_] := Catch[RegionUtilsDump`dnfSplit[Reduce`InequalityExpand[RegionUtilsDump`cond] \/. RegionUtilsDump`a_Unequal -> True]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ImplicitDecomposeList",
	"BoxForm`ImplicitList":"ObjectType: Symbol\nUsage: BoxForm`ImplicitList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: BoxForm`ImplicitList \/: MakeBoxes[BoxForm`ImplicitList[BoxForm`list_List], BoxForm`fmt:StandardForm | TraditionalForm] := TemplateBox[{RowBox[Riffle[BoxForm`ListMakeBoxes[BoxForm`list, BoxForm`fmt], \",\"]]}, \"ImplicitList\"]\nOptions: None\nAttributes: {}\nFullName: BoxForm`ImplicitList",
	"Asymptotics`ImplicitMapSeries":"ObjectType: Symbol\nUsage: Asymptotics`ImplicitMapSeries\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Asymptotics`ImplicitMapSeries[Asymptotics`SeriesSolutionsDump`f_, {Asymptotics`SeriesSolutionsDump`y_, Asymptotics`SeriesSolutionsDump`b_}, {Asymptotics`SeriesSolutionsDump`x_, Asymptotics`SeriesSolutionsDump`a_, Asymptotics`SeriesSolutionsDump`n_}, Asymptotics`SeriesSolutionsDump`args___] := With[{Asymptotics`SeriesSolutionsDump`ans = Asymptotics`SeriesSolutionsDump`ImplicitMapSeriesPrep[Asymptotics`SeriesSolutionsDump`f, {Asymptotics`SeriesSolutionsDump`y, Asymptotics`SeriesSolutionsDump`b}, {Asymptotics`SeriesSolutionsDump`x, Asymptotics`SeriesSolutionsDump`a, Asymptotics`SeriesSolutionsDump`n}, Asymptotics`SeriesSolutionsDump`args]}, (Thread[Asymptotics`SeriesSolutionsDump`y -> #1] & ) \/@ Asymptotics`SeriesSolutionsDump`ans \/; ListQ[Asymptotics`SeriesSolutionsDump`ans]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Asymptotics`ImplicitMapSeries",
	"Region`ImplicitRegionParameters":"ObjectType: Symbol\nUsage: Region`ImplicitRegionParameters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ImplicitRegionParameters",
	"Region`ImplicitRegionQ":"ObjectType: Symbol\nUsage: Region`ImplicitRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`ImplicitRegionQ",
	"NDSolve`ImplicitRungeKutta":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKutta\nDocumentation: None\nOwnValues: None\nUpValues: NDSolve`ImplicitRungeKutta \/: NDSolve`TestImplicitSolver[NDSolve`ImplicitRungeKutta, {\"Newton\", NDSolve`IRKDump`opts___}, NDSolve`IRKDump`mhead_] := {NDSolve`Newton, NDSolve`GetMethodOptionValues[NDSolve`Newton, NDSolve`IRKDump`ImplicitRungeKuttaNewtonProperties, {NDSolve`IRKDump`opts, Sequence @@ Options[NDSolve`IRKDump`ImplicitRungeKuttaNewton]}]}\nNDSolve`ImplicitRungeKutta \/: NDSolve`TestImplicitSolver[NDSolve`ImplicitRungeKutta, {\"FixedPoint\", NDSolve`IRKDump`opts___}, NDSolve`IRKDump`mhead_] := {NDSolve`FixedPoint, NDSolve`GetMethodOptionValues[NDSolve`FixedPoint, NDSolve`IRKDump`ImplicitRungeKuttaFixedPointProperties, {NDSolve`IRKDump`opts, Sequence @@ Options[NDSolve`IRKDump`ImplicitRungeKuttaFixedPoint]}]}\nNDSolve`ImplicitRungeKutta \/: NDSolve`InitializeMethod[NDSolve`ImplicitRungeKutta, {NDSolve`IRKDump`stepmode_, NDSolve`IRKDump`stepcontrol_, NDSolve`IRKDump`denseoutput_}, NDSolve`IRKDump`sd_, NDSolve`IRKDump`nf_, NDSolve`IRKDump`ndstate_, NDSolve`IRKDump`rawmopts_] := Module[{NDSolve`IRKDump`ag, NDSolve`IRKDump`bmat, NDSolve`IRKDump`coeffs, NDSolve`IRKDump`coeffprec, NDSolve`IRKDump`denseQ, NDSolve`IRKDump`densedata, NDSolve`IRKDump`eorder, NDSolve`IRKDump`extintdata, NDSolve`IRKDump`extdata, NDSolve`IRKDump`imps, NDSolve`IRKDump`impsoptvals, NDSolve`IRKDump`itdata, NDSolve`IRKDump`itnorm, NDSolve`IRKDump`itsafety, NDSolve`IRKDump`jdata, NDSolve`IRKDump`jetol = None, NDSolve`IRKDump`lsm, NDSolve`IRKDump`ludep, NDSolve`IRKDump`massdata, NDSolve`IRKDump`maxits, NDSolve`IRKDump`mcoeffs, NDSolve`IRKDump`miscdata, NDSolve`IRKDump`mode, NDSolve`IRKDump`morder, NDSolve`IRKDump`mtmps, NDSolve`IRKDump`nce, NDSolve`IRKDump`newtonQ, NDSolve`IRKDump`nfdim, NDSolve`IRKDump`orderdata, NDSolve`IRKDump`pg, NDSolve`IRKDump`prec, NDSolve`IRKDump`rhsvec, NDSolve`IRKDump`rhswork, NDSolve`IRKDump`safety, NDSolve`IRKDump`scparams, NDSolve`IRKDump`stages, NDSolve`IRKDump`stepdata, NDSolve`IRKDump`steprb, NDSolve`IRKDump`stepsf, NDSolve`IRKDump`tdata, NDSolve`IRKDump`tvar, NDSolve`IRKDump`wdim, NDSolve`IRKDump`workdata}, {NDSolve`IRKDump`coeffs, NDSolve`IRKDump`morder, NDSolve`IRKDump`imps, NDSolve`IRKDump`scparams, NDSolve`IRKDump`steprb, NDSolve`IRKDump`stepsf} = NDSolve`GetMethodOptionValues[NDSolve`ImplicitRungeKutta, NDSolve`IRKDump`ImplicitRungeKuttaProperties, NDSolve`IRKDump`rawmopts]; NDSolve`IRKDump`mcoeffs = NDSolve`ToSymbol[NDSolve`IRKDump`coeffs]; If[ !MatchQ[NDSolve`IRKDump`mcoeffs, _Symbol], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"csymb\", \"Coefficients\", NDSolve`IRKDump`coeffs, \"ImplicitRungeKutta\"]; Throw[$Failed]; ]; If[NDSolve`IRKDump`morder === Automatic, NDSolve`IRKDump`morder = NDSolve`GetDefaultDifferenceOrder[NDSolve`IRKDump`mcoeffs, NDSolve`IRKDump`stepmode, NDSolve`IRKDump`sd, NDSolve`IRKDump`nf, NDSolve`IRKDump`ndstate]; ]; If[ !Internal`PositiveMachineIntegerQ[NDSolve`IRKDump`morder], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"mord\", \"ImplicitRungeKutta\"]; Throw[$Failed]]; NDSolve`IRKDump`prec = NDSolve`IRKDump`nf[\"WorkingPrecision\"]; NDSolve`IRKDump`imps = NDSolve`TestImplicitSolver[NDSolve`ImplicitRungeKutta, NDSolve`IRKDump`imps, NDSolve`IRKDump`ndstate[\"Caller\"]]; NDSolve`IRKDump`impsoptvals = Last[NDSolve`IRKDump`imps]; NDSolve`IRKDump`newtonQ = NDSolve`IRKDump`NewtonSolverQ[NDSolve`IRKDump`imps]; If[NDSolve`IRKDump`newtonQ, {NDSolve`IRKDump`ag, NDSolve`IRKDump`safety, NDSolve`IRKDump`jetol, NDSolve`IRKDump`lsm, NDSolve`IRKDump`ludep, NDSolve`IRKDump`maxits, NDSolve`IRKDump`pg} = NDSolve`IRKDump`impsoptvals; NDSolve`IRKDump`jetol = N[NDSolve`IRKDump`jetol, NDSolve`IRKDump`prec]; If[ !TrueQ[0 <= NDSolve`IRKDump`jetol <= 1], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"rbnd\", \"JacobianEvaluationTolerance\", NDSolve`IRKDump`jetol, \"ImplicitRungeKutta\", 0, 1]; Throw[$Failed]; ]; NDSolve`IRKDump`ludep = N[NDSolve`IRKDump`ludep, NDSolve`IRKDump`prec]; If[ !TrueQ[NDSolve`IRKDump`ludep >= 1 && NDSolve`IRKDump`ludep <= Last[NDSolve`IRKDump`steprb]], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"rbnd\", \"LUDecompositionEvaluationParameter\", NDSolve`IRKDump`ludep, \"ImplicitRungeKutta\", 1, Last[NDSolve`IRKDump`steprb]]; Throw[$Failed]; ]; NDSolve`IRKDump`impsoptvals = {NDSolve`IRKDump`lsm, NDSolve`IRKDump`jetol, NDSolve`IRKDump`ludep}; , {NDSolve`IRKDump`ag, NDSolve`IRKDump`safety, NDSolve`IRKDump`maxits, NDSolve`IRKDump`pg} = NDSolve`IRKDump`impsoptvals; NDSolve`IRKDump`impsoptvals = {}; ]; NDSolve`IRKDump`imps[[-1]] = NDSolve`IRKDump`impsoptvals; If[ !MatchQ[NDSolve`IRKDump`maxits, _?Internal`PositiveMachineIntegerQ | Automatic | Infinity], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"maxits\", NDSolve`IRKDump`maxits, \"ImplicitRungeKutta\"]; Throw[$Failed]]; If[NDSolve`IRKDump`maxits === Automatic, NDSolve`IRKDump`maxits = 2*Round[NDSolve`IRKDump`prec]]; NDSolve`IRKDump`maxits = Min[Developer`$MaxMachineInteger, NDSolve`IRKDump`maxits]; NDSolve`IRKDump`itsafety = N[NDSolve`IRKDump`safety, NDSolve`IRKDump`prec]; If[ !TrueQ[Inequality[0, Less, NDSolve`IRKDump`itsafety, LessEqual, 1]], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"sfty\", \"IterationSafetyFactor\", NDSolve`IRKDump`safety, \"ImplicitRungeKutta\"]; Throw[$Failed]]; NDSolve`IRKDump`itnorm = NDSolve`NewMethodNorm[NDSolve`IRKDump`ndstate, NDSolve`IRKDump`nf, NDSolve`IRKDump`method, NDSolve`IRKDump`ag, NDSolve`IRKDump`pg]; NDSolve`IRKDump`coeffs = NDSolve`IRKDump`GetIRKCoefficients[NDSolve`IRKDump`mcoeffs, NDSolve`IRKDump`morder, NDSolve`IRKDump`prec, NDSolve`IRKDump`newtonQ, NDSolve`IRKDump`ndstate[\"Caller\"]]; NDSolve`IRKDump`coeffprec = Precision[NDSolve`IRKDump`coeffs]; If[ !NDSolve`SamePrecisionQ[NDSolve`IRKDump`coeffprec, NDSolve`IRKDump`prec], NDSolve`NDSolveMessage[NDSolve`IRKDump`ndstate, \"cprec\", NDSolve`IRKDump`coeffprec, \"ImplicitRungeKutta\", NDSolve`IRKDump`prec]; Throw[$Failed]]; If[NDSolve`IRKDump`scparams === Automatic, NDSolve`IRKDump`scparams = NDSolve`IRKDump`$IRKStepSizeControlParameters; ]; If[NDSolve`IRKDump`stepsf === Automatic, NDSolve`IRKDump`stepsf = {9\/10, 9\/10}]; NDSolve`IRKDump`mode = If[Length[NDSolve`IRKDump`coeffs] =!= 4, \"Fixed\", NDSolve`IRKDump`stepmode]; NDSolve`IRKDump`stepdata = NDSolve`StepSizeControlData[\"ImplicitRungeKutta\", NDSolve`IRKDump`ndstate[\"Norm\"], NDSolve`IRKDump`nf, NDSolve`IRKDump`mode, NDSolve`IRKDump`scparams, NDSolve`IRKDump`steprb, NDSolve`IRKDump`stepsf, NDSolve`IRKDump`ndstate[\"Caller\"]]; NDSolve`IRKDump`jdata = NDSolve`CreateWorkspaceList[None, None, NDSolve`IRKDump`jetol, 1]; NDSolve`IRKDump`stages = Length[First[NDSolve`IRKDump`coeffs]]; NDSolve`IRKDump`mtmps = Table[Table[0, {NDSolve`IRKDump`stages}, {NDSolve`IRKDump`stages}], {3}]; If[NDSolve`IRKDump`prec === MachinePrecision, NDSolve`IRKDump`coeffs = Developer`ToPackedArray \/@ N[NDSolve`IRKDump`coeffs]; NDSolve`IRKDump`mtmps = Developer`ToPackedArray \/@ N[NDSolve`IRKDump`mtmps]; NDSolve`IRKDump`bmat = Developer`ToPackedArray[Table[NDSolve`IRKDump`coeffs[[2]], {NDSolve`IRKDump`stages}]], NDSolve`IRKDump`coeffs = Developer`FromPackedArray \/@ NDSolve`IRKDump`coeffs; NDSolve`IRKDump`mtmps = Developer`FromPackedArray \/@ NDSolve`IRKDump`mtmps; NDSolve`IRKDump`bmat = Table[NDSolve`IRKDump`coeffs[[2]], {NDSolve`IRKDump`stages}]]; NDSolve`IRKDump`nfdim = Times @@ NDSolve`IRKDump`nf[\"ResultDimensions\"]; NDSolve`IRKDump`wdim = NDSolve`IRKDump`stages*NDSolve`IRKDump`nfdim; NDSolve`IRKDump`tdata = NDSolve`CreateWorkspace[NDSolve`IRKDump`nf, NDSolve`IRKDump`stages]; NDSolve`IRKDump`workdata = Table[NDSolve`CreateWorkspace[NDSolve`IRKDump`nf], {3}]; NDSolve`IRKDump`tvar = NDSolve`IRKDump`ndstate[\"TemporalVariable\"]; NDSolve`IRKDump`itdata = {NDSolve`IRKDump`itnorm, NDSolve`IRKDump`itsafety, NDSolve`IRKDump`maxits, Table[NDSolve`CreateWorkspace[NDSolve`IRKDump`nf, NDSolve`IRKDump`wdim], {3}], NDSolve`CreateWorkspace[NDSolve`IRKDump`nf, {NDSolve`IRKDump`stages, NDSolve`IRKDump`nfdim}], NDSolve`IRKDump`tvar, NDSolve`CreateWorkspaceList[None, 1]}; NDSolve`IRKDump`eorder = NDSolve`IRKDump`mcoeffs[\"EmbeddedDifferenceOrder\"[NDSolve`IRKDump`morder]]; If[ !Internal`PositiveMachineIntegerQ[NDSolve`IRKDump`eorder], NDSolve`IRKDump`eorder = 1]; NDSolve`IRKDump`orderdata = NDSolve`CreateWorkspaceList[NDSolve`IRKDump`morder, NDSolve`IRKDump`eorder]; NDSolve`IRKDump`rhsvec = NDSolve`CreateWorkspace[NDSolve`IRKDump`nf, NDSolve`IRKDump`stages]; NDSolve`IRKDump`rhswork = NDSolve`CreateWorkspace[NDSolve`IRKDump`nf, NDSolve`IRKDump`stages^2]; NDSolve`IRKDump`extintdata = NDSolve`CreateWorkspaceList[0, 0, 0]; NDSolve`IRKDump`extdata = {Table[NDSolve`CreateWorkspace[NDSolve`IRKDump`nf, NDSolve`IRKDump`wdim], {2}], NDSolve`IRKDump`rhsvec, NDSolve`IRKDump`rhswork, NDSolve`IRKDump`bmat, NDSolve`IRKDump`mtmps, NDSolve`IRKDump`extintdata}; NDSolve`IRKDump`massdata = NDSolve`IRKDump`ndstate[\"MassMatrix\"]; If[ !NDSolve`IRKDump`newtonQ && MatrixQ[NDSolve`IRKDump`massdata], Throw[$Failed]; ]; NDSolve`IRKDump`denseQ = NDSolve`IRKDump`denseoutput =!= False; NDSolve`IRKDump`nce = If[NDSolve`IRKDump`denseQ, NDSolve`IRKDump`ContinuousWeightsNF[NDSolve`IRKDump`mcoeffs, NDSolve`IRKDump`coeffs[[1]], NDSolve`IRKDump`coeffs[[3]], NDSolve`IRKDump`prec], None]; NDSolve`IRKDump`densedata = NDSolve`CreateWorkspaceList[NDSolve`IRKDump`nce]; NDSolve`IRKDump`miscdata = NDSolve`CreateWorkspaceList[NDSolve`IRKDump`tdata]; NDSolve`CreateMethodData[NDSolve`ImplicitRungeKutta, {NDSolve`IRKDump`orderdata, NDSolve`IRKDump`mcoeffs, NDSolve`IRKDump`coeffs, NDSolve`IRKDump`workdata, NDSolve`IRKDump`stepdata, NDSolve`IRKDump`jdata, NDSolve`IRKDump`extdata, NDSolve`IRKDump`itdata, NDSolve`IRKDump`imps, NDSolve`IRKDump`densedata, NDSolve`IRKDump`miscdata}]]\nDownValues: None\nSubValues: NDSolve`ImplicitRungeKutta[NDSolve`MethodData[NDSolve`IRKDump`v_, __]][\"Version\"] := NDSolve`IRKDump`v\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"Coefficients\"] := NDSolve`IRKDump`data[[3]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"DenseOutputQ\"] := NDSolve`IRKDump`data[[10,1]] =!= None\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"DifferenceOrder\"] := NDSolve`IRKDump`data[[1,1]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"EmbeddedDifferenceOrder\"] := NDSolve`IRKDump`data[[1,2]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"StepMode\"] := If[NDSolve`IRKDump`data[[2]] === None, \"Fixed\", Automatic]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"ErrorEstimate\"] := If[NDSolve`IRKDump`data[[5]] === None, None, NDSolve`IRKDump`data[[5,7]]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"StepError\"] := If[NDSolve`IRKDump`data[[5]] === None, None, NDSolve`IRKDump`data[[5,6,1]]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"StepSize\"] := If[NDSolve`IRKDump`data[[5]] === None, None, NDSolve`IRKDump`data[[5,5,1]]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"Jacobian\"] := If[NDSolve`IRKDump`NewtonSolverQ[NDSolve`IRKDump`data[[9]]], NDSolve`IRKDump`data[[6,1]], False]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"LinearStabilityBoundary\"] := NDSolve`IRKDump`data[[2]][\"LinearStabilityBoundary\"]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"MassMatrixQ\"] := NDSolve`IRKDump`NewtonSolverQ[NDSolve`IRKDump`data[[9]]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"StiffMethodQ\"] := NDSolve`IRKDump`NewtonSolverQ[NDSolve`IRKDump`data[[9]]]\nNDSolve`ImplicitRungeKutta[NDSolve`MethodData[__, NDSolve`IRKDump`data_]][\"SymmetricMethodQ\"] := (EvenQ[NDSolve`IRKDump`data[[1,1]]] && TrueQ[NDSolve`ImplicitRungeKuttaAdjointCoefficients[#1] == #1] & )[Take[NDSolve`IRKDump`data[[3]], 3]]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions:                                                                                                                                                                               1\n{Coefficients -> ImplicitRungeKuttaGaussCoefficients, DifferenceOrder -> Automatic, ImplicitSolver -> Newton, StepSizeControlParameters -> Automatic, StepSizeRatioBounds -> {-, 4}, StepSizeSafetyFactors -> Automatic}\n                                                                                                                                                                              8\nAttributes: {HoldAllComplete}\nFullName: NDSolve`ImplicitRungeKutta",
	"NDSolve`ImplicitRungeKuttaAdjointCoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaAdjointCoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaAdjointCoefficients[{(NDSolve`IRKCDump`a_)?NDSolve`IRKCDump`NumericMatrixQ, (NDSolve`IRKCDump`b_)?NDSolve`IRKCDump`NumericVectorQ, (NDSolve`IRKCDump`c_)?NDSolve`IRKCDump`NumericVectorQ}] := With[{NDSolve`IRKCDump`len = Length[NDSolve`IRKCDump`a]}, NDSolve`IRKCDump`IRKAdjoint[NDSolve`IRKCDump`a, NDSolve`IRKCDump`b, NDSolve`IRKCDump`c] \/; NDSolve`IRKCDump`len > 0 && NDSolve`IRKCDump`len === Length[NDSolve`IRKCDump`b] === Length[NDSolve`IRKCDump`c]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaAdjointCoefficients",
	"NDSolve`ImplicitRungeKuttaCoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaCoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaCoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`x_)?NDSolve`IRKCDump`ScalarQ, (NDSolve`IRKCDump`d_Integer)?NonNegative, (NDSolve`IRKCDump`s_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve, (NDSolve`IRKCDump`opts___)?OptionQ] := Module[{NDSolve`IRKCDump`res}, NDSolve`IRKCDump`res \/; (NDSolve`IRKCDump`res = NDSolve`IRKCDump`IRKCOptionsTest[NDSolve`IRKCDump`p, NDSolve`IRKCDump`x, NDSolve`IRKCDump`d, NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, NDSolve`IRKCDump`mhead, NDSolve`IRKCDump`opts]) =!= $Failed && (NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmain[NDSolve`IRKCDump`GenericRoots[NDSolve`IRKCDump`p, NDSolve`IRKCDump`x, NDSolve`IRKCDump`d], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, NDSolve`IRKCDump`res, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res =!= $Failed)]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Solve -> Row}\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaCoefficients",
	"NDSolve`ImplicitRungeKuttaGaussCoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaGaussCoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaGaussCoefficients[\"LinearStabilityBoundary\"] := -Infinity\nNDSolve`ImplicitRungeKuttaGaussCoefficients[\"DifferenceOrder\"[NDSolve`IRKCDump`i_]] := 2*NDSolve`IRKCDump`i\nNDSolve`ImplicitRungeKuttaGaussCoefficients[\"EmbeddedDifferenceOrder\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`GaussStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaGaussCoefficients[\"Stages\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`GaussStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaGaussCoefficients[\"WorkPerStep\"[NDSolve`IRKCDump`p_, NDSolve`IRKCDump`nf_]] := NDSolve`IRKCDump`GaussStages[NDSolve`IRKCDump`p]*Times @@ NDSolve`IRKCDump`nf[\"ResultDimensions\"]\nNDSolve`ImplicitRungeKuttaGaussCoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve] := Block[{NDSolve`IRKCDump`res, NDSolve`IRKCDump`s}, NDSolve`IRKCDump`s = NDSolve`ImplicitRungeKuttaGaussCoefficients[\"Stages\"[NDSolve`IRKCDump`p]]; NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmain[NDSolve`IRKCDump`GaussRoots[NDSolve`IRKCDump`s], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, {Row}, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res \/; NDSolve`IRKCDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaGaussCoefficients",
	"NDSolve`ImplicitRungeKuttaLobattoIIIACoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaLobattoIIIACoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[\"LinearStabilityBoundary\"] := -Infinity\nNDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[\"DifferenceOrder\"[NDSolve`IRKCDump`i_]] := 2*NDSolve`IRKCDump`i - 1\nNDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[\"EmbeddedDifferenceOrder\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`LobattoIIIAStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[\"Stages\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`LobattoIIIAStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[\"WorkPerStep\"[NDSolve`IRKCDump`p_, NDSolve`IRKCDump`nf_]] := NDSolve`IRKCDump`LobattoIIIAStages[NDSolve`IRKCDump`p]*Times @@ NDSolve`IRKCDump`nf[\"ResultDimensions\"]\nNDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve] := Block[{NDSolve`IRKCDump`res, NDSolve`IRKCDump`s}, NDSolve`IRKCDump`s = NDSolve`ImplicitRungeKuttaLobattoIIIACoefficients[\"Stages\"[NDSolve`IRKCDump`p]]; NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmain[NDSolve`IRKCDump`LobattoIIIRoots[NDSolve`IRKCDump`s], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, {Row}, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res \/; NDSolve`IRKCDump`res =!= $Failed] \/; NDSolve`IRKCDump`PositiveExtendedRealQ[NDSolve`IRKCDump`prec]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaLobattoIIIACoefficients",
	"NDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[\"LinearStabilityBoundary\"] := -Infinity\nNDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[\"DifferenceOrder\"[NDSolve`IRKCDump`i_]] := 2*NDSolve`IRKCDump`i - 1\nNDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[\"EmbeddedDifferenceOrder\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`LobattoIIIBStages[NDSolve`IRKCDump`p] - 2\nNDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[\"Stages\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`LobattoIIIBStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[\"WorkPerStep\"[NDSolve`IRKCDump`p_, NDSolve`IRKCDump`nf_]] := NDSolve`IRKCDump`LobattoIIIBStages[NDSolve`IRKCDump`p]*Times @@ NDSolve`IRKCDump`nf[\"ResultDimensions\"]\nNDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve] := Block[{NDSolve`IRKCDump`res, NDSolve`IRKCDump`s}, NDSolve`IRKCDump`s = NDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients[\"Stages\"[NDSolve`IRKCDump`p]]; NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmain[NDSolve`IRKCDump`LobattoIIIRoots[NDSolve`IRKCDump`s], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, {Column}, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res \/; NDSolve`IRKCDump`res =!= $Failed] \/; NDSolve`IRKCDump`PositiveExtendedRealQ[NDSolve`IRKCDump`prec]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaLobattoIIIBCoefficients",
	"NDSolve`ImplicitRungeKuttaLobattoIIICCoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaLobattoIIICCoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[\"LinearStabilityBoundary\"] := -Infinity\nNDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[\"DifferenceOrder\"[NDSolve`IRKCDump`i_]] := 2*NDSolve`IRKCDump`i - 1\nNDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[\"EmbeddedDifferenceOrder\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`LobattoIIICStages[NDSolve`IRKCDump`p] - 1\nNDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[\"Stages\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`LobattoIIICStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[\"WorkPerStep\"[NDSolve`IRKCDump`p_, NDSolve`IRKCDump`nf_]] := NDSolve`IRKCDump`LobattoIIICStages[NDSolve`IRKCDump`p]*Times @@ NDSolve`IRKCDump`nf[\"ResultDimensions\"]\nNDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve] := Block[{NDSolve`IRKCDump`res, NDSolve`IRKCDump`s}, NDSolve`IRKCDump`s = NDSolve`ImplicitRungeKuttaLobattoIIICCoefficients[\"Stages\"[NDSolve`IRKCDump`p]]; NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmainLobattoIIIC[NDSolve`IRKCDump`LobattoIIIRoots[NDSolve`IRKCDump`s], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res \/; NDSolve`IRKCDump`res =!= $Failed] \/; NDSolve`IRKCDump`PositiveExtendedRealQ[NDSolve`IRKCDump`prec]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaLobattoIIICCoefficients",
	"NDSolve`ImplicitRungeKuttaRadauIACoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaRadauIACoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaRadauIACoefficients[\"LinearStabilityBoundary\"] := -Infinity\nNDSolve`ImplicitRungeKuttaRadauIACoefficients[\"DifferenceOrder\"[NDSolve`IRKCDump`i_]] := 2*NDSolve`IRKCDump`i - 1\nNDSolve`ImplicitRungeKuttaRadauIACoefficients[\"EmbeddedDifferenceOrder\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`RadauIAStages[NDSolve`IRKCDump`p] - 1\nNDSolve`ImplicitRungeKuttaRadauIACoefficients[\"Stages\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`RadauIAStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaRadauIACoefficients[\"WorkPerStep\"[NDSolve`IRKCDump`p_, NDSolve`IRKCDump`nf_]] := NDSolve`IRKCDump`RadauIAStages[NDSolve`IRKCDump`p]*Times @@ NDSolve`IRKCDump`nf[\"ResultDimensions\"]\nNDSolve`ImplicitRungeKuttaRadauIACoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve] := Block[{NDSolve`IRKCDump`res, NDSolve`IRKCDump`s}, NDSolve`IRKCDump`s = NDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"Stages\"[NDSolve`IRKCDump`p]]; NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmain[NDSolve`IRKCDump`RadauIRoots[NDSolve`IRKCDump`s], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, {Column}, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res \/; NDSolve`IRKCDump`res =!= $Failed] \/; NDSolve`IRKCDump`PositiveExtendedRealQ[NDSolve`IRKCDump`prec]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaRadauIACoefficients",
	"NDSolve`ImplicitRungeKuttaRadauIIACoefficients":"ObjectType: Symbol\nUsage: NDSolve`ImplicitRungeKuttaRadauIIACoefficients\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"LinearStabilityBoundary\"] := -Infinity\nNDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"DifferenceOrder\"[NDSolve`IRKCDump`i_]] := 2*NDSolve`IRKCDump`i - 1\nNDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"EmbeddedDifferenceOrder\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`RadauIIAStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"Stages\"[NDSolve`IRKCDump`p_]] := NDSolve`IRKCDump`RadauIIAStages[NDSolve`IRKCDump`p]\nNDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"WorkPerStep\"[NDSolve`IRKCDump`p_, NDSolve`IRKCDump`nf_]] := NDSolve`IRKCDump`RadauIIAStages[NDSolve`IRKCDump`p]*Times @@ NDSolve`IRKCDump`nf[\"ResultDimensions\"]\nNDSolve`ImplicitRungeKuttaRadauIIACoefficients[(NDSolve`IRKCDump`p_)?Internal`PositiveMachineIntegerQ, (NDSolve`IRKCDump`prec_)?NDSolve`IRKCDump`PositiveExtendedRealQ, NDSolve`IRKCDump`mhead_Symbol:NDSolve] := Block[{NDSolve`IRKCDump`res, NDSolve`IRKCDump`s}, NDSolve`IRKCDump`s = NDSolve`ImplicitRungeKuttaRadauIIACoefficients[\"Stages\"[NDSolve`IRKCDump`p]]; NDSolve`IRKCDump`res = NDSolve`IRKCDump`irkcmain[NDSolve`IRKCDump`RadauIIRoots[NDSolve`IRKCDump`s], NDSolve`IRKCDump`s, NDSolve`IRKCDump`prec, {Row}, NDSolve`IRKCDump`mhead]; NDSolve`IRKCDump`res \/; NDSolve`IRKCDump`res =!= $Failed] \/; NDSolve`IRKCDump`PositiveExtendedRealQ[NDSolve`IRKCDump`prec]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ImplicitRungeKuttaRadauIIACoefficients",
	"Region`Mesh`ImplicitToParametricCurves":"ObjectType: Symbol\nUsage: Region`Mesh`ImplicitToParametricCurves\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FindBranches -> True, MaxSegmentLength -> Automatic, MeshOrder -> Automatic, SegmentTolerance -> Automatic}\nAttributes: {}\nFullName: Region`Mesh`ImplicitToParametricCurves",
	"RandomProcesses`MarkovProcessUtilities`ImpliedStochasticMatrixQ":"ObjectType: Symbol\nUsage: RandomProcesses`MarkovProcessUtilities`ImpliedStochasticMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`MarkovProcessUtilities`ImpliedStochasticMatrixQ[(RandomProcesses`MarkovChainDump`m_)?Developer`PackedArrayQ] :=  !Developer`PackedArrayQ[RandomProcesses`MarkovChainDump`m, Complex] && RandomProcesses`MarkovProcessUtilities`StochasticMatrixQ[RandomProcesses`MarkovChainDump`m]\nRandomProcesses`MarkovProcessUtilities`ImpliedStochasticMatrixQ[RandomProcesses`MarkovChainDump`im_] := Block[{RandomProcesses`MarkovChainDump`m = Statistics`Library`NumerizeUnit[RandomProcesses`MarkovChainDump`im]}, If[Internal`LiterallyOccurringQ[RandomProcesses`MarkovChainDump`m, Unevaluated[Quantity]], False, SquareMatrixQ[RandomProcesses`MarkovChainDump`m] && FreeQ[RandomProcesses`MarkovChainDump`m, _Complex] && Quiet[Min[RandomProcesses`MarkovChainDump`m] >= 0 =!= False] && (Block[{RandomProcesses`MarkovChainDump`v = Select[Total[RandomProcesses`MarkovChainDump`m, {2}], NumericQ]}, Quiet[Min[RandomProcesses`MarkovChainDump`v] == 1 && Max[RandomProcesses`MarkovChainDump`v] == 1] || VectorQ[RandomProcesses`MarkovChainDump`v - 1, PossibleZeroQ]] || Block[{RandomProcesses`MarkovChainDump`v = Select[Total[RandomProcesses`MarkovChainDump`m, {2}, Method -> \"CompensatedSummation\"], NumericQ]}, VectorQ[RandomProcesses`MarkovChainDump`v - 1, PossibleZeroQ]])]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`MarkovProcessUtilities`ImpliedStochasticMatrixQ",
	"RandomProcesses`MarkovProcessUtilities`ImpliedSubStochasticMatrixQ":"ObjectType: Symbol\nUsage: RandomProcesses`MarkovProcessUtilities`ImpliedSubStochasticMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`MarkovProcessUtilities`ImpliedSubStochasticMatrixQ[(RandomProcesses`MarkovChainDump`m_)?Developer`PackedArrayQ] :=  !Developer`PackedArrayQ[RandomProcesses`MarkovChainDump`m, Complex] && RandomProcesses`MarkovProcessUtilities`SubStochasticMatrixQ[RandomProcesses`MarkovChainDump`m]\nRandomProcesses`MarkovProcessUtilities`ImpliedSubStochasticMatrixQ[RandomProcesses`MarkovChainDump`im_] := Block[{RandomProcesses`MarkovChainDump`m = Statistics`Library`NumerizeUnit[RandomProcesses`MarkovChainDump`im]}, If[Internal`LiterallyOccurringQ[RandomProcesses`MarkovChainDump`m, Unevaluated[Quantity]], False, SquareMatrixQ[RandomProcesses`MarkovChainDump`m] && FreeQ[RandomProcesses`MarkovChainDump`m, _Complex] && Quiet[Min[RandomProcesses`MarkovChainDump`m] >= 0 =!= False] && Block[{RandomProcesses`MarkovChainDump`v = Select[Total[RandomProcesses`MarkovChainDump`m, {2}], NumericQ]}, Quiet[Min[RandomProcesses`MarkovChainDump`v] >= 0 && Max[RandomProcesses`MarkovChainDump`v] <= 1]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`MarkovProcessUtilities`ImpliedSubStochasticMatrixQ",
	"RandomProcesses`MarkovProcessUtilities`ImpliedTransitionRateMatrixQ":"ObjectType: Symbol\nUsage: RandomProcesses`MarkovProcessUtilities`ImpliedTransitionRateMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`MarkovProcessUtilities`ImpliedTransitionRateMatrixQ[(RandomProcesses`MarkovChainDump`qm_)?Developer`PackedArrayQ] :=  !Developer`PackedArrayQ[RandomProcesses`MarkovChainDump`qm, Complex] && RandomProcesses`MarkovProcessUtilities`TransitionRateMatrixQ[RandomProcesses`MarkovChainDump`qm]\nRandomProcesses`MarkovProcessUtilities`ImpliedTransitionRateMatrixQ[RandomProcesses`MarkovChainDump`iqm_] := Block[{RandomProcesses`MarkovChainDump`qm = Statistics`Library`NumerizeUnit[RandomProcesses`MarkovChainDump`iqm]}, If[Internal`LiterallyOccurringQ[RandomProcesses`MarkovChainDump`qm, Unevaluated[Quantity]], False, SquareMatrixQ[RandomProcesses`MarkovChainDump`qm] && FreeQ[RandomProcesses`MarkovChainDump`qm, _Complex] && Quiet[VectorQ[Select[Diagonal[RandomProcesses`MarkovChainDump`qm], NumericQ], NonPositive]] && Block[{RandomProcesses`MarkovChainDump`n = Statistics`Library`DestructureToList[RandomProcesses`MarkovChainDump`qm], RandomProcesses`MarkovChainDump`i}, Do[RandomProcesses`MarkovChainDump`n[[RandomProcesses`MarkovChainDump`i,RandomProcesses`MarkovChainDump`i]] *= 0, {RandomProcesses`MarkovChainDump`i, Length[RandomProcesses`MarkovChainDump`n]}]; MatrixQ[RandomProcesses`MarkovChainDump`n,  !NumericQ[#1] || NonNegative[#1] & ]] && (Block[{RandomProcesses`MarkovChainDump`v = Select[Total[RandomProcesses`MarkovChainDump`qm, {2}], NumericQ]}, VectorQ[RandomProcesses`MarkovChainDump`v, PossibleZeroQ]] || Block[{RandomProcesses`MarkovChainDump`v = Select[Total[RandomProcesses`MarkovChainDump`qm, {2}, Method -> \"CompensatedSummation\"], NumericQ]}, VectorQ[RandomProcesses`MarkovChainDump`v, PossibleZeroQ]])]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`MarkovProcessUtilities`ImpliedTransitionRateMatrixQ",
	"Assumptions`ImpliesQ":"ObjectType: Symbol\nUsage: Assumptions`ImpliesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Assumptions`ImpliesQ",
	"Experimental`ImpliesQ":"ObjectType: Symbol\nUsage: ImpliesQ[expr , expr ] tests whether the expression expr  implies expr . \n             1      2                                   1             2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Experimental`ImpliesQ",
	"Experimental`ImpliesRealQ":"ObjectType: Symbol\nUsage: ImpliesRealQ[ineqs , ineqs ] tests whether the inequalities and equations ineqs  imply the ineqs  for all real values of all variables. \n                  1       2                                                    1                2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: Experimental`ImpliesRealQ",
	"Reduce`ImpliesRealQ":"ObjectType: Symbol\nUsage: Reduce`ImpliesRealQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: Reduce`ImpliesRealQ",
	"System`ConvertersDump`ImportAPSGraphic":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportAPSGraphic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportAPSGraphic[System`ConvertersDump`file_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`str, System`ConvertersDump`cell, System`ConvertersDump`result, System`ConvertersDump`strm}, System`ConvertersDump`strm = OpenRead[System`ConvertersDump`file]; System`ConvertersDump`str = Read[System`ConvertersDump`strm, Record, RecordSeparators -> {}]; Close[System`ConvertersDump`strm]; System`ConvertersDump`cell = Cell[GraphicsData[\"PostScript\", System`ConvertersDump`str], \"Output\"]; System`ConvertersDump`result = System`ConvertersDump`GetRasterDataForExport[System`ConvertersDump`cell, RGBColor, False]; If[MatchQ[System`ConvertersDump`result, $Failed | {$Failed, _}], Return[$Failed], System`ConvertersDump`FromRasterDataPacket[System`ConvertersDump`result]]] \/; System`ConvertersDump`Utilities`ExportPacketFrontEndQ[\"InputForm\"]\nSystem`ConvertersDump`ImportAPSGraphic[System`ConvertersDump`file_, System`ConvertersDump`opts___] := (Message[Import::nofe, \"APS\"]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportAPSGraphic",
	"System`ConvertersDump`ImportByteArrayInternal":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportByteArrayInternal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba_, (System`ConvertersDump`opts___)?OptionQ] := System`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba, {Automatic}, System`ConvertersDump`opts]\nSystem`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba$_, {\"WXF\", \"Expression\"}, System`ConvertersDump`opts$:OptionsPattern[]] := System`Convert`WXFDump`ImportWXF[System`ConvertersDump`ba$, System`ConvertersDump`opts$]\nSystem`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba$_, {\"WXF\", \"HeldExpression\"}, System`ConvertersDump`opts$:OptionsPattern[]] := System`Convert`WXFDump`ImportWXFHeld[System`ConvertersDump`ba$, System`ConvertersDump`opts$]\nSystem`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba_, System`ConvertersDump`format_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`str}, If[System`ConvertersDump`ba === {}, System`ConvertersDump`str = \"\", System`ConvertersDump`str = Quiet[ByteArrayToString[System`ConvertersDump`ba, \"ISO8859-1\"]]; ]; If[ !StringQ[System`ConvertersDump`str], System`Private`SystemAssert[False]; Return[$Failed], Return[System`ConvertersDump`ImportStringTest[ImportByteArray, System`ConvertersDump`str, System`ConvertersDump`format, System`ConvertersDump`opts]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportByteArrayInternal",
	"System`ConvertersDump`ImportByteArrayTest":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportByteArrayTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportByteArrayTest[True, System`ConvertersDump`ba_, {(System`ConvertersDump`format_)?System`ConvertersDump`ElementQ, \"Rules\", Repeated[All, {0, 1}]}] := Block[{System`ConvertersDump`elems = Lookup[System`ConvertersDump`importElements, System`ConvertersDump`format, {}]}, System`ConvertersDump`ImportByteArrayTest[True, System`ConvertersDump`ba, {System`ConvertersDump`format, \"Rules\", System`ConvertersDump`elems}]]\nSystem`ConvertersDump`ImportByteArrayTest[True, System`ConvertersDump`ba_, {(System`ConvertersDump`format_)?System`ConvertersDump`ElementQ, \"Rules\", (System`ConvertersDump`elem_)?System`ConvertersDump`ElementQ, (System`ConvertersDump`subElems___)?System`ConvertersDump`ElementQ}, System`ConvertersDump`opts___] := System`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba, {System`ConvertersDump`format, System`ConvertersDump`elem, System`ConvertersDump`subElems}, System`ConvertersDump`opts]\nSystem`ConvertersDump`ImportByteArrayTest[True, System`ConvertersDump`ba_, {(System`ConvertersDump`format_)?System`ConvertersDump`ElementQ, \"Rules\", System`ConvertersDump`elems_List}, System`ConvertersDump`opts___] := (System`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba, {System`ConvertersDump`format, #1}, System`ConvertersDump`opts] & ) \/@ System`ConvertersDump`elems\nSystem`ConvertersDump`ImportByteArrayTest[_, System`ConvertersDump`ba_, System`ConvertersDump`format_, System`ConvertersDump`opts___] := Block[{System`ConvertersDump`res}, System`ConvertersDump`res = System`ConvertersDump`ImportByteArrayInternal[System`ConvertersDump`ba, System`ConvertersDump`format, System`ConvertersDump`opts]; If[MatchQ[Head[System`ConvertersDump`res], Rule | RuleDelayed], Last[System`ConvertersDump`res, Message[Import::noelem]; $Failed], System`ConvertersDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportByteArrayTest",
	"DataPaclets`ImportData":"ObjectType: Symbol\nUsage: DataPaclets`ImportData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DataPaclets`ImportData[DataPaclets`CommonDump`expr___] := DataPaclets`CommonDump`internalImportData[DataPaclets`CommonDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DataPaclets`ImportData",
	"Internal`ImportExportOptions":"ObjectType: Symbol\nUsage: Internal`ImportExportOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ImportExportOptions",
	"System`ConvertersDump`ImportFormatQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportFormatQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportFormatQ[\"AMSLATEX\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"LINES\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"BASE64\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"GZIP\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"AMSTEX\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"MGFCELL\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"UNICODETEXT\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"WXF\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"UUE\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"BZIP2\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"STRING\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"JPEG\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"XML\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"NEWICK\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"AMS-LATEX\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"WORDS\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"TEXT\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"RASTER\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"JSON\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"AMS-TEX\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"PNG\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"RDPSTRUCT\"] = True\nSystem`ConvertersDump`ImportFormatQ[\"REVTEX\"] = True\nSystem`ConvertersDump`ImportFormatQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportFormatQ",
	"FEPrivate`ImportImage":"ObjectType: Symbol\nUsage: FEPrivate`ImportImage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FEPrivate`ImportImage",
	"System`ConvertersDump`ImportInternal":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportInternal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportInternal[System`ConvertersDump`pipe_String, System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`stream, System`ConvertersDump`str, System`ConvertersDump`tmp, System`ConvertersDump`expr, System`ConvertersDump`tmpstrm, System`ConvertersDump`ComplexStringQ}, If[ !Developer`CheckFileAccess[Import, \"Read\" -> System`ConvertersDump`pipe], Message[Import::sandbox, Import]; Return[$Failed]]; System`ConvertersDump`stream = OpenRead[System`ConvertersDump`pipe, BinaryFormat ->  !System`ConvertersDump`TextFormatQ[System`ConvertersDump`format]]; System`ConvertersDump`str = Read[System`ConvertersDump`stream, Record, RecordSeparators -> {}, NullRecords -> True]; Close[System`ConvertersDump`stream]; If[ !StringQ[System`ConvertersDump`str], System`ConvertersDump`str = \"\"]; System`ConvertersDump`str = ToCharacterCode[System`ConvertersDump`str]; If[Max[System`ConvertersDump`str] > 255, System`ConvertersDump`str = ToCharacterCode[FromCharacterCode[System`ConvertersDump`str], \"UTF8\"]; System`ConvertersDump`ComplexStringQ = True, System`ConvertersDump`ComplexStringQ = False]; System`ConvertersDump`tmp = ImportExport`FileUtilities`TempFileName[System`ConvertersDump`format]; System`ConvertersDump`tmpstrm = OpenWrite[System`ConvertersDump`tmp, BinaryFormat -> True]; If[System`ConvertersDump`tmpstrm === $Failed, Return[$Failed]]; BinaryWrite[System`ConvertersDump`tmpstrm, System`ConvertersDump`str]; Close[System`ConvertersDump`tmpstrm]; If[System`ConvertersDump`ComplexStringQ, System`ConvertersDump`expr = System`ConvertersDump`ImportInternal[System`ConvertersDump`tmp, System`ConvertersDump`format, System`ConvertersDump`elements, CharacterEncoding -> \"UTF8\", Sequence @@ {System`ConvertersDump`opts}], System`ConvertersDump`expr = System`ConvertersDump`ImportInternal[System`ConvertersDump`tmp, System`ConvertersDump`format, System`ConvertersDump`elements, Sequence @@ {System`ConvertersDump`opts}]]; Quiet[ImportExport`FileUtilities`DeleteFileOrDir[System`ConvertersDump`tmp]]; System`ConvertersDump`expr] \/; StringMatchQ[System`ConvertersDump`pipe, \"!*\"]\nSystem`ConvertersDump`ImportInternal[System`ConvertersDump`stream_InputStream, System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := System`ConvertersDump`import[System`ConvertersDump`stream, System`ConvertersDump`format, System`ConvertersDump`elements, System`ConvertersDump`opts] \/; System`ConvertersDump`importStreamsQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[System`ConvertersDump`stream_InputStream, System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`tmp, System`ConvertersDump`str, System`ConvertersDump`expr, System`ConvertersDump`tmpstrm, System`ConvertersDump`ComplexStringQ}, System`ConvertersDump`str = Read[System`ConvertersDump`stream, Record, RecordSeparators -> {}, NullRecords -> True]; If[ !StringQ[System`ConvertersDump`str], System`ConvertersDump`str = \"\"]; System`ConvertersDump`str = ToCharacterCode[System`ConvertersDump`str]; If[Max[System`ConvertersDump`str] > 255, System`ConvertersDump`str = ToCharacterCode[FromCharacterCode[System`ConvertersDump`str], \"UTF8\"]; System`ConvertersDump`ComplexStringQ = True, System`ConvertersDump`ComplexStringQ = False]; System`ConvertersDump`tmp = ImportExport`FileUtilities`TempFileName[System`ConvertersDump`format]; If[System`ConvertersDump`AudioVideoTempFileQ[System`ConvertersDump`format, System`ConvertersDump`elements], If[MemberQ[System`ConvertersDump`$VideoTempFileCFormats, System`ConvertersDump`format], AppendTo[System`ConvertersDump`$tmpfilesexit, System`ConvertersDump`tmp]; , System`ConvertersDump`tmp = FileNameJoin[{DirectoryName[Audio`Utilities`GenerateOutputPath[]], FileNameTake[System`ConvertersDump`tmp]}]; ]; ]; System`ConvertersDump`tmpstrm = OpenWrite[System`ConvertersDump`tmp, BinaryFormat -> True]; If[System`ConvertersDump`tmpstrm === $Failed, Return[$Failed]]; BinaryWrite[System`ConvertersDump`tmpstrm, System`ConvertersDump`str]; Close[System`ConvertersDump`tmpstrm]; If[System`ConvertersDump`ComplexStringQ, System`ConvertersDump`expr = System`ConvertersDump`ImportInternal[System`ConvertersDump`tmp, System`ConvertersDump`format, System`ConvertersDump`elements, CharacterEncoding -> \"UTF8\", Sequence @@ {System`ConvertersDump`opts}], System`ConvertersDump`expr = System`ConvertersDump`ImportInternal[System`ConvertersDump`tmp, System`ConvertersDump`format, System`ConvertersDump`elements, Sequence @@ {System`ConvertersDump`opts}]]; If[ !System`ConvertersDump`AudioVideoTempFileQ[System`ConvertersDump`format, System`ConvertersDump`elements], Quiet[ImportExport`FileUtilities`DeleteFileOrDir[System`ConvertersDump`tmp]]; ]; System`ConvertersDump`expr] \/;  !System`ConvertersDump`importStreamsQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[(System`ConvertersDump`dir_String)?(FileType[#1] === Directory & ), System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := (If[ !Developer`CheckFileAccess[Import, \"Read\" -> System`ConvertersDump`dir], Message[Import::sandbox, Import]; Return[$Failed]]; System`ConvertersDump`import[System`ConvertersDump`dir, System`ConvertersDump`format, System`ConvertersDump`elements, System`ConvertersDump`opts]) \/; System`ConvertersDump`importDirectoriesQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[(System`ConvertersDump`dir_String)?(FileType[#1] === Directory & ), System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := (Message[Import::nodirsup, System`ConvertersDump`dir, System`ConvertersDump`format]; Return[$Failed]; ) \/;  !System`ConvertersDump`importDirectoriesQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[System`ConvertersDump`ffile_String, System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := Module[{System`ConvertersDump`str, System`ConvertersDump`expr}, If[ !Developer`CheckFileAccess[Import, \"Read\" -> System`ConvertersDump`ffile], Message[Import::sandbox, Import]; Return[$Failed]]; System`ConvertersDump`str = OpenRead[System`ConvertersDump`ffile, BinaryFormat ->  !System`ConvertersDump`TextFormatQ[System`ConvertersDump`format]]; If[ !MatchQ[System`ConvertersDump`str, _InputStream], Return[$Failed]]; System`ConvertersDump`expr = System`ConvertersDump`ImportInternal[System`ConvertersDump`str, System`ConvertersDump`format, System`ConvertersDump`elements, System`ConvertersDump`opts]; Close[System`ConvertersDump`str]; System`ConvertersDump`expr] \/;  !System`ConvertersDump`importFileNamesQ[System`ConvertersDump`format] && System`ConvertersDump`importStreamsQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[System`ConvertersDump`ffile_String, System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := (If[ !Developer`CheckFileAccess[Import, \"Read\" -> System`ConvertersDump`ffile], Message[Import::sandbox, Import]; Return[$Failed]]; If[ !ImportExport`FileUtilities`FileAccessibleQ[System`ConvertersDump`ffile, \"DirectoriesOK\" -> False], Message[Import::noopen, System`ConvertersDump`ffile]; Return[$Failed]; ]; System`ConvertersDump`import[System`ConvertersDump`ffile, System`ConvertersDump`format, System`ConvertersDump`elements, System`ConvertersDump`opts]) \/; System`ConvertersDump`importFileNamesQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[System`ConvertersDump`ffile_String, System`ConvertersDump`format_, System`ConvertersDump`elements_, System`ConvertersDump`opts___] := (Message[Import::expectdir, System`ConvertersDump`ffile]; Return[$Failed]; ) \/; System`ConvertersDump`importDirectoriesQ[System`ConvertersDump`format]\nSystem`ConvertersDump`ImportInternal[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportInternal",
	"System`Convert`NewickDump`ImportNewick":"ObjectType: Symbol\nUsage: System`Convert`NewickDump`ImportNewick\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`NewickDump`ImportNewick",
	"System`ConvertersDump`ImportRDPStruct":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportRDPStruct\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportRDPStruct",
	"System`ConvertersDump`ImportStringTest":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportStringTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportStringTest[System`ConvertersDump`h_, System`ConvertersDump`str_, System`ConvertersDump`format_, System`ConvertersDump`opts___] := System`ConvertersDump`AutoClose[Module[{System`ConvertersDump`fmt, System`ConvertersDump`cformat, System`ConvertersDump`elements, System`ConvertersDump`newstr, System`ConvertersDump`newoptions}, System`ConvertersDump`badsyntax = DeleteCases[Flatten[{System`ConvertersDump`format}], _Symbol | _?StringQ | _?IntegerQ | _Span?System`ConvertersDump`Utilities`ValidSpanQ | _?System`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ]; If[MemberQ[Flatten[{System`ConvertersDump`format}], \"\"], AppendTo[System`ConvertersDump`badsyntax, \"\\\"\\\"\"]; ]; If[Positive[Length[System`ConvertersDump`badsyntax]], (Message[Import::elemstx, #1] & ) \/@ System`ConvertersDump`badsyntax; Throw[$Failed]; ]; System`ConvertersDump`newoptions = Flatten[{System`ConvertersDump`opts}]; If[ !System`ConvertersDump`testoptsQ[Import, Sequence @@ System`ConvertersDump`newoptions], Throw[$Failed]]; If[ !System`ConvertersDump`IEStringInitQ, System`ConvertersDump`LoadImportExportFormat[{\"String\", \"Text\", \"Base64\", \"BZIP2\", \"GZIP\", \"UUE\"}]; System`ConvertersDump`IEStringInitQ = True]; If[StringQ[First[System`ConvertersDump`format]] &&  !MemberQ[{Automatic, \"Elements\", \"Rules\"}, First[System`ConvertersDump`format]], System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`CaseInsensitiveReplace[System`ConvertersDump`format]]; ]; System`ConvertersDump`fmt = First[System`ConvertersDump`format]; If[StringQ[First[System`ConvertersDump`format]] && First[System`ConvertersDump`format] === \"Binary\", System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`$BinaryDataTypes]]; System`ConvertersDump`cformat = System`ConvertersDump`canonicalFormat[System`ConvertersDump`fmt]; If[System`ConvertersDump`cformat === $Failed, System`ConvertersDump`cformat = StringFormat[System`ConvertersDump`str]; System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`cformat]; System`ConvertersDump`cformat = System`ConvertersDump`canonicalFormat[System`ConvertersDump`cformat]; System`ConvertersDump`elements = System`ConvertersDump`format, System`ConvertersDump`elements = Rest[System`ConvertersDump`format]]; If[System`ConvertersDump`cformat =!= $Failed &&  !System`ConvertersDump`formatQ[Import, System`ConvertersDump`cformat], Message[System`ConvertersDump`h::fmtnosup, System`ConvertersDump`prettynameFormat[System`ConvertersDump`cformat]]; Throw[$Failed]; ]; If[System`ConvertersDump`cformat === $Failed, If[System`ConvertersDump`fmt === Automatic, Message[System`ConvertersDump`h::infer, System`ConvertersDump`str]; Throw[$Failed]; , Message[System`ConvertersDump`h::format, System`ConvertersDump`fmt]; Throw[$Failed]; ]; ]; If[MemberQ[Flatten[{System`ConvertersDump`opts}], HoldPattern[(Rule | RuleDelayed)[ConversionOptions, _]]], Message[System`ConvertersDump`h::convoptobs, System`ConvertersDump`prettynameFormat[System`ConvertersDump`cformat]]; Throw[$Failed]; ]; System`ConvertersDump`newstr = System`ConvertersDump`str; If[System`ConvertersDump`TextFormatQ[System`ConvertersDump`cformat, System`ConvertersDump`newoptions], System`ConvertersDump`newstr = StringReplace[System`ConvertersDump`str, FromCharacterCode[{62371}] -> \"\\n\"]; ]; If[System`ConvertersDump`elements === {Automatic}, System`ConvertersDump`elements = System`ConvertersDump`defaultElement[Import][System`ConvertersDump`cformat]]; If[System`ConvertersDump`newstr == \"\" && System`ConvertersDump`importDirectoriesQ[System`ConvertersDump`cformat] &&  !System`ConvertersDump`importStreamsQ[System`ConvertersDump`cformat] &&  !System`ConvertersDump`importFileNamesQ[System`ConvertersDump`cformat], Message[System`ConvertersDump`h::expectdir, \"\\\"\\\"\"]; Throw[$Failed], Import[StringToStream[System`ConvertersDump`newstr], {System`ConvertersDump`cformat, Sequence @@ System`ConvertersDump`elements}, Sequence @@ System`ConvertersDump`newoptions]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportStringTest",
	"System`ConvertersDump`ImportTest":"ObjectType: Symbol\nUsage: System`ConvertersDump`ImportTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ImportTest[System`ConvertersDump`channel_, System`ConvertersDump`format_, System`ConvertersDump`opts___] := System`ConvertersDump`AutoClose[Block[{System`ConvertersDump`INFERREDFORMAT, $Path = DeleteCases[Flatten[Path \/. Flatten[{System`ConvertersDump`opts}] \/. {Path :> $Path, System`ConvertersDump`p_ :> Join[{System`ConvertersDump`p}, {$Path}]}], Except[_String]]}, Module[{System`ConvertersDump`cformat, System`ConvertersDump`elements, System`ConvertersDump`errch, System`ConvertersDump`badsyntax, System`ConvertersDump`channeltype, System`ConvertersDump`newchannel, System`ConvertersDump`newoptions, System`ConvertersDump`updatedformat, System`ConvertersDump`fmt, System`ConvertersDump`availElem, System`ConvertersDump`testelem, System`ConvertersDump`httprequestparams, System`ConvertersDump`locHeaders, System`ConvertersDump`httpuseragent, System`ConvertersDump`fetchURLopts = {}, System`ConvertersDump`fetchURLRes, System`ConvertersDump`httpHeaders, System`ConvertersDump`formatsToTest, System`ConvertersDump`PossibleFiles, System`ConvertersDump`fSplit, System`ConvertersDump`res}, System`ConvertersDump`badsyntax = DeleteCases[Flatten[{System`ConvertersDump`format}], _Symbol | _?StringQ | _?IntegerQ | _Span?System`ConvertersDump`Utilities`ValidSpanQ | _?System`ConvertersDump`Utilities`PossibleTimeOrSampleIntervalQ]; If[MemberQ[Flatten[{System`ConvertersDump`format}], \"\"], AppendTo[System`ConvertersDump`badsyntax, \"\\\"\\\"\"]; ]; If[Positive[Length[System`ConvertersDump`badsyntax]], (Message[Import::elemstx, #1] & ) \/@ System`ConvertersDump`badsyntax; Throw[$Failed]; ]; If[StringQ[System`ConvertersDump`channel] &&  !StringMatchQ[System`ConvertersDump`channel, \"!*\" | \"*:\/\/*\"], System`ConvertersDump`fSplit = FileNameSplit[System`ConvertersDump`channel]; If[MemberQ[Characters[Last[System`ConvertersDump`fSplit, \"\"]], \"*\"], If[Length[System`ConvertersDump`fSplit] === 1, System`ConvertersDump`PossibleFiles = FileNames[Last[System`ConvertersDump`fSplit]]; , System`ConvertersDump`PossibleFiles = FileNames[Last[System`ConvertersDump`fSplit], FileNameJoin[Most[System`ConvertersDump`fSplit]], 1]; ]; If[Length[System`ConvertersDump`PossibleFiles] =!= 0, Return[(Import[#1, System`ConvertersDump`format, System`ConvertersDump`opts] & ) \/@ System`ConvertersDump`PossibleFiles, Module]; ]; ]; ]; If[System`ConvertersDump`format =!= {} && StringQ[First[System`ConvertersDump`format]] &&  !MemberQ[{Automatic, \"Elements\", \"Rules\"}, First[System`ConvertersDump`format]], System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`CaseInsensitiveReplace[System`ConvertersDump`format]]; ]; If[System`ConvertersDump`format =!= {} && StringQ[First[System`ConvertersDump`format]] && StringMatchQ[First[System`ConvertersDump`format], \"Binary\", IgnoreCase -> True], System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`$BinaryDataTypes]; ]; If[StringQ[System`ConvertersDump`channel], System`ConvertersDump`formatsToTest = Select[System`ConvertersDump`$extensionMappings, StringMatchQ[System`ConvertersDump`channel, First[#1]] & ]; If[System`ConvertersDump`formatsToTest =!= {}, System`ConvertersDump`LoadImportExportFormat[Last \/@ System`ConvertersDump`formatsToTest]; ]; ]; If[ !System`ConvertersDump`IEInitQ, System`ConvertersDump`LoadImportExportFormat[{\"Base64\", \"BZIP2\", \"GZIP\", \"UUE\"}]; System`ConvertersDump`IEInitQ = True; ]; If[System`ConvertersDump`channel === None && MatchQ[System`ConvertersDump`format, {_String, \"Elements\" | \"MIMEType\" | \"Extension\" | \"DefaultElement\"}], System`ConvertersDump`cformat = Quiet[ImportExport`FormatName[First[System`ConvertersDump`format]]]; If[ !StringQ[System`ConvertersDump`cformat], Message[Import::fmtnosup, First[System`ConvertersDump`format]]; Return[$Failed]; ]; Return[Switch[Last[System`ConvertersDump`format], \"Elements\", System`ConvertersDump`ImElem[System`ConvertersDump`cformat], \"MIMEType\", ImportExport`FormatToMIMETypeList[System`ConvertersDump`cformat], \"Extension\", ImportExport`FormatToExtensionList[System`ConvertersDump`cformat], \"DefaultElement\", First[System`ConvertersDump`defaultElement[Import][System`ConvertersDump`cformat], $Failed]]]; ]; System`ConvertersDump`newoptions = Flatten[{System`ConvertersDump`opts}]; If[ !System`ConvertersDump`testoptsQ[Import, Sequence @@ System`ConvertersDump`newoptions], Throw[$Failed]; ]; System`ConvertersDump`origchanneltype = System`ConvertersDump`channeltype = Which[MatchQ[System`ConvertersDump`channel, _InputStream], \"Stream\",  !MatchQ[System`ConvertersDump`channel, _String], Message[Import::chtype, System`ConvertersDump`channel]; Throw[$Failed]; , System`ConvertersDump`channel === \"\", Message[Import::chtype, \"\\\"\\\"\"]; Throw[$Failed]; , StringMatchQ[System`ConvertersDump`channel, \"!*\"], \"Pipe\", StringMatchQ[System`ConvertersDump`channel, \"file:*\"], \"FileURI\", StringMatchQ[System`ConvertersDump`channel, \"*:\/\/*\"], If[StringMatchQ[System`ConvertersDump`channel, \"http:\/\/*\" | \"ftp:\/\/*\" | \"https:\/\/*\"], \"URI\", Message[Import::chtype, System`ConvertersDump`channel]; Throw[$Failed]; ], Quiet[FileType[System`ConvertersDump`channel], General::unuser] === Directory, \"Directory\", True, \"File\"]; Switch[System`ConvertersDump`channeltype, \"Stream\", If[MemberQ[Streams[], System`ConvertersDump`channel], System`ConvertersDump`newchannel = System`ConvertersDump`channel; , Message[Import::openx, System`ConvertersDump`channel]; Throw[$Failed]; ]; , \"Pipe\", System`ConvertersDump`newchannel = System`ConvertersDump`channel; , \"Directory\", If[StringLength[System`ConvertersDump`channel] > 0 && StringTake[System`ConvertersDump`channel, -1] =!= $PathnameSeparator, System`ConvertersDump`newchannel = StringJoin[System`ConvertersDump`channel, $PathnameSeparator]; , System`ConvertersDump`newchannel = System`ConvertersDump`channel; ]; System`ConvertersDump`newchannel = ImportExport`FileUtilities`GetFullPathName[System`ConvertersDump`newchannel]; , \"URI\", Needs[\"Utilities`URLTools`\"]; System`ConvertersDump`channeltype = \"File\"; AppendTo[System`ConvertersDump`fetchURLopts, \"RequestMethod\" -> (\"RequestMethod\" \/. System`ConvertersDump`newoptions \/. \"RequestMethod\" -> \"GET\")]; System`ConvertersDump`httprequestparams = \"RequestParameters\" \/. System`ConvertersDump`newoptions \/. \"RequestParameters\" -> None; If[System`ConvertersDump`httprequestparams =!= None, AppendTo[System`ConvertersDump`fetchURLopts, \"RequestParameters\" -> System`ConvertersDump`httprequestparams]]; System`ConvertersDump`httpuseragent = \"UserAgent\" \/. System`ConvertersDump`newoptions \/. \"UserAgent\" -> None; If[System`ConvertersDump`httpuseragent =!= None, AppendTo[System`ConvertersDump`fetchURLopts, \"RequestHeaderFields\" -> {\"User-Agent\" -> System`ConvertersDump`httpuseragent}]]; AppendTo[System`ConvertersDump`fetchURLopts, Utilities`URLTools`FileFilters -> None]; System`ConvertersDump`fetchURLopts = Join[System`ConvertersDump`fetchURLopts, FilterRules[System`ConvertersDump`newoptions, Options[Utilities`URLTools`FetchURL]]]; System`ConvertersDump`IEDebugPrint[\"Evaluating Utilities`URLTools`FetchURL[channel, TempFileNameFromURL[channel], fetchURLopts] with {channel, fetchURLopts}:\"]; System`ConvertersDump`IEDebugPrint[{System`ConvertersDump`channel, {System`ConvertersDump`fetchURLopts}}]; System`ConvertersDump`fetchURLRes = Quiet[Utilities`URLTools`FetchURLWithHeaders[System`ConvertersDump`channel, System`ConvertersDump`TempFileNameFromURL[System`ConvertersDump`channel], System`ConvertersDump`fetchURLopts], URLFetch::invhttp]; If[System`ConvertersDump`fetchURLRes === $Failed, Throw[$Failed]; , System`ConvertersDump`newchannel = System`ConvertersDump`fetchURLRes[[1]]; System`ConvertersDump`httpHeaders = Apply[Rule, Replace[System`ConvertersDump`fetchURLRes[[2]], Except[_List] -> {}], {1}]; ]; , \"File\" | \"FileURI\", System`ConvertersDump`newchannel = If[System`ConvertersDump`channeltype === \"FileURI\", System`ConvertersDump`channeltype = \"File\"; If[StringMatchQ[$SystemID, \"Windows*\"], StringReplace[System`ConvertersDump`channel, \"file:\"~~Repeated[\"\/\", {0, 3}]~~System`ConvertersDump`x___ :> System`ConvertersDump`x], StringReplace[System`ConvertersDump`channel, \"file:\/\/\" | \"file:\"~~System`ConvertersDump`x___ :> System`ConvertersDump`x]], System`ConvertersDump`channel]; System`ConvertersDump`newchannel = ImportExport`FileUtilities`GetFullPathName[System`ConvertersDump`newchannel, System`ConvertersDump`newoptions]; If[System`ConvertersDump`newchannel === $Failed, Message[Import::nffil, System`ConvertersDump`channel, Import]; Throw[$Failed]; ]; If[FileType[System`ConvertersDump`newchannel] === Directory, System`ConvertersDump`channeltype = \"Directory\"; If[StringTake[System`ConvertersDump`newchannel, -1] =!= $PathnameSeparator, System`ConvertersDump`newchannel = StringJoin[System`ConvertersDump`newchannel, $PathnameSeparator]; ]; ]; , _, System`ConvertersDump`newchannel = $Failed; Throw[$Failed]; ]; If[System`ConvertersDump`newchannel === $Failed, Throw[$Failed]; ]; If[MatchQ[System`ConvertersDump`channeltype, \"File\" | \"Stream\"], If[ !TrueQ[\"DoNotDecode\" \/. System`ConvertersDump`newoptions], {System`ConvertersDump`newchannel, System`ConvertersDump`updatedformat} = System`ConvertersDump`Decode[System`ConvertersDump`newchannel, System`ConvertersDump`format]; System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`updatedformat]; If[System`ConvertersDump`newchannel === $Failed, Throw[$Failed]; ]; , System`ConvertersDump`updatedformat = System`ConvertersDump`format; ]; , System`ConvertersDump`updatedformat = Replace[System`ConvertersDump`format, {} -> {Automatic}]; ]; System`ConvertersDump`fmt = First[System`ConvertersDump`updatedformat]; Switch[System`ConvertersDump`channeltype, \"File\" | \"Directory\" | \"Stream\", System`ConvertersDump`cformat = System`ConvertersDump`canonicalFormat[System`ConvertersDump`fmt]; If[System`ConvertersDump`cformat === $Failed, System`ConvertersDump`cformat = Quiet[FileFormat[System`ConvertersDump`newchannel]]; System`ConvertersDump`LoadImportExportFormat[System`ConvertersDump`cformat]; System`ConvertersDump`cformat = System`ConvertersDump`canonicalFormat[System`ConvertersDump`cformat] \/. \"BINARY\" -> $Failed; System`ConvertersDump`elements = If[System`ConvertersDump`fmt === Automatic, {}, System`ConvertersDump`updatedformat]; , System`ConvertersDump`elements = Rest[System`ConvertersDump`updatedformat]; ]; , \"Pipe\", If[System`ConvertersDump`fmt === Automatic, Message[Import::general, \"A format must be specified when importing from a pipe.\"]; Throw[$Failed]; ]; System`ConvertersDump`cformat = System`ConvertersDump`canonicalFormat[System`ConvertersDump`fmt]; System`ConvertersDump`elements = Rest[System`ConvertersDump`updatedformat]; If[System`ConvertersDump`cformat === $Failed, Message[Import::fmtnosup, System`ConvertersDump`fmt]; Throw[$Failed]; ]; , _, System`ConvertersDump`cformat = $Failed; System`ConvertersDump`elements = {}; ]; If[MatchQ[System`ConvertersDump`format, {Repeated[_String, {0, 1}], \"MIMEType\"}], If[System`ConvertersDump`cformat =!= $Failed, Return[ImportExport`FormatToMIMETypeList[System`ConvertersDump`cformat \/. System`ConvertersDump`$prettynameFormats]]; , System`ConvertersDump`errch = Last[System`ConvertersDump`Utilities`FromFileName[System`ConvertersDump`channel]]; If[Head[System`ConvertersDump`errch] =!= String, System`ConvertersDump`errch = System`ConvertersDump`channel]; Message[Import::infer, System`ConvertersDump`errch]; Throw[$Failed]]]; If[MatchQ[System`ConvertersDump`format, {Repeated[_String, {0, 1}], \"Extension\"}], If[System`ConvertersDump`cformat =!= $Failed, Return[ImportExport`FormatToExtensionList[System`ConvertersDump`cformat \/. System`ConvertersDump`$prettynameFormats]]; , System`ConvertersDump`errch = Last[System`ConvertersDump`Utilities`FromFileName[System`ConvertersDump`channel]]; If[Head[System`ConvertersDump`errch] =!= String, System`ConvertersDump`errch = System`ConvertersDump`channel]; Message[Import::infer, System`ConvertersDump`errch]; Throw[$Failed]]]; If[System`ConvertersDump`cformat =!= $Failed &&  !System`ConvertersDump`formatQ[Import, System`ConvertersDump`cformat], Message[Import::fmtnosup, System`ConvertersDump`prettynameFormat[System`ConvertersDump`cformat]]; Throw[$Failed]; ]; If[System`ConvertersDump`cformat === $Failed, If[System`ConvertersDump`fmt === Automatic, System`ConvertersDump`errch = Last[System`ConvertersDump`Utilities`FromFileName[System`ConvertersDump`channel]]; If[Head[System`ConvertersDump`errch] =!= String, System`ConvertersDump`errch = System`ConvertersDump`channel; ]; Message[Import::infer, System`ConvertersDump`errch]; Throw[$Failed]; , Message[Import::format, System`ConvertersDump`fmt]; Throw[$Failed]; ]; ]; System`ConvertersDump`INFERREDFORMAT = System`ConvertersDump`prettynameFormat[System`ConvertersDump`cformat]; If[MemberQ[System`ConvertersDump`newoptions, HoldPattern[(Rule | RuleDelayed)[ConversionOptions, _]]], Message[Import::convoptobs, System`ConvertersDump`INFERREDFORMAT]; Throw[$Failed]; ]; If[MemberQ[Join[System`ConvertersDump`$webFormats, System`ConvertersDump`$AudioVideoTempFileCFormats], System`ConvertersDump`cformat], If[StringMatchQ[System`ConvertersDump`cformat, \"HTML\" | \"XHTML\" | \"XHTMLMATHML\"], System`ConvertersDump`httpHeaders = Replace[System`ConvertersDump`httpHeaders, Except[_List] :> {}]; System`ConvertersDump`locHeaders = If[Length[System`ConvertersDump`httpHeaders] > 0, Select[System`ConvertersDump`httpHeaders, StringMatchQ[\"location\", #1[[1]], IgnoreCase -> True] & ], {}]; If[Length[System`ConvertersDump`locHeaders] > 0, AppendTo[System`ConvertersDump`newoptions, \"Channel\" -> Last[Last[System`ConvertersDump`locHeaders]]]; , AppendTo[System`ConvertersDump`newoptions, \"Channel\" -> System`ConvertersDump`channel]; ]; AppendTo[System`ConvertersDump`newoptions, \"HTTPHeaders\" -> System`ConvertersDump`httpHeaders]; , AppendTo[System`ConvertersDump`newoptions, \"Channel\" -> System`ConvertersDump`channel]; ]; If[System`ConvertersDump`origchanneltype === \"URI\" && MemberQ[System`ConvertersDump`$VideoTempFileCFormats, System`ConvertersDump`cformat], AppendTo[System`ConvertersDump`$tmpfilesexit, System`ConvertersDump`newchannel]; System`ConvertersDump`$tmpfiles = DeleteCases[System`ConvertersDump`$tmpfiles, SelectFirst[System`ConvertersDump`$tmpfiles, StringContainsQ[System`ConvertersDump`newchannel, #1] & ]]; ]; ]; If[System`ConvertersDump`elements =!= {} && System`ConvertersDump`elements =!= {\"*\"} && StringQ[First[System`ConvertersDump`elements]] && StringMatchQ[System`ConvertersDump`INFERREDFORMAT, First[System`ConvertersDump`elements], IgnoreCase -> True], System`ConvertersDump`elements = Rest[System`ConvertersDump`elements]; ]; System`ConvertersDump`availElem = System`ConvertersDump`ImElem[System`ConvertersDump`cformat]; If[ !MatchQ[System`ConvertersDump`elements, {\"Rules\"} | {\"Elements\"} | {All} | {\"All\"} | {\"Options\"} | {Options} | {\"DefaultElement\"} | {}] && (System`ConvertersDump`testelem = DeleteCases[System`ConvertersDump`elements, \"Rules\" | \"Elements\" | \"All\" | All | \"Options\" | Options | \"DefaultElement\", Infinity]; System`ConvertersDump`testelem =!= {}) && MatchQ[System`ConvertersDump`availElem, {_String..}], Which[Head[First[System`ConvertersDump`testelem]] === String, System`ConvertersDump`testelem = Take[System`ConvertersDump`testelem, 1]; , MatchQ[System`ConvertersDump`testelem, {{_String..}}], System`ConvertersDump`testelem = Flatten[System`ConvertersDump`testelem]; , True, System`ConvertersDump`testelem = {}]; If[Complement[System`ConvertersDump`testelem, System`ConvertersDump`availElem] =!= {}, Message[Import::noelem, First[Complement[System`ConvertersDump`testelem, System`ConvertersDump`availElem]], System`ConvertersDump`prettynameFormat[System`ConvertersDump`cformat]]; Throw[$Failed]; ]; ]; System`ConvertersDump`res = System`ConvertersDump`iShowProgress[Import, System`ConvertersDump`cformat, System`ConvertersDump`ImportInternal[System`ConvertersDump`newchannel, System`ConvertersDump`cformat, System`ConvertersDump`elements, Sequence @@ System`ConvertersDump`newoptions]]; Which[System`ConvertersDump`cformat === \"GIF\" && System`Convert`CommonGraphicsDump`$InitGIFTools === True, Quiet[GIFTools`Private`$ClearCache[System`ConvertersDump`newchannel]], System`ConvertersDump`cformat === \"PNG\", Quiet[Image`ImportExportDump`DeleteCachePNG[]], StringMatchQ[System`ConvertersDump`cformat, \"M4A\"] && StringMatchQ[$SystemID, \"Windows*\" | \"MacOSX*\"], Quiet[MediaTools`Private`$DeleteAudioCache[System`ConvertersDump`newchannel]]]; System`ConvertersDump`res]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ImportTest",
	"System`Convert`TeXImportDump`ImportTeXElements":"ObjectType: Symbol\nUsage: System`Convert`TeXImportDump`ImportTeXElements\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Convert`TeXImportDump`ImportTeXElements[System`Convert`TeXImportDump`file_, System`Convert`TeXImportDump`opts___] := \"Notebook\" -> System`Convert`TeXImportDump`TeXImport[System`Convert`TeXImportDump`file, System`Convert`TeXImportDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`TeXImportDump`ImportTeXElements",
	"Themes`ImportTheme":"ObjectType: Symbol\nUsage: Themes`ImportTheme\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Themes`ImportTheme[System`PlotThemeDump`file_, System`PlotThemeDump`resolve_Symbol:Charting`ResolvePlotTheme] := Block[{System`PlotThemeDump`theme, System`PlotThemeDump`att}, Internal`WithLocalSettings[System`PlotThemeDump`att = Attributes[System`PlotThemeDump`resolve]; ClearAttributes[System`PlotThemeDump`resolve, System`PlotThemeDump`att], {System`PlotThemeDump`theme, System`PlotThemeDump`version, System`PlotThemeDump`rules} = Get[System`PlotThemeDump`file]; Apply[Themes`AddThemeRules, System`PlotThemeDump`rules, {1}], SetAttributes[System`PlotThemeDump`resolve, System`PlotThemeDump`att]]; System`PlotThemeDump`theme]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Themes`ImportTheme",
	"Reduce`ImproveApprox":"ObjectType: Symbol\nUsage: Reduce`ImproveApprox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ImproveApprox[System`TRootsDump`f_, System`TRootsDump`appx_, System`TRootsDump`mult_, System`TRootsDump`prec_] := Module[{System`TRootsDump`wprec = System`TRootsDump`prec + 10, System`TRootsDump`r, System`TRootsDump`i = 0, System`TRootsDump`pr}, System`TRootsDump`r = System`TRootsDump`IAOneStep[System`TRootsDump`f, System`TRootsDump`appx, System`TRootsDump`mult, System`TRootsDump`wprec]; While[System`TRootsDump`r === $Failed && System`TRootsDump`i < 3, System`TRootsDump`i++; System`TRootsDump`wprec *= If[System`TRootsDump`i == 1 && System`TRootsDump`mult > 2, System`TRootsDump`mult, 2]; System`TRootsDump`r = System`TRootsDump`IAOneStep[System`TRootsDump`f, System`TRootsDump`appx, System`TRootsDump`mult, System`TRootsDump`wprec]]; If[System`TRootsDump`r === $Failed, Return[$Failed]]; System`TRootsDump`pr = Max[Precision[System`TRootsDump`r[[1]]], 1]; If[System`TRootsDump`pr < System`TRootsDump`prec && System`TRootsDump`i < 3, System`TRootsDump`wprec *= 2*(System`TRootsDump`prec\/System`TRootsDump`pr); System`TRootsDump`r = System`TRootsDump`IAOneStep[System`TRootsDump`f, System`TRootsDump`appx, System`TRootsDump`mult, System`TRootsDump`wprec]]; System`TRootsDump`r]\nReduce`ImproveApprox[System`TRootsDump`f_, {System`TRootsDump`l_, System`TRootsDump`r_}, System`TRootsDump`prec_] := Module[{System`TRootsDump`X, System`TRootsDump`fX}, System`TRootsDump`fX = System`TRootsDump`f[System`TRootsDump`X]; Reduce`FindIsolatedRoot[System`TRootsDump`fX, {System`TRootsDump`X, System`TRootsDump`l, System`TRootsDump`r}, System`TRootsDump`prec]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ImproveApprox",
	"Region`Mesh`ImproveBoundaries":"ObjectType: Symbol\nUsage: Region`Mesh`ImproveBoundaries\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CheckNormalAngles -> True, QuadraticPoints -> Automatic, SteinerPoints -> Automatic}\nAttributes: {}\nFullName: Region`Mesh`ImproveBoundaries",
	"NDSolve`FEM`ImproveBoundaryPosition":"ObjectType: Symbol\nUsage: NDSolve`FEM`ImproveBoundaryPosition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`ImproveBoundaryPosition[NDSolve`FEM`ElementMeshDump`mesh_, NDSolve`FEM`ElementMeshDump`region_] \/; NDSolve`FEM`ElementMeshQ[NDSolve`FEM`ElementMeshDump`mesh] && NDSolve`FEM`ElementMeshDump`regionQ[NDSolve`FEM`ElementMeshDump`region] := Block[{NDSolve`FEM`ElementMeshDump`vars, NDSolve`FEM`ElementMeshDump`pred, NDSolve`FEM`ElementMeshDump`dim, NDSolve`FEM`ElementMeshDump`res, NDSolve`FEM`ElementMeshDump`bb}, NDSolve`FEM`ElementMeshDump`vars = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"PredicateVariables\"]; NDSolve`FEM`ElementMeshDump`pred = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"Predicates\"]; NDSolve`FEM`ElementMeshDump`dim = NDSolve`FEM`ElementMeshDump`mesh[\"EmbeddingDimension\"]; If[NDSolve`FEM`ElementMeshDump`pred === None || NDSolve`FEM`ElementMeshDump`pred === Automatic || NDSolve`FEM`ElementMeshDump`dim != NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"EmbeddingDimension\"] || NDSolve`FEM`ElementMeshDump`dim < 2 || NDSolve`FEM`ElementMeshDump`dim > 3, NDSolve`FEM`ElementMeshDump`mesh, NDSolve`FEM`ElementMeshDump`bb = NDSolve`FEM`ElementMeshDump`getRegion[NDSolve`FEM`ElementMeshDump`region, \"Bounds\"]; NDSolve`FEM`FailIf[ !NDSolve`FEM`ElementMeshDump`validBoundingBoxQ[NDSolve`FEM`ElementMeshDump`bb], NDSolve, \"femtbmnbb\", NDSolve`FEM`ElementMeshDump`region]; NDSolve`FEM`ElementMeshDump`bb = MapThread[#2[[1]] <= #1 <= #2[[2]] & , {NDSolve`FEM`ElementMeshDump`vars, NDSolve`FEM`ElementMeshDump`bb}]; NDSolve`FEM`ElementMeshDump`bb = And @@ NDSolve`FEM`ElementMeshDump`bb; NDSolve`FEM`ElementMeshDump`res = Catch[NDSolve`FEM`ImproveBoundaryPosition[NDSolve`FEM`ElementMeshDump`mesh, Boole[NDSolve`FEM`ElementMeshDump`pred && NDSolve`FEM`ElementMeshDump`bb], NDSolve`FEM`ElementMeshDump`vars], NDSolve`FEM`ImproveBoundaryPosition]; If[ !NDSolve`FEM`ElementMeshQ[NDSolve`FEM`ElementMeshDump`res], NDSolve`FEM`ElementMeshDump`res = NDSolve`FEM`ElementMeshDump`mesh]; NDSolve`FEM`SetRegionHoles[NDSolve`FEM`ElementMeshDump`res, NDSolve`FEM`ElementMeshDump`mesh[\"RegionHoles\"]]; NDSolve`FEM`ElementMeshDump`res]]\nNDSolve`FEM`ImproveBoundaryPosition[NDSolve`FEM`ElementMeshDump`bm_, NDSolve`FEM`ElementMeshDump`pred_, NDSolve`FEM`ElementMeshDump`vars:{__Symbol}, NDSolve`FEM`ElementMeshDump`bbox_] \/; BoundaryMeshRegionQ[NDSolve`FEM`ElementMeshDump`bm] := Block[{NDSolve`FEM`ElementMeshDump`edim, NDSolve`FEM`ElementMeshDump`res, NDSolve`FEM`ElementMeshDump`bb, NDSolve`FEM`ElementMeshDump`mesh, NDSolve`FEM`ElementMeshDump`bmr}, NDSolve`FEM`ElementMeshDump`edim = RegionEmbeddingDimension[NDSolve`FEM`ElementMeshDump`bm]; If[NDSolve`FEM`ElementMeshDump`pred === None || NDSolve`FEM`ElementMeshDump`pred === Automatic || NDSolve`FEM`ElementMeshDump`edim < 2 || NDSolve`FEM`ElementMeshDump`edim > 3, NDSolve`FEM`ElementMeshDump`bm, NDSolve`FEM`ElementMeshDump`bb = NDSolve`FEM`ElementMeshDump`bbox; NDSolve`FEM`FailIf[ !NDSolve`FEM`ElementMeshDump`validBoundingBoxQ[NDSolve`FEM`ElementMeshDump`bb], NDSolve, \"femtbmnbb\", NDSolve`FEM`ElementMeshDump`bbox]; NDSolve`FEM`ElementMeshDump`bb = MapThread[#2[[1]] <= #1 <= #2[[2]] & , {NDSolve`FEM`ElementMeshDump`vars, NDSolve`FEM`ElementMeshDump`bb}]; NDSolve`FEM`ElementMeshDump`bb = And @@ NDSolve`FEM`ElementMeshDump`bb; NDSolve`FEM`ElementMeshDump`mesh = NDSolve`FEM`ToBoundaryMesh[NDSolve`FEM`ElementMeshDump`bm]; NDSolve`FEM`ElementMeshDump`res = Catch[NDSolve`FEM`ImproveBoundaryPosition[NDSolve`FEM`ElementMeshDump`mesh, Boole[NDSolve`FEM`ElementMeshDump`pred && NDSolve`FEM`ElementMeshDump`bb], NDSolve`FEM`ElementMeshDump`vars], NDSolve`FEM`ImproveBoundaryPosition]; If[ !NDSolve`FEM`BoundaryElementMeshQ[NDSolve`FEM`ElementMeshDump`res], NDSolve`FEM`ElementMeshDump`res = NDSolve`FEM`ElementMeshDump`bm]; NDSolve`FEM`ElementMeshDump`bmr = BoundaryMeshRegion[NDSolve`FEM`ElementMeshDump`res]; If[BoundaryMeshRegionQ[NDSolve`FEM`ElementMeshDump`bmr], NDSolve`FEM`ElementMeshDump`res = NDSolve`FEM`ElementMeshDump`bmr; , NDSolve`FEM`ElementMeshDump`res = NDSolve`FEM`ElementMeshDump`bm; ]; NDSolve`FEM`ElementMeshDump`res]]\nNDSolve`FEM`ImproveBoundaryPosition[NDSolve`FEM`ElementMeshDump`mesh_NDSolve`FEM`ElementMesh, NDSolve`FEM`ElementMeshDump`pred_Boole, NDSolve`FEM`ElementMeshDump`vars_List] := Module[{NDSolve`FEM`ElementMeshDump`compileopts, NDSolve`FEM`ElementMeshDump`bincidents, NDSolve`FEM`ElementMeshDump`bv, NDSolve`FEM`ElementMeshDump`bc, NDSolve`FEM`ElementMeshDump`rp, NDSolve`FEM`ElementMeshDump`cp, NDSolve`FEM`ElementMeshDump`normalsfun, NDSolve`FEM`ElementMeshDump`normals, NDSolve`FEM`ElementMeshDump`bcoord, NDSolve`FEM`ElementMeshDump`size, NDSolve`FEM`ElementMeshDump`improvefun, NDSolve`FEM`ElementMeshDump`res, NDSolve`FEM`ElementMeshDump`n, NDSolve`FEM`ElementMeshDump`measure, NDSolve`FEM`ElementMeshDump`coords, NDSolve`FEM`ElementMeshDump`nzp, NDSolve`FEM`ElementMeshDump`connectedEle, NDSolve`FEM`ElementMeshDump`len}, NDSolve`FEM`ElementMeshDump`dbprint[1, \"ImproveBoundaryPosition\"]; NDSolve`FEM`ElementMeshDump`dbprint[3, MemoryInUse[]]; NDSolve`FEM`ElementMeshDump`n = NDSolve`FEM`ElementMeshDump`mesh[\"EmbeddingDimension\"]; NDSolve`FEM`ElementMeshDump`coords = NDSolve`FEM`ElementMeshDump`mesh[\"Coordinates\"]; NDSolve`FEM`ElementMeshDump`compileopts = Sequence @@ {RuntimeAttributes -> {Listable}, RuntimeOptions -> {\"WarningMessages\" -> False, \"RuntimeErrorHandler\" -> (Throw[$Failed, NDSolve`FEM`ImproveBoundaryPosition] & )}}; NDSolve`FEM`ElementMeshDump`bincidents = NDSolve`FEM`ElementIncidents[NDSolve`FEM`ElementMeshDump`mesh[\"BoundaryElements\"]]; NDSolve`FEM`ElementMeshDump`bv = Union @@ Flatten \/@ NDSolve`FEM`ElementMeshDump`bincidents; NDSolve`FEM`ElementMeshDump`bcoord = NDSolve`FEM`ElementMeshDump`coords[[NDSolve`FEM`ElementMeshDump`bv]]; NDSolve`FEM`ElementMeshDump`size = Norm[Apply[Subtract, NDSolve`FEM`ElementMeshDump`mesh[\"Bounds\"], {1}]]; NDSolve`FEM`ElementMeshDump`bincidents = Join @@ NDSolve`FEM`ElementMeshDump`bincidents[[All,All,1 ;; NDSolve`FEM`ElementMeshDump`n]]; NDSolve`FEM`ElementMeshDump`bc = NDSolve`FEM`ElementMeshDump`mesh[\"VertexBoundaryConnectivity\"]; NDSolve`FEM`ElementMeshDump`nzp = NDSolve`FEM`ElementMeshDump`bc[\"NonzeroPositions\"]; NDSolve`FEM`ElementMeshDump`connectedEle = GatherBy[NDSolve`FEM`ElementMeshDump`nzp, First]; If[NDSolve`FEM`ElementMeshDump`n == 2, NDSolve`FEM`ElementMeshDump`len = NDSolve`FEM`ElementMeshDump`lineLength2D[NDSolve`FEM`GetElementCoordinates[NDSolve`FEM`ElementMeshDump`coords, NDSolve`FEM`ElementMeshDump`bincidents]]; , NDSolve`FEM`ElementMeshDump`len = Sqrt[Abs[NDSolve`FEM`ElementMeshDump`triArea3D[NDSolve`FEM`GetElementCoordinates[NDSolve`FEM`ElementMeshDump`coords, NDSolve`FEM`ElementMeshDump`bincidents]]]]; ]; NDSolve`FEM`ElementMeshDump`measure = NDSolve`FEM`ElementMeshDump`minConnectedMeasure[NDSolve`FEM`ElementMeshDump`connectedEle[[All,All,2]], NDSolve`FEM`ElementMeshDump`len]; NDSolve`FEM`ElementMeshDump`len = Null; NDSolve`FEM`ElementMeshDump`improvefun = NDSolve`FEM`MakeImprovementFunction[NDSolve`FEM`ElementMeshDump`pred, NDSolve`FEM`ElementMeshDump`vars, NDSolve`FEM`ElementMeshDump`size*$MachineEpsilon, NDSolve`FEM`ElementMeshDump`$MaxRootBracketing, NDSolve`FEM`ElementMeshDump`compileopts]; NDSolve`FEM`ElementMeshDump`bc = NDSolve`FEM`ElementMeshDump`bc[[NDSolve`FEM`ElementMeshDump`bv]]; {NDSolve`FEM`ElementMeshDump`rp, NDSolve`FEM`ElementMeshDump`cp} = NDSolve`FEM`ElementMeshDump`GetSparseRPCP[NDSolve`FEM`ElementMeshDump`bc]; If[NDSolve`FEM`ElementMeshDump`n == 2, NDSolve`FEM`ElementMeshDump`normalsfun = With[{NDSolve`FEM`ElementMeshDump`b = NDSolve`FEM`ElementMeshDump`bincidents, NDSolve`FEM`ElementMeshDump`c = NDSolve`FEM`ElementMeshDump`cp, NDSolve`FEM`ElementMeshDump`X = NDSolve`FEM`ElementMeshDump`coords}, Compile[{{NDSolve`FEM`ElementMeshDump`vi, _Integer}, {NDSolve`FEM`ElementMeshDump`ts, _Integer}, {NDSolve`FEM`ElementMeshDump`te, _Integer}}, Block[{NDSolve`FEM`ElementMeshDump`ci = Take[NDSolve`FEM`ElementMeshDump`c, {NDSolve`FEM`ElementMeshDump`ts, NDSolve`FEM`ElementMeshDump`te}], NDSolve`FEM`ElementMeshDump`p1 = 0, NDSolve`FEM`ElementMeshDump`p2 = 0, NDSolve`FEM`ElementMeshDump`x, NDSolve`FEM`ElementMeshDump`s}, If[Length[NDSolve`FEM`ElementMeshDump`ci] == 1, {NDSolve`FEM`ElementMeshDump`p1, NDSolve`FEM`ElementMeshDump`p2} = NDSolve`FEM`ElementMeshDump`b[[NDSolve`FEM`ElementMeshDump`ci[[1]]]], NDSolve`FEM`ElementMeshDump`ci = Flatten[(NDSolve`FEM`ElementMeshDump`b[[#1]] & ) \/@ NDSolve`FEM`ElementMeshDump`ci]; NDSolve`FEM`ElementMeshDump`ci = Complement[NDSolve`FEM`ElementMeshDump`ci, {NDSolve`FEM`ElementMeshDump`vi}]; If[Length[NDSolve`FEM`ElementMeshDump`ci] > 2, NDSolve`FEM`ElementMeshDump`ci = Take[NDSolve`FEM`ElementMeshDump`ci, 2]]; {NDSolve`FEM`ElementMeshDump`p1, NDSolve`FEM`ElementMeshDump`p2} = Complement[NDSolve`FEM`ElementMeshDump`ci, {NDSolve`FEM`ElementMeshDump`vi}]]; NDSolve`FEM`ElementMeshDump`x = Compile`GetElement[NDSolve`FEM`ElementMeshDump`X, NDSolve`FEM`ElementMeshDump`p1]; NDSolve`FEM`ElementMeshDump`x += -Compile`GetElement[NDSolve`FEM`ElementMeshDump`X, NDSolve`FEM`ElementMeshDump`p2]; NDSolve`FEM`ElementMeshDump`s = 1.\/Sqrt[NDSolve`FEM`ElementMeshDump`x . NDSolve`FEM`ElementMeshDump`x]; Reverse[NDSolve`FEM`ElementMeshDump`x]*{NDSolve`FEM`ElementMeshDump`s, -NDSolve`FEM`ElementMeshDump`s}], Evaluate[NDSolve`FEM`ElementMeshDump`compileopts]]]; NDSolve`FEM`ElementMeshDump`normals = NDSolve`FEM`ElementMeshDump`normalsfun[NDSolve`FEM`ElementMeshDump`bv, Drop[NDSolve`FEM`ElementMeshDump`rp + 1, -1], Drop[NDSolve`FEM`ElementMeshDump`rp, 1]]; , NDSolve`FEM`ElementMeshDump`normalsfun = With[{NDSolve`FEM`ElementMeshDump`b = NDSolve`FEM`ElementMeshDump`bincidents, NDSolve`FEM`ElementMeshDump`c = NDSolve`FEM`ElementMeshDump`cp, NDSolve`FEM`ElementMeshDump`X = NDSolve`FEM`ElementMeshDump`coords, NDSolve`FEM`ElementMeshDump`me = $MachineEpsilon, NDSolve`FEM`ElementMeshDump`cross = Simplify[Cross[{NDSolve`FEM`ElementMeshDump`x1 - NDSolve`FEM`ElementMeshDump`x2, NDSolve`FEM`ElementMeshDump`y1 - NDSolve`FEM`ElementMeshDump`y2, NDSolve`FEM`ElementMeshDump`z1 - NDSolve`FEM`ElementMeshDump`z2}, {NDSolve`FEM`ElementMeshDump`x3 - NDSolve`FEM`ElementMeshDump`x2, NDSolve`FEM`ElementMeshDump`y3 - NDSolve`FEM`ElementMeshDump`y2, NDSolve`FEM`ElementMeshDump`z3 - NDSolve`FEM`ElementMeshDump`z2}]]}, Compile[{{NDSolve`FEM`ElementMeshDump`ts, _Integer}, {NDSolve`FEM`ElementMeshDump`te, _Integer}}, Block[{NDSolve`FEM`ElementMeshDump`x1, NDSolve`FEM`ElementMeshDump`y1, NDSolve`FEM`ElementMeshDump`z1, NDSolve`FEM`ElementMeshDump`x2, NDSolve`FEM`ElementMeshDump`y2, NDSolve`FEM`ElementMeshDump`z2, NDSolve`FEM`ElementMeshDump`x3, NDSolve`FEM`ElementMeshDump`y3, NDSolve`FEM`ElementMeshDump`z3, NDSolve`FEM`ElementMeshDump`nv, NDSolve`FEM`ElementMeshDump`nvm, NDSolve`FEM`ElementMeshDump`nn}, NDSolve`FEM`ElementMeshDump`nvm = Mean[(({{NDSolve`FEM`ElementMeshDump`x1, NDSolve`FEM`ElementMeshDump`y1, NDSolve`FEM`ElementMeshDump`z1}, {NDSolve`FEM`ElementMeshDump`x2, NDSolve`FEM`ElementMeshDump`y2, NDSolve`FEM`ElementMeshDump`z2}, {NDSolve`FEM`ElementMeshDump`x3, NDSolve`FEM`ElementMeshDump`y3, NDSolve`FEM`ElementMeshDump`z3}} = NDSolve`FEM`ElementMeshDump`X[[#1]]; NDSolve`FEM`ElementMeshDump`nv = NDSolve`FEM`ElementMeshDump`cross; NDSolve`FEM`ElementMeshDump`nn = Sqrt[NDSolve`FEM`ElementMeshDump`nv . NDSolve`FEM`ElementMeshDump`nv]; If[NDSolve`FEM`ElementMeshDump`nn > NDSolve`FEM`ElementMeshDump`me, NDSolve`FEM`ElementMeshDump`nv = NDSolve`FEM`ElementMeshDump`nv\/NDSolve`FEM`ElementMeshDump`nn; ]; NDSolve`FEM`ElementMeshDump`nv) & ) \/@ NDSolve`FEM`ElementMeshDump`b[[Take[NDSolve`FEM`ElementMeshDump`c, {NDSolve`FEM`ElementMeshDump`ts, NDSolve`FEM`ElementMeshDump`te}]]]]; NDSolve`FEM`ElementMeshDump`nn = Sqrt[NDSolve`FEM`ElementMeshDump`nvm . NDSolve`FEM`ElementMeshDump`nvm]; If[NDSolve`FEM`ElementMeshDump`nn > NDSolve`FEM`ElementMeshDump`me, NDSolve`FEM`ElementMeshDump`nvm = NDSolve`FEM`ElementMeshDump`nvm\/NDSolve`FEM`ElementMeshDump`nn; ]; NDSolve`FEM`ElementMeshDump`nvm], Evaluate[NDSolve`FEM`ElementMeshDump`compileopts]]]; NDSolve`FEM`ElementMeshDump`normals = NDSolve`FEM`ElementMeshDump`normalsfun[Drop[NDSolve`FEM`ElementMeshDump`rp + 1, -1], Drop[NDSolve`FEM`ElementMeshDump`rp, 1]]; ]; NDSolve`FEM`ElementMeshDump`bcoord = NDSolve`FEM`ElementMeshDump`improvefun[NDSolve`FEM`ElementMeshDump`bcoord, (1*NDSolve`FEM`ElementMeshDump`measure)\/2^NDSolve`FEM`ElementMeshDump`$MaxRootBracketing, NDSolve`FEM`ElementMeshDump`normals]; NDSolve`FEM`ElementMeshDump`res = NDSolve`FEM`ElementMeshDump`mesh; NDSolve`FEM`ElementMeshDump`res[[1,NDSolve`FEM`ElementMeshDump`bv]] = NDSolve`FEM`ElementMeshDump`bcoord; NDSolve`FEM`ElementMeshDump`dbprint[2, \"\\tImproveBoundaryPosition\"]; NDSolve`FEM`ElementMeshDump`res]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`ImproveBoundaryPosition",
	"NRoots`ImproveRootEstimates":"ObjectType: Symbol\nUsage: NRoots`ImproveRootEstimates\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NRoots`ImproveRootEstimates",
	"Control`ImpulseControllableModelQ":"ObjectType: Symbol\nUsage: Control`ImpulseControllableModelQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`ImpulseControllableModelQ[System`Dump`CommonPatterns`ss:(System`Dump`CommonPatterns`in$21732:HoldPattern[StateSpaceModel][{_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (System`Dump`CommonPatterns`opts$21733___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$21732, StateSpaceModel, System`Dump`CommonPatterns`opts$21733]]) \/;  !FreeQ[First[System`Dump`CommonPatterns`ss], Control`Utilities`delayelempattern[]], ___] := $Failed\nControl`ImpulseControllableModelQ[Control`PropertiesDump`sys:(System`Dump`CommonPatterns`in$22172:HoldPattern[StateSpaceModel][{_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (System`Dump`CommonPatterns`opts$22173___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$22172, StateSpaceModel, System`Dump`CommonPatterns`opts$22173]]), ___] := $Failed \/;  !Control`LinearSystemsModelQ[Control`PropertiesDump`sys]\nControl`ImpulseControllableModelQ[Control`PropertiesDump`ss:(System`Dump`CommonPatterns`in$22174:HoldPattern[StateSpaceModel][{_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (System`Dump`CommonPatterns`opts$22175___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$22174, StateSpaceModel, System`Dump`CommonPatterns`opts$22175]]), ___] := True \/; Control`PropertiesDump`impulsefreeQ[Control`PropertiesDump`ss]\nControl`ImpulseControllableModelQ[Control`PropertiesDump`ss:(System`Dump`CommonPatterns`in$22176:HoldPattern[StateSpaceModel][{_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (System`Dump`CommonPatterns`opts$22177___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$22176, StateSpaceModel, System`Dump`CommonPatterns`opts$22177]]), Control`PropertiesDump`opts:OptionsPattern[]] := Control`ImpulseControllableModelQ[Control`PropertiesDump`ss, False, Control`PropertiesDump`opts]\nControl`ImpulseControllableModelQ[Control`PropertiesDump`ss:(HoldPattern[StateSpaceModel][{(Control`PropertiesDump`a_)?Control`Utilities`squareMatrixQ, (Control`PropertiesDump`b_)?Control`Utilities`matrixQ, (Control`PropertiesDump`c___)?System`Dump`CommonPatterns`matrixOrAutoQ \/; Length[{Control`PropertiesDump`c}] <= 1, (Control`PropertiesDump`d___)?System`Dump`CommonPatterns`matrixOrAutoQ \/; Length[{Control`PropertiesDump`d}] <= 1, (Control`PropertiesDump`e___)?System`Dump`CommonPatterns`matrixOrAutoQ \/; Length[{Control`PropertiesDump`e}] <= 1}, (Control`PropertiesDump`x___)?System`Dump`CommonPatterns`sslistAutoQ \/; Length[{Control`PropertiesDump`x}] <= 1, (Control`PropertiesDump`u___)?System`Dump`CommonPatterns`sslistAutoQ \/; Length[{Control`PropertiesDump`u}] <= 1, (Control`PropertiesDump`y___)?System`Dump`CommonPatterns`sslistAutoQ \/; Length[{Control`PropertiesDump`y}] <= 1, (Control`PropertiesDump`t___)?System`Dump`CommonPatterns`ssVariableQ \/; Length[{Control`PropertiesDump`t}] <= 1, Shortest[(Control`PropertiesDump`opts___)?OptionQ]] \/; Length[{Control`PropertiesDump`c}] >= Length[{Control`PropertiesDump`d}] >= Length[{Control`PropertiesDump`e}] && Length[{Control`PropertiesDump`x}] >= Length[{Control`PropertiesDump`u}] >= Length[{Control`PropertiesDump`y}] >= Length[{Control`PropertiesDump`t}] &&  !FreeQ[{Control`PropertiesDump`a, Control`PropertiesDump`b, Control`PropertiesDump`c, Control`PropertiesDump`d, Control`PropertiesDump`e}, Automatic, 1]), Control`PropertiesDump`rest___] := Control`ImpulseControllableModelQ[Control`Utilities`ssReplaceAuto[Control`PropertiesDump`ss], Control`PropertiesDump`rest]\nControl`ImpulseControllableModelQ[HoldPattern[StateSpaceModel][{(Control`PropertiesDump`a_)?Control`Utilities`squareMatrixQ, (Control`PropertiesDump`b_)?Control`Utilities`matrixQ, (Control`PropertiesDump`c_)?System`Dump`CommonPatterns`matrixOrAutoQ, (Control`PropertiesDump`d_)?System`Dump`CommonPatterns`matrixOrAutoQ, (Control`PropertiesDump`e_)?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (Control`PropertiesDump`optsss___)?OptionQ], Control`PropertiesDump`dualQ:True | False, Control`PropertiesDump`opts:OptionsPattern[]] := Module[{Control`PropertiesDump`af, Control`PropertiesDump`n, Control`PropertiesDump`qf, Control`PropertiesDump`pf}, If[ !Control`Utilities`regularQ[Control`PropertiesDump`a, Control`PropertiesDump`e], Return[False]]; {{Control`PropertiesDump`pf, Control`PropertiesDump`qf}, Control`PropertiesDump`af, Control`PropertiesDump`n} = Control`Misc`kroneckermodeldecomposition[Control`PropertiesDump`a, Control`PropertiesDump`e, \"Fast\"]; MatrixRank[Control`Utilities`AppendRows[Transpose[NullSpace[Control`PropertiesDump`n]], Control`Misc`controllabilitymatrix0[{Control`PropertiesDump`n, Control`Utilities`dot[Control`PropertiesDump`qf, Control`PropertiesDump`b]}]], Control`Utilities`myFilterOptions[MatrixRank, Control`Utilities`deleteOptions[Control`PropertiesDump`opts, Method]]] === Length[Control`PropertiesDump`n]] \/; Length[Control`PropertiesDump`a] == Length[Control`PropertiesDump`b] == Length[Control`PropertiesDump`e]\nControl`ImpulseControllableModelQ[{(Control`PropertiesDump`a_)?SquareMatrixQ, (Control`PropertiesDump`b_)?MatrixQ}, (Control`PropertiesDump`opts___)?OptionQ] := True\nControl`ImpulseControllableModelQ[Control`PropertiesDump`x_, Control`PropertiesDump`dualQ, ___?OptionQ] := (If[Control`PropertiesDump`dualQ, Message[ObservableModelQ::invss, Control`PropertiesDump`x], Message[ControllableModelQ::invss, Control`PropertiesDump`x]]; False)\nControl`ImpulseControllableModelQ[Control`PropertiesDump`f_, Control`PropertiesDump`x__ \/;  !OptionQ[{Control`PropertiesDump`x}]] := (If[Control`PropertiesDump`dualQ, Message[ObservableModelQ::nonopt, Control`Utilities`firstNotOption[Control`PropertiesDump`x], 1, HoldForm[ControllableModelQ[Control`PropertiesDump`f, Control`PropertiesDump`x]]], Message[ControllableModelQ::nonopt, Control`Utilities`firstNotOption[Control`PropertiesDump`x], 1, HoldForm[ControllableModelQ[Control`PropertiesDump`f, Control`PropertiesDump`x]]]]; $Failed)\nControl`ImpulseControllableModelQ[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`ImpulseControllableModelQ",
	"Control`PolePlace`ImpulseFreeGains":"ObjectType: Symbol\nUsage: Control`PolePlace`ImpulseFreeGains\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PolePlace`ImpulseFreeGains[Control`PoleAssignmentDump`ss:HoldPattern[StateSpaceModel][{(Control`PoleAssignmentDump`a_)?Control`Utilities`squareMatrixQ, (Control`PoleAssignmentDump`b_)?Control`Utilities`matrixQ, (Control`PoleAssignmentDump`c_)?System`Dump`CommonPatterns`matrixOrAutoQ, (Control`PoleAssignmentDump`d_)?System`Dump`CommonPatterns`matrixOrAutoQ, (Control`PoleAssignmentDump`e_)?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (Control`PoleAssignmentDump`optsss___)?OptionQ], Control`PoleAssignmentDump`opts___] := Module[{Control`PoleAssignmentDump`v, Control`PoleAssignmentDump`u, Control`PoleAssignmentDump`e2, Control`PoleAssignmentDump`a2, Control`PoleAssignmentDump`n1, Control`PoleAssignmentDump`b2, Control`PoleAssignmentDump`k, Control`PoleAssignmentDump`n0 = MatrixRank[Control`PoleAssignmentDump`e], Control`PoleAssignmentDump`n, Control`PoleAssignmentDump`ni}, {Control`PoleAssignmentDump`n, Control`PoleAssignmentDump`ni} = Dimensions[Control`PoleAssignmentDump`b]; {{Control`PoleAssignmentDump`v, Control`PoleAssignmentDump`u}, {Control`PoleAssignmentDump`e2, Control`PoleAssignmentDump`a2}, Control`PoleAssignmentDump`n1} = Control`Misc`dynamicDecomposition[Control`PoleAssignmentDump`e, Control`PoleAssignmentDump`a]; Control`PoleAssignmentDump`b2 = Control`PoleAssignmentDump`u . Control`PoleAssignmentDump`b; Control`PoleAssignmentDump`k = ConstantArray[0, {Control`PoleAssignmentDump`ni, Control`PoleAssignmentDump`n - Control`PoleAssignmentDump`n0}]; While[Control`Utilities`zeroQ[Det[Control`Utilities`TakeMatrix[Control`PoleAssignmentDump`a2, {Control`PoleAssignmentDump`n0 + 1, Control`PoleAssignmentDump`n0 + 1}, {Control`PoleAssignmentDump`n, Control`PoleAssignmentDump`n}] + Control`PoleAssignmentDump`b2[[Range[Control`PoleAssignmentDump`n0 + 1, Control`PoleAssignmentDump`n]]] . Control`PoleAssignmentDump`k]], Control`PoleAssignmentDump`k += Control`Utilities`identityMatrix[{Control`PoleAssignmentDump`ni, Control`PoleAssignmentDump`n - Control`PoleAssignmentDump`n0}]; ]; Control`PoleAssignmentDump`k = Control`Utilities`AppendRows[ConstantArray[0, {Control`PoleAssignmentDump`ni, Control`PoleAssignmentDump`n0}], Control`PoleAssignmentDump`k]; -Control`PoleAssignmentDump`k . Inverse[Control`PoleAssignmentDump`v]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`PolePlace`ImpulseFreeGains",
	"Control`ImpulseObservableModelQ":"ObjectType: Symbol\nUsage: Control`ImpulseObservableModelQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`ImpulseObservableModelQ[Control`PropertiesDump`ss:(System`Dump`CommonPatterns`in$22182:HoldPattern[StateSpaceModel][{_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ} | {_?Control`Utilities`squareMatrixQ, _?Control`Utilities`matrixQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`matrixOrAutoQ, _?System`Dump`CommonPatterns`squareMatrixOrAutoQ}, Repeated[_?System`Dump`CommonPatterns`sslistAutoQ, {0, 3}], Repeated[_?System`Dump`CommonPatterns`ssVariableQ, {0, 1}], (System`Dump`CommonPatterns`opts$22183___)?OptionQ] \/; Quiet[Control`Utilities`validOptionsQ[System`Dump`CommonPatterns`in$22182, StateSpaceModel, System`Dump`CommonPatterns`opts$22183]]), Control`PropertiesDump`opts:OptionsPattern[]] := Control`ImpulseControllableModelQ[DualSystemsModel[Control`PropertiesDump`ss], True, Control`PropertiesDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`ImpulseObservableModelQ",
	"NIntegrate`IMT":"ObjectType: Symbol\nUsage: NIntegrate`IMT\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {TuningParameters -> {10, 1}, ExtraPrecision :> $MaxExtraPrecision}\nAttributes: {}\nFullName: NIntegrate`IMT",
	"TemporalData`InAbsoluteTime":"ObjectType: Symbol\nUsage: InAbsoluteTime[t_] gives time t in AbsoluteTime if it is a date and returns t if t is numeric.\nInAbsoluteTime threads over lists of times.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TemporalData`InAbsoluteTime[Automatic] := Automatic\nTemporalData`InAbsoluteTime[(RandomProcesses`TemporalDataDump`t_)?NumericQ] := RandomProcesses`TemporalDataDump`t\nTemporalData`InAbsoluteTime[(RandomProcesses`TemporalDataDump`t_)?RandomProcesses`TemporalDataDump`rvQ] \/; Length[RandomProcesses`TemporalDataDump`t] > 6 := RandomProcesses`TemporalDataDump`t\nTemporalData`InAbsoluteTime[(RandomProcesses`TemporalDataDump`t_)?RandomProcesses`TemporalDataDump`probableDateList] := Which[Length[RandomProcesses`TemporalDataDump`t] == 1, RandomProcesses`TemporalDataDump`t, (#1 > 2500 || #1 < 1900 & )[First[RandomProcesses`TemporalDataDump`t]], RandomProcesses`TemporalDataDump`t, True, AbsoluteTime[RandomProcesses`TemporalDataDump`t]]\nTemporalData`InAbsoluteTime[(RandomProcesses`TemporalDataDump`t_)?RandomProcesses`TemporalDataDump`rvQ] := RandomProcesses`TemporalDataDump`t\nTemporalData`InAbsoluteTime[(RandomProcesses`TemporalDataDump`t_)?RandomProcesses`TemporalDataDump`dateAtomQ] := AbsoluteTime[RandomProcesses`TemporalDataDump`t]\nTemporalData`InAbsoluteTime[(RandomProcesses`TemporalDataDump`t_)?RandomProcesses`TemporalDataDump`listQ] := TemporalData`InAbsoluteTime \/@ RandomProcesses`TemporalDataDump`t\nTemporalData`InAbsoluteTime[_, _] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: TemporalData`InAbsoluteTime",
	"Language`InactivateExclusionsDefault":"ObjectType: Symbol\nUsage: Language`InactivateExclusionsDefault\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Language`InactivateExclusionsDefault[\"Symbol\"] := HoldComplete[List, Rule, RuleDelayed, Hold, HoldComplete, HoldForm, Slot, SlotSequence, Alternatives, Default, Blank, BlankSequence, BlankNullSequence, Except, Optional, Pattern, PatternTest, PatternSequence, Repeated, RepeatedNull, Longest, Shortest, Verbatim, HoldPattern, OptionsPattern, IgnoringInactive]\nLanguage`InactivateExclusionsDefault[\"Object\"] := Join[HoldComplete[CompiledFunction, Experimental`NumericalFunction, InterpolatingFunction, BSplineFunction, BezierFunction, ParametricFunction, NDSolve`StateData, NDSolve`FiniteDifferenceDerivative, BooleanFunction, Root, AlgebraicNumber, DifferenceRoot, DifferentialRoot, FittedModel, DataDistribution, SurvivalModel, NearestFunction, LinearSolveFunction, Image, Image3D, ImagePyramid, StateSpaceModel, TransferFunctionModel, Graphics, Graphics3D, GraphicsComplex, Point, Line, Polygon, Directive, TemporalData, CellObject, ColorDataFunction, ColorProfileData, ByteArray, NumericArray, CoxModel, EventData, HypothesisTestData, LibraryFunction, LiftingFilterData, NotebookObject, OptimumFlowData, SeriesData, WeightedData], StructuredArray`GetStructuredArrayHeads[HoldComplete]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Language`InactivateExclusionsDefault",
	"ResourceFunctionHelpers`InactiveFactorInteger":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`InactiveFactorInteger\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`InactiveFactorInteger[ResourceFunctionHelpers`InactiveFactorInteger`Private`n_Integer] := Inactivate[Evaluate[Apply[Times, Apply[Power, Hold @@ {FactorInteger[ResourceFunctionHelpers`InactiveFactorInteger`Private`n]}, {2}], {1}] \/. HoldPattern[(ResourceFunctionHelpers`InactiveFactorInteger`Private`a_)^1] :> ResourceFunctionHelpers`InactiveFactorInteger`Private`a \/. HoldPattern[Times[ResourceFunctionHelpers`InactiveFactorInteger`Private`b_]] :> ResourceFunctionHelpers`InactiveFactorInteger`Private`b]][[1]]\nResourceFunctionHelpers`InactiveFactorInteger[(ResourceFunctionHelpers`InactiveFactorInteger`Private`base_Integer)^1] := ResourceFunctionHelpers`InactiveFactorInteger[ResourceFunctionHelpers`InactiveFactorInteger`Private`base]\nResourceFunctionHelpers`InactiveFactorInteger[1^(ResourceFunctionHelpers`InactiveFactorInteger`Private`exp_Integer)] := 1\nResourceFunctionHelpers`InactiveFactorInteger[(ResourceFunctionHelpers`InactiveFactorInteger`Private`base_Integer)?Positive^(ResourceFunctionHelpers`InactiveFactorInteger`Private`exp_Integer)?Positive] := Replace[ResourceFunctionHelpers`InactiveFactorInteger[ResourceFunctionHelpers`InactiveFactorInteger`Private`base], {ResourceFunctionHelpers`InactiveFactorInteger`Private`b_Integer :> Inactive[Power][ResourceFunctionHelpers`InactiveFactorInteger`Private`b, ResourceFunctionHelpers`InactiveFactorInteger`Private`exp], ResourceFunctionHelpers`InactiveFactorInteger`Private`t:Inactive[Times][__] :> (Inactive[Power][#1, ResourceFunctionHelpers`InactiveFactorInteger`Private`exp] & ) \/@ ResourceFunctionHelpers`InactiveFactorInteger`Private`t}] \/. Inactive[Power][Inactive[Power][ResourceFunctionHelpers`InactiveFactorInteger`Private`x_, ResourceFunctionHelpers`InactiveFactorInteger`Private`y_], ResourceFunctionHelpers`InactiveFactorInteger`Private`z_] :> Inactive[Power][ResourceFunctionHelpers`InactiveFactorInteger`Private`x, ResourceFunctionHelpers`InactiveFactorInteger`Private`y*ResourceFunctionHelpers`InactiveFactorInteger`Private`z]\nResourceFunctionHelpers`InactiveFactorInteger[(ResourceFunctionHelpers`InactiveFactorInteger`Private`base_Integer)?Negative^(ResourceFunctionHelpers`InactiveFactorInteger`Private`exp_Integer)?Positive] := With[{ResourceFunctionHelpers`InactiveFactorInteger`Private`pos = (ResourceFunctionHelpers`InactiveFactorInteger[#1^ResourceFunctionHelpers`InactiveFactorInteger`Private`exp] & )[Evaluate[-ResourceFunctionHelpers`InactiveFactorInteger`Private`base]]}, If[EvenQ[ResourceFunctionHelpers`InactiveFactorInteger`Private`exp], ResourceFunctionHelpers`InactiveFactorInteger`Private`pos, Replace[ResourceFunctionHelpers`InactiveFactorInteger`Private`pos, {Inactive[Times][ResourceFunctionHelpers`InactiveFactorInteger`Private`seq__] :> Inactive[Times][-1, ResourceFunctionHelpers`InactiveFactorInteger`Private`seq], _Integer :> -ResourceFunctionHelpers`InactiveFactorInteger`Private`pos, _ :> Inactive[Times][-1, ResourceFunctionHelpers`InactiveFactorInteger`Private`pos]}]]]\nResourceFunctionHelpers`InactiveFactorInteger[ResourceFunctionHelpers`InactiveFactorInteger`Private`def_] := With[{ResourceFunctionHelpers`InactiveFactorInteger`Private`e = ResourceFunctionHelpers`InactiveFactorInteger`Private`def}, ResourceFunctionHelpers`InactiveFactorInteger[ResourceFunctionHelpers`InactiveFactorInteger`Private`e] \/; IntegerQ[ResourceFunctionHelpers`InactiveFactorInteger`Private`e]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: ResourceFunctionHelpers`InactiveFactorInteger",
	"ResourceFunctionHelpers`InactiveRiemannSumToIntegral":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`InactiveRiemannSumToIntegral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`InactiveRiemannSumToIntegral[ResourceFunctionHelpers`InactiveSumIntegral`Private`expr_, {ResourceFunctionHelpers`InactiveSumIntegral`Private`i_, ResourceFunctionHelpers`InactiveSumIntegral`Private`lb_:1, ResourceFunctionHelpers`InactiveSumIntegral`Private`b_}, ResourceFunctionHelpers`InactiveSumIntegral`Private`n_ -> ResourceFunctionHelpers`InactiveSumIntegral`Private`lim:0 | Infinity, ResourceFunctionHelpers`InactiveSumIntegral`Private`x_] := Module[{ResourceFunctionHelpers`InactiveSumIntegral`Private`limsum, ResourceFunctionHelpers`InactiveSumIntegral`Private`apart, ResourceFunctionHelpers`InactiveSumIntegral`Private`replace, ResourceFunctionHelpers`InactiveSumIntegral`Private`varb = ResourceFunctionHelpers`CommonFunctions`chooseVariables[ResourceFunctionHelpers`InactiveSumIntegral`Private`b], ResourceFunctionHelpers`InactiveSumIntegral`Private`cases, ResourceFunctionHelpers`InactiveSumIntegral`Private`ib = ResourceFunctionHelpers`InactiveSumIntegral`Private`b, ResourceFunctionHelpers`InactiveSumIntegral`Private`iexpr = ResourceFunctionHelpers`InactiveSumIntegral`Private`expr}, ResourceFunctionHelpers`InactiveSumIntegral`Private`limsum = Limit[Sum[ResourceFunctionHelpers`InactiveSumIntegral`Private`expr, {ResourceFunctionHelpers`InactiveSumIntegral`Private`i, ResourceFunctionHelpers`InactiveSumIntegral`Private`b}], ResourceFunctionHelpers`InactiveSumIntegral`Private`n -> ResourceFunctionHelpers`InactiveSumIntegral`Private`lim]; ResourceFunctionHelpers`InactiveSumIntegral`Private`cases = Cases[Hold[ResourceFunctionHelpers`InactiveSumIntegral`Private`b], (ResourceFunctionHelpers`InactiveSumIntegral`Private`a_)?NumericQ\/(ResourceFunctionHelpers`InactiveSumIntegral`Private`c_Symbol)]; If[MatchQ[ResourceFunctionHelpers`InactiveSumIntegral`Private`b, (ResourceFunctionHelpers`InactiveSumIntegral`Private`a_)?NumericQ\/(ResourceFunctionHelpers`InactiveSumIntegral`Private`c_Symbol)], ResourceFunctionHelpers`InactiveSumIntegral`Private`iexpr = ResourceFunctionHelpers`InactiveSumIntegral`Private`expr \/. First[ResourceFunctionHelpers`InactiveSumIntegral`Private`varb] :> First[ResourceFunctionHelpers`InactiveSumIntegral`Private`cases]; ResourceFunctionHelpers`InactiveSumIntegral`Private`ib = ResourceFunctionHelpers`InactiveSumIntegral`Private`varb \/. {ResourceFunctionHelpers`InactiveSumIntegral`Private`in_} :> ResourceFunctionHelpers`InactiveSumIntegral`Private`in]; (ResourceFunctionHelpers`InactiveSumIntegral`Private`apart = (If[ !MatchQ[#1, _Power], Apart[#1], #1] & )[ResourceFunctionHelpers`InactiveSumIntegral`Private`iexpr*ResourceFunctionHelpers`InactiveSumIntegral`Private`ib]; Cases[ResourceFunctionHelpers`InactiveSumIntegral`Private`apart, HoldPattern[((ResourceFunctionHelpers`InactiveSumIntegral`Private`aa_.)*((ResourceFunctionHelpers`InactiveSumIntegral`Private`c_) + (ResourceFunctionHelpers`InactiveSumIntegral`Private`e_Integer)))\/(ResourceFunctionHelpers`InactiveSumIntegral`Private`d_)] \/; ResourceFunctionHelpers`InactiveSumIntegral`Private`c === ResourceFunctionHelpers`InactiveSumIntegral`Private`i && ResourceFunctionHelpers`InactiveSumIntegral`Private`d === ResourceFunctionHelpers`InactiveSumIntegral`Private`ib, {0, Infinity}]; ResourceFunctionHelpers`InactiveSumIntegral`Private`replace = Replace[ResourceFunctionHelpers`InactiveSumIntegral`Private`apart, {(ResourceFunctionHelpers`InactiveSumIntegral`Private`in_.)*(ResourceFunctionHelpers`InactiveSumIntegral`Private`aa_)^(ResourceFunctionHelpers`InactiveSumIntegral`Private`bb_)*(ResourceFunctionHelpers`InactiveSumIntegral`Private`c_)^(ResourceFunctionHelpers`InactiveSumIntegral`Private`d_) \/; ResourceFunctionHelpers`InactiveSumIntegral`Private`bb === -ResourceFunctionHelpers`InactiveSumIntegral`Private`d && ResourceFunctionHelpers`InactiveSumIntegral`Private`aa === ResourceFunctionHelpers`InactiveSumIntegral`Private`i && ResourceFunctionHelpers`InactiveSumIntegral`Private`c === ResourceFunctionHelpers`InactiveSumIntegral`Private`ib && NumericQ[ResourceFunctionHelpers`InactiveSumIntegral`Private`in] :> Times[ResourceFunctionHelpers`InactiveSumIntegral`Private`in*ResourceFunctionHelpers`InactiveSumIntegral`Private`x^ResourceFunctionHelpers`InactiveSumIntegral`Private`bb], HoldPattern[((ResourceFunctionHelpers`InactiveSumIntegral`Private`aa_.)*(ResourceFunctionHelpers`InactiveSumIntegral`Private`c_))\/(ResourceFunctionHelpers`InactiveSumIntegral`Private`d_)] \/; ResourceFunctionHelpers`InactiveSumIntegral`Private`c === ResourceFunctionHelpers`InactiveSumIntegral`Private`i && ResourceFunctionHelpers`InactiveSumIntegral`Private`d === ResourceFunctionHelpers`InactiveSumIntegral`Private`ib :> ResourceFunctionHelpers`InactiveSumIntegral`Private`aa*ResourceFunctionHelpers`InactiveSumIntegral`Private`x, HoldPattern[((ResourceFunctionHelpers`InactiveSumIntegral`Private`aa_.)*((ResourceFunctionHelpers`InactiveSumIntegral`Private`c_) + (ResourceFunctionHelpers`InactiveSumIntegral`Private`e_Integer)))\/(ResourceFunctionHelpers`InactiveSumIntegral`Private`d_)] \/; ResourceFunctionHelpers`InactiveSumIntegral`Private`c === ResourceFunctionHelpers`InactiveSumIntegral`Private`i && ResourceFunctionHelpers`InactiveSumIntegral`Private`d === ResourceFunctionHelpers`InactiveSumIntegral`Private`ib :> ResourceFunctionHelpers`InactiveSumIntegral`Private`aa*ResourceFunctionHelpers`InactiveSumIntegral`Private`x, HoldPattern[(((ResourceFunctionHelpers`InactiveSumIntegral`Private`e_Integer) + (ResourceFunctionHelpers`InactiveSumIntegral`Private`c_))*(ResourceFunctionHelpers`InactiveSumIntegral`Private`aa_.))\/(ResourceFunctionHelpers`InactiveSumIntegral`Private`d_)] \/; ResourceFunctionHelpers`InactiveSumIntegral`Private`c === ResourceFunctionHelpers`InactiveSumIntegral`Private`i && ResourceFunctionHelpers`InactiveSumIntegral`Private`d === ResourceFunctionHelpers`InactiveSumIntegral`Private`ib :> ResourceFunctionHelpers`InactiveSumIntegral`Private`aa*ResourceFunctionHelpers`InactiveSumIntegral`Private`x}, {0, Infinity}]; If[ !FreeQ[ResourceFunctionHelpers`CommonFunctions`VarList[ResourceFunctionHelpers`InactiveSumIntegral`Private`replace], Alternatives @@ {ResourceFunctionHelpers`InactiveSumIntegral`Private`i, ResourceFunctionHelpers`InactiveSumIntegral`Private`ib}], Message[ResourceFunctionHelpers`InactiveRiemannSumToIntegral::noreplace, HoldForm[ResourceFunctionHelpers`InactiveSumIntegral`Private`expr]]; Inactive[Limit][Inactive[Sum][ResourceFunctionHelpers`InactiveSumIntegral`Private`expr, {ResourceFunctionHelpers`InactiveSumIntegral`Private`i, ResourceFunctionHelpers`InactiveSumIntegral`Private`lb, ResourceFunctionHelpers`InactiveSumIntegral`Private`b}], ResourceFunctionHelpers`InactiveSumIntegral`Private`n -> ResourceFunctionHelpers`InactiveSumIntegral`Private`lim], Inactive[Integrate][ResourceFunctionHelpers`InactiveSumIntegral`Private`replace, {ResourceFunctionHelpers`InactiveSumIntegral`Private`x, 0, 1}]])]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: ResourceFunctionHelpers`InactiveRiemannSumToIntegral",
	"SurfaceGraphics`Methods`Incenter":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Incenter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Incenter"
}