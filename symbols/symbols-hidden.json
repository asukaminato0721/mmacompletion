{
	"AbortScheduledTask":"ObjectType: Symbol\nUsage: AbortScheduledTask[task] interrupts any currently evaluating instances of the cloud task task.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AbortScheduledTask",
	"ActionDelay":"ObjectType: Symbol\nUsage: System`ActionDelay\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ActionDelay",
	"ActionMenuBox":"ObjectType: Symbol\nUsage: System`ActionMenuBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ActionMenuBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, \"ActionMenu\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, DefaultBaseStyle -> \"ActionMenu\", DefaultMenuStyle -> \"ActionMenuLabel\", Enabled -> Automatic, Evaluator -> Automatic, FieldSize -> {{0, 50}, {0, 10}}, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> Automatic, MenuAppearance -> {Automatic, Automatic}, MenuStyle -> {}, Method -> \"Preemptive\"}\nOptions[ActionMenuBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ActionMenuBox]]\nAbsoluteOptions[ActionMenuBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ActionMenuBox]]\nOptions[ActionMenuBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[ActionMenuBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, ActionMenuBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[ActionMenuBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[ActionMenuBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, ActionMenuBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[ActionMenuBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, ActionMenuBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[ActionMenuBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_ActionMenuBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_ActionMenuBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`ActionMenuBox",
	"ActionMenuBoxOptions":"ObjectType: Symbol\nUsage: ActionMenuBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for ActionMenuBox.\n                           1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ActionMenuBoxOptions",
	"Active":"ObjectType: Symbol\nUsage: Active is an option for ButtonBox, Cell, and Notebook that specifies whether a button should be active. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Active",
	"ActiveItem":"ObjectType: Symbol\nUsage: System`ActiveItem\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ActiveItem",
	"AddOnHelpPath":"ObjectType: Symbol\nUsage: AddOnHelpPath is a global option that specifies which directories are searched for additional help files used within the help system.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AddOnHelpPath",
	"AlgebraicRules":"ObjectType: Symbol\nUsage: System`AlgebraicRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {InverseFunctions -> Automatic, MakeRules -> True, Method -> 1, Mode -> Rational, Sort -> False, VerifySolutions -> False, WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: System`AlgebraicRules",
	"AlgebraicRulesData":"ObjectType: Symbol\nUsage: AlgebraicRulesData is an object returned by AlgebraicRules. Its OutputForm appears to be a list of rules, but the rules will be used algebraically rather than syntactically by Replace and related functions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AlgebraicRulesData",
	"AlignmentMarker":"ObjectType: Symbol\nUsage: System`AlignmentMarker\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AlignmentMarker",
	"AllowAdultContent":"ObjectType: Symbol\nUsage: System`AllowAdultContent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AllowAdultContent",
	"AllowIncomplete":"ObjectType: Symbol\nUsage: System`AllowIncomplete\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AllowIncomplete",
	"AllowScriptLevelChange":"ObjectType: Symbol\nUsage: AllowScriptLevelChange is an option for fractions and grids that controls whether certain operators, such as ∑, ∏, and ∫, always appear smaller than normal size.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AllowScriptLevelChange",
	"AlternateImage":"ObjectType: Symbol\nUsage: AlternateImage is an option to CDFInformation that specifies an image that should be used if the plugin is not available.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AlternateImage",
	"Analytic":"ObjectType: Symbol\nUsage: Analytic is an option for Limit and Series. With Analytic -> True, unrecognized functions are treated as analytic, and processed using Taylor series expansions; with Analytic -> False, Taylor series are not used unless the function is recognized as analytic.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Analytic",
	"AnatomyForm":"ObjectType: Symbol\nUsage: AnatomyForm[g] is a graphics directive used in AnatomyPlot3D that specifies how anatomy entity‐based graphics objects are to be drawn using the graphics directive or association of directives g.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AnatomyForm",
	"AnimationCycleOffset":"ObjectType: Symbol\nUsage: AnimationCycleOffset is an option for cells that specifies the relative position of the next graphic to be used in an animation sequence.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AnimationCycleOffset",
	"AnimationCycleRepetitions":"ObjectType: Symbol\nUsage: AnimationCycleRepetitions is an option for cells that specifies the number of times a given animation cycle should be repeated.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AnimationCycleRepetitions",
	"AnimationDisplayTime":"ObjectType: Symbol\nUsage: AnimationDisplayTime is an option for Cell that specifies the minimum time in seconds for which a cell should be displayed in the course of an animation that runs through a sequence of selected cells. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AnimationDisplayTime",
	"AnimatorBox":"ObjectType: Symbol\nUsage: System`AnimatorBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[AnimatorBox] ^:= {Alignment -> {Automatic, Automatic}, AnimationDirection -> Forward, AnimationRate -> Automatic, AnimationRepetitions -> Infinity, AnimationRunning -> True, AnimationRunTime -> 0, AnimationTimeIndex -> Automatic, Appearance -> {Automatic, \"Palette\"}, AppearanceElements -> {\"ProgressSlider\", \"StepLeftButton\", \"StepRightButton\", \"PlayPauseButton\", \"FasterSlowerButtons\", \"DirectionButton\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> {}, DefaultDuration -> 5., DisplayAllSteps -> False, Enabled -> Automatic, Exclusions -> {}, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> Automatic, PausedTime -> Automatic, RefreshRate -> Automatic}\nOptions[AnimatorBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[AnimatorBox]]\nAbsoluteOptions[AnimatorBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[AnimatorBox]]\nOptions[AnimatorBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[AnimatorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, AnimatorBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[AnimatorBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[AnimatorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, AnimatorBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[AnimatorBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, AnimatorBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[AnimatorBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_AnimatorBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_AnimatorBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`AnimatorBox",
	"AnimatorBoxOptions":"ObjectType: Symbol\nUsage: AnimatorBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for AnimatorBox objects.\n                         1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AnimatorBoxOptions",
	"AnimatorElements":"ObjectType: Symbol\nUsage: System`AnimatorElements\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AnimatorElements",
	"AppendCheck":"ObjectType: Symbol\nUsage: System`AppendCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AppendCheck",
	"ArgumentCountQ":"ObjectType: Symbol\nUsage: ArgumentCountQ[head, len, min, max] tests whether the number len of arguments of a function head is between min and max.ArgumentCountQ[head, len, {m , m , …, m }] tests whether the number len of arguments of a function head is one of the m .\n                                                                                                                                                    1   2      i                                                                               i\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ArgumentCountQ",
	"Arrow3DBox":"ObjectType: Symbol\nUsage: System`Arrow3DBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Arrow3DBox",
	"ArrowBox":"ObjectType: Symbol\nUsage: System`ArrowBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`ArrowBox",
	"AspectRatioFixed":"ObjectType: Symbol\nUsage: AspectRatioFixed is an option for Cell that specifies whether graphics in the cell should be constrained to stay the same shape when they are interactively resized using the front end. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AspectRatioFixed",
	"AstronomicalData":"ObjectType: Symbol\nUsage: AstronomicalData[\"name\", \"property\"] gives the value of the specified property of the astronomical object with the specified name.AstronomicalData[\"name\", {\"property\", date}] gives the value of a property at a particular date and time.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AstronomicalData[] := AstronomicalData[All]\nAstronomicalData[\"Properties\"] := Catch[Sort[DeleteCases[Union[First \/@ Flatten[DataPaclets`AstronomicalDataDump`$Properties \/@ DataPaclets`AstronomicalDataDump`$SourceGroups, 1]], _Blank | _BlankSequence | _BlankNullSequence]], \"DataPacletException\"]\nAstronomicalData[\"DefaultProperty\"] := \"StandardName\"\nAstronomicalData[All, \"Properties\"] := AstronomicalData[\"Properties\"]\nAstronomicalData[__, \"Install\"] := Module[{DataPaclets`AstronomicalDataDump`wdx, DataPaclets`AstronomicalDataDump`srcs}, DataPaclets`AstronomicalDataDump`wdx = DataPaclets`GetDataPacletResource[\"AstronomicalData_Index\", \"Index.wdx\"]; If[DataPaclets`AstronomicalDataDump`wdx === $Failed, Return[$Failed]]; DataPaclets`AstronomicalDataDump`srcs = \"Sources\" \/. DataPaclets`ImportData[\"AstronomicalData_Index\", DataPaclets`AstronomicalDataDump`wdx, {\"WDX\", \"DataIndex\"}]; (Module[{DataPaclets`AstronomicalDataDump`subgroups = Last[#1]}, (Module[{DataPaclets`AstronomicalDataDump`srcsubgroup = First[#1]}, DataPaclets`GetDataPacletResource[StringJoin[\"AstronomicalData_\", DataPaclets`AstronomicalDataDump`srcsubgroup], StringJoin[DataPaclets`AstronomicalDataDump`srcsubgroup, \".wdx\"]]; ] & ) \/@ DataPaclets`AstronomicalDataDump`subgroups; ] & ) \/@ DataPaclets`AstronomicalDataDump`srcs; True]\nAstronomicalData[__, \"Preload\"] := Catch[DataPaclets`AstronomicalDataDump`$KeySource; DataPaclets`AstronomicalDataDump`$Groups; DataPaclets`AstronomicalDataDump`$Entities; DataPaclets`AstronomicalDataDump`$StandardName; DataPaclets`AstronomicalDataDump`$Properties; DataPaclets`AstronomicalDataDump`ComputeFunction; Scan[With[{DataPaclets`AstronomicalDataDump`group = #1}, Scan[With[{DataPaclets`AstronomicalDataDump`subgroup = #1}, DataPaclets`AstronomicalDataDump`$Index[DataPaclets`AstronomicalDataDump`subgroup]] & , Cases[DataPaclets`AstronomicalDataDump`$SubgroupToGroup, HoldPattern[DataPaclets`AstronomicalDataDump`s_String -> DataPaclets`AstronomicalDataDump`group] :> DataPaclets`AstronomicalDataDump`s, Infinity]]; ] & , DataPaclets`AstronomicalDataDump`$SourceGroups]; True, \"DataPacletException\"]\nAstronomicalData[DataPaclets`AstronomicalDataDump`args___] \/; DataPaclets`$WAECCC =!= True := Block[{DataPaclets`$WAECCC = True}, Catch[DataPaclets`CCHandshake[AstronomicalData]; AstronomicalData[DataPaclets`AstronomicalDataDump`args], \"WAE\"]]\nAstronomicalData[DataPaclets`AstronomicalDataDump`all:All] := Catch[Sort[Flatten[(DataPaclets`AstronomicalDataDump`$Keys[#1] & ) \/@ DataPaclets`AstronomicalDataDump`$SourceGroups, 1]], \"DataPacletException\"]\nAstronomicalData[\"Classes\" | \"Groups\"] := Catch[DataPaclets`AstronomicalDataDump`$Groups, \"DataPacletException\"]\nAstronomicalData[Entity[DataPaclets`AstronomicalDataDump`class_String, DataPaclets`AstronomicalDataDump`obj_], DataPaclets`AstronomicalDataDump`args___] \/; MemberQ[DataPaclets`AstronomicalDataDump`$AllowedEntityClasses, DataPaclets`AstronomicalDataDump`class] := AstronomicalData[DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`args]\nAstronomicalData[EntityClass[DataPaclets`AstronomicalDataDump`class_String, DataPaclets`AstronomicalDataDump`obj_], DataPaclets`AstronomicalDataDump`args___] \/; MemberQ[DataPaclets`AstronomicalDataDump`$AllowedEntityClasses, DataPaclets`AstronomicalDataDump`class] := AstronomicalData[DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`args]\nAstronomicalData[DataPaclets`AstronomicalDataDump`arg_, EntityProperty[_, DataPaclets`AstronomicalDataDump`prop_String], DataPaclets`AstronomicalDataDump`args___] := AstronomicalData[DataPaclets`AstronomicalDataDump`arg, DataPaclets`AstronomicalDataDump`prop, DataPaclets`AstronomicalDataDump`args]\nAstronomicalData[DataPaclets`AstronomicalDataDump`obj_] := Module[{DataPaclets`AstronomicalDataDump`allowOutput = True, DataPaclets`AstronomicalDataDump`output, DataPaclets`AstronomicalDataDump`val}, DataPaclets`AstronomicalDataDump`output = Catch[Which[DataPaclets`AstronomicalDataDump`StandardNameQ[DataPaclets`AstronomicalDataDump`obj], AstronomicalData[DataPaclets`AstronomicalDataDump`$StandardName[DataPaclets`AstronomicalDataDump`obj], \"StandardName\"], DataPaclets`AstronomicalDataDump`GroupQ[DataPaclets`AstronomicalDataDump`obj], DataPaclets`AstronomicalDataDump`$GroupHash[DataPaclets`AstronomicalDataDump`obj], MatchQ[DataPaclets`AstronomicalDataDump`obj, _StringExpression | _RegularExpression | _String?(StringMatchQ[#1, ___~~\"\\\\*\"~~___] & )], Module[{DataPaclets`AstronomicalDataDump`res, DataPaclets`AstronomicalDataDump`strs}, DataPaclets`AstronomicalDataDump`strs = Cases[Flatten[(DataPaclets`AstronomicalDataDump`$Keys[#1] & ) \/@ DataPaclets`AstronomicalDataDump`$SourceGroups, 1], _String]; DataPaclets`AstronomicalDataDump`res = StringMatchQ[DataPaclets`AstronomicalDataDump`strs, DataPaclets`AstronomicalDataDump`obj]; DataPaclets`AstronomicalDataDump`allowOutput = ListQ[DataPaclets`AstronomicalDataDump`res]; If[ListQ[DataPaclets`AstronomicalDataDump`res], Pick[DataPaclets`AstronomicalDataDump`strs, DataPaclets`AstronomicalDataDump`res]]], Head[DataPaclets`AstronomicalDataDump`val = DataPaclets`AstronomicalDataDump`ComputeFunction[DataPaclets`AstronomicalDataDump`obj]] =!= DataPaclets`AstronomicalDataDump`ComputeFunction, DataPaclets`AstronomicalDataDump`val, True, Message[AstronomicalData::notent, ToString[DataPaclets`AstronomicalDataDump`obj, InputForm], AstronomicalData]; DataPaclets`AstronomicalDataDump`allowOutput = False], \"DataPacletException\"]; DataPaclets`AstronomicalDataDump`output \/; DataPaclets`AstronomicalDataDump`allowOutput]\nAstronomicalData[DataPaclets`AstronomicalDataDump`obj_, DataPaclets`AstronomicalDataDump`prop__] \/; DataPaclets`$WrapperFlag =!= True := Block[{DataPaclets`$WrapperFlag = True}, DataPaclets`WrapperizePacletRequest[AstronomicalData, DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`prop]]\nAstronomicalData[DataPaclets`AstronomicalDataDump`obj_, DataPaclets`AstronomicalDataDump`arg__] := With[{DataPaclets`AstronomicalDataDump`prop = Sequence @@ ({DataPaclets`AstronomicalDataDump`arg} \/. {GeoPosition[DataPaclets`AstronomicalDataDump`x_] :> DataPaclets`AstronomicalDataDump`x, (DataPaclets`AstronomicalDataDump`y_)?DateObjectQ :> DateList[DataPaclets`AstronomicalDataDump`y]})}, Module[{DataPaclets`AstronomicalDataDump`allowOutput = True, DataPaclets`AstronomicalDataDump`output, DataPaclets`AstronomicalDataDump`sn, DataPaclets`AstronomicalDataDump`val, DataPaclets`AstronomicalDataDump`subgroup, DataPaclets`AstronomicalDataDump`keys}, DataPaclets`AstronomicalDataDump`output = Catch[Which[DataPaclets`AstronomicalDataDump`StandardNameQ[DataPaclets`AstronomicalDataDump`obj], DataPaclets`AstronomicalDataDump`sn = DataPaclets`AstronomicalDataDump`$StandardName[DataPaclets`AstronomicalDataDump`obj]; Which[DataPaclets`AstronomicalDataDump`CompiledPropertyQ[DataPaclets`AstronomicalDataDump`sn, {DataPaclets`AstronomicalDataDump`prop}], DataPaclets`AstronomicalDataDump`subgroup = DataPaclets`AstronomicalDataDump`$KeySource[DataPaclets`AstronomicalDataDump`sn]; If[(DataPaclets`AstronomicalDataDump`val = Internal`CheckCache[{\"AstronomicalData\", DataPaclets`AstronomicalDataDump`sn, DataPaclets`AstronomicalDataDump`prop}]) === $Failed, SetStreamPosition[DataPaclets`AstronomicalDataDump`$StreamCache[DataPaclets`AstronomicalDataDump`subgroup], DataPaclets`AstronomicalDataDump`$Index[DataPaclets`AstronomicalDataDump`subgroup][[DataPaclets`AstronomicalDataDump`$KeyHash[DataPaclets`AstronomicalDataDump`subgroup][DataPaclets`AstronomicalDataDump`sn] + ({DataPaclets`AstronomicalDataDump`prop} \/. DataPaclets`AstronomicalDataDump`$PropertyHash[DataPaclets`AstronomicalDataDump`subgroup \/. DataPaclets`AstronomicalDataDump`$SubgroupToGroup])]]]; DataPaclets`AstronomicalDataDump`val = System`Convert`WDXDump`readWDXObject[DataPaclets`AstronomicalDataDump`$StreamCache[DataPaclets`AstronomicalDataDump`subgroup]]; Internal`SetCache[{\"AstronomicalData\", DataPaclets`AstronomicalDataDump`sn, DataPaclets`AstronomicalDataDump`prop}, DataPaclets`AstronomicalDataDump`val]]; DataPaclets`AstronomicalDataDump`val, DataPaclets`AstronomicalDataDump`GroupQ[DataPaclets`AstronomicalDataDump`prop], MemberQ[DataPaclets`AstronomicalDataDump`$GroupHash[DataPaclets`AstronomicalDataDump`prop], Verbatim[DataPaclets`AstronomicalDataDump`sn], 1], Head[DataPaclets`AstronomicalDataDump`val = DataPaclets`AstronomicalDataDump`internalAstronomicalData[DataPaclets`AstronomicalDataDump`sn, DataPaclets`AstronomicalDataDump`prop]] =!= DataPaclets`AstronomicalDataDump`internalAstronomicalData, DataPaclets`AstronomicalDataDump`val, Head[DataPaclets`AstronomicalDataDump`val = DataPaclets`AstronomicalDataDump`ComputeFunction[DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`prop]] =!= DataPaclets`AstronomicalDataDump`ComputeFunction, DataPaclets`AstronomicalDataDump`val, DataPaclets`AstronomicalDataDump`AnyPropertyQ[{DataPaclets`AstronomicalDataDump`prop}], Missing[\"NotApplicable\"], True, DataPaclets`AstronomicalDataDump`handlePropertyError[DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`prop]; DataPaclets`AstronomicalDataDump`allowOutput = False], Head[DataPaclets`AstronomicalDataDump`val = DataPaclets`AstronomicalDataDump`ComputeFunction[DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`prop]] =!= DataPaclets`AstronomicalDataDump`ComputeFunction, DataPaclets`AstronomicalDataDump`val, DataPaclets`AstronomicalDataDump`GroupQ[DataPaclets`AstronomicalDataDump`obj], Which[DataPaclets`AstronomicalDataDump`GroupQ[DataPaclets`AstronomicalDataDump`prop], DataPaclets`AstronomicalDataDump`keys = DataPaclets`AstronomicalDataDump`$GroupHash[DataPaclets`AstronomicalDataDump`obj]; (AstronomicalData[#1, DataPaclets`AstronomicalDataDump`prop] & ) \/@ DataPaclets`AstronomicalDataDump`keys, DataPaclets`AstronomicalDataDump`AnyPropertyQ[{DataPaclets`AstronomicalDataDump`prop}], DataPaclets`AstronomicalDataDump`keys = DataPaclets`AstronomicalDataDump`$GroupHash[DataPaclets`AstronomicalDataDump`obj]; Quiet[(AstronomicalData[#1, DataPaclets`AstronomicalDataDump`prop] & ) \/@ DataPaclets`AstronomicalDataDump`keys \/. AstronomicalData[___] -> Missing[\"NotApplicable\"]], {DataPaclets`AstronomicalDataDump`prop} === {\"Properties\"}, DataPaclets`AstronomicalDataDump`keys = DataPaclets`AstronomicalDataDump`$GroupHash[DataPaclets`AstronomicalDataDump`obj]; Sort[Quiet[Union @@ (AstronomicalData[#1, \"Properties\"] & ) \/@ DataPaclets`AstronomicalDataDump`keys]], Last[{DataPaclets`AstronomicalDataDump`prop}] === \"Properties\" && DataPaclets`AstronomicalDataDump`AnyPropertyQ[Most[{DataPaclets`AstronomicalDataDump`prop}]], DataPaclets`AstronomicalDataDump`keys = DataPaclets`AstronomicalDataDump`$GroupHash[DataPaclets`AstronomicalDataDump`obj]; Sort[Quiet[Union @@ (AstronomicalData[#1, Sequence @@ Most[{DataPaclets`AstronomicalDataDump`prop}], \"Properties\"] & ) \/@ DataPaclets`AstronomicalDataDump`keys]], True, DataPaclets`AstronomicalDataDump`handlePropertyError[DataPaclets`AstronomicalDataDump`obj, DataPaclets`AstronomicalDataDump`prop]; DataPaclets`AstronomicalDataDump`allowOutput = False], True, Message[AstronomicalData::notent, ToString[DataPaclets`AstronomicalDataDump`obj, InputForm], AstronomicalData]; DataPaclets`AstronomicalDataDump`allowOutput = False], \"DataPacletException\"]; DataPaclets`AstronomicalDataDump`output \/; DataPaclets`AstronomicalDataDump`allowOutput]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AstronomicalData",
	"AsynchronousTaskObject":"ObjectType: Symbol\nUsage: AsynchronousTaskObject[\"name\", id, sessionid] is an object that represents asynchronous evaluations from a particular asynchronous task.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[AsynchronousTaskObject[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Misc`\", {{Missing, _}, {Divisible, _}, {SeriesData, _}, {O, _}, {C, _}, {ConditionalExpression, _}, {VectorGreater, _}, {VectorGreaterEqual, _}, {VectorLess, _}, {VectorLessEqual, _}, {Developer`VectorInequality, _}, {InverseFunction, _}, {TagBox, HoldPattern[MakeExpression[TagBox[_, InverseFunction | {InverseFunction, __} | _Dataset`InterpretDataset, ___], _]]}, {AsynchronousTaskObject, _}, {EmbeddedHTML, _}, {File, _}, {URL, _}, {KroneckerDelta, _}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"KroneckerDeltaSeq\" | \"C\" | \"CTraditional\" | \"EmbeddedHTML\" | \"EmbeddedHTMLLink\" | \"FileArgument\" | \"URLArgument\" | \"NonNegativeConeString\" | \"SemidefiniteConeString\" | \"NormConeString\" | \"ExponentialConeString\" | \"DualExponentialConeString\" | \"PowerConeString\" | \"DualPowerConeString\" | \"NonNegativeConeList\" | \"SemidefiniteConeList\" | \"NormConeList\" | \"PowerConeList\" | \"DualPowerConeList\", ___], _]]}}, Hold[Missing, Divisible, SeriesData, O, C, ConditionalExpression, InverseFunction, TagBox, AsynchronousTaskObject, EmbeddedHTML, File, URL, TemplateBox, KroneckerDelta, VectorGreater, VectorGreaterEqual, VectorLess, VectorLessEqual, Developer`VectorInequality]]\nOptions: None\nAttributes: {}\nFullName: System`AsynchronousTaskObject",
	"AsynchronousTasks":"ObjectType: Symbol\nUsage: AsynchronousTasks[] returns a list of running asynchronous tasks.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AsynchronousTasks",
	"AudioDevice":"ObjectType: Symbol\nUsage: AudioDevice is an option for Audio and related functions that specifies the device to use for playback.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AudioDevice",
	"AudioLooping":"ObjectType: Symbol\nUsage: AudioLooping is an option for AudioStream and related functions to specify the playback looping.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AudioLooping",
	"AudioTracks":"ObjectType: Symbol\nUsage: AudioTracks is an option that specifies the audio tracks of interest.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AudioTracks",
	"Authenticate":"ObjectType: Symbol\nUsage: System`Authenticate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Authenticate[Authentication`Authenticate`PackagePrivate`args___] := With[{Authentication`Authenticate`PackagePrivate`res = Catch[Authentication`Authenticate`PackagePrivate`authenticate[Authentication`Authenticate`PackagePrivate`args], Authentication`PackageScope`$authtag]}, Authentication`Authenticate`PackagePrivate`res \/; Authentication`Authenticate`PackagePrivate`res =!= \"AuthUnevaluatedTag\"]\nAuthenticate[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VerifySecurityCertificates -> True}\nAttributes: {}\nFullName: System`Authenticate",
	"AutoEvaluateEvents":"ObjectType: Symbol\nUsage: System`AutoEvaluateEvents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoEvaluateEvents",
	"AutoGeneratedPackage":"ObjectType: Symbol\nUsage: AutoGeneratedPackage is an option for notebooks that specifies whether a package is automatically created when a notebook that contains initialization cells or groups is saved.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoGeneratedPackage",
	"AutoIndentSpacings":"ObjectType: Symbol\nUsage: System`AutoIndentSpacings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoIndentSpacings",
	"AutoloadPath":"ObjectType: Symbol\nUsage: AutoloadPath is a global option that specifies from which directories packages are automatically loaded when the Wolfram System is started.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoloadPath",
	"AutoMatch":"ObjectType: Symbol\nUsage: System`AutoMatch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoMatch",
	"AutomaticImageSize":"ObjectType: Symbol\nUsage: System`AutomaticImageSize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutomaticImageSize",
	"AutoNumberFormatting":"ObjectType: Symbol\nUsage: System`AutoNumberFormatting\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoNumberFormatting",
	"AutoOpenNotebooks":"ObjectType: Symbol\nUsage: AutoOpenNotebooks is a global option that specifies which notebooks should be automatically opened when the Wolfram System is started.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoOpenNotebooks",
	"AutoOpenPalettes":"ObjectType: Symbol\nUsage: AutoOpenPalettes is a global option that specifies the palettes that are automatically opened when the Wolfram System is started.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoOpenPalettes",
	"AutoQuoteCharacters":"ObjectType: Symbol\nUsage: System`AutoQuoteCharacters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoQuoteCharacters",
	"AutoScaling":"ObjectType: Symbol\nUsage: System`AutoScaling\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoScaling",
	"AutoStyleOptions":"ObjectType: Symbol\nUsage: System`AutoStyleOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoStyleOptions",
	"AutoStyleWords":"ObjectType: Symbol\nUsage: System`AutoStyleWords\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`AutoStyleWords",
	"BackgroundAppearance":"ObjectType: Symbol\nUsage: System`BackgroundAppearance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BackgroundAppearance",
	"BackgroundTasksSettings":"ObjectType: Symbol\nUsage: System`BackgroundTasksSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BackgroundTasksSettings",
	"Backsubstitution":"ObjectType: Symbol\nUsage: System`Backsubstitution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Backsubstitution",
	"BeginFrontEndInteractionPacket":"ObjectType: Symbol\nUsage: System`BeginFrontEndInteractionPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BeginFrontEndInteractionPacket",
	"BezierCurve3DBox":"ObjectType: Symbol\nUsage: System`BezierCurve3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[BezierCurve3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic, VertexColors -> None, VertexNormals -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`BezierCurve3DBox",
	"BezierCurve3DBoxOptions":"ObjectType: Symbol\nUsage: BezierCurve3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for BezierCurve3DBox objects.\n                              1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BezierCurve3DBoxOptions",
	"BezierCurveBox":"ObjectType: Symbol\nUsage: System`BezierCurveBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[BezierCurveBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, BoxForm`Filled -> False, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`BezierCurveBox",
	"BezierCurveBoxOptions":"ObjectType: Symbol\nUsage: BezierCurveBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for BezierCurveBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BezierCurveBoxOptions",
	"BlankForm":"ObjectType: Symbol\nUsage: BlankForm is an internal symbol used for formatting and printing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BlankForm",
	"Bounds":"ObjectType: Symbol\nUsage: System`Bounds\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Bounds",
	"Box":"ObjectType: Symbol\nUsage: System`Box\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Box",
	"BoxBaselineShift":"ObjectType: Symbol\nUsage: BoxBaselineShift is an option for AdjustmentBox that specifies how much the baseline of the box should be shifted relative to those of neighboring characters.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxBaselineShift",
	"BoxDimensions":"ObjectType: Symbol\nUsage: System`BoxDimensions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxDimensions",
	"BoxForm":"ObjectType: Symbol\nUsage: System`BoxForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxForm",
	"BoxFormFormatTypes":"ObjectType: Symbol\nUsage: BoxFormFormatTypes is a global option that specifies the list of typeset format types that are currently defined.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxFormFormatTypes",
	"BoxFrame":"ObjectType: Symbol\nUsage: BoxFrame is an option for FrameBox objects that specifies whether to draw a frame around the contents of the box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxFrame",
	"BoxID":"ObjectType: Symbol\nUsage: System`BoxID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxID",
	"BoxMargins":"ObjectType: Symbol\nUsage: BoxMargins is an option for AdjustmentBox objects that specifies the margins to leave around the contents of the box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxMargins",
	"BoxRotation":"ObjectType: Symbol\nUsage: System`BoxRotation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxRotation",
	"BoxRotationPoint":"ObjectType: Symbol\nUsage: System`BoxRotationPoint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BoxRotationPoint",
	"BrowserCategory":"ObjectType: Symbol\nUsage: System`BrowserCategory\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BrowserCategory",
	"BSplineCurve3DBox":"ObjectType: Symbol\nUsage: System`BSplineCurve3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[BSplineCurve3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic, SplineKnots -> Automatic, SplineWeights -> Automatic, VertexColors -> None, VertexNormals -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`BSplineCurve3DBox",
	"BSplineCurve3DBoxOptions":"ObjectType: Symbol\nUsage: BSplineCurve3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for BSplineCurve3DBox objects.\n                               1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BSplineCurve3DBoxOptions",
	"BSplineCurveBox":"ObjectType: Symbol\nUsage: System`BSplineCurveBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[BSplineCurveBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, BoxForm`Filled -> False, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic, SplineKnots -> Automatic, SplineWeights -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`BSplineCurveBox",
	"BSplineCurveBoxOptions":"ObjectType: Symbol\nUsage: BSplineCurveBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for BSplineCurveBox objects.\n                             1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BSplineCurveBoxOptions",
	"BSplineSurface3DBox":"ObjectType: Symbol\nUsage: System`BSplineSurface3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[BSplineSurface3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic, SplineKnots -> Automatic, SplineWeights -> Automatic, VertexColors -> None, VertexNormals -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`BSplineSurface3DBox",
	"BSplineSurface3DBoxOptions":"ObjectType: Symbol\nUsage: BSplineSurface3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for BSplineSurface3DBox objects.\n                                 1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`BSplineSurface3DBoxOptions",
	"ButtonCell":"ObjectType: Symbol\nUsage: System`ButtonCell\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonCell",
	"ButtonContents":"ObjectType: Symbol\nUsage: System`ButtonContents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonContents",
	"ButtonEvaluator":"ObjectType: Symbol\nUsage: ButtonEvaluator is an option for the low-level function ButtonBox that specifies where the expression constructed from ButtonFunction should be sent for evaluation. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonEvaluator",
	"ButtonExpandable":"ObjectType: Symbol\nUsage: ButtonExpandable is an option for the low-level function ButtonBox that specifies whether the button should expand to fill any GridBox position in which it appears. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonExpandable",
	"ButtonFrame":"ObjectType: Symbol\nUsage: ButtonFrame is an option for the low-level function ButtonBox that specifies the type of frame to display around a button. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonFrame",
	"ButtonMargins":"ObjectType: Symbol\nUsage: ButtonMargins is an option for ButtonBox that specifies how much space in printer's points to leave around the contents of a button when the button is displayed. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonMargins",
	"ButtonNote":"ObjectType: Symbol\nUsage: ButtonNote is an option for ButtonBox that specifies what should be displayed in the status line of the current notebook window when the button is active and the cursor is placed on top of it. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonNote",
	"ButtonStyle":"ObjectType: Symbol\nUsage: ButtonStyle is an option for ButtonBox that specifies the default properties for the button. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonStyle",
	"ButtonStyleMenuListing":"ObjectType: Symbol\nUsage: System`ButtonStyleMenuListing\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ButtonStyleMenuListing",
	"CachedValue":"ObjectType: Symbol\nUsage: System`CachedValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CachedValue",
	"CacheGraphics":"ObjectType: Symbol\nUsage: System`CacheGraphics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CacheGraphics",
	"CardinalBSplineBasis":"ObjectType: Symbol\nUsage: System`CardinalBSplineBasis\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CardinalBSplineBasis[(GeometricFunctions`BasisFunctionsDump`d_)?GeometricFunctions`NNMIntegerQ, (GeometricFunctions`BasisFunctionsDump`x_)?Internal`RealValuedNumericQ] := With[{GeometricFunctions`BasisFunctionsDump`knots = Range[-((GeometricFunctions`BasisFunctionsDump`d + 1)\/2), (GeometricFunctions`BasisFunctionsDump`d + 1)\/2]}, BSplineBasis[{GeometricFunctions`BasisFunctionsDump`d, GeometricFunctions`BasisFunctionsDump`knots}, 0, GeometricFunctions`BasisFunctionsDump`x]]\nGeometricFunctions`BasisFunctionsDump`e:CardinalBSplineBasis[GeometricFunctions`BasisFunctionsDump`d_ \/; NumericQ[GeometricFunctions`BasisFunctionsDump`d] &&  !GeometricFunctions`NNMIntegerQ[GeometricFunctions`BasisFunctionsDump`d], GeometricFunctions`BasisFunctionsDump`x_] \/; (Message[CardinalBSplineBasis::intnm, Unevaluated[GeometricFunctions`BasisFunctionsDump`e], 1]; False) := $Failed\nCardinalBSplineBasis[GeometricFunctions`BasisFunctionsDump`args___] \/;  !ArgumentCountQ[CardinalBSplineBasis, Length[{GeometricFunctions`BasisFunctionsDump`args}], 2, 2] && False := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable, NumericFunction}\nFullName: System`CardinalBSplineBasis",
	"CDFInformation":"ObjectType: Symbol\nUsage: CDFInformation[expr] gives a list of properties relevant to a CDF deployed with the content expr.CDFInformation[notebook] gives usage properties for a CDF to be deployed from the given notebook.CDFInformation[NotebookSelection[notebook]] gives CDF usage properties for only the selected cells in the given notebook.CDFInformation[\"file\"] gives CDF usage properties for the named notebook or CDF file.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CDFInformation[System`FEDump`source_CloudObject, System`FEDump`opts:OptionsPattern[]] := Replace[CloudImport[System`FEDump`source, \"Notebook\"], {System`FEDump`nbexpr_Notebook :> CDFInformation[System`FEDump`nbexpr, System`FEDump`opts], _ -> $Failed}]\nCDFInformation[URL[System`FEDump`url_String], System`FEDump`opts:OptionsPattern[]] := Replace[Import[System`FEDump`url, \"Notebook\"], {System`FEDump`nbexpr_Notebook :> CDFInformation[System`FEDump`nbexpr, System`FEDump`opts], _ -> $Failed}]\nCDFInformation[System`FEDump`source_Notebook, System`FEDump`opts:OptionsPattern[]] := System`FEDump`iCDFInformation[System`FEDump`source, System`FEDump`opts]\nCDFInformation[(System`FEDump`source_String) | File[System`FEDump`source_String], System`FEDump`opts:OptionsPattern[]] := System`FEDump`iCDFInformation[System`FEDump`source, System`FEDump`opts] \/; MatchQ[FileExtension[System`FEDump`source], \"nb\" | \"cdf\"]\nCDFInformation[System`FEDump`source_FrontEnd`FileName, System`FEDump`opts:OptionsPattern[]] := System`FEDump`iCDFInformation[System`FEDump`source, System`FEDump`opts]\nCDFInformation[System`FEDump`source:(_NotebookObject | _FrontEnd`NotebookObject | _FrontEnd`SelectedNotebook | _FrontEnd`InputNotebook | _FrontEnd`ButtonNotebook | _FrontEnd`EvaluationNotebook | _FrontEnd`MessagesNotebook | _FrontEnd`HelpBrowserNotebook | _FrontEnd`ClipboardNotebook) | _NotebookSelection, System`FEDump`opts:OptionsPattern[]] := UsingFrontEnd[MathLink`CallFrontEnd[FrontEnd`CDFInformation[System`FEDump`source, System`FEDump`opts]]]\nCDFInformation[System`FEDump`source:_Cell | _CellGroup | _ExpressionCell | _Text | _TextCell, System`FEDump`opts:OptionsPattern[]] := System`FEDump`iCDFInformation[System`FEDump`cdfMakeNotebook[System`FEDump`source], System`FEDump`opts]\nCDFInformation[System`FEDump`source:_DocumentNotebook | _PaletteNotebook | _DialogNotebook, System`FEDump`opts:OptionsPattern[]] := System`FEDump`iCDFInformation[System`FEDump`notebookGeneratorToNotebook[System`FEDump`source], System`FEDump`opts]\nCDFInformation[System`FEDump`source_, System`FEDump`opts:OptionsPattern[]] := System`FEDump`iCDFInformation[System`FEDump`cdfMakeNotebook[ExpressionCell[System`FEDump`source]], System`FEDump`opts]\nCDFInformation[System`FEDump`args___] := (ArgumentCountQ[CDFInformation, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 1, 1]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlternateImage -> False, WindowSize -> Automatic}\nAttributes: {}\nFullName: System`CDFInformation",
	"CellBoundingBox":"ObjectType: Symbol\nUsage: System`CellBoundingBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellBoundingBox",
	"CellContents":"ObjectType: Symbol\nUsage: System`CellContents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellContents",
	"CellElementsBoundingBox":"ObjectType: Symbol\nUsage: System`CellElementsBoundingBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellElementsBoundingBox",
	"CellElementSpacings":"ObjectType: Symbol\nUsage: System`CellElementSpacings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellElementSpacings",
	"CellGroupingRules":"ObjectType: Symbol\nUsage: CellGroupingRules is an option for cells that specifies the rules used for grouping a cell.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellGroupingRules",
	"CellHorizontalScrolling":"ObjectType: Symbol\nUsage: CellHorizontalScrolling is an option for cells that specifies whether the contents of a cell can be scrolled from left to right using the horizontal scroll bar of the notebook.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellHorizontalScrolling",
	"CellLabelMargins":"ObjectType: Symbol\nUsage: CellLabelMargins is an option for cells that specifies the absolute margins in printer's points around a cell label.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellLabelMargins",
	"CellLabelPositioning":"ObjectType: Symbol\nUsage: CellLabelPositioning is an option for cells that specifies where the label for a cell is positioned.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellLabelPositioning",
	"CellSize":"ObjectType: Symbol\nUsage: CellSize is an option for cells that specifies the width and height of an inline cell.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CellSize",
	"ChangeOptions":"ObjectType: Symbol\nUsage: System`ChangeOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ChangeOptions[(BoxForm`head:DialogNotebook | DocumentNotebook | PaletteNotebook | ExpressionCell | TextCell | Column | Framed | Graphics | Graphics3D | Grid | Item | Pane | Panel | Row | Style | TextGrid | Notebook | Cell | FrameBox | GraphicsBox | Graphics3DBox | GridBox | ItemBox | PaneBox | PanelBox)[BoxForm`arg_, BoxForm`opts___], BoxForm`optsadded___] := (BoxForm`head[BoxForm`arg, ##1] & ) @@ DeleteDuplicatesBy[Flatten[{BoxForm`optsadded, BoxForm`opts}], First]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ChangeOptions",
	"ChannelDatabin":"ObjectType: Symbol\nUsage: System`ChannelDatabin\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ChannelDatabin",
	"ChannelListenerWait":"ObjectType: Symbol\nUsage: System`ChannelListenerWait\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ChannelListenerWait[ChannelFramework`Private`lstn:HoldPattern[ChannelListener][_?ChannelFramework`Private`activeListenerQ]] := (WaitAsynchronousTask[ChannelFramework`Private`lstn[\"Task\"]]; ChannelFramework`Private`lstn)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Timeout -> Infinity}\nAttributes: {}\nFullName: System`ChannelListenerWait",
	"ChannelPreSendFunction":"ObjectType: Symbol\nUsage: System`ChannelPreSendFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ChannelPreSendFunction",
	"CharacterEncodingsPath":"ObjectType: Symbol\nUsage: CharacterEncodingsPath is a global option that specifies which directories are searched for character encoding files.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CharacterEncodingsPath",
	"ChartElementData":"ObjectType: Symbol\nUsage: System`ChartElementData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ChartElementData[\"PointStem3D\", \"Name\"] = \"3 - D point - stem\"\nChartElementData[\"SphereBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ErrorCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Square\", System`BarFunctionDump`size = 0.5}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, Apply[System`BarFunctionDump`ErrorCube[#1, #2, \"Shape\" -> System`BarFunctionDump`shape, \"ErrorWidth\" -> System`BarFunctionDump`size] & , System`BarFunctionDump`$twoargcubes, {1}]}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Square\", \"Diamond\", \"Triangle\", \"Hexagon\", \"Octagon\", \"Circle\"}]}], Row[{Text[\"TaperRatio\"], Slider[Dynamic[System`BarFunctionDump`size], {0, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ErrorCube\", \"Shape\" -> System`BarFunctionDump`shape, \"ErrorWidth\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[\"PointStem\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassGradientBar\nChartElementData[\"SegmentScaleBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`SegmentScaleBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FilledSquare\", \"Options\"] = {}\nChartElementData[\"Bubble3D\", \"StandardName\"] = \"Bubble3D\"\nChartElementData[\"Trapezoid\", \"StandardName\"] = \"Trapezoid\"\nChartElementData[\"FloatingCube\", \"StandardName\"] = \"FloatingCube\"\nChartElementData[\"FilledDownTriangle\", \"Name\"] = \"filled down-triangle\"\nChartElementData[\"SimpleMarkers\", \"Name\"] = \"simple markers\"\nChartElementData[\"TimelineFilling\", \"ParameterNames\"] = {}\nChartElementData[\"HistogramDensity\", \"Name\"] = \"histogram bar\"\nChartElementData[\"OscillatingBubble\", \"Name\"] = \"oscillating bubble\"\nChartElementData[\"TimelineListLabel\", \"Options\"] = {}\nChartElementData[\"TriangleWaveSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientSector\", \"ParameterNames\"] = {}\nChartElementData[\"TimelineIndex\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RightEndedLine\", \"StandardName\"] = \"RightEndedLine\"\nChartElementData[\"TriangleWaveBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`TriangleWaveBubble\nChartElementData[\"Plane3D\", \"Name\"] = \"3 - D plane\"\nChartElementData[\"EmptyDiamond\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"LineDensity\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"Stacked\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"FadingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"DottedRectangle\", \"Name\"] = \"dotted rectangle\"\nChartElementData[\"GlassSector\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = \"Radial\"}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GlassSector[#1, {}, \"Color\" -> Green, \"GradientDirection\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Radial\", \"Angular\", \"DescendingRadial\", \"DescendingAngular\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GlassSector\", \"GradientDirection\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"PointLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FilledDiamond\", \"Name\"] = \"filled diamond\"\nChartElementData[\"DensityQuantile\", \"Name\"] = \"density quantile\"\nChartElementData[\"PulseShrinkingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SquareWaveRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"StopWatchNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"FadingCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ScaleBreakRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ScaleBreakRectangle\nChartElementData[\"ScatteredBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`BoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"RightEndedRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SegmentScaleBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"Zigzag\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ZigzagBar\nChartElementData[\"DensityQuantile\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`DensityQuantileBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CenterFilledCircle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Quantile\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"ShrinkingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Arrow3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"BezelSector\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`rot = 1, System`BarFunctionDump`size = Automatic}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`BezelSector[#1, {}, \"BezelRotation\" -> System`BarFunctionDump`rot, \"BezelSize\" -> System`BarFunctionDump`size, \"ConnectEndPoints\" -> False] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"BezelRotation\"], Slider[Dynamic[System`BarFunctionDump`rot], {0, 2*Pi}]}], Row[{Text[\"BezelSize\"], PopupMenu[Dynamic[System`BarFunctionDump`size], {Automatic, 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"BezelSector\", \"BezelRotation\" -> System`BarFunctionDump`rot, \"BezelSize\" -> System`BarFunctionDump`size, \"ConnectEndPoints\" -> False, \"ConnectFrameEndPoints\" -> False]]]]}]]\nChartElementData[\"BezelSector\", \"Name\"] = \"bezel sector\"\nChartElementData[\"GlassTrapezoid\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GlassGradientBar[#1, {}, \"GradientOrigin\" -> Left] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"EmptyCircle\", \"Options\"] = {}\nChartElementData[\"ObliqueRectangle\", \"StandardName\"] = \"ObliqueRectangle\"\nChartElementData[\"SegmentScaleCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`colorList = {Green, Yellow, Orange, Red}}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorGradientScaleBar[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`colorList] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SegmentScaleCube\", \"ColorScheme\" -> System`BarFunctionDump`colorList]]]]}]]\nChartElementData[\"Cylinder\", \"ParameterNames\"] = {}\nChartElementData[\"FadingBoxWhisker\", \"Options\"] = {\"IQRCoefficient\" -> 1.5, \"GradientOrigin\" -> Automatic}\nChartElementData[\"Zigzag\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ZigzagBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PlateauBoxWhisker\", \"StandardName\"] = \"PlateauBoxWhisker\"\nChartElementData[\"ShrinkingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ShrinkingRectangle[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PlateauBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"Bubble3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicBubble3D\nChartElementData[\"ThinArrowNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ThreeLineBreak\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TLBBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ThreeLineBreak\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"TorusSector3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FadingRectangle\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"FadingTrapezoid\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`FadingGradientTrap[#1, {}, \"GradientOrigin\" -> Left] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Stem\", \"ParameterNames\"] = {}\nChartElementData[\"DiscreteCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`DiscreteBasicBar3D\nChartElementData[\"GlassRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DottedRectangle\", \"ParameterNames\"] = {\"Radius\"}\nChartElementData[\"BarMarker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CenterFilledDiamond\", \"Name\"] = \"center-filled diamond\"\nChartElementData[\"ThreeLineBreak\", \"StandardName\"] = \"ThreeLineBreak\"\nChartElementData[\"CenterFilledDiamond\", \"StandardName\"] = \"CenterFilledDiamond\"\nChartElementData[\"Stem\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientScaleCube\", \"Options\"] = {\"ColorScheme\" -> {RGBColor[0.674205, 0.423758, 0.242374], RGBColor[0.853407, 0.503288, 0.26041], RGBColor[0.8697087272727273, 0.582690909090909, 0.2751812727272727], RGBColor[0.8852926363636364, 0.6564491818181818, 0.28915563636363634], RGBColor[0.8999194545454545, 0.7226812727272727, 0.3020674545454546], RGBColor[0.918547, 0.79826, 0.409216], RGBColor[0.8616270909090908, 0.7735107272727273, 0.4171470909090909], RGBColor[0.77615, 0.762081, 0.645243], RGBColor[0.762341, 0.748974, 0.784665], RGBColor[0.698177, 0.714595, 0.841627], RGBColor[0.7372037272727272, 0.7590425454545454, 0.9071053636363636], RGBColor[0.645624, 0.660807, 0.778286]}}\nChartElementData[\"CylinderMarker\", \"ParameterNames\"] = {}\nChartElementData[\"HalfFilledUpTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"BarMarker\", \"Name\"] = \"bar marker\"\nChartElementData[\"Stem3D\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`StemDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Stem3D\"]]]]}]]\nChartElementData[\"Quantile\", \"InternalChartElementFunction\"] = System`BarFunctionDump`QuantileBar\nChartElementData[\"BoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"GradientRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GradientBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ClickFillingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RightEndedRectangle\", \"Options\"] = {}\nChartElementData[\"HalfFilledSquare\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PointStem\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PointStemDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PointStem\"]]]]}]]\nChartElementData[\"HalfFilledDiamond\", \"Options\"] = {}\nChartElementData[\"GlassBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassBubble\nChartElementData[\"FilledDownTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"TimelineElement\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineElement[#1, {}, \"ArrowSize\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TimelineElement\", \"ArrowSize\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"ClickFillingRectangle\", \"Name\"] = \"click filling rectangle\"\nChartElementData[\"DiscreteCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Square\", System`BarFunctionDump`size = 1, System`BarFunctionDump`shading = \"Solid\", System`BarFunctionDump`color = RGBColor[0.5, 0.5, 1]}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`DiscreteBasicBar3D[#1, {}, \"Shading\" -> System`BarFunctionDump`shading, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size, \"Color\" -> System`BarFunctionDump`color] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"shading\"], PopupMenu[Dynamic[System`BarFunctionDump`shading], {\"Solid\", \"Fading\"}]}], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Square\", \"Diamond\", \"Triangle\", \"Hexagon\", \"Octagon\"}]}], Row[{Text[\"TaperRatio\"], Slider[Dynamic[System`BarFunctionDump`size], {0, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Cube\", \"Shading\" -> System`BarFunctionDump`shading, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[\"PlaneFadingCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`color = RGBColor[0.5, 0.5, 1]}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PlaneEdgelessGradientCube[#1, {}, \"Color\" -> System`BarFunctionDump`color] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PlaneFadingCube\"]]]]}]]\nChartElementData[\"PlaneFadingCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PlaneEdgelessGradientCube[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"NoiseBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`NoiseBubble\nChartElementData[\"TwoToneNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"GradientScaleCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"TimelineRectangle\", \"Options\"] = {\"ArrowSize\" -> 0.15, \"Side\" -> \"Single\"}\nChartElementData[\"NoiseRectangle\", \"Name\"] = \"noise rectangle\"\nChartElementData[\"TimelineIndex\", \"Name\"] = \"time line index\"\nChartElementData[\"DottedRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DottedBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Rectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"GradientBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"BezelSector\", \"Options\"] = {\"BezelRotation\" -> 1, \"BezelSize\" -> Automatic}\nChartElementData[\"StripedRectangle\", \"Name\"] = \"striped rectangle\"\nChartElementData[\"CenterFilledDiamond\"] = {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0.25}, {0.75, 0.5}, {0.5, 0.75}, {0.25, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"DensityQuantile\", \"StandardName\"] = \"DensityQuantile\"\nChartElementData[\"InteractiveTradingChart\"] = {\"ArrowCandlestick\", \"Candlestick\", \"FadingCandlestick\", \"FadingOHLC\", \"GlassCandlestick\", \"HLC\", \"OHLC\"}\nChartElementData[\"CylindricalSector3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Cube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicBar3D\nChartElementData[\"CenterFilledDownTriangle\", \"Options\"] = {}\nChartElementData[\"Candlestick\", \"StandardName\"] = \"Candlestick\"\nChartElementData[\"Stem3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ShrinkingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ShrinkingRectangle\nChartElementData[\"FadingQuantile\", \"StandardName\"] = \"FadingQuantile\"\nChartElementData[\"FilledDownTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.08}], ImageSize -> 30]\nChartElementData[\"Range\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ArrowRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Quantile\", \"StandardName\"] = \"Quantile\"\nChartElementData[\"SimpleMarkers\"] = {{Graphics[{Disk[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{Rectangle[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.08}, {Graphics[{{GrayLevel[1], Disk[{0, 0}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}}\nChartElementData[\"SegmentScaleCube\", \"ParameterNames\"] = {}\nChartElementData[\"PlaneFadingCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"EmptySquare\", \"Options\"] = {}\nChartElementData[\"GlassBoxWhisker\", \"Name\"] = \"glass box and whisker\"\nChartElementData[\"GlassSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SpinBubble3D\", \"ParameterNames\"] = {}\nChartElementData[\"PulseShrinkingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PulseShrinkingRectangle[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GradientScaleTrapezoid\", \"StandardName\"] = \"GradientScaleTrapezoid\"\nChartElementData[\"TimelineRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"BezelSector\", \"ParameterNames\"] = {}\nChartElementData[\"RightEndedRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"EmptyDownTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"Line\", \"ParameterNames\"] = {}\nChartElementData[\"CenterFilledCircle\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 0.5]}, {Thickness[0.1], Circle[{0, 0}, 1]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"Anchor\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveCube\", \"Options\"] = {\"AngularFrequency\" -> 8, \"RadialAmplitude\" -> 0.15}\nChartElementData[\"TimelineFilling\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineFilling[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ErrorBar\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0, System`BarFunctionDump`w = 0.5}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`errorBar[#1, Abs[#2 - Last[#1]], \"RoundingRadius\" -> Offset[System`BarFunctionDump`r], \"ErrorWidth\" -> System`BarFunctionDump`w] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Row[{Text[\"width\"], Slider[Dynamic[System`BarFunctionDump`w], {0, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ErrorBar\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r], \"ErrorWidth\" -> System`BarFunctionDump`w]]]]}]]\nChartElementData[\"SquareWaveCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`freq = 8, System`BarFunctionDump`amp = 0.1}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`SquareWaveBar3D[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`freq, \"RadialAmplitude\" -> System`BarFunctionDump`amp] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"angular frequency \"], Slider[Dynamic[System`BarFunctionDump`freq], {2, 10, 1}, ImageSize -> Small]}], Row[{Text[\"radial amplitude \"], Slider[Dynamic[System`BarFunctionDump`amp], {0.03, 0.3, 0.07}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SquareWaveCube\", \"AngularFrequency\" -> System`BarFunctionDump`freq, \"RadialAmplitude\" -> System`BarFunctionDump`amp]]]]}]]\nChartElementData[\"SquareWaveRectangle\", \"StandardName\"] = \"SquareWaveRectangle\"\nChartElementData[\"GradientTrapezoid\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GradientTrap\nChartElementData[\"PointStem3D\", \"StandardName\"] = \"PointStem3D\"\nChartElementData[\"PlateauBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"PointStem\", \"ParameterNames\"] = {}\nChartElementData[\"ClickFillingCube\", \"Name\"] = \"click filling cube\"\nChartElementData[\"StripedRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`StripedBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SimpleLine\"]]]]}]]\nChartElementData[\"FourStylesCandlestick\", \"Name\"] = \"four styles candlestick\"\nChartElementData[\"BarChart3D\"] = {\"Cone\", \"Cube\", \"Cylinder\", \"DoubleProfileCube\", \"FadingCube\", \"GradientScaleCube\", \"ProfileCube\", \"SegmentScaleCube\", \"SquareWaveCube\", \"TriangleWaveCube\"}\nChartElementData[\"SegmentScaleCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ColorSegmentScaleBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"BoxWhisker\", \"Options\"] = {\"IQRCoefficient\" -> 1.5}\nChartElementData[\"ObliqueRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`angle = 20, System`BarFunctionDump`depth = 1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ObliqueRectangle[#1, {}, \"Angle\" -> System`BarFunctionDump`angle, \"Depth\" -> System`BarFunctionDump`depth] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"angle\"], Slider[Dynamic[System`BarFunctionDump`angle], {0, 90, 1}, ImageSize -> Small]}], Row[{Text[\"depth\"], Slider[Dynamic[System`BarFunctionDump`depth], {0, 2}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ObliqueRectangle\", \"Angle\" -> System`BarFunctionDump`angle, \"Depth\" -> System`BarFunctionDump`depth]]]]}]]\nChartElementData[\"GlassReflectionSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"CheckerSquare\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CenterFilledDiamond\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0.25}, {0.75, 0.5}, {0.5, 0.75}, {0.25, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"PlaneFadingCube\", \"StandardName\"] = \"PlaneFadingCube\"\nChartElementData[\"FadingBoxWhisker\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingBoxWhiskerBar[##1] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FadingBoxWhisker\"]]]]}]]\nChartElementData[\"ClassicMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"HalfFilledUpTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FilledSquare\", \"StandardName\"] = \"FilledSquare\"\nChartElementData[\"GradientTrapezoid\", \"Name\"] = \"gradient trapezoid\"\nChartElementData[\"EdgeFadingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`EdgeFadingGradientBar[#1, {}, \"GradientOrigin\" -> Left] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"NoiseBubble\", \"Name\"] = \"noise bubble\"\nChartElementData[\"GradientTrapezoid\", \"ParameterNames\"] = {}\nChartElementData[\"LeftEndedRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LeftEndedRectangleDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GlassQuantile\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DateHistogram\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"FilledMarkers\", \"StandardName\"] = \"FilledMarkers\"\nChartElementData[\"CenterFilledUpTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SpinBubble3D\", \"Image\"] = Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`SpinBubble3D[#1, #2, {}] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions; Background -> GrayLevel[0.95], Lighting -> \"Neutral\"]\nChartElementData[\"SquareWaveCube\", \"Name\"] = \"square wave cube\"\nChartElementData[\"Zigzag\", \"Name\"] = \"OHLC\"\nChartElementData[\"MarkerBubble3D\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"PlateauCandlestick\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"SegmentScaleRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"GlassQuantile\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GlassQuantileBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GradientScaleRectangle\", \"Options\"] = {\"ColorScheme\" -> {RGBColor[0.643977, 0.700633, 0.927596], RGBColor[0.877134, 0.855222, 0.986419], RGBColor[0.96968, 0.827115, 0.369665], RGBColor[0.922377, 0.302419, 0.027451]}}\nChartElementData[\"GrowingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GrowingBar\nChartElementData[\"EmptyDownTriangle\"] = {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"BoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"SplineBar\", \"Options\"] = {\"ColorScheme\" -> \"BeachColors\", \"Width\" -> \"Fixed\"}\nChartElementData[\"FadingOHLC\", \"StandardName\"] = \"FadingOHLC\"\nChartElementData[\"OscillatingSector\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.03}\nChartElementData[\"GradientBubble\", \"Name\"] = \"gradient bubble\"\nChartElementData[\"RotatingGrowingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CheckerDiamond\", \"StandardName\"] = \"CheckerDiamond\"\nChartElementData[\"FlatProfileNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OpenEndedLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlaneCube3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ProfileThicknessBar\", \"StandardName\"] = \"ProfileThicknessBarBar\"\nChartElementData[\"NoiseSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`NoiseRadius\nChartElementData[\"GlassQuantile\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassQuantileBar\nChartElementData[\"TwoToneNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"GlassCandlestick\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"GradientScaleBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Bubble3D\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"PlateauCandlestick\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PlateauCandlestickBar\nChartElementData[\"GlassTrapezoid\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"SimpleMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"CenterFilledUpTriangle\", \"StandardName\"] = \"CenterFilledUpTriangle\"\nChartElementData[\"FadingBoxWhisker\", \"Name\"] = \"fading box whisker\"\nChartElementData[\"Sector\", \"ParameterNames\"] = {}\nChartElementData[\"SwatchLegend\"] = {\"Bubble\", \"FadingRectangle\", \"GlassRectangle\", \"PolyhedronBubble\", \"Rectangle\", \"SphereBubble\"}\nChartElementData[\"OscillatingBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Stem3D\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PointPlaneDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"DottedRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Cone\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ConeBar3D\nChartElementData[\"FadingOHLC\", \"Name\"] = \"fadingOHLC\"\nChartElementData[\"GrowingSector\", \"Name\"] = \"growing sector\"\nChartElementData[\"ProfileCube\", \"Options\"] = {\"Profile\" -> 2, \"TaperRatio\" -> 1}\nChartElementData[\"ScatteredBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"GradientBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`g = \"Rainbow\", System`BarFunctionDump`dir = \"Radial\"}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`GradientBubble[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientDirection\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"gradient\"], PopupMenu[Dynamic[System`BarFunctionDump`g], ColorData[\"Gradients\"]]}], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Radial\", \"Angular\", \"DescendingRadial\", \"DescendingAngular\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientBubble\", \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientDirection\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"MarkerBubble\", \"Options\"] = {\"Shape\" -> \"CirclePlus\", \"Filled\" -> True}\nChartElementData[\"FadingOHLC\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TimelineElement\", \"Options\"] = {\"ArrowSize\" -> 0.15, \"Side\" -> \"Single\"}\nChartElementData[\"FlatProfileNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"OscillatingBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`angularfrq = 20, System`BarFunctionDump`radialamp = 0.1, System`BarFunctionDump`color = Blue}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`OscillatingBubble[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"AngularFrequency\"], Slider[Dynamic[System`BarFunctionDump`angularfrq], {1, 40}, ImageSize -> Small]}], Row[{Text[\"RadialAmplitude\"], Slider[Dynamic[System`BarFunctionDump`radialamp], {0, 0.2}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OscillatingBubble\", \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp, \"Color\" -> System`BarFunctionDump`color]]]]}]]\nChartElementData[\"TextureRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TextureBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ReferenceTriangle\", \"ParameterNames\"] = {\"Value\", \"Reference\"}\nChartElementData[\"NoiseBubble\", \"ParameterNames\"] = {}\nChartElementData[\"ShearingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ShearingRectangle[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ShearingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"Bubble3D\", \"ParameterNames\"] = {}\nChartElementData[\"RightEndedLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"DoubleProfileCube\", \"Options\"] = {\"HorizontalProfile\" -> 2, \"VerticalProfile\" -> 20, \"TaperRatio\" -> 1}\nChartElementData[\"BezelSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BezelSector\nChartElementData[\"RenkoLine\", \"ParameterNames\"] = {}\nChartElementData[\"FadingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ClassicMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"ClassicMarkers\"]\nChartElementData[\"ThinArrowNeedle\", \"StandardName\"] = \"ThinArrowNeedle\"\nChartElementData[\"TriangleWaveBubble\", \"ParameterNames\"] = {}\nChartElementData[\"MarkerBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ContrastMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassRectangle\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"ProfileSector3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"NoiseBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`angularfrq = 40, System`BarFunctionDump`radialamp = 0.1}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`NoiseBubble[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"AngularFrequency\"], Slider[Dynamic[System`BarFunctionDump`angularfrq], {1, 80}, ImageSize -> Small]}], Row[{Text[\"RadialAmplitude\"], Slider[Dynamic[System`BarFunctionDump`radialamp], {0, 0.2}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"NoiseBubble\", \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp]]]]}]]\nChartElementData[\"HalfFilledUpTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Polygon[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"GlassBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassBubble\", \"ParameterNames\"] = {}\nChartElementData[\"FloatingCube\", \"Name\"] = \"floating bar\"\nChartElementData[\"FloatingRectangle\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"ShadingQuantile\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"HalfFilledDiamond\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SpeedometerRaisedNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"DistributionChart\"] = {\"Density\", \"DensityQuantile\", \"FadingQuantile\", \"GlassQuantile\", \"HistogramDensity\", \"LineDensity\", \"PointDensity\", \"Quantile\", \"SmoothDensity\"}\nChartElementData[\"TimelineArc\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineArc[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FadingQuantile\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"DensityQuantile\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PolyhedronBubble3D\", \"ParameterNames\"] = {}\nChartElementData[\"BasicWedgeNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"StripedRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Stem\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`StemDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ClassicMarkers\"] = Graphics`PlotMarkers[]\nChartElementData[\"TextureSector\", \"ParameterNames\"] = {}\nChartElementData[\"RightEndedLine\", \"Options\"] = {}\nChartElementData[\"OscillatingSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`OscillatingRadius\nChartElementData[\"FadingCube\", \"StandardName\"] = \"FadingCube\"\nChartElementData[\"GradientSector\", \"StandardName\"] = \"GradientSector\"\nChartElementData[\"GradientScaleRectangle\", \"StandardName\"] = \"GradientScaleRectangle\"\nChartElementData[\"HistogramDensity\", \"StandardName\"] = \"HistogramDensity\"\nChartElementData[\"LeftEndedRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5, System`BarFunctionDump`small = 3}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LeftEndedRectangleDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"LeftEndedRectangle\", \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small]]]]}]]\nChartElementData[\"ShinyHubNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FadingOHLC\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingOHLCBar\nChartElementData[\"CylindricalSector3D\", \"Image\"] = Graphics3D[{EdgeForm[], Transpose[{System`BarFunctionDump`$sector3Dstyles, (System`BarFunctionDump`CylindricalSector3D[#1, {}] & ) \/@ System`BarFunctionDump`$simple3Dsectors}]}, System`BarFunctionDump`$image3dsectoroptions]\nChartElementData[\"Density\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingDistribution\nChartElementData[\"OscillatingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro = 1}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`squareBSplineProfileBar[#1, {}, \"Profile\" -> System`BarFunctionDump`pro] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"profile \"], Slider[Dynamic[System`BarFunctionDump`pro], {1, 10}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OscillatingRectangle\", \"Profile\" -> System`BarFunctionDump`pro]]]]}]]\nChartElementData[\"SphereBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`spec = 30}, Column[{Dynamic[Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`SphereBubble[#1, {}, \"Specularity\" -> System`BarFunctionDump`spec] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"Specularity\"], Slider[Dynamic[System`BarFunctionDump`spec], {1, 60, 1}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SphereBubble\", \"Specularity\" -> System`BarFunctionDump`spec]]]]}]]\nChartElementData[\"FilledUpTriangle\", \"Options\"] = {}\nChartElementData[\"OpenEndedLine\", \"Options\"] = {}\nChartElementData[\"FadingCube\", \"Name\"] = \"fading cube\"\nChartElementData[\"SimpleContrastMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"SimpleContrastMarkers\"]\nChartElementData[\"PointLine\", \"Options\"] = {}\nChartElementData[\"RotatingRectangle\", \"StandardName\"] = \"RotatingRectangle\"\nChartElementData[\"GrowingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RotatingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"Plane3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GradientBubble\nChartElementData[\"TorusSector3D\", \"ParameterNames\"] = {}\nChartElementData[\"TimelineIndex\", \"ParameterNames\"] = {}\nChartElementData[\"GlassRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GlassGradientBar[#1, {}, \"GradientOrigin\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {Bottom, Left, Top, Right}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GlassRectangle\", \"GradientOrigin\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"EmptyMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"BowtieSquare\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DoubleProfileCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`BSplineProfileBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"SquareWaveRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`squareBSplineProfileBar\nChartElementData[\"SphereBubble\", \"ParameterNames\"] = {}\nChartElementData[\"SmoothDensity\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"FadingBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = \"Radial\"}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`FadingBubble[#1, {}, \"GradientDirection\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Radial\", \"Angular\", \"DescendingRadial\", \"DescendingAngular\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FadingBubble\", \"GradientDirection\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"GradientBoxWhisker\", \"Options\"] = {\"IQRCoefficient\" -> 1.5, \"GradientOrigin\" -> Automatic, \"ColorScheme\" -> {RGBColor[0.643977, 0.700633, 0.927596], RGBColor[0.877134, 0.855222, 0.986419], RGBColor[0.96968, 0.827115, 0.369665], RGBColor[0.922377, 0.302419, 0.027451]}}\nChartElementData[\"Arrow\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ArrowDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FilledDiamond\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SquareWaveBubble\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.1}\nChartElementData[\"FadingTrapezoid\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientTrapezoid\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GradientTrap[#1, {}] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CenterFilledSquare\"] = {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Rectangle[{0.3, 0.3}, {0.7, 0.7}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"ProfileSector3D\", \"StandardName\"] = \" Profile Sector\"\nChartElementData[\"SimpleContrastMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"RotatingGrowingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"ProfileThicknessBar\", \"ParameterNames\"] = {}\nChartElementData[\"CheckerSquare\"] = {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {0.5, 0}, {0.5, 0.5}, {0, 0.5}}]}, {Polygon[{{0.5, 0.5}, {1, 0.5}, {1, 1}, {0.5, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"DoubleEndedLine\", \"Name\"] = \"double - ended line\"\nChartElementData[\"FlatProfileNeedle\", \"StandardName\"] = \"FlatProfileNeedle\"\nChartElementData[\"OpenEndedLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5, System`BarFunctionDump`small = 3}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`OpenEndedLineDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OpenEndedLine\", \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small]]]]}]]\nChartElementData[\"PolarMarker\", \"ParameterNames\"] = {}\nChartElementData[\"ScatteredBoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0, System`BarFunctionDump`f = True, System`BarFunctionDump`m = Automatic, System`BarFunctionDump`mean = None}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`BoxWhiskerBar[##1, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r], \"Filled\" -> System`BarFunctionDump`f, \"MedianLength\" -> System`BarFunctionDump`m, \"MeanMarker\" -> System`BarFunctionDump`mean] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"BoxWhisker\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r], \"Filled\" -> System`BarFunctionDump`f, \"MedianLength\" -> System`BarFunctionDump`m, \"MeanMarker\" -> System`BarFunctionDump`mean]]]]}]]\nChartElementData[\"PairedBarChart3D\"] = {\"Cone\", \"Cube\", \"Cylinder\", \"DoubleProfileCube\", \"FadingCube\", \"GradientScaleCube\", \"ProfileCube\", \"SegmentScaleCube\", \"SquareWaveCube\", \"TriangleWaveCube\"}\nChartElementData[\"Stacked\", \"StandardName\"] = \"Stacked\"\nChartElementData[\"SquareWaveBubble\", \"ParameterNames\"] = {}\nChartElementData[\"DoubleProfileCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"FadingCube\", \"Options\"] = {}\nChartElementData[\"PointPlane3D\", \"ParameterNames\"] = {}\nChartElementData[\"LeftEndedLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LeftEndedLineDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PlaneCube3D\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PlaneCubeDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"DetailArrowNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawDetailArrowNeedle\nChartElementData[\"LeftEndedLine\", \"StandardName\"] = \"LeftEndedLine\"\nChartElementData[\"FadingBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"SquareWaveBubble\", \"Name\"] = \"square wave bubble\"\nChartElementData[\"BowtieSquare\"] = {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {1, 0}, {0.5, 0.5}}]}, {Polygon[{{0.5, 0.5}, {1, 1}, {0, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"DetailArrowNeedle\", \"StandardName\"] = \"DetailArrowNeedle\"\nChartElementData[\"OpenBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledDiamond\", \"Name\"] = \"half-filled diamond\"\nChartElementData[\"CenterMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CylinderMarker\", \"StandardName\"] = \"CylinderMarker\"\nChartElementData[\"HalfFilledMarkers\"] = {{Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 1, {Pi\/2, -Pi\/2}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {1, 0}, {1, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Polygon[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Polygon[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}}\nChartElementData[\"SphereBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SphereBubble\nChartElementData[\"SegmentScaleBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientScaleRectangle\", \"Name\"] = \"gradient scale rectangle\"\nChartElementData[\"CompassNeedle\", \"StandardName\"] = \"CompassNeedle\"\nChartElementData[\"SimpleLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ContrastMarkers\", \"Options\"] = {}\nChartElementData[\"TimelineIndex\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PointLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PointLineDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"RenkoLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ErrorBubble3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ErrorBubble3D\nChartElementData[\"ThinArrowNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"CenterMarkers\"] = {{Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 0.5]}, {Thickness[0.1], Circle[{0, 0}, 1]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Rectangle[{0.3, 0.3}, {0.7, 0.7}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0.25}, {0.75, 0.5}, {0.5, 0.75}, {0.25, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Polygon[{{0.3, 0.25}, {0.7, 0.25}, {0.5, 0.6}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Polygon[{{0.3, 0.75}, {0.7, 0.75}, {0.5, 0.4}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}}\nChartElementData[\"FadingOHLC\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"GradientTrapezoid\", \"Options\"] = {\"ColorScheme\" -> {RGBColor[0.674205, 0.423758, 0.242374], RGBColor[0.853407, 0.503288, 0.26041], RGBColor[0.8697087272727273, 0.582690909090909, 0.2751812727272727], RGBColor[0.8852926363636364, 0.6564491818181818, 0.28915563636363634], RGBColor[0.8999194545454545, 0.7226812727272727, 0.3020674545454546], RGBColor[0.918547, 0.79826, 0.409216], RGBColor[0.8616270909090908, 0.7735107272727273, 0.4171470909090909], RGBColor[0.77615, 0.762081, 0.645243], RGBColor[0.762341, 0.748974, 0.784665], RGBColor[0.698177, 0.714595, 0.841627], RGBColor[0.7372037272727272, 0.7590425454545454, 0.9071053636363636], RGBColor[0.645624, 0.660807, 0.778286]}, \"GradientOrigin\" -> Automatic}\nChartElementData[\"EmptyUpTriangle\", \"Options\"] = {}\nChartElementData[\"PairedHistogram\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"TriangleWaveSector\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.03}\nChartElementData[\"CheckerCircle\"] = {Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 1, {-Pi\/2, -Pi}]}, {Disk[{0, 0}, 1, {0, Pi\/2}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"CheckerDiamond\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0}, {0.75, 0.25}, {0.5, 0.5}, {0.25, 0.25}}]}, {Polygon[{{0.5, 0.5}, {0.75, 0.75}, {0.5, 1}, {0.25, 0.75}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"OpenBoxWhisker\", \"Options\"] = {\"Filled\" -> True, \"MedianLength\" -> Automatic, \"Marker\" -> \"ConfidenceInterval\"}\nChartElementData[\"CompassNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.75, \"HubOuterRadius\" -> 0.2, \"TailColor\" -> GrayLevel[1], \"HubColor\" -> GrayLevel[0.7], \"NeedleWidth\" -> 0.75}\nChartElementData[\"SquareWaveSector\", \"Name\"] = \"square wave sector\"\nChartElementData[\"BowtieDiamond\", \"Name\"] = \"bowtie diamond\"\nChartElementData[\"GradientScaleRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SphereBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ReferenceTriangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ReferenceArrowBar\nChartElementData[\"GradientScaleCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TradingChart\"] = {\"ArrowCandlestick\", \"Candlestick\", \"FadingCandlestick\", \"FadingOHLC\", \"GlassCandlestick\", \"HLC\", \"OHLC\"}\nChartElementData[\"ObliqueRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"RightEndedLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5, System`BarFunctionDump`small = 3}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RightEndedLineDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"RightEndedLine\", \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small]]]]}]]\nChartElementData[\"FourStylesCandlestick\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"BevelNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"DoubleEndedRectangle\", \"StandardName\"] = \"DoubleEndedRectangle\"\nChartElementData[\"FlatArrowNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"Candlestick\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`CandlestickBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CenterFilledSquare\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SmoothDensity\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ViolinBar\nChartElementData[\"GradientSector\", \"Name\"] = \"gradient sector\"\nChartElementData[\"GradientRectangle\", \"StandardName\"] = \"GradientRectangle\"\nChartElementData[\"SpeedometerRaisedNeedle\", \"StandardName\"] = \"SpeedometerRaisedNeedle\"\nChartElementData[\"BowtieDiamond\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 1}, {0.5, 0.5}, {1, 0.5}}]}, {Polygon[{{0, 0.5}, {0.5, 0.5}, {0.5, 0}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"TimelineBubbleLabel\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ThinArrowNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.667, \"HubOuterRadius\" -> 0.125, \"HubColor\" -> GrayLevel[1]}\nChartElementData[\"DensityQuantile\", \"Options\"] = {\"Quantile\" -> 4, \"QuantileStyle\" -> Automatic}\nChartElementData[\"ProfileCube\", \"StandardName\"] = \"ProfileCube\"\nChartElementData[\"ArrowCandlestickBar\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ArrowCandlestickBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ArrowRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"CenterFilledSquare\", \"Options\"] = {}\nChartElementData[\"ProfileCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"TextureRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TextureBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TextureRectangle\"]]]]}]]\nChartElementData[\"GrowingSector\", \"StandardName\"] = \"GrowingSector\"\nChartElementData[\"EmptyCircle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FadingBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingBubble\nChartElementData[\"GradientBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"BevelNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"TimelineArc\", \"ParameterNames\"] = {}\nChartElementData[\"FadingBubble\", \"Name\"] = \"fading bubble\"\nChartElementData[\"EmptySquare\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Line\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LineDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Point3D\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PointDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GlassBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"Marker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Bubble\", \"Name\"] = \"bubble\"\nChartElementData[\"Zigzag\", \"StandardName\"] = \"Zigzag\"\nChartElementData[\"ShadingQuantile\", \"Name\"] = \"shading quantile\"\nChartElementData[\"OHLC\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`OpenHighLowCloseBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"HalfFilledDownTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Polygon[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"GradientRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Zigzag\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientBubble\", \"ParameterNames\"] = {}\nChartElementData[\"CompassFlatNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawCompassFlatNeedle\nChartElementData[\"SimpleLine\", \"ParameterNames\"] = {}\nChartElementData[\"DiscreteCube\", \"Options\"] = {\"Shape\" -> \"Square\", \"Shading\" -> \"Solid\", \"TaperRatio\" -> 1, \"ExtentSize\" -> 1\/2}\nChartElementData[\"SpeedometerRaisedNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FunnelChart\"] = {\"FadingTrapezoid\", \"GlassTrapezoid\", \"GradientScaleTrapezoid\", \"GradientTrapezoid\", \"Trapezoid\"}\nChartElementData[\"OpenBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`OpenBoxWhiskerBar\nChartElementData[\"Candlestick\", \"InternalChartElementFunction\"] = System`BarFunctionDump`CandlestickBar\nChartElementData[\"EmptyMarkers\", \"Name\"] = \"empty markers\"\nChartElementData[\"BezelBevelNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"OpenEndedRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CenterFilledSquare\", \"StandardName\"] = \"CenterFilledSquare\"\nChartElementData[\"TimelineRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineBar[#1, {}, \"ArrowSize\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TimelineRectangle\", \"ArrowSize\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"BowtieDiamond\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RenkoLine\", \"StandardName\"] = \"RenkoLine\"\nChartElementData[\"HLC\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`HighLowCloseBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"BezelFlatNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`GradientBubble[#1, {}] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"EmptyDiamond\", \"ParameterNames\"] = {}\nChartElementData[\"ClickFillingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"SimpleMarkers\", \"Options\"] = {}\nChartElementData[\"BarMarker\", \"Options\"] = {\"MarkerRotation\" -> 0, \"MarkerWidth\" -> 0.15}\nChartElementData[\"FilledUpTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"RectangleChart3D\"] = {\"Cone\", \"Cube\", \"Cylinder\", \"DoubleProfileCube\", \"FadingCube\", \"GradientScaleCube\", \"ProfileCube\", \"SegmentScaleCube\", \"SquareWaveCube\", \"TriangleWaveCube\"}\nChartElementData[\"Bubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicBubble\nChartElementData[\"CylinderMarker\", \"Options\"] = {\"LightingSide\" -> Left, \"Divider\" -> True}\nChartElementData[\"GradientRectangle\", \"Name\"] = \"gradient rectangle\"\nChartElementData[\"Range\", \"Name\"] = \"error bar\"\nChartElementData[\"BarMarker\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SimpleMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlateauSector\", \"StandardName\"] = \"PlateauSector\"\nChartElementData[\"PlaneCube3D\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PlaneCubeDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PlaneCube3D\"]]]]}]]\nChartElementData[\"DiscreteCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"ErrorBubble3D\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Sphere\", System`BarFunctionDump`errorstyle = \"T\", System`BarFunctionDump`filled = True, System`BarFunctionDump`color = \"Red\", System`BarFunctionDump`size = 0.4}, Column[{With[{System`BarFunctionDump`$bubblestyle = System`BarFunctionDump`$bubblestyle, System`BarFunctionDump`$simple3Dbubbles = System`BarFunctionDump`$simple3Dbubbles, System`BarFunctionDump`$errordata = System`BarFunctionDump`$errordata, System`BarFunctionDump`$image3Dbubbleoptions = System`BarFunctionDump`$image3Dbubbleoptions}, Dynamic[Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`ErrorBubble3D[#1, #3, #2, \"Shape\" -> System`BarFunctionDump`shape, \"ErrorStyle\" -> System`BarFunctionDump`errorstyle, \"ErrorColor\" -> System`BarFunctionDump`color, \"Filled\" -> System`BarFunctionDump`filled, \"TaperRatio\" -> System`BarFunctionDump`size] & , {System`BarFunctionDump`$simple3Dbubbles, System`BarFunctionDump`$errordata, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions; Background -> GrayLevel[0.95], Lighting -> \"Neutral\"]]], Row[{Text[\"Shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Sphere\", \"Cuboid\", \"Cylinder\"}]}], Row[{Text[\"ErrorStyle\"], PopupMenu[Dynamic[System`BarFunctionDump`errorstyle], {\"T\", \"O\"}]}], Row[{Text[\"ErrorColor\"], PopupMenu[Dynamic[System`BarFunctionDump`color], {\"Yellow\", \"Red\", \"Black\", \"Blue\", \"Green\", \"Gray\", \"Orange\", \"Purple\"}]}], Row[{Text[\"TaperRatio\"], Slider[Dynamic[System`BarFunctionDump`size], {0.1, 1}, ImageSize -> Small]}], Row[{Text[\"filled\"], Checkbox[Dynamic[System`BarFunctionDump`filled]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ErrorBubble3D\", \"Shape\" -> System`BarFunctionDump`shape, \"ErrorStyle\" -> System`BarFunctionDump`errorstyle, \"ErrorColor\" -> System`BarFunctionDump`color, \"Filled\" -> System`BarFunctionDump`filled, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[\"CenterFilledUpTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EmptyDownTriangle\", \"Options\"] = {}\nChartElementData[\"FadingBubble\", \"StandardName\"] = \"FadingBubble\"\nChartElementData[\"OHLC\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`OpenHighLowCloseBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OpenHighLowClose\"]]]]}]]\nChartElementData[\"CenterMarkers\", \"Name\"] = \"center-filled markers\"\nChartElementData[\"Cone\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ConeBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Cylinder\"]]]]}]]\nChartElementData[\"FadingCandlestick\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingCandlestickBar\nChartElementData[\"PointPlane3D\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PointPlaneDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PointPlane3D\"]]]]}]]\nChartElementData[\"ThinArrowNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawThinArrowNeedle\nChartElementData[\"Trapezoid\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ObliqueRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ObliqueRectangle[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"TimelineBubbleLabel\", \"ParameterNames\"] = {}\nChartElementData[\"GradientBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DottedRectangle\", \"Options\"] = {\"Radius\" -> 1\/10}\nChartElementData[\"PlateauCandlestick\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`PlateauCandlestickBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ThreeLineBreak\", \"Name\"] = \"three line break\"\nChartElementData[\"HalfFilledCircle\", \"Name\"] = \"half-filled circle\"\nChartElementData[\"StopWatchNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.5, \"HubOuterRadius\" -> 0.08, \"HubColor\" -> GrayLevel[0.2], \"NeedleWidth\" -> 0.5, \"TailLength\" -> 0.3333}\nChartElementData[\"OpenNeedle\", \"StandardName\"] = \"OpenNeedle\"\nChartElementData[\"FadingTrapezoid\", \"Name\"] = \"fading trapezoid\"\nChartElementData[\"TimelineElement\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineElement[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"EdgeFadingRectangle\", \"StandardName\"] = \"EdgeFadingRectangle\"\nChartElementData[\"ScaleBreakRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"PointLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlateauBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HLC\", \"InternalChartElementFunction\"] = System`BarFunctionDump`HighLowCloseBar\nChartElementData[\"GlassReflectionSector\", \"Options\"] = {\"Color\" -> Automatic, \"ConnectEndPoints\" -> False}\nChartElementData[\"TextureRectangle\", \"Name\"] = \"texture rectangle\"\nChartElementData[\"ScatteredBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PointDensity\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DoubleProfileCube\", \"Name\"] = \"double profile bar\"\nChartElementData[\"Candlestick\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"Stacked\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"ScaleBreakRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CenterFilledSquare\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Rectangle[{0.3, 0.3}, {0.7, 0.7}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"EmptyMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"TextureSector\", \"StandardName\"] = \"TextureSector\"\nChartElementData[\"LeftEndedLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5, System`BarFunctionDump`small = 3}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LeftEndedLineDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"LeftEndedLine\", \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small]]]]}]]\nChartElementData[\"FloatingCube\", \"Options\"] = {\"Shape\" -> \"Square\", \"TaperRatio\" -> 1}\nChartElementData[\"OscillatingSector\", \"StandardName\"] = \"OscillatingSector\"\nChartElementData[\"GlassCandlestick\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassCandlestickBar\nChartElementData[\"BoxWhiskerChart\"] = {\"BoxWhisker\", \"FadingBoxWhisker\", \"GlassBoxWhisker\", \"GradientScaleBoxWhisker\", \"PlateauBoxWhisker\"}\nChartElementData[\"HalfFilledUpTriangle\", \"Name\"] = \"half-filled up-triangle\"\nChartElementData[\"SegmentScaleCube\", \"Options\"] = {\"Segments\" -> 5, \"ColorScheme\" -> 46}\nChartElementData[\"SegmentScaleRectangle\", \"Name\"] = \"segment scale rectangle\"\nChartElementData[\"ScatteredBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ScatteredBar\nChartElementData[\"SmoothDensity\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ViolinBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CenterFilledDownTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Polygon[{{0.3, 0.75}, {0.7, 0.75}, {0.5, 0.4}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"Histogram\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"LineRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"CenterFilledCircle\", \"StandardName\"] = \"CenterFilledCircle\"\nChartElementData[\"TriangularWaveRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro = 1}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`triangularBSplineProfileBar[#1, {}, \"Profile\" -> System`BarFunctionDump`pro] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"profile \"], Slider[Dynamic[System`BarFunctionDump`pro], {1, 10}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OscillatingRectangle\", \"Profile\" -> System`BarFunctionDump`pro]]]]}]]\nChartElementData[\"BowtieDiamond\", \"StandardName\"] = \"BowtieDiamond\"\nChartElementData[\"OpenEndedLine\", \"StandardName\"] = \"OpenEndedLine\"\nChartElementData[\"CenterFilledDiamond\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"LineDensity\", \"InternalChartElementFunction\"] = System`BarFunctionDump`DistributionLineBar\nChartElementData[\"OscillatingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"SquareWaveSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SquareWaveRadius\nChartElementData[\"ReferenceTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Range\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`RangeBar, System`BarFunctionDump`$threeargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GlassBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassBoxWhiskerBar\nChartElementData[\"ErrorRange\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0, System`BarFunctionDump`w = 0.5}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ErrorRange[#1, #2, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r], \"ErrorWidth\" -> System`BarFunctionDump`w] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Row[{Text[\"width\"], Slider[Dynamic[System`BarFunctionDump`w], {0, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ErrorRange\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r], \"ErrorWidth\" -> System`BarFunctionDump`w]]]]}]]\nChartElementData[\"PointLine\", \"ParameterNames\"] = {}\nChartElementData[\"BezelFlatNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawBezelFlatNeedle\nChartElementData[\"GlassBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"BezelSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"SplineBar\", \"StandardName\"] = \"SplineBar\"\nChartElementData[\"GradientSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GradientSector\nChartElementData[\"VintageClockNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawVintageClockNeedle\nChartElementData[\"EmptyDiamond\"] = {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"Arrow3D\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ArrowDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"GrowingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GrowingBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ErrorRange\", \"ParameterNames\"] = {\"Value\", \"Error\"}\nChartElementData[\"Zigzag\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ZigzagBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OpenHighLowClose\"]]]]}]]\nChartElementData[\"Cube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"StopWatchNeedle\", \"StandardName\"] = \"StopWatchNeedle\"\nChartElementData[\"HalfFilledSquare\", \"StandardName\"] = \"HalfFilledSquare\"\nChartElementData[\"SegmentScaleCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"TimelineArc\", \"Options\"] = {}\nChartElementData[\"MarkerBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"CirclePlus\", System`BarFunctionDump`filled = True}, Column[{With[{System`BarFunctionDump`$bubblestyle = System`BarFunctionDump`$bubblestyle, System`BarFunctionDump`$simplebubbles = System`BarFunctionDump`$simplebubbles, System`BarFunctionDump`$imagebubbleoptions = System`BarFunctionDump`$imagebubbleoptions}, Dynamic[Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`MarkerBubble[#1, {}, \"Shape\" -> System`BarFunctionDump`shape, \"Filled\" -> System`BarFunctionDump`filled] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]]], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"CirclePlus\", \"CircleTimes\", \"SquarePlus\", \"SquareTimes\", \"Diamond\", \"Hexagon\", \"OctagonPlus\", \"OctagonTimes\"}]}], Row[{Text[\"filled\"], Checkbox[Dynamic[System`BarFunctionDump`filled]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"MarkerBubble\", \"Shape\" -> System`BarFunctionDump`shape, \"Filled\" -> System`BarFunctionDump`filled]]]]}]]\nChartElementData[\"GradientBoxWhisker\", \"StandardName\"] = \"GradientBoxWhisker\"\nChartElementData[\"LiquidMarker\", \"Options\"] = {\"LightingSide\" -> Left, \"Divider\" -> True, \"BulbRadius\" -> 1.5}\nChartElementData[\"CheckerSquare\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {0.5, 0}, {0.5, 0.5}, {0, 0.5}}]}, {Polygon[{{0.5, 0.5}, {1, 0.5}, {1, 1}, {0.5, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"Point3D\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PointDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Point3D\"]]]]}]]\nChartElementData[\"SegmentScaleBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SegmentScaleBoxWhiskerBar\nChartElementData[\"Sector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicSector\nChartElementData[\"Anchor\", \"Name\"] = \"anchor\"\nChartElementData[\"Trapezoid\", \"Options\"] = {}\nChartElementData[\"OscillatingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlotMarkers\"] = {\"CenterMarkers\", \"ContrastMarkers\", \"EmptyMarkers\", \"FilledMarkers\", \"HalfFilledMarkers\", \"SimpleContrastMarkers\", \"SimpleMarkers\"}\nChartElementData[\"ObliqueRectangle\", \"Name\"] = \"oblique rectangle\"\nChartElementData[\"FadingBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BowtieSquare\", \"Name\"] = \"bowtie square\"\nChartElementData[\"ArrowCandlestick\", \"Options\"] = {\"TaperRatio\" -> 0, \"ArrowheadAngle\" -> 60, \"ArrowWidth\" -> 0.6}\nChartElementData[\"DensityQuantile\", \"InternalChartElementFunction\"] = System`BarFunctionDump`DensityQuantileBar\nChartElementData[\"Cylinder\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"FadingTrapezoid\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"BezelBevelNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"OpenEndedRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DoubleEndedRectangleDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"DoubleEndedRectangle\", \"PointSize\" -> System`BarFunctionDump`big]]]]}]]\nChartElementData[\"ProfileCube\", \"ParameterNames\"] = {}\nChartElementData[\"SquareWaveBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`angularfrq = 20, System`BarFunctionDump`radialamp = 0.1}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`SquareWaveBubble[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"AngularFrequency\"], Slider[Dynamic[System`BarFunctionDump`angularfrq], {1, 40}, ImageSize -> Small]}], Row[{Text[\"RadialAmplitude\"], Slider[Dynamic[System`BarFunctionDump`radialamp], {0, 0.2}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SquareWaveBubble\", \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp]]]]}]]\nChartElementData[\"PolyhedronBubble3D\", \"Name\"] = \"polyhedron bubble3D\"\nChartElementData[\"DetailArrowNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SimpleContrastMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"RightEndedRectangle\", \"StandardName\"] = \"RightEndedRectangle\"\nChartElementData[\"RightEndedRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`OpenEndedRectangleDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FilledDiamond\", \"Image\"] = Show[First[{Graphics[{Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"BevelNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.5, \"HubOuterRadius\" -> 0.13, \"HubColor\" -> GrayLevel[0.5], \"NeedleWidth\" -> 0.8}\nChartElementData[\"PointStem3D\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PointStemDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PointStem3D\"]]]]}]]\nChartElementData[\"ArrowCandlestick\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FilledMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"FilledMarkers\"]\nChartElementData[\"ErrorCube\", \"Options\"] = {\"Shape\" -> \"Square\", \"ErrorWidth\" -> 0.5}\nChartElementData[\"PolyhedronBubble\", \"Image\"] = Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`PolyhedronBubble[#1, {}] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"Bubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"HalfFilledCircle\", \"ParameterNames\"] = {}\nChartElementData[\"Plane3D\", \"StandardName\"] = \"Plane3D\"\nChartElementData[\"PlateauSector\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = \"DescendingRadial\"}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PlateauSector[#1, {}, \"GradientDirection\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Radial\", \"Angular\", \"DescendingRadial\", \"DescendingAngular\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PlateauSector\", \"GradientDirection\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"ReferenceTriangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"FadingBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DoubleProfileCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ClickFillingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FlatArrowNeedle\", \"Options\"] = {\"TailAngle\" -> 0.6, \"HubInnerRadius\" -> 0.5, \"HubOuterRadius\" -> 0.1, \"HubColor\" -> RGBColor[1., 1., 1.], \"NeedleWidth\" -> 0.4}\nChartElementData[\"ErrorBar\", \"Options\"] = {\"RoundingRadius\" -> 0, \"ErrorWidth\" -> 0.5}\nChartElementData[\"SpeedometerNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0, \"HubOuterRadius\" -> 0.12, \"HubColor\" -> GrayLevel[0.3], \"NeedleWidth\" -> 0.5, \"TailLength\" -> 0.3}\nChartElementData[\"Stacked\", \"Name\"] = \"stacked rectangle\"\nChartElementData[\"Point\", \"Name\"] = \"Point\"\nChartElementData[\"Stacked\", \"InternalChartElementFunction\"] = System`BarFunctionDump`StackedBar\nChartElementData[\"BasicWedgeNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.55, \"HubOuterRadius\" -> 0.125, \"HubColor\" -> GrayLevel[1], \"NeedleWidth\" -> 0.666}\nChartElementData[\"CenterFilledSquare\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CenterFilledDownTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"ClockGauge\", \"Themes\"] = {\"Digital\", \"VintageClock\", \"VintageClockDark\"}\nChartElementData[\"PulseShrinkingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PulseShrinkingRectangle[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GrowingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"GrowingSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlateauSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"BasicWedgeNeedle\", \"Name\"] = \"basic wedge needle\"\nChartElementData[\"GlassBoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Cylinder\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`CylinderBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"DoubleEndedRectangle\", \"Options\"] = {}\nChartElementData[\"LeftEndedLine\", \"Options\"] = {}\nChartElementData[\"ErrorRange\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ErrorRange\nChartElementData[\"FourStyleCandlestick\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FourStylesCandlestickBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"RangeBarChart\"] = {\"FloatingRectangle\", \"ReferenceLine\", \"ReferenceTriangle\", \"ErrorRange\", \"ErrorBar\", \"Range\", \"HighLowClose\", \"OpenHighLowClose\", \"Candlestick\", \"Stacked\", \"DistributionPoint\", \"DistributionLine\", \"BoxWhisker\"}\nChartElementData[\"EdgeFadingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"EdgeFadingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EmptyCircle\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Disk[{0, 0}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"Stem3D\", \"StandardName\"] = \"Stem3D\"\nChartElementData[\"TimelineRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"GlassBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`colorscheme}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`GlassBubble[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`colorscheme] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GlassBubble\", \"ColorScheme\" -> System`BarFunctionDump`colorscheme]]]]}]]\nChartElementData[\"Density\", \"StandardName\"] = \"Density\"\nChartElementData[\"ErrorRange\", \"Name\"] = \"error range\"\nChartElementData[\"Cone\", \"StandardName\"] = \"Cone\"\nChartElementData[\"AngularGauge\", \"Markers\"] = {\"BasicWedgeNeedle\", \"BevelNeedle\", \"BezelBevelNeedle\", \"BezelFlatNeedle\", \"BezelSector\", \"CompassFlatNeedle\", \"CompassNeedle\", \"DetailArrowNeedle\", \"FlatArrowNeedle\", \"FlatProfileNeedle\", \"GlassSector\", \"GradientSector\", \"IndustrialNeedle\", \"NoiseSector\", \"OpenNeedle\", \"OscillatingSector\", \"PlateauSector\", \"PolarMarker\", \"Sector\", \"ShinyHubNeedle\", \"SpeedometerNeedle\", \"SpeedometerRaisedNeedle\", \"SquareWaveSector\", \"StopWatchNeedle\", \"ThinArrowNeedle\", \"TriangleWaveSector\", \"TwoToneNeedle\"}\nChartElementData[\"SmoothDensity\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`origin = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ViolinBar[##1, \"GradientOrigin\" -> System`BarFunctionDump`origin] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SmoothDensity\", \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"PolyhedronBubble3D\", \"Options\"] = {\"Polyhedron\" -> \"Spikey\"}\nChartElementData[\"LeftEndedLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"DoubleProfileCube\", \"StandardName\"] = \"DoubleProfileCube\"\nChartElementData[\"GlassCandlestick\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"StopWatchNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ShadingQuantile\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ShadingQuantileBar\nChartElementData[\"TimelineListLabel\", \"ParameterNames\"] = {}\nChartElementData[\"SegmentScaleRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FadingTrapezoid\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingGradientTrap\nChartElementData[\"FilledSquare\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FlatArrowNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CompassNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"GlassCandlestick\", \"Name\"] = \"glass candlestick\"\nChartElementData[\"ShrinkingRectangle\", \"StandardName\"] = \"ShrinkingRectangle\"\nChartElementData[\"OpenBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`OpenBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Cylinder\", \"Name\"] = \"cylinder\"\nChartElementData[\"Arrow3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"DoubleProfileCube\", \"ParameterNames\"] = {}\nChartElementData[\"CenterFilledUpTriangle\", \"Options\"] = {}\nChartElementData[\"Line\", \"Name\"] = \"line\"\nChartElementData[\"OpenNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.55, \"HubOuterRadius\" -> 0.17, \"HubColor\" -> GrayLevel[0.5], \"NeedleWidth\" -> 0.6, \"TailLength\" -> 0.27}\nChartElementData[\"TimelineFilling\", \"StandardName\"] = \"TimelineFilling\"\nChartElementData[\"CenterFilledUpTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Polygon[{{0.3, 0.25}, {0.7, 0.25}, {0.5, 0.6}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"Anchor\", \"StandardName\"] = \"Anchor\"\nChartElementData[\"FilledCircle\", \"Options\"] = {}\nChartElementData[\"DiscreteRectangle\", \"StandardName\"] = \"DiscreteRectangle\"\nChartElementData[\"GlassRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"MarkerBubble3D\", \"ParameterNames\"] = {}\nChartElementData[\"GrowingRectangle\", \"StandardName\"] = \"DynamicRectangle\"\nChartElementData[\"CheckerCircle\", \"ParameterNames\"] = {}\nChartElementData[\"ShearingRectangle\", \"Name\"] = \"shearing dynamic rectangle\"\nChartElementData[\"EmptySquare\", \"ParameterNames\"] = {}\nChartElementData[\"RotatingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledDiamond\", \"ParameterNames\"] = {}\nChartElementData[\"PointDensity\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`DistributionPointBar[##1] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PointDensity\"]]]]}]]\nChartElementData[\"TextureSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`TextureRadius\nChartElementData[\"Arrow3D\", \"StandardName\"] = \"Arrow3D\"\nChartElementData[\"ThinArrowNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"SquareWaveCube\", \"StandardName\"] = \"SquareWaveCube\"\nChartElementData[\"SquareWaveBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CenterMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"CenterMarkers\"]\nChartElementData[\"CompassNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"SimpleMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"SimpleMarkers\"]\nChartElementData[\"PolarMarker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicPolarMarker\nChartElementData[\"SpeedometerNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"ErrorBubble3D\", \"Name\"] = \"errorbubble3D\"\nChartElementData[\"ErrorBubble3D\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"FloatingRectangle\", \"ParameterNames\"] = {\"Low\", \"High\"}\nChartElementData[\"SpeedometerNeedle\", \"StandardName\"] = \"SpeedometerNeedle\"\nChartElementData[\"LineRectangle\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LineRectangleDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"LineRectangle\"]]]]}]]\nChartElementData[\"HistogramDensity\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`HistogramBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"VintageClockNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PointStem3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Point\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SmoothDensity\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"HistogramDensity\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"EmptyMarkers\", \"StandardName\"] = \"EmptyMarkers\"\nChartElementData[\"Plane3D\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PlaneDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Plane3D\"]]]]}]]\nChartElementData[\"ReferenceTriangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ReferenceArrowBar[##1, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ReferenceTriangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"HalfFilledUpTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledDiamond\"] = {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"FourStylesCandlestick\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FourStylesCandlestickBar\nChartElementData[\"LineRectangle\", \"Name\"] = \"line - rectangle\"\nChartElementData[\"OscillatingBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RotatingGrowingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RotatingGrowingRectangle[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"RotatingGrowingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"SimpleContrastMarkers\", \"Name\"] = \"simple contrast markers\"\nChartElementData[\"ContrastMarkers\", \"StandardName\"] = \"ContrastMarkers\"\nChartElementData[\"CheckerDiamond\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CheckerDiamond\"] = {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0}, {0.75, 0.25}, {0.5, 0.5}, {0.25, 0.25}}]}, {Polygon[{{0.5, 0.5}, {0.75, 0.75}, {0.5, 1}, {0.25, 0.75}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"Plane3D\", \"Options\"] = {}\nChartElementData[\"TriangleWaveSector\", \"Name\"] = \"triangle wave sector\"\nChartElementData[\"DensityQuantile\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`q = 4}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`DensityQuantileBar[##1, \"Width\" -> System`BarFunctionDump`w] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"DensityQuantile\", \"Quantile\" -> System`BarFunctionDump`q]]]]}]]\nChartElementData[\"CheckerDiamond\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"LiquidMarker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`GlassBubble[#1, {}] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"SquareWaveRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CheckerSquare\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"EmptyUpTriangle\", \"Name\"] = \"empty up-triangle\"\nChartElementData[\"HistogramDensity\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"OscillatingBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`OscillatingBubble[#1, {}, \"AngularFrequency\" -> 10, \"RadialAmplitude\" -> 0.1, \"Color\" -> Blue] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"CenterFilledDiamond\", \"ParameterNames\"] = {}\nChartElementData[\"SquareWaveCube\", \"Options\"] = {\"AngularFrequency\" -> 8, \"RadialAmplitude\" -> 0.15}\nChartElementData[\"DoubleEndedLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassBoxWhisker\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"IQRCoefficient\" -> 1.5}\nChartElementData[\"GlassRectangle\", \"StandardName\"] = \"GlassRectangle\"\nChartElementData[\"PlaneCube3D\", \"Name\"] = \"3 - D plane - cube\"\nChartElementData[\"FadingCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`EdgelessGradientCube\nChartElementData[\"SectorChart\"] = {\"BezelSector\", \"GlassSector\", \"GradientSector\", \"NoiseSector\", \"OscillatingSector\", \"PlateauSector\", \"Sector\", \"SquareWaveSector\", \"TriangleWaveSector\"}\nChartElementData[\"TriangleWaveBubble\", \"StandardName\"] = \"TriangleWaveBubble\"\nChartElementData[\"PlateauSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TorusSector3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BSplineTorusSector3D\nChartElementData[\"GradientRectangle\", \"Options\"] = {\"ColorScheme\" -> {RGBColor[0.674205, 0.423758, 0.242374], RGBColor[0.853407, 0.503288, 0.26041], RGBColor[0.8697087272727273, 0.582690909090909, 0.2751812727272727], RGBColor[0.8852926363636364, 0.6564491818181818, 0.28915563636363634], RGBColor[0.8999194545454545, 0.7226812727272727, 0.3020674545454546], RGBColor[0.918547, 0.79826, 0.409216], RGBColor[0.8616270909090908, 0.7735107272727273, 0.4171470909090909], RGBColor[0.77615, 0.762081, 0.645243], RGBColor[0.762341, 0.748974, 0.784665], RGBColor[0.698177, 0.714595, 0.841627], RGBColor[0.7372037272727272, 0.7590425454545454, 0.9071053636363636], RGBColor[0.645624, 0.660807, 0.778286]}, \"GradientOrigin\" -> Automatic}\nChartElementData[\"BezelFlatNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"HalfFilledDownTriangle\", \"StandardName\"] = \"HalfFilledDownTriangle\"\nChartElementData[\"PointLine\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PointLineDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PointLine\"]]]]}]]\nChartElementData[\"ReferenceTriangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ReferenceArrowBar, System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"BezelBevelNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ErrorBubble3D\", \"Options\"] = {\"Shape\" -> \"Sphere\", \"ErrorStyle\" -> \"T\", \"ErrorColor\" -> \"Red\", \"Filled\" -> True, \"TaperRatio\" -> 0.4}\nChartElementData[\"ErrorBar\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientScaleCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`gradient = {Green, Yellow, Orange, Red}}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorGradientScaleBar[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`gradient] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientScaleCube\", \"ColorScheme\" -> System`BarFunctionDump`gradient]]]]}]]\nChartElementData[\"BezelSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[] = ChartElementData[\"Collections\"]\nChartElementData[\"TimelineRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OpenEndedRectangle\", \"Name\"] = \"open - ended rectangle\"\nChartElementData[\"CheckerDiamond\", \"Options\"] = {}\nChartElementData[\"SimpleLine\", \"Name\"] = \"simple line\"\nChartElementData[\"CheckerCircle\", \"Name\"] = \"checker circle\"\nChartElementData[\"EmptySquare\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Rectangle[{0, 0}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"HalfFilledSquare\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {1, 0}, {1, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"PulseShrinkingRectangle\", \"Name\"] = \"pulse shrinking dynamic rectangle\"\nChartElementData[\"ErrorCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FloatingBar3D\nChartElementData[\"AreaChart\"] = {\"CenterMarkers\", \"ContrastMarkers\", \"EmptyMarkers\", \"FilledMarkers\", \"HalfFilledMarkers\", \"SimpleContrastMarkers\", \"SimpleMarkers\"}\nChartElementData[\"ClickFillingRectangle\", \"Image\"] = Graphics[{EdgeForm[RGBColor[0.33333333333333337, 0.33333333333333337, 0.33333333333333337]], FaceForm[RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458]], {System`BarFunctionDump`ClickFillingBar[{{0., 1.}, {0., 2.}}, {}], System`BarFunctionDump`ClickFillingBar[{{1.2, 2.2}, {0., 4.5}}, {}], System`BarFunctionDump`ClickFillingBar[{{2.4, 3.4}, {0., 3.}}, {}], System`BarFunctionDump`ClickFillingBar[{{3.6, 4.6}, {0., 3.5}}, {}], System`BarFunctionDump`ClickFillingBar[{{4.8, 5.8}, {0., 6.}}, {}], System`BarFunctionDump`ClickFillingBar[{{6., 7.}, {0., 7.}}, {}], System`BarFunctionDump`ClickFillingBar[{{7.2, 8.2}, {0., 5.}}, {}], System`BarFunctionDump`ClickFillingBar[{{8.4, 9.4}, {0., 8.}}, {}]}}, {AspectRatio -> 1\/2, Axes -> True, Ticks -> False, PlotRange -> {{0, All}, {0, All}}}]\nChartElementData[\"PointStem\", \"StandardName\"] = \"PointStem\"\nChartElementData[\"CheckerSquare\", \"StandardName\"] = \"CheckerSquare\"\nChartElementData[\"HalfFilledCircle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"MarkerBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"MarkerBubble\", \"Name\"] = \"marker bubble\"\nChartElementData[\"TriangleWaveBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientScaleTrapezoid\", \"Name\"] = \"gradient scale trapezoid\"\nChartElementData[\"EdgeFadingRectangle\", \"Name\"] = \"edge fading rectangle\"\nChartElementData[\"RenkoLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SpeedometerRaisedNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"BulletGauge\", \"Themes\"] = {}\nChartElementData[\"GradientScaleBoxWhisker\", \"Options\"] = {\"IQRCoefficient\" -> 1.5, \"ColorScheme\" -> {RGBColor[0.643977, 0.700633, 0.927596], RGBColor[0.877134, 0.855222, 0.986419], RGBColor[0.96968, 0.827115, 0.369665], RGBColor[0.922377, 0.302419, 0.027451]}}\nChartElementData[\"FlatProfileNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.4, \"HubOuterRadius\" -> 0.1, \"HubColor\" -> GrayLevel[0.5], \"NeedleWidth\" -> 1, \"TailLength\" -> 0}\nChartElementData[\"LineBreakChart\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"PlaneFadingCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PlaneEdgelessGradientCube\nChartElementData[\"CheckerCircle\", \"Options\"] = {}\nChartElementData[\"BarMarker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicBarMarker\nChartElementData[\"ArrowRectangle\", \"Options\"] = {\"TaperRatio\" -> 0, \"ArrowheadAngle\" -> 60, \"ArrowWidth\" -> 0.6}\nChartElementData[\"BoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BoxWhiskerBar\nChartElementData[\"GradientScaleBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GradientScaleBoxWhiskerBar\nChartElementData[\"Cylinder\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`CylinderBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Cylinder\"]]]]}]]\nChartElementData[\"DiscreteRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DiscreteBasicBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Rectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"LineRectangle\", \"Options\"] = {}\nChartElementData[\"GradientBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RotatingRectangle\", \"Name\"] = \"rotating dynamic rectangle\"\nChartElementData[\"FadingCandlestick\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingCandlestickBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PointStem\", \"Name\"] = \"point and stem\"\nChartElementData[\"RotatingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ShrinkingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"Line\", \"Options\"] = {}\nChartElementData[\"GradientScaleBoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GradientScaleBoxWhiskerBar[##1, \"GradientOrigin\" -> System`BarFunctionDump`dir] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientScaleBoxWhisker\"]]]]}]]\nChartElementData[\"TwoToneNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OHLC\", \"Name\"] = \"OHLC\"\nChartElementData[\"HalfFilledMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"HalfFilledMarkers\"]\nChartElementData[\"HalfFilledDownTriangle\", \"Name\"] = \"half-filled down-triangle\"\nChartElementData[\"ClockNeedle\", \"StandardName\"] = \"ClockNeedle\"\nChartElementData[\"GlassQuantile\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`origin = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GlassQuantileBar[##1, \"Width\" -> System`BarFunctionDump`w] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Decile\", \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"EmptyDiamond\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RightEndedLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`OpenEndedLineDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ThinArrowNeedle\", \"Name\"] = \"thin arrow needle\"\nChartElementData[\"OscillatingSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassSector\", \"StandardName\"] = \"GlassSector\"\nChartElementData[\"DensityQuantile\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"Marker\", \"StandardName\"] = \"Marker\"\nChartElementData[\"EmptyDownTriangle\", \"Name\"] = \"empty down-triangle\"\nChartElementData[\"FilledUpTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"TimelineArc\", \"Name\"] = \"time line arc\"\nChartElementData[\"FlatArrowNeedle\", \"Name\"] = \"flat arrow needle\"\nChartElementData[\"GradientScaleRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorGradientScaleBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FadingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ProfileSector3D\", \"Image\"] = Graphics3D[{EdgeForm[], Transpose[{System`BarFunctionDump`$sector3Dstyles, (System`BarFunctionDump`BSplineProfileSector3D[#1, {}] & ) \/@ System`BarFunctionDump`$simple3Dsectors}]}, System`BarFunctionDump`$image3dsectoroptions]\nChartElementData[\"ArrowCandlestick\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"EmptyDiamond\", \"Name\"] = \"empty diamond\"\nChartElementData[\"ReferenceLine\", \"Name\"] = \"floating rectangle\"\nChartElementData[\"HalfFilledSquare\", \"ParameterNames\"] = {}\nChartElementData[\"FadingOHLC\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"SquareWaveBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SquareWaveBubble\nChartElementData[\"SmoothDensity\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"Shape\" -> \"DoubleSided\", \"ColorScheme\" -> None, \"Threshold\" -> Automatic}\nChartElementData[\"ClickFillingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ClickFillingBar\nChartElementData[\"OpenEndedLine\", \"ParameterNames\"] = {\"PointSize\" -> 5, \"HoleSize\" -> 3}\nChartElementData[\"SphereBubble\", \"Name\"] = \"sphere bubble\"\nChartElementData[\"BezelFlatNeedle\", \"StandardName\"] = \"BezelFlatNeedle\"\nChartElementData[\"LeftEndedLine\", \"Name\"] = \"left - ended line\"\nChartElementData[\"SphereBubble\", \"StandardName\"] = \"SphereBubble\"\nChartElementData[\"Cone\", \"Options\"] = {}\nChartElementData[\"Density\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"HistogramDensity\", \"Options\"] = {\"Bins\" -> 10}\nChartElementData[\"DoubleProfileCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BSplineProfileBar3D\nChartElementData[\"BubbleChart3D\"] = {\"Bubble3D\", \"Cone\", \"Cube\", \"Cylinder\", \"FadingCube\", \"GradientScaleCube\", \"MarkerBubble3D\", \"PolyhedronBubble3D\", \"ProfileCube\", \"SegmentScaleCube\", \"SquareWaveCube\", \"TriangleWaveCube\"}\nChartElementData[\"OpenBoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0, System`BarFunctionDump`f = True, System`BarFunctionDump`m = Automatic, System`BarFunctionDump`maker = \"ConfidenceInterval\"}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`OpenBoxWhiskerBar[##1, \"Filled\" -> System`BarFunctionDump`f, \"MedianLength\" -> System`BarFunctionDump`m, \"MeanMarker\" -> System`BarFunctionDump`mean] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OpenBoxWhisker\", \"Filled\" -> System`BarFunctionDump`f, \"MedianLength\" -> System`BarFunctionDump`m, \"Marker\" -> System`BarFunctionDump`maker]]]]}]]\nChartElementData[\"ErrorRange\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"Candlestick\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"EmptyCircle\", \"Name\"] = \"empty circle\"\nChartElementData[\"TimelineBubbleLabel\", \"StandardName\"] = \"TimelineBubbleLabel\"\nChartElementData[\"PointDensity\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"TriangularWaveRectangle\", \"Options\"] = {\"Profile\" -> 1, \"RadialAmplitude\" -> 0.1, \"AngularFrequency\" -> 20}\nChartElementData[\"TorusSector3D\", \"CoordinateSystem\"] = \"Cylindrical\"\nChartElementData[\"TriangleWaveCube\", \"StandardName\"] = \"TriangleWaveCube\"\nChartElementData[\"GradientScaleCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ColorGradientScaleBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"DetailArrowNeedle\", \"Name\"] = \"detail arrow needle\"\nChartElementData[\"SquareWaveBubble\", \"StandardName\"] = \"SquareWaveBubble\"\nChartElementData[\"GlassCandlestick\", \"Options\"] = {}\nChartElementData[\"TorusSector3D\", \"Options\"] = {}\nChartElementData[\"BubbleChart\"] = {\"Bubble\", \"FadingBubble\", \"GradientBubble\", \"MarkerBubble\", \"NoiseBubble\", \"OscillatingBubble\", \"PolyhedronBubble\", \"SphereBubble\", \"SquareWaveBubble\", \"TriangleWaveBubble\"}\nChartElementData[\"SplineBar\", \"Name\"] = \"spline bar\"\nChartElementData[\"FilledSquare\"] = {Graphics[{Rectangle[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"FlatArrowNeedle\", \"StandardName\"] = \"FlatArrowNeedle\"\nChartElementData[\"DoubleProfileCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro1 = 2, System`BarFunctionDump`pro2 = 2, System`BarFunctionDump`size = 1, System`BarFunctionDump`rounded = False}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`BSplineProfileBar3D[#1, {}, \"HorizontalProfile\" -> System`BarFunctionDump`pro1, \"VerticalProfile\" -> System`BarFunctionDump`pro2, \"TaperRatio\" -> System`BarFunctionDump`size] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"Verticalprofile \"], Slider[Dynamic[System`BarFunctionDump`pro1], {1, 10}, ImageSize -> Small]}], Row[{Text[\"Horizontalprofile \"], Slider[Dynamic[System`BarFunctionDump`pro2], {1, 10}, ImageSize -> Small]}], Row[{Text[\"size \"], Slider[Dynamic[System`BarFunctionDump`size], {0.01, 2}, ImageSize -> Small, Enabled -> If[Dynamic[System`BarFunctionDump`rounded], False, True]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ProfileCube\", \"HorizontalProfile\" -> System`BarFunctionDump`pro1, \"VerticalProfile\" -> System`BarFunctionDump`pro2, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[\"TimelineElement\", \"ParameterNames\"] = {}\nChartElementData[\"EmptyDiamond\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FadingCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`EdgelessGradientCube[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"ObliqueRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"TorusSector3D\", \"Image\"] = Graphics3D[{EdgeForm[], Transpose[{System`BarFunctionDump`$sector3Dstyles, (System`BarFunctionDump`BSplineTorusSector3D[#1, {}] & ) \/@ System`BarFunctionDump`$simple3Dsectors}]}, System`BarFunctionDump`$image3dsectoroptions]\nChartElementData[\"ErrorBubble3D\", \"ParameterNames\"] = {\"Value\", \"Error\"}\nChartElementData[\"DiscreteRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"SpeedometerRaisedNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.85, \"HubOuterRadius\" -> 0.25, \"HubColor\" -> GrayLevel[0.25], \"NeedleWidth\" -> 0.35, \"TailLength\" -> 0.3333}\nChartElementData[\"OHLC\", \"Options\"] = {}\nChartElementData[\"GlassReflectionSector\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`col = Hue[0.65, 1, 1]}, Column[{Dynamic[Graphics[{System`BarFunctionDump`GlassReflectionSector[{{0, 2*Pi}, {0, 1}}, \"Color\" -> System`BarFunctionDump`col]}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"Color\"], ColorSetter[Dynamic[System`BarFunctionDump`col]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GlassReflectionSector\", \"Color\" -> System`BarFunctionDump`col, \"ConnectEndPoints\" -> False]]]]}]]\nChartElementData[\"EmptyCircle\"] = {Graphics[{{GrayLevel[1], Disk[{0, 0}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"TorusSector3D\", \"Name\"] = \"toroidal sector 3D\"\nChartElementData[\"ShearingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GlassGradientBar[#1, {}, \"GradientOrigin\" -> Left] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ShadingQuantile\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"ShrinkingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"PlateauBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PlateauBoxWhiskerBar\nChartElementData[\"GradientRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GradientBar\nChartElementData[\"PlateauCandlestick\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"FadingCandlestick\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"Range\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`RangeBar[##1, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & , System`BarFunctionDump`$threeargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Range\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"BowtieDiamond\", \"Options\"] = {}\nChartElementData[\"ListLinePlot\"] = {\"CenterMarkers\", \"ContrastMarkers\", \"EmptyMarkers\", \"FilledMarkers\", \"HalfFilledMarkers\", \"SimpleContrastMarkers\", \"SimpleMarkers\"}\nChartElementData[\"LineRectangle\", \"StandardName\"] = \"LineRectangle\"\nChartElementData[\"CompassFlatNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"Cube\", \"Name\"] = \"cube\"\nChartElementData[\"TwoToneNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.62, \"HubOuterRadius\" -> 0.21, \"HubColor\" -> GrayLevel[0.3], \"NeedleWidth\" -> 0.5}\nChartElementData[\"PairedBarChart\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"Range\", \"InternalChartElementFunction\"] = System`BarFunctionDump`RangeBar\nChartElementData[\"SegmentScaleBoxWhisker\", \"StandardName\"] = \"SegmentScaleBoxWhisker\"\nChartElementData[\"TwoToneNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawTwoToneNeedle\nChartElementData[\"Cube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Quantile\", \"Name\"] = \"quantile\"\nChartElementData[\"GradientTrapezoid\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`g = \"Rainbow\", System`BarFunctionDump`origin = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GradientTrap[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientOrigin\" -> System`BarFunctionDump`origin] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"gradient\"], PopupMenu[Dynamic[System`BarFunctionDump`g], ColorData[\"Gradients\"]]}], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`origin], {Bottom, Left, Top, Right}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientRectangle\", \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"ReferenceTriangle\", \"StandardName\"] = \"ReferenceTriangle\"\nChartElementData[\"DottedRectangle\", \"StandardName\"] = \"DottedRectangle\"\nChartElementData[\"GlassBoxWhisker\", \"StandardName\"] = \"GlassBoxWhisker\"\nChartElementData[\"RightEndedLine\", \"Name\"] = \"right - ended line\"\nChartElementData[\"Arrow3D\", \"Options\"] = {\"Arrowheads\" -> Small}\nChartElementData[\"OpenNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"TimelineFilling\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineFilling[#1, {}, \"ArrowSize\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TimelineElement\", \"ArrowSize\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"GlassQuantile\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"Quantile\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`QuantileBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"OHLC\", \"InternalChartElementFunction\"] = System`BarFunctionDump`OpenHighLowCloseBar\nChartElementData[\"BarChart\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"Stem3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SquareWaveCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`SquareWaveBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"GradientScaleBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GradientScaleBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"IndustrialNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"Cone\", \"ParameterNames\"] = {}\nChartElementData[\"HalfFilledUpTriangle\", \"StandardName\"] = \"HalfFilledUpTriangle\"\nChartElementData[\"VintageClockNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.5, \"HubOuterRadius\" -> 0.11, \"HubColor\" -> GrayLevel[0.2], \"NeedleLength\" -> 1, \"NeedleWidth\" -> 0.7, \"FlareLength\" -> 0.35, \"FlareWidth\" -> 0.12}\nChartElementData[\"ClassicMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EmptyUpTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"LineChart\"] = {\"CenterMarkers\", \"ContrastMarkers\", \"EmptyMarkers\", \"FilledMarkers\", \"HalfFilledMarkers\", \"SimpleContrastMarkers\", \"SimpleMarkers\"}\nChartElementData[\"FlatProfileNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"OpenNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawOpenNeedle\nChartElementData[\"DiscreteRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledCircle\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 1, {Pi\/2, -Pi\/2}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"GradientScaleCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ColorGradientScaleBar3D\nChartElementData[\"IndustrialNeedle\", \"Name\"] = \"industrial needle\"\nChartElementData[\"GrowingSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GrowingSector\nChartElementData[\"SegmentScaleBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"Cylinder\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PieChart3D\"] = {\"CylindricalSector3D\", \"ProfileSector3D\", \"TorusSector3D\"}\nChartElementData[\"Cone\", \"Name\"] = \"cone\"\nChartElementData[\"FilledMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"DoubleEndedRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Range\", \"ParameterRange\"] = {3, 3}\nChartElementData[\"EmptyDownTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SimpleLine\", \"StandardName\"] = \"SimpleLine\"\nChartElementData[\"NoiseBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`NoiseBubble[#1, {}, \"AngularFrequency\" -> 40, \"RadialAmplitude\" -> 0.1, \"Color\" -> Blue] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"CylindricalSector3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`CylindricalSector3D\nChartElementData[\"IndustrialNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"ShearingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ShearingRectangle\nChartElementData[\"SpeedometerNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"ProfileCube\", \"Name\"] = \" profile bar\"\nChartElementData[\"OscillatingBubble\", \"ParameterNames\"] = {}\nChartElementData[\"GlassQuantile\", \"StandardName\"] = \"GlassQuantileBar\"\nChartElementData[\"Rectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Bubble\", \"Options\"] = {\"Shape\" -> \"Circle\"}\nChartElementData[\"GlassSector\", \"ParameterNames\"] = {}\nChartElementData[\"ArrowCandlestick\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"ClockNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawClockNeedle\nChartElementData[\"ShearingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"EmptyDiamond\", \"StandardName\"] = \"EmptyDiamond\"\nChartElementData[\"FilledCircle\", \"Name\"] = \"filled circle\"\nChartElementData[\"SplineBar\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`SplineBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"MarkerBubble3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"RotatingGrowingRectangle\", \"StandardName\"] = \"RotatingGrowingRectangle\"\nChartElementData[\"PointStem\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PointStemDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"RenkoChart\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"ShearingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ShearingRectangle[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"LeftEndedRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Stacked\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TimelineBubbleLabel\", \"Name\"] = \"time line bubble label\"\nChartElementData[\"TextureRectangle\", \"Options\"] = {}\nChartElementData[\"GlassSector\", \"Options\"] = {\"GradientDirection\" -> \"Radial\"}\nChartElementData[\"GradientScaleTrapezoid\", \"ParameterNames\"] = {}\nChartElementData[\"ClassicMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PolyhedronBubble\", \"ParameterNames\"] = {}\nChartElementData[\"CenterMarkers\", \"Options\"] = {}\nChartElementData[\"StripedRectangle\", \"ParameterRange\"] = {}\nChartElementData[\"GlassBubble\", \"Options\"] = {\"ColorScheme\" -> \"GrayTones\", ImageResolution -> 100}\nChartElementData[\"GrowingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Anchor\", \"Options\"] = {}\nChartElementData[\"PlateauBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`PlateauBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Stem\", \"Options\"] = {}\nChartElementData[\"PolyhedronBubble3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PolyhedronBubble3D\nChartElementData[\"PolyhedronBubble3D\", \"StandardName\"] = \"PolyhedronBubble3D\"\nChartElementData[\"ScaleBreakRectangle\", \"Image\"] = Graphics[{(System`BarFunctionDump`ScaleBreakRectangle[#1, {}, \"Frequency\" -> 3, \"Amplitude\" -> 0.5, \"BreakWidth\" -> 0.5] & ) \/@ System`BarFunctionDump`$simplerects2}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ObliqueRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ObliqueRectangle\nChartElementData[\"CenterFilledDownTriangle\", \"StandardName\"] = \"CenterFilledDownTriangle\"\nChartElementData[\"LeftEndedRectangle\", \"ParameterNames\"] = {\"PointSize\" -> 5, \"HoleSize\" -> 3}\nChartElementData[\"ThreeLineBreak\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientScaleTrapezoid\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`gradient = {Green, Yellow, Orange, Red}}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorGradientScaleTrap[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`gradient] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientScaleTrapezoid\", \"ColorScheme\" -> System`BarFunctionDump`gradient]]]]}]]\nChartElementData[\"SquareWaveBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`SquareWaveBubble[#1, {}, \"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.1] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"Candlestick\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`CandlestickBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"ProfileSector3D\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro = 2}, Column[{Dynamic[Graphics3D[{Transpose[{System`BarFunctionDump`$sector3Dstyles, (System`BarFunctionDump`BSplineProfileSector3D[#1, {}, \"Profile\" -> System`BarFunctionDump`pro] & ) \/@ System`BarFunctionDump`$simple3Dsectors}]}, System`BarFunctionDump`$image3dsectoroptions]], Row[{Text[\"profile \"], Slider[Dynamic[System`BarFunctionDump`pro], {1, 10}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ProfileSector3D\", \"Profile\" -> System`BarFunctionDump`pro]]]]}]]\nChartElementData[\"StopWatchNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"GlassSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"EmptySquare\", \"Name\"] = \"empty square\"\nChartElementData[\"TimelineIndex\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineIndex[#1, {}, \"ArrowSize\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TimelineIndex\"]]]]}]]\nChartElementData[\"ShinyHubNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"GlassBubble\", \"Name\"] = \"glass bubble\"\nChartElementData[\"OHLC\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"LiquidMarker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`LiquidMarker\nChartElementData[\"ErrorRange\", \"Options\"] = {\"RoundingRadius\" -> 0, \"ErrorWidth\" -> 0.5}\nChartElementData[\"RightEndedRectangle\", \"ParameterNames\"] = {\"PointSize\" -> 5, \"HoleSize\" -> 3}\nChartElementData[\"BowtieSquare\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EdgeFadingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SpinBubble3D\", \"Name\"] = \"spin bubble3D\"\nChartElementData[\"CylindricalSector3D\", \"CoordinateSystem\"] = \"Cylindrical\"\nChartElementData[\"FloatingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"PulseShrinkingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PulseShrinkingRectangle\nChartElementData[\"PointStem\", \"Options\"] = {}\nChartElementData[\"SimpleContrastMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Cube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Square\", System`BarFunctionDump`size = 1, System`BarFunctionDump`shading = \"Solid\", System`BarFunctionDump`color = RGBColor[0.5, 0.5, 1]}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`BasicBar3D[#1, {}, \"Shading\" -> System`BarFunctionDump`shading, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size, \"Color\" -> System`BarFunctionDump`color] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"shading\"], PopupMenu[Dynamic[System`BarFunctionDump`shading], {\"Solid\", \"Fading\"}]}], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Square\", \"Diamond\", \"Triangle\", \"Hexagon\", \"Octagon\"}]}], Row[{Text[\"TaperRatio\"], Slider[Dynamic[System`BarFunctionDump`size], {0, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Cube\", \"Shading\" -> System`BarFunctionDump`shading, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[\"BoxWhisker\", \"StandardName\"] = \"BoxWhisker\"\nChartElementData[\"BowtieDiamond\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ContrastMarkers\", \"Name\"] = \"contrast markers\"\nChartElementData[\"DiscretePlot\"] = {\"Arrow\", \"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"FadingCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"Sector\", \"StandardName\"] = \"Sector\"\nChartElementData[\"BasicWedgeNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SquareWaveSector\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.03}\nChartElementData[\"Plane3D\", \"ParameterNames\"] = {}\nChartElementData[\"GradientBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassTrapezoid\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveBubble\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.1}\nChartElementData[\"CenterFilledDownTriangle\", \"Name\"] = \"center-filled down-triangle\"\nChartElementData[\"SpeedometerNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawSpeedometerNeedle\nChartElementData[\"ClassicMarkers\", \"Options\"] = {}\nChartElementData[\"CylindricalSector3D\", \"ParameterNames\"] = {}\nChartElementData[\"FloatingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FloatingBar\nChartElementData[\"FadingTrapezoid\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"PolarMarker\", \"Options\"] = {}\nChartElementData[\"DensityHistogram\"] = {\"Bubble\", \"FadingBubble\", \"FadingRectangle\", \"GlassRectangle\", \"MarkerBubble\", \"NoiseRectangle\", \"OscillatingRectangle\", \"PolyhedronBubble\", \"Rectangle\", \"SphereBubble\", \"SquareWaveRectangle\", \"TriangularWaveRectangle\"}\nChartElementData[\"HLC\", \"Name\"] = \"HLC\"\nChartElementData[\"OpenNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BasicPoly\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`BasicTrap[#1, {}] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Rectangle\"]]]]}]]\nChartElementData[\"TwoToneNeedle\", \"Name\"] = \"two tone needle\"\nChartElementData[\"FadingQuantile\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FloatingCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Square\", System`BarFunctionDump`size = 1}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, Apply[System`BarFunctionDump`FloatingBar3D[##1, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size] & , System`BarFunctionDump`$twoargcubes, {1}]}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Square\", \"Diamond\", \"Triangle\", \"Hexagon\", \"Octagon\", \"Circle\"}]}], Row[{Text[\"TaperRatio\"], Slider[Dynamic[System`BarFunctionDump`size], {0, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FloatingCube\", \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[\"Rectangle\", \"StandardName\"] = \"Rectangle\"\nChartElementData[\"Candlestick\", \"Name\"] = \"candlestick\"\nChartElementData[\"SegmentScaleCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ArrowRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveSector\", \"StandardName\"] = \"TriangleWaveSector\"\nChartElementData[\"RenkoLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RenkoBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PlateauCandlestick\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`PlateauCandlestickBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"Candlestick\", \"Options\"] = {}\nChartElementData[\"FadingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`FadingGradientBar[#1, {}, \"GradientOrigin\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Vertical\", \"Horizontal\", \"DescendingVertical\", \"DescendingHorizontal\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FadingRectangle\", \"GradientOrigin\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"FloatingCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FloatingBar3D\nChartElementData[\"OscillatingSector\", \"ParameterNames\"] = {}\nChartElementData[\"PulseShrinkingRectangle\", \"StandardName\"] = \"PulseShrinkingRectangle\"\nChartElementData[\"Stacked\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`StackedBar, System`BarFunctionDump`$nargintrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FlatArrowNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawFlatArrowNeedle\nChartElementData[\"FloatingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FloatingBar, System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ScatteredBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"GradientSector\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`g = \"Rainbow\", System`BarFunctionDump`dir = \"Radial\"}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GradientSector[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientDirection\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"gradient\"], PopupMenu[Dynamic[System`BarFunctionDump`g], ColorData[\"Gradients\"]]}], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Radial\", \"Angular\", \"DescendingRadial\", \"DescendingAngular\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientSector\", \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientDirection\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"ShrinkingRectangle\", \"Name\"] = \"shrinking dynamic rectangle\"\nChartElementData[\"Anchor\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`AnchorBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CheckerDiamond\", \"ParameterNames\"] = {}\nChartElementData[\"RightEndedRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5, System`BarFunctionDump`small = 3}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RightEndedRectangleDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"RightEndedRectangle\", \"PointSize\" -> System`BarFunctionDump`big, \"HoleSize\" -> System`BarFunctionDump`small]]]]}]]\nChartElementData[\"SquareWaveSector\", \"StandardName\"] = \"SquareWaveSector\"\nChartElementData[\"ScaleBreakRectangle\", \"Name\"] = \"scale break rectangle\"\nChartElementData[\"OscillatingBubble\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.1}\nChartElementData[\"ArrowCandlestick\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ArrowCandlestickBar\nChartElementData[\"CandlestickChart\"] = {\"ArrowCandlestick\", \"Candlestick\", \"FadingCandlestick\", \"FadingOHLC\", \"GlassCandlestick\", \"HLC\", \"OHLC\"}\nChartElementData[\"FilledDiamond\"] = {Graphics[{Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"PulseShrinkingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"DottedRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DottedBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Line\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CompassNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OpenBoxWhisker\", \"Name\"] = \"open box and whisker\"\nChartElementData[\"TimelineBubbleLabel\", \"Options\"] = {}\nChartElementData[\"NoiseSector\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.03}\nChartElementData[\"Density\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SegmentScaleCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ColorSegmentScaleBar3D\nChartElementData[\"Point\", \"ParameterNames\"] = {}\nChartElementData[\"OscillatingRectangle\", \"Options\"] = {\"Profile\" -> 1, \"RadialAmplitude\" -> 0.1, \"AngularFrequency\" -> 20}\nChartElementData[\"ErrorRange\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CenterFilledCircle\", \"ParameterNames\"] = {}\nChartElementData[\"DoubleEndedRectangle\", \"Name\"] = \"double - ended rectangle\"\nChartElementData[\"HistogramDensity\", \"InternalChartElementFunction\"] = System`BarFunctionDump`HistogramBar\nChartElementData[\"ReferenceLine\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"SpeedometerNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TriangleWaveCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`freq = 5, System`BarFunctionDump`amp = 0.15}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`TriangleWaveBar3D[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`freq, \"RadialAmplitude\" -> System`BarFunctionDump`amp] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"frequency \"], Slider[Dynamic[System`BarFunctionDump`freq], {3, 10, 1}, ImageSize -> Small]}], Row[{Text[\"amplitude \"], Slider[Dynamic[System`BarFunctionDump`amp], {0.03, 0.3}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TriangleWaveCube\", \"AngularFrequency\" -> System`BarFunctionDump`freq, \"RadialAmplitude\" -> System`BarFunctionDump`amp]]]]}]]\nChartElementData[\"HLC\", \"StandardName\"] = \"HighLowClose\"\nChartElementData[\"ErrorCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, Apply[System`BarFunctionDump`ErrorCube, System`BarFunctionDump`$twoargcubes, {1}]}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"SquareWaveBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientScaleBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"GradientScaleCube\", \"ParameterNames\"] = {}\nChartElementData[\"ShadingQuantile\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`origin = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ShadingQuantileBar[##1] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Decile\", \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"SmoothDensity\", \"StandardName\"] = \"SmoothDensity\"\nChartElementData[\"TriangularWaveRectangle\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`triangularBSplineProfileBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FilledUpTriangle\"] = {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"BasicWedgeNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"IndustrialNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.6, \"HubOuterRadius\" -> 0.14, \"HubColor\" -> GrayLevel[0.5], \"NeedleWidth\" -> 0.45, \"TailLength\" -> 0.5}\nChartElementData[\"SquareWaveSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassBubble\", \"StandardName\"] = \"GlassBubble\"\nChartElementData[\"CenterFilledCircle\", \"Name\"] = \"center-filled circle\"\nChartElementData[\"CheckerCircle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BarMarker\", \"StandardName\"] = \"BarMarker\"\nChartElementData[\"ClockNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OscillatingBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`OscillatingBubble\nChartElementData[\"TextureRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PointPlane3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Rectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`BasicBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Bubble\", \"Image\"] = Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`BasicBubble[#1, {}] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"ShearingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"TimelineArc\", \"StandardName\"] = \"TimelineArc\"\nChartElementData[\"NoiseSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EmptyCircle\", \"ParameterNames\"] = {}\nChartElementData[\"NoiseRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`NoiseBSplineProfileBar\nChartElementData[\"FilledDownTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CenterFilledDownTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ProfileThicknessBar\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`BSplineProfileThicknessBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"HalfFilledSquare\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PolyhedronBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"StripedRectangle\", \"StandardName\"] = \"StripedRectangle\"\nChartElementData[\"EmptyUpTriangle\", \"Image\"] = Show[First[{Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"OscillatingSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"HalfFilledSquare\", \"Name\"] = \"half-filled square\"\nChartElementData[\"Cylinder\", \"InternalChartElementFunction\"] = System`BarFunctionDump`CylinderBar3D\nChartElementData[\"BoxWhisker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"BowtieSquare\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {1, 0}, {0.5, 0.5}}]}, {Polygon[{{0.5, 0.5}, {1, 1}, {0, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"Marker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BasicMarker\nChartElementData[\"ReferenceLine\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"FilledUpTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SimpleLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`SimpleLineBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"TimelineElement\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RenkoLine\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"FadingQuantile\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingQuantileBar\nChartElementData[\"ClickFillingRectangle\", \"Options\"] = {}\nChartElementData[\"PointDensity\", \"StandardName\"] = \"PointDensity\"\nChartElementData[\"FilledSquare\", \"Name\"] = \"filled square\"\nChartElementData[\"Cube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`BasicBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"FadingCandlestick\", \"Name\"] = \"fading candlestick\"\nChartElementData[\"MarkerBubble3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`MarkerBubble3D\nChartElementData[\"VintageClockNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"GlassReflectionSector\", \"ParameterNames\"] = {}\nChartElementData[\"Sector\", \"Options\"] = {}\nChartElementData[\"FadingCandlestick\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingCandlestickBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"FadingBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingBoxWhiskerBar\nChartElementData[\"Bubble3D\", \"Image\"] = Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`BasicBubble3D[#1, #2, {}] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions, Lighting -> \"Neutral\"]\nChartElementData[\"FilledCircle\", \"StandardName\"] = \"FilledCircle\"\nChartElementData[\"CenterFilledDownTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HistogramDensity\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`bin = 10 = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`HistogramBar[##1, \"Bins\" -> System`BarFunctionDump`bin] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"HistogramDensity\", \"Bins\" -> System`BarFunctionDump`bin]]]]}]]\nChartElementData[\"TriangularWaveRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Cone\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OpenNeedle\", \"Name\"] = \"open needle\"\nChartElementData[\"SmoothDensity\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"OHLC\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"TimelineElement\", \"Name\"] = \"time line element\"\nChartElementData[\"FilledSquare\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SpeedometerRaisedNeedle\", \"Name\"] = \"speedometer raised needle\"\nChartElementData[\"ReferenceLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"RotatingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`RotatingRectangle\nChartElementData[\"Arrow3D\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ArrowDiscrete3D[#1, {}, \"Arrowheads\" -> Charting`s] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Arrow3D\", \"Arrowheads\" -> Charting`s]]]]}]]\nChartElementData[\"ProfileThicknessBar\", \"Name\"] = \" profile thickness bar\"\nChartElementData[\"ClockNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"CompassFlatNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CenterFilledUpTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"CheckerCircle\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 1, {-Pi\/2, -Pi}]}, {Disk[{0, 0}, 1, {0, Pi\/2}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"TimelineArc\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TimelinePlot\"] = {\"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"Rectangle\", \"TimelineArc\"}\nChartElementData[\"OHLC\", \"StandardName\"] = \"OpenHighLowClose\"\nChartElementData[\"PlaneFadingCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Anchor\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"ErrorBar\", \"StandardName\"] = \"ErrorBar\"\nChartElementData[\"Cone\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ConeBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"Bubble3D\", \"Name\"] = \"bubble3D\"\nChartElementData[\"FilledDownTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassTrapezoid\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GlassGradientTrap[#1, {}, \"GradientOrigin\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {Bottom, Left, Top, Right}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GlassTrapezoid\", \"GradientOrigin\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"TextureRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EmptyDownTriangle\", \"StandardName\"] = \"EmptyDownTriangle\"\nChartElementData[\"LeftEndedRectangle\", \"StandardName\"] = \"LeftEndedRectangle\"\nChartElementData[\"FourStylesCandlestick\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FilledDiamond\", \"StandardName\"] = \"FilledDiamond\"\nChartElementData[\"Point\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CenterFilledUpTriangle\"] = {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Polygon[{{0.3, 0.25}, {0.7, 0.25}, {0.5, 0.6}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"ClockNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"ProfileSector3D\", \"CoordinateSystem\"] = \"Cylindrical\"\nChartElementData[\"TimelineRectangle\", \"Name\"] = \"time line rectangle\"\nChartElementData[\"ReferenceTriangle\", \"Name\"] = \"floating rectangle\"\nChartElementData[\"GrowingSector\", \"Options\"] = {}\nChartElementData[\"Range\", \"StandardName\"] = \"ErrorBar\"\nChartElementData[\"Cone\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"Marker\", \"Options\"] = {\"MarkerRotation\" -> 0}\nChartElementData[\"GradientBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GradientBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GlassTrapezoid\", \"StandardName\"] = \"GlassTrapezoid\"\nChartElementData[\"GrowingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"TextureRectangle\", \"StandardName\"] = \"TextureRectangle\"\nChartElementData[\"Zigzag\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"TimelineElement\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FilledDiamond\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ProfileSector3D\", \"ParameterNames\"] = {}\nChartElementData[\"SegmentScaleRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ColorSegmentScaleBar\nChartElementData[\"Cube\", \"Options\"] = {\"Shape\" -> \"Square\", \"Shading\" -> \"Solid\", \"TaperRatio\" -> 1}\nChartElementData[\"ErrorBar\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"CheckerCircle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SplineBar\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"HalfFilledDownTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"GradientTrapezoid\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OscillatingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`OscillatingBSplineProfileBar\nChartElementData[\"LineDensity\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"ProfileSector3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BSplineProfileSector3D\nChartElementData[\"Anchor\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"PointDensity\", \"Name\"] = \"point density\"\nChartElementData[\"GlassCandlestick\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GlassCandlestickBar, System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FilledCircle\", \"ParameterNames\"] = {}\nChartElementData[\"PlaneCube3D\", \"Options\"] = {}\nChartElementData[\"DiscretePlot3D\"] = {\"Arrow3D\", \"Cone\", \"Cube\", \"Cylinder\", \"DoubleProfileCube\", \"FadingCube\", \"GradientScaleCube\", \"PlaneFadingCube\", \"ProfileCube\", \"SegmentScaleCube\", \"SquareWaveCube\", \"TriangleWaveCube\"}\nChartElementData[\"ContrastMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"ReferenceTriangle\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"CompassFlatNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.6, \"HubOuterRadius\" -> 0.2, \"TailColor\" -> GrayLevel[0.7], \"HubColor\" -> GrayLevel[1], \"NeedleWidth\" -> 0.75}\nChartElementData[\"DoubleEndedLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`big = 5}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DoubleEndedLineDiscrete[#1, {}, \"PointSize\" -> System`BarFunctionDump`big] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"DoubleEndedLine\", \"PointSize\" -> System`BarFunctionDump`big]]]]}]]\nChartElementData[\"SegmentScaleBoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`SegmentScaleBoxWhiskerBar[##1, \"GradientOrigin\" -> System`BarFunctionDump`dir] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientScaleBoxWhisker\"]]]]}]]\nChartElementData[\"FadingRectangle\", \"StandardName\"] = \"FadingRectangle\"\nChartElementData[\"SimpleContrastMarkers\"] = {{Graphics[{Disk[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.08}, {Graphics[{{GrayLevel[1], Disk[{0, 0}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{Rectangle[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}}\nChartElementData[\"GradientSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"MarkerBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`MarkerBubble\nChartElementData[\"CenterFilledSquare\", \"ParameterNames\"] = {}\nChartElementData[\"PolarMarker\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"LiquidMarker\", \"Name\"] = \"liquid marker\"\nChartElementData[\"BasicWedgeNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawBasicWedgeNeedle\nChartElementData[\"PointDensity\", \"InternalChartElementFunction\"] = System`BarFunctionDump`DistributionPointBar\nChartElementData[\"Density\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingDistribution, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GradientScaleRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`gradient = {Green, Yellow, Orange, Red}}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorGradientScaleBar[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`gradient] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientScaleRectangle\", \"ColorScheme\" -> System`BarFunctionDump`gradient]]]]}]]\nChartElementData[\"HalfFilledDownTriangle\"] = {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Polygon[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"ErrorBubble3D\", \"Image\"] = Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`ErrorBubble3D[#1, #3, #2] & , {System`BarFunctionDump`$simple3Dbubbles, System`BarFunctionDump`$errordata, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions; Background -> GrayLevel[0.95], Lighting -> \"Neutral\"]\nChartElementData[\"SpinBubble3D\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SpinBubble3D\nChartElementData[\"HLC\", \"Options\"] = {}\nChartElementData[\"TriangularWaveRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"EmptyDownTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"PolyhedronBubble3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Density\", \"Name\"] = \"density\"\nChartElementData[\"OscillatingRectangle\", \"Name\"] = \"oscillating rectangle\"\nChartElementData[\"LineRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ShrinkingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PointStem3D\", \"Options\"] = {}\nChartElementData[\"HalfFilledMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"EmptyMarkers\", \"Options\"] = {}\nChartElementData[\"Arrow3D\", \"Name\"] = \"3 - D arrow\"\nChartElementData[\"EmptyCircle\", \"StandardName\"] = \"EmptyCircle\"\nChartElementData[\"Cube\", \"ParameterNames\"] = {}\nChartElementData[\"Rectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`BasicBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Rectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"ProfileThicknessBar\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"Quantile\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"Line\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`PointDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Point\"]]]]}]]\nChartElementData[\"SquareWaveSector\", \"ParameterNames\"] = {}\nChartElementData[\"LineRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`LineRectangleDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CenterFilledUpTriangle\", \"Name\"] = \"center-filled up-triangle\"\nChartElementData[\"GradientScaleBoxWhisker\", \"StandardName\"] = \"GradientScaleBoxWhisker\"\nChartElementData[\"SegmentScaleCube\", \"Name\"] = \"segment scale cube\"\nChartElementData[\"GradientScaleCube\", \"Name\"] = \"gradient scale cube\"\nChartElementData[\"SphereBubble\", \"Options\"] = {\"Specularity\" -> 30}\nChartElementData[\"DetailArrowNeedle\", \"Options\"] = {\"TailAngle\" -> 0.9, \"HubInnerRadius\" -> 0.25, \"HubOuterRadius\" -> 0.2, \"HubColor\" -> RGBColor[0.466667, 0.14, 0.14], \"NeedleWidth\" -> 0.25}\nChartElementData[\"SpeedometerRaisedNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawSpeedometerRaisedNeedle\nChartElementData[\"TimelineArc\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ClickFillingCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BowtieDiamond\"] = {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 1}, {0.5, 0.5}, {1, 0.5}}]}, {Polygon[{{0, 0.5}, {0.5, 0.5}, {0.5, 0}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"ShadingQuantile\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"Quantile\" -> {0, 10, 20, 30, 40, 60, 70, 80, 90, 100}}\nChartElementData[\"FilledCircle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OscillatingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PlateauBoxWhisker\", \"Name\"] = \"glass box and whisker\"\nChartElementData[\"PlateauBoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`PlateauBoxWhiskerBar[##1, \"GradientOrigin\" -> System`BarFunctionDump`dir] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"BoxWhisker\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"DiscreteRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0, \"ExtentSize\" -> 1\/2}\nChartElementData[\"ShrinkingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ShrinkingRectangle[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ShrinkingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"ScaleBreakRectangle\", \"Options\"] = {\"Frequency\" -> 3, \"Amplitude\" -> 0.5, \"BreakWidth\" -> 0.5}\nChartElementData[\"ErrorCube\", \"ParameterNames\"] = {\"Value\", \"Error\"}\nChartElementData[\"DetailArrowNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"GradientRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"StripedRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`StripedBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PulseShrinkingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Stacked\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`StackedBar[##1] & , System`BarFunctionDump`$nargintrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Stacked\"]]]]}]]\nChartElementData[\"NoiseBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SimpleMarkers\", \"StandardName\"] = \"SimpleMarkers\"\nChartElementData[\"TimelineFilling\", \"Options\"] = {}\nChartElementData[\"MarkerBubble3D\", \"Image\"] = Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`MarkerBubble3D[#1, #2, {}] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions; Background -> GrayLevel[0.95], Lighting -> \"Neutral\"]\nChartElementData[\"GradientBoxWhisker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GradientBoxWhiskerBar\nChartElementData[\"FilledMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ClickFillingCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ClickFillingBar3D\nChartElementData[\"ClickFillingCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"MarkerBubble\", \"StandardName\"] = \"MarkerBubble\"\nChartElementData[\"Stem\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`StemDiscrete[#1, {}, \"Arrowheads\" -> Charting`s] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Rectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"PointLine\", \"StandardName\"] = \"PointLine\"\nChartElementData[\"ArrowRectangle\", \"StandardName\"] = \"ArrowRectangle\"\nChartElementData[\"ArrowRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ArrowBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SimpleLine\"]]]]}]]\nChartElementData[\"Point3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassReflectionSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassReflectionSector\nChartElementData[\"FloatingCube\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"MarkerBubble3D\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Sphere\", System`BarFunctionDump`marker = \"Sphere\", System`BarFunctionDump`color = \"Yellow\"}, Column[{With[{System`BarFunctionDump`$bubblestyle = System`BarFunctionDump`$bubblestyle, System`BarFunctionDump`$simple3Dbubbles = System`BarFunctionDump`$simple3Dbubbles, System`BarFunctionDump`$image3Dbubbleoptions = System`BarFunctionDump`$image3Dbubbleoptions}, Dynamic[Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`MarkerBubble3D[#1, #2, {}, \"Shape\" -> System`BarFunctionDump`shape, \"Marker\" -> System`BarFunctionDump`marker, \"MarkerColor\" -> ToExpression[System`BarFunctionDump`color]] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions, PlotRange -> {{0, 4}, {0, 4}, {0, 4}}, Lighting -> \"Neutral\"]]], Row[{Text[\"shape \"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Sphere\", \"Cuboid\", \"Cylinder\"}]}], Row[{Text[\"marker \"], PopupMenu[Dynamic[System`BarFunctionDump`marker], {\"Cylinder\", \"Sphere\", \"Cuboid\", \"Line\"}]}], Row[{Text[\"markercolor \"], PopupMenu[Dynamic[System`BarFunctionDump`color], {\"Yellow\", \"Red\", \"Black\", \"Blue\", \"Green\", \"Gray\", \"Orange\", \"Purple\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"MarkerBubble3D\", \"Shape\" -> System`BarFunctionDump`shape, \"Marker\" -> System`BarFunctionDump`marker, \"MarkerColor\" -> ToExpression[System`BarFunctionDump`color]]]]]}]]\nChartElementData[\"ClockGauge\", \"Markers\"] = {\"ClockNeedle\", \"VintageClockNeedle\"}\nChartElementData[\"PlateauCandlestick\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DiscreteRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DiscreteBasicBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"RightEndedLine\", \"ParameterNames\"] = {\"PointSize\" -> 5, \"HoleSize\" -> 3}\nChartElementData[\"FadingTrapezoid\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`FadingGradientTrap[#1, {}, \"GradientOrigin\" -> System`BarFunctionDump`dir] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {\"Vertical\", \"Horizontal\", \"DescendingVertical\", \"DescendingHorizontal\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FadingTrapezoid\", \"GradientOrigin\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"GlassQuantile\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"DoubleEndedRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassTrapezoid\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BezelBevelNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawBezelBevelNeedle\nChartElementData[\"VintageClockNeedle\", \"Name\"] = \"vintage clock needle\"\nChartElementData[\"DoubleEndedLine\", \"ParameterNames\"] = {\"PointSize\" -> 5}\nChartElementData[\"SplineBar\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveCube\", \"Name\"] = \"trianglewave cube\"\nChartElementData[\"FadingCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`color = RGBColor[0.5, 0.5, 1]}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`EdgelessGradientCube[#1, {}, \"Color\" -> System`BarFunctionDump`color] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FadingCube\"]]]]}]]\nChartElementData[\"ShadingQuantile\", \"StandardName\"] = \"ShadingQuantile\"\nChartElementData[\"ErrorRange\", \"StandardName\"] = \"ErrorRange\"\nChartElementData[\"GlassCandlestick\", \"StandardName\"] = \"GlassCandlestick\"\nChartElementData[\"SegmentScaleRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`colorList = {Green, Yellow, Orange, Red}}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorSegmentScaleBar[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`colorList] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SegmentScaleRectangle\", \"ColorScheme\" -> System`BarFunctionDump`colorList]]]]}]]\nChartElementData[\"SplineBar\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0, System`BarFunctionDump`w = \"Fixed\", System`BarFunctionDump`f = False}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`SplineBar[##1, \"Width\" -> System`BarFunctionDump`w, \"Filled\" -> System`BarFunctionDump`f] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"BoxWhisker\", \"Width\" -> System`BarFunctionDump`w, \"Filled\" -> System`BarFunctionDump`f]]]]}]]\nChartElementData[\"ClickFillingCube\", \"Options\"] = {}\nChartElementData[\"SquareWaveRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ProfileCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ProfileBar3D\nChartElementData[\"Marker\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"DoubleEndedLine\", \"Options\"] = {}\nChartElementData[\"NoiseSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"ProfileCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SegmentScaleBoxWhisker\", \"Name\"] = \"segment scale box and whisker\"\nChartElementData[\"Line\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"LineRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TimelineIndex\", \"Options\"] = {\"Shape\" -> \"Point\"}\nChartElementData[\"SegmentScaleRectangle\", \"Options\"] = {\"Segments\" -> 5, \"ColorScheme\" -> 46}\nChartElementData[\"EmptyMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"EmptyMarkers\"]\nChartElementData[\"ErrorCube\", \"Name\"] = \"error cube\"\nChartElementData[\"RenkoLine\", \"Name\"] = \"renko line\"\nChartElementData[\"SpinBubble3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OpenNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"PointStem3D\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`PointStemDiscrete3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"CompassFlatNeedle\", \"StandardName\"] = \"CompassFlatNeedle\"\nChartElementData[\"NoiseRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro = 1}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`NoiseBSplineProfileBar[#1, {}, \"Profile\" -> System`BarFunctionDump`pro] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"profile \"], Slider[Dynamic[System`BarFunctionDump`pro], {1, 10}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OscillatingRectangle\", \"Profile\" -> System`BarFunctionDump`pro]]]]}]]\nChartElementData[\"ShearingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"Bubble\", \"StandardName\"] = \"Bubble\"\nChartElementData[\"CheckerSquare\", \"Options\"] = {}\nChartElementData[\"RenkoLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RenkoBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"RenkoLine\"]]]]}]]\nChartElementData[\"FadingCandlestick\", \"Options\"] = {}\nChartElementData[\"NoiseBubble\", \"Options\"] = {\"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.1}\nChartElementData[\"EdgeFadingRectangle\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"EdgeGradient\" -> False}\nChartElementData[\"GlassTrapezoid\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassGradientTrap\nChartElementData[\"Arrow\", \"Manipulate\"] = DynamicModule[{Charting`s = 0.1}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ArrowDiscrete[#1, {}, \"Arrowheads\" -> Charting`s] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"s\"], Slider[Dynamic[Charting`s], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Arrow\", \"Arrowheads\" -> Charting`s]]]]}]]\nChartElementData[\"TextureSector\", \"Options\"] = {\"Placement\" -> Automatic}\nChartElementData[\"BezelFlatNeedle\", \"Name\"] = \"bezel flat needle\"\nChartElementData[\"LeftEndedLine\", \"ParameterNames\"] = {\"PointSize\" -> 5, \"HoleSize\" -> 3}\nChartElementData[\"ErrorBar\", \"ParameterNames\"] = {\"Value\", \"Error\"}\nChartElementData[\"DoubleEndedLine\", \"StandardName\"] = \"DoubleEndedLine\"\nChartElementData[\"CenterMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"StripedRectangle\", \"ParameterNames\"] = {\"Spacing\" -> 1, \"SpacingStyle\" -> Opacity[0]}\nChartElementData[\"ContrastMarkers\", \"Image\"] = (Show[First[#1], ImageSize -> 30] & ) \/@ ChartElementData[\"ContrastMarkers\"]\nChartElementData[\"DensityQuantile\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"SpinBubble3D\", \"Options\"] = {\"Shape\" -> \"Sphere\", \"Marker\" -> \"Sphere\", \"MarkerColor\" -> \"Yellow\"}\nChartElementData[\"DoubleEndedRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DoubleEndedRectangleDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ErrorCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"ClickFillingRectangle\", \"StandardName\"] = \"ClickFillingRectangle\"\nChartElementData[\"FilledSquare\", \"Image\"] = Show[First[{Graphics[{Rectangle[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"OscillatingRectangle\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`OscillatingBSplineProfileBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"GlassSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`GlassSector\nChartElementData[\"CylinderMarker\", \"Name\"] = \"cylinder marker\"\nChartElementData[\"SegmentScaleRectangle\", \"StandardName\"] = \"SegmentScaleRectangle\"\nChartElementData[\"ClickFillingCube\", \"ParameterNames\"] = {}\nChartElementData[\"FloatingCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, Apply[System`BarFunctionDump`FloatingBar3D, System`BarFunctionDump`$twoargcubes, {1}]}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"Histogram3D\"] = {\"Cone\", \"Cube\", \"Cylinder\", \"DoubleProfileCube\", \"FadingCube\", \"GradientScaleCube\", \"ProfileCube\", \"SegmentScaleCube\", \"SquareWaveCube\", \"TriangleWaveCube\"}\nChartElementData[\"AngularGauge\", \"Themes\"] = {\"Ammeter\", \"AmmeterDark\", \"BatteryMeter\", \"BatteryMeterDark\", \"CircuitMeter\", \"CircuitMeter2\", \"CircuitMeter2Dark\", \"CircuitMeterDark\", \"Compass\", \"CompassBusiness\", \"CompassDark\", \"CompassDetailed\", \"CompassMarketing\", \"CompassMinimal\", \"CompassMonochrome\", \"CompassScientific\", \"CompassWeb\", \"Fuel\", \"FuelDark\", \"GameSpinner\", \"Industrial\", \"OilPressure\", \"OilPressureDark\", \"Speedometer\", \"SpeedometerDark\", \"SpeedometerFuel\", \"SpeedometerFuelDark\", \"StopWatch\", \"Tachometer\", \"TachometerDark\", \"Temperature\", \"TemperatureDark\", \"Vintage\", \"VintageGlass\", \"Voltmeter\", \"VoltmeterDark\"}\nChartElementData[\"TimelineIndex\", \"StandardName\"] = \"TimelineIndex\"\nChartElementData[\"PulseShrinkingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"BezelFlatNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"ReferenceLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ReferenceLineBar[##1, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ReferenceLine\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"RotatingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RotatingRectangle[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"RotatingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"EmptyMarkers\"] = {{Graphics[{{GrayLevel[1], Disk[{0, 0}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}}\nChartElementData[\"ArrowRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ArrowBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"DiscreteCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`DiscreteBasicBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"ShearingRectangle\", \"StandardName\"] = \"ShearingRectangle\"\nChartElementData[\"HalfFilledUpTriangle\", \"Options\"] = {}\nChartElementData[\"ClockNeedle\", \"Options\"] = {\"HubInnerRadius\" -> 0.4, \"HubOuterRadius\" -> 0.08, \"HubColor\" -> GrayLevel[1], \"NeedleWidth\" -> 1, \"TailLength\" -> 0, \"NeedleLength\" -> 1}\nChartElementData[\"CenterFilledDiamond\", \"Options\"] = {}\nChartElementData[\"DiscreteCube\", \"Name\"] = \"cube\"\nChartElementData[\"BezelBevelNeedle\", \"Options\"] = {\"BezelRotation\" -> 0, \"HubInnerRadius\" -> 0.33, \"HubOuterRadius\" -> 0.165, \"HubColor\" -> GrayLevel[0.3], \"NeedleWidth\" -> 0.66}\nChartElementData[\"LiquidMarker\", \"StandardName\"] = \"LiquidMarker\"\nChartElementData[\"FloatingCube\", \"ParameterNames\"] = {\"Low\", \"High\"}\nChartElementData[\"CenterFilledCircle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ErrorBar\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`errorBar[#1, Abs[#2 - Last[#1]]] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"BulletGauge\", \"Markers\"] = {\"BarMarker\", \"CylinderMarker\", \"Marker\"}\nChartElementData[\"ReferenceLine\", \"ParameterNames\"] = {\"Value\", \"Reference\"}\nChartElementData[\"PlaneCube3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FloatingRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SimpleLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ScaleBreakRectangle\", \"StandardName\"] = \"ScaleBreakRectangle\"\nChartElementData[\"NoiseRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TorusSector3D\", \"StandardName\"] = \"TorusSector3D\"\nChartElementData[\"ClickFillingRectangle\", \"Manipulate\"] = Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ClickFillingBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ClickFillingRectangle\"]]]]}]\nChartElementData[\"TriangleWaveSector\", \"ParameterNames\"] = {}\nChartElementData[\"SpinBubble3D\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"ShinyHubNeedle\", \"Name\"] = \"shiny hub needle\"\nChartElementData[\"PointPlane3D\", \"StandardName\"] = \"PointPlane3D\"\nChartElementData[\"MarkerBubble3D\", \"StandardName\"] = \"MarkerBubble3D\"\nChartElementData[\"ThreeLineBreak\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"Stem3D\", \"Name\"] = \"3 - D stem\"\nChartElementData[\"GradientScaleTrapezoid\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SpinBubble3D\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Sphere\", System`BarFunctionDump`marker = \"Sphere\", System`BarFunctionDump`color = \"Yellow\"}, Column[{With[{System`BarFunctionDump`$bubblestyle = System`BarFunctionDump`$bubblestyle, System`BarFunctionDump`$simple3Dbubbles = System`BarFunctionDump`$simple3Dbubbles, System`BarFunctionDump`$image3Dbubbleoptions = System`BarFunctionDump`$image3Dbubbleoptions}, Dynamic[Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`MarkerBubble3D[#1, #2, {}, \"Shape\" -> System`BarFunctionDump`shape, \"Marker\" -> System`BarFunctionDump`marker, \"MarkerColor\" -> System`BarFunctionDump`color] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions, PlotRange -> {{0, 4}, {0, 4}, {0, 4}}, Lighting -> \"Neutral\"]]], Row[{Text[\"shape \"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Sphere\", \"Cuboid\", \"Cylinder\"}]}], Row[{Text[\"marker \"], PopupMenu[Dynamic[System`BarFunctionDump`marker], {\"Cylinder\", \"Sphere\", \"Cuboid\", \"Line\"}]}], Row[{Text[\"markercolor \"], PopupMenu[Dynamic[System`BarFunctionDump`color], {\"Yellow\", \"Red\", \"Black\", \"Blue\", \"Green\", \"Gray\", \"Orange\", \"Purple\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"MarkerBubble3D\", \"Shape\" -> System`BarFunctionDump`shape, \"Marker\" -> System`BarFunctionDump`marker, \"MarkerColor\" -> System`BarFunctionDump`color]]]]}]]\nChartElementData[\"IndustrialNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawIndustrialNeedle\nChartElementData[\"Marker\", \"ParameterNames\"] = {}\nChartElementData[\"OpenEndedLine\", \"Name\"] = \"open - ended line\"\nChartElementData[\"HalfFilledDownTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TriangleWaveCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BevelNeedle\", \"StandardName\"] = \"BevelNeedle\"\nChartElementData[\"ScatteredBoxWhisker\", \"Name\"] = \"scattered box whisker\"\nChartElementData[\"NoiseSector\", \"StandardName\"] = \"NoiseSector\"\nChartElementData[\"TwoToneNeedle\", \"StandardName\"] = \"TwoToneNeedle\"\nChartElementData[\"TextureSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TextureRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"FourStylesCandlestick\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`CandlestickBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"GlassCandlestick\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GlassCandlestickBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"FadingCube\", \"ParameterNames\"] = {}\nChartElementData[\"TriangleWaveBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientScaleRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TimelineListLabel\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GrowingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GrowingBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GrowingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"GlassTrapezoid\", \"Name\"] = \"glass trapezoid\"\nChartElementData[\"RotatingGrowingRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ClassicMarkers\", \"StandardName\"] = \"ClassicMarkers\"\nChartElementData[\"Point3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ReferenceLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ReferenceLineBar, System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Anchor\", \"InternalChartElementFunction\"] = System`BarFunctionDump`AnchorBar\nChartElementData[\"TriangleWaveBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`angularfrq = 20, System`BarFunctionDump`radialamp = 0.1}, Column[{Dynamic[Graphics[{(System`BarFunctionDump`TriangleWaveBubble[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"AngularFrequency\"], Slider[Dynamic[System`BarFunctionDump`angularfrq], {1, 40}, ImageSize -> Small]}], Row[{Text[\"RadialAmplitude\"], Slider[Dynamic[System`BarFunctionDump`radialamp], {0, 0.2}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TriangleWaveBubble\", \"AngularFrequency\" -> System`BarFunctionDump`angularfrq, \"RadialAmplitude\" -> System`BarFunctionDump`radialamp]]]]}]]\nChartElementData[\"SimpleMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DiscreteCube\", \"StandardName\"] = \"Cube\"\nChartElementData[\"VintageClockNeedle\", \"StandardName\"] = \"VintageClockNeedle\"\nChartElementData[\"ClickFillingCube\", \"StandardName\"] = \"ClickFillingCube\"\nChartElementData[\"Arrow\", \"ParameterNames\"] = {}\nChartElementData[\"GlassSector\", \"Name\"] = \"glass sector\"\nChartElementData[\"GradientScaleRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ColorGradientScaleBar\nChartElementData[\"PlaneFadingCube\", \"ParameterNames\"] = {}\nChartElementData[\"PieChart\"] = {\"BezelSector\", \"GlassSector\", \"GradientSector\", \"NoiseSector\", \"OscillatingSector\", \"PlateauSector\", \"Sector\", \"SquareWaveSector\", \"TriangleWaveSector\"}\nChartElementData[\"Arrow\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Point3D\", \"ParameterNames\"] = {}\nChartElementData[\"BezelBevelNeedle\", \"StandardName\"] = \"BezelBevelNeedle\"\nChartElementData[\"NoiseSector\", \"ParameterNames\"] = {}\nChartElementData[\"MarkerBubble\", \"Image\"] = Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`MarkerBubble[#1, {}] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"OpenEndedRectangle\", \"ParameterNames\"] = {\"PointSize\" -> 5, \"HoleSize\" -> 3}\nChartElementData[\"GradientScaleCube\", \"StandardName\"] = \"GradientScaleCube\"\nChartElementData[\"Plane3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BarMarker\", \"ParameterNames\"] = {}\nChartElementData[\"Bubble3D\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Sphere\"}, Column[{Dynamic[Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`BasicBubble3D[#1, #2, {}, \"Shape\" -> System`BarFunctionDump`shape] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions, PlotRange -> {{0, 4}, {0, 4}, {0, 4}}, Lighting -> \"Neutral\"]], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Sphere\", \"Cuboid\", \"Cylinder\", \"Spikey\"}]}], Button[\"Insert \", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Bubble3D\", \"Shape\" -> System`BarFunctionDump`shape]]]]}]]\nChartElementData[\"TimelineListLabel\", \"Name\"] = \"time line list label\"\nChartElementData[\"ErrorRange\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ErrorRange[#1, #2] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"OpenBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"Sector\", \"Name\"] = \"sector\"\nChartElementData[\"Arrow\", \"Options\"] = {\"Arrowheads\" -> Small}\nChartElementData[\"FilledCircle\"] = {Graphics[{Disk[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"LiquidMarker\", \"ParameterNames\"] = {}\nChartElementData[\"DoubleEndedLine\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientScaleBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"RightEndedLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FadingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`FadingGradientBar\nChartElementData[\"Bubble3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"CylindricalSector3D\", \"Options\"] = {}\nChartElementData[\"SpinBubble3D\", \"StandardName\"] = \"SpinBubble3D\"\nChartElementData[\"BezelSector\", \"StandardName\"] = \"BezelSector\"\nChartElementData[\"PointLine\", \"Name\"] = \"point and line\"\nChartElementData[\"CheckerCircle\", \"StandardName\"] = \"CheckerCircle\"\nChartElementData[\"GradientTrapezoid\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FilledMarkers\", \"Name\"] = \"filled markers\"\nChartElementData[\"CompassFlatNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"RotatingGrowingRectangle\", \"Name\"] = \"rotating growing dynamic rectangle\"\nChartElementData[\"FadingBubble\", \"Options\"] = {\"GradientDirection\" -> \"DescendingRadial\"}\nChartElementData[\"GrowingSector\", \"ParameterNames\"] = {}\nChartElementData[\"NoiseRectangle\", \"Options\"] = {\"Profile\" -> 1, \"RadialAmplitude\" -> 0.1, \"AngularFrequency\" -> 20}\nChartElementData[\"EmptyUpTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"CenterFilledDiamond\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlateauSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PlateauSector\nChartElementData[\"NoiseRectangle\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`NoiseBSplineProfileBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"EmptyCircle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Point3D\", \"Options\"] = {}\nChartElementData[\"MarkerBubble3D\", \"Name\"] = \"marker bubble3D\"\nChartElementData[\"GradientScaleTrapezoid\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TimelineArc\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineArc[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TimelineArc\"]]]]}]]\nChartElementData[\"ObliqueRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"PlateauCandlestick\", \"Options\"] = {}\nChartElementData[\"PointFigureChart\"] = {\"ArrowRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\", \"StripedRectangle\"}\nChartElementData[\"FilledCircle\", \"Image\"] = Show[First[{Graphics[{Disk[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}], ImageSize -> 30]\nChartElementData[\"PlateauSector\", \"Name\"] = \"plateau sector\"\nChartElementData[\"DiscreteRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PolyhedronBubble\", \"InternalChartElementFunction\"] = System`BarFunctionDump`PolyhedronBubble\nChartElementData[\"FadingTrapezoid\", \"ParameterNames\"] = {}\nChartElementData[\"GradientScaleTrapezoid\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ColorGradientScaleTrap\nChartElementData[\"EmptyUpTriangle\"] = {Graphics[{{Opacity[0], EdgeForm[], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"FilledMarkers\", \"Options\"] = {}\nChartElementData[\"EmptySquare\", \"StandardName\"] = \"EmptySquare\"\nChartElementData[\"Zigzag\", \"Options\"] = {}\nChartElementData[\"EdgeFadingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Bottom, System`BarFunctionDump`edge = True}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`EdgeFadingGradientBar[#1, {}, \"GradientOrigin\" -> System`BarFunctionDump`dir, \"EdgeGradient\" -> System`BarFunctionDump`edge] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"origin\"], PopupMenu[Dynamic[System`BarFunctionDump`dir], {Bottom, Top, Left, Right}]}], Row[{Text[\"edge\"], Checkbox[Dynamic[System`BarFunctionDump`edge]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"EdgeFadingRectangle\", \"GradientOrigin\" -> System`BarFunctionDump`dir]]]]}]]\nChartElementData[\"Cylinder\", \"StandardName\"] = \"Cylinder\"\nChartElementData[\"NoiseRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"GradientScaleTrapezoid\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorGradientScaleTrap[#1, {}] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ClockNeedle\", \"Name\"] = \"clock needle\"\nChartElementData[\"EmptyMarkers\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SquareWaveRectangle\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`squareBSplineProfileBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"TimelineRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PlaneCube3D\", \"ParameterNames\"] = {}\nChartElementData[\"OscillatingRectangle\", \"StandardName\"] = \"OscillatingRectangle\"\nChartElementData[\"HalfFilledDiamond\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FilledMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"Arrow\", \"StandardName\"] = \"Arrow\"\nChartElementData[\"SegmentScaleRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`ColorSegmentScaleBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ScatteredBoxWhisker\", \"Options\"] = {}\nChartElementData[\"FadingOHLC\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"Quantile\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`origin = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`QuantileBar[##1, \"Width\" -> System`BarFunctionDump`w] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Decile\", \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"OscillatingBubble\", \"StandardName\"] = \"OscillatingBubble\"\nChartElementData[\"GlassBubble\", \"ParameterRange\"] = {}\nChartElementData[\"PolarMarker\", \"Name\"] = \"polar marker\"\nChartElementData[\"ProfileThicknessBar\", \"Options\"] = {\"Profile\" -> 2, \"TaperRatio\" -> 1, \"Thickness\" -> Function[System`BarFunctionDump`x, (1 - (2*System`BarFunctionDump`x - 1)^2)^(1\/8)]}\nChartElementData[\"GrowingSector\", \"Manipulate\"] = DynamicModule[{}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`GrowingSector[#1, {}] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GrowingSector\"]]]]}]]\nChartElementData[\"HLC\", \"ParameterRange\"] = {3, 3}\nChartElementData[\"GlassQuantile\", \"Name\"] = \"glass quantile bar\"\nChartElementData[\"FloatingRectangle\", \"StandardName\"] = \"FloatingRectangle\"\nChartElementData[\"PointPlane3D\", \"Name\"] = \"3 - D point - plane\"\nChartElementData[\"TriangleWaveCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`TriangleWaveBar3D\nChartElementData[\"TriangleWaveBubble\", \"Name\"] = \"triangle wave bubble\"\nChartElementData[\"CylinderMarker\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Candlestick\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"LineDensity\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"OpenEndedRectangle\", \"Options\"] = {}\nChartElementData[\"SegmentScaleCube\", \"StandardName\"] = \"SegmentScaleCube\"\nChartElementData[\"SphereBubble\", \"Image\"] = Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`SphereBubble[#1, {}] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"GradientRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`g = \"Rainbow\", System`BarFunctionDump`origin = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`GradientBar[#1, {}, \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientOrigin\" -> System`BarFunctionDump`origin] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"gradient\"], PopupMenu[Dynamic[System`BarFunctionDump`g], ColorData[\"Gradients\"]]}], Row[{Text[\"direction\"], PopupMenu[Dynamic[System`BarFunctionDump`origin], {Bottom, Left, Top, Right}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientRectangle\", \"ColorScheme\" -> System`BarFunctionDump`g, \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"PlateauCandlestick\", \"Name\"] = \"plateau candlestick\"\nChartElementData[\"Range\", \"ParameterNames\"] = {\"Value\", \"Low\", \"High\"}\nChartElementData[\"ShadingQuantile\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassQuantile\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"Quantile\" -> {0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100}, \"QuantileShading\" -> False, \"QuantileStyle\" -> Automatic}\nChartElementData[\"LeftEndedRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientTrapezoid\", \"StandardName\"] = \"GradientTrapezoid\"\nChartElementData[\"Sector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"FadingTrapezoid\", \"StandardName\"] = \"FadingTrapezoid\"\nChartElementData[\"SquareWaveCube\", \"ParameterNames\"] = {}\nChartElementData[\"PointStem3D\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Trapezoid\", \"Name\"] = \"trapezoid\"\nChartElementData[\"FourStylesCandlestick\", \"Options\"] = {}\nChartElementData[\"Density\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"EmptySquare\"] = {Graphics[{{GrayLevel[1], Rectangle[{0, 0}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"ScaleBreakRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveSector\", \"InternalChartElementFunction\"] = System`BarFunctionDump`TriangleWaveRadius\nChartElementData[\"HalfFilledMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"FourStylesCandlestick\", \"StandardName\"] = \"FourStylesCandlestick\"\nChartElementData[\"TimelineFilling\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SimpleLine\", \"Options\"] = {\"GradientOrigin\" -> Automatic}\nChartElementData[\"ArrowCandlestick\", \"Name\"] = \"arrow candlestick\"\nChartElementData[\"PlaneCube3D\", \"StandardName\"] = \"PlaneCube3D\"\nChartElementData[\"SpeedometerNeedle\", \"Name\"] = \"speedometer needle\"\nChartElementData[\"ListPlot\"] = {\"CenterMarkers\", \"ContrastMarkers\", \"EmptyMarkers\", \"FilledMarkers\", \"HalfFilledMarkers\", \"SimpleContrastMarkers\", \"SimpleMarkers\"}\nChartElementData[\"SmoothDensity\", \"Name\"] = \"smooth density\"\nChartElementData[\"TriangleWaveSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"Bubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FadingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`FadingGradientBar[#1, {}, \"GradientOrigin\" -> Left] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FadingBoxWhisker\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"NoiseSector\", \"Name\"] = \"noise sector\"\nChartElementData[\"TriangularWaveRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`triangularBSplineProfileBar\nChartElementData[\"CenterFilledCircle\"] = {Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 0.5]}, {Thickness[0.1], Circle[{0, 0}, 1]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"OpenBoxWhisker\", \"StandardName\"] = \"OpenBoxWhisker\"\nChartElementData[\"GradientBubble\", \"Options\"] = {\"ColorScheme\" -> \"BeachColors\", \"GradientDirection\" -> \"DescendingRadial\"}\nChartElementData[\"Rectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"DiscreteCube\", \"ParameterNames\"] = {}\nChartElementData[\"PointPlane3D\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"IndustrialNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"RotatingGrowingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RotatingGrowingRectangle[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"DiscreteRectangle\", \"Name\"] = \"discrete rectangle\"\nChartElementData[\"OHLC\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"OpenEndedRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FloatingRectangle\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FloatingBar[##1, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & , System`BarFunctionDump`$twoargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"FloatingRectangle\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"CylindricalSector3D\", \"Name\"] = \"cube\"\nChartElementData[\"PolyhedronBubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`poly = \"Spikey\"}, Column[{Dynamic[Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`PolyhedronBubble[#1, {}, \"Polyhedron\" -> System`BarFunctionDump`poly] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"polyhedron \"], PopupMenu[Dynamic[System`BarFunctionDump`poly], {\"Spikey\", \"Cube\", \"Dodecahedron\", \"Icosahedron\", \"Octahedron\", \"Tetrahedron\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PolyhedronBubble\", \"Polyhedron\" -> System`BarFunctionDump`poly]]]]}]]\nChartElementData[\"Density\", \"Options\"] = {\"Threshold\" -> Automatic}\nChartElementData[\"Bubble\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`shape = \"Circle\"}, Column[{Dynamic[Graphics[{System`BarFunctionDump`$bubblestyle, (System`BarFunctionDump`BasicBubble[#1, {}, \"Shape\" -> System`BarFunctionDump`shape] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]], Row[{Text[\"shape\"], PopupMenu[Dynamic[System`BarFunctionDump`shape], {\"Square\", \"Diamond\", \"Triangle\", \"Hexagon\", \"Octagon\", \"Circle\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Bubble\", \"Shape\" -> System`BarFunctionDump`shape]]]]}]]\nChartElementData[\"Trapezoid\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GradientBoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GradientBoxWhiskerBar[##1, \"GradientOrigin\" -> System`BarFunctionDump`dir] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"GradientScaleBoxWhisker\"]]]]}]]\nChartElementData[\"FadingRectangle\", \"Name\"] = \"fading rectangle\"\nChartElementData[\"SimpleContrastMarkers\", \"StandardName\"] = \"SimpleContrastMarkers\"\nChartElementData[\"PolyhedronBubble\", \"Name\"] = \"polyhedron bubble\"\nChartElementData[\"EmptyUpTriangle\", \"ParameterNames\"] = {}\nChartElementData[\"RectangleChart\"] = {\"ArrowRectangle\", \"EdgeFadingRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"ObliqueRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"ScatteredBoxWhisker\", \"StandardName\"] = \"ScatteredBoxWhisker\"\nChartElementData[\"BezelFlatNeedle\", \"Options\"] = {\"BezelRotation\" -> 0, \"HubInnerRadius\" -> 0.4, \"HubOuterRadius\" -> 0.2, \"HubColor\" -> GrayLevel[0.3], \"NeedleWidth\" -> 0.5, \"TailLength\" -> 0}\nChartElementData[\"LineDensity\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`DistributionLineBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"StopWatchNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawStopWatchNeedle\nChartElementData[\"Rectangle\", \"ParameterNames\"] = {}\nChartElementData[\"PolyhedronBubble3D\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`poly = \"Spikey\"}, Column[{Dynamic[Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`PolyhedronBubble3D[#1, #2, {}, \"Polyhedron\" -> System`BarFunctionDump`poly] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions, PlotRange -> {{0, 4}, {0, 4}, {0, 4}}, Lighting -> \"Neutral\"]], Row[{Text[\"polyhedron \"], PopupMenu[Dynamic[System`BarFunctionDump`poly], {\"Spikey\", \"Cube\", \"Dodecahedron\", \"Icosahedron\", \"Octahedron\", \"Tetrahedron\"}]}], Button[\"Insert \", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"PolyhedronBubble3D\", \"Polyhedron\" -> System`BarFunctionDump`poly]]]]}]]\nChartElementData[\"LiquidMarker\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Rectangle\", \"Name\"] = \"rectangle\"\nChartElementData[\"PointDensity\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`DistributionPointBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PlateauSector\", \"ParameterNames\"] = {}\nChartElementData[\"TriangleWaveCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`TriangleWaveBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"PolyhedronBubble3D\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"FilledDownTriangle\"] = {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.08}\nChartElementData[\"SimpleContrastMarkers\", \"Options\"] = {}\nChartElementData[\"SegmentScaleRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Bubble\", \"ParameterNames\"] = {}\nChartElementData[\"ShinyHubNeedle\", \"Options\"] = {\"BezelRotation\" -> 0, \"HubInnerRadius\" -> 0.825, \"HubOuterRadius\" -> 0.4, \"HubColor\" -> GrayLevel[0.85], \"NeedleWidth\" -> 0.75, \"NeedleLength\" -> 0.25}\nChartElementData[\"PointDensity\", \"Options\"] = {\"PointStyle\" -> Directive[PointSize[0.005], GrayLevel[0]]}\nChartElementData[\"ErrorBubble3D\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"PlateauCandlestick\", \"StandardName\"] = \"PlateauCandlestick\"\nChartElementData[\"CenterFilledSquare\", \"Name\"] = \"center-filled square\"\nChartElementData[\"Point\", \"StandardName\"] = \"Point\"\nChartElementData[\"FilledMarkers\"] = {{Graphics[{Disk[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{Rectangle[{0, 0}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.08}}\nChartElementData[\"BowtieSquare\", \"StandardName\"] = \"BowtieSquare\"\nChartElementData[\"Cube\", \"StandardName\"] = \"Cube\"\nChartElementData[\"EmptySquare\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"Bubble3D\", \"Options\"] = {\"Shape\" -> \"Sphere\"}\nChartElementData[\"SquareWaveRectangle\", \"Name\"] = \"square wave rectangle\"\nChartElementData[\"EmptyDownTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"LineDensity\", \"StandardName\"] = \"LineDensity\"\nChartElementData[\"SimpleLine\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`SimpleLineBar[#1, {}, \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SimpleLine\"]]]]}]]\nChartElementData[\"DoubleEndedLine\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`DoubleEndedLineDiscrete[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"PolarMarker\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"FadingBoxWhisker\", \"StandardName\"] = \"FadingBoxWhisker\"\nChartElementData[\"HalfFilledMarkers\", \"Name\"] = \"half-filled markers\"\nChartElementData[\"CompassNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawCompassNeedle\nChartElementData[\"HalfFilledDownTriangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveCube\", \"ParameterNames\"] = {}\nChartElementData[\"PointDensity\", \"ParameterNames\"] = {\"DataList\"}\nChartElementData[\"TimelineBubbleLabel\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TimelineListLabel\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"CompassFlatNeedle\", \"Name\"] = \"compass needle\"\nChartElementData[\"NoiseRectangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"LeftEndedRectangle\", \"Name\"] = \"left - ended rectangle\"\nChartElementData[\"FourStylesCandlestick\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"FadingCandlestick\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FadingBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`FadingBubble[#1, {}, \"GradientDirection\" -> \"Radial\"] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"VintageClockNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"HalfFilledCircle\"] = {Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 1, {Pi\/2, -Pi\/2}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"ShadingQuantile\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ShadingQuantileBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"HistogramDensity\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"CheckerSquare\", \"Name\"] = \"checker square\"\nChartElementData[\"Range\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"TimelineFilling\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"NoiseBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GlassCandlestick\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"Quantile\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveBubble\", \"Image\"] = Graphics[{(System`BarFunctionDump`TriangleWaveBubble[#1, {}, \"AngularFrequency\" -> 20, \"RadialAmplitude\" -> 0.1] & ) \/@ System`BarFunctionDump`$simplebubbles}, System`BarFunctionDump`$imagebubbleoptions]\nChartElementData[\"TimelineRectangle\", \"StandardName\"] = \"TimelineRectangle\"\nChartElementData[\"OpenEndedRectangle\", \"StandardName\"] = \"OpenEndedRectangle\"\nChartElementData[\"HalfFilledDownTriangle\", \"Options\"] = {}\nChartElementData[\"GradientSector\", \"Options\"] = {\"ColorScheme\" -> {RGBColor[0.674205, 0.423758, 0.242374], RGBColor[0.853407, 0.503288, 0.26041], RGBColor[0.8697087272727273, 0.582690909090909, 0.2751812727272727], RGBColor[0.8852926363636364, 0.6564491818181818, 0.28915563636363634], RGBColor[0.8999194545454545, 0.7226812727272727, 0.3020674545454546], RGBColor[0.918547, 0.79826, 0.409216], RGBColor[0.8616270909090908, 0.7735107272727273, 0.4171470909090909], RGBColor[0.77615, 0.762081, 0.645243], RGBColor[0.762341, 0.748974, 0.784665], RGBColor[0.698177, 0.714595, 0.841627], RGBColor[0.7372037272727272, 0.7590425454545454, 0.9071053636363636], RGBColor[0.645624, 0.660807, 0.778286]}, \"GradientDirection\" -> \"Angular\"}\nChartElementData[\"GradientScaleRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"FadingQuantile\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingQuantileBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"BoxWhisker\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`dir = Left}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GlassBoxWhiskerBar[##1, \"GradientOrigin\" -> System`BarFunctionDump`dir] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"BoxWhisker\", \"RoundingRadius\" -> Offset[System`BarFunctionDump`r]]]]]}]]\nChartElementData[\"HLC\", \"ParameterNames\"] = {\"High\", \"Low\", \"Close\"}\nChartElementData[\"Collections\"] = {\"AngularGauge\", \"BarChart\", \"BarChart3D\", \"BoxWhiskerChart\", \"BubbleChart\", \"BubbleChart3D\", \"BulletGauge\", \"CandlestickChart\", \"ClockGauge\", \"DateHistogram\", \"DensityHistogram\", \"DiscretePlot\", \"DiscretePlot3D\", \"DistributionChart\", \"Histogram\", \"Histogram3D\", \"HorizontalGauge\", \"InteractiveTradingChart\", \"LineBreakChart\", \"PairedBarChart\", \"PairedHistogram\", \"PieChart\", \"PieChart3D\", \"PointFigureChart\", \"RectangleChart\", \"RectangleChart3D\", \"RenkoChart\", \"SectorChart\", \"SectorChart3D\", \"SwatchLegend\", \"ThermometerGauge\", \"TradingChart\", \"VerticalGauge\"}\nChartElementData[\"CenterMarkers\", \"StandardName\"] = \"CenterMarkers\"\nChartElementData[\"Point3D\", \"Name\"] = \"3 - D point\"\nChartElementData[\"Rectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"TextureSector\", \"Name\"] = \"texture sector\"\nChartElementData[\"HLC\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`HighLowCloseBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"HighLowClose\"]]]]}]]\nChartElementData[\"ReferenceLine\", \"StandardName\"] = \"ReferenceLine\"\nChartElementData[\"GlassReflectionSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"DiscreteCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GrowingSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"FlatArrowNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"IndustrialNeedle\", \"StandardName\"] = \"IndustrialNeedle\"\nChartElementData[\"PointStem3D\", \"ParameterNames\"] = {}\nChartElementData[\"Stem\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledSquare\", \"Options\"] = {}\nChartElementData[\"Point\", \"Options\"] = {}\nChartElementData[\"LeftEndedRectangle\", \"Options\"] = {}\nChartElementData[\"MarkerBubble3D\", \"Options\"] = {\"Shape\" -> \"Sphere\", \"Marker\" -> \"Sphere\", \"MarkerColor\" -> RGBColor[1, 1, 0]}\nChartElementData[\"Zigzag\", \"ParameterRange\"] = {4, 4}\nChartElementData[\"Trapezoid\", \"ParameterNames\"] = {}\nChartElementData[\"GradientSector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"ProfileSector3D\", \"Options\"] = {\"Profile\" -> 2}\nChartElementData[\"GlassTrapezoid\", \"ParameterNames\"] = {}\nChartElementData[\"CylinderMarker\", \"InternalChartElementFunction\"] = System`BarFunctionDump`smoothLiquidMarker\nChartElementData[\"HalfFilledUpTriangle\"] = {Graphics[{{Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {Opacity[0], Rectangle[{0, -0.1}, {1, 1}]}, {GrayLevel[1], Polygon[{{0, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Polygon[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}}]}, {Thickness[0.1], Line[{{0.5, 0.067}, {1, 0.067}, {0.5, 0.933}, {0, 0.067}, {0.5, 0.067}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"BowtieDiamond\", \"ParameterNames\"] = {}\nChartElementData[\"CenterMarkers\", \"ParameterNames\"] = {}\nChartElementData[\"OscillatingSector\", \"Name\"] = \"oscillating sector\"\nChartElementData[\"FilledDownTriangle\", \"Options\"] = {}\nChartElementData[\"GeoBubbleChart\"] = {\"Bubble\", \"FadingBubble\", \"GradientBubble\", \"MarkerBubble\", \"NoiseBubble\", \"OscillatingBubble\", \"PolyhedronBubble\", \"SphereBubble\", \"SquareWaveBubble\", \"TriangleWaveBubble\"}\nChartElementData[\"StripedRectangle\", \"Options\"] = {}\nChartElementData[\"CheckerDiamond\", \"Name\"] = \"checker diamond\"\nChartElementData[\"LineDensity\", \"Options\"] = {}\nChartElementData[\"GradientScaleBoxWhisker\", \"Name\"] = \"gradient scale box and whisker\"\nChartElementData[\"EmptyUpTriangle\", \"StandardName\"] = \"EmptyUpTriangle\"\nChartElementData[\"HalfFilledMarkers\", \"StandardName\"] = \"HalfFilledMarkers\"\nChartElementData[\"PlaneFadingCube\", \"Name\"] = \"fading cube\"\nChartElementData[\"FadingBubble\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FilledDownTriangle\", \"StandardName\"] = \"FilledDownTriangle\"\nChartElementData[\"Stem\", \"StandardName\"] = \"Stem\"\nChartElementData[\"Quantile\", \"Options\"] = {\"Quantile\" -> {25, 50, 75}, \"QuantileStyle\" -> Automatic, \"QuantileShading\" -> False}\nChartElementData[\"TriangularWaveRectangle\", \"Name\"] = \"triangular wave rectangle\"\nChartElementData[\"BezelBevelNeedle\", \"Name\"] = \"bezel bevel needle\"\nChartElementData[\"Density\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`bin = 10, System`BarFunctionDump`origin = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingDistribution[##1, \"Bins\" -> System`BarFunctionDump`bin, \"GradientOrigin\" -> System`BarFunctionDump`origin] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Density\", \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"ProfileSector3D\", \"Name\"] = \" profile sector\"\nChartElementData[\"TimelineIndex\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TimelineIndex[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"CenterFilledDownTriangle\"] = {Graphics[{{Opacity[0], Rectangle[{0, 0}, {1, 1.2}]}, {GrayLevel[1], Polygon[{{0, 0.933}, {1, 0.933}, {0.5, 0.067}}]}, {Polygon[{{0.3, 0.75}, {0.7, 0.75}, {0.5, 0.4}}]}, {Thickness[0.1], Line[{{0.5, 0.933}, {1, 0.933}, {0.5, 0.067}, {0, 0.933}, {0.5, 0.933}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}\nChartElementData[\"HLC\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"GlassReflectionSector\", \"StandardName\"] = \"GlassReflectionSector\"\nChartElementData[\"FadingQuantile\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`origin = Automatic}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingQuantileBar[##1, \"Width\" -> System`BarFunctionDump`w] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Decile\", \"GradientOrigin\" -> System`BarFunctionDump`origin]]]]}]]\nChartElementData[\"ThermometerGauge\", \"Markers\"] = {\"LiquidMarker\"}\nChartElementData[\"BowtieSquare\", \"ParameterNames\"] = {}\nChartElementData[\"BevelNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawBevelNeedle\nChartElementData[\"RotatingRectangle\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`RotatingRectangle[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"EmptyDiamond\", \"Options\"] = {}\nChartElementData[\"PointPlane3D\", \"Options\"] = {}\nChartElementData[\"GlassBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`GlassBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FadingQuantile\", \"Name\"] = \"fading quantile\"\nChartElementData[\"GradientBubble\", \"StandardName\"] = \"GradientBubble\"\nChartElementData[\"LeftEndedLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ObliqueRectangle\", \"Options\"] = {\"Angle\" -> 20, \"Depth\" -> 1}\nChartElementData[\"ShinyHubNeedle\", \"StandardName\"] = \"ShinyHubNeedle\"\nChartElementData[\"ShinyHubNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawShinyHubNeedle\nChartElementData[\"BowtieSquare\", \"Options\"] = {}\nChartElementData[\"Trapezoid\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`BasicTrap[#1, {}] & ) \/@ System`BarFunctionDump`$simpletraps}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Stacked\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"Arrow3D\", \"ParameterNames\"] = {}\nChartElementData[\"FlatProfileNeedle\", \"Name\"] = \"flat profile needle\"\nChartElementData[\"Line\", \"StandardName\"] = \"Line\"\nChartElementData[\"RotatingRectangle\", \"Options\"] = {\"RoundingRadius\" -> 0}\nChartElementData[\"GlassRectangle\", \"Name\"] = \"glass rectangle\"\nChartElementData[\"ArrowCandlestickBar\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`ArrowCandlestickBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"RotatingGrowingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"GrowingRectangle\", \"ParameterNames\"] = {}\nChartElementData[\"BasicWedgeNeedle\", \"StandardName\"] = \"BasicWedgeNeedle\"\nChartElementData[\"ProfileThicknessBar\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"PlateauSector\", \"Options\"] = {\"GradientDirection\" -> \"DescendingRadial\"}\nChartElementData[\"TimelineFilling\", \"Name\"] = \"time line filling\"\nChartElementData[\"HalfFilledCircle\", \"StandardName\"] = \"HalfFilledCircle\"\nChartElementData[\"ProfileThicknessBar\", \"InternalChartElementFunction\"] = System`BarFunctionDump`BSplineProfileThicknessBar3D\nChartElementData[\"FilledUpTriangle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"OpenEndedLine\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ClassicMarkers\", \"Name\"] = \"classic markers\"\nChartElementData[\"ErrorBar\", \"Name\"] = \"floating rectangle\"\nChartElementData[\"ErrorCube\", \"ParameterRange\"] = {2, 2}\nChartElementData[\"ThreeLineBreak\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, (System`BarFunctionDump`TLBBar[#1, {}] & ) \/@ System`BarFunctionDump`$simplerects}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"FloatingCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"FadingBubble\", \"ParameterNames\"] = {}\nChartElementData[\"Arrow\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ShinyHubNeedle\", \"ParameterNames\"] = {}\nChartElementData[\"FadingBoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`FadingBoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"Stem3D\", \"Options\"] = {}\nChartElementData[\"GlassReflectionSector\", \"Name\"] = \"glass reflection sector\"\nChartElementData[\"Point3D\", \"StandardName\"] = \"Point3D\"\nChartElementData[\"CompassNeedle\", \"Name\"] = \"compass needle\"\nChartElementData[\"ArrowRectangle\", \"Name\"] = \"arrow rectangle\"\nChartElementData[\"HalfFilledCircle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"TriangleWaveCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"EdgeFadingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`EdgeFadingGradientBar\nChartElementData[\"ThreeLineBreak\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"DoubleEndedRectangle\", \"ParameterNames\"] = {\"PointSize\" -> 5}\nChartElementData[\"SectorChart3D\"] = {\"CylindricalSector3D\", \"ProfileSector3D\", \"TorusSector3D\"}\nChartElementData[\"LineDensity\", \"Name\"] = \"line density\"\nChartElementData[\"PlateauBoxWhisker\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"IQRCoefficient\" -> 1.5}\nChartElementData[\"Anchor\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`AnchorBar[##1] & , System`BarFunctionDump`$fourargrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Candlestick\"]]]]}]]\nChartElementData[\"ArrowCandlestick\", \"StandardName\"] = \"ArrowCandlestick\"\nChartElementData[\"FilledSquare\", \"ParameterNames\"] = {}\nChartElementData[\"Stem3D\", \"ParameterNames\"] = {}\nChartElementData[\"Marker\", \"Name\"] = \"marker\"\nChartElementData[\"GradientBoxWhisker\", \"Name\"] = \"gradient box and whisker\"\nChartElementData[\"BoxWhisker\", \"Image\"] = Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`BoxWhiskerBar, System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]\nChartElementData[\"ProfileCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ProfileBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"PointStem\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"SquareWaveCube\", \"CoordinateSystem\"] = \"Cartesian3D\"\nChartElementData[\"ClickFillingCube\", \"Image\"] = Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ClickFillingBar3D[#1, {}] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]\nChartElementData[\"PlaneFadingCube\", \"Options\"] = {}\nChartElementData[\"MarkerBubble\", \"ParameterNames\"] = {}\nChartElementData[\"SplineBar\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SplineBar\nChartElementData[\"TriangularWaveRectangle\", \"StandardName\"] = \"TriangularWaveRectangle\"\nChartElementData[\"TimelineListLabel\", \"StandardName\"] = \"TimelineListLabel\"\nChartElementData[\"FadingQuantile\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"CylindricalSector3D\", \"StandardName\"] = \"CylindricalSector3D\"\nChartElementData[\"PolyhedronBubble3D\", \"Image\"] = Graphics3D[{System`BarFunctionDump`$bubblestyle, MapThread[System`BarFunctionDump`PolyhedronBubble3D[#1, #2, {}] & , {System`BarFunctionDump`$simple3Dbubbles, MapThread[Flatten[{#2, #1}] & , {System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] - System`BarFunctionDump`$simple3Dbubbles[[All,All,1]], (System`BarFunctionDump`$simple3Dbubbles[[All,All,2]] + System`BarFunctionDump`$simple3Dbubbles[[All,All,1]])\/2}]}]}, System`BarFunctionDump`$image3Dbubbleoptions, Lighting -> \"Neutral\"]\nChartElementData[\"TimelineElement\", \"StandardName\"] = \"TimelineElement\"\nChartElementData[\"SquareWaveSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"CheckerSquare\", \"ParameterNames\"] = {}\nChartElementData[\"SquareWaveCube\", \"InternalChartElementFunction\"] = System`BarFunctionDump`SquareWaveBar3D\nChartElementData[\"OpenBoxWhisker\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"ClickFillingCube\", \"Manipulate\"] = Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ClickFillingBar3D[#1, {}, \"Shading\" -> System`BarFunctionDump`shading, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size, \"Color\" -> System`BarFunctionDump`color] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Cube\", \"Shading\" -> System`BarFunctionDump`shading, \"Shape\" -> System`BarFunctionDump`shape, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]\nChartElementData[\"PolyhedronBubble\", \"Options\"] = {\"Polyhedron\" -> \"Spikey\"}\nChartElementData[\"FilledCircle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"SquareWaveCube\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"TextureSector\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"FloatingRectangle\", \"Name\"] = \"floating rectangle\"\nChartElementData[\"FadingCandlestick\", \"ParameterNames\"] = {\"Open\", \"High\", \"Low\", \"Close\"}\nChartElementData[\"SplineBar\", \"ParameterRange\"] = {1, Infinity}\nChartElementData[\"HalfFilledDiamond\", \"Image\"] = Show[First[{Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}], ImageSize -> 30]\nChartElementData[\"ErrorBar\", \"InternalChartElementFunction\"] = System`BarFunctionDump`errorBar\nChartElementData[\"NoiseRectangle\", \"StandardName\"] = \"NoiseRectangle\"\nChartElementData[\"ReferenceLine\", \"InternalChartElementFunction\"] = System`BarFunctionDump`ReferenceLineBar\nChartElementData[\"FilledDiamond\", \"ParameterNames\"] = {}\nChartElementData[\"Arrow\", \"Name\"] = \"Arrow\"\nChartElementData[\"PolyhedronBubble\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"RightEndedRectangle\", \"Name\"] = \"right - ended rectangle\"\nChartElementData[\"PolyhedronBubble\", \"StandardName\"] = \"PolyhedronBubble\"\nChartElementData[\"FilledDiamond\", \"Options\"] = {}\nChartElementData[\"SegmentScaleBoxWhisker\", \"Options\"] = {\"IQRCoefficient\" -> 1.5}\nChartElementData[\"GrowingRectangle\", \"Name\"] = \"dynamic rectangle\"\nChartElementData[\"SquareWaveRectangle\", \"Options\"] = {\"Profile\" -> 1, \"RadialAmplitude\" -> 0.1, \"AngularFrequency\" -> 20}\nChartElementData[\"PolarMarker\", \"StandardName\"] = \"PolarMarker\"\nChartElementData[\"ContrastMarkers\"] = {{Graphics[{{GrayLevel[1], Disk[{0, 0}, 1]}, {Disk[{0, 0}, 1, {-Pi\/2, -Pi}]}, {Disk[{0, 0}, 1, {0, Pi\/2}]}, {Thickness[0.1], Circle[{0, 0}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {0.5, 0}, {0.5, 0.5}, {0, 0.5}}]}, {Polygon[{{0.5, 0.5}, {1, 0.5}, {1, 1}, {0.5, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 0}, {0.75, 0.25}, {0.5, 0.5}, {0.25, 0.25}}]}, {Polygon[{{0.5, 0.5}, {0.75, 0.75}, {0.5, 1}, {0.25, 0.75}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}, {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {1, 0}, {0.5, 0.5}}]}, {Polygon[{{0.5, 0.5}, {1, 1}, {0, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}, {Graphics[{{GrayLevel[1], Polygon[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}}]}, {Polygon[{{0.5, 1}, {0.5, 0.5}, {1, 0.5}}]}, {Polygon[{{0, 0.5}, {0.5, 0.5}, {0.5, 0}}]}, {Thickness[0.1], Line[{{0.5, 0}, {1, 0.5}, {0.5, 1}, {0, 0.5}, {0.5, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.07}}\nChartElementData[\"FilledUpTriangle\", \"Name\"] = \"filled up-triangle\"\nChartElementData[\"Stem\", \"Name\"] = \"stem\"\nChartElementData[\"Cylinder\", \"Options\"] = {}\nChartElementData[\"TriangularWaveRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"ThreeLineBreak\", \"ParameterNames\"] = {}\nChartElementData[\"ProfileThicknessBar\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro = 2, System`BarFunctionDump`shrink = 1, System`BarFunctionDump`function = Function[System`BarFunctionDump`x, (1 - (2*System`BarFunctionDump`x - 1)^2)^(1\/8)]}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`BSplineProfileThicknessBar3D[#1, {}, \"Profile\" -> System`BarFunctionDump`pro, \"TaperRatio\" -> System`BarFunctionDump`shrink, \"Thickness\" -> System`BarFunctionDump`function] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"Profile\"], Slider[Dynamic[System`BarFunctionDump`pro], {1, 10}, ImageSize -> Small]}], Row[{Text[\"TaperRatio\"], Slider[Dynamic[System`BarFunctionDump`shrink], {0.01, 1}, ImageSize -> Small]}], Row[{Text[\"Thickness\"], InputField[Dynamic[System`BarFunctionDump`function]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ProfileThicknessBar\", \"Profile\" -> System`BarFunctionDump`pro, \"TaperRatio\" -> System`BarFunctionDump`shrink, \"Thickness\" -> System`BarFunctionDump`function]]]]}]]\nChartElementData[\"FadingQuantile\", \"Options\"] = {\"GradientOrigin\" -> Automatic, \"Quantile\" -> {0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100}, \"QuantileShading\" -> False, \"QuantileStyle\" -> Automatic}\nChartElementData[\"BevelNeedle\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"GradientScaleTrapezoid\", \"Options\"] = {\"ColorScheme\" -> {RGBColor[0.643977, 0.700633, 0.927596], RGBColor[0.877134, 0.855222, 0.986419], RGBColor[0.96968, 0.827115, 0.369665], RGBColor[0.922377, 0.302419, 0.027451]}}\nChartElementData[\"CylinderMarker\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"HalfFilledMarkers\", \"Options\"] = {}\nChartElementData[\"Sector\", \"ParameterRange\"] = {0, 0}\nChartElementData[\"BevelNeedle\", \"Name\"] = \"bevel needle\"\nChartElementData[\"StopWatchNeedle\", \"Name\"] = \"stopwatch needle\"\nChartElementData[\"RotatingGrowingRectangle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`RotatingGrowingRectangle\nChartElementData[\"ThermometerGauge\", \"Themes\"] = {\"Thermometer\"}\nChartElementData[\"FlatProfileNeedle\", \"InternalChartElementFunction\"] = System`BarFunctionDump`drawFlatProfileNeedle\nChartElementData[\"ErrorCube\", \"StandardName\"] = \"ErrorCube\"\nChartElementData[\"HalfFilledDiamond\", \"StandardName\"] = \"HalfFilledDiamond\"\nChartElementData[\"CenterFilledCircle\", \"Options\"] = {}\nChartElementData[\"DetailArrowNeedle\", \"CoordinateSystem\"] = \"Polar\"\nChartElementData[\"ContrastMarkers\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"FadingCandlestick\", \"StandardName\"] = \"FadingCandlestick\"\nChartElementData[\"FilledUpTriangle\", \"StandardName\"] = \"FilledUpTriangle\"\nChartElementData[\"NoiseBubble\", \"StandardName\"] = \"NoiseBubble\"\nChartElementData[\"ErrorBubble3D\", \"StandardName\"] = \"ErrorBubble3D\"\nChartElementData[\"HalfFilledSquare\"] = {Graphics[{{GrayLevel[1], Rectangle[{0, 0}, {1, 1}]}, {Polygon[{{0, 0}, {1, 0}, {1, 1}}]}, {Thickness[0.1], Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]}}, PlotRangePadding -> None, ImagePadding -> Automatic], 0.06}\nChartElementData[\"BoxWhisker\", \"Name\"] = \"box and whisker\"\nChartElementData[\"DottedRectangle\", \"CoordinateSystem\"] = \"Cartesian\"\nChartElementData[\"LineDensity\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`r = 0}, Column[{Dynamic[Graphics[{Sequence @@ System`BarFunctionDump`$barstyle, Apply[System`BarFunctionDump`DistributionLineBar[##1] & , System`BarFunctionDump`$nargdistrects, {1}]}, System`BarFunctionDump`$imageoptions]], Row[{Text[\"r\"], Slider[Dynamic[System`BarFunctionDump`r], {0, 30, 1}, ImageSize -> Small]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"LineDensity\"]]]]}]]\nChartElementData[\"HalfFilledCircle\", \"Options\"] = {}\nChartElementData[\"ProfileCube\", \"Manipulate\"] = DynamicModule[{System`BarFunctionDump`pro = 2, System`BarFunctionDump`size = 1, System`BarFunctionDump`rounded = False}, Column[{Dynamic[Graphics3D[{Sequence @@ System`BarFunctionDump`$cubestyle, (System`BarFunctionDump`ProfileBar3D[#1, {}, \"Profile\" -> System`BarFunctionDump`pro, \"TaperRatio\" -> System`BarFunctionDump`size] & ) \/@ System`BarFunctionDump`$simplecubes}, System`BarFunctionDump`$image3Doptions]], Row[{Text[\"profile \"], Slider[Dynamic[System`BarFunctionDump`pro], {1, 10}, ImageSize -> Small]}], Row[{Text[\"size \"], Slider[Dynamic[System`BarFunctionDump`size], {0.01, 2}, ImageSize -> Small, Enabled -> If[Dynamic[System`BarFunctionDump`rounded], False, True]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"ProfileCube\", \"HorizontalProfile\" -> System`BarFunctionDump`pro, \"TaperRatio\" -> System`BarFunctionDump`size]]]]}]]\nChartElementData[System`BarFunctionDump`f_, \"Properties\"] \/; System`BarFunctionDump`chartElementDataQ[System`BarFunctionDump`f] := {}\nChartElementData[System`BarFunctionDump`f_] \/;  !StringQ[System`BarFunctionDump`f] := ChartElementData[ToString[System`BarFunctionDump`f]]\nChartElementData[\"AngularGauge\" | \"ClockGauge\" | \"BulletGauge\" | \"HorizontalGauge\" | \"ThermometerGauge\" | \"VerticalGauge\"] = {\"Face\", \"Frame\", \"Markers\"}\nChartElementData[\"AngularGauge\" | \"ClockGauge\", \"Frame\"] = {\"BezelSector\", \"GlassSector\", \"GradientSector\", \"NoiseSector\", \"OscillatingSector\", \"PlateauSector\", \"Sector\", \"SquareWaveSector\", \"TriangleWaveSector\"}\nChartElementData[\"AngularGauge\" | \"ClockGauge\", \"Face\"] = {\"BezelSector\", \"GlassReflectionSector\", \"GlassSector\", \"GradientSector\", \"NoiseSector\", \"OscillatingSector\", \"PlateauSector\", \"Sector\", \"SquareWaveSector\", \"TriangleWaveSector\"}\nChartElementData[\"BulletGauge\" | \"HorizontalGauge\" | \"VerticalGauge\" | \"ThermometerGauge\", \"Frame\" | \"Face\"] = {\"ArrowRectangle\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"HorizontalGauge\" | \"VerticalGauge\", \"Markers\"] = {\"ArrowRectangle\", \"BarMarker\", \"CylinderMarker\", \"FadingRectangle\", \"GlassRectangle\", \"GradientRectangle\", \"GradientScaleRectangle\", \"LiquidMarker\", \"Marker\", \"Rectangle\", \"SegmentScaleRectangle\"}\nChartElementData[\"HorizontalGauge\" | \"VerticalGauge\", \"Themes\"] = {\"Battery\", \"BatteryDark\"}\nChartElementData[System`BarFunctionDump`name_, System`BarFunctionDump`o:OptionsPattern[]] := ChartElementDataFunction[System`BarFunctionDump`name, System`BarFunctionDump`o] \/; System`BarFunctionDump`chartElementDataQ[System`BarFunctionDump`name]\nChartElementData[System`BarFunctionDump`name_, \"ChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := ChartElementDataFunction[System`BarFunctionDump`name, System`BarFunctionDump`o] \/; System`BarFunctionDump`chartElementDataQ[System`BarFunctionDump`name]\nChartElementData[ChartElementDataFunction[System`BarFunctionDump`f_, ___, System`BarFunctionDump`o1:OptionsPattern[]], \"LegendImage\", System`BarFunctionDump`o2:OptionsPattern[]] := ChartElementData[System`BarFunctionDump`f, \"LegendImage\", FilterRules[Flatten[{System`BarFunctionDump`o1, System`BarFunctionDump`o2}], ChartElementData[System`BarFunctionDump`f, \"Options\"]]]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", System`BarFunctionDump`o:OptionsPattern[]] := ChartElementData[System`BarFunctionDump`f, \"LegendImage\", \"Square\", Medium, FilterRules[Flatten[{System`BarFunctionDump`o}], ChartElementData[System`BarFunctionDump`f, \"Options\"]]]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage3D\", System`BarFunctionDump`metadata_, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`style, System`BarFunctionDump`image, System`BarFunctionDump`markercolor, System`BarFunctionDump`color}, System`BarFunctionDump`style = \"Style\" \/. Options[System`BarFunctionDump`o, \"Style\"]; If[Head[System`BarFunctionDump`f] === ChartElementDataFunction, Switch[System`BarFunctionDump`f[[1]], \"Bubble3D\", System`BarFunctionDump`image = System`BarFunctionDump`BasicBubble3D[{{0, 1}, {0, 1}, {0, 1}}, {1, 1, 1, 1}, {}, If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"], \"Shape\" -> \"Sphere\"]], \"MarkerBubble3D\", System`BarFunctionDump`image = System`BarFunctionDump`MarkerBubble3D[{{0, 1}, {0, 1}, {0, 1}}, {1, 1, 1, 1}, {}, {If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"], \"Shape\" -> \"SphereDot\"], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"MarkerColor\"], Options[System`BarFunctionDump`f, \"MarkerColor\"], \"MarkerColor\" -> \"Yellow\"]}], \"ErrorBubble3D\", System`BarFunctionDump`image = System`BarFunctionDump`ErrorBubble3D[{{0, 1}, {0, 1}, {0, 1}}, {1, 1, 1, 1, 1, 1}, {0.3, 0.3, 0.3}, {If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"], \"Shape\" -> \"Sphere\"], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"ErrorColor\"], Options[System`BarFunctionDump`f, \"ErrorColor\"], \"ErrorColor\" -> Red], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"ErrorStyle\"], Options[System`BarFunctionDump`f, \"ErrorStyle\"], \"ErrorStyle\" -> \"T\"], \"Filled\" -> True}], _, System`BarFunctionDump`image = System`BarFunctionDump`f[{{0, 1}, {0, 1}, {0, 1}}, 1]], Switch[System`BarFunctionDump`f, Charting`AutomaticBubble3D, System`BarFunctionDump`image = System`BarFunctionDump`f[{{0, 1}, {0, 1}, {0, 1}}, {1, 1, 1, 1}, System`BarFunctionDump`metadata], _Charting`PictorialBubble3D, System`BarFunctionDump`image = System`BarFunctionDump`f[{{0, 1}, {0, 1}, {0, 1}}, {1, 1, 1, 1}], _, System`BarFunctionDump`image = System`BarFunctionDump`f[{{0, 1}, {0, 1}, {0, 1}}]]]; Graphics3D[{System`BarFunctionDump`style, Specularity[White, 20], System`BarFunctionDump`image}, ImageSize -> 25, Boxed -> False, Options[System`BarFunctionDump`o, Lighting]]]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", \"Square\", System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`style}, System`BarFunctionDump`style = \"Style\" \/. Flatten[{System`BarFunctionDump`o, \"Style\" -> Black}]; Graphics[{GrayLevel[0.9], System`BarFunctionDump`style, Rectangle[{0, 0}, {1, 1}]}]]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", \"Disk\", System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`style}, System`BarFunctionDump`style = \"Style\" \/. Flatten[{System`BarFunctionDump`o, \"Style\" -> Black}]; Graphics[{GrayLevel[0.9], System`BarFunctionDump`style, Disk[{0, 0}, 1]}]]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", System`BarFunctionDump`shape_, Tiny, System`BarFunctionDump`o:OptionsPattern[]] := Charting`noShow[ChartElementData[System`BarFunctionDump`f, \"LegendImage\", System`BarFunctionDump`shape, System`BarFunctionDump`o], ImageSize -> 5]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", System`BarFunctionDump`shape_, Small, System`BarFunctionDump`o:OptionsPattern[]] := Charting`noShow[ChartElementData[System`BarFunctionDump`f, \"LegendImage\", System`BarFunctionDump`shape, System`BarFunctionDump`o], ImageSize -> 10]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", System`BarFunctionDump`shape_, Medium, System`BarFunctionDump`o:OptionsPattern[]] := Charting`noShow[ChartElementData[System`BarFunctionDump`f, \"LegendImage\", System`BarFunctionDump`shape, System`BarFunctionDump`o], ImageSize -> 15]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage\", System`BarFunctionDump`shape_, Large, System`BarFunctionDump`o:OptionsPattern[]] := Charting`noShow[ChartElementData[System`BarFunctionDump`f, \"LegendImage\", System`BarFunctionDump`shape, System`BarFunctionDump`o], ImageSize -> 25]\nChartElementData[\"BubbleScale\", System`BarFunctionDump`size_, System`BarFunctionDump`rsize_, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`min, System`BarFunctionDump`max, System`BarFunctionDump`rmin, System`BarFunctionDump`rmax, System`BarFunctionDump`style, System`BarFunctionDump`minimage, System`BarFunctionDump`maximage}, System`BarFunctionDump`style = \"Style\" \/. Options[{System`BarFunctionDump`o}, \"Style\"]; System`BarFunctionDump`min = Min[Last[System`BarFunctionDump`size]]; System`BarFunctionDump`rmin = Min[Last[System`BarFunctionDump`rsize]]; System`BarFunctionDump`max = Max[Last[System`BarFunctionDump`size]]; System`BarFunctionDump`rmax = Max[Last[System`BarFunctionDump`rsize]]; Graphics[{Line[{{{0, 0}, {4*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max, 0}}, {{0, 0}, {4*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max - System`BarFunctionDump`max\/Sqrt[3], 2*System`BarFunctionDump`max*(1\/2 + 1\/Sqrt[3])}}}], Circle[{4*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`min - System`BarFunctionDump`min\/Sqrt[3], System`BarFunctionDump`min}, System`BarFunctionDump`min], Circle[{4*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max - System`BarFunctionDump`max\/Sqrt[3], System`BarFunctionDump`max}, System`BarFunctionDump`max]}, Axes -> True, AxesStyle -> {Automatic, Opacity[0]}, Ticks -> {{{4*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`min - System`BarFunctionDump`min\/Sqrt[3], System`BarFunctionDump`min, {0, 0}}, {4*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max - System`BarFunctionDump`max\/Sqrt[3], System`BarFunctionDump`max, {0, 0}}}, None}]]\nChartElementData[System`BarFunctionDump`f_, \"BubbleScale\", System`BarFunctionDump`size_, System`BarFunctionDump`rsize_, System`BarFunctionDump`o:OptionsPattern[]] := Block[{System`BarFunctionDump`min, System`BarFunctionDump`max, System`BarFunctionDump`rmin, System`BarFunctionDump`rmax, System`BarFunctionDump`style, System`BarFunctionDump`minimage, System`BarFunctionDump`maximage}, System`BarFunctionDump`style = \"Style\" \/. Options[{System`BarFunctionDump`o}, \"Style\"]; System`BarFunctionDump`min = Min[System`BarFunctionDump`size]; System`BarFunctionDump`rmin = Min[Last[System`BarFunctionDump`rsize]]; System`BarFunctionDump`max = Max[System`BarFunctionDump`size]; System`BarFunctionDump`rmax = Max[Last[System`BarFunctionDump`rsize]]; If[Head[System`BarFunctionDump`f] === ChartElementDataFunction, Switch[System`BarFunctionDump`f[[1]], \"MarkerBubble3D\", System`BarFunctionDump`minimage = System`BarFunctionDump`MarkerBubble3D[{{-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {0, System`BarFunctionDump`min}}, {1, 1, 1, 1}, {}, {If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"]], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"MarkerColor\"], Options[System`BarFunctionDump`f, \"MarkerColor\"], \"MarkerColor\" -> \"Yellow\"]}]; System`BarFunctionDump`maximage = System`BarFunctionDump`MarkerBubble3D[{{-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {0, System`BarFunctionDump`max}}, {1, 1, 1, 1}, {}, {If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"]], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"MarkerColor\"], Options[System`BarFunctionDump`f, \"MarkerColor\"], \"MarkerColor\" -> \"Yellow\"]}], \"ErrorBubble3D\", System`BarFunctionDump`minimage = System`BarFunctionDump`ErrorBubble3D[{{-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {0, System`BarFunctionDump`min}}, {1, 1, 1, 1, 1, 1}, {0.3, 0.3, 0.3}, {If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"], \"Shape\" -> \"Sphere\"], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"ErrorColor\"], Options[System`BarFunctionDump`f, \"ErrorColor\"], \"ErrorColor\" -> Red], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"ErrorStyle\"], Options[System`BarFunctionDump`f, \"ErrorStyle\"], \"ErrorStyle\" -> \"T\"], \"Filled\" -> True}]; System`BarFunctionDump`maximage = System`BarFunctionDump`ErrorBubble3D[{{-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {0, System`BarFunctionDump`max}}, {1, 1, 1, 1, 1, 1}, {0.3, 0.3, 0.3}, {If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"], \"Shape\" -> \"Sphere\"], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"ErrorColor\"], Options[System`BarFunctionDump`f, \"ErrorColor\"], \"ErrorColor\" -> Red], If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"ErrorStyle\"], Options[System`BarFunctionDump`f, \"ErrorStyle\"], \"ErrorStyle\" -> \"T\"], \"Filled\" -> True}], _ | \"Bubble3D\", System`BarFunctionDump`minimage = System`BarFunctionDump`BasicBubble3D[{{-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {0, System`BarFunctionDump`min}}, {1, 1, 1, 1}, {}, If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"]]]; System`BarFunctionDump`maximage = System`BarFunctionDump`BasicBubble3D[{{-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {0, System`BarFunctionDump`max}}, {1, 1, 1, 1}, {}, If[ !StringFreeQ[ToString[System`BarFunctionDump`f], \"Shape\"], Options[System`BarFunctionDump`f, \"Shape\"]]]], Switch[System`BarFunctionDump`f, Charting`AutomaticBubble3D, System`BarFunctionDump`minimage = System`BarFunctionDump`f[{{-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {0, System`BarFunctionDump`min}}, {1, 1, 1, 1}, {}]; System`BarFunctionDump`maximage = System`BarFunctionDump`f[{{-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {0, System`BarFunctionDump`max}}, {1, 1, 1, 1}, {}], _Charting`PictorialBubble3D, System`BarFunctionDump`minimage = System`BarFunctionDump`f[{{-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {0, System`BarFunctionDump`min}}, {1, 1, 1, 1}, {}]; System`BarFunctionDump`maximage = System`BarFunctionDump`f[{{-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {0, System`BarFunctionDump`max}}, {1, 1, 1, 1}, {}], _, System`BarFunctionDump`minimage = System`BarFunctionDump`f[{{-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {-(System`BarFunctionDump`min\/2), System`BarFunctionDump`min\/2}, {0, System`BarFunctionDump`min}}, {1, 1, 1, 1}, {}]; System`BarFunctionDump`maximage = System`BarFunctionDump`f[{{-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {-(System`BarFunctionDump`max\/2), System`BarFunctionDump`max\/2}, {0, System`BarFunctionDump`max}}, {1, 1, 1, 1}, {}]]]; Graphics3D[{{Cuboid[{0, -0.3, -0.01}, {2*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max + System`BarFunctionDump`max\/(2*Sqrt[3]), 0.8, -0.001}]}, Line[{{{0, 0, 0}, {2*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max, 0, 0}}}], {System`BarFunctionDump`style, Specularity[White, 20], Translate[System`BarFunctionDump`minimage, {{2*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`min - System`BarFunctionDump`min\/(2*Sqrt[3]), 0, 0}}]}, Text[System`BarFunctionDump`rmin, {2*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`min - System`BarFunctionDump`min\/(2*Sqrt[3]), 0, -0.008}, {0, 1}], {System`BarFunctionDump`style, Specularity[White, 20], Translate[System`BarFunctionDump`maximage, {{2*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max - System`BarFunctionDump`max\/(2*Sqrt[3]), 0, 0}}]}, Text[System`BarFunctionDump`rmax, {2*(1\/2 + 1\/Sqrt[3])*System`BarFunctionDump`max - System`BarFunctionDump`max\/(2*Sqrt[3]), 0, -0.008}, {0, 1}]}, ViewPoint -> {0.3, -5, 0.4}, ImageSize -> 110, Boxed -> False, Axes -> False, Options[System`BarFunctionDump`o, Lighting]]]\nChartElementData[System`BarFunctionDump`f_, \"LegendImage3D\", System`BarFunctionDump`shape_, System`BarFunctionDump`size_, System`BarFunctionDump`o:OptionsPattern[]] := Charting`noShow[ChartElementData[System`BarFunctionDump`f, \"LegendImage3D\", If[StringMatchQ[ToString[System`BarFunctionDump`f], \"*Shape*\"], \"Shape\" \/. Options[System`BarFunctionDump`f, \"Shape\"], \"Sphere\"], System`BarFunctionDump`o], Switch[System`BarFunctionDump`size, Tiny, ImageSize -> {15, 15}, Small, ImageSize -> {20, 20}, Large, ImageSize -> {45, 45}, _ | Medium, ImageSize -> {30, 30}]]\nChartElementData[\"Rectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"RoundingRadius\" -> 0}]] := System`BarFunctionDump`BasicBar\nChartElementData[\"TextureRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"RoundingRadius\" -> 0}]] := System`BarFunctionDump`TextureBar\nChartElementData[\"DottedRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`DottedBar\nChartElementData[\"DiscreteRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"RoundingRadius\" -> 0, \"ExtentSize\" -> 1\/2}]] := System`BarFunctionDump`DiscreteBasicBar\nChartElementData[\"TimelineRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"ArrowSize\" -> 0.3, \"Side\" -> \"Single\"}]] := System`BarFunctionDump`TimelineBar\nChartElementData[\"TimelineElement\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"ArrowSize\" -> 0.3, \"Side\" -> \"Single\"}]] := System`BarFunctionDump`TimelineElement\nChartElementData[\"TimelineBubbleLabel\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`TimelineBubbleLabel\nChartElementData[\"TimelineListLabel\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`TimelineListLabel\nChartElementData[\"TimelineArc\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`TimelineArc\nChartElementData[\"TimelineFilling\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`TimelineFilling\nChartElementData[\"TimelineIndex\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"ArrowSize\" -> 0.3, \"Side\" -> \"Single\"}]] := System`BarFunctionDump`TimelineIndex\nChartElementData[\"ThreeLineBreak\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"RoundingRadius\" -> 0}]] := System`BarFunctionDump`TLBBar\nChartElementData[\"RenkoLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"GradientOrigin\" -> Automatic}]] := System`BarFunctionDump`RenkoBar\nChartElementData[\"SimpleLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"GradientOrigin\" -> Automatic}]] := System`BarFunctionDump`SimpleLineBar\nChartElementData[\"ArrowRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"TaperRatio\" -> 0, \"ArrowheadAngle\" -> 60, \"ArrowWidth\" -> 0.6}]] := System`BarFunctionDump`ArrowBar\nChartElementData[\"StripedRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"Spacing\" -> 1, \"SpacingStyle\" -> Opacity[0]}]] := System`BarFunctionDump`StripedBar\nChartElementData[\"Arrow\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"Arrowheads\" -> 0}]] := System`BarFunctionDump`ArrowDiscrete\nChartElementData[\"Stem\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`StemDiscrete\nChartElementData[\"PointStem\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`PointStemDiscrete\nChartElementData[\"PointLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`PointLineDiscrete\nChartElementData[\"Line\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`LineDiscrete\nChartElementData[\"Point\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`PointDiscrete\nChartElementData[\"LeftEndedLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`LeftEndedLineDiscrete\nChartElementData[\"RightEndedLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`RightEndedLineDiscrete\nChartElementData[\"OpenEndedLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`OpenEndedLineDiscrete\nChartElementData[\"DoubleEndedLine\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`DoubleEndedLineDiscrete\nChartElementData[\"LeftEndedRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`LeftEndedRectangleDiscrete\nChartElementData[\"RightEndedRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`RightEndedRectangleDiscrete\nChartElementData[\"OpenEndedRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`OpenEndedRectangleDiscrete\nChartElementData[\"DoubleEndedRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`DoubleEndedRectangleDiscrete\nChartElementData[\"LineRectangle\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`LineRectangleDiscrete\nChartElementData[\"Arrow3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{\"Arrowheads\" -> 0}]] := System`BarFunctionDump`ArrowDiscrete3D\nChartElementData[\"Stem3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`StemDiscrete3D\nChartElementData[\"PointStem3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`PointStemDiscrete3D\nChartElementData[\"Plane3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`PlaneDiscrete3D\nChartElementData[\"PointPlane3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`PointPlaneDiscrete3D\nChartElementData[\"Point3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[]] := System`BarFunctionDump`PointDiscrete3D\nChartElementData[\"PlaneCube3D\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`PlaneCubeDiscrete3D\nChartElementData[\"Trapezoid\", \"InternalChartElementFunction\", System`BarFunctionDump`o:OptionsPattern[{}]] := System`BarFunctionDump`BasicTrap\nChartElementData[\"Sector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`BasicSector[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"Sector\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`BasicSector[#1, {}] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Sector\"]]]]}]]\nChartElementData[\"OscillatingSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`OscillatingRadius[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"OscillatingSector\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`angFreq = 40, System`BarFunctionDump`radAmp = 0.03}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`OscillatingRadius[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"AngularFrequency\"] . Slider[Dynamic[System`BarFunctionDump`angFreq], {0, 100}]}], Row[{Text[\"RadialAmplitude\"] . Slider[Dynamic[System`BarFunctionDump`radAmp], {0, 1}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"OscillatingSector\", \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp]]]]}]]\nChartElementData[\"NoiseSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`NoiseRadius[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"NoiseSector\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`angFreq = 40, System`BarFunctionDump`radAmp = 0.03}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`NoiseRadius[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"AngularFrequency\"] . Slider[Dynamic[System`BarFunctionDump`angFreq], {0, 100}]}], Row[{Text[\"RadialAmplitude\"] . Slider[Dynamic[System`BarFunctionDump`radAmp], {0, 1}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"NoiseSector\", \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp]]]]}]]\nChartElementData[\"SquareWaveSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`SquareWaveRadius[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"SquareWaveSector\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`angFreq = 40, System`BarFunctionDump`radAmp = 0.03}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`SquareWaveRadius[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"AngularFrequency\"] . Slider[Dynamic[System`BarFunctionDump`angFreq], {0, 100}]}], Row[{Text[\"RadialAmplitude\"] . Slider[Dynamic[System`BarFunctionDump`radAmp], {0, 1}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"SquareWaveSector\", \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp]]]]}]]\nChartElementData[\"TriangleWaveSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`TriangleWaveRadius[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"TriangleWaveSector\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`angFreq = 40, System`BarFunctionDump`radAmp = 0.03}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`TriangleWaveRadius[#1, {}, \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"AngularFrequency\"] . Slider[Dynamic[System`BarFunctionDump`angFreq], {0, 100}]}], Row[{Text[\"RadialAmplitude\"] . Slider[Dynamic[System`BarFunctionDump`radAmp], {0, 1}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TriangleWaveSector\", \"AngularFrequency\" -> System`BarFunctionDump`angFreq, \"RadialAmplitude\" -> System`BarFunctionDump`radAmp]]]]}]]\nChartElementData[\"GradientSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{(System`BarFunctionDump`GradientSector[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"GlassSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{(System`BarFunctionDump`GlassSector[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"GlassReflectionSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{System`BarFunctionDump`GlassReflectionSector[{{0, 2*Pi}, {0*_, 1}}, System`BarFunctionDump`o]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"PlateauSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{(System`BarFunctionDump`PlateauSector[#1, {}, System`BarFunctionDump`o, \"Color\" -> Green, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"GrowingSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`GrowingSector[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"BezelSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{(System`BarFunctionDump`BezelSector[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"TextureSector\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`TextureRadius[#1, {}, System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]\nChartElementData[\"TextureSector\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`place = \"StretchToFill\"}, Column[{Dynamic[Graphics[{EdgeForm[Black], Transpose[{System`BarFunctionDump`$sectorstyles, (System`BarFunctionDump`TextureRadius[#1, {}, \"Placement\" -> System`BarFunctionDump`place] & ) \/@ System`BarFunctionDump`$simplesectors}]}, System`BarFunctionDump`$imagesectoroptions]], Row[{Text[\"Placement\"] . PopupMenu[Dynamic[System`BarFunctionDump`place], {\"StretchToFill\", \"Fill\", \"Tile\"}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"TextureSector\", \"Placement\" -> System`BarFunctionDump`place]]]]}]]\nChartElementData[\"PolarMarker\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Circle[{0, 0}*0.5], Transpose[{System`BarFunctionDump`$markerstyles, (System`BarFunctionDump`BasicPolarMarker[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simplemarker}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"PolarMarker\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{}, Column[{Dynamic[Graphics[{Circle[{0, 0}*0.5], Transpose[{System`BarFunctionDump`$markerstyles, (System`BarFunctionDump`BasicPolarMarker[#1, #1[[1]][[1]]] & ) \/@ System`BarFunctionDump`$simplemarker}]}, System`BarFunctionDump`$imagegaugeoptions]], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Marker\"]]]]}]]\nChartElementData[\"Marker\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Line[{{0, 0}, {1, 0}}], {Array[Hue[0 + GoldenRatio*(#1 - 1), 0.7, 0.7] & , 1], System`BarFunctionDump`BasicMarker[{{0.2, 0.4}, {0, 0.2}}, System`BarFunctionDump`o]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {-0.1, 0.3}}, PlotRangePadding -> None, PlotRangeClipping -> True]\nChartElementData[\"Marker\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`rot = 0}, Column[{Dynamic[Graphics[{Line[{{0, 0}, {1, 0}}], {Array[Hue[0 + GoldenRatio*(#1 - 1), 0.7, 0.7] & , 1], System`BarFunctionDump`BasicMarker[{{0.2, 0.4}, {0, 0.2}}, \"MarkerRotation\" -> System`BarFunctionDump`rot], AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {-0.1, 0.3}}, PlotRangePadding -> None, PlotRangeClipping -> True}}]], Row[{Text[\"MarkerRotation\"] . Slider[Dynamic[System`BarFunctionDump`rot], {0, 2*Pi}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Marker\", \"MarkerRotation\" -> System`BarFunctionDump`rot]]]]}]]\nChartElementData[\"BarMarker\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Line[{{0, 0}, {1, 0}}], {Array[Hue[0 + GoldenRatio*(#1 - 1), 0.7, 0.7] & , 1], System`BarFunctionDump`BasicBarMarker[{{0.2, 0.4}, {0, 0.2}}, System`BarFunctionDump`o]}}, AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {-0.1, 0.3}}, PlotRangePadding -> None, PlotRangeClipping -> True]\nChartElementData[\"BarMarker\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`rot = 0, System`BarFunctionDump`w = 0.15}, Column[{Dynamic[Graphics[{Line[{{0, 0}, {1, 0}}], {Array[Hue[0 + GoldenRatio*(#1 - 1), 0.7, 0.7] & , 1], System`BarFunctionDump`BasicBarMarker[{{0.2, 0.4}, {0, 0.2}}, \"MarkerRotation\" -> System`BarFunctionDump`rot, \"MarkerWidth\" -> System`BarFunctionDump`w], AxesOrigin -> {0, 0}, PlotRange -> {{0, 1}, {-0.1, 0.3}}, PlotRangePadding -> None, PlotRangeClipping -> True}}]], Row[{Text[\"MarkerRotation\"] . Slider[Dynamic[System`BarFunctionDump`rot], {0, 2*Pi}]}], Row[{Text[\"MarkerWidth\"] . Slider[Dynamic[System`BarFunctionDump`w], {0, 2*Pi}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementData[\"Marker\", \"MarkerRotation\" -> System`BarFunctionDump`rot, \"MarkerWidth\" -> System`BarFunctionDump`w]]]]}]]\nChartElementData[\"CylinderMarker\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[None], (System`BarFunctionDump`smoothLiquidMarker[##1, System`BarFunctionDump`o] & ) @@ System`BarFunctionDump`$simplerecmarker}, System`BarFunctionDump`$imagegaugerecoptions]\nChartElementData[\"CylinderMarker\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`side = Left, System`BarFunctionDump`div = True}, Column[{Dynamic[Graphics[{EdgeForm[None], (System`BarFunctionDump`smoothLiquidMarker[##1, \"LightingSide\" -> System`BarFunctionDump`side, \"Divider\" -> System`BarFunctionDump`div] & ) @@ System`BarFunctionDump`$simplerecmarker}, System`BarFunctionDump`$imagegaugerecoptions]], Row[{Text[\"LightingSide\"] . SetterBar[Dynamic[System`BarFunctionDump`side], {Left, Right}]}], Row[{Text[\"Divider\"] . SetterBar[Dynamic[System`BarFunctionDump`div], {True, False}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"CylinderMarker\", \"LightingSide\" -> System`BarFunctionDump`side, \"Divider\" -> System`BarFunctionDump`div]]]]}]]\nChartElementData[\"LiquidMarker\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{EdgeForm[None], (System`BarFunctionDump`LiquidMarker[##1, System`BarFunctionDump`o] & ) @@ System`BarFunctionDump`$simplerecmarker}, System`BarFunctionDump`$imagegaugerecoptions]\nChartElementData[\"LiquidMarker\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`side = Left, System`BarFunctionDump`div = True, System`BarFunctionDump`rad = 1.5}, Column[{Dynamic[Graphics[{EdgeForm[None], (System`BarFunctionDump`LiquidMarker[##1, \"LightingSide\" -> System`BarFunctionDump`side, \"Divider\" -> System`BarFunctionDump`div, \"BulbRadius\" -> System`BarFunctionDump`rad] & ) @@ System`BarFunctionDump`$simplerecmarker}, System`BarFunctionDump`$imagegaugerecoptions]], Row[{Text[\"LightingSide\"] . SetterBar[Dynamic[System`BarFunctionDump`side], {Left, Right}]}], Row[{Text[\"Divider\"] . SetterBar[Dynamic[System`BarFunctionDump`div], {True, False}]}], Row[{Text[\"BulbRadius\"] . Slider[Dynamic[System`BarFunctionDump`rad], {1, 3}]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"LiquidMarker\", \"LightingSide\" -> System`BarFunctionDump`side, \"Divider\" -> System`BarFunctionDump`div, \"BulbRadius\" -> System`BarFunctionDump`rad]]]]}]]\nChartElementData[\"BasicWedgeNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBasicWedgeNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"BasicWedgeNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.55, System`BarFunctionDump`outrad = 0.125, System`BarFunctionDump`color = White, System`BarFunctionDump`width = 0.666}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBasicWedgeNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"BasicWedgeNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"BevelNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBevelNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"BevelNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.5, System`BarFunctionDump`outrad = 0.13, System`BarFunctionDump`color = Gray, System`BarFunctionDump`width = 0.8}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBevelNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"BevelNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"BezelBevelNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBezelBevelNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"BezelBevelNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`bezrot = 0, System`BarFunctionDump`inrad = 0.33, System`BarFunctionDump`outrad = 0.165, System`BarFunctionDump`color = GrayLevel[0.3], System`BarFunctionDump`width = 0.66}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBezelBevelNeedle[#1, #1[[1]][[1]], \"BezelRotation\" -> System`BarFunctionDump`bezrot, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"BezelRotation\"] . Slider[Dynamic[System`BarFunctionDump`bezrot], {0, 2*Pi}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"BezelBevelNeedle\", \"BezelRotation\" -> System`BarFunctionDump`bezrot, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"BezelFlatNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBezelFlatNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"BezelFlatNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`bezrot = 0, System`BarFunctionDump`inrad = 0.4, System`BarFunctionDump`outrad = 0.2, System`BarFunctionDump`color = GrayLevel[0.3], System`BarFunctionDump`width = 0.5, System`BarFunctionDump`tl = 0}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawBezelFlatNeedle[#1, #1[[1]][[1]], \"BezelRotation\" -> System`BarFunctionDump`bezrot, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"BezelRotation\"] . Slider[Dynamic[System`BarFunctionDump`bezrot], {0, 2*Pi}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0, 0.5}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"BezelFlatNeedle\", \"BezelRotation\" -> System`BarFunctionDump`bezrot, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"DetailArrowNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawDetailArrowNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"DetailArrowNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`tailang = 0.9, System`BarFunctionDump`inrad = 0.25, System`BarFunctionDump`outrad = 0.2, System`BarFunctionDump`color = RGBColor[0.466667, 0.14, 0.14], System`BarFunctionDump`width = 0.25}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawDetailArrowNeedle[#1, #1[[1]][[1]], \"TailAngle\" -> System`BarFunctionDump`tailang, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"TailAngle\"] . Slider[Dynamic[System`BarFunctionDump`tailang], {0, Pi}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"DetailArrowNeedle\", \"TailAngle\" -> System`BarFunctionDump`tailang, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"FlatArrowNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawFlatArrowNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"FlatArrowNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`tailang = 0.6, System`BarFunctionDump`inrad = 0.5, System`BarFunctionDump`outrad = 0.1, System`BarFunctionDump`color = RGBColor[1., 1., 1.], System`BarFunctionDump`width = 0.4}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawFlatArrowNeedle[#1, #1[[1]][[1]], \"TailAngle\" -> System`BarFunctionDump`tailang, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"TailAngle\"] . Slider[Dynamic[System`BarFunctionDump`tailang], {0, Pi}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"FlatArrowNeedle\", \"TailAngle\" -> System`BarFunctionDump`tailang, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"FlatProfileNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawFlatProfileNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"FlatProfileNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.4, System`BarFunctionDump`outrad = 0.1, System`BarFunctionDump`color = Gray, System`BarFunctionDump`width = 1, System`BarFunctionDump`tl = 0}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawFlatProfileNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0, 0.5}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"FlatProfileNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"ShinyHubNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawShinyHubNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"ShinyHubNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`bezrot = 0, System`BarFunctionDump`inrad = 0.825, System`BarFunctionDump`outrad = 0.4, System`BarFunctionDump`color = LightGray, System`BarFunctionDump`width = 0.75, System`BarFunctionDump`length = 0.25}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawShinyHubNeedle[#1, #1[[1]][[1]], \"BezelRotation\" -> System`BarFunctionDump`bezrot, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"NeedleLength\" -> System`BarFunctionDump`length] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"BezelRotation\"] . Slider[Dynamic[System`BarFunctionDump`bezrot], {0, 2*Pi - 0.05}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"NeedleLength\"] . Slider[Dynamic[System`BarFunctionDump`length], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"ShinyHubNeedle\", \"BezelRotation\" -> System`BarFunctionDump`bezrot, \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"NeedleLength\" -> System`BarFunctionDump`length]]]]}]]\nChartElementData[\"ThinArrowNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawThinArrowNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"ThinArrowNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.667, System`BarFunctionDump`outrad = 0.125, System`BarFunctionDump`color = White}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawThinArrowNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"ThinArrowNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color]]]]}]]\nChartElementData[\"TwoToneNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawTwoToneNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"TwoToneNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.62, System`BarFunctionDump`outrad = 0.21, System`BarFunctionDump`color = GrayLevel[0.3], System`BarFunctionDump`width = 0.5}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawTwoToneNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"TwoToneNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"SpeedometerNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawSpeedometerNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"SpeedometerNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0, System`BarFunctionDump`outrad = 0.12, System`BarFunctionDump`color = GrayLevel[0.3], System`BarFunctionDump`width = 0.5, System`BarFunctionDump`tl = 0.3}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawSpeedometerNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.25}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0, 0.5}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"SpeedometerNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"StopWatchNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawStopWatchNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"StopWatchNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.5, System`BarFunctionDump`outrad = 0.08, System`BarFunctionDump`color = GrayLevel[0.2], System`BarFunctionDump`width = 0.5, System`BarFunctionDump`tl = 0.3333}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawStopWatchNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.25}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0.2, 0.66}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0.1, 0.5}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"StopWatchNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"SpeedometerRaisedNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawSpeedometerRaisedNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"SpeedometerRaisedNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.85, System`BarFunctionDump`outrad = 0.25, System`BarFunctionDump`color = GrayLevel[0.25], System`BarFunctionDump`width = 0.35, System`BarFunctionDump`tl = 0.3333}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawSpeedometerRaisedNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.3333}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 0.75}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0, 0.5}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"SpeedometerRaisedNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"CompassNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawCompassNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"CompassNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.75, System`BarFunctionDump`outrad = 0.2, System`BarFunctionDump`tailColor = White, System`BarFunctionDump`color = GrayLevel[0.7], System`BarFunctionDump`width = 0.75}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawCompassNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"TailColor\" -> System`BarFunctionDump`tailColor, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.3333}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"TailColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`tailColor]]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"CompassNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"TailColor\" -> System`BarFunctionDump`tailColor, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"CompassFlatNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawCompassFlatNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"CompassFlatNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.6, System`BarFunctionDump`outrad = 0.2, System`BarFunctionDump`tailColor = GrayLevel[0.7], System`BarFunctionDump`color = White, System`BarFunctionDump`width = 0.75}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawCompassFlatNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"TailColor\" -> System`BarFunctionDump`tailColor, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.3333}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1}]}], Row[{Text[\"TailColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`tailColor]]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"CompassFlatNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"TailColor\" -> System`BarFunctionDump`tailColor, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width]]]]}]]\nChartElementData[\"IndustrialNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawIndustrialNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"IndustrialNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.6, System`BarFunctionDump`outrad = 0.14, System`BarFunctionDump`color = GrayLevel[0.5], System`BarFunctionDump`width = 0.45, System`BarFunctionDump`tl = 0.5}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawIndustrialNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.3}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0, 1.05}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0.3333, 0.75}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"IndustrialNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"OpenNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawOpenNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]\nChartElementData[\"OpenNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.55, System`BarFunctionDump`outrad = 0.17, System`BarFunctionDump`color = GrayLevel[0.5], System`BarFunctionDump`width = 0.6, System`BarFunctionDump`tl = 0.27}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawOpenNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, System`BarFunctionDump`$imagegaugeoptions]], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.3}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width], {0.25, 1}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl], {0, 0.5}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[ChartElementDataFunction[\"OpenNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width, \"TailLength\" -> System`BarFunctionDump`tl]]]]}]]\nChartElementData[\"ClockNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> 0.4, \"HubOuterRadius\" -> 0.08, \"HubColor\" -> White, \"NeedleWidth\" -> 1, \"TailLength\" -> 0, \"NeedleLength\" -> 0.75], 1\/5.5 - (2*Pi)\/3, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> 0.4, \"HubOuterRadius\" -> 0.08, \"HubColor\" -> White, \"NeedleWidth\" -> 2\/3, \"TailLength\" -> 0, \"NeedleLength\" -> 1], (1*Pi)\/5.5, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> 0.4, \"HubOuterRadius\" -> 0.08, \"HubColor\" -> White, \"NeedleWidth\" -> 1\/3, \"TailLength\" -> 0.2, \"NeedleLength\" -> 1], 1\/5.5 - (1*Pi)\/3, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, {PlotRange -> 1, AxesOrigin -> {0, 0}, PlotRangePadding -> None}]\nChartElementData[\"ClockNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.4, System`BarFunctionDump`outrad = 0.08, System`BarFunctionDump`color = White, System`BarFunctionDump`width = {0.75, 0.7, 0.35}, System`BarFunctionDump`tl = {0, 0, 0.2}, System`BarFunctionDump`nLength = {0.7, 1, 1}, System`BarFunctionDump`needlenum = 1}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width[[1]], \"TailLength\" -> System`BarFunctionDump`tl[[1]], \"NeedleLength\" -> System`BarFunctionDump`nLength[[1]]], 1\/5.5 - (2*Pi)\/3, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width[[2]], \"TailLength\" -> System`BarFunctionDump`tl[[2]], \"NeedleLength\" -> System`BarFunctionDump`nLength[[2]]], (1*Pi)\/5.5, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleWidth\" -> System`BarFunctionDump`width[[3]], \"TailLength\" -> System`BarFunctionDump`tl[[3]], \"NeedleLength\" -> System`BarFunctionDump`nLength[[3]]], 1\/5.5 - (1*Pi)\/3, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, {PlotRange -> 1, AxesOrigin -> {0, 0}, PlotRangePadding -> None}]], Row[{Text[\"Needle\"] . SetterBar[Dynamic[System`BarFunctionDump`needlenum], {1 -> \"Hour\", 2 -> \"Minute\", 3 -> \"Second\"}]}], Row[{Text[\"NeedleLength\"] . Slider[Dynamic[System`BarFunctionDump`nLength[[System`BarFunctionDump`needlenum]]], {0.5, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width[[System`BarFunctionDump`needlenum]]], {0, 1}]}], Row[{Text[\"TailLength\"] . Slider[Dynamic[System`BarFunctionDump`tl[[System`BarFunctionDump`needlenum]]], {0, 0.5}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.3}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[{ChartElementDataFunction[\"ClockNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[1]], \"NeedleWidth\" -> System`BarFunctionDump`width[[1]], \"TailLength\" -> System`BarFunctionDump`tl[[1]]], ChartElementDataFunction[\"ClockNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[2]], \"NeedleWidth\" -> System`BarFunctionDump`width[[2]], \"TailLength\" -> System`BarFunctionDump`tl[[2]]], ChartElementDataFunction[\"ClockNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[3]], \"NeedleWidth\" -> System`BarFunctionDump`width[[3]], \"TailLength\" -> System`BarFunctionDump`tl[[3]]]}]]]}]]\nChartElementData[\"VintageClockNeedle\", \"Image\", System`BarFunctionDump`o:OptionsPattern[]] := Graphics[{Transpose[{System`BarFunctionDump`$needlestyles, (System`BarFunctionDump`drawVintageClockNeedle[#1, #1[[1]][[1]], System`BarFunctionDump`o] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, {PlotRange -> 1, AxesOrigin -> {0, 0}, PlotRangePadding -> None}]\nChartElementData[\"VintageClockNeedle\", \"Manipulate\", System`BarFunctionDump`o:OptionsPattern[]] := DynamicModule[{System`BarFunctionDump`inrad = 0.5, System`BarFunctionDump`outrad = 0.08, System`BarFunctionDump`color = GrayLevel[0.2], System`BarFunctionDump`nLength = {0.7, 1, 1}, System`BarFunctionDump`width = {0.8, 0.7, 0.4}, System`BarFunctionDump`flarelength = {0.5, 0.35, 0.2}, System`BarFunctionDump`flarewidth = {0.12, 0.12, 0}, System`BarFunctionDump`needlenum = 1}, Column[{Dynamic[Graphics[{EdgeForm[None], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawVintageClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[1]], \"NeedleWidth\" -> System`BarFunctionDump`width[[1]], \"FlareLength\" -> System`BarFunctionDump`flarelength[[1]], \"FlareWidth\" -> System`BarFunctionDump`flarewidth[[1]]], 1\/5.5 - (2*Pi)\/3, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawVintageClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[2]], \"NeedleWidth\" -> System`BarFunctionDump`width[[2]], \"FlareLength\" -> System`BarFunctionDump`flarelength[[2]], \"FlareWidth\" -> System`BarFunctionDump`flarewidth[[2]]], (1*Pi)\/5.5, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}], Transpose[{System`BarFunctionDump`$needlestyles, (Rotate[System`BarFunctionDump`drawVintageClockNeedle[#1, #1[[1]][[1]], \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[3]], \"NeedleWidth\" -> System`BarFunctionDump`width[[3]], \"FlareLength\" -> System`BarFunctionDump`flarelength[[3]], \"FlareWidth\" -> System`BarFunctionDump`flarewidth[[3]]], 1\/5.5 - (1*Pi)\/3, {0, 0}] & ) \/@ System`BarFunctionDump`$simpleneedle}]}, {PlotRange -> 1, AxesOrigin -> {0, 0}, PlotRangePadding -> None}]], Row[{Text[\"Needle\"] . SetterBar[Dynamic[System`BarFunctionDump`needlenum], {1 -> \"Hour\", 2 -> \"Minute\", 3 -> \"Second\"}]}], Row[{Text[\"NeedleLength\"] . Slider[Dynamic[System`BarFunctionDump`nLength[[System`BarFunctionDump`needlenum]]], {0.5, 1}]}], Row[{Text[\"NeedleWidth\"] . Slider[Dynamic[System`BarFunctionDump`width[[System`BarFunctionDump`needlenum]]], {0, 1}]}], Row[{Text[\"FlareLength\"] . Slider[Dynamic[System`BarFunctionDump`flarelength[[System`BarFunctionDump`needlenum]]], {0.2, 0.5}]}], Row[{Text[\"FlareWidth\"] . Slider[Dynamic[System`BarFunctionDump`flarewidth[[System`BarFunctionDump`needlenum]]], {0, 0.2}]}], Row[{Text[\"HubInnerRadius\"] . Slider[Dynamic[System`BarFunctionDump`inrad], {0, 1}]}], Row[{Text[\"HubOuterRadius\"] . Slider[Dynamic[System`BarFunctionDump`outrad], {0, 0.15}]}], Row[{Text[\"HubColor\"] . ColorSlider[Dynamic[System`BarFunctionDump`color]]}], Button[\"Insert\", NotebookWrite[InputNotebook[], ToBoxes[{ChartElementDataFunction[\"VintageClockNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[1]], \"NeedleWidth\" -> System`BarFunctionDump`width[[1]], \"FlareLength\" -> System`BarFunctionDump`flarelength[[1]], \"FlareWidth\" -> System`BarFunctionDump`flarewidth[[1]]], ChartElementDataFunction[\"VintageClockNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[2]], \"NeedleWidth\" -> System`BarFunctionDump`width[[2]], \"FlareLength\" -> System`BarFunctionDump`flarelength[[2]], \"FlareWidth\" -> System`BarFunctionDump`flarewidth[[2]]], ChartElementDataFunction[\"VintageClockNeedle\", \"HubInnerRadius\" -> System`BarFunctionDump`inrad, \"HubOuterRadius\" -> System`BarFunctionDump`outrad, \"HubColor\" -> System`BarFunctionDump`color, \"NeedleLength\" -> System`BarFunctionDump`nLength[[3]], \"NeedleWidth\" -> System`BarFunctionDump`width[[3]], \"FlareLength\" -> System`BarFunctionDump`flarelength[[3]], \"FlareWidth\" -> System`BarFunctionDump`flarewidth[[3]]]}]]]}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ChartElementData",
	"ChartElementDataFunction":"ObjectType: Symbol\nUsage: System`ChartElementDataFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: ChartElementDataFunction[(System`BarFunctionDump`name_)?System`BarFunctionDump`chartElementDataQ, System`BarFunctionDump`o:OptionsPattern[]][System`BarFunctionDump`args__] := System`BarFunctionDump`applyChartElementFunction[ChartElementData[System`BarFunctionDump`name, \"InternalChartElementFunction\"]][System`BarFunctionDump`args, System`BarFunctionDump`o]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ChartElementDataFunction",
	"ChebyshevDistance":"ObjectType: Symbol\nUsage: ChebyshevDistance[u, v] gives the Chebyshev or sup norm distance between vectors u and v.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ChebyshevDistance",
	"CheckAll":"ObjectType: Symbol\nUsage: CheckAll[expr, f] evaluates expr and returns f[expr, HoldComplete[control , …]] where the control  expressions are aborts, throws, or other flow control commands currently being executed (but stopped by CheckAll).\n                                                                         1                       i\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`CheckAll",
	"CheckboxBox":"ObjectType: Symbol\nUsage: System`CheckboxBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[CheckboxBox] ^:= {Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> False, DefaultBaseStyle -> \"Checkbox\", Enabled -> Automatic, ImageMargins -> 0}\nOptions[CheckboxBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[CheckboxBox]]\nAbsoluteOptions[CheckboxBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[CheckboxBox]]\nOptions[CheckboxBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[CheckboxBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, CheckboxBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[CheckboxBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[CheckboxBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, CheckboxBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[CheckboxBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, CheckboxBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[CheckboxBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_CheckboxBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_CheckboxBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`CheckboxBox",
	"CheckboxBoxOptions":"ObjectType: Symbol\nUsage: CheckboxBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for CheckboxBox objects.\n                         1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CheckboxBoxOptions",
	"CircleBox":"ObjectType: Symbol\nUsage: System`CircleBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`CircleBox",
	"ClassifierInformation":"ObjectType: Symbol\nUsage: ClassifierInformation[classifier] generates a report giving information on the classifier function classifier.ClassifierInformation[classifier, prop] gives information for classifier associated with property prop.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ClassifierInformation[MachineLearning`file125Other`PackagePrivate`args___] := (Message[ClassifierInformation::mlobs, ClassifierInformation, Information, 12]; Off[ClassifierInformation::mlobs]; Information[MachineLearning`file125Other`PackagePrivate`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ClassifierInformation",
	"ClipboardNotebook":"ObjectType: Symbol\nUsage: System`ClipboardNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ClipboardNotebook[] := MathLink`CallFrontEnd[FrontEnd`ClipboardNotebook[]]\nClipboardNotebook[System`FEDump`args___] := (ArgumentCountQ[ClipboardNotebook, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 0, 0]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ClipboardNotebook",
	"ClipFill":"ObjectType: Symbol\nUsage: ClipFill is an option for plotting functions that specifies what should be shown where curves or surfaces would extend beyond the plot range. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ClipFill",
	"ClockwiseContourIntegral":"ObjectType: Symbol\nUsage: System`ClockwiseContourIntegral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ClockwiseContourIntegral",
	"Closed":"ObjectType: Symbol\nUsage: System`Closed\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Closed",
	"ClosingAutoSave":"ObjectType: Symbol\nUsage: ClosingAutoSave is an option for notebooks that specifies whether a notebook is automatically saved when it is closed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ClosingAutoSave",
	"ClosingEvent":"ObjectType: Symbol\nUsage: System`ClosingEvent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ClosingEvent",
	"CloudConnections":"ObjectType: Symbol\nUsage: CloudConnections[] gives a list of cloud accounts that are authenticated.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CloudConnections[OptionsPattern[]] := Catch[Module[{CloudObject`Private`cbase = CloudObject`Private`handleInclusiveCBase[OptionValue[CloudBase], CloudConnections], CloudObject`Private`conns}, CloudObject`Private`conns = CloudObject`Private`storedCloudConnections[]; If[CloudObject`Private`cbase === All, CloudObject`Private`conns, Select[CloudObject`Private`conns, CloudObject`Private`cloudBaseSameQ[Lookup[#1, CloudBase], CloudObject`Private`cbase] & ]]], CloudObject`Private`BadOption]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CloudBase -> All}\nAttributes: {}\nFullName: System`CloudConnections",
	"CloudObjectDisplayFormat":"ObjectType: Symbol\nUsage: System`CloudObjectDisplayFormat\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CloudObjectDisplayFormat",
	"CloudObjectInformation":"ObjectType: Symbol\nUsage: CloudObjectInformation[obj] gives information about a cloud object.\nCloudObjectInformation[{obj, ...}] gives information about a list of objects.\nCloudObjectInformation[obj, \"field\"] gives the information for a specific field.\nCloudObjectInformation[obj, {field, ...}] limits the information to a selection of fields.\nCloudObjectInformation[{obj, ...}, {field, ...}] gets a selection of information for a list of objects.\nCloudObjectInformation[dir, \"DirectoryLevel\" -> 0] gives information about a directory. (This is the default.)\nCloudObjectInformation[dir, \"DirectoryLevel\" -> 1] gives information about all objects in a given directory (but not in subdirectories).\nCloudObjectInformation[dir, \"DirectoryLevel\" -> Infinity] gives information about all objects in a given directory subtree.\nCloudObjectInformation[type, {field, ...}] gives information about all objects of a given MIME type.\nCloudObjectInformation[type, field] gives a specific field of information about all objects of a given MIME type.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CloudObjectInformation[CloudObject`Private`failureObj_Failure, CloudObject`Private`arg___] := CloudObject`Private`failureObj\nCloudObjectInformation[CloudObject`Private`failureObjs:{_Failure..}] := CloudObject`Private`failureObjs\nCloudObjectInformation[CloudObject`Private`failureObjs:{_Failure..}, CloudObject`Private`arg___] := CloudObject`Private`failureObjs\nCloudObjectInformation[CloudObject`Private`obj_CloudObject, CloudObject`Private`opts:OptionsPattern[]] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`obj, CloudObjectInformation, CloudObject`Private`opts]\nCloudObjectInformation[CloudObject`Private`obj_CloudObject, \"UUID\"] := With[{CloudObject`Private`result = Quiet[CloudObject`Private`getCloudAndUUID[CloudObject`Private`obj]]}, If[MatchQ[CloudObject`Private`result, {_String, _?CloudObject`UUIDQ}], Last[CloudObject`Private`result], Message[CloudObjectInformation::cloudnf, CloudObject`Private`obj]; $Failed]]\nCloudObjectInformation[CloudObject`Private`obj_CloudObject, CloudObject`Private`property_String, CloudObject`Private`opts:OptionsPattern[]] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`obj, CloudObjectInformation, \"Elements\" -> CloudObject`Private`property, CloudObject`Private`opts]\nCloudObjectInformation[CloudObject`Private`obj_CloudObject, CloudObject`Private`properties:{_String..}, CloudObject`Private`opts:OptionsPattern[]] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`obj, CloudObjectInformation, \"Elements\" -> CloudObject`Private`properties, CloudObject`Private`opts]\nCloudObjectInformation[CloudObject`Private`uriwrapper:_URL | _Hyperlink, CloudObject`Private`rest___] := CloudObjectInformation[CloudObject[CloudObject`Private`uriwrapper], CloudObject`Private`rest]\nCloudObjectInformation[{}, ___] := {}\nCloudObjectInformation[CloudObject`Private`objects:{((_CloudObject | (_URL | _Hyperlink)) | _Failure)..}] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`objects, CloudObjectInformation]\nCloudObjectInformation[CloudObject`Private`objects:{((_CloudObject | (_URL | _Hyperlink)) | _Failure)..}, CloudObject`Private`property_String] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`objects, CloudObjectInformation, \"Elements\" -> CloudObject`Private`property]\nCloudObjectInformation[CloudObject`Private`objects:{((_CloudObject | (_URL | _Hyperlink)) | _Failure)..}, CloudObject`Private`properties:{_String..}] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`objects, CloudObjectInformation, \"Elements\" -> CloudObject`Private`properties]\nCloudObjectInformation[CloudObject`Private`type_String, CloudObject`Private`property_String] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`type, CloudObjectInformation, \"Elements\" -> CloudObject`Private`property]\nCloudObjectInformation[CloudObject`Private`type_String, CloudObject`Private`properties:{_String..}] := CloudObject`Private`cloudObjectInformation[CloudObject`Private`type, CloudObjectInformation, \"Elements\" -> CloudObject`Private`properties]\nCloudObjectInformation[PermissionsGroup[CloudObject`Private`uri_], CloudObject`Private`props___] := CloudObjectInformation[CloudObject[CloudObject`Private`uri], CloudObject`Private`props]\nCloudObjectInformation[CloudExpression[CloudObject`Private`uri_], CloudObject`Private`props___] := CloudObjectInformation[CloudObject[CloudObject`Private`uri], CloudObject`Private`props]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DirectoryLevel -> 0}\nAttributes: {}\nFullName: System`CloudObjectInformation",
	"CloudObjectInformationData":"ObjectType: Symbol\nUsage: System`CloudObjectInformationData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`a_CloudObjectInformationData, BoxForm`fmt_] ^:= BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt] \/; Refresh[BoxForm`UseTextFormattingQ, None]\nMakeBoxes[CloudObject`Private`data:CloudObjectInformationData[_Association], CloudObject`Private`fmt_] ^:= CloudObject`Private`MakeCloudObjectInformationDataBoxes[CloudObject`Private`data, CloudObject`Private`fmt]\nOptions: None\nAttributes: {}\nFullName: System`CloudObjectInformationData",
	"CloudUserID":"ObjectType: Symbol\nUsage: System`CloudUserID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CloudUserID",
	"Coarse":"ObjectType: Symbol\nUsage: System`Coarse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Coarse",
	"CoefficientDomain":"ObjectType: Symbol\nUsage: System`CoefficientDomain\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CoefficientDomain",
	"ColonForm":"ObjectType: Symbol\nUsage: ColonForm[a, b] prints as a : b.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ColonForm",
	"ColorOutput":"ObjectType: Symbol\nUsage: ColorOutput is an option for graphics functions that specifies the type of color output to produce. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ColorOutput",
	"ColorSelectorSettings":"ObjectType: Symbol\nUsage: ColorSelectorSettings is a global option that specifies settings for the Color dialog box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ColorSelectorSettings",
	"ColorSetterBox":"ObjectType: Symbol\nUsage: System`ColorSetterBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ColorSetterBox] ^:= {Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"ColorSetter\", Enabled -> Automatic, ImageMargins -> 0, ImageSize -> Automatic}\nOptions[ColorSetterBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ColorSetterBox]]\nAbsoluteOptions[ColorSetterBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ColorSetterBox]]\nOptions[ColorSetterBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[ColorSetterBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, ColorSetterBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[ColorSetterBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[ColorSetterBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, ColorSetterBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[ColorSetterBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, ColorSetterBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[ColorSetterBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_ColorSetterBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_ColorSetterBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`ColorSetterBox",
	"ColorSetterBoxOptions":"ObjectType: Symbol\nUsage: ColorSetterBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for ColorSetterBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ColorSetterBoxOptions",
	"ColumnBackgrounds":"ObjectType: Symbol\nUsage: System`ColumnBackgrounds\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ColumnBackgrounds",
	"ColumnForm":"ObjectType: Symbol\nUsage: ColumnForm[{e , e , …}] prints as a column with e  above e , etc. ColumnForm[list, horiz] specifies the horizontal alignment of each element. ColumnForm[list, horiz, vert] also specifies the vertical alignment of the whole column. \n             1   2                               1        2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ColumnForm",
	"CommonDefaultFormatTypes":"ObjectType: Symbol\nUsage: CommonDefaultFormatTypes is an option that specifies default formats for newly created cells.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CommonDefaultFormatTypes",
	"CompletionsListPacket":"ObjectType: Symbol\nUsage: System`CompletionsListPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CompletionsListPacket",
	"ComponentwiseContextMenu":"ObjectType: Symbol\nUsage: System`ComponentwiseContextMenu\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ComponentwiseContextMenu",
	"Compose":"ObjectType: Symbol\nUsage: System`Compose\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Compose",
	"CompressedData":"ObjectType: Symbol\nUsage: System`CompressedData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CompressedData",
	"ConeBox":"ObjectType: Symbol\nUsage: System`ConeBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`ConeBox",
	"ConfigurationPath":"ObjectType: Symbol\nUsage: ConfigurationPath is a global option that specifies which directories are searched for systemwide configuration information.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConfigurationPath",
	"ConicHullRegion3DBox":"ObjectType: Symbol\nUsage: System`ConicHullRegion3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ConicHullRegion3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`ConicHullRegion3DBox",
	"ConicHullRegionBox":"ObjectType: Symbol\nUsage: System`ConicHullRegionBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ConicHullRegionBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`ConicHullRegionBox",
	"Connect":"ObjectType: Symbol\nUsage: Connect is a setting for the LinkMode option of LinkOpen.  LinkMode->Connect causes a link to be created that will connect to a link listening on a named port.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Connect",
	"ConsoleMessage":"ObjectType: Symbol\nUsage: ConsoleMessage[expr] prints expr as a message to the Messages window of the frontend.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConsoleMessage",
	"ConsoleMessagePacket":"ObjectType: Symbol\nUsage: System`ConsoleMessagePacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConsoleMessagePacket",
	"ConstantArrayLayer":"ObjectType: Symbol\nUsage: ConstantArrayLayer[] represents a layer that has no input and produces as output a constant array.ConstantArrayLayer[opts] includes options for initial value of the array or output size.\n\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[(ConstantArrayLayer[NeuralNetworks`Private`Initial`assoc_Association, _])?System`Private`HoldNoEntryQ][[NeuralNetworks`Private`Initial`part___]] ^:= Catch[NeuralNetworks`NetPart[NeuralNetworks`Private`Initial`assoc, NeuralNetworks`Private`Initial`part], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantArrayLayer]]\nHoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantArrayLayer[___]]] ^:= NeuralNetworks`Private`Initial`$DefaultEvaluationOptions\nHoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantArrayLayer[___], NeuralNetworks`Private`Initial`name_]] \/; KeyExistsQ[NeuralNetworks`Private`Initial`$DefaultEvaluationOptions, NeuralNetworks`Private`Initial`name] ^:= Normal[KeyTake[NeuralNetworks`Private`Initial`$DefaultEvaluationOptions, NeuralNetworks`Private`Initial`name]]\nConstantArrayLayer \/: HoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantArrayLayer[___], NeuralNetworks`Private`Initial`names_List]] := Catenate[(Options[NeuralNetworks`Private`Initial`net, #1] & ) \/@ NeuralNetworks`Private`Initial`names]\nInformation[NeuralNetworks`Private`NetInformation`net:HoldPattern[ConstantArrayLayer[___]], NeuralNetworks`Private`NetInformation`prop_] ^:= NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net, NeuralNetworks`Private`NetInformation`prop]\nInformation[NeuralNetworks`Private`NetInformation`net:HoldPattern[ConstantArrayLayer[___]]] ^:= InformationData[NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net]]\nDownValues: (NeuralNetworks`Private`DefineLayer`s_ConstantArrayLayer)?System`Private`HoldEntryQ := Catch[NeuralNetworks`Private`CreateNet[\"ConstantArray\", NeuralNetworks`Private`DefineLayer`s], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantArrayLayer]]\n((NeuralNetworks`Private`Initial`s_ConstantArrayLayer)?System`Private`HoldNoEntryQ)?NeuralNetworks`Private`Initial`UpgradeMXSnapshotInplace := Null\nSubValues: (NeuralNetworks`Private`Initial`s_ConstantArrayLayer)?System`Private`HoldNoEntryQ[NeuralNetworks`Private`Initial`args___] := Catch[NeuralNetworks`Private`NetApply[NeuralNetworks`Private`Initial`s, NeuralNetworks`Private`Initial`args], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantArrayLayer]]\nDefaultValues: None\nNValues: None\nFormatValues: ConstantArrayLayer \/: MakeBoxes[System`Private`T_ConstantArrayLayer, StandardForm] \/; Refresh[ !BoxForm`UseTextFormattingQ, None] := RuleCondition[Replace[Unevaluated[System`Private`T], {HoldPattern[(NeuralNetworks`Private`DefineLayer`s_ConstantArrayLayer)?System`Private`HoldNoEntryQ] :> NeuralNetworks`Private`MakeLayerBoxes[NeuralNetworks`Private`DefineLayer`s], _ :> Fail}]]\n(NeuralNetworks`Private`DefineLayer`s_ConstantArrayLayer)?System`Private`HoldNoEntryQ := NeuralNetworks`Private`LayerOutputForm[NeuralNetworks`Private`DefineLayer`s]\nOptions: {Array -> Automatic, LearningRateMultipliers -> Automatic, Output -> Automatic}\nAttributes: {}\nFullName: System`ConstantArrayLayer",
	"ConstantPlusLayer":"ObjectType: Symbol\nUsage: ConstantPlusLayer[] represents a layer that adds a learnable bias to its input.ConstantPlusLayer[opts] includes options for initial bias and other parameters. \n\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[(ConstantPlusLayer[NeuralNetworks`Private`Initial`assoc_Association, _])?System`Private`HoldNoEntryQ][[NeuralNetworks`Private`Initial`part___]] ^:= Catch[NeuralNetworks`NetPart[NeuralNetworks`Private`Initial`assoc, NeuralNetworks`Private`Initial`part], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantPlusLayer]]\nHoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantPlusLayer[___]]] ^:= NeuralNetworks`Private`Initial`$DefaultEvaluationOptions\nHoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantPlusLayer[___], NeuralNetworks`Private`Initial`name_]] \/; KeyExistsQ[NeuralNetworks`Private`Initial`$DefaultEvaluationOptions, NeuralNetworks`Private`Initial`name] ^:= Normal[KeyTake[NeuralNetworks`Private`Initial`$DefaultEvaluationOptions, NeuralNetworks`Private`Initial`name]]\nConstantPlusLayer \/: HoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantPlusLayer[___], NeuralNetworks`Private`Initial`names_List]] := Catenate[(Options[NeuralNetworks`Private`Initial`net, #1] & ) \/@ NeuralNetworks`Private`Initial`names]\nInformation[NeuralNetworks`Private`NetInformation`net:HoldPattern[ConstantPlusLayer[___]], NeuralNetworks`Private`NetInformation`prop_] ^:= NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net, NeuralNetworks`Private`NetInformation`prop]\nInformation[NeuralNetworks`Private`NetInformation`net:HoldPattern[ConstantPlusLayer[___]]] ^:= InformationData[NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net]]\nDownValues: (NeuralNetworks`Private`DefineLayer`s_ConstantPlusLayer)?System`Private`HoldEntryQ := Catch[NeuralNetworks`Private`CreateNet[\"ConstantPlus\", NeuralNetworks`Private`DefineLayer`s], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantPlusLayer]]\n((NeuralNetworks`Private`Initial`s_ConstantPlusLayer)?System`Private`HoldNoEntryQ)?NeuralNetworks`Private`Initial`UpgradeMXSnapshotInplace := Null\nSubValues: (NeuralNetworks`Private`Initial`s_ConstantPlusLayer)?System`Private`HoldNoEntryQ[NeuralNetworks`Private`Initial`args___] := Catch[NeuralNetworks`Private`NetApply[NeuralNetworks`Private`Initial`s, NeuralNetworks`Private`Initial`args], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantPlusLayer]]\nDefaultValues: None\nNValues: None\nFormatValues: ConstantPlusLayer \/: MakeBoxes[System`Private`T_ConstantPlusLayer, StandardForm] \/; Refresh[ !BoxForm`UseTextFormattingQ, None] := RuleCondition[Replace[Unevaluated[System`Private`T], {HoldPattern[(NeuralNetworks`Private`DefineLayer`s_ConstantPlusLayer)?System`Private`HoldNoEntryQ] :> NeuralNetworks`Private`MakeLayerBoxes[NeuralNetworks`Private`DefineLayer`s], _ :> Fail}]]\n(NeuralNetworks`Private`DefineLayer`s_ConstantPlusLayer)?System`Private`HoldNoEntryQ := NeuralNetworks`Private`LayerOutputForm[NeuralNetworks`Private`DefineLayer`s]\nOptions: {Biases -> Automatic, Input -> Automatic, LearningRateMultipliers -> Automatic, Output -> Automatic}\nAttributes: {}\nFullName: System`ConstantPlusLayer",
	"ConstantTimesLayer":"ObjectType: Symbol\nUsage: ConstantTimesLayer[] represents a layer that multiplies its input by a learnable scaling array.ConstantTimesLayer[opts] includes options for initial scaling and other parameters. \n\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[(ConstantTimesLayer[NeuralNetworks`Private`Initial`assoc_Association, _])?System`Private`HoldNoEntryQ][[NeuralNetworks`Private`Initial`part___]] ^:= Catch[NeuralNetworks`NetPart[NeuralNetworks`Private`Initial`assoc, NeuralNetworks`Private`Initial`part], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantTimesLayer]]\nHoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantTimesLayer[___]]] ^:= NeuralNetworks`Private`Initial`$DefaultEvaluationOptions\nHoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantTimesLayer[___], NeuralNetworks`Private`Initial`name_]] \/; KeyExistsQ[NeuralNetworks`Private`Initial`$DefaultEvaluationOptions, NeuralNetworks`Private`Initial`name] ^:= Normal[KeyTake[NeuralNetworks`Private`Initial`$DefaultEvaluationOptions, NeuralNetworks`Private`Initial`name]]\nConstantTimesLayer \/: HoldPattern[Options[NeuralNetworks`Private`Initial`net:ConstantTimesLayer[___], NeuralNetworks`Private`Initial`names_List]] := Catenate[(Options[NeuralNetworks`Private`Initial`net, #1] & ) \/@ NeuralNetworks`Private`Initial`names]\nInformation[NeuralNetworks`Private`NetInformation`net:HoldPattern[ConstantTimesLayer[___]], NeuralNetworks`Private`NetInformation`prop_] ^:= NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net, NeuralNetworks`Private`NetInformation`prop]\nInformation[NeuralNetworks`Private`NetInformation`net:HoldPattern[ConstantTimesLayer[___]]] ^:= InformationData[NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net]]\nDownValues: (NeuralNetworks`Private`DefineLayer`s_ConstantTimesLayer)?System`Private`HoldEntryQ := Catch[NeuralNetworks`Private`CreateNet[\"ConstantTimes\", NeuralNetworks`Private`DefineLayer`s], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantTimesLayer]]\n((NeuralNetworks`Private`Initial`s_ConstantTimesLayer)?System`Private`HoldNoEntryQ)?NeuralNetworks`Private`Initial`UpgradeMXSnapshotInplace := Null\nSubValues: (NeuralNetworks`Private`Initial`s_ConstantTimesLayer)?System`Private`HoldNoEntryQ[NeuralNetworks`Private`Initial`args___] := Catch[NeuralNetworks`Private`NetApply[NeuralNetworks`Private`Initial`s, NeuralNetworks`Private`Initial`args], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[ConstantTimesLayer]]\nDefaultValues: None\nNValues: None\nFormatValues: ConstantTimesLayer \/: MakeBoxes[System`Private`T_ConstantTimesLayer, StandardForm] \/; Refresh[ !BoxForm`UseTextFormattingQ, None] := RuleCondition[Replace[Unevaluated[System`Private`T], {HoldPattern[(NeuralNetworks`Private`DefineLayer`s_ConstantTimesLayer)?System`Private`HoldNoEntryQ] :> NeuralNetworks`Private`MakeLayerBoxes[NeuralNetworks`Private`DefineLayer`s], _ :> Fail}]]\n(NeuralNetworks`Private`DefineLayer`s_ConstantTimesLayer)?System`Private`HoldNoEntryQ := NeuralNetworks`Private`LayerOutputForm[NeuralNetworks`Private`DefineLayer`s]\nOptions: {Input -> Automatic, LearningRateMultipliers -> Automatic, Output -> Automatic, Scaling -> Automatic}\nAttributes: {}\nFullName: System`ConstantTimesLayer",
	"ConstrainedMax":"ObjectType: Symbol\nUsage: System`ConstrainedMax\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tolerance -> Automatic}\nAttributes: {}\nFullName: System`ConstrainedMax",
	"ConstrainedMin":"ObjectType: Symbol\nUsage: System`ConstrainedMin\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tolerance -> Automatic}\nAttributes: {}\nFullName: System`ConstrainedMin",
	"ContentsBoundingBox":"ObjectType: Symbol\nUsage: System`ContentsBoundingBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ContentsBoundingBox",
	"ContextMenu":"ObjectType: Symbol\nUsage: System`ContextMenu\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ContextMenu",
	"Continuation":"ObjectType: Symbol\nUsage: System`Continuation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Continuation",
	"ContourGraphics":"ObjectType: Symbol\nUsage: ContourGraphics[array] is a representation of a contour plot. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AspectRatio -> 1, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> Automatic, Background -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContourLines -> True, Contours -> 10, ContourShading -> True, ContourSmoothing -> True, ContourStyle -> Automatic, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> $FormatType, Frame -> True, FrameLabel -> None, FrameStyle -> Automatic, FrameTicks -> Automatic, ImageSize -> Automatic, MeshRange -> Automatic, PlotLabel -> None, PlotRange -> Automatic, PlotRegion -> Automatic, Prolog -> {}, RotateLabel -> True, TextStyle :> $TextStyle, Ticks -> Automatic}\nAttributes: {}\nFullName: System`ContourGraphics",
	"ContourIntegral":"ObjectType: Symbol\nUsage: System`ContourIntegral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ContourIntegral",
	"ContourLines":"ObjectType: Symbol\nUsage: ContourLines is an option for contour plots that specifies whether to draw explicit contour lines. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ContourLines",
	"ContourSmoothing":"ObjectType: Symbol\nUsage: System`ContourSmoothing\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ContourSmoothing",
	"ControlAlignment":"ObjectType: Symbol\nUsage: System`ControlAlignment\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ControlAlignment",
	"ControllerDuration":"ObjectType: Symbol\nUsage: System`ControllerDuration\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ControllerDuration",
	"ControllerInformationData":"ObjectType: Symbol\nUsage: System`ControllerInformationData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[ControllerInformationData[System`InfoDump`lis_], System`InfoDump`fmt_] ^:= With[{System`InfoDump`boxes = Block[{BoxForm`UseIcons = False}, System`InfoDump`controllerInformationBoxes[System`InfoDump`lis, System`InfoDump`fmt]]}, InterpretationBox[System`InfoDump`boxes, ControllerInformationData[System`InfoDump`lis]]]\nOptions: None\nAttributes: {}\nFullName: System`ControllerInformationData",
	"ConversionOptions":"ObjectType: Symbol\nUsage: ConversionOptions is an option to Import and Export used to pass special options to a particular format.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConversionOptions",
	"ConvertToBitmapPacket":"ObjectType: Symbol\nUsage: System`ConvertToBitmapPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertToBitmapPacket",
	"ConvertToPostScript":"ObjectType: Symbol\nUsage: System`ConvertToPostScript\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertToPostScript",
	"ConvertToPostScriptPacket":"ObjectType: Symbol\nUsage: ConvertToPostScriptPacket is an internal symbol used for formatting.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertToPostScriptPacket",
	"Cookies":"ObjectType: Symbol\nUsage: System`Cookies\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Cookies",
	"CopyTag":"ObjectType: Symbol\nUsage: System`CopyTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CopyTag",
	"CounterAssignments":"ObjectType: Symbol\nUsage: CounterAssignments is an option for selections that sets the value of a specified counter.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterAssignments",
	"CounterBox":"ObjectType: Symbol\nUsage: System`CounterBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[CounterBox] ^= {BaseStyle -> {}, CounterFunction :> Identity, DefaultBaseStyle -> {}}\nOptions[CounterBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[CounterBox]]\nAbsoluteOptions[CounterBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[CounterBox]]\nOptions[CounterBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[CounterBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, CounterBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[CounterBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[CounterBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, CounterBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[CounterBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, CounterBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterBox",
	"CounterBoxOptions":"ObjectType: Symbol\nUsage: CounterBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for CounterBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterBoxOptions",
	"CounterClockwiseContourIntegral":"ObjectType: Symbol\nUsage: System`CounterClockwiseContourIntegral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterClockwiseContourIntegral",
	"CounterEvaluator":"ObjectType: Symbol\nUsage: System`CounterEvaluator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterEvaluator",
	"CounterFunction":"ObjectType: Symbol\nUsage: CounterFunction is an option for counters that specifies the symbols used to display the value of the counter.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterFunction",
	"CounterIncrements":"ObjectType: Symbol\nUsage: CounterIncrements is an option for selections that specifies whether the value of a specified counter is incremented by one.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterIncrements",
	"CounterStyle":"ObjectType: Symbol\nUsage: System`CounterStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterStyle",
	"CounterStyleMenuListing":"ObjectType: Symbol\nUsage: CounterStyleMenuListing is an option for cells that specifies what counter styles are listed in the Counter popup menu of the Create Automatic Numbering Object dialog box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CounterStyleMenuListing",
	"CreatePalettePacket":"ObjectType: Symbol\nUsage: System`CreatePalettePacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CreatePalettePacket",
	"CreateScheduledTask":"ObjectType: Symbol\nUsage: CreateScheduledTask[expr] creates a local scheduled task that will repeatedly evaluate expr once per second.CreateScheduledTask[expr, time] creates a task that will repeatedly evaluate expr every time seconds.CreateScheduledTask[expr, {time}] creates a task that will evaluate expr once after time seconds.CreateScheduledTask[expr, {time, count}] creates a task that will try evaluating expr once every time seconds up to count times total.CreateScheduledTask[expr, timespec, start] creates a task that will evaluate expr according to timespec starting at start time.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AutoRemove -> False, EpilogFunction :> Null, TaskGroup -> Global`}\nAttributes: {HoldFirst}\nFullName: System`CreateScheduledTask",
	"CreateTemporary":"ObjectType: Symbol\nUsage: CreateTemporary[] creates a temporary file with a unique name in the default temporary directory and returns the name of the file.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CreateTemporary",
	"CuboidBox":"ObjectType: Symbol\nUsage: System`CuboidBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`CuboidBox",
	"CurlyDoubleQuote":"ObjectType: Symbol\nUsage: System`CurlyDoubleQuote\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CurlyDoubleQuote",
	"CurlyQuote":"ObjectType: Symbol\nUsage: System`CurlyQuote\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CurlyQuote",
	"CurrentlySpeakingPacket":"ObjectType: Symbol\nUsage: System`CurrentlySpeakingPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`CurrentlySpeakingPacket",
	"Curry":"ObjectType: Symbol\nUsage: Curry[f, n] represents an operator form of the function f of n arguments so that Curry[f, n][x ] …[x ] is equivalent to f[x , …, x ].Curry[f] represents an operator form of the function f of two arguments so that Curry[f][y][x] is equivalent to f[x, y].Curry[f, {i , …, i }] represents an operator form of the function f of n arguments so that Curry[f, {i , …, i }][x ] …[x ] is equivalent to f[x  , …, x  ].Curry[f, k  {i , …, i }] represents a k-arguments operator form of the function f of n arguments so that Curry[f, k  {i , …, i }][x ] …[x ] is equivalent to f[x  , …, x  ], with k ≥ Max[{i , …, i }].\n                                                                                              1     n                      1      n                                                                                                                                     1      n                                                                                   1      n    1     n                      i       i                  1      n                                                                                                  1      n    1     k                      i       i                   1      n\n                                                                                                                                                                                                                                                                                                                                                                                                             1       n                                                                                                                                                                     1       n\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[Derivative[Language`CurryDump`orders__][Curry[Language`CurryDump`f_]]] ^:= With[{Language`CurryDump`cd = Language`CurryDump`curryDerivative[{Language`CurryDump`orders}, {2, 1}]}, Curry[Language`CurryDump`cd[Language`CurryDump`f]] \/; Language`CurryDump`cd =!= $Failed]\nHoldPattern[Derivative[Language`CurryDump`orders__][Curry[Language`CurryDump`f_, (Language`CurryDump`cst_)?Language`CurryDump`curryStructureQ]]] ^:= With[{Language`CurryDump`cd = Language`CurryDump`curryDerivative[{Language`CurryDump`orders}, Language`CurryDump`cst]}, Curry[Language`CurryDump`cd[Language`CurryDump`f], Language`CurryDump`cst] \/; Language`CurryDump`cd =!= $Failed]\nDownValues: Curry[Language`CurryDump`f_, 0] := Language`CurryDump`f[]\nCurry[Language`CurryDump`f_, 0 -> {Language`CurryDump`opts:OptionsPattern[]}] := Language`CurryDump`f[Language`CurryDump`opts]\nCurry[Language`CurryDump`f_, 0 -> _?Language`CurryDump`curryStructureQ] := Language`CurryDump`f[]\nCurry[Language`CurryDump`f_, {Language`CurryDump`opts:OptionsPattern[]}] := Language`CurryDump`f[Language`CurryDump`opts]\nCurry[Language`CurryDump`f_, Language`CurryDump`cst_ \/;  !Language`CurryDump`curryStructureQ[Language`CurryDump`cst]] := $Failed \/; (Message[Curry::cst, Language`CurryDump`cst]; False)\nCurry[Language`CurryDump`args___] := $Failed \/; (System`Private`Arguments[Curry[Language`CurryDump`args], {1, 2}]; False)\nSubValues: Curry[Language`CurryDump`f_, (Language`CurryDump`cst_)?Language`CurryDump`curryStructureQ][] := Curry[Language`CurryDump`f, Language`CurryDump`cst]\nCurry[Language`CurryDump`f_, (Language`CurryDump`cst_)?Language`CurryDump`curryStructureQ][Language`CurryDump`args___] := Language`CurryDump`curryApply[Language`CurryDump`f, Language`CurryDump`Args[Language`CurryDump`args], Language`CurryDump`cst] \/; Length[Language`CurryDump`Args[Language`CurryDump`args]] === Language`CurryDump`curryArity[Language`CurryDump`cst]\nCurry[Language`CurryDump`f_, (Language`CurryDump`cst_)?Language`CurryDump`curryStructureQ][Language`CurryDump`args___] := With[{Language`CurryDump`n = Language`CurryDump`curryArity[Language`CurryDump`cst]}, Language`CurryDump`curryApply[Language`CurryDump`f, Take[Language`CurryDump`Args[Language`CurryDump`args], Language`CurryDump`n], Language`CurryDump`cst] @@ Drop[Language`CurryDump`Args[Language`CurryDump`args], Language`CurryDump`n] \/; Length[Language`CurryDump`Args[Language`CurryDump`args]] > Language`CurryDump`n]\nCurry[Language`CurryDump`f_, (Language`CurryDump`cst_)?Language`CurryDump`curryStructureQ][Language`CurryDump`args1__][Language`CurryDump`args2___] := With[{Language`CurryDump`args = Language`CurryDump`Args[Language`CurryDump`args1, Language`CurryDump`args2], Language`CurryDump`n = Language`CurryDump`curryArity[Language`CurryDump`cst]}, If[Language`CurryDump`n >= Length[Language`CurryDump`args], Curry[Language`CurryDump`f, Language`CurryDump`cst] @@ Language`CurryDump`args, (Curry[Language`CurryDump`f, Language`CurryDump`cst] @@ Take[Language`CurryDump`args, Language`CurryDump`n]) @@ Drop[Language`CurryDump`args, Language`CurryDump`n]]]\nCurry[Language`CurryDump`f_][] := Curry[Language`CurryDump`f]\nCurry[Language`CurryDump`f_][Language`CurryDump`x_, Language`CurryDump`y_] := Language`CurryDump`f[Language`CurryDump`y, Language`CurryDump`x]\nCurry[Language`CurryDump`f_][Language`CurryDump`x_, Language`CurryDump`y_, Language`CurryDump`args___] := Language`CurryDump`f[Language`CurryDump`y, Language`CurryDump`x][Language`CurryDump`args]\nCurry[Language`CurryDump`f_][Language`CurryDump`args1__][Language`CurryDump`args2___] := With[{Language`CurryDump`args = Language`CurryDump`Args[Language`CurryDump`args1, Language`CurryDump`args2]}, If[Length[Language`CurryDump`args] <= 2, Curry[Language`CurryDump`f] @@ Language`CurryDump`args, (Curry[Language`CurryDump`f] @@ Reverse[Take[Language`CurryDump`args, 2]]) @@ Drop[Language`CurryDump`args, 2]]]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldRest}\nFullName: System`Curry",
	"CylinderBox":"ObjectType: Symbol\nUsage: System`CylinderBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`CylinderBox",
	"DampingFactor":"ObjectType: Symbol\nUsage: DampingFactor is an option for FindRoot, which can be used to control convergence behavior. DampingFactor -> n uses a damping factor of n in Newton's method.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DampingFactor",
	"DatabinRemove":"ObjectType: Symbol\nUsage:                                     th\nDatabinRemove[bin, i] removes the i  entry from a databin.DatabinRemove[bin, uuid] removes the entry with the specified UUID from a databin.DatabinRemove[bin, {i, j}] removes the span of entries with indices from i through j.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DatabinRemove[DataDropClient`Private`args___] := Catch[DataDropClient`Private`deleteEntry[DataDropClient`Private`args]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DatabinRemove",
	"DataCompression":"ObjectType: Symbol\nUsage: System`DataCompression\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DataCompression",
	"DatasetDisplayPanel":"ObjectType: Symbol\nUsage: System`DatasetDisplayPanel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DatasetDisplayPanel",
	"Date":"ObjectType: Symbol\nUsage: Date[] gives the current local date and time in the form {year, month, day, hour, minute, second}. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Date",
	"DateDelimiters":"ObjectType: Symbol\nUsage: System`DateDelimiters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateDelimiters",
	"Debug":"ObjectType: Symbol\nUsage: System`Debug\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`Debug",
	"DebugTag":"ObjectType: Symbol\nUsage: System`DebugTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`DebugTag",
	"Decimal":"ObjectType: Symbol\nUsage: Decimal is a setting for the ColumnAlignments option of GridBox which states that numbers should align along the decimal place.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Decimal",
	"DefaultColor":"ObjectType: Symbol\nUsage: DefaultColor is an option for graphics functions that specifies the default color to use for lines, points, etc. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultColor",
	"DefaultControlPlacement":"ObjectType: Symbol\nUsage: System`DefaultControlPlacement\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultControlPlacement",
	"DefaultFont":"ObjectType: Symbol\nUsage: System`DefaultFont\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultFont",
	"DefaultFontProperties":"ObjectType: Symbol\nUsage: DefaultFontProperties is a global option that specifies various properties of a font family, such as its character encoding and whether it is monospaced.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultFontProperties",
	"DefaultFormatType":"ObjectType: Symbol\nUsage: DefaultFormatType is an option for cells that specifies the format used for displaying expressions in a newly created cell.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultFormatType",
	"DefaultFormatTypeForStyle":"ObjectType: Symbol\nUsage: System`DefaultFormatTypeForStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultFormatTypeForStyle",
	"DefaultInlineFormatType":"ObjectType: Symbol\nUsage: DefaultInlineFormatType is an option for cells that specifies the format used for displaying expressions in a newly created inline cell.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultInlineFormatType",
	"DefaultInputFormatType":"ObjectType: Symbol\nUsage: System`DefaultInputFormatType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultInputFormatType",
	"DefaultNewInlineCellStyle":"ObjectType: Symbol\nUsage: DefaultNewInlineCellStyle is an option for cells that specifies the default style to use for new inline cells created in the notebook.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultNewInlineCellStyle",
	"DefaultNotebook":"ObjectType: Symbol\nUsage: DefaultNotebook is a global option that specifies which notebook is used as a template for all new notebooks.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultNotebook",
	"DefaultOutputFormatType":"ObjectType: Symbol\nUsage: System`DefaultOutputFormatType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultOutputFormatType",
	"DefaultStyle":"ObjectType: Symbol\nUsage: System`DefaultStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultStyle",
	"DefaultStyleDefinitions":"ObjectType: Symbol\nUsage: DefaultStyleDefinitions is a global option that specifies the default stylesheet for all new notebooks.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultStyleDefinitions",
	"DefaultTextFormatType":"ObjectType: Symbol\nUsage: System`DefaultTextFormatType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultTextFormatType",
	"DefaultTextInlineFormatType":"ObjectType: Symbol\nUsage: System`DefaultTextInlineFormatType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultTextInlineFormatType",
	"DefaultValue":"ObjectType: Symbol\nUsage: System`DefaultValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefaultValue",
	"DefineExternal":"ObjectType: Symbol\nUsage: System`DefineExternal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DefineExternal[System`Dump`p_String, System`Dump`a_, System`Dump`n_] := Module[{System`Dump`e, System`Dump`pat = ToHeldExpression[System`Dump`p], System`Dump`args = ToHeldExpression[System`Dump`a]}, If[System`Dump`pat === $Failed || System`Dump`args === $Failed, Message[DefineExternal::des, System`Dump`n, InputForm[$CurrentLink]], System`Dump`e = Hold[_ := ExternalCall[_, CallPacket[_, _]]]; System`Dump`e = ReplaceHeldPart[System`Dump`e, System`Dump`pat, {1, 1}]; System`Dump`e = ReplacePart[System`Dump`e, $CurrentLink, {1, 2, 1}]; System`Dump`e = ReplacePart[System`Dump`e, System`Dump`n, {1, 2, 2, 1}]; System`Dump`e = ReplaceHeldPart[System`Dump`e, System`Dump`args, {1, 2, 2, 2}]; ReleaseHold[System`Dump`e]; System`Dump`defined = Append[System`Dump`defined, HoldForm @@ System`Dump`pat \/. {HoldPattern[ThisLink] -> $CurrentLink, HoldPattern[$CurrentLink] -> $CurrentLink}]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DefineExternal",
	"DegreeLexicographic":"ObjectType: Symbol\nUsage: System`DegreeLexicographic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DegreeLexicographic",
	"DegreeReverseLexicographic":"ObjectType: Symbol\nUsage: System`DegreeReverseLexicographic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DegreeReverseLexicographic",
	"DeleteWithContents":"ObjectType: Symbol\nUsage: System`DeleteWithContents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DeleteWithContents",
	"DeletionWarning":"ObjectType: Symbol\nUsage: DeletionWarning is an option for InterpretationBox or TagBox objects that specifies whether a warning is issued if the box is deleted.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DeletionWarning",
	"DelimitedArray":"ObjectType: Symbol\nUsage: System`DelimitedArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DelimitedArray",
	"DelimiterMatching":"ObjectType: Symbol\nUsage: DelimiterMatching is an option for selections that specifies whether an opening delimiter will match only its respective closing delimiter or any closing delimiter.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DelimiterMatching",
	"DensityGraphics":"ObjectType: Symbol\nUsage: DensityGraphics[array] is a representation of a density plot. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AspectRatio -> 1, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> Automatic, Background -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> $FormatType, Frame -> True, FrameLabel -> None, FrameStyle -> Automatic, FrameTicks -> Automatic, ImageSize -> Automatic, Mesh -> True, MeshRange -> Automatic, MeshStyle -> Automatic, PlotLabel -> None, PlotRange -> Automatic, PlotRegion -> Automatic, Prolog -> {}, RotateLabel -> True, TextStyle :> $TextStyle, Ticks -> Automatic}\nAttributes: {}\nFullName: System`DensityGraphics",
	"DestroyAfterEvaluation":"ObjectType: Symbol\nUsage: System`DestroyAfterEvaluation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DestroyAfterEvaluation",
	"DeviceOpenQ":"ObjectType: Symbol\nUsage: System`DeviceOpenQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DeviceOpenQ[Devices`DeviceAPI`DeviceDump`dev:HoldPattern[DeviceObject][{_?Devices`DeviceAPI`DeviceDump`classQ, _}]] := Devices`DeviceAPI`DeviceDump`openQ[Devices`DeviceAPI`DeviceDump`dev]\nDeviceOpenQ[{(Devices`DeviceAPI`DeviceDump`class_)?Devices`DeviceAPI`DeviceDump`classQ, ___} | (Devices`DeviceAPI`DeviceDump`class_)?Devices`DeviceAPI`DeviceDump`classQ] := Devices`DeviceAPI`DeviceDump`openQ[Devices`DeviceAPI`DeviceDump`firstOpen[Devices`DeviceAPI`DeviceDump`class]]\nDeviceOpenQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DeviceOpenQ",
	"DiacriticalPositioning":"ObjectType: Symbol\nUsage: DiacriticalPositioning is an option for UnderscriptBox and related boxes that specifies how close diacritical characters are drawn to the base character.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DiacriticalPositioning",
	"DialogIndent":"ObjectType: Symbol\nUsage: System`DialogIndent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DialogIndent",
	"DialogLevel":"ObjectType: Symbol\nUsage: System`DialogLevel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DialogLevel",
	"DifferenceOrder":"ObjectType: Symbol\nUsage: System`DifferenceOrder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DifferenceOrder",
	"DigitBlockMinimum":"ObjectType: Symbol\nUsage: System`DigitBlockMinimum\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DigitBlockMinimum",
	"DisableConsolePrintPacket":"ObjectType: Symbol\nUsage: System`DisableConsolePrintPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DisableConsolePrintPacket",
	"DiskBox":"ObjectType: Symbol\nUsage: System`DiskBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`DiskBox",
	"DispatchQ":"ObjectType: Symbol\nUsage: System`DispatchQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DispatchQ",
	"Display":"ObjectType: Symbol\nUsage: Display[channel, graphics] writes graphics or sound to the specified output channel in PostScript format. Display[channel, graphics, \"format\"] writes graphics or sound in the specified format. Display[channel, expr, \"format\"] writes boxes, cells, or notebook expressions in the specified format. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Display[System`Dump`channel_, System`Dump`obj_, Except[\"MPS\", System`Dump`fmt_String], (System`Dump`opts___)?OptionQ] := (Message[Export::obsalt, Display, Export]; Export[System`Dump`channel, System`Dump`obj, System`Dump`fmt, System`Dump`opts]; System`Dump`obj)\nDisplay[System`Dump`channel_, System`Dump`obj_, (System`Dump`opts___)?OptionQ] := (Message[Export::obsalt, Display, Export]; Export[System`Dump`channel, System`Dump`obj, \"EPS\", System`Dump`opts]; System`Dump`obj)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CharacterEncoding -> {}, ImageOffset -> Automatic, ImageResolution -> Automatic, ImageRotated -> False, ImageSize -> Automatic}\nAttributes: {}\nFullName: System`Display",
	"DisplayFlushImagePacket":"ObjectType: Symbol\nUsage: System`DisplayFlushImagePacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DisplayFlushImagePacket",
	"DisplayRules":"ObjectType: Symbol\nUsage: System`DisplayRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DisplayRules",
	"DisplaySetSizePacket":"ObjectType: Symbol\nUsage: System`DisplaySetSizePacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DisplaySetSizePacket",
	"DisplayString":"ObjectType: Symbol\nUsage: DisplayString[graphics] generates a string giving graphics or sound in PostScript format. DisplayString[graphics, \"format\"] generates a string giving graphics or sound in the specified format. DisplayString[expr, \"format\"] generates a string giving boxes, cells, or notebook expressions in the specified format. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DisplayString[System`Dump`obj_, Except[\"MPS\", System`Dump`fmt_String], (System`Dump`opts___)?OptionQ] := (Message[ExportString::obsalt, DisplayString, ExportString]; ExportString[System`Dump`obj, System`Dump`fmt, System`Dump`opts])\nDisplayString[System`Dump`obj_, (System`Dump`opts___)?OptionQ] := (Message[ExportString::obsalt, DisplayString, ExportString]; ExportString[System`Dump`obj, \"EPS\", System`Dump`opts])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CharacterEncoding -> {}, ImageOffset -> Automatic, ImageResolution -> Automatic, ImageRotated -> False, ImageSize -> Automatic}\nAttributes: {}\nFullName: System`DisplayString",
	"DisplayTemporary":"ObjectType: Symbol\nUsage: System`DisplayTemporary\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DisplayTemporary[None | Null] := If[System`FEDump`$DisplayTemporaryCurrentObject =!= Null, NotebookDelete[System`FEDump`$DisplayTemporaryCurrentObject]]\nDisplayTemporary[System`FEDump`expr__] := System`FEDump`$DisplayTemporaryCurrentObject = PrintTemporary[System`FEDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DisplayTemporary",
	"DistributionDomain":"ObjectType: Symbol\nUsage: System`DistributionDomain\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Except[HoldPattern[DistributionDomain][_], HoldPattern[DistributionDomain][System`Dump`ParameterValidation`args___]] := (ArgumentCountQ[DistributionDomain, Length[{System`Dump`ParameterValidation`args}], 1, 1]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DistributionDomain",
	"Divergence":"ObjectType: Symbol\nUsage: System`Divergence\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Divergence",
	"DocumentGeneratorInformationData":"ObjectType: Symbol\nUsage: System`DocumentGeneratorInformationData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DocumentGeneratorInformationData",
	"DomainRegistrationInformation":"ObjectType: Symbol\nUsage: System`DomainRegistrationInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DomainRegistrationInformation[SystemTools`Private`input_String] := Module[{SystemTools`Private`domain, SystemTools`Private`whoisAssoc}, SystemTools`$WhoisErrorTLDResponse = Null; SystemTools`$WhoisErrorRegistryResponse = Null; SystemTools`$WhoisErrorRegistrarResponse = Null; If[StringMatchQ[SystemTools`Private`input, NumberString~~\".\"~~NumberString~~\".\"~~NumberString~~\".\"~~NumberString~~\".\" | \"\"], Return[Dataset[SystemTools`Private`getRDAPIPInfo[SystemTools`Private`input]]]; , SystemTools`Private`domain = SystemTools`Private`pruneDomain[SystemTools`Private`input]; If[FailureQ[SystemTools`Private`domain], Return[$Failed]; ]; SystemTools`Private`whoisAssoc = CheckAbort[Merge[{SystemTools`Private`getRDAPInfo[SystemTools`Private`domain], SystemTools`Private`getPureWhoisInfo[SystemTools`Private`domain]}, #1[[1]] & ], $Failed]; If[FailureQ[SystemTools`Private`whoisAssoc], Return[$Failed]]; SystemTools`Private`whoisAssoc = Merge[{Association[\"DomainName\" -> ToLowerCase[SystemTools`Private`domain]], SystemTools`Private`whoisAssoc}, #1[[1]] & ]; If[Length[SystemTools`Private`whoisAssoc] < 4, Message[DomainRegistrationInformation::noparse]; Return[Association[\"RegistryResolverResponse\" -> SystemTools`$WhoisErrorTLDResponse, \"RegistryResponse\" -> SystemTools`$WhoisErrorRegistryResponse, \"RegistrarResponse\" -> SystemTools`$WhoisErrorRegistrarResponse]]; ]; Return[Dataset[SystemTools`Private`orderAssoc[SystemTools`Private`whoisAssoc, {{\"domain\", \"name\"}, {\"event\"}, {\"registrant\"}, {\"registrar\"}, {\"registry\"}, {\"name\", \"server\"}}]]]; ]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DomainRegistrationInformation",
	"DOSTextFormat":"ObjectType: Symbol\nUsage: DOSTextFormat is an option for OpenRead, OpenWrite, and OpenAppend that specifies whether files should be opened in text mode. With DOSTextFormat -> True, Mathematica uses the normal text format for the type of computer on which Mathematica is running. Text mode typically entails translation of a text file's line-ending characters into the newline character \"\\n\". With DOSTextFormat -> False, files are opened in \"binary mode\", in which no such translation is performed. On some systems, there is no difference between text mode and binary mode.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DOSTextFormat",
	"DotPlusLayer":"ObjectType: Symbol\nUsage: DotPlusLayer[n] is equivalent to LinearLayer[n] and should no longer be used. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DotPlusLayer[NeuralNetworks`Private`Deprecation`args___] := NeuralNetworks`Private`Deprecation`warnAndBuild[DotPlusLayer, LinearLayer, NeuralNetworks`Private`Deprecation`args, \"Input\" -> {Automatic}, \"Output\" -> {Automatic}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DotPlusLayer",
	"DoubleContourIntegral":"ObjectType: Symbol\nUsage: System`DoubleContourIntegral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DoubleContourIntegral",
	"DoublyInfinite":"ObjectType: Symbol\nUsage: DoublyInfinite is an option for LerchPhi. With DoublyInfinite -> True, the summation is taken from -Infinity to Infinity. With DoublyInfinite -> False, the summation is taken from zero to Infinity.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DoublyInfinite",
	"Down":"ObjectType: Symbol\nUsage: System`Down\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Down",
	"DragAndDrop":"ObjectType: Symbol\nUsage: DragAndDrop is a global front end option that specifies whether to allow drag‐and‐drop editing. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DragAndDrop",
	"DrawHighlighted":"ObjectType: Symbol\nUsage: System`DrawHighlighted\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DrawHighlighted",
	"DualLinearProgramming":"ObjectType: Symbol\nUsage: System`DualLinearProgramming\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: System`DualLinearProgramming",
	"DumpGet":"ObjectType: Symbol\nUsage: DumpGet[ \"filename\"] reads in a file saved with DumpSave.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DumpGet",
	"DynamicBox":"ObjectType: Symbol\nUsage: System`DynamicBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[DynamicBox] ^:= {Appearance -> {Automatic, None}, AutoAction -> False, Background -> Automatic, BaseStyle -> {}, CachedValue :> Null, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> {}, Deinitialization :> None, DestroyAfterEvaluation -> False, DisplayFunction :> Identity, Enabled -> Automatic, Evaluator -> Automatic, ImageSizeCache -> Automatic, Initialization :> None, BoxForm`RecursionLimit -> 256, Selectable -> Automatic, ShrinkingDelay -> 0., SingleEvaluation -> False, SynchronousUpdating -> True, TrackedSymbols -> All, UpdateInterval -> Infinity}\nOptions[DynamicBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[DynamicBox]]\nAbsoluteOptions[DynamicBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[DynamicBox]]\nOptions[DynamicBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[DynamicBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, DynamicBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[DynamicBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[DynamicBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, DynamicBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[DynamicBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, DynamicBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[DynamicBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nMakeBoxes[BoxForm`a_DynamicBox, BoxForm`fmt_] ^:= Block[{BoxForm`UseTextFormattingQ = True, DisplayForm}, BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt]]\nBoxForm`apat$:HoldPattern[MakeExpression[_DynamicBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_DynamicBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {HoldAll}\nFullName: System`DynamicBox",
	"DynamicBoxOptions":"ObjectType: Symbol\nUsage: DynamicBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for DynamicBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DynamicBoxOptions",
	"DynamicLocation":"ObjectType: Symbol\nUsage: System`DynamicLocation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DynamicLocation",
	"DynamicModuleBox":"ObjectType: Symbol\nUsage: System`DynamicModuleBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[DynamicModuleBox] ^:= {BoxForm`ActionFunction :> None, BaseStyle -> {}, DefaultBaseStyle -> {}, Deinitialization :> None, DynamicModuleParent :> None, DynamicModuleValues :> None, Initialization :> None, SynchronousInitialization -> True, UndoTrackedVariables :> None, UnsavedVariables :> None, UntrackedVariables :> None, Value -> False}\nOptions[DynamicModuleBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[DynamicModuleBox]]\nAbsoluteOptions[DynamicModuleBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[DynamicModuleBox]]\nOptions[DynamicModuleBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[DynamicModuleBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, DynamicModuleBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[DynamicModuleBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[DynamicModuleBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, DynamicModuleBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[DynamicModuleBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, DynamicModuleBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[DynamicModuleBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Manipulate`\", {{Control, _}, {Defer, _}, {DynamicModule, _}, {DynamicModuleBox, _}, {DynamicSetting, _}, {DynamicWrapper, _}, {DynamicWrapperBox, _}, {Interpretation, _}, {Manipulate, _}, {Manipulator, _}, {DynamicModuleBox, HoldPattern[MakeExpression[_DynamicModuleBox, _]]}, {DynamicWrapperBox, HoldPattern[MakeExpression[_DynamicWrapperBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"Control\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulate, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulator, ___], _]]}}, Hold[Control, Defer, DynamicModule, DynamicModuleBox, DynamicSetting, DynamicWrapper, DynamicWrapperBox, Interpretation, Manipulate, Manipulator, TagBox]]\nMakeBoxes[BoxForm`a_DynamicModuleBox, BoxForm`fmt_] ^:= Block[{BoxForm`UseTextFormattingQ = True, DisplayForm}, BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt]]\nMakeExpression[Control`CommonDump`dmb:DynamicModuleBox[Control`CommonDump`vars_, Control`CommonDump`boxes_, Control`CommonDump`opts___], Control`CommonDump`form_] ^:= Block[{Control`CommonDump`$dmTrap = True}, MakeExpression[Control`CommonDump`dmb, Control`CommonDump`form] \/\/. Manipulate`Dump`$settingRules \/. (SystemsModelLabels -> Control`CommonDump`names_) :> With[{Control`CommonDump`nnames = Control`Utilities`fromDisplayNames[Control`CommonDump`names, Control`CommonDump`$DefaultMissingInputFieldModelName]}, (SystemsModelLabels -> Control`CommonDump`nnames) \/; True]] \/;  !TrueQ[Control`CommonDump`$dmTrap] &&  !FreeQ[Control`CommonDump`boxes, StateSpaceModel | Control`SystemMatrixModel]\nMakeExpression[DynamicModuleBox[Manipulate`Dump`vars_, Manipulate`Dump`boxes_, Manipulate`Dump`opts___], Manipulate`Dump`f_] ^:= Block[{Manipulate`Dump`uservars, Manipulate`Dump`demodvars, Manipulate`Dump`demodexpr, Manipulate`Dump`demodopts}, Manipulate`Dump`uservars = Manipulate`Dump`extractHeldVar \/@ Unevaluated[Manipulate`Dump`vars]; {Manipulate`Dump`demodvars, Manipulate`Dump`demodexpr, Manipulate`Dump`demodopts} = Manipulate`Dump`demodularize[Automatic, \"\", Manipulate`Dump`uservars, {HoldComplete[Manipulate`Dump`vars], MakeExpression[Manipulate`Dump`boxes, Manipulate`Dump`f], HoldComplete[Manipulate`Dump`opts]}]; Manipulate`Dump`createDynamicModule[Manipulate`Dump`demodvars, Manipulate`Dump`demodexpr, Manipulate`Dump`demodopts]]\nBoxForm`apat$:HoldPattern[MakeExpression[_DynamicModuleBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_DynamicModuleBox, _]], \"Manipulate`\", {{Control, _}, {Defer, _}, {DynamicModule, _}, {DynamicModuleBox, _}, {DynamicSetting, _}, {DynamicWrapper, _}, {DynamicWrapperBox, _}, {Interpretation, _}, {Manipulate, _}, {Manipulator, _}, {DynamicModuleBox, HoldPattern[MakeExpression[_DynamicModuleBox, _]]}, {DynamicWrapperBox, HoldPattern[MakeExpression[_DynamicWrapperBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"Control\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulate, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulator, ___], _]]}}, Hold[Control, Defer, DynamicModule, DynamicModuleBox, DynamicSetting, DynamicWrapper, DynamicWrapperBox, Interpretation, Manipulate, Manipulator, TagBox]]\nOptions: None\nAttributes: {HoldAll}\nFullName: System`DynamicModuleBox",
	"DynamicModuleBoxOptions":"ObjectType: Symbol\nUsage: DynamicModuleBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for DynamicModuleBox objects.\n                              1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DynamicModuleBoxOptions",
	"DynamicModuleParent":"ObjectType: Symbol\nUsage: System`DynamicModuleParent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DynamicModuleParent",
	"DynamicName":"ObjectType: Symbol\nUsage: System`DynamicName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[DynamicName[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`DynamicName",
	"DynamicNamespace":"ObjectType: Symbol\nUsage: System`DynamicNamespace\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[DynamicNamespace] ^:= {AutoDelete -> False, BaseStyle -> {}, DefaultBaseStyle -> {}, DefaultTooltipStyle -> \"TooltipLabel\", DeleteWithContents -> True, DeletionWarning -> False, Editable -> Automatic, BoxForm`PrivateNames -> {}, BoxForm`PublicNames -> {}, Selectable -> Automatic, SelectWithContents -> False, StripWrapperBoxes -> False, SyntaxForm -> Automatic, Tooltip -> None, TooltipDelay -> 0., TooltipStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[DynamicNamespace[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: {AutoDelete -> False, BaseStyle -> {}, DefaultBaseStyle -> {}, DefaultTooltipStyle -> TooltipLabel, DeleteWithContents -> True, DeletionWarning -> False, Editable -> Automatic, BoxForm`PrivateNames -> {}, BoxForm`PublicNames -> {}, Selectable -> Automatic, SelectWithContents -> False, StripWrapperBoxes -> False, SyntaxForm -> Automatic, Tooltip -> None, TooltipDelay -> 0., TooltipStyle -> {}}\nAttributes: {}\nFullName: System`DynamicNamespace",
	"DynamicReference":"ObjectType: Symbol\nUsage: System`DynamicReference\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DynamicReference",
	"DynamicWrapperBox":"ObjectType: Symbol\nUsage: System`DynamicWrapperBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[DynamicWrapperBox] ^:= {Appearance -> {Automatic, None}, AutoAction -> False, Background -> Automatic, BaseStyle -> {}, CachedValue :> Null, ContinuousAction -> True, DefaultBaseStyle -> {}, Deinitialization :> None, DestroyAfterEvaluation -> False, DisplayFunction :> Identity, Enabled -> Automatic, Evaluator -> Automatic, ImageSizeCache -> Automatic, Initialization :> None, BoxForm`RecursionLimit -> 256, Selectable -> Automatic, ShrinkingDelay -> 0., SingleEvaluation -> False, SynchronousUpdating -> True, TrackedSymbols -> All, UpdateInterval -> Infinity}\nOptions[DynamicWrapperBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[DynamicWrapperBox]]\nAbsoluteOptions[DynamicWrapperBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[DynamicWrapperBox]]\nOptions[DynamicWrapperBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[DynamicWrapperBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, DynamicWrapperBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[DynamicWrapperBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[DynamicWrapperBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, DynamicWrapperBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[DynamicWrapperBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, DynamicWrapperBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[DynamicWrapperBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Manipulate`\", {{Control, _}, {Defer, _}, {DynamicModule, _}, {DynamicModuleBox, _}, {DynamicSetting, _}, {DynamicWrapper, _}, {DynamicWrapperBox, _}, {Interpretation, _}, {Manipulate, _}, {Manipulator, _}, {DynamicModuleBox, HoldPattern[MakeExpression[_DynamicModuleBox, _]]}, {DynamicWrapperBox, HoldPattern[MakeExpression[_DynamicWrapperBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"Control\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulate, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulator, ___], _]]}}, Hold[Control, Defer, DynamicModule, DynamicModuleBox, DynamicSetting, DynamicWrapper, DynamicWrapperBox, Interpretation, Manipulate, Manipulator, TagBox]]\nMakeBoxes[BoxForm`a_DynamicWrapperBox, BoxForm`fmt_] ^:= Block[{BoxForm`UseTextFormattingQ = True, DisplayForm}, BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt]]\nMakeExpression[DynamicWrapperBox[Manipulate`Dump`b_, Manipulate`Dump`e__], Manipulate`Dump`fmt_] ^:= Thread[DynamicWrapper[MakeExpression[Manipulate`Dump`b, Manipulate`Dump`fmt], Manipulate`Dump`e], HoldComplete]\nBoxForm`apat$:HoldPattern[MakeExpression[_DynamicWrapperBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_DynamicWrapperBox, _]], \"Manipulate`\", {{Control, _}, {Defer, _}, {DynamicModule, _}, {DynamicModuleBox, _}, {DynamicSetting, _}, {DynamicWrapper, _}, {DynamicWrapperBox, _}, {Interpretation, _}, {Manipulate, _}, {Manipulator, _}, {DynamicModuleBox, HoldPattern[MakeExpression[_DynamicModuleBox, _]]}, {DynamicWrapperBox, HoldPattern[MakeExpression[_DynamicWrapperBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"Control\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulate, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _Manipulate`InterpretManipulator, ___], _]]}}, Hold[Control, Defer, DynamicModule, DynamicModuleBox, DynamicSetting, DynamicWrapper, DynamicWrapperBox, Interpretation, Manipulate, Manipulator, TagBox]]\nOptions: None\nAttributes: {HoldRest}\nFullName: System`DynamicWrapperBox",
	"DynamicWrapperBoxOptions":"ObjectType: Symbol\nUsage: DynamicWrapperBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for DynamicWrapperBox objects.\n                               1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DynamicWrapperBoxOptions",
	"EdgeLabeling":"ObjectType: Symbol\nUsage: EdgeLabeling is an option for GraphPlot and related functions that specifies whether labeling specified for edges should be displayed by default.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EdgeLabeling",
	"EdgeRenderingFunction":"ObjectType: Symbol\nUsage: EdgeRenderingFunction is an option for GraphPlot and related functions that gives a function to generate the graphics primitives to use in rendering each edge.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EdgeRenderingFunction",
	"EditButtonSettings":"ObjectType: Symbol\nUsage: System`EditButtonSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EditButtonSettings",
	"EditCellTagsSettings":"ObjectType: Symbol\nUsage: EditCellTagsSettings is a global option that specifies settings for the Edit Cell Tags dialog box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EditCellTagsSettings",
	"EliminationOrder":"ObjectType: Symbol\nUsage: System`EliminationOrder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EliminationOrder",
	"EllipticReducedHalfPeriods":"ObjectType: Symbol\nUsage: EllipticReducedHalfPeriods[{u, v}] gives a reduced pair of half periods {w, w '} corresponding to the same lattice as that of {u, v}.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: EllipticReducedHalfPeriods[System`EllipticDump`wl:{{_, _}..}] := EllipticReducedHalfPeriods \/@ System`EllipticDump`wl\nEllipticReducedHalfPeriods[{(System`EllipticDump`w1_)?NumericQ, (System`EllipticDump`w3_)?NumericQ}] := Block[{System`EllipticDump`wred = System`EllipticDump`redw[System`EllipticDump`w1, System`EllipticDump`w3]}, Take[System`EllipticDump`wred, 2] \/; ListQ[System`EllipticDump`wred]]\nExcept[EllipticReducedHalfPeriods[_], EllipticReducedHalfPeriods[System`EllipticDump`w___]] := (ArgumentCountQ[EllipticReducedHalfPeriods, Length[{System`EllipticDump`w}], 1, 1]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EllipticReducedHalfPeriods",
	"EmbeddingObject":"ObjectType: Symbol\nUsage: System`EmbeddingObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: EmbeddingObject[EmbedCode`Private`data_Association][EmbedCode`Private`key_String] := EmbedCode`Private`data[EmbedCode`Private`key]\nDefaultValues: None\nNValues: None\nFormatValues: EmbeddingObject \/: MakeBoxes[EmbeddingObject[EmbedCode`Private`data_Association], StandardForm] := InterpretationBox[RowBox[{\"EmbedCode`Private`embedCodePanel\", \"[\", \"EmbedCode`Private`data\", \"]\"}], EmbeddingObject[EmbedCode`Private`data]]\nOptions: None\nAttributes: {}\nFullName: System`EmbeddingObject",
	"EmphasizeSyntaxErrors":"ObjectType: Symbol\nUsage: System`EmphasizeSyntaxErrors\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EmphasizeSyntaxErrors",
	"Empty":"ObjectType: Symbol\nUsage: System`Empty\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Empty",
	"EnableConsolePrintPacket":"ObjectType: Symbol\nUsage: System`EnableConsolePrintPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EnableConsolePrintPacket",
	"EndAdd":"ObjectType: Symbol\nUsage: EndAdd[ ] returns the present context, and reverts to the previous one, prepending the present context to $ContextPath.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EndAdd",
	"EndFrontEndInteractionPacket":"ObjectType: Symbol\nUsage: System`EndFrontEndInteractionPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EndFrontEndInteractionPacket",
	"EngineEnvironment":"ObjectType: Symbol\nUsage: System`EngineEnvironment\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EngineEnvironment",
	"Enter":"ObjectType: Symbol\nUsage: System`Enter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Enter",
	"EqualColumns":"ObjectType: Symbol\nUsage: EqualColumns is an option to GridBox which specifies whether the size of the columns are all set to the size of the largest column. The default value of EqualColumns is False.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EqualColumns",
	"EqualRows":"ObjectType: Symbol\nUsage: EqualRows is an option to GridBox which specifies whether the size of the rows are all set to the size of the largest row. The default value of EqualRows is False.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EqualRows",
	"EquatedTo":"ObjectType: Symbol\nUsage: EquatedTo is an option for Roots, which specifies an expression to use in place of the variable in the solution.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EquatedTo",
	"ErrorBoxOptions":"ObjectType: Symbol\nUsage: System`ErrorBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ErrorBoxOptions",
	"ErrorNorm":"ObjectType: Symbol\nUsage: System`ErrorNorm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ErrorNorm",
	"ErrorPacket":"ObjectType: Symbol\nUsage: System`ErrorPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ErrorPacket",
	"ErrorsDialogSettings":"ObjectType: Symbol\nUsage: System`ErrorsDialogSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ErrorsDialogSettings",
	"Evaluated":"ObjectType: Symbol\nUsage: System`Evaluated\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Evaluated",
	"EvaluateScheduledTask":"ObjectType: Symbol\nUsage: EvaluateScheduledTask[expr] triggers immediate local execution of the specified task object.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EvaluateScheduledTask",
	"EvaluationCompletionAction":"ObjectType: Symbol\nUsage: EvaluationCompletionAction is an option for notebooks that specifies the action taken when an evaluation is completed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EvaluationCompletionAction",
	"EvaluationMode":"ObjectType: Symbol\nUsage: System`EvaluationMode\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EvaluationMode",
	"EvaluationOrder":"ObjectType: Symbol\nUsage: System`EvaluationOrder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EvaluationOrder",
	"EvaluationRateLimit":"ObjectType: Symbol\nUsage: System`EvaluationRateLimit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EvaluationRateLimit",
	"EventEvaluator":"ObjectType: Symbol\nUsage: System`EventEvaluator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EventEvaluator",
	"EventHandlerTag":"ObjectType: Symbol\nUsage: System`EventHandlerTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`EventHandlerTag",
	"ExactRootIsolation":"ObjectType: Symbol\nUsage: ExactRootIsolation is an option for Root, which specifies whether exact isolating intervals rather then numeric approximations should be used to identify algebraic numbers.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExactRootIsolation",
	"ExitDialog":"ObjectType: Symbol\nUsage: System`ExitDialog\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExitDialog",
	"ExpectationE":"ObjectType: Symbol\nUsage: System`ExpectationE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExpectationE",
	"ExpectedValue":"ObjectType: Symbol\nUsage: ExpectedValue[f, list] gives the expected value of the pure function f with respect to the values in list. ExpectedValue[f, list, x] gives the expected value of the function f of x with respect to the values of list.ExpectedValue[f, dist] gives the expected value of the pure function f with respect to the symbolic distribution dist.ExpectedValue[f, dist, x] gives the expected value of the function f of x with respect to the symbolic distribution dist.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ExpectedValue[Statistics`ExpectedValueDump`f_, (Statistics`ExpectedValueDump`list_List)?Statistics`ExpectedValueDump`NonEmptyVectorQ] := Mean[Statistics`ExpectedValueDump`f \/@ Statistics`ExpectedValueDump`list]\nExpectedValue[Statistics`ExpectedValueDump`f_, (Statistics`ExpectedValueDump`list_List)?Statistics`ExpectedValueDump`NonEmptyVectorQ, (Statistics`ExpectedValueDump`var_)?Statistics`Library`ValidVariableQ] := Mean[Function[{Statistics`ExpectedValueDump`var}, Evaluate[Statistics`ExpectedValueDump`f], Listable][Statistics`ExpectedValueDump`list]]\nExpectedValue[Statistics`ExpectedValueDump`f_Function, (Statistics`ExpectedValueDump`matrix_)?MatrixQ] := Mean[Apply[Statistics`ExpectedValueDump`f, Statistics`ExpectedValueDump`matrix, {1}]]\nExpectedValue[Statistics`ExpectedValueDump`f_, (Statistics`ExpectedValueDump`matrix_)?MatrixQ, Statistics`ExpectedValueDump`var_] \/; Statistics`ExpectedValueDump`NonEmptyArrayQ[Statistics`ExpectedValueDump`var, 1, Statistics`Library`ValidVariableQ] := Mean[Apply[Function[Evaluate[Statistics`ExpectedValueDump`var], Evaluate[Statistics`ExpectedValueDump`f]], Statistics`ExpectedValueDump`matrix, {1}]] \/; Length[First[Statistics`ExpectedValueDump`matrix]] === Length[Statistics`ExpectedValueDump`var]\nExpectedValue[Statistics`ExpectedValueDump`f_Function, (Statistics`ExpectedValueDump`dist:Except[_List])?DistributionParameterQ, Statistics`ExpectedValueDump`opts:OptionsPattern[]] := Block[{Statistics`ExpectedValueDump`answ = Statistics`ExpectedValueDump`UnivariateExpectedValue[Statistics`ExpectedValueDump`f, Statistics`ExpectedValueDump`dist, Automatic, {Statistics`ExpectedValueDump`opts}]}, Statistics`ExpectedValueDump`answ \/; Statistics`ExpectedValueDump`answ =!= $Failed]\nExpectedValue[Statistics`ExpectedValueDump`f_, (Statistics`ExpectedValueDump`dist:Except[_List])?DistributionParameterQ, (Statistics`ExpectedValueDump`x_)?Statistics`Library`ValidVariableQ, Statistics`ExpectedValueDump`opts:OptionsPattern[]] := Block[{Statistics`ExpectedValueDump`answ = Statistics`ExpectedValueDump`UnivariateExpectedValue[Statistics`ExpectedValueDump`f, Statistics`ExpectedValueDump`dist, Statistics`ExpectedValueDump`x, {Statistics`ExpectedValueDump`opts}]}, Statistics`ExpectedValueDump`answ \/; Statistics`ExpectedValueDump`answ =!= $Failed]\nExpectedValue[Statistics`ExpectedValueDump`f_, Element[(Statistics`ExpectedValueDump`x_)?Statistics`Library`ValidVariableQ, (Statistics`ExpectedValueDump`dist:Except[_List])?DistributionParameterQ], Statistics`ExpectedValueDump`opts:OptionsPattern[]] := Block[{Statistics`ExpectedValueDump`answ = Statistics`ExpectedValueDump`UnivariateExpectedValue[Statistics`ExpectedValueDump`f, Statistics`ExpectedValueDump`dist, Statistics`ExpectedValueDump`x, {Statistics`ExpectedValueDump`opts}]}, Statistics`ExpectedValueDump`answ \/; Statistics`ExpectedValueDump`answ =!= $Failed]\nExpectedValue[Statistics`ExpectedValueDump`args___] := Block[{Statistics`ExpectedValueDump`res = Statistics`ExpectedValueDump`iExpectedValue[{Statistics`ExpectedValueDump`args}]}, Statistics`ExpectedValueDump`res \/; False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: System`ExpectedValue",
	"ExponentPosition":"ObjectType: Symbol\nUsage: ExponentPosition is an option for RadicalBox that specifies the placement of the index outside a radical sign.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExponentPosition",
	"ExportAutoReplacements":"ObjectType: Symbol\nUsage: ExportAutoReplacements is an option for cells that specifies which replacement rules the Wolfram Language automatically applies when exporting text.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExportAutoReplacements",
	"ExportPacket":"ObjectType: Symbol\nUsage: System`ExportPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExportPacket",
	"ExpressionPacket":"ObjectType: Symbol\nUsage: System`ExpressionPacket\nDocumentation: None\nOwnValues: None\nUpValues: System`Dump`PacketHandler[ExpressionPacket[System`Dump`cont_], System`Dump`source_] ^:= Block[{}, If[ValueQ[$FrontEnd] && $FrontEnd =!= Null, CellPrint[Cell[System`Dump`cont, \"Print\", CellLabel -> System`Dump`sourceString[System`Dump`source], ShowCellLabel -> True]], None]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExpressionPacket",
	"ExternalCall":"ObjectType: Symbol\nUsage: System`ExternalCall\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ExternalCall[System`Dump`link_LinkObject, System`Dump`packet_CallPacket] := Block[{ThisLink = System`Dump`link, $CurrentLink = System`Dump`link, $IterationLimit = Infinity}, If[LinkWrite[System`Dump`link, System`Dump`packet] === $Failed, $Failed, System`Dump`ExternalAnswer[System`Dump`link, LinkReadHeld[System`Dump`link]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExternalCall",
	"ExternalDataCharacterEncoding":"ObjectType: Symbol\nUsage: ExternalDataCharacterEncoding is a global option that specifies the character encoding used in reading and writing plain text data outside of the Wolfram System.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExternalDataCharacterEncoding",
	"ExternalFunctionName":"ObjectType: Symbol\nUsage: System`ExternalFunctionName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ExternalFunctionName",
	"FactorComplete":"ObjectType: Symbol\nUsage: System`FactorComplete\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FactorComplete",
	"Fail":"ObjectType: Symbol\nUsage: System`Fail\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Fail",
	"FEDisableConsolePrintPacket":"ObjectType: Symbol\nUsage: System`FEDisableConsolePrintPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FEDisableConsolePrintPacket",
	"FEEnableConsolePrintPacket":"ObjectType: Symbol\nUsage: System`FEEnableConsolePrintPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FEEnableConsolePrintPacket",
	"FileHandler":"ObjectType: Symbol\nUsage: System`FileHandler\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FileHandler",
	"FileInformation":"ObjectType: Symbol\nUsage: System`FileInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FileInformation",
	"FileName":"ObjectType: Symbol\nUsage: System`FileName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`FileName",
	"FileNameDialogSettings":"ObjectType: Symbol\nUsage: FileNameDialogSettings is a global option that specifies settings for the Insert File Path dialog box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FileNameDialogSettings",
	"FilledCurveBox":"ObjectType: Symbol\nUsage: System`FilledCurveBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[FilledCurveBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, Method -> {}, VertexTextureCoordinates -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`FilledCurveBox",
	"FilledCurveBoxOptions":"ObjectType: Symbol\nUsage: FilledCurveBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for FilledCurveBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FilledCurveBoxOptions",
	"Fine":"ObjectType: Symbol\nUsage: System`Fine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Fine",
	"FitAll":"ObjectType: Symbol\nUsage: System`FitAll\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FitAll",
	"FlashSelection":"ObjectType: Symbol\nUsage: System`FlashSelection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FlashSelection",
	"FlushPrintOutputPacket":"ObjectType: Symbol\nUsage: System`FlushPrintOutputPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FlushPrintOutputPacket",
	"Font":"ObjectType: Symbol\nUsage: System`Font\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Font",
	"FontForm":"ObjectType: Symbol\nUsage: System`FontForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FontForm",
	"FontName":"ObjectType: Symbol\nUsage: System`FontName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FontName",
	"FontOpacity":"ObjectType: Symbol\nUsage: System`FontOpacity\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FontOpacity",
	"FontPostScriptName":"ObjectType: Symbol\nUsage: FontPostScriptName is an option to StyleBox which changes the current font. A sample specification is FontPostScriptName -> Times - Roman. The default value is Automatic.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FontPostScriptName",
	"FontProperties":"ObjectType: Symbol\nUsage: FontProperties specifies font properties.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FontProperties",
	"FontReencoding":"ObjectType: Symbol\nUsage: System`FontReencoding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FontReencoding",
	"FormatRules":"ObjectType: Symbol\nUsage: System`FormatRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FormatRules",
	"FormatTypeAutoConvert":"ObjectType: Symbol\nUsage: FormatTypeAutoConvert is an option for cells that specifies whether the contents of a cell are automatically converted into a different format when the style of that cell is changed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FormatTypeAutoConvert",
	"FormatValues":"ObjectType: Symbol\nUsage: FormatValues[f] gives a list of transformation rules corresponding to all printing formats (values for Format[f[x, …], …], etc.) defined for the symbol f.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Sort -> True}\nAttributes: {HoldAll}\nFullName: System`FormatValues",
	"FormTheme":"ObjectType: Symbol\nUsage: FormTheme is an option for FormObject and related functions that specifies an overall theme for a form and its elements.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FormTheme",
	"FractionLine":"ObjectType: Symbol\nUsage: FractionLine is an option for fractions that specifies the thickness of the line separating the numerator and denominator.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FractionLine",
	"FrameInset":"ObjectType: Symbol\nUsage: System`FrameInset\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FrameInset",
	"Frameless":"ObjectType: Symbol\nUsage: System`Frameless\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Frameless",
	"FromDate":"ObjectType: Symbol\nUsage: FromDate[date] converts a date of the form {y, m, d, h, m, s} to an absolute number of seconds since the beginning of January 1, 1900. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FromDate",
	"FrontEndObject":"ObjectType: Symbol\nUsage: System`FrontEndObject\nDocumentation: None\nOwnValues: None\nUpValues: MemoryInUse[System`FEDump`fe_FrontEndObject] ^:= Round[MathLink`CallFrontEnd[FrontEnd`Value[\"MemoryInUse\"]]] \/; System`FEDump`fe === $FrontEnd\nMemoryInUse[System`FEDump`fe_FrontEndObject] ^:= 0 \/; (Message[FrontEndObject::invfe, System`FEDump`fe]; False)\nOptions[System`FEDump`fe_FrontEndObject] := System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`Options[System`FEDump`fe]]]\nOptions[System`FEDump`fe_FrontEndObject, System`FEDump`option_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option}]}, System`FEDump`result = System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`Options[System`FEDump`fe, System`FEDump`optlist]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[Options::optnf, #1, FrontEndObject] & , System`FEDump`resnames]]; System`FEDump`result]\nFullOptions[System`FEDump`fe_FrontEndObject] ^:= System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`FullOptions[System`FEDump`fe]]]\nFrontEndObject \/: FullOptions[System`FEDump`fe_FrontEndObject, System`FEDump`opts_List] := (FullOptions[System`FEDump`fe, #1] & ) \/@ Flatten[{System`FEDump`opts}]\nFullOptions[System`FEDump`fe_FrontEndObject, System`FEDump`option_] ^:= Block[{System`FEDump`result}, System`FEDump`result = MathLink`CallFrontEnd[FrontEnd`FullOptions[System`FEDump`fe, System`FEDump`option]]; If[System`FEDump`result === $Failed, Message[FullOptions::optx, System`FEDump`option, System`FEDump`fe]]; System`FEDump`result]\nAbsoluteOptions[System`FEDump`fe_FrontEndObject] ^:= System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`AbsoluteOptions[System`FEDump`fe]]]\nAbsoluteOptions[System`FEDump`fe_FrontEndObject, System`FEDump`option_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option}]}, System`FEDump`result = System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`AbsoluteOptions[System`FEDump`fe, System`FEDump`optlist]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, System`FEDump`fe] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[System`FEDump`fe_FrontEndObject, System`FEDump`opts__] ^:= MathLink`CallFrontEnd[FrontEnd`SetOptions[System`FEDump`fe, System`FEDump`opts], System`FEDump`NoResult]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`fe_FrontEndObject, BoxForm`fmt_] ^:= Module[{BoxForm`typesetForm}, BoxForm`typesetForm = If[BoxForm`oldfe, \"⁃ FrontEndObject ⁃\", BoxForm`OmissionWrapper[TooltipBox[\"⁃ FrontEndObject ⁃\", StyleBox[ToString[Unevaluated[BoxForm`fe], InputForm], ShowStringCharacters -> True]]]]; BoxForm`MakeInterpretationBox[BoxForm`typesetForm, BoxForm`fe]]\nOptions: None\nAttributes: {}\nFullName: System`FrontEndObject",
	"FrontEndResource":"ObjectType: Symbol\nUsage: System`FrontEndResource\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FrontEndResource[System`FEDump`name_] := MathLink`CallFrontEnd[FrontEnd`Value[FEPrivate`FrontEndResource[System`FEDump`name]]]\nFrontEndResource[System`FEDump`name_, System`FEDump`sub_] := MathLink`CallFrontEnd[FrontEnd`Value[FEPrivate`FrontEndResource[System`FEDump`name, System`FEDump`sub]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FrontEndResource",
	"FrontEndResourceString":"ObjectType: Symbol\nUsage: System`FrontEndResourceString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FrontEndResourceString[System`FEDump`name_] := MathLink`CallFrontEnd[FrontEnd`Value[FEPrivate`FrontEndResourceString[System`FEDump`name]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FrontEndResourceString",
	"FrontEndStackSize":"ObjectType: Symbol\nUsage: System`FrontEndStackSize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FrontEndStackSize",
	"FrontEndValueCache":"ObjectType: Symbol\nUsage: System`FrontEndValueCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FrontEndValueCache",
	"FrontEndVersion":"ObjectType: Symbol\nUsage: System`FrontEndVersion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FrontEndVersion",
	"FullAxes":"ObjectType: Symbol\nUsage: FullAxes[graphics] returns the axes options of a graphics object.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FullAxes",
	"FullOptions":"ObjectType: Symbol\nUsage: System`FullOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FullOptions[System`Dump`x_List, System`Dump`y_] := (FullOptions[#1, System`Dump`y] & ) \/@ System`Dump`x\nFullOptions[System`Dump`x_, System`Dump`y_List] := (FullOptions[System`Dump`x, #1] & ) \/@ System`Dump`y\nFullOptions[System`Dump`x_ \/; System`Dump`GTest[Head[System`Dump`x]], PlotRange] := PlotRange[System`Dump`x]\nFullOptions[System`Dump`x_ \/; System`Dump`GTest[Head[System`Dump`x]], System`Dump`y_] := Module[{System`Dump`names}, System`Dump`names = First \/@ Options[Head[System`Dump`x]]; If[MemberQ[System`Dump`names, System`Dump`y], System`Dump`y \/. FullOptions[System`Dump`x], Message[FullOptions::optx, System`Dump`y, System`Dump`x]; System`Dump`y]]\nFullOptions[System`Dump`x_ \/; System`Dump`GTest[Head[System`Dump`x]]] := AbsoluteOptions[System`Dump`x]\nFullOptions[GraphicsArray[System`Dump`x_, System`Dump`opts___], System`Dump`y___] := With[{System`Dump`res = Graphics[GraphicsArray[System`Dump`x, System`Dump`opts]]}, FullOptions[System`Dump`res, System`Dump`y] \/; System`Dump`GRTest[System`Dump`res]]\nFullOptions[Internal`RasterGraphics[System`Dump`x_, System`Dump`opts___], System`Dump`y___] := With[{System`Dump`res = DensityGraphics[Internal`RasterGraphics[System`Dump`x, System`Dump`opts]]}, FullOptions[System`Dump`res, System`Dump`y] \/; System`Dump`DGTest[System`Dump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`FullOptions",
	"Generic":"ObjectType: Symbol\nUsage: Generic is a setting for the Mode option of Solve and related functions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Generic",
	"GeometricTransformation3DBox":"ObjectType: Symbol\nUsage: System`GeometricTransformation3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GeometricTransformation3DBox] ^= {ContentSelectable -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GeometricTransformation3DBox",
	"GeometricTransformation3DBoxOptions":"ObjectType: Symbol\nUsage: GeometricTransformation3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GeometricTransformation3DBox objects.\n                                          1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GeometricTransformation3DBoxOptions",
	"GeometricTransformationBox":"ObjectType: Symbol\nUsage: System`GeometricTransformationBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GeometricTransformationBox] ^= {ContentSelectable -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GeometricTransformationBox",
	"GeometricTransformationBoxOptions":"ObjectType: Symbol\nUsage: GeometricTransformationBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GeometricTransformationBox objects.\n                                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GeometricTransformationBoxOptions",
	"GestureHandlerTag":"ObjectType: Symbol\nUsage: System`GestureHandlerTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GestureHandlerTag",
	"GetBoundingBoxSizePacket":"ObjectType: Symbol\nUsage: System`GetBoundingBoxSizePacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetBoundingBoxSizePacket",
	"GetContext":"ObjectType: Symbol\nUsage: GetContext[\"context`\"] loads the file named by ContextToFileName[\"context`\"], which gives the conventional filename for a package that defines \"context`\".\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetContext",
	"GetFileName":"ObjectType: Symbol\nUsage: System`GetFileName\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetFileName",
	"GetFrontEndOptionsDataPacket":"ObjectType: Symbol\nUsage: System`GetFrontEndOptionsDataPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetFrontEndOptionsDataPacket",
	"GetLinebreakInformationPacket":"ObjectType: Symbol\nUsage: System`GetLinebreakInformationPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetLinebreakInformationPacket",
	"GetMenusPacket":"ObjectType: Symbol\nUsage: System`GetMenusPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetMenusPacket",
	"GetPageBreakInformationPacket":"ObjectType: Symbol\nUsage: System`GetPageBreakInformationPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GetPageBreakInformationPacket",
	"GlobalPreferences":"ObjectType: Symbol\nUsage: System`GlobalPreferences\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GlobalPreferences",
	"GlobalSession":"ObjectType: Symbol\nUsage: System`GlobalSession\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GlobalSession",
	"GraphElementData":"ObjectType: Symbol\nUsage: System`GraphElementData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphElementData",
	"Graphics3DBox":"ObjectType: Symbol\nUsage: System`Graphics3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Graphics3DBox] ^= {AlignmentPoint -> ImageScaled[{0.5, 0.5}], AspectRatio -> Automatic, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, Boxed -> True, BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> {\"Gamepad\", \"Joystick\", \"Detachable\"}, DefaultAxesStyle -> \"Graphics3DAxes\", DefaultBaseStyle -> \"Graphics3D\", DefaultBoxStyle -> \"Graphics3DBox\", DefaultFaceGridsStyle -> \"Graphics3DFaceGrids\", DefaultLabelStyle -> \"Graphics3DLabel\", DefaultTicksStyle -> \"Graphics3DTicks\", Epilog -> {}, FaceGrids -> None, FaceGridsStyle -> {}, FormatType -> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, BoxForm`ImageSizeRules -> Automatic, LabelStyle -> {}, Lighting -> Automatic, Method -> {\"CylinderPoints\" -> {40, 3}, \"ConePoints\" -> {40, 3}, \"SpherePoints\" -> {40, 30}, \"TubePoints\" -> {40, 2}, \"SplinePoints\" -> 7, \"RotationControl\" -> \"ArcBall\"}, PlotLabel -> None, PlotRange -> All, PlotRangePadding -> Automatic, PlotRegion -> {{0., 1.}, {0., 1.}}, PreserveImageOptions -> Automatic, Prolog -> {}, SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0., 0., 1.}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeExpression[System`Dump`g_Graphics3DBox, System`Dump`fmt_] \/; Image`Image3DBoxesQ[System`Dump`g] ^:= Image`FromImage3DBoxes[System`Dump`g, System`Dump`fmt]\nMakeExpression[(System`Dump`g_Graphics3DBox)?GraphComputation`PossibleGraphBoxQ, System`Dump`fmt_] ^:= With[{System`Dump`res = GraphComputation`FromGraphicsBox[System`Dump`g, System`Dump`fmt]}, System`Dump`res \/; System`Dump`res =!= $Failed]\nMakeExpression[(System`Dump`g_Graphics3DBox)?Region`Mesh`PossibleMeshGraphicsBoxQ, System`Dump`fmt_] ^:= With[{System`Dump`res = Region`Mesh`FromMeshGraphicsBox[System`Dump`g, System`Dump`fmt]}, System`Dump`res \/; System`Dump`res =!= $Failed]\nMakeExpression[(System`Dump`g_Graphics3DBox)?Region`PossibleRegionGraphicsBoxQ, System`Dump`fmt_] ^:= With[{System`Dump`res = Region`FromRegionGraphicsBox[System`Dump`g, System`Dump`fmt]}, System`Dump`res \/; System`Dump`res =!= $Failed]\nGraphics3DBox \/: MakeExpression[System`Dump`g_Graphics3DBox, System`Dump`fmt:StandardForm | TraditionalForm] := Typeset`ReleaseHold[With[{System`Dump`expr = Typeset`MakeExpression[System`Dump`g, System`Dump`fmt, Graphics3DBox]}, HoldComplete[System`Dump`expr]]]\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Graphics3DBox",
	"Graphics3DBoxOptions":"ObjectType: Symbol\nUsage: Graphics3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Graphics3DBox objects.\n                           1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Graphics3DBoxOptions",
	"GraphicsArray":"ObjectType: Symbol\nUsage: GraphicsArray[{g , g , …}] represents a row of graphics objects.GraphicsArray[{{g  , g  , …}, …}] represents a two-dimensional array of graphical objects.\n                1   2                                                            11   12\nDocumentation: None\nOwnValues: None\nUpValues: Graphics[GraphicsArray[System`Dump`x:{__}, System`Dump`opts___]] ^:= Block[{System`Dump`prim, System`Dump`spx, System`Dump`spy, System`Dump`asp, System`Dump`nx, System`Dump`ny, System`Dump`rect, System`Dump`gopts, System`Dump`rng}, {System`Dump`ny, System`Dump`nx, System`Dump`prim} = System`Dump`GetMatrix[System`Dump`x]; If[System`Dump`ny === $Failed, Return[$Failed]]; System`Dump`gopts = Flatten[{System`Dump`opts}]; System`Dump`spx = GraphicsSpacing \/. System`Dump`gopts \/. Options[GraphicsArray]; System`Dump`rng = PlotRange \/. System`Dump`gopts \/. Options[GraphicsArray]; {System`Dump`spx, System`Dump`spy} = System`Dump`SpaceCheck[Flatten[{System`Dump`spx}]]; System`Dump`asp = FullOptions[System`Dump`prim[[1,1]], AspectRatio]; If[ !NumberQ[System`Dump`asp] ||  !System`Dump`asp > 0., System`Dump`asp = 1.]; System`Dump`rect = System`Dump`MakeRectangles[Reverse[System`Dump`prim], System`Dump`nx, System`Dump`ny, System`Dump`spx, System`Dump`spy, System`Dump`asp]; System`Dump`gopts = System`Dump`FilterOptions[Graphics, Join[{System`Dump`gopts}, Options[GraphicsArray]]]; Graphics[System`Dump`rect, System`Dump`gopts]]\nDownValues: GraphicsArray[Graphics`GraphicsGridDump`x:{_List..}, Graphics`GraphicsGridDump`y___] \/; With[{Graphics`GraphicsGridDump`v = Internal`VisualizationOptions[Graphics`GraphicsGridDump`SymbolicGraphics]}, If[MatchQ[Graphics`GraphicsGridDump`v, _Rule | _RuleDelayed], \"SymbolicGraphics\" \/. Graphics`GraphicsGridDump`v, False]] &&  !BoxForm`oldfe := (If[$VersionNumber >= 8, Message[GraphicsArray::obs]]; GraphicsGrid[Graphics`GraphicsGridDump`x, Graphics`GraphicsGridDump`y])\nGraphicsArray[Graphics`GraphicsGridDump`x:{Except[_List]...}, Graphics`GraphicsGridDump`y___] \/; With[{Graphics`GraphicsGridDump`v = Internal`VisualizationOptions[Graphics`GraphicsGridDump`SymbolicGraphics]}, If[MatchQ[Graphics`GraphicsGridDump`v, _Rule | _RuleDelayed], \"SymbolicGraphics\" \/. Graphics`GraphicsGridDump`v, False]] &&  !BoxForm`oldfe := (If[$VersionNumber >= 8, Message[GraphicsArray::obs]]; GraphicsGrid[{Graphics`GraphicsGridDump`x}, Graphics`GraphicsGridDump`y])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GraphicsSpacing -> 0.1, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, PlotRange -> Automatic, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, Ticks -> None, TicksStyle -> {}}\nAttributes: {}\nFullName: System`GraphicsArray",
	"GraphicsBaseline":"ObjectType: Symbol\nUsage: System`GraphicsBaseline\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsBaseline",
	"GraphicsBox":"ObjectType: Symbol\nUsage: System`GraphicsBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GraphicsBox] ^= {AlignmentPoint -> ImageScaled[{0.5, 0.5}], AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> {Automatic, Automatic}, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> Automatic, DefaultAxesStyle -> \"GraphicsAxes\", DefaultBaseStyle -> \"Graphics\", DefaultFrameStyle -> \"GraphicsFrame\", DefaultFrameTicksStyle -> \"GraphicsFrameTicks\", DefaultGridLinesStyle -> \"GraphicsGridLines\", DefaultLabelStyle -> \"GraphicsLabel\", DefaultTicksStyle -> \"GraphicsTicks\", Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, BoxForm`ImageSizeRules -> Automatic, LabelStyle -> {}, Method -> {}, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> {{0., 1.}, {0., 1.}}, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeExpression[System`Dump`g_GraphicsBox, System`Dump`fmt_] \/; Image`ImageBoxesQ[System`Dump`g] ^:= Image`FromImageBoxes[System`Dump`g, System`Dump`fmt]\nMakeExpression[(System`Dump`g_GraphicsBox)?GraphComputation`PossibleGraphBoxQ, System`Dump`fmt_] ^:= With[{System`Dump`res = GraphComputation`FromGraphicsBox[System`Dump`g, System`Dump`fmt]}, System`Dump`res \/; System`Dump`res =!= $Failed]\nMakeExpression[(System`Dump`g_GraphicsBox)?Region`Mesh`PossibleMeshGraphicsBoxQ, System`Dump`fmt_] ^:= With[{System`Dump`res = Region`Mesh`FromMeshGraphicsBox[System`Dump`g, System`Dump`fmt]}, System`Dump`res \/; System`Dump`res =!= $Failed]\nMakeExpression[(System`Dump`g_GraphicsBox)?Region`PossibleRegionGraphicsBoxQ, System`Dump`fmt_] ^:= With[{System`Dump`res = Region`FromRegionGraphicsBox[System`Dump`g, System`Dump`fmt]}, System`Dump`res \/; System`Dump`res =!= $Failed]\nMakeExpression[System`Dump`g:GraphicsBox[System`Dump`prims_, System`Dump`opts___], System`Dump`fmt_] \/; MemberQ[Flatten[{System`Dump`opts}], DefaultBaseStyle -> \"GeoGraphics\"] ^:= GeoGraphics`FromGeoGraphicsBoxes[GraphicsBox[System`Dump`prims, DeleteCases[Flatten[{System`Dump`opts}], DefaultBaseStyle -> \"GeoGraphics\"]], System`Dump`fmt]\nMakeExpression[GraphicsBox[TagBox[System`Dump`boxes_, BoxForm`SceneTag[System`Dump`var_, System`Dump`args__], ___], System`Dump`opts___], System`Dump`fmt_] ^:= Replace[MakeExpression[GraphicsBox[System`Dump`boxes], System`Dump`fmt], HoldComplete[Graphics[___]] :> HoldComplete[GeometricScene[System`Dump`var, System`Dump`args]]]\nGraphicsBox \/: MakeExpression[System`Dump`g_GraphicsBox, System`Dump`fmt:StandardForm | TraditionalForm] := Typeset`ReleaseHold[With[{System`Dump`expr = Typeset`MakeExpression[System`Dump`g, System`Dump`fmt, GraphicsBox]}, HoldComplete[System`Dump`expr]]]\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GraphicsBox",
	"GraphicsBoxOptions":"ObjectType: Symbol\nUsage: GraphicsBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GraphicsBox objects.\n                         1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsBoxOptions",
	"GraphicsComplex3DBox":"ObjectType: Symbol\nUsage: System`GraphicsComplex3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GraphicsComplex3DBox] ^= {BaseStyle -> {}, ContentSelectable -> Automatic, DefaultBaseStyle -> {}, BoxForm`Textures -> {}, VertexColors -> Automatic, VertexNormals -> Automatic, VertexTextureCoordinates -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GraphicsComplex3DBox",
	"GraphicsComplex3DBoxOptions":"ObjectType: Symbol\nUsage: GraphicsComplex3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GraphicsComplex3DBox objects.\n                                  1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsComplex3DBoxOptions",
	"GraphicsComplexBox":"ObjectType: Symbol\nUsage: System`GraphicsComplexBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GraphicsComplexBox] ^= {BaseStyle -> {}, ContentSelectable -> Automatic, DefaultBaseStyle -> {}, BoxForm`Textures -> {}, VertexColors -> Automatic, VertexTextureCoordinates -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GraphicsComplexBox",
	"GraphicsComplexBoxOptions":"ObjectType: Symbol\nUsage: GraphicsComplexBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GraphicsComplexBox objects.\n                                1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsComplexBoxOptions",
	"GraphicsContents":"ObjectType: Symbol\nUsage: System`GraphicsContents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsContents",
	"GraphicsData":"ObjectType: Symbol\nUsage: System`GraphicsData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsData",
	"GraphicsGridBox":"ObjectType: Symbol\nUsage: System`GraphicsGridBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsGridBox",
	"GraphicsGroup3DBox":"ObjectType: Symbol\nUsage: System`GraphicsGroup3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GraphicsGroup3DBox] ^= {BaseStyle -> {}, ContentSelectable -> Automatic, DefaultBaseStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GraphicsGroup3DBox",
	"GraphicsGroup3DBoxOptions":"ObjectType: Symbol\nUsage: GraphicsGroup3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GraphicsGroup3DBox objects.\n                                1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsGroup3DBoxOptions",
	"GraphicsGroupBox":"ObjectType: Symbol\nUsage: System`GraphicsGroupBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[GraphicsGroupBox] ^= {BaseStyle -> {}, ContentSelectable -> Automatic, DefaultBaseStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`GraphicsGroupBox",
	"GraphicsGroupBoxOptions":"ObjectType: Symbol\nUsage: GraphicsGroupBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for GraphicsGroupBox objects.\n                              1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsGroupBoxOptions",
	"GraphicsGrouping":"ObjectType: Symbol\nUsage: System`GraphicsGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsGrouping",
	"GraphicsSpacing":"ObjectType: Symbol\nUsage: GraphicsSpacing is an option for GraphicsArray that specifies the spacing between elements in the array. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsSpacing",
	"GraphicsStyle":"ObjectType: Symbol\nUsage: System`GraphicsStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphicsStyle",
	"GraphRoot":"ObjectType: Symbol\nUsage: System`GraphRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphRoot",
	"GraphStyle":"ObjectType: Symbol\nUsage: GraphStyle is an option to Graph and related objects that specifies styles to use for the different graph elements. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GraphStyle",
	"GridBaseline":"ObjectType: Symbol\nUsage: GridBaseline is an option for GridBox that specifies what place in the grid should be considered its baseline for purposes of alignment with surrounding objects. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBaseline",
	"GridBoxAlignment":"ObjectType: Symbol\nUsage: System`GridBoxAlignment\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxAlignment",
	"GridBoxBackground":"ObjectType: Symbol\nUsage: System`GridBoxBackground\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxBackground",
	"GridBoxDividers":"ObjectType: Symbol\nUsage: System`GridBoxDividers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxDividers",
	"GridBoxFrame":"ObjectType: Symbol\nUsage: System`GridBoxFrame\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxFrame",
	"GridBoxItemSize":"ObjectType: Symbol\nUsage: System`GridBoxItemSize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxItemSize",
	"GridBoxItemStyle":"ObjectType: Symbol\nUsage: System`GridBoxItemStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxItemStyle",
	"GridBoxOptions":"ObjectType: Symbol\nUsage: GridBoxOptions -> {opt  -> val , opt  -> val , …} is an option which specifies default settings for GridBox objects.\n                      1       1     2       2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxOptions",
	"GridBoxSpacings":"ObjectType: Symbol\nUsage: System`GridBoxSpacings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridBoxSpacings",
	"GridCreationSettings":"ObjectType: Symbol\nUsage: GridCreationSettings is a global option that specifies settings for the Create Table\/Matrix dialog.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridCreationSettings",
	"GridElementStyleOptions":"ObjectType: Symbol\nUsage: System`GridElementStyleOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridElementStyleOptions",
	"GridFrame":"ObjectType: Symbol\nUsage: GridFrame is an option for grids that specifies whether a surrounding frame is drawn.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridFrame",
	"GridFrameMargins":"ObjectType: Symbol\nUsage: GridFrameMargins is an option for grids that specifies the spacing between the content of the grid and the frame surrounding it.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GridFrameMargins",
	"GroupTogetherGrouping":"ObjectType: Symbol\nUsage: System`GroupTogetherGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GroupTogetherGrouping",
	"GroupTogetherNestedGrouping":"ObjectType: Symbol\nUsage: System`GroupTogetherNestedGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`GroupTogetherNestedGrouping",
	"HeadCompose":"ObjectType: Symbol\nUsage: HeadCompose[a, b, c, d] gives a[b][c][d].\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HeadCompose",
	"HeldPart":"ObjectType: Symbol\nUsage: System`HeldPart\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {NHoldRest}\nFullName: System`HeldPart",
	"HelpBrowserLookup":"ObjectType: Symbol\nUsage: System`HelpBrowserLookup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HelpBrowserLookup[System`FEDump`category_String, System`FEDump`key_String] := MathLink`CallFrontEnd[FrontEnd`HelpBrowserLookup[System`FEDump`category, System`FEDump`key], System`FEDump`NoResult]\nHelpBrowserLookup[System`FEDump`category_String, System`FEDump`key_String, System`FEDump`tag_String] := MathLink`CallFrontEnd[FrontEnd`HelpBrowserLookup[System`FEDump`category, System`FEDump`key, System`FEDump`tag], System`FEDump`NoResult]\nHelpBrowserLookup[System`FEDump`args___] := (ArgumentCountQ[HelpBrowserLookup, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 2, 3]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HelpBrowserLookup",
	"HelpBrowserNotebook":"ObjectType: Symbol\nUsage: System`HelpBrowserNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HelpBrowserNotebook[] := MathLink`CallFrontEnd[FrontEnd`HelpBrowserNotebook[]]\nHelpBrowserNotebook[System`FEDump`args___] := (ArgumentCountQ[HelpBrowserNotebook, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 0, 0]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HelpBrowserNotebook",
	"HelpBrowserSettings":"ObjectType: Symbol\nUsage: HelpBrowserSettings is a global option that specifies settings for the legacy Help Browser.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HelpBrowserSettings",
	"Hessian":"ObjectType: Symbol\nUsage: System`Hessian\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Hessian",
	"HexahedronBox":"ObjectType: Symbol\nUsage: System`HexahedronBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[HexahedronBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexTextureCoordinates -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`HexahedronBox",
	"HexahedronBoxOptions":"ObjectType: Symbol\nUsage: System`HexahedronBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HexahedronBoxOptions",
	"HiddenSurface":"ObjectType: Symbol\nUsage: HiddenSurface is an option for SurfaceGraphics which specifies whether hidden surfaces are to be eliminated. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HiddenSurface",
	"HomeDirectory":"ObjectType: Symbol\nUsage: System`HomeDirectory\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HomeDirectory",
	"HomePage":"ObjectType: Symbol\nUsage: System`HomePage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HomePage",
	"Horizontal":"ObjectType: Symbol\nUsage: System`Horizontal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Horizontal",
	"HorizontalForm":"ObjectType: Symbol\nUsage: HorizontalForm is an internal symbol used for formatting and printing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HorizontalForm",
	"HorizontalScrollPosition":"ObjectType: Symbol\nUsage: System`HorizontalScrollPosition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HorizontalScrollPosition",
	"HTMLSave":"ObjectType: Symbol\nUsage: HTMLSave[\"file.html\"] saves an HTML version of the current input notebook in the front end. HTMLSave[\"file.html\", \"source.nb\"] saves an HTML version of the notebook from the file source .nb.HTMLSave[\"file.html\", notebook] saves an HTML version of the notebook corresponding to the specified notebook object. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HTMLSave[System`ConvertersDump`arg_, (System`ConvertersDump`opts___)?OptionQ] := HTMLSave[System`ConvertersDump`arg, SelectedNotebook[], System`ConvertersDump`opts] \/; Head[$FrontEnd] === FrontEndObject\nHTMLSave[System`ConvertersDump`file_, System`ConvertersDump`source_String, (System`ConvertersDump`opts___)?OptionQ] := With[{System`ConvertersDump`nbFound = System`ConvertersDump`locateNotebook[System`ConvertersDump`source]}, HTMLSave[System`ConvertersDump`file, System`ConvertersDump`nbFound, System`ConvertersDump`opts] \/; System`ConvertersDump`nbFound =!= $Failed]\nHTMLSave[System`ConvertersDump`args__, (System`ConvertersDump`opts___)?OptionQ] := (Message[HTMLSave::obsalt, HTMLSave, Export]; Export[System`ConvertersDump`args, \"HTML\", System`ConvertersDump`opts])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HTMLSave",
	"HyperlinkCreationSettings":"ObjectType: Symbol\nUsage: System`HyperlinkCreationSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HyperlinkCreationSettings",
	"HyphenationOptions":"ObjectType: Symbol\nUsage: System`HyphenationOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`HyphenationOptions",
	"IconizedObject":"ObjectType: Symbol\nUsage: System`IconizedObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[IconizedObject[NotebookTools`IconizeDump`expr_, NotebookTools`IconizeDump`name_, (NotebookTools`IconizeDump`opts___)?BoxForm`HeldOptionQ], NotebookTools`IconizeDump`fmt_] ^:= Module[{NotebookTools`IconizeDump`head, NotebookTools`IconizeDump`dims, NotebookTools`IconizeDump`icon, NotebookTools`IconizeDump`details}, NotebookTools`IconizeDump`head = NotebookTools`IconizeDump`heldHead[HoldComplete[NotebookTools`IconizeDump`expr]]; NotebookTools`IconizeDump`dims = Dimensions[Unevaluated[NotebookTools`IconizeDump`expr]]; NotebookTools`IconizeDump`icon = NotebookTools`IconizeDump`iconizedIcon[NotebookTools`IconizeDump`head, NotebookTools`IconizeDump`dims]; NotebookTools`IconizeDump`details = Flatten[{Which[Unevaluated[NotebookTools`IconizeDump`name] =!= Automatic, {Style[NotebookTools`IconizeDump`iDefer[NotebookTools`IconizeDump`name], \"IconizedCustomName\"], NotebookTools`IconizeDump`iconizedDetail[{\"Head: \", NotebookTools`IconizeDump`iDefer @@ NotebookTools`IconizeDump`head}]}, MatchQ[NotebookTools`IconizeDump`head, _[Association] | _[List] | _[SparseArray] | _?NotebookTools`IconizeDump`heldStructuredArrayHeadQ | _[Sequence] | _[String]], {NotebookTools`IconizeDump`iconizedDefaultName[NotebookTools`IconizeDump`head], NotebookTools`IconizeDump`iconizedDetail[{\"Head: \", NotebookTools`IconizeDump`iDefer @@ NotebookTools`IconizeDump`head}]}, True, NotebookTools`IconizeDump`makeIconizedName[NotebookTools`IconizeDump`head, NotebookTools`IconizeDump`expr]], Switch[NotebookTools`IconizeDump`head, _[Association] | _[List] | _[SparseArray] | _?NotebookTools`IconizeDump`heldStructuredArrayHeadQ, If[Length[NotebookTools`IconizeDump`dims] === 1, NotebookTools`IconizeDump`iconizedDetail[{\"Length: \", Length[Unevaluated[NotebookTools`IconizeDump`expr]]}], NotebookTools`IconizeDump`iconizedDetail[{\"Dimensions: \", NotebookTools`IconizeDump`dims}]], _[Sequence], NotebookTools`IconizeDump`iconizedDetail[{\"Length: \", Length[Unevaluated[NotebookTools`IconizeDump`expr]]}], _[String], NotebookTools`IconizeDump`iconizedDetail[{\"String length: \", StringLength[NotebookTools`IconizeDump`expr]}], _, {}], NotebookTools`IconizeDump`iconizedDetail[{\"Byte count: \", ByteCount[Unevaluated[NotebookTools`IconizeDump`expr]]}]}]; Replace[Switch[OptionValue[IconizedObject, Flatten[{NotebookTools`IconizeDump`opts}], Method], Compress, With[{NotebookTools`IconizeDump`str = Compress[Unevaluated[NotebookTools`IconizeDump`expr]]}, HoldComplete[Uncompress[NotebookTools`IconizeDump`str]]], BinarySerialize, With[{NotebookTools`IconizeDump`byteArray = BinarySerialize[Unevaluated[NotebookTools`IconizeDump`expr]]}, HoldComplete[BinaryDeserialize[NotebookTools`IconizeDump`byteArray]]], Automatic | _, HoldComplete[NotebookTools`IconizeDump`expr]], HoldComplete[NotebookTools`IconizeDump`interp_] :> With[{NotebookTools`IconizeDump`newbody = NotebookTools`IconizeDump`ToIconizedObjectBoxes[NotebookTools`IconizeDump`icon, NotebookTools`IconizeDump`details, NotebookTools`IconizeDump`fmt]}, InterpretationBox[NotebookTools`IconizeDump`newbody, NotebookTools`IconizeDump`interp, SelectWithContents -> True, Selectable -> False]]]] \/; BoxForm`sufficientVersionQ[11.3]\nMakeBoxes[BoxForm`apat$:HoldPattern[IconizedObject[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"NotebookTools`Iconize`\", {{IconizedObject, _}}, Hold[IconizedObject]]\nOptions: {Method -> Automatic}\nAttributes: {HoldFirst, SequenceHold}\nFullName: System`IconizedObject",
	"IgnoreSpellCheck":"ObjectType: Symbol\nUsage: System`IgnoreSpellCheck\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IgnoreSpellCheck",
	"ImageCache":"ObjectType: Symbol\nUsage: System`ImageCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageCache",
	"ImageCacheValid":"ObjectType: Symbol\nUsage: System`ImageCacheValid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageCacheValid",
	"ImageMarkers":"ObjectType: Symbol\nUsage: System`ImageMarkers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageMarkers",
	"ImageOffset":"ObjectType: Symbol\nUsage: System`ImageOffset\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageOffset",
	"ImageRangeCache":"ObjectType: Symbol\nUsage: System`ImageRangeCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageRangeCache",
	"ImageRegion":"ObjectType: Symbol\nUsage: ImageRegion is an option for cells that specifies the size and position of the bounding box within which a graphic is rendered.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageRegion",
	"ImageRotated":"ObjectType: Symbol\nUsage: ImageRotated is an option for Export that specifies whether images should be rotated into landscape mode. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageRotated",
	"ImageSizeCache":"ObjectType: Symbol\nUsage: System`ImageSizeCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageSizeCache",
	"ImageSizeRaw":"ObjectType: Symbol\nUsage: System`ImageSizeRaw\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImageSizeRaw",
	"ImportAutoReplacements":"ObjectType: Symbol\nUsage: ImportAutoReplacements is an option for cells that specifies which replacement rules the Wolfram Language automatically applies when importing text.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ImportAutoReplacements",
	"IncludeFileExtension":"ObjectType: Symbol\nUsage: IncludeFileExtension is an option for notebooks that specifies whether the suffix \".nb\" is automatically appended to a notebook’s name when it is first saved.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IncludeFileExtension",
	"IncludeSingularTerm":"ObjectType: Symbol\nUsage:                                                                                                                   2 -s\/2\nIncludeSingularTerm is an option for LerchPhi and Zeta. With IncludeSingularTerm -> True, terms involving ((k + a) )     with k + a == 0 are included. With IncludeSingularTerm -> False, they are not.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IncludeSingularTerm",
	"Indent":"ObjectType: Symbol\nUsage: System`Indent\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[Indent[BoxForm`n_Integer], BoxForm`fmt_] ^:= RowBox[{StringJoin[Table[\" \", {BoxForm`n}]]}]\nOptions: None\nAttributes: {}\nFullName: System`Indent",
	"IndentingNewlineSpacings":"ObjectType: Symbol\nUsage: System`IndentingNewlineSpacings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IndentingNewlineSpacings",
	"IndentMaxFraction":"ObjectType: Symbol\nUsage: System`IndentMaxFraction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IndentMaxFraction",
	"IndexCreationOptions":"ObjectType: Symbol\nUsage: System`IndexCreationOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IndexCreationOptions",
	"IndexTag":"ObjectType: Symbol\nUsage: System`IndexTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`IndexTag",
	"Inequality":"ObjectType: Symbol\nUsage: Inequality represents a sequence of relational statements.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Inequality",
	"InexactNumbers":"ObjectType: Symbol\nUsage: System`InexactNumbers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InexactNumbers",
	"InformationData":"ObjectType: Symbol\nUsage: InformationData[assoc] is generated by Information[expr] and handle typesetting and element extraction.\nDocumentation: None\nOwnValues: None\nUpValues: Dataset[InformationData[(System`InformationDump`a_)?AssociationQ, ___]] ^:= Dataset[System`InformationDump`a]\nKeys[InformationData[(System`InformationDump`a_)?AssociationQ, ___]] ^:= Keys[System`InformationDump`a]\nDownValues: None\nSubValues: InformationData[(System`InformationDump`a_)?AssociationQ, ___][\"Properties\"] := Keys[System`InformationDump`a]\nInformationData[(System`InformationDump`a_)?AssociationQ, ___][System`InformationDump`arg_] := System`InformationDump`informationDataLookup[System`InformationDump`a, System`InformationDump`arg]\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`a_InformationData, BoxForm`fmt_] ^:= BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt] \/; Refresh[BoxForm`UseTextFormattingQ, None]\nMakeBoxes[InformationData[System`InformationDump`a_Association, System`InformationDump`open_:True], System`InformationDump`fmt_] ^:= With[{System`InformationDump`boxes = Block[{BoxForm`UseIcons = False}, System`InformationDump`detailBoxes[System`InformationDump`a, System`InformationDump`open, System`InformationDump`fmt]]}, InterpretationBox[System`InformationDump`boxes, InformationData[System`InformationDump`a, System`InformationDump`open]]]\nInformationData[System`InformationDump`a_Association, ___] := If[System`InformationDump`a[\"ObjectType\"] === \"Symbol\", System`InformationDump`getOuputFunctionForm[System`InformationDump`a], TableForm[Apply[List, Normal[System`InformationDump`a, Association], {1}], TableSpacing -> {0, 3}, TableDepth -> 2]]\nMakeBoxes[BoxForm`apat$:HoldPattern[InformationData[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Information`\", {{InformationData, _}, {InformationDataGrid, _}}, Hold[InformationData, InformationDataGrid]]\nOptions: None\nAttributes: {}\nFullName: System`InformationData",
	"InformationDataGrid":"ObjectType: Symbol\nUsage: System`InformationDataGrid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: InformationDataGrid[System`InformationDump`l:{__Rule}, ___] := Replace[Multicolumn[System`InformationDump`informationDataGridRules2List[System`InformationDump`l], 3], Grid[System`InformationDump`a_, System`InformationDump`b___] :> Grid[Replace[System`InformationDump`a, Null -> \"\", {2}], System`InformationDump`b]]\nMakeBoxes[InformationDataGrid[System`InformationDump`symbols_List, System`InformationDump`open_:True], System`InformationDump`fmt_] ^:= System`InformationDump`makeSymbolPanelGrid[System`InformationDump`symbols, System`InformationDump`open]\nMakeBoxes[BoxForm`apat$:HoldPattern[InformationDataGrid[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Information`\", {{InformationData, _}, {InformationDataGrid, _}}, Hold[InformationData, InformationDataGrid]]\nOptions: None\nAttributes: {}\nFullName: System`InformationDataGrid",
	"InitializationCellEvaluation":"ObjectType: Symbol\nUsage: InitializationCellEvaluation is an option for notebooks that specifies whether initialization cells in a notebook are automatically evaluated when the notebook is opened.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InitializationCellEvaluation",
	"InitializationCellWarning":"ObjectType: Symbol\nUsage: InitializationCellWarning is an option for notebooks that specifies whether a warning should be given when a notebook containing initialization cells is opened.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InitializationCellWarning",
	"InlineCounterAssignments":"ObjectType: Symbol\nUsage: System`InlineCounterAssignments\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InlineCounterAssignments",
	"InlineCounterIncrements":"ObjectType: Symbol\nUsage: System`InlineCounterIncrements\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InlineCounterIncrements",
	"InlineRules":"ObjectType: Symbol\nUsage: System`InlineRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InlineRules",
	"InputFieldBox":"ObjectType: Symbol\nUsage: System`InputFieldBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[InputFieldBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, Automatic}, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> False, DefaultBaseStyle -> \"InputField\", DefaultFieldHintStyle -> \"FieldHintStyle\", Enabled -> Automatic, FieldCompletionFunction -> Automatic, FieldHint -> Null, FieldHintStyle -> {}, FieldMasked -> False, FieldSize -> Automatic, FrameMargins -> Automatic, ImageMargins -> Automatic, ImageSize -> Automatic, MenuList -> {}}\nOptions[InputFieldBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[InputFieldBox]]\nAbsoluteOptions[InputFieldBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[InputFieldBox]]\nOptions[InputFieldBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[InputFieldBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, InputFieldBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[InputFieldBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[InputFieldBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, InputFieldBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[InputFieldBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, InputFieldBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[InputFieldBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_InputFieldBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_InputFieldBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`InputFieldBox",
	"InputFieldBoxOptions":"ObjectType: Symbol\nUsage: InputFieldBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for InputFieldBox objects.\n                           1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InputFieldBoxOptions",
	"InputGrouping":"ObjectType: Symbol\nUsage: System`InputGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InputGrouping",
	"InputSettings":"ObjectType: Symbol\nUsage: System`InputSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InputSettings",
	"InputToBoxFormPacket":"ObjectType: Symbol\nUsage: InputToBoxFormPacket is an internal symbol used for formatting.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InputToBoxFormPacket",
	"InsertionPointObject":"ObjectType: Symbol\nUsage: System`InsertionPointObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InsertionPointObject",
	"Inset3DBox":"ObjectType: Symbol\nUsage: System`Inset3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Inset3DBox] ^= {Alignment -> {Center, Center}, Background -> None, BaseStyle -> {}, DefaultBaseStyle -> {}, FormatType -> Automatic, BoxForm`Graphics3DMode -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Inset3DBox",
	"Inset3DBoxOptions":"ObjectType: Symbol\nUsage: Inset3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Inset3DBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Inset3DBoxOptions",
	"InsetBox":"ObjectType: Symbol\nUsage: System`InsetBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[InsetBox] ^= {Alignment -> {Center, Center}, Background -> None, BaseStyle -> {}, ContentSelectable -> Automatic, DefaultBaseStyle -> {}, FormatType -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`InsetBox",
	"InsetBoxOptions":"ObjectType: Symbol\nUsage: InsetBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for InsetBox objects.\n                      1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InsetBoxOptions",
	"InstanceNormalizationLayer":"ObjectType: Symbol\nUsage: InstanceNormalizationLayer[] is equivalent to NormalizationLayer[].\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: InstanceNormalizationLayer[NeuralNetworks`Private`Deprecation`args___] := NeuralNetworks`Private`Deprecation`warnAndBuild[InstanceNormalizationLayer, NormalizationLayer, NeuralNetworks`Private`Deprecation`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InstanceNormalizationLayer",
	"Integral":"ObjectType: Symbol\nUsage: System`Integral\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Integral",
	"Interlaced":"ObjectType: Symbol\nUsage: System`Interlaced\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Interlaced",
	"InterpolationPrecision":"ObjectType: Symbol\nUsage: System`InterpolationPrecision\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InterpolationPrecision",
	"InterpretTemplate":"ObjectType: Symbol\nUsage: InterpretTemplate is an experimental function used for interpreting Mathematica input.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InterpretTemplate",
	"InterruptSettings":"ObjectType: Symbol\nUsage: System`InterruptSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InterruptSettings",
	"Into":"ObjectType: Symbol\nUsage: System`Into\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Into",
	"InvisibleApplication":"ObjectType: Symbol\nUsage: System`InvisibleApplication\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InvisibleApplication",
	"InvisibleTimes":"ObjectType: Symbol\nUsage: System`InvisibleTimes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`InvisibleTimes",
	"ItemBox":"ObjectType: Symbol\nUsage: System`ItemBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ItemBox] ^:= {Alignment -> {}, AllowScriptLevelChange -> True, Background -> Automatic, BaseStyle -> {}, DefaultBaseStyle -> {}, DefaultFrameStyle -> {}, Frame -> {}, FrameStyle -> {}, ItemSize -> {}, StripOnInput -> True}\nOptions[ItemBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ItemBox]]\nAbsoluteOptions[ItemBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ItemBox]]\nOptions[ItemBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[ItemBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, ItemBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[ItemBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[ItemBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, ItemBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[ItemBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, ItemBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: BoxForm`apat$:HoldPattern[MakeExpression[_ItemBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_ItemBox, _]], \"Typeset`Wrappers`\", {{Annotation, _}, {Deploy, _}, {DynamicImage, _}, {Framed, _}, {FrameBox, _}, {Highlighted, _}, {Invisible, _}, {Item, _}, {Labeled, _}, {Magnify, _}, {Pane, _}, {PaneBox, _}, {Panel, _}, {PanelBox, _}, {Rotate, _}, {Row, _}, {Spacer, _}, {Style, _}, {StyleBox, _}, {TemplateBox, _}, {FrameBox, HoldPattern[MakeExpression[_FrameBox, _]]}, {ItemBox, HoldPattern[MakeExpression[_ItemBox, _]]}, {PaneBox, HoldPattern[MakeExpression[_PaneBox, _]]}, {PanelBox, HoldPattern[MakeExpression[_PanelBox, _]]}, {RotationBox, HoldPattern[MakeExpression[_RotationBox, _]]}, {StyleBox, HoldPattern[MakeExpression[_StyleBox, _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"Highlighted\" | \"Spacer1\" | \"Spacer2\" | \"Spacer3\" | \"RowDefault\" | \"RowNoSeparators\" | \"RowWithSeparator\" | \"RowWithSeparators\", ___], _]]}}, Hold[Annotation, Deploy, DynamicImage, Framed, FrameBox, Highlighted, Invisible, Item, ItemBox, Labeled, Magnify, Pane, PaneBox, Panel, PanelBox, Rotate, RotationBox, Row, Spacer, Style, StyleBox, DefaultOptions, TemplateBox]]\nOptions: None\nAttributes: {}\nFullName: System`ItemBox",
	"ItemBoxOptions":"ObjectType: Symbol\nUsage: ItemBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for ItemBox objects.\n                     1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ItemBoxOptions",
	"Jacobian":"ObjectType: Symbol\nUsage: Jacobian is an option for FindRoot. Jacobian -> Automatic attempts symbolic computation of the Jacobian of the system of functions whose root is being sought. A typical setting is Jacobian -> {{2 x, Sign[y]}, {y, x}}.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Jacobian",
	"JoinedCurveBox":"ObjectType: Symbol\nUsage: System`JoinedCurveBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[JoinedCurveBox] ^= {BaseStyle -> {}, CurveClosed -> False, DefaultBaseStyle -> {}, Method -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`JoinedCurveBox",
	"JoinedCurveBoxOptions":"ObjectType: Symbol\nUsage: JoinedCurveBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for JoinedCurveBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`JoinedCurveBoxOptions",
	"K":"ObjectType: Symbol\nUsage: K is a default generic name for a summation index in a symbolic sum.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`K",
	"KernelExecute":"ObjectType: Symbol\nUsage: System`KernelExecute\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`KernelExecute",
	"Kernels":"ObjectType: Symbol\nUsage: Kernels[] gives the list of running kernels available for parallel computing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Kernels[] := Parallel`Protected`$kernels\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Kernels",
	"LabeledSlider":"ObjectType: Symbol\nUsage: System`LabeledSlider\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: BoxForm`c:LabeledSlider[Dynamic[BoxForm`var_], BoxForm`domain:{BoxForm`min_, BoxForm`max_}, BoxForm`opts___] := BoxForm`rescaleControl[BoxForm`c, 1] \/; BoxForm`domainNeedsRescalingQ[BoxForm`domain]\nBoxForm`c:LabeledSlider[Dynamic[BoxForm`var_], BoxForm`domain:{BoxForm`min_, BoxForm`max_, BoxForm`step_}, BoxForm`opts___] := BoxForm`rescaleControl[BoxForm`c, (BoxForm`max - BoxForm`min)\/BoxForm`step] \/; BoxForm`domainNeedsRescalingQ[BoxForm`domain]\nLabeledSlider[Dynamic[BoxForm`expr$_, BoxForm`f$_], BoxForm`args$___, Method -> \"Queued\", BoxForm`opts$___] := BoxForm`asyncControl[LabeledSlider, Dynamic[BoxForm`expr$, BoxForm`f$], BoxForm`args$, BoxForm`opts$]\nLabeledSlider[Dynamic[BoxForm`expr$_, BoxForm`f$_], BoxForm`args$___, Method -> BoxForm`other$_, BoxForm`opts$___] := LabeledSlider[Dynamic[BoxForm`expr$, BoxForm`f$], BoxForm`args$, BoxForm`opts$]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[LabeledSlider[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: {Appearance -> Frameless, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, ControlPlacement -> Automatic, DefaultBaseStyle -> LabeledSlider, DefaultLabelStyle -> LabeledSliderLabel, DefaultOptions -> {}, Enabled -> Automatic, Exclusions -> {}, FieldSize -> {{5, 10}, {1, 2}}, ImageMargins -> 0, ImageSize -> Automatic}\nAttributes: {}\nFullName: System`LabeledSlider",
	"LambertW":"ObjectType: Symbol\nUsage: System`LambertW\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: System`LambertW",
	"LanguageOptions":"ObjectType: Symbol\nUsage: System`LanguageOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LanguageOptions",
	"Launch":"ObjectType: Symbol\nUsage: Launch is a setting for the LinkMode option of LinkOpen.  LinkMode->Launch causes a link to be created by launching another program.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Launch",
	"LayoutInformation":"ObjectType: Symbol\nUsage: System`LayoutInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LayoutInformation",
	"LegendreType":"ObjectType: Symbol\nUsage: System`LegendreType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LegendreType",
	"Lexicographic":"ObjectType: Symbol\nUsage: System`Lexicographic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Lexicographic",
	"LicenseID":"ObjectType: Symbol\nUsage: LicenseID is an option to Encode which specifies the required value of $LicenseID on the computer that reads the encoded file. If no value is specified, any value of $LicenseID is allowed on the file-reading computer. A setting for LicenseID must be a string.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LicenseID",
	"LightSources":"ObjectType: Symbol\nUsage: LightSources is an option for Graphics3D and related functions that specifies the properties of point light sources for simulated illumination. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LightSources",
	"LimitsPositioningTokens":"ObjectType: Symbol\nUsage: LimitsPositioningTokens is an option for selections that specifies a set of characters for which the option LimitsPositioning is set to True by default.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LimitsPositioningTokens",
	"Line3DBox":"ObjectType: Symbol\nUsage: System`Line3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Line3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> None, VertexNormals -> None}\nOptions[Line3DBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[Line3DBox]]\nAbsoluteOptions[Line3DBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[Line3DBox]]\nOptions[Line3DBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[Line3DBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, Line3DBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[Line3DBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[Line3DBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, Line3DBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[Line3DBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, Line3DBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Line3DBox",
	"Line3DBoxOptions":"ObjectType: Symbol\nUsage: Line3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Line3DBox objects.\n                       1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Line3DBoxOptions",
	"LinearFilter":"ObjectType: Symbol\nUsage: System`LinearFilter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: LinearFilter[(Statistics`DataSmoothersDump`data_)?Statistics`DataSmoothersDump`quantityVectorQorMatrixQ, Statistics`DataSmoothersDump`restargs___] := Block[{Statistics`DataSmoothersDump`res}, Statistics`DataSmoothersDump`res = Statistics`DataSmoothersDump`iQuantityFilter[Statistics`DataSmoothersDump`iLinearFilter[{##1}] & , Statistics`DataSmoothersDump`data, Statistics`DataSmoothersDump`restargs]; Statistics`DataSmoothersDump`res \/; Statistics`DataSmoothersDump`res =!= $Failed]\nLinearFilter[Statistics`DataSmoothersDump`args___] := Block[{Statistics`DataSmoothersDump`res}, Statistics`DataSmoothersDump`res = Statistics`DataSmoothersDump`iLinearFilter[{Statistics`DataSmoothersDump`args}]; Statistics`DataSmoothersDump`res \/; Statistics`DataSmoothersDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinearFilter",
	"LinearProgramming":"ObjectType: Symbol\nUsage: LinearProgramming[c, m, b] finds a vector x that minimizes the quantity c . x subject to the constraints m . x ≥ b and x ≥ 0. LinearProgramming[c, m, {{b , s }, {b , s }, …}] finds a vector x that minimizes c . x subject to x ≥ 0 and linear constraints specified by the matrix m and the pairs {b , s }. For each row m  of m, the corresponding constraint is m  . x ≥ b  if s  == 1, or m  . x == b  if s  == 0, or m  . x ≤ b  if s  == -1. LinearProgramming[c, m, b, l] minimizes c . x subject to the constraints specified by m and b and x ≥ l. LinearProgramming[c, m, b, {l , l , …}] minimizes c . x subject to the constraints specified by m and b and x  ≥ l . LinearProgramming[c, m, b, {{l , u }, {l , u }, …}] minimizes c . x subject to the constraints specified by m and b and l  ≤ x  ≤ u . LinearProgramming[c, m, b, lu, dom] takes the elements of x to be in the domain dom, either Reals or Integers.LinearProgramming[c, m, b, lu, {dom , dom , …}] takes x  to be in the domain dom .\n                                                                                                                                                         1   1     2   2                                                                                                                               i   i                 i                                        i        i     i           i         i     i           i        i     i                                                                                                                                              1   2                                                                           i    i                                1   1     2   2                                                                            i    i    i                                                                                                                                                   1     2             i                        i\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, Tolerance -> Automatic}\nAttributes: {}\nFullName: System`LinearProgramming",
	"LineBox":"ObjectType: Symbol\nUsage: System`LineBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[LineBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> None}\nOptions[LineBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[LineBox]]\nAbsoluteOptions[LineBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[LineBox]]\nOptions[LineBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[LineBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, LineBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[LineBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[LineBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, LineBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[LineBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, LineBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`LineBox",
	"LineBoxOptions":"ObjectType: Symbol\nUsage: LineBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for LineBox objects.\n                     1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LineBoxOptions",
	"LineBreak":"ObjectType: Symbol\nUsage: System`LineBreak\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LineBreak",
	"LinebreakAdjustments":"ObjectType: Symbol\nUsage: LinebreakAdjustments is an option for selections that sets parameters used for calculating where automatic line breaks should be inserted.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinebreakAdjustments",
	"LinebreakSemicolonWeighting":"ObjectType: Symbol\nUsage: System`LinebreakSemicolonWeighting\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinebreakSemicolonWeighting",
	"LineBreakWithin":"ObjectType: Symbol\nUsage: LineBreakWithin is an option for selections that specifies whether line breaks occur automatically when the end of a line is reached.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LineBreakWithin",
	"LineWrapParts":"ObjectType: Symbol\nUsage: System`LineWrapParts\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LineWrapParts",
	"LinkConnectedQ":"ObjectType: Symbol\nUsage: System`LinkConnectedQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkConnectedQ",
	"LinkError":"ObjectType: Symbol\nUsage: LinkError[link] returns error information for link in the form { errorNumber, errorExplanation }.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkError",
	"LinkFlush":"ObjectType: Symbol\nUsage: LinkFlush[link] transmits immediately any locally buffered outgoing expressions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkFlush",
	"LinkHost":"ObjectType: Symbol\nUsage: LinkHost is an option for LinkOpen that specifies on what computer a program should be launched or on what computer a listening link will be found.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkHost",
	"LinkMode":"ObjectType: Symbol\nUsage: LinkMode is an option for LinkOpen that specifies how the link is to be established and connected.  The possible settings for LinkMode are Launch, Listen, Connect, and Loopback.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkMode",
	"LinkOpen":"ObjectType: Symbol\nUsage: LinkOpen[\"prog\"] starts the external program prog and opens a MathLink connection to it.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {LinkHost -> , LinkMode -> Launch, LinkOptions -> 256, LinkProtocol -> Automatic}\nAttributes: {}\nFullName: System`LinkOpen",
	"LinkOptions":"ObjectType: Symbol\nUsage: System`LinkOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkOptions",
	"LinkReadHeld":"ObjectType: Symbol\nUsage: LinkReadHeld[link] reads an expression via WSTP from link and returns it wrapped in Hold.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkReadHeld",
	"LinkService":"ObjectType: Symbol\nUsage: LinkService[\"service\", l] is an object that represents an active connection to the WSTP service.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: LinkService[System`Dump`name_, System`Dump`rest___] := StringJoin[\"<<LinkService[\", ToString[System`Dump`name], \"]>>\"]\nLinkService \/: <<LinkService[System`Dump`name_]>> := StringJoin[\"<<LinkService[\", ToString[System`Dump`name], \"]>>\"]\nMakeBoxes[BoxForm`apat$:HoldPattern[LinkService[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`ElidedForms`\", {{BoxForm`SummaryItem, _}, {AlgebraicNumber, _}, {Root, _}, {BezierFunction, _}, {BSplineFunction, _}, {InterpolatingFunction, _}, {LinearSolveFunction, _}, {NearestFunction, _}, {ParametricFunction, _}, {ContinuousWaveletData, _}, {DiscreteWaveletData, _}, {ImagePyramid, _}, {LiftingFilterData, _}, {SparseArray, _}, {SymmetrizedArray, _}, {OptimumFlowData, _}, {RegionDistanceFunction, _}, {RegionMemberFunction, _}, {RegionNearestFunction, _}, {Region`SemialgebraicRegion, _}, {EventData, _}, {TemporalData, _}, {WeightedData, _}, {SurvivalModel, _}, {TransformationFunction, _}, {CompiledFunction, _}, {Dispatch, HoldPattern[MakeBoxes[_Dispatch, StandardForm | TraditionalForm]]}, {ByteArray, HoldPattern[MakeBoxes[_ByteArray, StandardForm | TraditionalForm]]}, {NumericArray, HoldPattern[MakeBoxes[_NumericArray, StandardForm | TraditionalForm]]}, {BooleanFunction, HoldPattern[MakeBoxes[_BooleanFunction, StandardForm | TraditionalForm]]}, {InputStream, _}, {LibraryFunction, _}, {LinkObject, _}, {LinkService, _}, {OutputStream, _}, {ScheduledTaskObject, _}, {ColorProfileData, _}, {CMYKColor, _}, {GrayLevel, _}, {Hue, _}, {LABColor, _}, {LCHColor, _}, {LUVColor, _}, {RGBColor, _}, {XYZColor, _}}, Hold[BoxForm`SummaryItem, BezierFunction, BSplineFunction, InterpolatingFunction, LinearSolveFunction, NearestFunction, ParametricFunction, ContinuousWaveletData, DiscreteWaveletData, ImagePyramid, LiftingFilterData, SparseArray, SymmetrizedArray, OptimumFlowData, RegionDistanceFunction, RegionMemberFunction, RegionNearestFunction, Region`SemialgebraicRegion, BooleanFunction, EventData, TemporalData, WeightedData, SurvivalModel, TransformationFunction, AlgebraicNumber, Root, CompiledFunction, Dispatch, InputStream, LibraryFunction, LinkObject, LinkService, OutputStream, ScheduledTaskObject, ByteArray, NumericArray, ColorProfileData, CMYKColor, Hue, LABColor, LCHColor, LUVColor, GrayLevel, RGBColor, XYZColor]]\nOptions: None\nAttributes: {}\nFullName: System`LinkService",
	"LinkWriteHeld":"ObjectType: Symbol\nUsage: LinkWriteHeld[link, Hold[expr], (flush : True)] writes expr (without the Hold) via WSTP to link (synchronizing unless flush is False).\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LinkWriteHeld",
	"Listen":"ObjectType: Symbol\nUsage: Listen is a setting for the LinkMode option of LinkOpen.  LinkMode->Listen causes a link to be created that listens on a named port for an incoming connection request.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Listen",
	"ListPickerBoxBackground":"ObjectType: Symbol\nUsage: System`ListPickerBoxBackground\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ListPickerBoxBackground",
	"Literal":"ObjectType: Symbol\nUsage: System`Literal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Literal",
	"LiteralSearch":"ObjectType: Symbol\nUsage: System`LiteralSearch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LiteralSearch",
	"LocalizeDefinitions":"ObjectType: Symbol\nUsage: System`LocalizeDefinitions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LocalizeDefinitions",
	"LocatorBox":"ObjectType: Symbol\nUsage: System`LocatorBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[LocatorBox] ^= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, Automatic}, AutoAction -> False, Background -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> {}, Enabled -> Automatic, FrameMargins -> 3., ImageMargins -> 0., ImageSize -> Automatic, LocatorCentering -> False, LocatorRegion -> Automatic}\nOptions[LocatorBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[LocatorBox]]\nAbsoluteOptions[LocatorBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[LocatorBox]]\nOptions[LocatorBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[LocatorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, LocatorBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[LocatorBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[LocatorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, LocatorBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[LocatorBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, LocatorBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LocatorBox",
	"LocatorBoxOptions":"ObjectType: Symbol\nUsage: LocatorBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for LocatorBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LocatorBoxOptions",
	"LocatorCentering":"ObjectType: Symbol\nUsage: System`LocatorCentering\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LocatorCentering",
	"LocatorPaneBox":"ObjectType: Symbol\nUsage: System`LocatorPaneBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[LocatorPaneBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> Automatic, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"LocatorPane\", Enabled -> Automatic, Exclusions -> {}, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> Automatic, LocatorAutoCreate -> False, TouchscreenAutoZoom -> False, UseGraphicsRange -> All}\nOptions[LocatorPaneBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[LocatorPaneBox]]\nAbsoluteOptions[LocatorPaneBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[LocatorPaneBox]]\nOptions[LocatorPaneBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[LocatorPaneBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, LocatorPaneBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[LocatorPaneBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[LocatorPaneBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, LocatorPaneBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[LocatorPaneBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, LocatorPaneBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[LocatorPaneBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_LocatorPaneBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_LocatorPaneBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`LocatorPaneBox",
	"LocatorPaneBoxOptions":"ObjectType: Symbol\nUsage: LocatorPaneBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for LocatorPaneBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LocatorPaneBoxOptions",
	"LongEqual":"ObjectType: Symbol\nUsage: System`LongEqual\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LongEqual",
	"LongestMatch":"ObjectType: Symbol\nUsage: LongestMatch[p] is a string pattern object matching the longest sequence of characters consistent with the string pattern p.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LongestMatch",
	"LongForm":"ObjectType: Symbol\nUsage: LongForm is an option for Information. With LongForm -> True, the full information of a symbol is printed. With LongForm -> False the usage of a symbol is printed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LongForm",
	"Loopback":"ObjectType: Symbol\nUsage: Loopback is a setting for the LinkMode option of LinkOpen.  LinkMode->Loopback causes a link to be created that is not connected to another program.  Expressions written to the link are read back from the same link.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Loopback",
	"LUBackSubstitution":"ObjectType: Symbol\nUsage: System`LUBackSubstitution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Modulus -> 0}\nAttributes: {}\nFullName: System`LUBackSubstitution",
	"MachineID":"ObjectType: Symbol\nUsage: MachineID is an option to Encode which specifies the required value of $MachineID on the computer that reads the encoded file. If no value is specified, any value of $MachineID is allowed on the file-reading computer. A setting for MachineID must be a string.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MachineID",
	"MachineName":"ObjectType: Symbol\nUsage: MachineName is an option to Encode which specifies the required value of $MachineName on the computer that reads the encoded file. If no value is specified, any value of $MachineName is allowed on the file-reading computer. A setting for MachineName must be a string.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MachineName",
	"MacintoshSystemPageSetup":"ObjectType: Symbol\nUsage: System`MacintoshSystemPageSetup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MacintoshSystemPageSetup",
	"MainSolve":"ObjectType: Symbol\nUsage: MainSolve[eqns] is the underlying function for transforming systems of equations. Solve and Eliminate call it. The equations must be of the form lhs == rhs. They can be combined using && and ||. MainSolve returns False if no solutions to the equations exist, and True if all values of variables are solutions. MainSolve rearranges the equations using certain directives. MainSolve[eqns, vars, elim, rest] attempts to rearrange the equations eqns so as to solve for the variables vars, and eliminate the variables elim. The list rest can be included to specify the elimination order for any remaining variables.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {InverseFunctions -> Automatic, MakeRules -> False, Method -> 1, Mode -> Rational, Sort -> True, VerifySolutions -> False, WorkingPrecision -> Infinity}\nAttributes: {}\nFullName: System`MainSolve",
	"MaintainDynamicCaches":"ObjectType: Symbol\nUsage: System`MaintainDynamicCaches\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MaintainDynamicCaches",
	"MakeRules":"ObjectType: Symbol\nUsage: MakeRules is an option to Solve and related functions. With MakeRules -> True, the result is presented as an AlgebraicRulesData object. With MakeRules -> False, the result is presented as a list of rules.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MakeRules",
	"MatchLocalNameQ":"ObjectType: Symbol\nUsage: MatchLocalNameQ is an internal symbol.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`MatchLocalNameQ",
	"Material":"ObjectType: Symbol\nUsage: System`Material\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Material",
	"MathematicaNotation":"ObjectType: Symbol\nUsage: System`MathematicaNotation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MathematicaNotation",
	"MathMLText":"ObjectType: Symbol\nUsage: System`MathMLText\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MathMLText",
	"MaxBend":"ObjectType: Symbol\nUsage: System`MaxBend\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MaxBend",
	"MaxPoints":"ObjectType: Symbol\nUsage: MaxPoints is an option for NIntegrate specifying the maximum total number of times to sample the integrand.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MaxPoints",
	"Menu":"ObjectType: Symbol\nUsage: System`Menu\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Menu",
	"MenuAppearance":"ObjectType: Symbol\nUsage: System`MenuAppearance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MenuAppearance",
	"MenuEvaluator":"ObjectType: Symbol\nUsage: System`MenuEvaluator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MenuEvaluator",
	"MenuItem":"ObjectType: Symbol\nUsage: System`MenuItem\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: System`MenuItem",
	"MenuList":"ObjectType: Symbol\nUsage: System`MenuList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MenuList",
	"MergeDifferences":"ObjectType: Symbol\nUsage: System`MergeDifferences\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MergeDifferences",
	"MeshRange":"ObjectType: Symbol\nUsage: System`MeshRange\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MeshRange",
	"MessageObject":"ObjectType: Symbol\nUsage: System`MessageObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[System`Dump`obj_MessageObject, BoxForm`fmt_] ^:= Module[{System`Dump`assoc, System`Dump`alwaysGrid, System`Dump`sometimesGrid}, System`Dump`assoc = If[Length[System`Dump`obj] < 1, Association[], System`Dump`obj[[1]]]; If[AssociationQ[System`Dump`assoc], If[Length[System`Dump`assoc] < 1, System`Dump`assoc = Association[\"MessageTemplate\" -> None]]; System`Dump`alwaysGrid = {}; (AppendTo[System`Dump`alwaysGrid, BoxForm`SummaryItem[{StringJoin[#1, \": \"], Extract[System`Dump`assoc, #1, HoldForm]}]] & ) \/@ Sort[Keys[System`Dump`assoc]]; System`Dump`sometimesGrid = {}; BoxForm`ArrangeSummaryBox[MessageObject, System`Dump`obj, BoxForm`GenericIcon[\"MessageObject\"], System`Dump`alwaysGrid, System`Dump`sometimesGrid, BoxForm`fmt, \"Interpretable\" -> False], System`Dump`obj]]\nOptions: None\nAttributes: {HoldAll}\nFullName: System`MessageObject",
	"MessageOptions":"ObjectType: Symbol\nUsage: System`MessageOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MessageOptions",
	"MessagesNotebook":"ObjectType: Symbol\nUsage: System`MessagesNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: MessagesNotebook[] := MathLink`CallFrontEnd[FrontEnd`MessagesNotebook[]]\nMessagesNotebook[System`FEDump`args___] := (ArgumentCountQ[MessagesNotebook, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 0, 0]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MessagesNotebook",
	"MetaCharacters":"ObjectType: Symbol\nUsage: MetaCharacters is an option to StringPosition. With MetaCharacters -> None, no strings have special meanings. MetaCharacters -> {c , c , c } specifies the metacharacters for pattern escape, single character matching and multiple character matching. MetaCharacters -> Automatic is equivalent to MetaCharacters -> {\"\\\\\", \".\", \"*\"}.\n                                                                                                                                  1   2   3\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MetaCharacters",
	"MethodOptions":"ObjectType: Symbol\nUsage: System`MethodOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MethodOptions",
	"MinRecursion":"ObjectType: Symbol\nUsage: MinRecursion is an option for NIntegrate and other numerical functions that use a recursive algorithm. With MinRecursion -> n, a minimum depth of recursion of n is used before tests for convergence begin.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MinRecursion",
	"MinSize":"ObjectType: Symbol\nUsage: MinSize is an option of certain BoxForm primitives.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MinSize",
	"Mode":"ObjectType: Symbol\nUsage: Mode is an option to Eliminate and related functions that specifies in what sense the equations are to be solved. The possible settings for Mode are Generic, Modular, and Rational.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Mode",
	"Modular":"ObjectType: Symbol\nUsage: Modular is a setting for the option Mode in Solve and related functions, which specifies that equations need be satisfied only modulo an integer.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Modular",
	"MoleculeEquivalentQ":"ObjectType: Symbol\nUsage: MoleculeEquivalentQ[mol , mol ] gives True if mol  and mol  represent equivalent molecules and gives False otherwise.\n                       1     2                   1        2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: MoleculeEquivalentQ[(Chemistry`PatternMatching`Private`mol1_)?MoleculeQ, Chemistry`PatternMatching`Private`mol1_] := True\nMoleculeEquivalentQ[(Chemistry`PatternMatching`Private`mol1_)?MoleculeQ, (Chemistry`PatternMatching`Private`mols__)?MoleculeQ] := With[{Chemistry`PatternMatching`Private`vals = MoleculeValue[{Chemistry`PatternMatching`Private`mol1, Chemistry`PatternMatching`Private`mols}, Chemistry`PatternMatching`Private`$EquivalenceProperty]}, SameQ @@ Chemistry`PatternMatching`Private`vals \/; ListQ[Chemistry`PatternMatching`Private`vals]]\nMoleculeEquivalentQ[Chemistry`Common`Private`args$:HoldPattern[PatternSequence[Chemistry`Common`Private`bef$___, Chemistry`Common`Private`e$:Entity[\"Chemical\", _], Chemistry`Common`Private`aft$___]]] := With[{Chemistry`Common`Private`m$ = Molecule[Chemistry`Common`Private`e$]}, MoleculeEquivalentQ[Chemistry`Common`Private`bef$, Chemistry`Common`Private`m$, Chemistry`Common`Private`aft$] \/; MoleculeQ[Chemistry`Common`Private`m$]]\nMoleculeEquivalentQ[Chemistry`PatternMatching`Private`args___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {}\nAttributes: {}\nFullName: System`MoleculeEquivalentQ",
	"Momentary":"ObjectType: Symbol\nUsage: System`Momentary\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Momentary",
	"MonomialOrder":"ObjectType: Symbol\nUsage: System`MonomialOrder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MonomialOrder",
	"MouseAppearanceTag":"ObjectType: Symbol\nUsage: System`MouseAppearanceTag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MouseAppearanceTag",
	"MouseButtons":"ObjectType: Symbol\nUsage: MouseButtons[] gives a list of the mouse buttons currently being pressed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: MouseButtons[System`FEDump`e___] := MathLink`CallFrontEnd[FrontEnd`Value[FrontEnd`MouseButtons[System`FEDump`e], FrontEnd`$TrackingEnabled]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MouseButtons",
	"MousePointerNote":"ObjectType: Symbol\nUsage: System`MousePointerNote\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MousePointerNote",
	"MultilaunchWarning":"ObjectType: Symbol\nUsage: MultilaunchWarning is a global option that specifies whether a warning is given when you try to modify user preferences while running two copies of the Wolfram System simultaneously.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MultilaunchWarning",
	"MultiLetterItalics":"ObjectType: Symbol\nUsage: System`MultiLetterItalics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MultiLetterItalics",
	"MultiLetterStyle":"ObjectType: Symbol\nUsage: System`MultiLetterStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MultiLetterStyle",
	"MultilineFunction":"ObjectType: Symbol\nUsage: MultilineFunction is an option for UnderscriptBox and related box objects that specifies what to do when the contents of a box object are too long to fit on one line.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`MultilineFunction",
	"Multiplicity":"ObjectType: Symbol\nUsage: Multiplicity is an option to Roots. Multiplicity -> n specifies that the multiplicity of each of the roots is n in the final result.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Multiplicity",
	"NamespaceBox":"ObjectType: Symbol\nUsage: System`NamespaceBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[NamespaceBox] ^:= {AutoDelete -> False, BaseStyle -> {}, DefaultBaseStyle -> {}, DefaultTooltipStyle -> \"TooltipLabel\", DeleteWithContents -> True, DeletionWarning -> False, Editable -> Automatic, BoxForm`PrivateNames -> {}, BoxForm`PublicNames -> {}, Selectable -> Automatic, SelectWithContents -> False, StripWrapperBoxes -> False, SyntaxForm -> Automatic, Tooltip -> None, TooltipDelay -> 0., TooltipStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeExpression[NamespaceBox[\"LinguisticAssistant\", WolframAlphaClient`Private`theboxes_, ___?OptionQ], WolframAlphaClient`Private`fmt_] ^:= Switch[WolframAlphaClient`Private`theboxes, HoldPattern[DynamicModuleBox][{_[Typeset`query$$, WolframAlphaClient`Private`query_], _[Typeset`boxes$$, WolframAlphaClient`Private`boxes_], ___, _[Typeset`querystate$$, WolframAlphaClient`Private`querystate_]}, ___], WolframAlphaClient`Private`LinguisticAssistantMakeExpression[WolframAlphaClient`Private`theboxes[[1,1,2]], WolframAlphaClient`Private`theboxes[[1,2,2]], WolframAlphaClient`Private`theboxes[[1,-1,2]], WolframAlphaClient`Private`fmt], HoldPattern[DynamicModuleBox][{_[_, WolframAlphaClient`Private`query_], _[_, WolframAlphaClient`Private`boxes_], ___}, ___], WolframAlphaClient`Private`LinguisticAssistantMakeExpression[WolframAlphaClient`Private`theboxes[[1,1,2]], WolframAlphaClient`Private`theboxes[[1,2,2]], WolframAlphaClient`Private`fmt], _, HoldComplete[$Failed]]\nBoxForm`apat$:HoldPattern[MakeExpression[NamespaceBox[\"LinguisticAssistant\", ___], _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[NamespaceBox[\"LinguisticAssistant\", ___], _]], \"AlphaIntegration`\", {{NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"LinguisticAssistant\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"CloudControlEqual\", ___], _]]}}, Hold[NamespaceBox, TagBox]]\nMakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", WolframAlphaClient`Private`boxes_, ___?OptionQ], WolframAlphaClient`Private`fmt_] ^:= Block[{WolframAlphaClient`Private`expr, WolframAlphaClient`Private`q, WolframAlphaClient`Private`opts, WolframAlphaClient`Private`chosen, WolframAlphaClient`Private`newq}, WolframAlphaClient`Private`expr = MakeExpression[WolframAlphaClient`Private`boxes, WolframAlphaClient`Private`fmt]; If[ !MatchQ[WolframAlphaClient`Private`expr, HoldComplete[DynamicModule[{___}, __]]], Return[WolframAlphaClient`Private`expr]]; WolframAlphaClient`Private`expr = Extract[WolframAlphaClient`Private`expr, {1, 1}, HoldComplete]; WolframAlphaClient`Private`q = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`q, WolframAlphaClient`Private`q_String], ___}] :> WolframAlphaClient`Private`q, _ -> $Failed}]; WolframAlphaClient`Private`opts = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`opts, WolframAlphaClient`Private`opts_List], ___}] :> WolframAlphaClient`Private`opts, _ -> $Failed}]; WolframAlphaClient`Private`chosen = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`chosen, WolframAlphaClient`Private`chosen_List], ___}] :> WolframAlphaClient`Private`chosen, _ -> $Failed}]; WolframAlphaClient`Private`newq = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`newq, WolframAlphaClient`Private`newq_String], ___}] :> WolframAlphaClient`Private`newq, _ -> $Failed}]; Switch[{StringQ[WolframAlphaClient`Private`newq] && WolframAlphaClient`Private`newq =!= WolframAlphaClient`Private`q, WolframAlphaClient`Private`chosen}, {True, _}, WolframAlphaClient`Private`returnExtrusionEvaluate[WolframAlphaClient`Private`newq, WolframAlphaClient`Private`opts, WolframAlphaClient`Private`chosen], {_, {WolframAlphaClient`Private`podid_, WolframAlphaClient`Private`title_, WolframAlphaClient`Private`c_, WolframAlphaClient`Private`n_, \"Input\" | \"Output\", WolframAlphaClient`Private`mform_String}}, WolframAlphaClient`Private`returnMathematicaForm[WolframAlphaClient`Private`q, WolframAlphaClient`Private`opts, WolframAlphaClient`Private`chosen], {_, {WolframAlphaClient`Private`podid_, WolframAlphaClient`Private`title_, WolframAlphaClient`Private`c_, WolframAlphaClient`Private`n_, WolframAlphaClient`Private`dataexposure_, WolframAlphaClient`Private`mform_String}}, ToExpression[WolframAlphaClient`Private`chosen[[6]], InputForm, HoldComplete], {_, {WolframAlphaClient`Private`podid_, WolframAlphaClient`Private`title_, WolframAlphaClient`Private`c_, WolframAlphaClient`Private`n_, \"Content\"}}, WolframAlphaClient`Private`returnSingleResult[WolframAlphaClient`Private`q, WolframAlphaClient`Private`opts, WolframAlphaClient`Private`chosen], {_, {} | _}, WolframAlphaClient`Private`returnWolframAlphaExpression[WolframAlphaClient`Private`q, WolframAlphaClient`Private`opts]]]\nBoxForm`apat$:HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", ___], _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", ___], _]], \"AlphaIntegration`\", {{NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"LinguisticAssistant\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"CloudControlEqual\", ___], _]]}}, Hold[NamespaceBox, TagBox]]\nMakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", WolframAlphaClient`Private`boxes_, ___?OptionQ], WolframAlphaClient`Private`fmt_] ^:= Block[{WolframAlphaClient`Private`expr, WolframAlphaClient`Private`q, WolframAlphaClient`Private`newq}, WolframAlphaClient`Private`expr = MakeExpression[WolframAlphaClient`Private`boxes, WolframAlphaClient`Private`fmt]; If[ !MatchQ[WolframAlphaClient`Private`expr, HoldComplete[DynamicModule[{___}, __]]], Return[WolframAlphaClient`Private`expr]]; WolframAlphaClient`Private`expr = Extract[WolframAlphaClient`Private`expr, {1, 1}, HoldComplete]; WolframAlphaClient`Private`q = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`q, WolframAlphaClient`Private`q_String], ___}] :> WolframAlphaClient`Private`q, _ -> $Failed}]; WolframAlphaClient`Private`newq = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`newq, WolframAlphaClient`Private`newq_String], ___}] :> WolframAlphaClient`Private`newq, _ -> $Failed}]; Switch[StringQ[WolframAlphaClient`Private`newq] && WolframAlphaClient`Private`newq =!= WolframAlphaClient`Private`q, True, WolframAlphaClient`Private`returnExtrusionEvaluate[WolframAlphaClient`Private`newq, {}, {}], _, HoldComplete[Null]]]\nBoxForm`apat$:HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", ___], _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", ___], _]], \"AlphaIntegration`\", {{NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"LinguisticAssistant\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"CloudControlEqual\", ___], _]]}}, Hold[NamespaceBox, TagBox]]\nMakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", WolframAlphaClient`Private`boxes_, ___?OptionQ], WolframAlphaClient`Private`fmt_] ^:= Block[{WolframAlphaClient`Private`expr, WolframAlphaClient`Private`q, WolframAlphaClient`Private`newq}, WolframAlphaClient`Private`expr = MakeExpression[WolframAlphaClient`Private`boxes, WolframAlphaClient`Private`fmt]; If[ !MatchQ[WolframAlphaClient`Private`expr, HoldComplete[DynamicModule[{___}, __]]], Return[WolframAlphaClient`Private`expr]]; WolframAlphaClient`Private`expr = Extract[WolframAlphaClient`Private`expr, {1, 1}, HoldComplete]; WolframAlphaClient`Private`q = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`q, WolframAlphaClient`Private`q_String], ___}] :> WolframAlphaClient`Private`q, _ -> $Failed}]; WolframAlphaClient`Private`newq = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`newq, WolframAlphaClient`Private`newq_String], ___}] :> WolframAlphaClient`Private`newq, _ -> $Failed}]; WolframAlphaClient`Private`chosen = Replace[WolframAlphaClient`Private`expr, {HoldComplete[{___, _[Typeset`chosen, WolframAlphaClient`Private`chosen_String], ___}] :> WolframAlphaClient`Private`chosen, _ -> $Failed}]; Switch[{StringQ[WolframAlphaClient`Private`newq] && WolframAlphaClient`Private`newq =!= WolframAlphaClient`Private`q, WolframAlphaClient`Private`chosen}, {True, _}, WolframAlphaClient`Private`returnExtrusionEvaluate[WolframAlphaClient`Private`newq, {}, {}], {_, WolframAlphaClient`Private`mform_String}, ToExpression[WolframAlphaClient`Private`chosen, InputForm, HoldComplete], {_, _}, HoldComplete[Null]]]\nBoxForm`apat$:HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", ___], _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", ___], _]], \"AlphaIntegration`\", {{NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"LinguisticAssistant\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryNoResults\", ___], _]]}, {NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"WolframAlphaQueryParseResults\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"CloudControlEqual\", ___], _]]}}, Hold[NamespaceBox, TagBox]]\nMakeBoxes[BoxForm`apat$:HoldPattern[NamespaceBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[NamespaceBox[\"InputFormAssistant\" | \"TeXAssistant\", ___], _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[NamespaceBox[\"InputFormAssistant\" | \"TeXAssistant\", ___], _]], \"NotebookTools`InputAssistant`\", {{NamespaceBox, HoldPattern[MakeExpression[NamespaceBox[\"InputFormAssistant\" | \"TeXAssistant\", ___], _]]}}, Hold[NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_NamespaceBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_NamespaceBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`NamespaceBox",
	"NamespaceBoxOptions":"ObjectType: Symbol\nUsage: System`NamespaceBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NamespaceBoxOptions",
	"NBernoulliB":"ObjectType: Symbol\nUsage:                                                   th\nNBernoulliB[n] gives the numerical value of the n   Bernoulli number. NBernoulliB[n, d] gives the result to d-digit precision.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NBernoulliB",
	"NeedCurrentFrontEndPackagePacket":"ObjectType: Symbol\nUsage: System`NeedCurrentFrontEndPackagePacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NeedCurrentFrontEndPackagePacket",
	"NeedCurrentFrontEndSymbolsPacket":"ObjectType: Symbol\nUsage: System`NeedCurrentFrontEndSymbolsPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NeedCurrentFrontEndSymbolsPacket",
	"NestedScriptRules":"ObjectType: Symbol\nUsage: System`NestedScriptRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NestedScriptRules",
	"NetInformation":"ObjectType: Symbol\nUsage: NetInformation[net] gives a report about the neural network net.NetInformation[net, \"prop\"] gives the value of property property \"prop\" of net.NetInformation[{net , net , …}, \"prop\"] gives a list containing the result for each net .\n                                                                                                                                                                  1     2                                                             i\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NetInformation[NeuralNetworks`Private`NetInformation`net_, NeuralNetworks`Private`NetInformation`prop_] := Catch[If[ !NeuralNetworks`ValidNetQ[NeuralNetworks`Private`NetInformation`net] &&  !VectorQ[NeuralNetworks`Private`NetInformation`net, NeuralNetworks`ValidNetQ], GeneralUtilities`ThrowFailure[\"invnet\"]]; Scan[If[ !GeneralUtilities`ValidPropertyQ[NetInformation, #1, NeuralNetworks`Private`NetInformation`$NetInformationProperties], GeneralUtilities`ThrowFailure[]] & , Developer`ToList[NeuralNetworks`Private`NetInformation`prop]]; Message[NetInformation::obsalt, NetInformation, Information]; If[ListQ[NeuralNetworks`Private`NetInformation`net], (NeuralNetworks`Private`NetInfo[#1, NeuralNetworks`Private`NetInformation`prop] & ) \/@ NeuralNetworks`Private`NetInformation`net, NeuralNetworks`Private`NetInfo[NeuralNetworks`Private`NetInformation`net, NeuralNetworks`Private`NetInformation`prop]], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[NetInformation]]\nNetInformation[NeuralNetworks`Private`NetInformation`net_] := Catch[Block[{NeuralNetworks`Private`NetInformation`$net}, If[ !NeuralNetworks`ValidNetQ[NeuralNetworks`Private`NetInformation`net], GeneralUtilities`ThrowFailure[\"invnet\"]]; NeuralNetworks`Private`NetInformation`$net = NeuralNetworks`Private`NetInformation`net; Message[NetInformation::obsalt, NetInformation, Information]; Information[NeuralNetworks`Private`NetInformation`net]], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[NetInformation]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NetInformation",
	"NetSharedArray":"ObjectType: Symbol\nUsage: NetSharedArray[\"name\"] represents an array in a net that is shared by more than one layer.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NetSharedArray",
	"NetworkPacketRecordingDuring":"ObjectType: Symbol\nUsage: System`NetworkPacketRecordingDuring\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NetworkPacketRecordingDuring[TINSLink`Private`all___] := NetworkPacketTrace[TINSLink`Private`all]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`NetworkPacketRecordingDuring",
	"Next":"ObjectType: Symbol\nUsage: System`Next\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Next",
	"NextScheduledTaskTime":"ObjectType: Symbol\nUsage: NextScheduledTaskTime[obj] gives the next execution time of the scheduled task represented by obj.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NextScheduledTaskTime",
	"NonAssociative":"ObjectType: Symbol\nUsage: NonAssociative is a symbol that represents a non-associative operator in formatting functions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NonAssociative",
	"NormalGrouping":"ObjectType: Symbol\nUsage: System`NormalGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NormalGrouping",
	"NotebookConvertSettings":"ObjectType: Symbol\nUsage: NotebookConvertSettings is a global option that specifies settings for converting imported legacy notebooks.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookConvertSettings",
	"NotebookCreate":"ObjectType: Symbol\nUsage: NotebookCreate[] creates a new open notebook in the front end. NotebookCreate[options] sets up the specified options for the new notebook. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NotebookCreate[] := MathLink`CallFrontEnd[FrontEnd`NotebookCreateReturnObject[]]\nNotebookCreate[System`FEDump`opts:(_Rule | _RuleDelayed)...] := MathLink`CallFrontEnd[FrontEnd`NotebookCreateReturnObject[System`FEDump`opts]]\nNotebookCreate[System`FEDump`args___] := (ArgumentCountQ[NotebookCreate, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 0, 0]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookCreate",
	"NotebookCreateReturnObject":"ObjectType: Symbol\nUsage: System`NotebookCreateReturnObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookCreateReturnObject",
	"NotebookDefault":"ObjectType: Symbol\nUsage: System`NotebookDefault\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookDefault",
	"NotebookFindReturnObject":"ObjectType: Symbol\nUsage: System`NotebookFindReturnObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookFindReturnObject",
	"NotebookGetLayoutInformationPacket":"ObjectType: Symbol\nUsage: System`NotebookGetLayoutInformationPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookGetLayoutInformationPacket",
	"NotebookGetMisspellingsPacket":"ObjectType: Symbol\nUsage: System`NotebookGetMisspellingsPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookGetMisspellingsPacket",
	"NotebookInterfaceObject":"ObjectType: Symbol\nUsage: System`NotebookInterfaceObject\nDocumentation: None\nOwnValues: None\nUpValues: Options[System`FEDump`obj_NotebookInterfaceObject] := System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`Options[System`FEDump`obj]]]\nOptions[System`FEDump`obj_NotebookInterfaceObject, System`FEDump`option_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`Options[System`FEDump`obj, System`FEDump`optlist]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf}, Message[Options::optnf, System`FEDump`sf, NotebookInterfaceObject]], System`FEDump`resnames]]; System`FEDump`result]\nFullOptions[System`FEDump`obj_NotebookInterfaceObject] ^:= System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`FullOptions[System`FEDump`obj]]]\nNotebookInterfaceObject \/: FullOptions[System`FEDump`obj_NotebookInterfaceObject, System`FEDump`opts_List] := (FullOptions[System`FEDump`obj, #1] & ) \/@ Flatten[{System`FEDump`opts}]\nFullOptions[System`FEDump`obj_NotebookInterfaceObject, System`FEDump`option_] ^:= Block[{System`FEDump`result}, System`FEDump`result = MathLink`CallFrontEnd[FrontEnd`FullOptions[System`FEDump`obj, System`FEDump`option]]; If[System`FEDump`result === $Failed, Message[FullOptions::optx, System`FEDump`option, System`FEDump`obj]]; System`FEDump`result]\nAbsoluteOptions[System`FEDump`obj_NotebookInterfaceObject] ^:= System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`AbsoluteOptions[System`FEDump`obj]]]\nAbsoluteOptions[System`FEDump`obj_NotebookInterfaceObject, System`FEDump`option_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option}]}, System`FEDump`result = System`FEDump`sort[MathLink`CallFrontEnd[FrontEnd`AbsoluteOptions[System`FEDump`obj, System`FEDump`optlist]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, System`FEDump`obj] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[System`FEDump`obj_NotebookInterfaceObject, System`FEDump`opts__] ^:= MathLink`CallFrontEnd[FrontEnd`SetOptions[System`FEDump`obj, System`FEDump`opts], System`FEDump`NoResult]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookInterfaceObject",
	"NotebookOpenReturnObject":"ObjectType: Symbol\nUsage: System`NotebookOpenReturnObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookOpenReturnObject",
	"NotebookPath":"ObjectType: Symbol\nUsage: NotebookPath is a global option that determines which directories are searched when a specified notebook is needed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookPath",
	"NotebookPutReturnObject":"ObjectType: Symbol\nUsage: System`NotebookPutReturnObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookPutReturnObject",
	"NotebookResetGeneratedCells":"ObjectType: Symbol\nUsage: System`NotebookResetGeneratedCells\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookResetGeneratedCells",
	"NotebookSaveAs":"ObjectType: Symbol\nUsage: System`NotebookSaveAs\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookSaveAs",
	"NotebookSetupLayoutInformationPacket":"ObjectType: Symbol\nUsage: System`NotebookSetupLayoutInformationPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NotebookSetupLayoutInformationPacket",
	"NProductFactors":"ObjectType: Symbol\nUsage: NProductFactors is an option for NProduct. NProductFactors -> n explicitly includes n factors in the product before extrapolation.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NProductFactors",
	"NSumTerms":"ObjectType: Symbol\nUsage: NSumTerms is an option for NSum. NSumTerms -> n explicitly includes n terms in the sum before extrapolation.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`NSumTerms",
	"NValues":"ObjectType: Symbol\nUsage: NValues[f] gives a list of transformation rules corresponding to all numerical values (values for N[f[x, …], …], etc.) defined for the symbol f.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Sort -> True}\nAttributes: {HoldAll}\nFullName: System`NValues",
	"ObjectExistsQ":"ObjectType: Symbol\nUsage: ObjectExistsQ gives True if the object exists and False otherwise.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ObjectExistsQ[CloudObject`Private`failureObj:Failure[\"CloudObjectInvalidPathFailure\" | \"CloudObjectInvalidUUID\" | \"CloudObjectInvalidHyperlink\", ___]] := CloudObject`Private`failureObj\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ObjectExistsQ",
	"OLEData":"ObjectType: Symbol\nUsage: System`OLEData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OLEData",
	"Open":"ObjectType: Symbol\nUsage: System`Open\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Open",
	"OpenerBox":"ObjectType: Symbol\nUsage: System`OpenerBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[OpenerBox] ^:= {Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> False, DefaultBaseStyle -> \"Opener\", Enabled -> Automatic, ImageMargins -> 0}\nOptions[OpenerBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[OpenerBox]]\nAbsoluteOptions[OpenerBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[OpenerBox]]\nOptions[OpenerBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[OpenerBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, OpenerBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[OpenerBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[OpenerBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, OpenerBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[OpenerBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, OpenerBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[OpenerBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_OpenerBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_OpenerBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`OpenerBox",
	"OpenerBoxOptions":"ObjectType: Symbol\nUsage: OpenerBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for OpenerBox objects.\n                       1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OpenerBoxOptions",
	"OpenFunctionInspectorPacket":"ObjectType: Symbol\nUsage: System`OpenFunctionInspectorPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OpenFunctionInspectorPacket",
	"OpenSpecialOptions":"ObjectType: Symbol\nUsage: System`OpenSpecialOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OpenSpecialOptions",
	"OpenTemporary":"ObjectType: Symbol\nUsage: OpenTemporary[] opens a temporary file to which output can be written, and returns an OutputStream object. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {BinaryFormat -> False, CharacterEncoding :> Automatic, DOSTextFormat :> True, FormatType -> InputForm, Method -> Automatic, NumberMarks :> $NumberMarks, PageHeight -> 22, PageWidth -> 78, TotalHeight -> Infinity, TotalWidth -> Infinity}\nAttributes: {}\nFullName: System`OpenTemporary",
	"OptionInspectorSettings":"ObjectType: Symbol\nUsage: OptionInspectorSettings is a global option that specifies the display of options in the Option Inspector.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OptionInspectorSettings",
	"OptionQ":"ObjectType: Symbol\nUsage: OptionQ[e] returns True if e can be considered an option or list of options, and False otherwise.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OptionQ",
	"OptionsPacket":"ObjectType: Symbol\nUsage: System`OptionsPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OptionsPacket",
	"OptionValueBox":"ObjectType: Symbol\nUsage: System`OptionValueBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[OptionValueBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}}\nOptions[OptionValueBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[OptionValueBox]]\nAbsoluteOptions[OptionValueBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[OptionValueBox]]\nOptions[OptionValueBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[OptionValueBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, OptionValueBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[OptionValueBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[OptionValueBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, OptionValueBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[OptionValueBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, OptionValueBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OptionValueBox",
	"OptionValueBoxOptions":"ObjectType: Symbol\nUsage: OptionValueBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for OptionValueBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OptionValueBoxOptions",
	"OutputAutoOverwrite":"ObjectType: Symbol\nUsage: OutputAutoOverwrite is an option for notebooks that specifies whether the output of a command should replace any existing output from a previous evaluation.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OutputAutoOverwrite",
	"OutputFormData":"ObjectType: Symbol\nUsage: System`OutputFormData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OutputFormData",
	"OutputGrouping":"ObjectType: Symbol\nUsage: System`OutputGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OutputGrouping",
	"OutputMathEditExpression":"ObjectType: Symbol\nUsage: OutputMathEditExpression is an internal symbol used for formatting.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OutputMathEditExpression",
	"Over":"ObjectType: Symbol\nUsage: System`Over\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Over",
	"OverlayBox":"ObjectType: Symbol\nUsage: System`OverlayBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[OverlayBox] ^:= {Alignment -> {Automatic, Automatic}, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, DefaultBaseStyle -> \"Overlay\", FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> Automatic}\nOptions[OverlayBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[OverlayBox]]\nAbsoluteOptions[OverlayBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[OverlayBox]]\nOptions[OverlayBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[OverlayBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, OverlayBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[OverlayBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[OverlayBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, OverlayBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[OverlayBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, OverlayBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[OverlayBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_OverlayBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_OverlayBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`OverlayBox",
	"OverlayBoxOptions":"ObjectType: Symbol\nUsage: OverlayBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for OverlayBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`OverlayBoxOptions",
	"Package":"ObjectType: Symbol\nUsage: System`Package\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Package",
	"PackingMethod":"ObjectType: Symbol\nUsage: PackingMethod is an option for GraphPlot and related functions that specifies how disconnected components should be packed together in the layout produced.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PackingMethod",
	"PackPaclet":"ObjectType: Symbol\nUsage: The experimental function PackPaclet is now obsolete and is superseded by CreatePacletArchive.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PackPaclet[PacletManager`Manager`Private`args___] := (Message[PackPaclet::expobs, PackPaclet, CreatePacletArchive]; CreatePacletArchive[PacletManager`Manager`Private`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PackPaclet",
	"PacletDirectoryAdd":"ObjectType: Symbol\nUsage: The experimental function PacletDirectoryAdd is now obsolete and is superseded by PacletDirectoryLoad.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletDirectoryAdd[PacletManager`Manager`Private`args___] := (Message[PacletDirectoryAdd::expobs, PacletDirectoryAdd, PacletDirectoryLoad]; PacletDirectoryLoad[PacletManager`Manager`Private`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletDirectoryAdd",
	"PacletDirectoryRemove":"ObjectType: Symbol\nUsage: StringTemplate[The experimental function `1` is now obsolete and is superseded by `2`., PacletDirectoryRemove, PacletDirectoryUnload]\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletDirectoryRemove[PacletManager`Manager`Private`args___] := (Message[PacletDirectoryRemove::expobs, PacletDirectoryRemove, PacletDirectoryUnload]; PacletDirectoryUnload[PacletManager`Manager`Private`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletDirectoryRemove",
	"PacletInformation":"ObjectType: Symbol\nUsage: The experimental function PacletInformation is now obsolete. Use Information[PacletObject[\"pacletname\"]], or property-extraction syntax like PacletObject[\"pacletname\"][\"prop\"] or PacletObject[\"pacletname\"][All] instead.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletInformation[PacletManager`Paclet`Private`str_String, PacletManager`Paclet`Private`key_:All] := Module[{PacletManager`Paclet`Private`paclet}, If[StringMatchQ[PacletManager`Paclet`Private`str, \"*.paclet\", IgnoreCase -> True] || StringMatchQ[PacletManager`Paclet`Private`str, \"*.cdf\", IgnoreCase -> True], If[FileExistsQ[PacletManager`Paclet`Private`str], PacletManager`Paclet`Private`paclet = PacletManager`CreatePaclet[PacletManager`Paclet`Private`str]; If[Head[PacletManager`Paclet`Private`paclet] === PacletObject, PacletInformation[PacletManager`Paclet`Private`paclet], {}], {}], PacletInformation[{PacletManager`Paclet`Private`str, \"\"}, PacletManager`Paclet`Private`key]]]\nPacletInformation[{PacletManager`Paclet`Private`name_String, PacletManager`Paclet`Private`version_String}, PacletManager`Paclet`Private`key_:All] := PacletInformation[PacletManager`Paclet`Private`name -> PacletManager`Paclet`Private`version, PacletManager`Paclet`Private`key]\nPacletInformation[PacletManager`Paclet`Private`name_String -> PacletManager`Paclet`Private`version_String, PacletManager`Paclet`Private`key_:All] := Module[{PacletManager`Paclet`Private`paclets}, PacletManager`Paclet`Private`paclets = PacletFind[{PacletManager`Paclet`Private`name, PacletManager`Paclet`Private`version}]; If[PacletManager`Paclet`Private`paclets === {}, PacletManager`Paclet`Private`paclets = PacletFind[{PacletManager`Paclet`Private`name, PacletManager`Paclet`Private`version}, \"Enabled\" -> False]]; If[Length[PacletManager`Paclet`Private`paclets] == 0, {}, PacletInformation[First[PacletManager`Paclet`Private`paclets], PacletManager`Paclet`Private`key]]]\nPacletInformation[PacletManager`Paclet`Private`paclets:{___PacletObject}, PacletManager`Paclet`Private`key_:All] := (PacletInformation[#1, PacletManager`Paclet`Private`key] & ) \/@ PacletManager`Paclet`Private`paclets\nPacletInformation[PacletManager`Paclet`Private`paclet_PacletObject, PacletManager`Paclet`Private`key_:All] := Module[{PacletManager`Paclet`Private`rules}, PacletManager`Paclet`Private`rules = Thread[PacletManager`Paclet`Private`$pacletInformationPIFields -> PacletManager`Package`getPIValue[PacletManager`Paclet`Private`paclet, PacletManager`Paclet`Private`$pacletInformationPIFields]]; If[PacletManager`Paclet`Private`key === All, PacletManager`Paclet`Private`rules, PacletManager`Paclet`Private`key \/. PacletManager`Paclet`Private`rules]]\nPacletInformation[PacletManager`Manager`Private`args___] := (Message[PacletInformation::piobs]; PacletManager`PacletInformation[PacletManager`Manager`Private`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletInformation",
	"PacletObjectQ":"ObjectType: Symbol\nUsage: PacletObjectQ[expr] returns True or False depending on whether its argument is a PacletObject expression.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletObjectQ[_PacletObject] = True\nPacletObjectQ[___] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PacletObjectQ",
	"PacletUpdate":"ObjectType: Symbol\nUsage: The experimental function PacletUpdate is now obsolete and is superseded by PacletInstall.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletUpdate[PacletManager`Manager`Private`pacletName_String, PacletManager`Manager`Private`opts:OptionsPattern[]] := Module[{PacletManager`Manager`Private`localPaclets, PacletManager`Manager`Private`newOpts}, PacletManager`Manager`Private`localPaclets = Quiet[PacletFind[PacletManager`Manager`Private`pacletName, Association[\"Enabled\" -> All, \"Internal\" -> All]]]; If[Length[PacletManager`Manager`Private`localPaclets] == 0, PacletManager`Manager`Private`newOpts = {KeepExistingVersion -> OptionValue[\"KeepExisting\"], PacletSite -> OptionValue[\"Site\"], UpdatePacletSites -> OptionValue[\"UpdateSites\"]}; If[TrueQ[OptionValue[\"Asynchronous\"]], PacletInstallSubmit[PacletManager`Manager`Private`pacletName, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstallSubmit]]], PacletInstall[PacletManager`Manager`Private`pacletName, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstall]]]], PacletUpdate[First[PacletManager`Manager`Private`localPaclets], PacletManager`Manager`Private`opts]]]\nPacletUpdate[PacletManager`Manager`Private`paclet_PacletObject, PacletManager`Manager`Private`opts:OptionsPattern[]] := Module[{PacletManager`Manager`Private`result = Null, PacletManager`Manager`Private`remote, PacletManager`Manager`Private`bestRemote, PacletManager`Manager`Private`site, PacletManager`Manager`Private`isNewSite, PacletManager`Manager`Private`updateSites, PacletManager`Manager`Private`newOpts, PacletManager`Manager`Private`lastSite}, PacletManager`Manager`Private`site = OptionValue[\"Site\"]; If[StringQ[PacletManager`Manager`Private`site], PacletManager`Package`try[PacletManager`Manager`Private`isNewSite =  !PacletManager`Package`isKnownSite[PacletManager`Manager`Private`site]; PacletSiteRegister[PacletManager`Manager`Private`site]; PacletSiteUpdate[PacletManager`Manager`Private`site]; PacletManager`Manager`Private`result = PacletUpdate[PacletManager`Manager`Private`paclet, \"KeepExisting\" -> OptionValue[\"KeepExisting\"], \"UpdateSites\" -> False, \"Asynchronous\" -> OptionValue[\"Asynchronous\"]], If[PacletManager`Manager`Private`isNewSite, PacletSiteUnregister[PacletManager`Manager`Private`site]]]; Return[PacletManager`Manager`Private`result]]; PacletManager`Manager`Private`updateSites = OptionValue[\"UpdateSites\"]; If[TrueQ[PacletManager`Manager`Private`updateSites], Quiet[PacletSiteUpdate \/@ PacletSites[]]]; PacletManager`Manager`Private`remote = PacletFindRemote[PacletManager`Manager`Private`paclet[\"Name\"], UpdatePacletSites -> False]; If[PacletManager`Manager`Private`updateSites === Automatic && (Length[PacletManager`Manager`Private`remote] == 0 ||  !PacletNewerQ[First[PacletManager`Manager`Private`remote][\"Version\"], PacletManager`Manager`Private`paclet[\"Version\"]]), PacletManager`Manager`Private`lastSite = PacletManager`Package`lastUpdatedPacletSite[]; If[Length[PacletManager`Manager`Private`lastSite] > 1 && PacletManager`Package`differenceInDays[PacletManager`Manager`Private`lastSite[[2]], Date[]] > 0.25, PacletManager`Manager`Private`remote = PacletFindRemote[PacletManager`Manager`Private`paclet[\"Name\"], UpdatePacletSites -> True]]]; If[Length[PacletManager`Manager`Private`remote] > 0, PacletManager`Manager`Private`bestRemote = First[PacletManager`Manager`Private`remote]; If[PacletNewerQ[PacletManager`Manager`Private`bestRemote[\"Version\"], PacletManager`Manager`Private`paclet[\"Version\"]], PacletManager`Manager`Private`newOpts = {KeepExistingVersion -> OptionValue[\"KeepExisting\"], PacletSite -> OptionValue[\"Site\"], UpdatePacletSites -> OptionValue[\"UpdateSites\"]}; If[TrueQ[OptionValue[\"Asynchronous\"]], PacletManager`Manager`Private`result = PacletInstallSubmit[PacletManager`Manager`Private`bestRemote, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstallSubmit]]], PacletManager`Manager`Private`result = PacletInstall[PacletManager`Manager`Private`bestRemote, FilterRules[PacletManager`Manager`Private`newOpts, Options[PacletInstall]]]]], Message[PacletUpdate::uptodate, PacletManager`Manager`Private`paclet[\"Name\"]]]; PacletManager`Manager`Private`result]\nPacletUpdate[PacletManager`Manager`Private`args___] := (Message[PacletUpdate::expobs, PacletUpdate, PacletInstall]; PacletManager`PacletUpdate[PacletManager`Manager`Private`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {KeepExisting -> Automatic, Site -> Automatic, UpdateSites -> Automatic, Asynchronous -> False}\nAttributes: {}\nFullName: System`PacletUpdate",
	"PageFooterLines":"ObjectType: Symbol\nUsage: PageFooterLines is an option for notebooks that specifies whether a horizontal line is inserted at the bottom of each page when the notebook is printed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PageFooterLines",
	"PageHeaderLines":"ObjectType: Symbol\nUsage: PageHeaderLines is an option for notebooks that specifies whether a horizontal line is inserted at the top of each page when the notebook is printed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PageHeaderLines",
	"PageHeight":"ObjectType: Symbol\nUsage: System`PageHeight\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PageHeight",
	"PalettePath":"ObjectType: Symbol\nUsage: PalettePath is a global option that specifies which directories the Wolfram System searches for palettes on startup.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PalettePath",
	"PaneBox":"ObjectType: Symbol\nUsage: System`PaneBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PaneBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> Automatic, AppearanceElements -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, DefaultBaseStyle -> \"Pane\", Enabled -> Automatic, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> Automatic, ImageSizeAction -> Automatic, Scrollbars -> False, ScrollPosition -> {0, 0}, StripOnInput -> False}\nOptions[PaneBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PaneBox]]\nAbsoluteOptions[PaneBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PaneBox]]\nOptions[PaneBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[PaneBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, PaneBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[PaneBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[PaneBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, PaneBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[PaneBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, PaneBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[PaneBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Wrappers`\", {{Annotation, _}, {Deploy, _}, {DynamicImage, _}, {Framed, _}, {FrameBox, _}, {Highlighted, _}, {Invisible, _}, {Item, _}, {Labeled, _}, {Magnify, _}, {Pane, _}, {PaneBox, _}, {Panel, _}, {PanelBox, _}, {Rotate, _}, {Row, _}, {Spacer, _}, {Style, _}, {StyleBox, _}, {TemplateBox, _}, {FrameBox, HoldPattern[MakeExpression[_FrameBox, _]]}, {ItemBox, HoldPattern[MakeExpression[_ItemBox, _]]}, {PaneBox, HoldPattern[MakeExpression[_PaneBox, _]]}, {PanelBox, HoldPattern[MakeExpression[_PanelBox, _]]}, {RotationBox, HoldPattern[MakeExpression[_RotationBox, _]]}, {StyleBox, HoldPattern[MakeExpression[_StyleBox, _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"Highlighted\" | \"Spacer1\" | \"Spacer2\" | \"Spacer3\" | \"RowDefault\" | \"RowNoSeparators\" | \"RowWithSeparator\" | \"RowWithSeparators\", ___], _]]}}, Hold[Annotation, Deploy, DynamicImage, Framed, FrameBox, Highlighted, Invisible, Item, ItemBox, Labeled, Magnify, Pane, PaneBox, Panel, PanelBox, Rotate, RotationBox, Row, Spacer, Style, StyleBox, DefaultOptions, TemplateBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_PaneBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_PaneBox, _]], \"Typeset`Wrappers`\", {{Annotation, _}, {Deploy, _}, {DynamicImage, _}, {Framed, _}, {FrameBox, _}, {Highlighted, _}, {Invisible, _}, {Item, _}, {Labeled, _}, {Magnify, _}, {Pane, _}, {PaneBox, _}, {Panel, _}, {PanelBox, _}, {Rotate, _}, {Row, _}, {Spacer, _}, {Style, _}, {StyleBox, _}, {TemplateBox, _}, {FrameBox, HoldPattern[MakeExpression[_FrameBox, _]]}, {ItemBox, HoldPattern[MakeExpression[_ItemBox, _]]}, {PaneBox, HoldPattern[MakeExpression[_PaneBox, _]]}, {PanelBox, HoldPattern[MakeExpression[_PanelBox, _]]}, {RotationBox, HoldPattern[MakeExpression[_RotationBox, _]]}, {StyleBox, HoldPattern[MakeExpression[_StyleBox, _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"Highlighted\" | \"Spacer1\" | \"Spacer2\" | \"Spacer3\" | \"RowDefault\" | \"RowNoSeparators\" | \"RowWithSeparator\" | \"RowWithSeparators\", ___], _]]}}, Hold[Annotation, Deploy, DynamicImage, Framed, FrameBox, Highlighted, Invisible, Item, ItemBox, Labeled, Magnify, Pane, PaneBox, Panel, PanelBox, Rotate, RotationBox, Row, Spacer, Style, StyleBox, DefaultOptions, TemplateBox]]\nOptions: None\nAttributes: {}\nFullName: System`PaneBox",
	"PaneBoxOptions":"ObjectType: Symbol\nUsage: PaneBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for PaneBox objects.\n                     1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PaneBoxOptions",
	"PanelBox":"ObjectType: Symbol\nUsage: System`PanelBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PanelBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, \"Palette\"}, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, DefaultBaseStyle -> \"Panel\", Enabled -> Automatic, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> Automatic, StripOnInput -> False}\nOptions[PanelBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PanelBox]]\nAbsoluteOptions[PanelBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PanelBox]]\nOptions[PanelBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[PanelBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, PanelBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[PanelBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[PanelBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, PanelBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[PanelBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, PanelBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[PanelBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Wrappers`\", {{Annotation, _}, {Deploy, _}, {DynamicImage, _}, {Framed, _}, {FrameBox, _}, {Highlighted, _}, {Invisible, _}, {Item, _}, {Labeled, _}, {Magnify, _}, {Pane, _}, {PaneBox, _}, {Panel, _}, {PanelBox, _}, {Rotate, _}, {Row, _}, {Spacer, _}, {Style, _}, {StyleBox, _}, {TemplateBox, _}, {FrameBox, HoldPattern[MakeExpression[_FrameBox, _]]}, {ItemBox, HoldPattern[MakeExpression[_ItemBox, _]]}, {PaneBox, HoldPattern[MakeExpression[_PaneBox, _]]}, {PanelBox, HoldPattern[MakeExpression[_PanelBox, _]]}, {RotationBox, HoldPattern[MakeExpression[_RotationBox, _]]}, {StyleBox, HoldPattern[MakeExpression[_StyleBox, _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"Highlighted\" | \"Spacer1\" | \"Spacer2\" | \"Spacer3\" | \"RowDefault\" | \"RowNoSeparators\" | \"RowWithSeparator\" | \"RowWithSeparators\", ___], _]]}}, Hold[Annotation, Deploy, DynamicImage, Framed, FrameBox, Highlighted, Invisible, Item, ItemBox, Labeled, Magnify, Pane, PaneBox, Panel, PanelBox, Rotate, RotationBox, Row, Spacer, Style, StyleBox, DefaultOptions, TemplateBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_PanelBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_PanelBox, _]], \"Typeset`Wrappers`\", {{Annotation, _}, {Deploy, _}, {DynamicImage, _}, {Framed, _}, {FrameBox, _}, {Highlighted, _}, {Invisible, _}, {Item, _}, {Labeled, _}, {Magnify, _}, {Pane, _}, {PaneBox, _}, {Panel, _}, {PanelBox, _}, {Rotate, _}, {Row, _}, {Spacer, _}, {Style, _}, {StyleBox, _}, {TemplateBox, _}, {FrameBox, HoldPattern[MakeExpression[_FrameBox, _]]}, {ItemBox, HoldPattern[MakeExpression[_ItemBox, _]]}, {PaneBox, HoldPattern[MakeExpression[_PaneBox, _]]}, {PanelBox, HoldPattern[MakeExpression[_PanelBox, _]]}, {RotationBox, HoldPattern[MakeExpression[_RotationBox, _]]}, {StyleBox, HoldPattern[MakeExpression[_StyleBox, _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"Highlighted\" | \"Spacer1\" | \"Spacer2\" | \"Spacer3\" | \"RowDefault\" | \"RowNoSeparators\" | \"RowWithSeparator\" | \"RowWithSeparators\", ___], _]]}}, Hold[Annotation, Deploy, DynamicImage, Framed, FrameBox, Highlighted, Invisible, Item, ItemBox, Labeled, Magnify, Pane, PaneBox, Panel, PanelBox, Rotate, RotationBox, Row, Spacer, Style, StyleBox, DefaultOptions, TemplateBox]]\nOptions: None\nAttributes: {}\nFullName: System`PanelBox",
	"PanelBoxOptions":"ObjectType: Symbol\nUsage: PanelBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for PanelBox objects.\n                      1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PanelBoxOptions",
	"PaneSelectorBox":"ObjectType: Symbol\nUsage: System`PaneSelectorBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PaneSelectorBox] ^:= {Alignment -> {Automatic, Automatic}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"PaneSelector\", FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> All, TransitionDirection -> Left, TransitionDuration -> 0.5, TransitionEffect -> None}\nOptions[PaneSelectorBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PaneSelectorBox]]\nAbsoluteOptions[PaneSelectorBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PaneSelectorBox]]\nOptions[PaneSelectorBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[PaneSelectorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, PaneSelectorBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[PaneSelectorBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[PaneSelectorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, PaneSelectorBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[PaneSelectorBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, PaneSelectorBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[PaneSelectorBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_PaneSelectorBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_PaneSelectorBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`PaneSelectorBox",
	"PaneSelectorBoxOptions":"ObjectType: Symbol\nUsage: PaneSelectorBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for PaneSelectorBox objects.\n                             1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PaneSelectorBoxOptions",
	"PaperWidth":"ObjectType: Symbol\nUsage: System`PaperWidth\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PaperWidth",
	"Parameter":"ObjectType: Symbol\nUsage: System`Parameter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Parameter",
	"ParameterVariables":"ObjectType: Symbol\nUsage: ParameterVariables is an option for GroebnerBasis and PolynomialReduce. These variables will always be last in the ordering. By default, all variables that are not otherwise classified will become parameter variables. By specifying them explicitly one fixes their relative positions in the overall variable ordering.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ParameterVariables",
	"ParentConnect":"ObjectType: Symbol\nUsage: System`ParentConnect\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ParentConnect",
	"ParentForm":"ObjectType: Symbol\nUsage: ParentForm sets the parent form for a boxes format.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ParentForm",
	"Parenthesize":"ObjectType: Symbol\nUsage: Parenthesize[ expr, fmt, prec, group] or Parenthesize[ expr, fmt, {prec, group}] will represent expr in format fmt and parenthesize it if necessary when it is an operand to an operator of the given precedence and grouping.Parenthesize[expr, fmt, head] infers prec and group from the operator, if any, used by the symbol head in fmt.Parenthesize[expr, fmt, prec, group, side] or Parenthesize[expr, fmt, head, side] assume expr appears on the specified side of the operator.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Parenthesize",
	"ParentList":"ObjectType: Symbol\nUsage: System`ParentList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ParentList",
	"PartialD":"ObjectType: Symbol\nUsage: System`PartialD\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PartialD",
	"PasteAutoQuoteCharacters":"ObjectType: Symbol\nUsage: System`PasteAutoQuoteCharacters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PasteAutoQuoteCharacters",
	"PasteBoxFormInlineCells":"ObjectType: Symbol\nUsage: PasteBoxFormInlineCells is an option for cells that specifies whether a new inline cell is created when a typeset expression is pasted into a non-box-type cell.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PasteBoxFormInlineCells",
	"PausedTime":"ObjectType: Symbol\nUsage: System`PausedTime\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PausedTime",
	"PeriodicInterpolation":"ObjectType: Symbol\nUsage: System`PeriodicInterpolation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PeriodicInterpolation",
	"Perpendicular":"ObjectType: Symbol\nUsage: System`Perpendicular\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Perpendicular",
	"PersistentValue":"ObjectType: Symbol\nUsage: PersistentValue[\"name\"] represents the persistent value associated with the key \"name\".PersistentValue[\"name\", loc] represents the persistent value associated with name stored in persistence location loc. PersistentValue[\"name\", {loc , …}] represents the persistent value associated with name at the first of the locations loc  at which it occurs.\n                                                                                                                                                                                                                                         1                                                                                            i\nDocumentation: None\nOwnValues: None\nUpValues: Remove[PersistentValue[System`Dump`args__]] ^:= StartUp`Persistence`pvRemove[System`Dump`args]\nDownValues: PersistentValue[System`Dump`key_, System`Dump`loc_String -> System`Dump`sub_, System`Dump`opts:OptionsPattern[]] := PersistentValue[System`Dump`key, PersistenceLocation[System`Dump`loc, System`Dump`sub], System`Dump`opts]\nPersistentValue[System`Dump`key_, System`Dump`opts:OptionsPattern[]] := PersistentValue[System`Dump`key, $PersistencePath, System`Dump`opts]\nPersistentValue[System`Dump`key_, System`Dump`path0_, OptionsPattern[]] := StartUp`Persistence`pvGet[System`Dump`key, System`Dump`path0, {OptionValue[MergingFunction]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ExpirationDate -> None, MergingFunction -> Automatic, PersistenceTime -> None, ValuePreprocessingFunction -> Automatic}\nAttributes: {}\nFullName: System`PersistentValue",
	"PIDData":"ObjectType: Symbol\nUsage: PIDData[…] represents PID data generated by PIDTune function.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: PIDData[Control`PIDRulesDump`f1_, Control`PIDRulesDump`f_, Control`PIDRulesDump`idmtd_, Control`PIDRulesDump`idparams_, {Control`PIDRulesDump`b_, Control`PIDRulesDump`c_, Control`PIDRulesDump`n_}, {Control`PIDRulesDump`kp_, Control`PIDRulesDump`ti_, Control`PIDRulesDump`td_}, Control`PIDRulesDump`var_, Control`PIDRulesDump`tfsys_][Control`PIDRulesDump`prop_] := Control`PIDRulesDump`getProperties[Control`PIDRulesDump`f1, Control`PIDRulesDump`f, Control`PIDRulesDump`idmtd, Control`PIDRulesDump`idparams, {Control`PIDRulesDump`b, Control`PIDRulesDump`c, Control`PIDRulesDump`n}, {Control`PIDRulesDump`kp, Control`PIDRulesDump`ti, Control`PIDRulesDump`td}, Control`PIDRulesDump`tfsys, Control`PIDRulesDump`prop]\nPIDData[Control`PIDRulesDump`f_, Control`PIDRulesDump`gm_, Control`PIDRulesDump`pm_, Control`PIDRulesDump`rest___][\"GainMargins\"] := Control`PIDRulesDump`gm\nPIDData[Control`PIDRulesDump`f_, Control`PIDRulesDump`gm_, Control`PIDRulesDump`pm_, Control`PIDRulesDump`rest___][\"PhaseMargins\"] := Control`PIDRulesDump`pm\nPIDData[Control`PIDRulesDump`f_, Control`PIDRulesDump`gm_, Control`PIDRulesDump`pm_, Control`PIDRulesDump`rest___][\"GainPhaseMargins\"] := {Control`PIDRulesDump`gm, Control`PIDRulesDump`pm}\nPIDData[Control`PIDRulesDump`f_, Control`PIDRulesDump`args__, Control`PIDRulesDump`stabunstab_, Control`PIDRulesDump`or_, Control`PIDRulesDump`k_, Control`PIDRulesDump`tfin_][\"Stable\"] := Control`PIDRulesDump`stabunstab\nPIDData[Control`PIDRulesDump`f_, Control`PIDRulesDump`args__, Control`PIDRulesDump`stabunstab_, Control`PIDRulesDump`or_, Control`PIDRulesDump`k_, Control`PIDRulesDump`tfin_][\"StaticGain\"] := Control`PIDRulesDump`k\nPIDData[Control`PIDRulesDump`f_, Control`PIDRulesDump`args__, {Control`PIDRulesDump`tset_, Control`PIDRulesDump`atset_}, Control`PIDRulesDump`stabunstab_, {Control`PIDRulesDump`trise_, Control`PIDRulesDump`atrise_}, Control`PIDRulesDump`k_, {Control`PIDRulesDump`oshoot_, Control`PIDRulesDump`aoshoot_}][\"OutputResponse\"] := {Control`PIDRulesDump`k, Control`PIDRulesDump`oshoot, Control`PIDRulesDump`trise, Control`PIDRulesDump`tset, Control`PIDRulesDump`aoshoot, Control`PIDRulesDump`atrise, Control`PIDRulesDump`atset}\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[Control`PIDRulesDump`expr_PIDData, Control`PIDRulesDump`fmt___] ^:= Block[{Control`PIDRulesDump`res}, Control`PIDRulesDump`res = Control`PIDRulesDump`pidData[Control`PIDRulesDump`expr, Control`PIDRulesDump`fmt]; Control`PIDRulesDump`res \/; Control`PIDRulesDump`res =!= $Failed]\nOptions: None\nAttributes: {}\nFullName: System`PIDData",
	"Pivoting":"ObjectType: Symbol\nUsage: Pivoting is an option to certain matrix decomposition functions. With Pivoting -> False, no pivoting is done. With Pivoting -> True, column pivoting is carried out and the list of matrices returned is augmented by the appropriate permutation matrix.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Pivoting",
	"PixelConstrained":"ObjectType: Symbol\nUsage: PixelConstrained is an option for ArrayPlot that specifies how to constrain cells to align with displayed pixels.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PixelConstrained",
	"Plot3Matrix":"ObjectType: Symbol\nUsage: System`Plot3Matrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Plot3Matrix",
	"PlotDivision":"ObjectType: Symbol\nUsage: PlotDivision is an option for Plot that specifies the maximum amount of subdivision to be used.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PlotDivision",
	"PlotJoined":"ObjectType: Symbol\nUsage: PlotJoined is an option for ListPlot that specifies whether the points plotted should be joined by a line. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PlotJoined",
	"PlotRangeClipPlanesStyle":"ObjectType: Symbol\nUsage: System`PlotRangeClipPlanesStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PlotRangeClipPlanesStyle",
	"Point3DBox":"ObjectType: Symbol\nUsage: System`Point3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Point3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> None, VertexNormals -> None}\nOptions[Point3DBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[Point3DBox]]\nAbsoluteOptions[Point3DBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[Point3DBox]]\nOptions[Point3DBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[Point3DBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, Point3DBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[Point3DBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[Point3DBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, Point3DBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[Point3DBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, Point3DBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Point3DBox",
	"Point3DBoxOptions":"ObjectType: Symbol\nUsage: Point3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Point3DBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Point3DBoxOptions",
	"PointBox":"ObjectType: Symbol\nUsage: System`PointBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PointBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> None}\nOptions[PointBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PointBox]]\nAbsoluteOptions[PointBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PointBox]]\nOptions[PointBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[PointBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, PointBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[PointBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[PointBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, PointBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[PointBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, PointBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`PointBox",
	"PointBoxOptions":"ObjectType: Symbol\nUsage: PointBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for PointBox objects.\n                      1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PointBoxOptions",
	"Polygon3DBox":"ObjectType: Symbol\nUsage: System`Polygon3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Polygon3DBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexNormals -> Automatic, VertexTextureCoordinates -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Polygon3DBox",
	"Polygon3DBoxOptions":"ObjectType: Symbol\nUsage: Polygon3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Polygon3DBox objects.\n                          1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Polygon3DBoxOptions",
	"PolygonBox":"ObjectType: Symbol\nUsage: System`PolygonBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PolygonBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexTextureCoordinates -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`PolygonBox",
	"PolygonBoxOptions":"ObjectType: Symbol\nUsage: PolygonBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for PolygonBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PolygonBoxOptions",
	"PolygonHoleScale":"ObjectType: Symbol\nUsage: System`PolygonHoleScale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PolygonHoleScale",
	"PolygonIntersections":"ObjectType: Symbol\nUsage: PolygonIntersections is an option for Graphics3D which specifies whether intersecting polygons should be left unchanged. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PolygonIntersections",
	"PolygonScale":"ObjectType: Symbol\nUsage: System`PolygonScale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PolygonScale",
	"PolynomialForm":"ObjectType: Symbol\nUsage: System`PolynomialForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {TraditionalOrder -> Automatic}\nAttributes: {}\nFullName: System`PolynomialForm",
	"Polynomials":"ObjectType: Symbol\nUsage: System`Polynomials\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Polynomials",
	"PopupMenuBox":"ObjectType: Symbol\nUsage: System`PopupMenuBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PopupMenuBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> Automatic, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"PopupMenu\", DefaultMenuStyle -> \"PopupMenuLabel\", Enabled -> Automatic, FieldSize -> {{1., 50.}, {1., 10.}}, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> All, MenuAppearance -> {Automatic, Automatic}, MenuStyle -> {}}\nOptions[PopupMenuBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PopupMenuBox]]\nAbsoluteOptions[PopupMenuBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[PopupMenuBox]]\nOptions[PopupMenuBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[PopupMenuBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, PopupMenuBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[PopupMenuBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[PopupMenuBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, PopupMenuBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[PopupMenuBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, PopupMenuBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[PopupMenuBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_PopupMenuBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_PopupMenuBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`PopupMenuBox",
	"PopupMenuBoxOptions":"ObjectType: Symbol\nUsage: PopupMenuBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for PopupMenuBox objects.\n                          1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PopupMenuBoxOptions",
	"PostScript":"ObjectType: Symbol\nUsage: System`PostScript\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PostScript",
	"Precedence":"ObjectType: Symbol\nUsage: Precedence[sym] returns the precedence of the output operator associated to the symbol sym.Precedence[boxes, fmt] returns the precedence of the operator of used in the typeset expression boxes, assuming it was typeset in the format fmt.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Precedence",
	"PredictionRoot":"ObjectType: Symbol\nUsage: System`PredictionRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PredictionRoot",
	"PredictorInformation":"ObjectType: Symbol\nUsage: PredictorInformation[predictor] generates a report giving information on the predictor function predictor.PredictorInformation[predictor, prop] gives information for predictor associated with property prop.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PredictorInformation[MachineLearning`file125Other`PackagePrivate`args___] := (Message[PredictorInformation::mlobs, PredictorInformation, Information, 12]; Off[PredictorInformation::mlobs]; Information[MachineLearning`file125Other`PackagePrivate`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PredictorInformation",
	"PreferencesPath":"ObjectType: Symbol\nUsage: PreferencesPath is a global option that specifies which directories are searched for user-specific settings when the Wolfram System is started.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PreferencesPath",
	"Previous":"ObjectType: Symbol\nUsage: System`Previous\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Previous",
	"PrimaryPlaceholder":"ObjectType: Symbol\nUsage: System`PrimaryPlaceholder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrimaryPlaceholder",
	"PrintAction":"ObjectType: Symbol\nUsage: PrintAction is an option for notebooks that specifies the action taken when a Print[] command is evaluated by the kernel.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintAction",
	"PrintForm":"ObjectType: Symbol\nUsage: System`PrintForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintForm",
	"PrintingCopies":"ObjectType: Symbol\nUsage: PrintingCopies is an option for notebooks that specifies the number of copies of a notebook printed when a print command is given.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintingCopies",
	"PrintingOptions":"ObjectType: Symbol\nUsage: PrintingOptions is an option that specifies settings for printing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintingOptions",
	"PrintingPageRange":"ObjectType: Symbol\nUsage: PrintingPageRange is an option for notebooks that specifies the range of pages of a notebook to be printed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintingPageRange",
	"PrintingStartingPageNumber":"ObjectType: Symbol\nUsage: PrintingStartingPageNumber is an option for notebooks that specifies what number to assign to the first page of a notebook when printed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintingStartingPageNumber",
	"PrintPrecision":"ObjectType: Symbol\nUsage: PrintPrecision is an option for selections that specifies the maximum number of digits used for displaying a machine-precision number.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrintPrecision",
	"PrismBox":"ObjectType: Symbol\nUsage: System`PrismBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PrismBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexTextureCoordinates -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`PrismBox",
	"PrismBoxOptions":"ObjectType: Symbol\nUsage: System`PrismBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrismBoxOptions",
	"PrivateEvaluationOptions":"ObjectType: Symbol\nUsage: PrivateEvaluationOptions is an option for selections that specifies settings for evaluation-related suboptions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrivateEvaluationOptions",
	"PrivateFrontEndOptions":"ObjectType: Symbol\nUsage: System`PrivateFrontEndOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrivateFrontEndOptions",
	"PrivatePaths":"ObjectType: Symbol\nUsage: PrivatePaths is a global option that specifies settings for paths private to the notebook front end.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PrivatePaths",
	"ProbabilityPr":"ObjectType: Symbol\nUsage: System`ProbabilityPr\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ProbabilityPr",
	"ProcessStateDomain":"ObjectType: Symbol\nUsage: System`ProcessStateDomain\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ProcessStateDomain",
	"ProcessTimeDomain":"ObjectType: Symbol\nUsage: System`ProcessTimeDomain\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ProcessTimeDomain",
	"ProgressIndicatorBox":"ObjectType: Symbol\nUsage: System`ProgressIndicatorBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ProgressIndicatorBox] ^:= {Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"ProgressIndicator\", Enabled -> Automatic, ImageMargins -> 0, ImageSize -> Automatic}\nOptions[ProgressIndicatorBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ProgressIndicatorBox]]\nAbsoluteOptions[ProgressIndicatorBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ProgressIndicatorBox]]\nOptions[ProgressIndicatorBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[ProgressIndicatorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, ProgressIndicatorBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[ProgressIndicatorBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[ProgressIndicatorBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, ProgressIndicatorBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[ProgressIndicatorBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, ProgressIndicatorBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[ProgressIndicatorBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_ProgressIndicatorBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`ProgressIndicatorBox",
	"ProgressIndicatorBoxOptions":"ObjectType: Symbol\nUsage: ProgressIndicatorBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for ProgressIndicatorBox objects.\n                                  1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ProgressIndicatorBoxOptions",
	"PromptForm":"ObjectType: Symbol\nUsage: PromptForm[prompt, expr] prints as an output prompt and expression.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PromptForm",
	"Properties":"ObjectType: Symbol\nUsage: Properties is an option that allows specification of properties to objects and items of objects.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Properties",
	"Property":"ObjectType: Symbol\nUsage: Property[item, name  value] associates the property name  value with item.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Property",
	"PropertyList":"ObjectType: Symbol\nUsage: PropertyList[{obj, itemspec}] lists the properties available for itemspec in obj.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PropertyList",
	"PropertyValue":"ObjectType: Symbol\nUsage: PropertyValue[{obj, item}, name] gives the property value associated with name for item in obj.PropertyValue[{obj, itemspec}, name] gives the property values associated with name for items indicated by itemspec in obj.PropertyValue[…, {name , name , …}] gives a list of property values associated with name , name , etc.\n                                                                                                                                                                                                                                                1      2                                                          1      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PropertyValue",
	"PyramidBox":"ObjectType: Symbol\nUsage: System`PyramidBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[PyramidBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexTextureCoordinates -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`PyramidBox",
	"PyramidBoxOptions":"ObjectType: Symbol\nUsage: System`PyramidBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`PyramidBoxOptions",
	"RadioButtonBox":"ObjectType: Symbol\nUsage: System`RadioButtonBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[RadioButtonBox] ^:= {Appearance -> {Automatic, Automatic}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"RadioButton\", Enabled -> Automatic, ImageMargins -> 0}\nOptions[RadioButtonBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[RadioButtonBox]]\nAbsoluteOptions[RadioButtonBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[RadioButtonBox]]\nOptions[RadioButtonBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[RadioButtonBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, RadioButtonBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[RadioButtonBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[RadioButtonBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, RadioButtonBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[RadioButtonBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, RadioButtonBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[RadioButtonBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_RadioButtonBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_RadioButtonBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`RadioButtonBox",
	"RadioButtonBoxOptions":"ObjectType: Symbol\nUsage: RadioButtonBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for RadioButtonBox objects.\n                            1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RadioButtonBoxOptions",
	"Random":"ObjectType: Symbol\nUsage: Random[] gives a uniformly distributed pseudorandom Real in the range 0 to 1. Random[type, range] gives a pseudorandom number of the specified type, lying in the specified range. Possible types are: Integer, Real and Complex. The default range is 0 to 1. You can give the range {min, max} explicitly; a range specification of max is equivalent to {0, max}. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Random",
	"RandomSeed":"ObjectType: Symbol\nUsage: System`RandomSeed\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RandomSeed",
	"RangeSpecification":"ObjectType: Symbol\nUsage: System`RangeSpecification\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RangeSpecification",
	"Raster3DBox":"ObjectType: Symbol\nUsage: System`Raster3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Raster3DBox] ^= {BaseStyle -> {}, ClipRange -> None, ColorFunction -> Automatic, DefaultBaseStyle -> {}, Method -> Automatic, PlotRange -> Automatic, PlotRangeClipPlanesStyle -> Automatic, VertexDataCoordinates -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Raster3DBox",
	"Raster3DBoxOptions":"ObjectType: Symbol\nUsage: Raster3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Raster3DBox objects.\n                         1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Raster3DBoxOptions",
	"RasterArray":"ObjectType: Symbol\nUsage: RasterArray[{{g  , g  , …}, …}] is a two-dimensional graphics primitive that represents a rectangular array of cells colored according to the graphics directives g  . \n               11   12                                                                                                                                             ij\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RasterArray[(System`Dump`matrix_)?MatrixQ, System`Dump`y___] := Block[{System`Dump`m = System`Dump`toRaster[System`Dump`matrix]}, (Message[RasterArray::obs]; Raster[Developer`ToPackedArray[System`Dump`m], System`Dump`y, ColorFunction -> System`Dump`colorFunc[System`Dump`matrix]]) \/; MemberQ[{2, 3}, ArrayDepth[System`Dump`m]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RasterArray",
	"RasterBox":"ObjectType: Symbol\nUsage: System`RasterBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[RasterBox] ^= {BaseStyle -> {}, ColorFunction -> Automatic, ColorFunctionScaling -> True, DefaultBaseStyle -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`RasterBox",
	"RasterBoxOptions":"ObjectType: Symbol\nUsage: RasterBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for RasterBox objects.\n                       1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RasterBoxOptions",
	"RationalFunctions":"ObjectType: Symbol\nUsage: System`RationalFunctions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RationalFunctions",
	"RawArray":"ObjectType: Symbol\nUsage: System`RawArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RawArray",
	"RawMedium":"ObjectType: Symbol\nUsage: RawMedium is an internal symbol.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RawMedium",
	"RebuildPacletData":"ObjectType: Symbol\nUsage: The experimental function RebuildPacletData is now obsolete and is superseded by PacletDataRebuild.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RebuildPacletData[PacletManager`Manager`Private`args___] := (Message[RebuildPacletData::expobs, RebuildPacletData, PacletDataRebuild]; PacletDataRebuild[PacletManager`Manager`Private`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Collections -> All}\nAttributes: {}\nFullName: System`RebuildPacletData",
	"RecognitionThreshold":"ObjectType: Symbol\nUsage: RecognitionThreshold is an option for ImageInstanceQ and related functions that specifies the minimum estimated probability at which recognition is considered acceptable. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RecognitionThreshold",
	"RectangleBox":"ObjectType: Symbol\nUsage: System`RectangleBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[RectangleBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, RoundingRadius -> 0.}\nOptions[RectangleBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[RectangleBox]]\nAbsoluteOptions[RectangleBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[RectangleBox]]\nOptions[RectangleBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[RectangleBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, RectangleBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[RectangleBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[RectangleBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, RectangleBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[RectangleBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, RectangleBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`RectangleBox",
	"RecurringDigitsForm":"ObjectType: Symbol\nUsage: System`RecurringDigitsForm\nDocumentation: None\nOwnValues: None\nUpValues: System`Private`InternalNormal[RecurringDigitsForm[NumberTheory`FormsDump`digs:{{___Integer, {___Integer}} | {___Integer}, _Integer}, NumberTheory`FormsDump`rest___], RecurringDigitsForm] ^:= Module[{NumberTheory`FormsDump`res}, NumberTheory`FormsDump`res = FromDigits[NumberTheory`FormsDump`digs, NumberTheory`FormsDump`rest]; NumberTheory`FormsDump`res \/; Head[NumberTheory`FormsDump`res] =!= FromDigits]\nSystem`Private`InternalNormal[RecurringDigitsForm[NumberTheory`FormsDump`digs:{___Integer, {___Integer}} | {___Integer}, NumberTheory`FormsDump`rest___], RecurringDigitsForm] ^:= Normal[RecurringDigitsForm[{NumberTheory`FormsDump`digs, 0}, NumberTheory`FormsDump`rest]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[NumberTheory`FormsDump`pf:RecurringDigitsForm[NumberTheory`FormsDump`digs:{___Integer, {___Integer}}, NumberTheory`FormsDump`base_Integer:10], NumberTheory`FormsDump`rest___] ^:= MakeBoxes[RecurringDigitsForm[{NumberTheory`FormsDump`digs, 0}, NumberTheory`FormsDump`base], NumberTheory`FormsDump`rest] \/. HoldPattern[InterpretationBox][NumberTheory`FormsDump`f_, NumberTheory`FormsDump`p_, NumberTheory`FormsDump`r___] :> InterpretationBox[NumberTheory`FormsDump`f, NumberTheory`FormsDump`pf, NumberTheory`FormsDump`r]\nMakeBoxes[NumberTheory`FormsDump`pf:RecurringDigitsForm[{{NumberTheory`FormsDump`digs___Integer}, NumberTheory`FormsDump`exp_}, NumberTheory`FormsDump`base_Integer:10], NumberTheory`FormsDump`rest___] ^:= MakeBoxes[RecurringDigitsForm[{{NumberTheory`FormsDump`digs, {}}, NumberTheory`FormsDump`exp}, NumberTheory`FormsDump`base], StandardForm] \/. HoldPattern[InterpretationBox][NumberTheory`FormsDump`f_, NumberTheory`FormsDump`p_, NumberTheory`FormsDump`r___] :> InterpretationBox[NumberTheory`FormsDump`f, NumberTheory`FormsDump`pf, NumberTheory`FormsDump`r]\nMakeBoxes[NumberTheory`FormsDump`pf:RecurringDigitsForm[NumberTheory`FormsDump`digs:{{NumberTheory`FormsDump`pre___Integer, NumberTheory`FormsDump`per:{___Integer}}, NumberTheory`FormsDump`exp_Integer}, NumberTheory`FormsDump`base_Integer:10], NumberTheory`FormsDump`rest___] ^:= (InterpretationBox[#1, NumberTheory`FormsDump`pf] & )[StyleBox[(If[NumberTheory`FormsDump`base <= 36, StyleBox[#1, ZeroWidthTimes -> True], #1] & )[If[-6 <= NumberTheory`FormsDump`exp <= Length[{NumberTheory`FormsDump`pre}] && NumberTheory`FormsDump`exp <= 6, RowBox[NumberTheory`FormsDump`pform[{NumberTheory`FormsDump`pre}, NumberTheory`FormsDump`per, NumberTheory`FormsDump`exp, NumberTheory`FormsDump`base]], RowBox[{RowBox[NumberTheory`FormsDump`pform[{NumberTheory`FormsDump`pre}, NumberTheory`FormsDump`per, 0, NumberTheory`FormsDump`base]], \"×\", SuperscriptBox[ToString[NumberTheory`FormsDump`base], ToString[NumberTheory`FormsDump`exp]]}]]], AutoMultiplicationSymbol -> False]]\nOptions: None\nAttributes: {NHoldAll}\nFullName: System`RecurringDigitsForm",
	"ReferenceMarkers":"ObjectType: Symbol\nUsage: System`ReferenceMarkers\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ReferenceMarkers",
	"ReferenceMarkerStyle":"ObjectType: Symbol\nUsage: System`ReferenceMarkerStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ReferenceMarkerStyle",
	"Reinstall":"ObjectType: Symbol\nUsage: Reinstall[link] un-installs the specified external package and installs it again.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reinstall[System`Dump`l_] := Module[{System`Dump`name = Uninstall[System`Dump`l]}, If[StringQ[System`Dump`name], Install[System`Dump`name]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Reinstall",
	"Release":"ObjectType: Symbol\nUsage: System`Release\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Release",
	"RemoveAsynchronousTask":"ObjectType: Symbol\nUsage: RemoveAsynchronousTask[asyncTask] stops asynchronous evaluations and removes asyncTask from the system.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RemoveAsynchronousTask",
	"Removed":"None",
	"RemoveProperty":"ObjectType: Symbol\nUsage: RemoveProperty[{obj, itemspec}] removes all properties associated with itemspec in obj.RemoveProperty[{obj, itemspec}, name] removes the property name associated with itemspec in obj.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RemoveProperty",
	"RemoveScheduledTask":"ObjectType: Symbol\nUsage: RemoveScheduledTask[obj] removes obj from the list of currently scheduled local or cloud tasks.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: System`RemoveScheduledTask",
	"RenderAll":"ObjectType: Symbol\nUsage: RenderAll is an option for Graphics3D that specifies whether or not PostScript should be generated for all polygons. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RenderAll",
	"RepeatedString":"ObjectType: Symbol\nUsage: RepeatedString is an internal symbol used for formatting and printing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RepeatedString",
	"ReplaceHeldPart":"ObjectType: Symbol\nUsage: System`ReplaceHeldPart\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ReplaceHeldPart",
	"ResetMenusPacket":"ObjectType: Symbol\nUsage: System`ResetMenusPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ResetMenusPacket",
	"ResetScheduledTask":"ObjectType: Symbol\nUsage: ResetScheduledTask[obj, timespec]  resets the timing for a scheduled task to timespec.ResetScheduledTask[obj, timespec, offset] resets the time offset for a scheduled task to offset.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AutoRemove -> False, EpilogFunction :> Null, TaskGroup -> Global`}\nAttributes: {}\nFullName: System`ResetScheduledTask",
	"ResourceAcquire":"ObjectType: Symbol\nUsage: System`ResourceAcquire\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceAcquire[ResourceSystemClient`Private`args___] := Catch[ResourceSystemClient`Private`iResourceAcquire[ResourceSystemClient`Private`args]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ResourceSystemBase :> Automatic, ResourceVersion -> Automatic, WolframLanguageVersion -> Automatic, AddToAccount -> True}\nAttributes: {}\nFullName: System`ResourceAcquire",
	"ResourceSubmissionObject":"ObjectType: Symbol\nUsage: System`ResourceSubmissionObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceSubmissionObject[ResourceSystemClient`Private`suc:HoldPattern[_Success]] := ResourceSubmissionObject[ResourceSystemClient`Private`suc[\"SubmissionID\"]]\nResourceSubmissionObject[ResourceSystemClient`Private`rso_ResourceSubmissionObject] := ResourceSystemClient`Private`rso\nResourceSubmissionObject[ResourceSystemClient`Private`id:_String | _Integer] := Catch[ResourceSystemClient`Private`importSubmission[ResourceSystemClient`Private`id]]\nResourceSubmissionObject[ResourceSystemClient`Private`info_] := $Failed \/;  !Quiet[KeyExistsQ[ResourceSystemClient`Private`info, \"Name\"]]\nSubValues: (ResourceSystemClient`Private`sub_ResourceSubmissionObject)[ResourceSystemClient`Private`req_, ResourceSystemClient`Private`args___] := Catch[ResourceSystemClient`Private`submissionRequest[First[ResourceSystemClient`Private`sub], ResourceSystemClient`Private`req, {ResourceSystemClient`Private`args}]]\nDefaultValues: None\nNValues: None\nFormatValues: ResourceSubmissionObject \/: MakeBoxes[ResourceSystemClient`Private`resource_ResourceSubmissionObject, ResourceSystemClient`Private`form:StandardForm | TraditionalForm] := Catch[With[{ResourceSystemClient`Private`info = First[ResourceSystemClient`Private`resource]}, With[{ResourceSystemClient`Private`id = Lookup[ResourceSystemClient`Private`info, \"UUID\"], ResourceSystemClient`Private`rtype = ResourceSystemClient`Private`getResourceType[ResourceSystemClient`Private`info], ResourceSystemClient`Private`name = Lookup[ResourceSystemClient`Private`info, \"Name\"]}, ResourceSystemClient`Private`loadResourceType[ResourceSystemClient`Private`rtype]; BoxForm`ArrangeSummaryBox[ResourceSubmissionObject, ResourceSystemClient`Private`resource, Style[ResourceSystemClient`Private`formatSubmissionIcon[ResourceSystemClient`Private`resourceIcon[ResourceSystemClient`Private`rtype]], CacheGraphics -> False], {BoxForm`SummaryItem[{\"Name: \", ResourceSystemClient`Private`name}], BoxForm`SummaryItem[{\"Type: \", ResourceSystemClient`Private`rtype}], BoxForm`SummaryItem[{\"SubmissionID: \", Lookup[ResourceSystemClient`Private`info, \"SubmissionID\", ResourceSystemClient`Private`id]}]}, {BoxForm`SummaryItem[{\"UUID: \", ResourceSystemClient`Private`id}], BoxForm`SummaryItem[{\"SubmissionDate: \", Lookup[ResourceSystemClient`Private`info, \"SubmissionDate\"]}]}, ResourceSystemClient`Private`form]]]]\nOptions: None\nAttributes: {}\nFullName: System`ResourceSubmissionObject",
	"ResumePacket":"ObjectType: Symbol\nUsage: ResumePacket[] is a WSTP packet used for synchronization with the Wolfram Language kernel.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ResumePacket",
	"ReturnEntersInput":"ObjectType: Symbol\nUsage: System`ReturnEntersInput\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ReturnEntersInput",
	"ReturnInputFormPacket":"ObjectType: Symbol\nUsage: ReturnInputFormPacket is an internal symbol used for formatting.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ReturnInputFormPacket",
	"RotationBox":"ObjectType: Symbol\nUsage: System`RotationBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[RotationBox] ^:= {BaseStyle -> {}, BoxRotation -> 0., BoxRotationPoint -> Automatic, DefaultBaseStyle -> {}}\nOptions[RotationBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[RotationBox]]\nAbsoluteOptions[RotationBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[RotationBox]]\nOptions[RotationBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[RotationBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, RotationBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[RotationBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[RotationBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, RotationBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[RotationBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, RotationBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: BoxForm`apat$:HoldPattern[MakeExpression[_RotationBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_RotationBox, _]], \"Typeset`Wrappers`\", {{Annotation, _}, {Deploy, _}, {DynamicImage, _}, {Framed, _}, {FrameBox, _}, {Highlighted, _}, {Invisible, _}, {Item, _}, {Labeled, _}, {Magnify, _}, {Pane, _}, {PaneBox, _}, {Panel, _}, {PanelBox, _}, {Rotate, _}, {Row, _}, {Spacer, _}, {Style, _}, {StyleBox, _}, {TemplateBox, _}, {FrameBox, HoldPattern[MakeExpression[_FrameBox, _]]}, {ItemBox, HoldPattern[MakeExpression[_ItemBox, _]]}, {PaneBox, HoldPattern[MakeExpression[_PaneBox, _]]}, {PanelBox, HoldPattern[MakeExpression[_PanelBox, _]]}, {RotationBox, HoldPattern[MakeExpression[_RotationBox, _]]}, {StyleBox, HoldPattern[MakeExpression[_StyleBox, _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"Highlighted\" | \"Spacer1\" | \"Spacer2\" | \"Spacer3\" | \"RowDefault\" | \"RowNoSeparators\" | \"RowWithSeparator\" | \"RowWithSeparators\", ___], _]]}}, Hold[Annotation, Deploy, DynamicImage, Framed, FrameBox, Highlighted, Invisible, Item, ItemBox, Labeled, Magnify, Pane, PaneBox, Panel, PanelBox, Rotate, RotationBox, Row, Spacer, Style, StyleBox, DefaultOptions, TemplateBox]]\nOptions: None\nAttributes: {}\nFullName: System`RotationBox",
	"RotationBoxOptions":"ObjectType: Symbol\nUsage: RotationBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for RotationBox objects.\n                         1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RotationBoxOptions",
	"RoundImplies":"ObjectType: Symbol\nUsage: System`RoundImplies\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[RoundImplies[BoxForm`x_], BoxForm`fmt_] ^:= RowBox[{\"RoundImplies\", \"[\", MakeBoxes[BoxForm`x, BoxForm`fmt], \"]\"}]\nOptions: None\nAttributes: {}\nFullName: System`RoundImplies",
	"RowBackgrounds":"ObjectType: Symbol\nUsage: System`RowBackgrounds\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RowBackgrounds",
	"RowHeights":"ObjectType: Symbol\nUsage: System`RowHeights\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RowHeights",
	"RuleCondition":"ObjectType: Symbol\nUsage: RuleCondition is an internal symbol.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`RuleCondition",
	"RuleForm":"ObjectType: Symbol\nUsage: RuleForm is an internal symbol used for formatting and printing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`RuleForm",
	"RunScheduledTask":"ObjectType: Symbol\nUsage: RunScheduledTask[expr] schedules and starts a local scheduled task that will repeatedly evaluate expr once per second.RunScheduledTask[expr, time] schedules and starts a task that will repeatedly evaluate expr every time seconds.RunScheduledTask[expr, {time}] schedules and starts a task that will evaluate expr once after time seconds.RunScheduledTask[expr, {time, count}] schedules and starts a task that will try evaluating expr once every time seconds up to count times.RunScheduledTask[expr, timespec, start] schedules a task that will automatically start at start time.RunScheduledTask[CloudObject[…]] asynchronously executes an existing cloud task or document generator.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AutoRemove -> False, EpilogFunction :> Null, TaskGroup -> Global`}\nAttributes: {HoldFirst}\nFullName: System`RunScheduledTask",
	"Saveable":"ObjectType: Symbol\nUsage: Saveable is an option for notebooks that specifies whether a notebook can be saved.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Saveable",
	"SaveAutoDelete":"ObjectType: Symbol\nUsage: System`SaveAutoDelete\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SaveAutoDelete",
	"ScaledMousePosition":"ObjectType: Symbol\nUsage: System`ScaledMousePosition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ScaledMousePosition[System`FEDump`e___] := MathLink`CallFrontEnd[FrontEnd`Value[FrontEnd`ScaledMousePosition[System`FEDump`e], FrontEnd`$TrackingEnabled]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScaledMousePosition",
	"ScheduledTaskActiveQ":"ObjectType: Symbol\nUsage: ScheduledTaskActiveQ[obj] yields True if obj represents an active task, and False otherwise.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScheduledTaskActiveQ",
	"ScheduledTaskInformation":"ObjectType: Symbol\nUsage: ScheduledTaskInformation[CloudObject] returns information about a task.\nScheduledTaskInformation[CloudObject, property] returns the value of the specified property.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ScheduledTaskInformation[CloudObject`Private`objs:{__CloudObject}] := Replace[Catch[CloudObject`Private`iCloudScheduledTaskInformation[CloudObject`Private`objs, CloudObject`Private`$defaultTaskProperties, ScheduledTaskInformation], CloudObject`Private`$tag], {CloudObject`Private`res:{_Association} :> Dataset[CloudObject`Private`res[[1]]], CloudObject`Private`res:{__Association} :> Dataset[CloudObject`Private`res]}]\nScheduledTaskInformation[CloudObject`Private`objs:{__CloudObject}, CloudObject`Private`properties_List] := Replace[Catch[CloudObject`Private`iCloudScheduledTaskInformation[CloudObject`Private`objs, CloudObject`Private`properties, ScheduledTaskInformation], CloudObject`Private`$tag], {CloudObject`Private`res:{_Association} :> Dataset[CloudObject`Private`res[[1]]], CloudObject`Private`res:{__Association} :> Dataset[CloudObject`Private`res]}]\nScheduledTaskInformation[CloudObject`Private`objs:{__CloudObject}, CloudObject`Private`property_] := ScheduledTaskInformation[CloudObject`Private`objs, {CloudObject`Private`property}]\nScheduledTaskInformation[CloudObject`Private`obj_CloudObject] := Replace[Catch[CloudObject`Private`iCloudScheduledTaskInformation[{CloudObject`Private`obj}, CloudObject`Private`$defaultTaskProperties, ScheduledTaskInformation], CloudObject`Private`$tag], {CloudObject`Private`res:{_Association} :> Dataset[CloudObject`Private`res[[1]]], CloudObject`Private`res:{__Association} :> Dataset[CloudObject`Private`res]}]\nScheduledTaskInformation[CloudObject`Private`obj_CloudObject, CloudObject`Private`properties_List] := Replace[Catch[CloudObject`Private`iCloudScheduledTaskInformation[{CloudObject`Private`obj}, CloudObject`Private`properties, ScheduledTaskInformation], CloudObject`Private`$tag], {CloudObject`Private`res:{_Association} :> Dataset[CloudObject`Private`res[[1]]], CloudObject`Private`res:{__Association} :> Dataset[CloudObject`Private`res]}]\nScheduledTaskInformation[CloudObject`Private`obj_CloudObject, CloudObject`Private`property_] := Normal[ScheduledTaskInformation[{CloudObject`Private`obj}, {CloudObject`Private`property}]][CloudObject`Private`property]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScheduledTaskInformation",
	"ScheduledTaskInformationData":"ObjectType: Symbol\nUsage: System`ScheduledTaskInformationData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScheduledTaskInformationData",
	"ScheduledTaskObject":"ObjectType: Symbol\nUsage: ScheduledTaskObject[id, expr, spec, …] is a task object specifying future evaluation of expr according to spec.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[ScheduledTaskObject[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`ElidedForms`\", {{BoxForm`SummaryItem, _}, {AlgebraicNumber, _}, {Root, _}, {BezierFunction, _}, {BSplineFunction, _}, {InterpolatingFunction, _}, {LinearSolveFunction, _}, {NearestFunction, _}, {ParametricFunction, _}, {ContinuousWaveletData, _}, {DiscreteWaveletData, _}, {ImagePyramid, _}, {LiftingFilterData, _}, {SparseArray, _}, {SymmetrizedArray, _}, {OptimumFlowData, _}, {RegionDistanceFunction, _}, {RegionMemberFunction, _}, {RegionNearestFunction, _}, {Region`SemialgebraicRegion, _}, {EventData, _}, {TemporalData, _}, {WeightedData, _}, {SurvivalModel, _}, {TransformationFunction, _}, {CompiledFunction, _}, {Dispatch, HoldPattern[MakeBoxes[_Dispatch, StandardForm | TraditionalForm]]}, {ByteArray, HoldPattern[MakeBoxes[_ByteArray, StandardForm | TraditionalForm]]}, {NumericArray, HoldPattern[MakeBoxes[_NumericArray, StandardForm | TraditionalForm]]}, {BooleanFunction, HoldPattern[MakeBoxes[_BooleanFunction, StandardForm | TraditionalForm]]}, {InputStream, _}, {LibraryFunction, _}, {LinkObject, _}, {LinkService, _}, {OutputStream, _}, {ScheduledTaskObject, _}, {ColorProfileData, _}, {CMYKColor, _}, {GrayLevel, _}, {Hue, _}, {LABColor, _}, {LCHColor, _}, {LUVColor, _}, {RGBColor, _}, {XYZColor, _}}, Hold[BoxForm`SummaryItem, BezierFunction, BSplineFunction, InterpolatingFunction, LinearSolveFunction, NearestFunction, ParametricFunction, ContinuousWaveletData, DiscreteWaveletData, ImagePyramid, LiftingFilterData, SparseArray, SymmetrizedArray, OptimumFlowData, RegionDistanceFunction, RegionMemberFunction, RegionNearestFunction, Region`SemialgebraicRegion, BooleanFunction, EventData, TemporalData, WeightedData, SurvivalModel, TransformationFunction, AlgebraicNumber, Root, CompiledFunction, Dispatch, InputStream, LibraryFunction, LinkObject, LinkService, OutputStream, ScheduledTaskObject, ByteArray, NumericArray, ColorProfileData, CMYKColor, Hue, LABColor, LCHColor, LUVColor, GrayLevel, RGBColor, XYZColor]]\nOptions: None\nAttributes: {HoldAll}\nFullName: System`ScheduledTaskObject",
	"ScheduledTasks":"ObjectType: Symbol\nUsage: ScheduledTasks[] returns a list of ScheduledTaskObject and CloudObject expressions that represent current tasks.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ScheduledTasks[] := Join[Tasks[], CloudObject`CloudTasks[]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScheduledTasks",
	"ScreenRectangle":"ObjectType: Symbol\nUsage: ScreenRectangle is a global option that specifies the position of the screen by giving the coordinates of two diagonally opposite corners.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScreenRectangle",
	"ScriptForm":"ObjectType: Symbol\nUsage: System`ScriptForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScriptForm",
	"ScriptLevel":"ObjectType: Symbol\nUsage: ScriptLevel is an option for selections that is used in determining the font size of modifiers such as subscripts and superscripts in a nested expression.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScriptLevel",
	"ScriptRules":"ObjectType: Symbol\nUsage: System`ScriptRules\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ScriptRules",
	"SectionGrouping":"ObjectType: Symbol\nUsage: System`SectionGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SectionGrouping",
	"Selection":"ObjectType: Symbol\nUsage: System`Selection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Selection",
	"SelectionAnimate":"ObjectType: Symbol\nUsage: SelectionAnimate[notebook] animates graphics in the current selection in a notebook. SelectionAnimate[notebook, t] animates graphics for t seconds. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SelectionAnimate[System`FEDump`note:_NotebookObject | _FrontEnd`NotebookObject | _FrontEnd`SelectedNotebook | _FrontEnd`InputNotebook | _FrontEnd`ButtonNotebook | _FrontEnd`EvaluationNotebook | _FrontEnd`MessagesNotebook | _FrontEnd`HelpBrowserNotebook | _FrontEnd`ClipboardNotebook, System`FEDump`opts:(_Rule | _RuleDelayed)...] := MathLink`CallFrontEnd[FrontEnd`SelectionAnimate[System`FEDump`note, AnimationDisplayTime -> (AnimationDisplayTime \/. Flatten[{System`FEDump`opts, Options[SelectionAnimate]}]), AnimationDirection -> (AnimationDirection \/. Flatten[{System`FEDump`opts, Options[SelectionAnimate]}])], System`FEDump`NoResult]\nSelectionAnimate[System`FEDump`note:_NotebookObject | _FrontEnd`NotebookObject | _FrontEnd`SelectedNotebook | _FrontEnd`InputNotebook | _FrontEnd`ButtonNotebook | _FrontEnd`EvaluationNotebook | _FrontEnd`MessagesNotebook | _FrontEnd`HelpBrowserNotebook | _FrontEnd`ClipboardNotebook, System`FEDump`seconds:_?NumberQ | Infinity, System`FEDump`opts:(_Rule | _RuleDelayed)...] := MathLink`CallFrontEnd[FrontEnd`SelectionAnimate[System`FEDump`note, System`FEDump`seconds, AnimationDisplayTime -> (AnimationDisplayTime \/. Flatten[{System`FEDump`opts, Options[SelectionAnimate]}]), AnimationDirection -> (AnimationDirection \/. Flatten[{System`FEDump`opts, Options[SelectionAnimate]}])], System`FEDump`NoResult]\nSelectionAnimate[System`FEDump`args___] := (ArgumentCountQ[SelectionAnimate, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 1, 2]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AnimationDirection -> Forward, AnimationDisplayTime -> 0}\nAttributes: {}\nFullName: System`SelectionAnimate",
	"SelectionCell":"ObjectType: Symbol\nUsage: System`SelectionCell\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectionCell",
	"SelectionCellCreateCell":"ObjectType: Symbol\nUsage: System`SelectionCellCreateCell\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SelectionCellCreateCell[System`FEDump`note:_NotebookObject | _FrontEnd`NotebookObject | _FrontEnd`SelectedNotebook | _FrontEnd`InputNotebook | _FrontEnd`ButtonNotebook | _FrontEnd`EvaluationNotebook | _FrontEnd`MessagesNotebook | _FrontEnd`HelpBrowserNotebook | _FrontEnd`ClipboardNotebook, System`FEDump`select_:After, System`FEDump`opts:(_Rule | _RuleDelayed)...] := MathLink`CallFrontEnd[FrontEnd`SelectionCreateCell[System`FEDump`note, System`FEDump`select, System`FEDump`opts], System`FEDump`NoResult]\nSelectionCellCreateCell[System`FEDump`args___] := (ArgumentCountQ[SelectionCreateCell, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 1, 2]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectionCellCreateCell",
	"SelectionCellDefaultStyle":"ObjectType: Symbol\nUsage: System`SelectionCellDefaultStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectionCellDefaultStyle",
	"SelectionCellParentStyle":"ObjectType: Symbol\nUsage: System`SelectionCellParentStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectionCellParentStyle",
	"SelectionDuplicateCell":"ObjectType: Symbol\nUsage: System`SelectionDuplicateCell\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectionDuplicateCell",
	"SelectionPlaceholder":"ObjectType: Symbol\nUsage: System`SelectionPlaceholder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[SelectionPlaceholder[], BoxForm`fmt_] ^:= \"\"\nMakeBoxes[SelectionPlaceholder[BoxForm`expr_], BoxForm`fmt_] ^:= TagBox[FrameBox[MakeBoxes[BoxForm`expr, BoxForm`fmt]], \"SelectionPlaceholder\"]\nOptions: None\nAttributes: {}\nFullName: System`SelectionPlaceholder",
	"SelectionSetStyle":"ObjectType: Symbol\nUsage: System`SelectionSetStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectionSetStyle",
	"SelectWithContents":"ObjectType: Symbol\nUsage: System`SelectWithContents\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelectWithContents",
	"SelfLoops":"ObjectType: Symbol\nUsage: System`SelfLoops\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SelfLoops",
	"SequenceAttentionLayer":"ObjectType: Symbol\nUsage: SequenceAttentionLayer[] is equivalent to AttentionLayer[] with a single \"Input\" port instead of ports \"Key\" and \"Value\". It should no longer be used.SequenceAttentionLayer[net] is equivalent to AttentionLayer[net] with a single \"Input\" port instead of ports \"Key\" and \"Value\". It should no longer be used.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SequenceAttentionLayer[NeuralNetworks`Private`Deprecation`args___] := NeuralNetworks`Private`Deprecation`warnAndBuild[SequenceAttentionLayer, AttentionLayer, \"$InputPorts\" -> \"InputQuery\", NeuralNetworks`Private`Deprecation`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SequenceAttentionLayer",
	"SequenceForm":"ObjectType: Symbol\nUsage: SequenceForm[expr , expr , …] prints as the textual concatenation of the printed forms of the expr . \n                 1      2                                                                         i\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SequenceForm",
	"ServiceResponse":"ObjectType: Symbol\nUsage: System`ServiceResponse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: ServiceResponse[(BoxForm`data_)?AssociationQ][] := BoxForm`data\nServiceResponse[(BoxForm`data_)?AssociationQ][\"PropertyAssociation\"] := BoxForm`data\nServiceResponse[(BoxForm`data_)?AssociationQ][\"Properties\"] := Keys[BoxForm`data]\nServiceResponse[(BoxForm`data_)?AssociationQ][BoxForm`keys_List] := KeyTake[BoxForm`data, BoxForm`keys]\nServiceResponse[(BoxForm`data_)?AssociationQ][Services`ServiceRequestDump`key_] := Lookup[BoxForm`data, Services`ServiceRequestDump`key, Null]\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[Services`ServiceRequestDump`obj_ServiceResponse, BoxForm`fmt_] ^:= Module[{Services`ServiceRequestDump`props, Services`ServiceRequestDump`alwaysGrid, Services`ServiceRequestDump`sometimesGrid, Services`ServiceRequestDump`responseIcon, Services`ServiceRequestDump`req, Services`ServiceRequestDump`parameters, Services`ServiceRequestDump`result}, Services`ServiceRequestDump`props = Services`ServiceRequestDump`obj[]; Services`ServiceRequestDump`req = Lookup[Services`ServiceRequestDump`props, \"ServiceRequest\"][]; Services`ServiceRequestDump`parameters = Association[Lookup[Services`ServiceRequestDump`req, \"Parameters\"]]; Services`ServiceRequestDump`result = Lookup[Services`ServiceRequestDump`props, \"EvaluationResult\", Lookup[Services`ServiceRequestDump`props, \"Result\", Missing[\"EvaluationResult\"]]]; Services`ServiceRequestDump`alwaysGrid = {BoxForm`SummaryItem[{\"Service: \", Lookup[Services`ServiceRequestDump`req, \"Service\", Missing[\"Request\"]]}], BoxForm`SummaryItem[{\"Request: \", Lookup[Services`ServiceRequestDump`req, \"Request\", Missing[\"Request\"]]}]}; Services`ServiceRequestDump`sometimesGrid = Append[Services`ServiceRequestDump`makeSometimesGrid[Services`ServiceRequestDump`req], BoxForm`SummaryItem[{\"Result: \", Services`ServiceRequestDump`result}]]; Services`ServiceRequestDump`responseIcon = BoxForm`GenericIcon[\"CloudTaskObject\"]; BoxForm`ArrangeSummaryBox[ServiceResponse, Services`ServiceRequestDump`obj, Services`ServiceRequestDump`responseIcon, Services`ServiceRequestDump`alwaysGrid, Services`ServiceRequestDump`sometimesGrid, BoxForm`fmt, \"Interpretable\" -> True]]\nOptions: None\nAttributes: {}\nFullName: System`ServiceResponse",
	"Setbacks":"ObjectType: Symbol\nUsage: System`Setbacks\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Setbacks",
	"SetBoxFormNamesPacket":"ObjectType: Symbol\nUsage: System`SetBoxFormNamesPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetBoxFormNamesPacket",
	"SetEvaluationNotebook":"ObjectType: Symbol\nUsage: System`SetEvaluationNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetEvaluationNotebook",
	"SetFileLoadingContext":"ObjectType: Symbol\nUsage: System`SetFileLoadingContext\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetFileLoadingContext",
	"SetNotebookStatusLine":"ObjectType: Symbol\nUsage: System`SetNotebookStatusLine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetNotebookStatusLine",
	"SetOptionsPacket":"ObjectType: Symbol\nUsage: System`SetOptionsPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetOptionsPacket",
	"SetProperty":"ObjectType: Symbol\nUsage: SetProperty[{obj, itemspec}, name  value] sets the property name  value for itemspec in obj.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetProperty",
	"SetSecuredAuthenticationKey":"ObjectType: Symbol\nUsage: System`SetSecuredAuthenticationKey\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SetSecuredAuthenticationKey[Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`sak:HoldPattern[SecuredAuthenticationKey[(Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`details_Association)?AssociationQ]], Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`opts:OptionsPattern[]] := Module[{Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`active = OptionValue[\"Active\"]}, If[Cases[$MessageList, HoldForm[MessageName[SecuredAuthenticationKey, _]]] === {}, If[Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`active, Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`reactivateSAK[Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`sak], Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`deactivateSAK[Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`sak], Message[SecuredAuthenticationKey::invopt, Authentication`GenerateSecuredAuthenticationKey`PackagePrivate`active, \"Active\", True]; $Failed], $Failed]]\nSetSecuredAuthenticationKey[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Active -> True}\nAttributes: {}\nFullName: System`SetSecuredAuthenticationKey",
	"SetSpeechParametersPacket":"ObjectType: Symbol\nUsage: System`SetSpeechParametersPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetSpeechParametersPacket",
	"SetterBox":"ObjectType: Symbol\nUsage: System`SetterBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[SetterBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, Automatic}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"Setter\", Enabled -> Automatic, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> All}\nOptions[SetterBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[SetterBox]]\nAbsoluteOptions[SetterBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[SetterBox]]\nOptions[SetterBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[SetterBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, SetterBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[SetterBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[SetterBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, SetterBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[SetterBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, SetterBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[SetterBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_SetterBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_SetterBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`SetterBox",
	"SetterBoxOptions":"ObjectType: Symbol\nUsage: SetterBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for SetterBox objects.\n                       1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetterBoxOptions",
	"SetValue":"ObjectType: Symbol\nUsage: System`SetValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SetValue",
	"Shading":"ObjectType: Symbol\nUsage: Shading is an option for SurfaceGraphics that specifies whether the surfaces should be shaded. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Shading",
	"ShortestMatch":"ObjectType: Symbol\nUsage: ShortestMatch[p] is a string pattern object matching the shortest sequence of characters consistent with the string pattern p.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShortestMatch",
	"ShowAutoConvert":"ObjectType: Symbol\nUsage: System`ShowAutoConvert\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowAutoConvert",
	"ShowClosedCellArea":"ObjectType: Symbol\nUsage: ShowClosedCellArea is an option for cells that specifies whether a rectangular bar is displayed next to a closed cell group to indicate the number of cells in the group.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowClosedCellArea",
	"ShowCodeAssist":"ObjectType: Symbol\nUsage: System`ShowCodeAssist\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowCodeAssist",
	"ShowContents":"ObjectType: Symbol\nUsage: ShowContents is an option for selections that specifies whether an object represented by a StyleBox should be displayed on the screen or replaced by blank space.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowContents",
	"ShowControls":"ObjectType: Symbol\nUsage: System`ShowControls\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowControls",
	"ShowGroupOpenCloseIcon":"ObjectType: Symbol\nUsage: ShowGroupOpenCloseIcon is an option for cells that specifies whether a triangular icon is displayed next to the leading cell in a cell group to indicate whether the cell group is open or closed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowGroupOpenCloseIcon",
	"ShowInvisibleCharacters":"ObjectType: Symbol\nUsage: System`ShowInvisibleCharacters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowInvisibleCharacters",
	"ShowPredictiveInterface":"ObjectType: Symbol\nUsage: System`ShowPredictiveInterface\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowPredictiveInterface",
	"ShowShortBoxForm":"ObjectType: Symbol\nUsage: ShowShortBoxForm is an option for cells that specifies whether box expressions, which are used to represent two-dimensional forms in a cell, are displayed in a more compact notation when the expression for that cell is viewed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowShortBoxForm",
	"ShowSyntaxStyles":"ObjectType: Symbol\nUsage: System`ShowSyntaxStyles\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShowSyntaxStyles",
	"ShrinkWrapBoundingBox":"ObjectType: Symbol\nUsage: System`ShrinkWrapBoundingBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ShrinkWrapBoundingBox",
	"SingleEvaluation":"ObjectType: Symbol\nUsage: System`SingleEvaluation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SingleEvaluation",
	"SingleLetterStyle":"ObjectType: Symbol\nUsage: System`SingleLetterStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SingleLetterStyle",
	"SingularValues":"ObjectType: Symbol\nUsage: SingularValues[m] gives the singular value decomposition for a numerical matrix m. The result is a list {u, w, v}, where w is the list of singular values, and m can be written as Conjugate[Transpose[u]] . DiagonalMatrix[w] . v.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Tolerance -> Automatic}\nAttributes: {}\nFullName: System`SingularValues",
	"SkinStyle":"ObjectType: Symbol\nUsage: SkinStyle is an option of AnatomyPlot3D that specifies what style to use for automatically included skin subparts.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SkinStyle",
	"Slider2DBox":"ObjectType: Symbol\nUsage: System`Slider2DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Slider2DBox] ^:= {Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, DefaultBaseStyle -> \"Slider2D\", Enabled -> Automatic, Exclusions -> {}, ImageMargins -> 0, ImageSize -> Automatic}\nOptions[Slider2DBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[Slider2DBox]]\nAbsoluteOptions[Slider2DBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[Slider2DBox]]\nOptions[Slider2DBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[Slider2DBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, Slider2DBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[Slider2DBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[Slider2DBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, Slider2DBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[Slider2DBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, Slider2DBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[Slider2DBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_Slider2DBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_Slider2DBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`Slider2DBox",
	"Slider2DBoxOptions":"ObjectType: Symbol\nUsage: Slider2DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Slider2DBox objects.\n                         1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Slider2DBoxOptions",
	"SocialMediaData":"ObjectType: Symbol\nUsage: SocialMediaData[\"name\"] gives information about the social media entity \"name\".SocialMediaData[\"name\", \"property\"] gives the value of the specified property for the social media entity \"name\".SocialMediaData[{\"name\", id}, \"property\"] gives the value of a property for the specified identifier id.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SocialMediaData[DataPaclets`SocialMediaDataDump`expr___] := Block[{$ContextPath = $ContextPath}, NumberTheory`AESDump`RijndaelDecryption; Needs[\"OAuthSigning`\"]; Unprotect[SocialMediaData]; If[CheckAbort[Catch[DataPaclets`SocialMediaDataDump`startAllValues[], \"DataPacletException\"], Abort[]] === $Failed, Protect[SocialMediaData]; $Failed, SocialMediaData[DataPaclets`SocialMediaDataDump`expr]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SocialMediaData",
	"Socket":"ObjectType: Symbol\nUsage: Socket is a possible value returned by FileType and related functions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Socket",
	"SolveDelayed":"ObjectType: Symbol\nUsage: SolveDelayed is an option to NDSolve. SolveDelayed -> False causes the derivatives to be solved for symbolically at the beginning. SolveDelayed -> True causes the ODEs to be evaluated numerically and the derivatives solved for at each step.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SolveDelayed",
	"SoundAndGraphics":"ObjectType: Symbol\nUsage: System`SoundAndGraphics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SoundAndGraphics",
	"Space":"None",
	"SpaceForm":"ObjectType: Symbol\nUsage: SpaceForm[n] prints as n spaces.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpaceForm",
	"SpanAdjustments":"ObjectType: Symbol\nUsage: SpanAdjustments is an option for selections that specifies the height and width of spanning characters.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpanAdjustments",
	"SpanCharacterRounding":"ObjectType: Symbol\nUsage: SpanCharacterRounding is an option for selections that specifies the method used for rounding a spanning character when its size is to be adjusted.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpanCharacterRounding",
	"SpanLineThickness":"ObjectType: Symbol\nUsage: SpanLineThickness is an option for selections that specifies the thickness in printer's points of line-spanning characters such as ∖[VerticalLine] and ∖[HorizontalLine].\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpanLineThickness",
	"SpanMinSize":"ObjectType: Symbol\nUsage: SpanMinSize is an option for selections that specifies the minimum size of spanning characters such as parentheses and brackets.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpanMinSize",
	"SpanningCharacters":"ObjectType: Symbol\nUsage: System`SpanningCharacters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpanningCharacters",
	"SpanSymmetric":"ObjectType: Symbol\nUsage: SpanSymmetric is an option for selections that specifies whether vertically expandable characters are symmetric about the axis of the selection.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpanSymmetric",
	"SpeakTextPacket":"ObjectType: Symbol\nUsage: System`SpeakTextPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpeakTextPacket",
	"SpellingDictionaries":"ObjectType: Symbol\nUsage: SpellingDictionaries is a global option that specifies settings for spell checking.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpellingDictionaries",
	"SpellingDictionariesPath":"ObjectType: Symbol\nUsage: SpellingDictionariesPath is a global option that specifies which directories are searched for spelling dictionaries when the Edit ▶ Check Spelling menu item is used.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpellingDictionariesPath",
	"SpellingSuggestionsPacket":"ObjectType: Symbol\nUsage: System`SpellingSuggestionsPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SpellingSuggestionsPacket",
	"SphereBox":"ObjectType: Symbol\nUsage: System`SphereBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`SphereBox",
	"StartAsynchronousTask":"ObjectType: Symbol\nUsage: StartAsynchronousTask[task] allows asynchronous evaluations from task after it has been stopped.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StartAsynchronousTask",
	"StartScheduledTask":"ObjectType: Symbol\nUsage: StartScheduledTask[obj] starts the local or cloud scheduled task represented by obj.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StartScheduledTask",
	"StartupSound":"ObjectType: Symbol\nUsage: System`StartupSound\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StartupSound",
	"StateDimensions":"ObjectType: Symbol\nUsage: StateDimensions is an option to TemporalData that specifies the dimensions of the state space. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StateDimensions",
	"StopAsynchronousTask":"ObjectType: Symbol\nUsage: StopAsynchronousTask[task] stops asynchronous evaluations from task.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StopAsynchronousTask",
	"StopScheduledTask":"ObjectType: Symbol\nUsage: StopScheduledTask[obj] deactivates the local or cloud scheduled task represented by obj.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: System`StopScheduledTask",
	"StringBreak":"ObjectType: Symbol\nUsage: System`StringBreak\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StringBreak",
	"StringByteCount":"ObjectType: Symbol\nUsage: StringByteCount[\"string\"] gives the total number of bytes used to store the characters in a string.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: System`StringByteCount",
	"StrokeForm":"ObjectType: Symbol\nUsage: System`StrokeForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StrokeForm",
	"StructuredArray":"ObjectType: Symbol\nUsage: StructuredArray[st, {d , d , …}, data] represents a d ×d ×… array with structure type st and specific content data. \n                      1   2                          1  2\nDocumentation: None\nOwnValues: None\nUpValues: (StructuredArray`StructuredArrayDump`head:Simplify | Expand | Together | Cancel)[(StructuredArray`StructuredArrayDump`m_StructuredArray)?StructuredArray`StructuredArrayQ] ^:= With[{StructuredArray`StructuredArrayDump`res = Catch[Module[{StructuredArray`StructuredArrayDump`res, StructuredArray`StructuredArrayDump`fun = StructuredArray`AlgorithmFunction[StructuredArray`StructuredArrayDump`head, 1]}, StructuredArray`StructuredArrayDump`res = StructuredArray`TryStructuredArrayAlgorithm[StructuredArray`StructuredArrayDump`head, StructuredArray`StructuredArrayDump`fun, StructuredArray`StructuredArrayDump`m]; If[StructuredArray`StructuredArrayDump`res === $Failed, StructuredArray`StructuredArrayDump`res = StructuredArray`StructuredArrayDump`ResortToNormal[StructuredArray`StructuredArrayDump`head, StructuredArray`StructuredArrayDump`m[\"Structure\"], {StructuredArray`StructuredArrayDump`m}]]; StructuredArray`StructuredArrayDump`res]]}, StructuredArray`StructuredArrayDump`res \/; StructuredArray`StructuredArrayDump`res =!= $Failed]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StructuredArray",
	"StructuredArrayHeadQ":"ObjectType: Symbol\nUsage: System`StructuredArrayHeadQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StructuredArrayHeadQ",
	"StyleBoxAutoDelete":"ObjectType: Symbol\nUsage: StyleBoxAutoDelete is an option for selections that specifies whether a StyleBox wrapped around them should be automatically removed when the expression is edited.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleBoxAutoDelete",
	"StyleForm":"ObjectType: Symbol\nUsage: StyleForm[expr, options] prints using the specified style options. StyleForm[expr, \"style\"] prints using the specified cell style in the current notebook. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleForm",
	"StyleKeyMapping":"ObjectType: Symbol\nUsage: System`StyleKeyMapping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleKeyMapping",
	"StyleMenuListing":"ObjectType: Symbol\nUsage: StyleMenuListing is an option for cells that specifies whether a given cell style is listed in the Format ▶ Style submenu.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleMenuListing",
	"StyleNameDialogSettings":"ObjectType: Symbol\nUsage: StyleNameDialogSettings is a global option that specifies the cell style displayed in the Custom Style dialog box.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleNameDialogSettings",
	"StyleNames":"ObjectType: Symbol\nUsage: System`StyleNames\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleNames",
	"StylePrint":"ObjectType: Symbol\nUsage: StylePrint[expr, \"style\"] creates a new cell in the current notebook with the specified style, and prints expr into it. StylePrint[expr] uses the default style for the current notebook. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StylePrint[System`FEDump`data_, System`FEDump`opts:(_Rule | _RuleDelayed)...] := StylePrint[Unevaluated[System`FEDump`data], \"Output\", System`FEDump`opts]\nStylePrint[System`FEDump`data_, System`FEDump`style_String, System`FEDump`opts:(_Rule | _RuleDelayed)...] := Module[{System`FEDump`formatType, System`FEDump`result}, If[ !$Notebooks, Print[Unevaluated[System`FEDump`data]]; Return[Null]]; System`FEDump`formatType = MathLink`CallFrontEnd[FrontEnd`DefaultFormatTypeForStyle[System`FEDump`style]]; System`FEDump`result = Switch[System`FEDump`formatType, TraditionalForm, BoxData[FormBox[MakeBoxes[System`FEDump`data, TraditionalForm], TraditionalForm]], StandardForm, BoxData[MakeBoxes[System`FEDump`data, StandardForm]], InputForm, ToString[Unevaluated[System`FEDump`data], InputForm], OutputForm, OutputFormData[ToString[Unevaluated[System`FEDump`data], InputForm], ToString[Unevaluated[System`FEDump`data], OutputForm]], TextForm, ToString[Unevaluated[System`FEDump`data], OutputForm], _, ToString[Unevaluated[System`FEDump`data], OutputForm]]; CellPrint[Cell[System`FEDump`result, System`FEDump`style, System`FEDump`opts]]]\nStylePrint[System`FEDump`args___] := (ArgumentCountQ[StylePrint, System`FEDump`NonOptionArgCount[{System`FEDump`args}], 1, 2]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StylePrint",
	"StyleSheetPath":"ObjectType: Symbol\nUsage: StyleSheetPath is a global option that specifies which directories the Wolfram System searches to find stylesheets.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`StyleSheetPath",
	"Subscripted":"ObjectType: Symbol\nUsage: System`Subscripted\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Subscripted",
	"SubtitleTracks":"ObjectType: Symbol\nUsage: SubtitleTracks is an option that specifies the subtitle tracks of interest.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SubtitleTracks",
	"SurfaceAppearance":"ObjectType: Symbol\nUsage: System`SurfaceAppearance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SurfaceAppearance",
	"SurfaceColor":"ObjectType: Symbol\nUsage: SurfaceColor[dcol] is a three-dimensional graphics directive which specifies that the surfaces which follow should act as diffuse reflectors of light with a color given by dcol. SurfaceColor[dcol, scol] specifies that a specular reflection component should be included, with a color given by scol. SurfaceColor[dcol, {scol, n}] specifies that the reflection should occur with specular exponent n. SurfaceColor[dcol, scol, gcol] specifies that a color gcol should be added as if there were an intrinsic glow in the polygon. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SurfaceColor",
	"SurfaceGraphics":"ObjectType: Symbol\nUsage: SurfaceGraphics[array] is a representation of a three-dimensional plot of a surface, with heights of each point on a grid specified by values in array. SurfaceGraphics[array, shades] represents a surface, whose parts are shaded according to the array shades. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AmbientLight -> GrayLevel[0], AspectRatio -> Automatic, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, AxesStyle -> Automatic, Background -> Automatic, Boxed -> True, BoxRatios -> {1, 1, 0.4}, BoxStyle -> Automatic, ClipFill -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, DefaultColor -> Automatic, DefaultFont :> $DefaultFont, DisplayFunction :> $DisplayFunction, Epilog -> {}, FaceGrids -> None, FormatType :> $FormatType, HiddenSurface -> True, ImageSize -> Automatic, Lighting -> True, LightSources -> {{{1., 0., 1.}, RGBColor[1, 0, 0]}, {{1., 1., 1.}, RGBColor[0, 1, 0]}, {{0., 1., 1.}, RGBColor[0, 0, 1]}}, Mesh -> True, Charting`MeshMarkers -> None, MeshRange -> Automatic, MeshStyle -> Automatic, Plot3Matrix -> Automatic, PlotLabel -> None, PlotRange -> Automatic, PlotRegion -> Automatic, Prolog -> {}, Shading -> True, SphericalRegion -> False, TextStyle :> $TextStyle, Ticks -> Automatic, ViewCenter -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewVertical -> {0., 0., 1.}}\nAttributes: {}\nFullName: System`SurfaceGraphics",
	"SuspendPacket":"ObjectType: Symbol\nUsage: SuspendPacket[] is a WSTP packet used for synchronization with the Wolfram Language kernel.\nDocumentation: None\nOwnValues: None\nUpValues: Parallel`Protected`PacketHandler[SuspendPacket[Null], Parallel`Kernels`Private`kernel_] ^:= (Message[KernelObject::rdead, Parallel`Kernels`Private`subKernel[Parallel`Kernels`Private`kernel]]; Parallel`Developer`CloseError[Parallel`Kernels`Private`kernel])\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SuspendPacket",
	"Syntax":"ObjectType: Symbol\nUsage: System`Syntax\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Syntax",
	"SystemException":"ObjectType: Symbol\nUsage: System`SystemException\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`SystemException",
	"SystemGet":"ObjectType: Symbol\nUsage: SystemGet[{sym , …}, \"filename\"] loads source file with path encoded in \"filename\"\n              1\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SystemGet",
	"SystemHelpPath":"ObjectType: Symbol\nUsage: SystemHelpPath is a global option that specifies which directories are searched for the help notebooks used within the help system.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SystemHelpPath",
	"SystemInformationData":"ObjectType: Symbol\nUsage: System`SystemInformationData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[SystemInformationData[System`InfoDump`lis_], System`InfoDump`fmt_] ^:= With[{System`InfoDump`boxes = Block[{BoxForm`UseIcons = False}, System`InfoDump`systemInformationBoxes[System`InfoDump`lis, System`InfoDump`fmt]]}, InterpretationBox[System`InfoDump`boxes, SystemInformationData[System`InfoDump`lis]]]\nOptions: None\nAttributes: {}\nFullName: System`SystemInformationData",
	"SystemStub":"ObjectType: Symbol\nUsage: SystemStub[{sym , sym , …}, \"context\", \"filename\"] saves definitions of given symbols {sym , sym , …} and all symbols in the given \"context\" specified in source file with encoded path \"filename\" and creates auto-loading rules for each symbol sym SystemStub[{sym , …}, \"context\", \"filename\", {esym , …}] also saves definitions for extra symbols {esym , …}, but does not create auto-loading rules for them.SystemStub[{sym , …}, \"context\", \"filename\", {esym , …}, {fs , …}, {patt , …}] also saves formatting rules for symbols {fs , …} for formatting patterns {patt , …}.\n               1     2                                                                    1     2                                                                                                                                                    i               1                                  1                                                    1                                                                     1                                  1         1           1                                                 1                                  1\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SystemStub[System`Private`fn_List, System`Private`cont_, System`Private`file_] := SystemStub[System`Private`fn, System`Private`cont, System`Private`file, {}, System`Private`MakeAutoLoadRules[System`Dump`AutoLoad], {}, HoldComplete]\nSystemStub[System`Private`fn_List, System`Private`cont_, System`Private`file_, System`Private`extra_List] := SystemStub[System`Private`fn, System`Private`cont, System`Private`file, System`Private`extra, System`Private`MakeAutoLoadRules[System`Dump`AutoLoad], {}, HoldComplete]\nSystemStub[System`Private`fn_List, System`Private`cont_, System`Private`file_, System`Private`extra_List, System`Private`formatfn_List, System`Private`patts_List] := SystemStub[System`Private`fn, System`Private`cont, System`Private`file, System`Private`extra, System`Private`MakeAutoLoadRules[System`Dump`AutoLoad], System`Private`formatfn, BoxForm`MakeBoxAutoLoadRules[System`Private`patts]]\nSystemStub[System`Private`fn_List, System`Private`cont_, System`Private`file_, System`Private`extra_List, Except[_List, System`Private`autoloadrulesfun_]] := SystemStub[System`Private`fn, System`Private`cont, System`Private`file, System`Private`extra, System`Private`autoloadrulesfun, {}, HoldComplete]\nSystemStub[{System`Private`fn___}, System`Private`cont_, System`Private`file_, {System`Private`extra___}, System`Private`autoloadrulesfun_, {System`Private`fn2___}, System`Private`autoloadrulesfun2_] := Module[{System`Private`binary, System`Private`newsyms, System`Private`syms, System`Private`values, System`Private`pFile, System`Private`pTime, System`Private`pOK = False, System`Private`msgs, System`Private`pContext, System`Private`pContextPath, System`Private`pSaveContextPathData}, If[System`Private`$SysmakeError =!= 0, Return[{}]]; System`Private`pFile = StringJoin[System`Dump`fixfile[System`Private`file], \"x\"]; System`Private`binary = StringJoin[System`Private`$SystemFileDir, System`Private`pFile]; Unprotect[System`Private`fn, System`Private`fn2]; If[System`Private`NewerFileDate[System`Private`file, System`Private`binary] || {System`Private`extra} =!= {} || TrueQ[System`Private`$ForceRebuild], System`Private`pOK = True; System`Private`pContext = $Context; System`Private`pContextPath = $ContextPath; System`Private`pSaveContextPathData = System`Private`SaveContextPathData; If[System`Private`$PrintLoad, Print[StringJoin[\"building \", System`Private`pFile]]; ]; System`Private`pTime = First[Timing[System`Private`values = System`Private`SaveAllValues[{System`Private`fn, System`Private`fn2, System`Private`extra}]; System`Private`syms = Union[{System`Private`fn, System`Private`fn2, System`Private`extra}, SameTest -> Automatic]; System`Private`newsyms = Get[System`Private`file]; If[System`Private`newsyms === $Failed, If[System`Private`$PrintLoad, Print[\"unable to load \", System`Private`file]]; Print[StringJoin[\"ERROR building \", System`Private`pFile]]; System`Private`$SysmakeError = 8; Return[{}]]; System`Private`msgs = DeleteCases[DeleteCases[$MessageList, HoldForm[Get::noopen]], HoldForm[General::stop]]; If[Length[System`Private`msgs] > 0, System`Private`$SysmakeError = 5; Print[StringJoin[\"ERROR building \", System`Private`pFile]]; Return[{}]]; If[$Context =!= System`Private`pContext, Print[\"ERROR: $Context changed from \", System`Private`pContext, \" to \", $Context]; System`Private`$SysmakeError = 9; Return[{}]]; If[$ContextPath =!= System`Private`pContextPath, Print[\"ERROR: $ContextPath changed from \", System`Private`pContextPath, \" to \", $ContextPath]; System`Private`$SysmakeError = 9; Return[{}]]; If[System`Private`SaveContextPathData =!= System`Private`pSaveContextPathData, Print[\"ERROR: incorrect use of NewContextPath[] and RestoreContextPath[] changed the path from \", System`Private`pSaveContextPathData, \" to \", System`Private`SaveContextPathData]; System`Private`$SysmakeError = 9; Return[{}]]; If[System`Private`syms =!= {} && System`Private`syms =!= Union[System`Private`newsyms, SameTest -> Automatic], System`Private`$SysmakeError = 3; Print[StringJoin[\"ERROR building \", System`Private`pFile]]; Message[General::badsys1, System`Private`file, System`Private`newsyms, System`Private`syms]; Print[Complement[System`Private`newsyms, System`Private`syms]]; Return[{}]]; If[FileType[DirectoryName[System`Private`binary]] === None, CreateDirectory[DirectoryName[System`Private`binary]]]; (DumpSave[System`Private`binary, #1, HoldAllComplete] & )[Join[{System`Private`cont}, System`Private`syms]]; System`Private`RestoreAllValues[System`Private`values]; System`Private`msgs = DeleteCases[DeleteCases[$MessageList, HoldForm[Get::noopen]], HoldForm[General::stop]]; If[Length[System`Private`msgs] > 0, Print[StringJoin[\"ERROR building \", System`Private`pFile]]; System`Private`$SysmakeError = 6; Return[{}]]; ]]; ]; System`Private`autoloadrulesfun[{System`Private`fn}, System`Private`file]; System`Private`autoloadrulesfun2[{System`Private`fn2}, System`Private`file]; If[System`Private`pOK && System`Private`$PrintLoad && System`Private`$SysmakeError === 0, Print[StringJoin[\"    done in \", ToString[AccountingForm[System`Private`pTime, 4]], \" secs\"]]]; {System`Private`fn, System`Private`fn2}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SystemStub",
	"SystemTest":"ObjectType: Symbol\nUsage: System`SystemTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: SystemTest[] := SystemTest`Private`systemTest[]\nSystemTest[\"Properties\"] := {\"Network\", \"FileSystem\", \"Devices\", \"Links\", \"Services\", \"ImportExport\"}\nSystemTest[SystemTest`Private`keys_] := SystemTest`Private`systemTest[SystemTest`Private`keys]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`SystemTest",
	"Tab":"None",
	"TabFilling":"ObjectType: Symbol\nUsage: TabFilling is an option for character selections that specifies how a Tab character is represented on the screen.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TabFilling",
	"TableViewBox":"ObjectType: Symbol\nUsage: System`TableViewBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TableViewBox] ^:= {Alignment -> {Automatic, Automatic}, AllowedDimensions -> Automatic, Appearance -> Automatic, AppearanceElements -> All, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, DefaultBaseStyle -> \"TableView\", DefaultElement -> \"\", Enabled -> Automatic, FieldSize -> {{1., 5.}, {1., 1.}}, FrameMargins -> Automatic, ImageMargins -> Automatic, ImageSize -> Automatic, Scrollbars -> {Automatic, Automatic}, ScrollPosition -> {0., 0.}, Spacings -> Automatic, TableViewBoxBackground -> {}, TableViewBoxItemSize -> {}}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: BoxForm`apat$:HoldPattern[MakeExpression[_TableViewBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_TableViewBox, _]], \"Typeset`TableView`\", {{TableView, _}, {TableViewBox, HoldPattern[MakeExpression[_TableViewBox, _]]}}, Hold[TableView, TableViewBox]]\nOptions: None\nAttributes: {}\nFullName: System`TableViewBox",
	"TableViewBoxBackground":"ObjectType: Symbol\nUsage: System`TableViewBoxBackground\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TableViewBoxBackground",
	"TableViewBoxItemSize":"ObjectType: Symbol\nUsage: System`TableViewBoxItemSize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TableViewBoxItemSize",
	"TableViewBoxOptions":"ObjectType: Symbol\nUsage: System`TableViewBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TableViewBoxOptions",
	"TabSpacings":"ObjectType: Symbol\nUsage: TabSpacings is an option for character selections that specifies the number of spaces in ems that the cursor advances when the Tab key is pressed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TabSpacings",
	"TabViewBox":"ObjectType: Symbol\nUsage: System`TabViewBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TabViewBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> True, ControlPlacement -> {Automatic, Automatic}, DefaultBaseStyle -> \"TabView\", DefaultLabelStyle -> \"TabViewLabel\", Enabled -> Automatic, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> All, LabelStyle -> {}}\nOptions[TabViewBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[TabViewBox]]\nAbsoluteOptions[TabViewBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[TabViewBox]]\nOptions[TabViewBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[TabViewBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, TabViewBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[TabViewBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[TabViewBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, TabViewBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[TabViewBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, TabViewBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[TabViewBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_TabViewBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_TabViewBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`TabViewBox",
	"TabViewBoxOptions":"ObjectType: Symbol\nUsage: TabViewBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for TabViewBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TabViewBoxOptions",
	"TagBoxNote":"ObjectType: Symbol\nUsage: System`TagBoxNote\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TagBoxNote",
	"TagStyle":"ObjectType: Symbol\nUsage: System`TagStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TagStyle",
	"TemplateArgBox":"ObjectType: Symbol\nUsage: System`TemplateArgBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TemplateArgBox",
	"TemplateEvaluate":"ObjectType: Symbol\nUsage: System`TemplateEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TemplateEvaluate",
	"TemplateSlotSequence":"ObjectType: Symbol\nUsage: System`TemplateSlotSequence\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TemplateSlotSequence",
	"TemplateUnevaluated":"ObjectType: Symbol\nUsage: System`TemplateUnevaluated\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TemplateUnevaluated",
	"TemplateVerbatim":"ObjectType: Symbol\nUsage: System`TemplateVerbatim\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TemplateVerbatim",
	"TemporaryVariable":"ObjectType: Symbol\nUsage: System`TemporaryVariable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TemporaryVariable",
	"TensorQ":"ObjectType: Symbol\nUsage: System`TensorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TensorQ",
	"TestResultObject":"ObjectType: Symbol\nUsage: TestResultObject[…] gives an object that represents the results of a VerificationTest.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: TestResultObject[BoxForm`x_Association][MUnit`VerificationTest`Private`property_String] := If[MUnit`VerificationTest`Private`property === \"Properties\", Keys[BoxForm`x], BoxForm`x[MUnit`VerificationTest`Private`property]]\nTestResultObject[BoxForm`x_Association][MUnit`VerificationTest`Private`propertylist_List] := KeyTake[BoxForm`x, MUnit`VerificationTest`Private`propertylist]\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[MUnit`VerificationTest`Private`tso:TestResultObject[MUnit`VerificationTest`Private`props_], BoxForm`fmt_] \/; BoxForm`UseIcons && AssociationQ[Unevaluated[MUnit`VerificationTest`Private`props]] && MUnit`VerificationTest`Private`validTROAssoc[MUnit`VerificationTest`Private`props] ^:= Module[{MUnit`VerificationTest`Private`alwaysGrid, MUnit`VerificationTest`Private`sometimesGrid}, MUnit`VerificationTest`Private`alwaysGrid = {BoxForm`MakeSummaryItem[{\"Outcome: \", MUnit`VerificationTest`Private`tso[\"Outcome\"]}, BoxForm`fmt], BoxForm`MakeSummaryItem[{\"Test ID: \", MUnit`VerificationTest`Private`tso[\"TestID\"]}, BoxForm`fmt]}; MUnit`VerificationTest`Private`sometimesGrid = {BoxForm`MakeSummaryItem[{\"Input: \", ElisionsDump`expandablePane[Short[MUnit`VerificationTest`Private`tso[\"Input\"], 2\/3]]}, BoxForm`fmt], BoxForm`MakeSummaryItem[{\"Expected output: \", ElisionsDump`expandablePane[Short[MUnit`VerificationTest`Private`tso[\"ExpectedOutput\"], 2\/3]]}, BoxForm`fmt], BoxForm`MakeSummaryItem[{\"Actual output: \", ElisionsDump`expandablePane[Short[MUnit`VerificationTest`Private`tso[\"ActualOutput\"], 2\/3]]}, BoxForm`fmt]}; If[ !(MUnit`VerificationTest`Private`tso[\"ExpectedMessages\"] == {} && MUnit`VerificationTest`Private`tso[\"ActualMessages\"] == {}), AppendTo[MUnit`VerificationTest`Private`sometimesGrid, BoxForm`MakeSummaryItem[{\"Expected messages: \", ElisionsDump`expandablePane[Short[MUnit`VerificationTest`Private`tso[\"ExpectedMessages\"], 2\/3]]}, BoxForm`fmt]]; AppendTo[MUnit`VerificationTest`Private`sometimesGrid, BoxForm`MakeSummaryItem[{\"Actual messages: \", ElisionsDump`expandablePane[Short[MUnit`VerificationTest`Private`tso[\"ActualMessages\"], 2\/3]]}, BoxForm`fmt]]]; AppendTo[MUnit`VerificationTest`Private`sometimesGrid, BoxForm`MakeSummaryItem[{\"Time taken: \", ElisionsDump`expandablePane[Short[MUnit`VerificationTest`Private`tso[\"AbsoluteTimeUsed\"], 2\/3]]}, BoxForm`fmt]]; BoxForm`ArrangeSummaryBox[TestResultObject, MUnit`VerificationTest`Private`tso, MUnit`VerificationTest`Private`iconWrapper[Symbol[StringJoin[\"MUnit`VerificationTest`Private`icon\", MUnit`VerificationTest`Private`tso[\"Outcome\"]]]], MUnit`VerificationTest`Private`alwaysGrid, MUnit`VerificationTest`Private`sometimesGrid, BoxForm`fmt]]\nOptions: None\nAttributes: {}\nFullName: System`TestResultObject",
	"TetrahedronBox":"ObjectType: Symbol\nUsage: System`TetrahedronBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TetrahedronBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexTextureCoordinates -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TetrahedronBox",
	"TetrahedronBoxOptions":"ObjectType: Symbol\nUsage: System`TetrahedronBoxOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TetrahedronBoxOptions",
	"TeXSave":"ObjectType: Symbol\nUsage: TeXSave[\"file.tex\"] saves a TeX version of the current input notebook in the front end. TeXSave[\"file.tex\", \"source.nb\"] saves a TeX version of the notebook from the file source . nb. TeXSave[\"file.tex\", notebook] saves a TeX version of the notebook corresponding to the specified notebook object. \n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TeXSave[System`ConvertersDump`arg_, (System`ConvertersDump`opts___)?OptionQ] := TeXSave[System`ConvertersDump`arg, SelectedNotebook[], System`ConvertersDump`opts] \/; Head[$FrontEnd] === FrontEndObject\nTeXSave[System`ConvertersDump`file_, System`ConvertersDump`source_String, (System`ConvertersDump`opts___)?OptionQ] := With[{System`ConvertersDump`nbFound = System`ConvertersDump`locateNotebook[System`ConvertersDump`source]}, TeXSave[System`ConvertersDump`file, System`ConvertersDump`nbFound, System`ConvertersDump`opts] \/; System`ConvertersDump`nbFound =!= $Failed]\nTeXSave[System`ConvertersDump`args__, (System`ConvertersDump`opts___)?OptionQ] := (Message[TeXSave::obsalt, TeXSave, Export]; Export[System`ConvertersDump`args, \"TeX\", System`ConvertersDump`opts])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TeXSave",
	"Text3DBox":"ObjectType: Symbol\nUsage: System`Text3DBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[Text3DBox] ^= {Background -> None, BaseStyle -> {}, DefaultBaseStyle -> {}, FormatType -> Automatic}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Text3DBox",
	"Text3DBoxOptions":"ObjectType: Symbol\nUsage: Text3DBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for Text3DBox objects.\n                       1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Text3DBoxOptions",
	"TextBand":"ObjectType: Symbol\nUsage: System`TextBand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TextBand",
	"TextBoundingBox":"ObjectType: Symbol\nUsage: System`TextBoundingBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TextBoundingBox",
	"TextBox":"ObjectType: Symbol\nUsage: System`TextBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TextBox",
	"TextForm":"ObjectType: Symbol\nUsage: System`TextForm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TextForm",
	"TextLine":"ObjectType: Symbol\nUsage: System`TextLine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TextLine",
	"TextParagraph":"ObjectType: Symbol\nUsage: System`TextParagraph\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TextParagraph",
	"TextStyle":"ObjectType: Symbol\nUsage: TextStyle is an option for graphics functions and for Text which specifies the default style and font options with which text should be rendered. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TextStyle",
	"ThisLink":"ObjectType: Symbol\nUsage: ThisLink is used in patterns for external packages to distinguish between several instances of the same package.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ThisLink",
	"TimeWarpingCorrespondence":"ObjectType: Symbol\nUsage: TimeWarpingCorrespondence[s , s ] gives the time warping (DTW) similarity path between sequences s  and s .TimeWarpingCorrespondence[s , s , r] uses a window of radius r for local search.\n                           1   2                                                                  1      2                            1   2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TimeWarpingCorrespondence[Signal`TimeWarpingDump`args___] := (Message[TimeWarpingCorrespondence::deprec, TimeWarpingCorrespondence, WarpingCorrespondence]; WarpingCorrespondence[Signal`TimeWarpingDump`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TimeWarpingCorrespondence",
	"TimeWarpingDistance":"ObjectType: Symbol\nUsage: TimeWarpingDistance[s , s ] gives the dynamic time warping (DTW) distance between sequences s  and s .TimeWarpingDistance[s , s , r] uses a window of radius r for local search.\n                     1   2                                                                   1      2                      1   2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TimeWarpingDistance[Signal`TimeWarpingDump`args___] := (Message[TimeWarpingDistance::deprec, TimeWarpingDistance, WarpingDistance]; WarpingDistance[Signal`TimeWarpingDump`args])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TimeWarpingDistance",
	"TitleGrouping":"ObjectType: Symbol\nUsage: System`TitleGrouping\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TitleGrouping",
	"ToColor":"ObjectType: Symbol\nUsage: ToColor[color, form] converts color to form if form is GrayLevel, RGBColor or CMYKColor. Otherwise form[color] is evaluated and the result is expected to be a valid color directive.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ToColor",
	"ToDate":"ObjectType: Symbol\nUsage: ToDate[time] converts an absolute time in seconds since the beginning of January 1, 1900 to a date of the form {y, m, d, h, m, s}. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ToDate",
	"ToFileName":"ObjectType: Symbol\nUsage: ToFileName[\"directory\", \"name\"] assembles a full file name from a directory name and a file name. ToFileName[{dir , dir , …}, name] assembles a full file name from a hierarchy of directory names. ToFileName[{dir , dir , …}] assembles a single directory name from a hierarchy of directory names. \n                                                                                                                 1     2                                                                                           1     2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ToFileName[FileName[System`Dump`e___]] := ToFileName[System`Dump`e]\nToFileName[FrontEnd`FileName[System`Dump`e___]] := Block[{System`Dump`link, System`Dump`res}, If[$Notebooks, System`Dump`res = MathLink`CallFrontEnd[FrontEnd`ToFileName[FrontEnd`FileName[System`Dump`e]]]; If[StringQ[System`Dump`res], Internal`EncodeCharacters[System`Dump`res, Internal`$FileCharacterEncoding], System`Dump`res], FrontEnd`FileName[System`Dump`e]]]\nToFileName[{FrontEnd`FileName[{System`Dump`e___}, System`Dump`opts:OptionsPattern[{}]], System`Dump`a___}, System`Dump`b___] := ToFileName[FrontEnd`FileName[{System`Dump`e, System`Dump`a}, System`Dump`b, System`Dump`opts]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ToFileName",
	"Toggle":"ObjectType: Symbol\nUsage: System`Toggle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Toggle",
	"ToggleFalse":"ObjectType: Symbol\nUsage: System`ToggleFalse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ToggleFalse",
	"TogglerBox":"ObjectType: Symbol\nUsage: System`TogglerBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TogglerBox] ^:= {Alignment -> {Automatic, Automatic}, Appearance -> {Automatic, \"Palette\"}, AutoAction -> False, Background -> Automatic, BaselinePosition -> Automatic, BaseStyle -> {}, ContentPadding -> True, ContinuousAction -> False, DefaultBaseStyle -> \"Toggler\", Enabled -> Automatic, FrameMargins -> Automatic, ImageMargins -> 0, ImageSize -> All}\nOptions[TogglerBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[TogglerBox]]\nAbsoluteOptions[TogglerBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[TogglerBox]]\nOptions[TogglerBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[TogglerBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, TogglerBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[TogglerBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[TogglerBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, TogglerBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[TogglerBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, TogglerBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[TogglerBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_TogglerBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_TogglerBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`TogglerBox",
	"TogglerBoxOptions":"ObjectType: Symbol\nUsage: TogglerBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for TogglerBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TogglerBoxOptions",
	"ToHeldExpression":"ObjectType: Symbol\nUsage: System`ToHeldExpression\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Listable}\nFullName: System`ToHeldExpression",
	"TooBig":"None",
	"TooltipBox":"ObjectType: Symbol\nUsage: System`TooltipBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TooltipBox] ^:= {Background -> Automatic, BaseStyle -> \"Tooltip\", DefaultBaseStyle -> {}, DefaultTooltipStyle -> \"TooltipLabel\", StripOnInput -> False, TooltipDelay -> 0, TooltipStyle -> {}}\nOptions[TooltipBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[TooltipBox]]\nAbsoluteOptions[TooltipBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[TooltipBox]]\nOptions[TooltipBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[TooltipBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, TooltipBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[TooltipBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[TooltipBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, TooltipBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[TooltipBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, TooltipBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[TooltipBox[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nBoxForm`apat$:HoldPattern[MakeExpression[_TooltipBox, _]] ^:= BoxForm`BoxFormAutoLoad[General, BoxForm`apat$, HoldPattern[MakeExpression[_TooltipBox, _]], \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: System`TooltipBox",
	"TooltipBoxOptions":"ObjectType: Symbol\nUsage: TooltipBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for TooltipBox objects.\n                        1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TooltipBoxOptions",
	"TotalHeight":"ObjectType: Symbol\nUsage: System`TotalHeight\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TotalHeight",
	"TraceAction":"ObjectType: Symbol\nUsage: TraceAction is an option for TracePrint and TraceDialog that specifies the function to be applied to each expression they trace.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TraceAction",
	"TraceInternal":"ObjectType: Symbol\nUsage: TraceInternal is an option for Trace and related functions which, if True or False, specifies whether to trace evaluations of expressions generated internally by Mathematica. The intermediate Automatic setting traces a selected set of internal evaluations including Messages and sets or unsets of visible symbols.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TraceInternal",
	"TraceLevel":"ObjectType: Symbol\nUsage: TraceLevel[] returns the level currently being traced when it appears within Trace and related functions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TraceLevel",
	"TraditionalFunctionNotation":"ObjectType: Symbol\nUsage: TraditionalFunctionNotation is an option for selections that specifies whether input of the form f(x) is interpreted by the kernel as a function or as a product.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TraditionalFunctionNotation",
	"TraditionalNotation":"ObjectType: Symbol\nUsage: System`TraditionalNotation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TraditionalNotation",
	"TraditionalOrder":"ObjectType: Symbol\nUsage: System`TraditionalOrder\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TraditionalOrder",
	"TransparentColor":"ObjectType: Symbol\nUsage: System`TransparentColor\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TransparentColor",
	"TrapSelection":"ObjectType: Symbol\nUsage: System`TrapSelection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TrapSelection",
	"TubeBezierCurveBox":"ObjectType: Symbol\nUsage: System`TubeBezierCurveBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TubeBezierCurveBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic, VertexColors -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TubeBezierCurveBox",
	"TubeBezierCurveBoxOptions":"ObjectType: Symbol\nUsage: TubeBezierCurveBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for TubeBezierCurveBox objects.\n                                1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TubeBezierCurveBoxOptions",
	"TubeBox":"ObjectType: Symbol\nUsage: System`TubeBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TubeBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TubeBox",
	"TubeBoxOptions":"ObjectType: Symbol\nUsage: TubeBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for TubeBox objects.\n                     1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TubeBoxOptions",
	"TubeBSplineCurveBox":"ObjectType: Symbol\nUsage: System`TubeBSplineCurveBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[TubeBSplineCurveBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}, Method -> {}, SplineClosed -> False, SplineDegree -> Automatic, SplineKnots -> Automatic, SplineWeights -> Automatic, VertexColors -> None}\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`TubeBSplineCurveBox",
	"TubeBSplineCurveBoxOptions":"ObjectType: Symbol\nUsage: TubeBSplineCurveBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for TubeBSplineCurveBox objects.\n                                 1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`TubeBSplineCurveBoxOptions",
	"UntrackedVariables":"ObjectType: Symbol\nUsage: System`UntrackedVariables\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`UntrackedVariables",
	"Up":"ObjectType: Symbol\nUsage: System`Up\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Up",
	"URLFetch":"ObjectType: Symbol\nUsage: URLFetch[url, elements] return elements from url, for any accessible URL.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: URLFetch[CURLLink`URLFetch`Private`request__] := With[{CURLLink`URLFetch`Private`res = Catch[CURLLink`URLFetch`Private`LookupHandler[\"http\", \"URLFetch\"][CURLLink`URLFetch`Private`request], CURLLink`Utilities`Exception, CURLLink`Utilities`errorHandler]}, CURLLink`URLFetch`Private`res \/; CURLLink`URLFetch`Private`res =!= False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> GET, Parameters -> {}, Body -> , MultipartElements -> {}, VerifyPeer -> True, Username -> None, Password -> None, UserAgent -> Automatic, CookieFunction -> Automatic, Cookies -> Automatic, StoreCookies -> True, Headers -> {}, CredentialsProvider -> Automatic, ConnectTimeout -> 0, ReadTimeout -> 0, DisplayProxyDialog -> True, OAuthAuthentication -> None, FollowRedirects -> True, ProxyUsername -> , ProxyPassword -> , Debug -> False, ConnectionSettings -> <|MaxUploadSpeed -> Automatic, MaxDownloadSpeed -> Automatic|>}\nAttributes: {}\nFullName: System`URLFetch",
	"URLFetchAsynchronous":"ObjectType: Symbol\nUsage: URLFetchAsynchronous[url, eventFunction] asynchronously connect to a URL\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: URLFetchAsynchronous[CURLLink`URLFetch`Private`request__] := With[{CURLLink`URLFetch`Private`res = Catch[CURLLink`URLFetch`Private`LookupHandler[\"http\", \"URLFetchAsynchronous\"][CURLLink`URLFetch`Private`request], CURLLink`Utilities`Exception, CURLLink`Utilities`errorHandler]}, CURLLink`URLFetch`Private`res \/; CURLLink`URLFetch`Private`res =!= False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> GET, Parameters -> {}, Body -> , MultipartElements -> {}, VerifyPeer -> True, Username -> None, Password -> None, UserAgent -> Automatic, CookieFunction -> Automatic, Cookies -> Automatic, StoreCookies -> True, Headers -> {}, CredentialsProvider -> Automatic, ConnectTimeout -> 0, ReadTimeout -> 0, OAuthAuthentication -> None, FollowRedirects -> True, ProxyUsername -> , ProxyPassword -> , Debug -> False, ConnectionSettings -> <|MaxUploadSpeed -> Automatic, MaxDownloadSpeed -> Automatic|>, DisplayProxyDialog -> False, Progress -> False, Transfer -> Automatic, UserData -> None, Events -> Automatic}\nAttributes: {}\nFullName: System`URLFetchAsynchronous",
	"URLSave":"ObjectType: Symbol\nUsage: URLSave[url, file, elements] return elements from url for any accessible URL, and store the content in file. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: URLSave[CURLLink`URLFetch`Private`request__] := With[{CURLLink`URLFetch`Private`res = Catch[CURLLink`URLFetch`Private`LookupHandler[\"http\", \"URLSave\"][CURLLink`URLFetch`Private`request], CURLLink`Utilities`Exception, CURLLink`Utilities`errorHandler]}, CURLLink`URLFetch`Private`res \/; CURLLink`URLFetch`Private`res =!= False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> GET, Parameters -> {}, Body -> , MultipartElements -> {}, VerifyPeer -> True, Username -> None, Password -> None, UserAgent -> Automatic, CookieFunction -> Automatic, Cookies -> Automatic, StoreCookies -> True, Headers -> {}, CredentialsProvider -> Automatic, ConnectTimeout -> 0, ReadTimeout -> 0, DisplayProxyDialog -> True, OAuthAuthentication -> None, FollowRedirects -> True, ProxyUsername -> , ProxyPassword -> , Debug -> False, ConnectionSettings -> <|MaxUploadSpeed -> Automatic, MaxDownloadSpeed -> Automatic|>, BinaryFormat -> True}\nAttributes: {}\nFullName: System`URLSave",
	"URLSaveAsynchronous":"ObjectType: Symbol\nUsage: URLSaveAsynchronous[url, file, eventFunction] asynchronously connect to a URL, and store the content in a file.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: URLSaveAsynchronous[CURLLink`URLFetch`Private`request__] := With[{CURLLink`URLFetch`Private`res = Catch[CURLLink`URLFetch`Private`LookupHandler[\"http\", \"URLSaveAsynchronous\"][CURLLink`URLFetch`Private`request], CURLLink`Utilities`Exception, CURLLink`Utilities`errorHandler]}, CURLLink`URLFetch`Private`res \/; CURLLink`URLFetch`Private`res =!= False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> GET, Parameters -> {}, Body -> , MultipartElements -> {}, VerifyPeer -> True, Username -> None, Password -> None, UserAgent -> Automatic, CookieFunction -> Automatic, Cookies -> Automatic, StoreCookies -> True, Headers -> {}, CredentialsProvider -> Automatic, ConnectTimeout -> 0, ReadTimeout -> 0, OAuthAuthentication -> None, FollowRedirects -> True, ProxyUsername -> , ProxyPassword -> , Debug -> False, ConnectionSettings -> <|MaxUploadSpeed -> Automatic, MaxDownloadSpeed -> Automatic|>, DisplayProxyDialog -> False, Progress -> False, BinaryFormat -> True, UserData -> None, Events -> Automatic}\nAttributes: {}\nFullName: System`URLSaveAsynchronous",
	"UseGraphicsRange":"ObjectType: Symbol\nUsage: System`UseGraphicsRange\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`UseGraphicsRange",
	"UserDefinedWavelet":"ObjectType: Symbol\nUsage: System`UserDefinedWavelet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`UserDefinedWavelet",
	"Using":"ObjectType: Symbol\nUsage: Using is an option to Roots that specifies any subsidiary equations that are to be used.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Using",
	"V2Get":"ObjectType: Symbol\nUsage: V2Get[name] reads in a file written by the V2.x versions.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`V2Get",
	"Value":"ObjectType: Symbol\nUsage: System`Value\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Value",
	"ValueBox":"ObjectType: Symbol\nUsage: System`ValueBox\nDocumentation: None\nOwnValues: None\nUpValues: BoxForm`OptionsCache[ValueBox] ^= {BaseStyle -> {}, DefaultBaseStyle -> {}}\nOptions[ValueBox] := (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ValueBox]]\nAbsoluteOptions[ValueBox] ^:= (If[ListQ[#1], System`FEDump`sort[#1], $Failed] & )[BoxForm`OptionsCache[ValueBox]]\nOptions[ValueBox, System`FEDump`option$_] := Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}], System`FEDump`sf}, System`FEDump`result = System`FEDump`sort[Cases[Options[ValueBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Function[{System`FEDump`sf$}, Message[Options::optnf, System`FEDump`sf$, ValueBox]], System`FEDump`resnames]]; System`FEDump`result]\nAbsoluteOptions[ValueBox, System`FEDump`option$_] ^:= Block[{System`FEDump`result, System`FEDump`resnames, System`FEDump`optlist = Flatten[{System`FEDump`option$}]}, System`FEDump`result = System`FEDump`sort[Cases[AbsoluteOptions[ValueBox], _[Alternatives @@ System`FEDump`optlist, _]]]; If[System`FEDump`result =!= $Failed && (System`FEDump`resnames = System`FEDump`compnames[System`FEDump`optlist, First \/@ System`FEDump`result]) =!= {}, Scan[Message[AbsoluteOptions::optx, #1, ValueBox] & , System`FEDump`resnames]]; System`FEDump`result]\nSetOptions[ValueBox, System`FEDump`opts$__] ^:= (Message[SetOptions::nspt, ValueBox]; $Failed)\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ValueBox",
	"ValueBoxOptions":"ObjectType: Symbol\nUsage: ValueBoxOptions  {opt   val , opt   val , …} is an option that specifies settings for ValueBox objects.\n                      1      1     2      2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ValueBoxOptions",
	"ValueForm":"ObjectType: Symbol\nUsage: ValueForm is an internal symbol.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ValueForm",
	"ValuesData":"ObjectType: Symbol\nUsage: System`ValuesData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ValuesData",
	"VectorGlyphData":"ObjectType: Symbol\nUsage: System`VectorGlyphData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: VectorGlyphData[\"VectorPlot\"] := Append[Prepend[Graphics`Glyphs`GlyphsDump`vectorPlotStringNames, Automatic], None]\nVectorGlyphData[\"StreamPlot\"] := Append[Prepend[Graphics`Glyphs`GlyphsDump`streamPlotStringNames, Automatic], None]\nVectorGlyphData[\"VectorPlot3D\"] := Append[Prepend[Graphics`Glyphs`GlyphsDump`vectorPlot3DStringNames, Automatic], None]\nVectorGlyphData[\"VectorDensityPlot\"] := VectorGlyphData[\"VectorPlot\"]\nVectorGlyphData[\"StreamDensityPlot\"] := VectorGlyphData[\"StreamPlot\"]\nVectorGlyphData[\"ListVectorPlot\"] := VectorGlyphData[\"VectorPlot\"]\nVectorGlyphData[\"ListVectorDensityPlot\"] := VectorGlyphData[\"VectorPlot\"]\nVectorGlyphData[\"ListStreamPlot\"] := VectorGlyphData[\"StreamPlot\"]\nVectorGlyphData[\"ListStreamDensityPlot\"] := VectorGlyphData[\"StreamPlot\"]\nVectorGlyphData[\"LineIntegralConvolutionPlot\"] := VectorGlyphData[\"StreamPlot\"]\nVectorGlyphData[\"ListLineIntegralConvolutionPlot\"] := VectorGlyphData[\"StreamPlot\"]\nVectorGlyphData[(Graphics`Glyphs`GlyphsDump`name_)?Graphics`Glyphs`GlyphsDump`AliasGlyphNameQ] := Graphics`Glyphs`GlyphData[Graphics`Glyphs`GlyphsDump`AliasGlyphName[Graphics`Glyphs`GlyphsDump`name]]\nVectorGlyphData[(Graphics`Glyphs`GlyphsDump`name_)?Graphics`Glyphs`GlyphsDump`AliasGlyphNameQ, \"Image\"] := Graphics`Glyphs`GlyphsDump`thumbImage[Graphics`Glyphs`GlyphsDump`AliasGlyphName[Graphics`Glyphs`GlyphsDump`name]]\nVectorGlyphData[(Graphics`Glyphs`GlyphsDump`name_)?Graphics`Glyphs`GlyphNameQ, \"Image\"] := Graphics`Glyphs`GlyphsDump`thumbImage[Graphics`Glyphs`GlyphsDump`name]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorGlyphData",
	"VectorScale":"ObjectType: Symbol\nUsage: VectorScale is an option to VectorPlot, ListVectorPlot, and related functions that determines the length and arrowhead size of field vectors that are drawn. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorScale",
	"Verbose":"ObjectType: Symbol\nUsage: System`Verbose\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Verbose",
	"VerboseConvertToPostScriptPacket":"ObjectType: Symbol\nUsage: System`VerboseConvertToPostScriptPacket\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VerboseConvertToPostScriptPacket",
	"Version":"ObjectType: Symbol\nUsage: System`Version\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Version",
	"VersionNumber":"ObjectType: Symbol\nUsage: System`VersionNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VersionNumber",
	"VertexCoordinateRules":"ObjectType: Symbol\nUsage: VertexCoordinateRules is an option for GraphPlot and related functions which specifies rules for determining the coordinates at which vertices should be placed.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VertexCoordinateRules",
	"VertexLabeling":"ObjectType: Symbol\nUsage: VertexLabeling is an option for GraphPlot and related functions which specifies whether labeling should be included by default for vertices in graphs.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VertexLabeling",
	"VertexRenderingFunction":"ObjectType: Symbol\nUsage: VertexRenderingFunction is an option for GraphPlot and related functions that gives a function to generate the graphics primitives to use in rendering each vertex.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VertexRenderingFunction",
	"Vertical":"ObjectType: Symbol\nUsage: System`Vertical\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Vertical",
	"VerticalForm":"ObjectType: Symbol\nUsage: VerticalForm is an internal symbol used for formatting and printing.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VerticalForm",
	"VideoTimeSeries":"ObjectType: Symbol\nUsage: VideoTimeSeries[f, video] applies f to each frame of the Video object video, returning a time series.VideoTimeSeries[f, video, n] applies f to non-overlapping partitions of n video frames.VideoTimeSeries[f, video, n, d] applies f to partitions with offset d.\n\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: VideoTimeSeries[Video`IntegrationDump`args___] := Block[{Video`IntegrationDump`a, Video`IntegrationDump`res}, Video`IntegrationDump`a = System`Private`Arguments[VideoTimeSeries[Video`IntegrationDump`args], {2, 4}]; Video`IntegrationDump`res \/; Video`IntegrationDump`a =!= {} && (Video`IntegrationDump`res = Video`IntegrationDump`iVideoTimeSeries @@ Video`IntegrationDump`a) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Alignment -> Automatic, MetaInformation -> None, MissingDataMethod -> Automatic, ResamplingMethod -> Automatic}\nAttributes: {}\nFullName: System`VideoTimeSeries",
	"VideoTracks":"ObjectType: Symbol\nUsage: VideoTracks is an option that specifies the video tracks of interest.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VideoTracks",
	"ViewPointSelectorSettings":"ObjectType: Symbol\nUsage: System`ViewPointSelectorSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ViewPointSelectorSettings",
	"ViewPort":"ObjectType: Symbol\nUsage: System`ViewPort\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ViewPort",
	"VirtualGroupData":"ObjectType: Symbol\nUsage: System`VirtualGroupData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VirtualGroupData",
	"VisibleCell":"ObjectType: Symbol\nUsage: System`VisibleCell\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VisibleCell",
	"WaitAsynchronousTask":"ObjectType: Symbol\nUsage: WaitAsynchronousTask[task] waits for task to complete.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Timeout -> Infinity}\nAttributes: {}\nFullName: System`WaitAsynchronousTask",
	"WaitUntil":"ObjectType: Symbol\nUsage: System`WaitUntil\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: System`WaitUntil",
	"WebGeometrySearch":"ObjectType: Symbol\nUsage: System`WebGeometrySearch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: WebGeometrySearch[GeometrySearch`GeometrySearchDump`expr__] := Block[{GeometrySearch`GeometrySearchDump`res}, GeometrySearch`GeometrySearchDump`res = GeometrySearch`GeometrySearchDump`webGeometrySearch[GeometrySearch`GeometrySearchDump`expr]; GeometrySearch`GeometrySearchDump`res \/; GeometrySearch`GeometrySearchDump`res =!= $Failed]\nWebGeometrySearch[GeometrySearch`GeometrySearchDump`expr___] := (GeometrySearch`GeometrySearchDump`messageWebGeometrySearch[GeometrySearch`GeometrySearchDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, MaxItems -> Automatic}\nAttributes: {}\nFullName: System`WebGeometrySearch",
	"WebPageMetaInformation":"ObjectType: Symbol\nUsage: System`WebPageMetaInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`WebPageMetaInformation",
	"WindowMovable":"ObjectType: Symbol\nUsage: WindowMovable is a notebook option that specifies whether to allow the window for the notebook to be moved around interactively on the screen. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`WindowMovable",
	"WindowPersistentStyles":"ObjectType: Symbol\nUsage: System`WindowPersistentStyles\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`WindowPersistentStyles",
	"WindowSelected":"ObjectType: Symbol\nUsage: System`WindowSelected\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`WindowSelected",
	"WindowWidth":"ObjectType: Symbol\nUsage: System`WindowWidth\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`WindowWidth",
	"WolframAlphaDate":"ObjectType: Symbol\nUsage: System`WolframAlphaDate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: WolframAlphaDate[WolframAlphaClient`Private`args__] := With[{WolframAlphaClient`Private`res = WolframAlphaClient`Private`iWolframAlphaDate[WolframAlphaClient`Private`args]}, WolframAlphaClient`Private`res \/; FreeQ[WolframAlphaClient`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[WolframAlphaDate[WolframAlphaClient`Private`date_List, WolframAlphaClient`Private`opts___], WolframAlphaClient`Private`fmt_] \/; 1 <= Length[Unevaluated[WolframAlphaClient`Private`date]] <= 6 ^:= With[{WolframAlphaClient`Private`boxes = ToBoxes[Framed[Switch[Length[Unevaluated[WolframAlphaClient`Private`date]], 1, DateString[WolframAlphaClient`Private`date, \"Year\"], 2, DateString[WolframAlphaClient`Private`date, {\"MonthNameShort\", \" \", \"Year\"}], 3, DateString[WolframAlphaClient`Private`date, \"DateShort\"], 4, DateString[WolframAlphaClient`Private`date, {\"DateShort\", \" \", \"Hour12Short\", \" \", \"AMPMLowerCase\"}], 5, DateString[WolframAlphaClient`Private`date, {\"DateShort\", \" \", \"Hour12Short\", \":\", \"Minute\", \" \", \"AMPMLowerCase\"}], 6, DateString[WolframAlphaClient`Private`date, {\"DateShort\", \" \", \"Hour12Short\", \":\", \"Minute\", \":\", \"Second\", \" \", \"AMPMLowerCase\"}]], RoundingRadius -> 4, FrameStyle -> RGBColor[1, 0.9, 0.8], FrameMargins -> 3], WolframAlphaClient`Private`fmt]}, InterpretationBox[WolframAlphaClient`Private`boxes, WolframAlphaDate[WolframAlphaClient`Private`date, WolframAlphaClient`Private`opts], BaseStyle -> {FontFamily -> \"Helvetica\", ShowStringCharacters -> False}]]\nOptions: {TimeZone -> Automatic}\nAttributes: {NHoldFirst}\nFullName: System`WolframAlphaDate",
	"WolframAlphaQuantity":"ObjectType: Symbol\nUsage: System`WolframAlphaQuantity\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: WolframAlphaQuantity[WolframAlphaClient`Private`args__] := With[{WolframAlphaClient`Private`res = WolframAlphaClient`Private`iWolframAlphaQuantity[WolframAlphaClient`Private`args]}, WolframAlphaClient`Private`res \/; FreeQ[WolframAlphaClient`Private`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[WolframAlphaQuantity[WolframAlphaClient`Private`amts_List, WolframAlphaClient`Private`units_List, WolframAlphaClient`Private`opts___], WolframAlphaClient`Private`fmt_] \/; Length[WolframAlphaClient`Private`amts] === Length[WolframAlphaClient`Private`units] ^:= With[{WolframAlphaClient`Private`boxes = Function[WolframAlphaClient`Private`x, MakeBoxes[WolframAlphaClient`Private`x, WolframAlphaClient`Private`fmt], HoldAllComplete] \/@ WolframAlphaClient`Private`amts, WolframAlphaClient`Private`rowbox = RowBox[Flatten[Riffle[({Slot @@ {#1}, \"  \", StyleBox[ToBoxes[WolframAlphaClient`Private`units[[#1]], WolframAlphaClient`Private`fmt], FontColor -> GrayLevel[0.5], FontWeight -> \"Plain\", ShowStringCharacters -> False]} & ) \/@ Range[Length[WolframAlphaClient`Private`units]], \"  \"]]], WolframAlphaClient`Private`rest = Sequence @@ Flatten[Function[WolframAlphaClient`Private`x, {\",\", MakeBoxes[WolframAlphaClient`Private`x, WolframAlphaClient`Private`fmt]}, HoldAllComplete] \/@ Unevaluated[{WolframAlphaClient`Private`units, WolframAlphaClient`Private`opts}]]}, TemplateBox[WolframAlphaClient`Private`boxes, \"WolframAlphaQuantities\", DisplayFunction -> (FrameBox[WolframAlphaClient`Private`rowbox, RoundingRadius -> 4, FrameStyle -> RGBColor[1, 0.9, 0.8], FrameMargins -> 3] & ), InterpretationFunction -> (RowBox[{\"WolframAlphaQuantity\", \"[\", RowBox[{RowBox[{\"{\", RowBox[{TemplateSlotSequence[1, \",\"]}], \"}\"}], WolframAlphaClient`Private`rest}], \"]\"}] & ), BaseStyle -> {FontFamily -> \"Helvetica\"}]]\nMakeBoxes[WolframAlphaQuantity[WolframAlphaClient`Private`amt_, WolframAlphaClient`Private`unit_, WolframAlphaClient`Private`opts___], WolframAlphaClient`Private`fmt_] ^:= With[{WolframAlphaClient`Private`boxes = {MakeBoxes[WolframAlphaClient`Private`amt, WolframAlphaClient`Private`fmt]}, WolframAlphaClient`Private`rowbox = RowBox[{#1, \"  \", StyleBox[ToBoxes[WolframAlphaClient`Private`unit, WolframAlphaClient`Private`fmt], FontColor -> GrayLevel[0.5], FontWeight -> \"Plain\", ShowStringCharacters -> False]}], WolframAlphaClient`Private`rest = Sequence @@ Flatten[Function[WolframAlphaClient`Private`x, {\",\", MakeBoxes[WolframAlphaClient`Private`x, WolframAlphaClient`Private`fmt]}, HoldAllComplete] \/@ Unevaluated[{WolframAlphaClient`Private`unit, WolframAlphaClient`Private`opts}]]}, TemplateBox[WolframAlphaClient`Private`boxes, \"WolframAlphaQuantity\", DisplayFunction -> (FrameBox[WolframAlphaClient`Private`rowbox, RoundingRadius -> 4, FrameStyle -> RGBColor[1, 0.9, 0.8], FrameMargins -> 3] & ), InterpretationFunction -> (RowBox[{\"WolframAlphaQuantity\", \"[\", RowBox[{#1, WolframAlphaClient`Private`rest}], \"]\"}] & ), BaseStyle -> {FontFamily -> \"Helvetica\"}]]\nOptions: {Accuracy -> Automatic, Appearance -> Automatic, Precision -> Automatic}\nAttributes: {NHoldFirst}\nFullName: System`WolframAlphaQuantity",
	"WolframAlphaResult":"ObjectType: Symbol\nUsage: System`WolframAlphaResult\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[WolframAlphaResult[WolframAlphaClient`Private`q_, WolframAlphaClient`Private`id:{{WolframAlphaClient`Private`podid_, WolframAlphaClient`Private`subpodid_}, WolframAlphaClient`Private`type_}, WolframAlphaClient`Private`opts___], WolframAlphaClient`Private`fmt_] ^:= With[{WolframAlphaClient`Private`xmlcache = Replace[WolframAlphaClient`Private`$cachedWAResult, {{{WolframAlphaClient`Private`q, WolframAlphaClient`Private`id}, WolframAlphaClient`Private`xml_} :> {\"ProcessedXML\" -> WolframAlphaClient`Private`xml}, _ :> {}}]}, WolframAlphaClient`Private`$cachedWAResult = {}; ToBoxes[Interpretation[Framed[WolframAlpha[WolframAlphaClient`Private`q, WolframAlphaClient`Private`id, WolframAlphaClient`Private`opts, Method -> WolframAlphaClient`Private`xmlcache], FrameStyle -> LightGray, RoundingRadius -> 5, FrameMargins -> 10, BaseStyle -> {Plain}], WolframAlphaResult[WolframAlphaClient`Private`q, WolframAlphaClient`Private`id, WolframAlphaClient`Private`opts]], WolframAlphaClient`Private`fmt]]\nMakeBoxes[WolframAlphaResult[WolframAlphaClient`Private`q_, WolframAlphaClient`Private`podid_String, WolframAlphaClient`Private`opts___], WolframAlphaClient`Private`fmt_] ^:= With[{WolframAlphaClient`Private`xmlcache = Replace[WolframAlphaClient`Private`$cachedWAResult, {{{WolframAlphaClient`Private`q, WolframAlphaClient`Private`podid}, WolframAlphaClient`Private`xml_} :> {\"ProcessedXML\" -> WolframAlphaClient`Private`xml}, _ :> {}}]}, WolframAlphaClient`Private`$cachedWAResult = {}; ToBoxes[Interpretation[WolframAlpha[WolframAlphaClient`Private`q, IncludePods -> {WolframAlphaClient`Private`podid}, WolframAlphaClient`Private`opts, AppearanceElements -> {\"Pods\"}, Method -> WolframAlphaClient`Private`xmlcache], WolframAlphaResult[WolframAlphaClient`Private`q, WolframAlphaClient`Private`podid, WolframAlphaClient`Private`opts]], WolframAlphaClient`Private`fmt]]\nOptions: {AppearanceElements -> Automatic, Asynchronous -> False, ExcludePods -> None, IgnoreCase -> False, IncludePods -> All, InputAssumptions -> {}, Method -> {}, PodStates -> {}, PodWidth -> Automatic, TimeConstraint -> 30}\nAttributes: {NHoldRest}\nFullName: System`WolframAlphaResult",
	"WolframScript":"ObjectType: Symbol\nUsage: Global`WolframScript\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Global`WolframScript",
	"WolframScriptEvaluate":"ObjectType: Symbol\nUsage: WolframScript`WolframScriptEvaluate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: WolframScript`WolframScriptEvaluate",
	"WolframScriptExecute":"ObjectType: Symbol\nUsage: WolframScript`WolframScriptExecute\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: WolframScriptExecute[WolframScript`Private`code_String, WolframScript`Private`scriptArgs_String, WolframScript`Private`evalType_Integer, WolframScript`Private`setupType_Integer, WolframScript`Private`version_String, WolframScript`Private`options:OptionsPattern[]] := WolframScriptExecute[WolframScript`Private`code, WolframScript`Private`scriptArgs, WolframScript`Private`version, \"cloudevaluation\" -> WolframScript`Private`setupType >= 3, \"verbose\" -> WolframScript`Private`setupType == 2 || WolframScript`Private`setupType == 4, \"source\" -> Association[1 -> \"code\", 2 -> \"file\", 3 -> \"function\"][WolframScript`Private`evalType], \"print\" -> Association[0 -> False, 1 -> True, 2 -> All][OptionValue[\"print\"]], WolframScript`Private`options]\nWolframScriptExecute[WolframScript`Private`code_String, WolframScript`Private`scriptArgs_String, WolframScript`Private`version_String, WolframScript`Private`options:OptionsPattern[]] := Block[{WolframScript`Private`parentLinkStore = $ParentLink, WolframScript`Private`outputstream, $Output = $Output, $Messages = $Messages, WolframScript`Private`outputsave = $Output, WolframScript`Private`messagessave = $Messages}, If[OptionValue[\"charset\"] === \"Unicode\", Message[WolframScriptOption::charinv]; Return[\"\"]]; TimeConstrained[Quiet[WolframScript`Private`initialize[WolframScript`Private`scriptArgs, WolframScript`Private`options]]; WolframScript`Private`evaluate[WolframScript`Private`code, WolframScript`Private`options], If[OptionValue[TimeConstraint] == 0, Infinity, OptionValue[TimeConstraint]], $ParentLink = WolframScript`Private`parentLinkStore; OptionValue[\"timedout\"]]]\nWolframScriptExecute[___] \/; Message[WolframScriptExecute::BadArgs] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {TimeConstraint -> 0, format -> ScriptForm, timedout -> $TimedOut, charset -> UTF-8, print -> False, line -> 0, formatoptions -> {}, cloudevaluation -> False, verbose -> False, source -> code, stdoutbuffer -> False, inputfilename -> }\nAttributes: {}\nFullName: WolframScript`WolframScriptExecute",
	"WolframScriptInitialize":"ObjectType: Symbol\nUsage: WolframScript`WolframScriptInitialize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: WolframScript`WolframScriptInitialize",
	"WolframScriptNotebook":"ObjectType: Symbol\nUsage: WolframScript`WolframScriptNotebook\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: WolframScript`WolframScriptNotebook",
	"WolframScriptOption":"ObjectType: Symbol\nUsage: WolframScript`WolframScriptOption\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: WolframScript`WolframScriptOption",
	"ZeroWidthTimes":"ObjectType: Symbol\nUsage: ZeroWidthTimes is an option for selections that specifies whether blank spaces representing multiplication are explicitly shown.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ZeroWidthTimes"
}