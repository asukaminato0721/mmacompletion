{
	"Explore`Utilities":"ObjectType: Symbol\nUsage: Explore`Utilities\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Explore`Utilities[Explore`UtilitiesDump`f_String] := Symbol[StringJoin[\"Explore`UtilitiesDump`\", Explore`UtilitiesDump`f]]\nExplore`Utilities[Explore`UtilitiesDump`f_String, Explore`UtilitiesDump`args__] := Explore`Utilities[Explore`UtilitiesDump`f][Explore`UtilitiesDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Explore`Utilities",
	"PacletManager`Paclet`Private`UUID":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`UUID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`UUID",
	"Integrate`V":"ObjectType: Symbol\nUsage: Integrate`V\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`V",
	"SurfaceGraphics`Methods`Valence":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Valence\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Valence",
	"Statistics`DataDistributionUtilities`ValidAdaptiveSensitivityQ":"ObjectType: Symbol\nUsage: Statistics`DataDistributionUtilities`ValidAdaptiveSensitivityQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`DataDistributionUtilities`ValidAdaptiveSensitivityQ[Automatic, Statistics`DataDistributionUtilities`Dump`head_] := True\nStatistics`DataDistributionUtilities`ValidAdaptiveSensitivityQ[Statistics`DataDistributionUtilities`Dump`sens_, Statistics`DataDistributionUtilities`Dump`head_] \/; Quiet[0 <= Statistics`DataDistributionUtilities`Dump`sens <= 1] := True\nStatistics`DataDistributionUtilities`ValidAdaptiveSensitivityQ[Statistics`DataDistributionUtilities`Dump`sens_, Statistics`DataDistributionUtilities`Dump`head_] := (Message[Statistics`DataDistributionUtilities`Dump`head::sns, Statistics`DataDistributionUtilities`Dump`sens]; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`DataDistributionUtilities`ValidAdaptiveSensitivityQ",
	"System`Dump`ValidArrowheadSpec":"ObjectType: Symbol\nUsage: System`Dump`ValidArrowheadSpec\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidArrowheadSpec[Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber] := True\nSystem`Dump`ValidArrowheadSpec[{Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber}] := True\nSystem`Dump`ValidArrowheadSpec[{Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber, Automatic | _?System`Dump`ValidNumber}] := True\nSystem`Dump`ValidArrowheadSpec[{Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber, Automatic | _?System`Dump`ValidNumber, Automatic | _Graphics | _Graphics3D | _Dynamic}] := True\nSystem`Dump`ValidArrowheadSpec[{Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber, Automatic | _?System`Dump`ValidNumber, {Automatic | _Graphics | _Graphics3D | _Dynamic, _?System`Dump`ValidNumber}}] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidArrowheadSpec",
	"System`Dump`ValidArrowheadSpecFromBoxes":"ObjectType: Symbol\nUsage: System`Dump`ValidArrowheadSpecFromBoxes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidArrowheadSpecFromBoxes[{Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber, Automatic | _?System`Dump`ValidNumber, Automatic | _GraphicsBox | _Graphics3DBox | _DynamicBox}] := True\nSystem`Dump`ValidArrowheadSpecFromBoxes[{Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber, Automatic | _?System`Dump`ValidNumber, {Automatic | _GraphicsBox | _Graphics3DBox | _DynamicBox, _?System`Dump`ValidNumber}}] := True\nSystem`Dump`ValidArrowheadSpecFromBoxes[System`Dump`x___] := System`Dump`ValidArrowheadSpec[System`Dump`x]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidArrowheadSpecFromBoxes",
	"Statistics`Library`ValidateAndEstimate":"ObjectType: Symbol\nUsage: Statistics`Library`ValidateAndEstimate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ValidateAndEstimate[Statistics`DistributionEstimateDump`inputData_, Statistics`DistributionEstimateDump`dist_, Statistics`DistributionEstimateDump`start_, Statistics`DistributionEstimateDump`optlist_, Statistics`DistributionEstimateDump`caller_, Statistics`DistributionEstimateDump`returnRules_:False] := Block[{Statistics`DistributionEstimateDump`params, Statistics`DistributionEstimateDump`newStart, Statistics`DistributionEstimateDump`method, Statistics`DistributionEstimateDump`opts, Statistics`DistributionEstimateDump`wp, Statistics`DistributionEstimateDump`res, Statistics`DistributionEstimateDump`newtype, Statistics`DistributionEstimateDump`estopthead, Statistics`DistributionEstimateDump`peopt, Statistics`DistributionEstimateDump`peoptions, Statistics`DistributionEstimateDump`resrule}, If[Statistics`DistributionEstimateDump`caller =!= FindDistributionParameters, Statistics`DistributionEstimateDump`estopthead = EstimatedDistribution, Statistics`DistributionEstimateDump`estopthead = Statistics`DistributionEstimateDump`caller]; Quiet[Catch[If[AugmentedData`ADLength[Statistics`DistributionEstimateDump`inputData] < 1, Message[Statistics`DistributionEstimateDump`caller::insffdt, 1]; Throw[$Failed]]; If[Statistics`Library`RandomStreamDistributionQ[Statistics`DistributionEstimateDump`dist], Throw[$Failed]]; If[DistributionParameterQ[Statistics`DistributionEstimateDump`dist] || Statistics`RandomMatrices`MatrixDistributionQ[Statistics`DistributionEstimateDump`dist], Null, Throw[$Failed], Message[Statistics`DistributionEstimateDump`caller::ntdist, Statistics`DistributionEstimateDump`dist]; Throw[$Failed]]; If[Internal`QuantityArrayQ[Statistics`DistributionEstimateDump`inputData] || Internal`LiterallyOccurringQ[Statistics`DistributionEstimateDump`inputData, Unevaluated[Quantity]], Statistics`Library`EstimateWithQuantities[Statistics`DistributionEstimateDump`inputData, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`start, Statistics`DistributionEstimateDump`optlist, Statistics`DistributionEstimateDump`caller], If[Statistics`RandomMatrices`MatrixDistributionQ[Statistics`DistributionEstimateDump`dist] === True, If[Statistics`RandomMatrices`AcceptableDistributedMatrixDataQ[Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`inputData], Null, Message[Statistics`DistributionEstimateDump`caller::ntsprt, Statistics`DistributionEstimateDump`dist]; Throw[$Failed], Message[Statistics`DistributionEstimateDump`caller::ntsprt, Statistics`DistributionEstimateDump`dist]], If[Internal`LiterallyOccurringQ[DistributionDomain[Statistics`DistributionEstimateDump`dist], DistributionDomain] &&  !(MatchQ[Statistics`DistributionEstimateDump`dist, _PearsonDistribution | _CensoredDistribution] || Statistics`Library`QuantityDistributionQ[Statistics`DistributionEstimateDump`dist] === True), Message[Statistics`DistributionEstimateDump`caller::nvsprt, Statistics`DistributionEstimateDump`dist], If[Statistics`Library`AcceptableDistributedDataQ[Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`inputData], Null, Message[Statistics`DistributionEstimateDump`caller::ntsprt, Statistics`DistributionEstimateDump`dist]; Throw[$Failed], Message[Statistics`DistributionEstimateDump`caller::nvsprt, Statistics`DistributionEstimateDump`dist]]]]; Statistics`DistributionEstimateDump`peopt = OptionValue[Statistics`DistributionEstimateDump`estopthead, FilterRules[Statistics`DistributionEstimateDump`optlist, Options[Statistics`DistributionEstimateDump`estopthead]], ParameterEstimator]; Statistics`DistributionEstimateDump`peopt = Statistics`DistributionEstimateDump`convertParameterEstimator[Statistics`DistributionEstimateDump`peopt, Statistics`DistributionEstimateDump`estopthead]; If[Internal`LiterallyOccurringQ[Statistics`DistributionEstimateDump`peopt, {$Failed, Statistics`DistributionEstimateDump`convertParameterEstimator}], Throw[$Failed]]; {Statistics`DistributionEstimateDump`newtype, Statistics`DistributionEstimateDump`peoptions} = Take[Statistics`DistributionEstimateDump`peopt, 2]; Statistics`DistributionEstimateDump`params = Statistics`Library`GetDistributionParameters[Statistics`DistributionEstimateDump`dist]; Statistics`DistributionEstimateDump`params = DeleteDuplicates[Statistics`DistributionEstimateDump`params]; Statistics`DistributionEstimateDump`newStart = Statistics`DistributionEstimateDump`symbolicModelAndInstanceToStartingValues[Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`start]; If[Internal`LiterallyOccurringQ[Statistics`Library`CheckStartSpecification[Statistics`DistributionEstimateDump`start, Statistics`DistributionEstimateDump`newStart, Statistics`DistributionEstimateDump`params, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`caller], $Failed], Throw[$Failed]]; (If[#1 =!= {}, Message[Statistics`DistributionEstimateDump`caller::vloc, First[#1]]; Throw[$Failed]] & )[Select[Statistics`DistributionEstimateDump`params, Statistics`DistributionEstimateDump`NotLocalizableQ]]; Statistics`DistributionEstimateDump`method = Method \/. FilterRules[Join[Statistics`DistributionEstimateDump`peoptions, {Method -> Automatic}], Method]; Statistics`DistributionEstimateDump`method = Statistics`DistributionEstimateDump`processMethodOption[Statistics`DistributionEstimateDump`method, Statistics`DistributionEstimateDump`caller]; If[Statistics`DistributionEstimateDump`method === $Failed, Throw[$Failed]]; {Statistics`DistributionEstimateDump`method, Statistics`DistributionEstimateDump`opts} = Statistics`DistributionEstimateDump`method; Statistics`DistributionEstimateDump`opts = DeleteCases[Join[Statistics`DistributionEstimateDump`opts, DeleteCases[Statistics`DistributionEstimateDump`peoptions, (Rule | RuleDelayed)[Method, _]], Statistics`DistributionEstimateDump`optlist, Join[Options[Statistics`DistributionEstimateDump`estopthead], Options[ToExpression[Statistics`DistributionEstimateDump`method]]]], (Rule | RuleDelayed)[ParameterEstimator, _]]; Statistics`DistributionEstimateDump`wp = OptionValue[Statistics`DistributionEstimateDump`estopthead, FilterRules[Statistics`DistributionEstimateDump`opts, Options[Statistics`DistributionEstimateDump`estopthead]], WorkingPrecision]; Statistics`DistributionEstimateDump`opts = Statistics`DistributionEstimateDump`opts \/. (WorkingPrecision -> Automatic) -> WorkingPrecision -> If[Statistics`DistributionEstimateDump`method === \"Solve\", Infinity, MachinePrecision]; Statistics`DistributionEstimateDump`localizeHeadsAndEvaluate[Statistics`DistributionEstimateDump`params, Quiet[Statistics`DistributionEstimateDump`res = Which[Length[Statistics`DistributionEstimateDump`params] === 0, {}, MatchQ[Statistics`DistributionEstimateDump`dist, CopulaDistribution[\"Maximal\" | \"Minimal\", _]], $Failed, MatchQ[Head[Statistics`DistributionEstimateDump`dist], ProductDistribution], Statistics`Library`DoIndependentEstimation[Statistics`DistributionEstimateDump`inputData, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`newtype, Statistics`DistributionEstimateDump`newStart, Statistics`DistributionEstimateDump`opts, Statistics`DistributionEstimateDump`method, Statistics`DistributionEstimateDump`estopthead], Head[Statistics`DistributionEstimateDump`dist] === CopulaDistribution && First[Statistics`DistributionEstimateDump`dist] === \"Product\", Statistics`Library`DoIndependentEstimation[Statistics`DistributionEstimateDump`inputData, ProductDistribution @@ Statistics`DistributionEstimateDump`dist[[2]], Statistics`DistributionEstimateDump`newtype, Statistics`DistributionEstimateDump`newStart, Statistics`DistributionEstimateDump`opts, Statistics`DistributionEstimateDump`method, Statistics`DistributionEstimateDump`estopthead], True, Statistics`DistributionEstimateDump`doEstimation[Statistics`DistributionEstimateDump`inputData, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`newStart, Statistics`DistributionEstimateDump`opts, Statistics`DistributionEstimateDump`newtype, Statistics`DistributionEstimateDump`method, Statistics`DistributionEstimateDump`estopthead, Length[Statistics`DistributionEstimateDump`params]]], {Moment::arg1, CentralMoment::arg1, Cumulant::arg1, FactorialMoment::arg1, N::preclg}]; If[ListQ[Statistics`DistributionEstimateDump`res], Statistics`DistributionEstimateDump`resrule = Statistics`Library`CoerceEstimateToPrecision[Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`res, Statistics`DistributionEstimateDump`wp \/. Automatic -> MachinePrecision, If[Head[Statistics`DistributionEstimateDump`newtype] === List, First[Statistics`DistributionEstimateDump`newtype], Statistics`DistributionEstimateDump`newtype]]; If[Statistics`DistributionEstimateDump`caller === FindDistributionParameters || TrueQ[Statistics`DistributionEstimateDump`returnRules], Statistics`DistributionEstimateDump`res = Statistics`DistributionEstimateDump`resrule, Statistics`DistributionEstimateDump`res = Statistics`DistributionEstimateDump`dist \/. Statistics`Library`RulesDispatch[Statistics`DistributionEstimateDump`resrule]], Statistics`DistributionEstimateDump`res = $Failed]]; Statistics`DistributionEstimateDump`res]], {FindRoot::lstol, FindMaximum::lstol, Min::nord, Less::nord, Greater::nord}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ValidateAndEstimate",
	"Wavelets`ValidateCostFunction":"ObjectType: Symbol\nUsage: Wavelets`ValidateCostFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`ValidateCostFunction[Wavelets`WaveletBestBasisDump`fun_] := Module[{Wavelets`WaveletBestBasisDump`a, Wavelets`WaveletBestBasisDump`b, Wavelets`WaveletBestBasisDump`aval, Wavelets`WaveletBestBasisDump`bval, Wavelets`WaveletBestBasisDump`cval, Wavelets`WaveletBestBasisDump`prop1, Wavelets`WaveletBestBasisDump`prop2, Wavelets`WaveletBestBasisDump`zerovec}, Wavelets`WaveletBestBasisDump`a = RandomReal[1, {16}]; Wavelets`WaveletBestBasisDump`b = RandomReal[1, {16}]; Wavelets`WaveletBestBasisDump`aval = Wavelets`WaveletBestBasisDump`fun[Wavelets`WaveletBestBasisDump`a]; Wavelets`WaveletBestBasisDump`bval = Wavelets`WaveletBestBasisDump`fun[Wavelets`WaveletBestBasisDump`b]; Wavelets`WaveletBestBasisDump`cval = Wavelets`WaveletBestBasisDump`fun[Join[Wavelets`WaveletBestBasisDump`a, Wavelets`WaveletBestBasisDump`b]]; Wavelets`WaveletUtilities`dbPrint[{Wavelets`WaveletBestBasisDump`aval + Wavelets`WaveletBestBasisDump`bval, Wavelets`WaveletBestBasisDump`cval}]; Wavelets`WaveletBestBasisDump`prop1 = If[NumberQ[Wavelets`WaveletBestBasisDump`aval] && NumberQ[Wavelets`WaveletBestBasisDump`bval] && NumberQ[Wavelets`WaveletBestBasisDump`cval], If[Chop[(Wavelets`WaveletBestBasisDump`aval + Wavelets`WaveletBestBasisDump`bval) - Wavelets`WaveletBestBasisDump`cval] == 0, True, Message[WaveletBestBasis::addcf]; False], Message[WaveletBestBasis::invcf, Wavelets`WaveletBestBasisDump`fun]; False]; Wavelets`WaveletBestBasisDump`zerovec = ConstantArray[0, {16}]; Wavelets`WaveletBestBasisDump`prop2 = If[Chop[Wavelets`WaveletBestBasisDump`fun[Wavelets`WaveletBestBasisDump`zerovec]] == 0, True, Message[WaveletBestBasis::zerocf]; False]; If[TrueQ[Wavelets`WaveletBestBasisDump`prop1] && TrueQ[Wavelets`WaveletBestBasisDump`prop2], True, False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`ValidateCostFunction",
	"System`DateObjectDump`ValidateDateObject":"ObjectType: Symbol\nUsage: System`DateObjectDump`ValidateDateObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`ValidateDateObject",
	"ExternalService`MailSettings`ValidateEmailAddress":"ObjectType: Symbol\nUsage: ExternalService`MailSettings`ValidateEmailAddress\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ExternalService`MailSettings`ValidateEmailAddress[ExternalService`MailSettingsDump`addr_String, ExternalService`MailSettingsDump`func_] := Module[{ExternalService`MailSettingsDump`res}, ExternalService`MailSettingsDump`res = Switch[ExternalService`MailSettingsDump`func, Automatic, ExternalService`MailSettingsDump`validAddrJava[ExternalService`MailSettingsDump`addr], None, True, _, ExternalService`MailSettingsDump`func[ExternalService`MailSettingsDump`addr]]; ExternalService`MailSettingsDump`res]\nExternalService`MailSettings`ValidateEmailAddress[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ExternalService`MailSettings`ValidateEmailAddress",
	"Semantic`PLIDump`ValidateGrammar":"ObjectType: Symbol\nUsage: Semantic`PLIDump`ValidateGrammar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Semantic`PLIDump`ValidateGrammar[Semantic`PLIDump`startsSymbolRulesIn_, Semantic`PLIDump`nonStartSymbolRulesIn_, Semantic`PLIDump`messageHead_, Semantic`PLIDump`tag_] := Module[{Semantic`PLIDump`startsSymbolRules = Semantic`PLIDump`startsSymbolRulesIn, Semantic`PLIDump`nonStartSymbolRules = Semantic`PLIDump`nonStartSymbolRulesIn}, If[ !ListQ[Semantic`PLIDump`startsSymbolRules], Semantic`PLIDump`returnError[Semantic`PLIDump`messageHead::ngr1][Semantic`PLIDump`tag]]; If[ !ListQ[Semantic`PLIDump`nonStartSymbolRules], Semantic`PLIDump`returnError[Semantic`PLIDump`messageHead::ngr2][Semantic`PLIDump`tag]]; Semantic`PLIDump`startsSymbolRules = DeleteCases[Semantic`PLIDump`startsSymbolRules, Null]; Semantic`PLIDump`nonStartSymbolRules = DeleteCases[Semantic`PLIDump`nonStartSymbolRules, Null]; If[Semantic`PLIDump`startsSymbolRules === {}, Semantic`PLIDump`returnError[Semantic`PLIDump`messageHead::nos][Semantic`PLIDump`tag]; ]; Semantic`PLIDump`ValidateStartSymbolRules[Semantic`PLIDump`startsSymbolRules, Semantic`PLIDump`messageHead, Semantic`PLIDump`tag]; Semantic`PLIDump`ValidateNonStartSymbolRules[Semantic`PLIDump`nonStartSymbolRules, Semantic`PLIDump`messageHead, Semantic`PLIDump`tag]; ]\nSemantic`PLIDump`ValidateGrammar[Semantic`PLIDump`args___] := (System`Private`SystemAssert[HoldForm[Semantic`PLIDump`validateGrammar[Semantic`PLIDump`args]]]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Semantic`PLIDump`ValidateGrammar",
	"Video`Utilities`ValidateHandle":"ObjectType: Symbol\nUsage: ValidateHandle[f_, v_] returns a valid VideoHandle or issues a vidinv message and throws with Throw[$Failed, f]. Possible inputs are VideoHandles, Videos and VideoStreams.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`Utilities`ValidateHandle[Video`VideoUtilitiesDump`f_, Video`VideoUtilitiesDump`v_] := Block[{Video`VideoUtilitiesDump`handle}, Needs[\"FFmpegTools`\"]; Which[FFmpegTools`VideoHandleQ[Video`VideoUtilitiesDump`v], Video`VideoUtilitiesDump`handle = Video`VideoUtilitiesDump`v, VideoQ[Video`VideoUtilitiesDump`v], Video`VideoUtilitiesDump`handle = Quiet[Video`GetVideoHandle[Video`VideoUtilitiesDump`v]], Video`VideoStreamQ[Video`VideoUtilitiesDump`v], Video`VideoUtilitiesDump`handle = Quiet[Video`VideoUtilitiesDump`v[\"Handle\"]], True, Message[Video`VideoUtilitiesDump`f::vidinv, Video`VideoUtilitiesDump`v]; Throw[$Failed, Video`VideoUtilitiesDump`f]; ]; If[Quiet[FFmpegTools`VideoHandleQ[Video`VideoUtilitiesDump`handle]], Video`VideoUtilitiesDump`handle, Message[Video`VideoUtilitiesDump`f::vidinv, Video`VideoUtilitiesDump`v]; Throw[$Failed, Video`VideoUtilitiesDump`f]; ]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`Utilities`ValidateHandle",
	"Video`ValidateInterval":"ObjectType: Symbol\nUsage: Video`ValidateInterval\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`ValidateInterval[Video`FrameExtractionDump`f_, Video`FrameExtractionDump`frameRate_, Video`FrameExtractionDump`dur_, Video`FrameExtractionDump`spec_] := Replace[Chop[Video`FrameExtractionDump`checkInterval[Video`FrameExtractionDump`f, Video`FrameExtractionDump`frameRate, Video`FrameExtractionDump`spec]], Video`FrameExtractionDump`x_ :> Video`FrameExtractionDump`checkTimeRange[Video`FrameExtractionDump`f, Video`FrameExtractionDump`dur, True, Video`FrameExtractionDump`x], {2}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`ValidateInterval",
	"PersistenceLocations`ValidateLocation":"ObjectType: Symbol\nUsage: PersistenceLocations`ValidateLocation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PersistenceLocations`ValidateLocation[$Failed] := $Failed\nPersistenceLocations`ValidateLocation[PersistenceLocations`Dump`locs_List] := PersistenceLocations`ValidateLocation \/@ PersistenceLocations`Dump`locs \/. PersistenceLocations`$NullLocation | $Failed -> Nothing\nPersistenceLocations`ValidateLocation[PersistenceLocations`Dump`loc_String] := PersistenceLocations`ValidateLocation[PersistenceLocation[PersistenceLocations`Dump`loc]]\nPersistenceLocations`ValidateLocation[PersistenceLocations`Dump`loc_String -> PersistenceLocations`Dump`sub_] := PersistenceLocations`ValidateLocation[PersistenceLocation[PersistenceLocations`Dump`loc, PersistenceLocations`Dump`sub]]\nPersistenceLocations`ValidateLocation[PersistenceLocations`Dump`loc_PersistenceLocation] := PersistenceLocations`Dump`loc\nPersistenceLocations`ValidateLocation[PersistenceLocations`Dump`junk_] := (Message[PersistenceLocation::ploc, PersistenceLocations`Dump`junk]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`ValidateLocation",
	"PersistenceLocations`ValidateLocationNoDefault":"ObjectType: Symbol\nUsage: PersistenceLocations`ValidateLocationNoDefault\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PersistenceLocations`ValidateLocationNoDefault[{PersistenceLocations`Dump`locs___, \"InstallationLocation\"}] := PersistenceLocations`ValidateLocation[{PersistenceLocations`Dump`locs}]\nPersistenceLocations`ValidateLocationNoDefault[{PersistenceLocations`Dump`locs___, PersistenceLocations`Dump`last_} \/; PersistenceLocations`Dump`last === PersistenceLocations`Dump`$InstallationLocation] := PersistenceLocations`ValidateLocation[{PersistenceLocations`Dump`locs}]\nPersistenceLocations`ValidateLocationNoDefault[PersistenceLocations`Dump`locs_] := PersistenceLocations`ValidateLocation[PersistenceLocations`Dump`locs]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`ValidateLocationNoDefault",
	"PersistenceLocations`ValidateLocations":"ObjectType: Symbol\nUsage: PersistenceLocations`ValidateLocations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PersistenceLocations`ValidateLocations[PersistenceLocations`Dump`locs_List] := PersistenceLocations`ValidateLocation[PersistenceLocations`Dump`locs]\nPersistenceLocations`ValidateLocations[PersistenceLocations`Dump`loc_] := PersistenceLocations`ValidateLocation[{PersistenceLocations`Dump`loc}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`ValidateLocations",
	"System`ConvertersDump`Utilities`ValidateOption":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`ValidateOption\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`ValidateOption[System`ConvertersDump`Utilities`Private`mode:_?StringQ | _Symbol, System`ConvertersDump`Utilities`Private`func:_Symbol | {__Symbol}, System`ConvertersDump`Utilities`Private`opt_, System`ConvertersDump`Utilities`Private`patt_, System`ConvertersDump`Utilities`Private`opts:OptionsPattern[]] := Quiet[With[{System`ConvertersDump`Utilities`Private`value = OptionValue[System`ConvertersDump`Utilities`Private`func, Flatten[{System`ConvertersDump`Utilities`Private`opts}], System`ConvertersDump`Utilities`Private`opt], System`ConvertersDump`Utilities`Private`$mode = Replace[System`ConvertersDump`Utilities`Private`mode, System`ConvertersDump`Utilities`Private`m_String :> Symbol[System`ConvertersDump`Utilities`Private`m]]}, If[MatchQ[System`ConvertersDump`Utilities`Private`value, System`ConvertersDump`Utilities`Private`patt], System`ConvertersDump`Utilities`Private`value, If[ !BooleanQ[System`ConvertersDump`Utilities`Private`mode], Message[System`ConvertersDump`Utilities`Private`$mode::erropts, System`ConvertersDump`Utilities`Private`value, System`ConvertersDump`Utilities`Private`opt]; ]; OptionValue[System`ConvertersDump`Utilities`Private`func, System`ConvertersDump`Utilities`Private`opt]]], {OptionValue::nodef}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`ValidateOption",
	"Graphics`Region`ValidatePlottingMeshRegion":"ObjectType: Symbol\nUsage: Graphics`Region`ValidatePlottingMeshRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Region`ValidatePlottingMeshRegion[Graphics`Region`RegionDump`meshIn_] \/; MeshRegionQ[Graphics`Region`RegionDump`meshIn] := Module[{Graphics`Region`RegionDump`coords, Graphics`Region`RegionDump`ncoords, Graphics`Region`RegionDump`nmesh, Graphics`Region`RegionDump`edim, Graphics`Region`RegionDump`mesh}, Graphics`Region`RegionDump`mesh = Graphics`Region`RegionDump`meshIn; If[Graphics`Region`RegionDump`mesh[\"MeshOrder\"] > 1, Graphics`Region`RegionDump`mesh = Graphics`Region`RegionDump`mesh[\"MakeLinear\"]; ]; Graphics`Region`RegionDump`coords = MeshCoordinates[Graphics`Region`RegionDump`mesh]; Graphics`Region`RegionDump`ncoords = Region`Mesh`DeleteDuplicateCoordinates[Graphics`Region`RegionDump`coords, RegionBounds[Graphics`Region`RegionDump`mesh]][[1]]; If[Length[Graphics`Region`RegionDump`coords] == Length[Graphics`Region`RegionDump`ncoords], Return[Graphics`Region`RegionDump`mesh]]; Graphics`Region`RegionDump`edim = RegionEmbeddingDimension[Graphics`Region`RegionDump`mesh]; Graphics`Region`RegionDump`nmesh = MeshRegion[Graphics`Region`RegionDump`coords, MeshCells[Graphics`Region`RegionDump`mesh, {Graphics`Region`RegionDump`edim, All}, Graphics`Region`RegionDump`Multicells -> True], Method -> {\"DeleteDuplicateCoordinates\" -> True}]; If[ !MeshRegionQ[Graphics`Region`RegionDump`nmesh], Return[Graphics`Region`RegionDump`TestHolesPlottingMeshRegion[Graphics`Region`RegionDump`mesh]]]; Graphics`Region`RegionDump`TestHolesPlottingMeshRegion[Graphics`Region`RegionDump`nmesh]]\nGraphics`Region`ValidatePlottingMeshRegion[Graphics`Region`RegionDump`mesh_] \/; BoundaryMeshRegionQ[Graphics`Region`RegionDump`mesh] := Graphics`Region`RegionDump`mesh\nGraphics`Region`ValidatePlottingMeshRegion[Graphics`Region`RegionDump`mesh_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Region`ValidatePlottingMeshRegion",
	"Reduce`ValidateRoot":"ObjectType: Symbol\nUsage: Reduce`ValidateRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ValidateRoot[System`TRootsDump`f_, System`TRootsDump`a_] := Module[{System`TRootsDump`a0, System`TRootsDump`a1, System`TRootsDump`a2, System`TRootsDump`X}, System`TRootsDump`a0 = System`TRootsDump`LowPrecToZero[System`TRootsDump`a]; If[Head[System`TRootsDump`a0] === Complex && System`TRootsDump`a0 != 0, System`TRootsDump`a0 = System`TRootsDump`LowPrecToZero[Re[System`TRootsDump`a]] + I*System`TRootsDump`LowPrecToZero[Im[System`TRootsDump`a]]]; System`TRootsDump`a1 = System`TRootsDump`SignValidate[System`TRootsDump`f, System`TRootsDump`a0]; If[ListQ[System`TRootsDump`a1] && System`TRootsDump`a1[[2]], Return[System`TRootsDump`a1[[1]]]]; If[ !Reduce`PzeroQ[System`TRootsDump`LowPrecToZero[System`TRootsDump`f[System`TRootsDump`a]]], Return[{System`TRootsDump`a, 0}]]; If[ !System`TRootsDump`locholoQ[System`TRootsDump`f, System`TRootsDump`a0], Return[$Failed]]; System`TRootsDump`a2 = System`TRootsDump`RoucheValidate[System`TRootsDump`f[System`TRootsDump`X], System`TRootsDump`X, System`TRootsDump`a0]; If[ListQ[System`TRootsDump`a1] && ListQ[System`TRootsDump`a2] && System`TRootsDump`a2[[2]] == 1 && System`TRootsDump`a2[[1]] == System`TRootsDump`a1[[1,1]], System`TRootsDump`a1[[1]], System`TRootsDump`a2]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ValidateRoot",
	"StructuredArray`ValidateStructuredData":"ObjectType: Symbol\nUsage: StructuredArray`ValidateStructuredData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StructuredArray`ValidateStructuredData",
	"System`DateObjectDump`ValidateTimeObject":"ObjectType: Symbol\nUsage: System`DateObjectDump`ValidateTimeObject\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`ValidateTimeObject",
	"Video`Utilities`ValidateVideo":"ObjectType: Symbol\nUsage: ValidateVideo[f_, v_] returns a valid Video or issues a vidinv message and throws with Throw[$Failed, f]. Possible inputs are VideoHandles, Videos and VideoStreams.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`Utilities`ValidateVideo[Video`VideoUtilitiesDump`f_, Video`VideoUtilitiesDump`v_] := Block[{Video`VideoUtilitiesDump`newVideo}, Needs[\"FFmpegTools`\"]; Which[FFmpegTools`VideoHandleQ[Video`VideoUtilitiesDump`v], Video`VideoUtilitiesDump`newVideo = Quiet[Video[Lookup[Video`VideoUtilitiesDump`ReadVideoProperties[Video`VideoUtilitiesDump`v], \"ResourcePath\", $Failed]]], VideoQ[Video`VideoUtilitiesDump`v], Video`VideoUtilitiesDump`newVideo = Video`VideoUtilitiesDump`v, Video`VideoStreamQ[Video`VideoUtilitiesDump`v], Video`VideoUtilitiesDump`newVideo = Quiet[Video[Video`VideoUtilitiesDump`v]], True, Message[Video`VideoUtilitiesDump`f::vidinv, Video`VideoUtilitiesDump`v]; Throw[$Failed, Video`VideoUtilitiesDump`f]; ]; If[Quiet[VideoQ[Video`VideoUtilitiesDump`newVideo]], Video`VideoUtilitiesDump`newVideo, Message[Video`VideoUtilitiesDump`f::vidinv, Video`VideoUtilitiesDump`v]; Throw[$Failed, Video`VideoUtilitiesDump`f]; ]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`Utilities`ValidateVideo",
	"Wavelets`WaveletData`ValidateWaveletCoefficientDimensions":"ObjectType: Symbol\nUsage: Wavelets`WaveletData`ValidateWaveletCoefficientDimensions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletData`ValidateWaveletCoefficientDimensions[Wavelets`WaveletData`Dump`WDims_, Wavelets`WaveletData`Dump`WIndexes_, Wavelets`WaveletData`Dump`DataDims_, Wavelets`WaveletData`Dump`ref_, Wavelets`WaveletData`Dump`rank_, Wavelets`WaveletData`Dump`fwave_, Wavelets`WaveletData`Dump`wtrans_] := Module[{Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`wptree}, Wavelets`WaveletUtilities`dbPrint[\"Data Dimensions : \", Wavelets`WaveletData`Dump`DataDims]; Wavelets`WaveletUtilities`dbPrint[\"Input Dimensions: \", Wavelets`WaveletData`Dump`WDims]; Wavelets`WaveletUtilities`dbPrint[\"Input Indexes: \", Wavelets`WaveletData`Dump`WIndexes]; Wavelets`WaveletUtilities`dbPrint[\"Input Refinement: \", Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletUtilities`dbPrint[\"Input Wavelet: \", Wavelets`WaveletData`Dump`fwave]; Wavelets`WaveletUtilities`dbPrint[\"Input Transform: \", Wavelets`WaveletData`Dump`wtrans]; Wavelets`WaveletUtilities`dbPrint[\"Rank: \", Wavelets`WaveletData`Dump`rank]; If[Wavelets`WaveletData`Dump`wtrans === Automatic, Wavelets`WaveletData`Dump`wptree = Wavelets`WaveletPartialTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletData`Dump`wftree = Wavelets`WaveletFullTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletData`Dump`flen = Length[First[Wavelets`WaveletTransformFilters[Wavelets`WaveletData`Dump`fwave]]]; Which[Wavelets`WaveletData`Dump`SWTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`fwave, False], Wavelets`WaveletUtilities`dbPrint[\"SWT\"]; Wavelets`WaveletData`Dump`SWTCoefficientDimensions[Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`ref], Wavelets`WaveletData`Dump`SWPTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`fwave, False], Wavelets`WaveletUtilities`dbPrint[\"SWPT\"]; Wavelets`WaveletData`Dump`SWPTCoefficientDimensions[Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`ref], Wavelets`WaveletData`Dump`LWTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`fwave, False], Wavelets`WaveletUtilities`dbPrint[\"LWT\"]; Wavelets`WaveletData`Dump`LWTCoefficientDimensions[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref], Wavelets`WaveletData`Dump`DWTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`fwave, False], Wavelets`WaveletUtilities`dbPrint[\"DWT\"]; Wavelets`WaveletData`Dump`DWTCoefficientDimensions[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref], Wavelets`WaveletData`Dump`DWPTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`fwave, False], Wavelets`WaveletUtilities`dbPrint[\"DWPT\"]; Wavelets`WaveletData`Dump`DWPTCoefficientDimensions[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref], True, Message[DiscreteWaveletData::invcoef]; Throw[$Failed]], Switch[ToString[Wavelets`WaveletData`Dump`wtrans], \"StationaryWaveletTransform\", Wavelets`WaveletData`Dump`wptree = Wavelets`WaveletPartialTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletData`Dump`flen = Length[First[Wavelets`WaveletTransformFilters[Wavelets`WaveletData`Dump`fwave]]]; If[Wavelets`WaveletData`Dump`SWTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`fwave, True], Wavelets`WaveletData`Dump`SWTCoefficientDimensions[Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`ref], Throw[$Failed]], \"StationaryWaveletPacketTransform\", Wavelets`WaveletData`Dump`wftree = Wavelets`WaveletFullTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletData`Dump`flen = Length[First[Wavelets`WaveletTransformFilters[Wavelets`WaveletData`Dump`fwave]]]; If[Wavelets`WaveletData`Dump`SWPTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`fwave, True], Wavelets`WaveletData`Dump`SWPTCoefficientDimensions[Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`ref], Throw[$Failed]], \"DiscreteWaveletTransform\", Wavelets`WaveletData`Dump`wptree = Wavelets`WaveletPartialTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletData`Dump`flen = Length[First[Wavelets`WaveletTransformFilters[Wavelets`WaveletData`Dump`fwave]]]; If[Wavelets`WaveletData`Dump`DWTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`fwave, True], Wavelets`WaveletData`Dump`DWTCoefficientDimensions[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref], Throw[$Failed]], \"DiscreteWaveletPacketTransform\", Wavelets`WaveletData`Dump`wftree = Wavelets`WaveletFullTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; Wavelets`WaveletData`Dump`flen = Length[First[Wavelets`WaveletTransformFilters[Wavelets`WaveletData`Dump`fwave]]]; If[Wavelets`WaveletData`Dump`DWPTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`fwave, True], Wavelets`WaveletData`Dump`DWPTCoefficientDimensions[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wftree, Wavelets`WaveletData`Dump`flen, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref], Throw[$Failed]], \"LiftingWaveletTransform\", Wavelets`WaveletData`Dump`wptree = Wavelets`WaveletPartialTree[Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref]; If[Wavelets`WaveletData`Dump`LWTQ[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref, Wavelets`WaveletData`Dump`fwave, True], Wavelets`WaveletData`Dump`LWTCoefficientDimensions[Wavelets`WaveletData`Dump`DataDims, Wavelets`WaveletData`Dump`WDims, Wavelets`WaveletData`Dump`WIndexes, Wavelets`WaveletData`Dump`wptree, Wavelets`WaveletData`Dump`rank, Wavelets`WaveletData`Dump`ref], Throw[$Failed]], _, Throw[$Failed]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletData`ValidateWaveletCoefficientDimensions",
	"StartUp`Initialization`ValidatorMatch":"ObjectType: Symbol\nUsage: StartUp`Initialization`ValidatorMatch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StartUp`Initialization`ValidatorMatch[StartUp`Initialization`KernelInit`Dump`patt_] := StartUp`Initialization`ValidatorMatch[StartUp`Initialization`KernelInit`Dump`patt, Message[StartUp`Initialization`ValidatorMatch::nomatch, #1, #2] & ]\nSubValues: StartUp`Initialization`ValidatorMatch[StartUp`Initialization`KernelInit`Dump`patt_, StartUp`Initialization`KernelInit`Dump`msgfun_][StartUp`Initialization`KernelInit`Dump`expr_] := If[MatchQ[StartUp`Initialization`KernelInit`Dump`expr, StartUp`Initialization`KernelInit`Dump`patt], StartUp`Initialization`KernelInit`Dump`expr, StartUp`Initialization`KernelInit`Dump`msgfun[StartUp`Initialization`KernelInit`Dump`expr, StartUp`Initialization`KernelInit`Dump`patt]; $Failed]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StartUp`Initialization`ValidatorMatch",
	"StartUp`Initialization`ValidatorTest":"ObjectType: Symbol\nUsage: StartUp`Initialization`ValidatorTest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StartUp`Initialization`ValidatorTest[StartUp`Initialization`KernelInit`Dump`patt_] := StartUp`Initialization`ValidatorTest[StartUp`Initialization`KernelInit`Dump`patt, Message[StartUp`Initialization`ValidatorTest::nomatch, #1, #2] & ]\nSubValues: StartUp`Initialization`ValidatorTest[StartUp`Initialization`KernelInit`Dump`pred_, StartUp`Initialization`KernelInit`Dump`msgfun_][StartUp`Initialization`KernelInit`Dump`expr_] := If[TrueQ[StartUp`Initialization`KernelInit`Dump`pred[StartUp`Initialization`KernelInit`Dump`expr]], StartUp`Initialization`KernelInit`Dump`expr, StartUp`Initialization`KernelInit`Dump`msgfun[StartUp`Initialization`KernelInit`Dump`expr, StartUp`Initialization`KernelInit`Dump`pred]; $Failed]\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StartUp`Initialization`ValidatorTest",
	"Audio`ValidAudioQHold":"ObjectType: Symbol\nUsage: Audio`ValidAudioQHold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Audio`ValidAudioQHold",
	"Audio`AudioGUIDump`ValidAudioVersionQ":"ObjectType: Symbol\nUsage: Audio`AudioGUIDump`ValidAudioVersionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`AudioGUIDump`ValidAudioVersionQ[Audio`AudioGUIDump`ver_] := Audio`AudioGUIDump`ver <= 3\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`AudioGUIDump`ValidAudioVersionQ",
	"AugmentedData`ValidAugmentedDataQ":"ObjectType: Symbol\nUsage: AugmentedData`ValidAugmentedDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AugmentedData`ValidAugmentedDataQ[___] \/;  !TrueQ[AugmentedData`Dump`$ValidateInput] := True\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_EventData, AugmentedData`Dump`caller_] \/; System`Private`ValidQ[AugmentedData`Dump`e] := True\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_EventData, AugmentedData`Dump`caller_] := AugmentedData`Dump`checkValidOrValidate[AugmentedData`Dump`e, AugmentedData`Dump`caller]\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_WeightedData, AugmentedData`Dump`caller_] \/; System`Private`ValidQ[AugmentedData`Dump`e] := True\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_WeightedData, AugmentedData`Dump`caller_] := AugmentedData`Dump`checkValidOrValidate[AugmentedData`Dump`e, AugmentedData`Dump`caller]\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_EventData] \/; System`Private`ValidQ[AugmentedData`Dump`e] := True\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_EventData] := AugmentedData`Dump`checkValidOrValidate[AugmentedData`Dump`e, EventData]\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e_WeightedData] \/; System`Private`ValidQ[AugmentedData`Dump`e] := True\nAugmentedData`ValidAugmentedDataQ[HoldPattern[AugmentedData`Dump`e_WeightedData]] := AugmentedData`Dump`checkValidOrValidate[AugmentedData`Dump`e, WeightedData]\nAugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: AugmentedData`ValidAugmentedDataQ",
	"Blockchain`ValidBlockchainBaseQ":"ObjectType: Symbol\nUsage: Blockchain`ValidBlockchainBaseQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Blockchain`ValidBlockchainBaseQ[Blockchain`Utilities`PackagePrivate`blockchainbase_] := MatchQ[Hold[Blockchain`Utilities`PackagePrivate`blockchainbase], Hold[Automatic | (Blockchain`Utilities`PackagePrivate`base_String) | {Blockchain`Utilities`PackagePrivate`base_String} | {Blockchain`Utilities`PackagePrivate`base_String, Blockchain`Utilities`PackagePrivate`det_String}] \/; MatchQ[ToLowerCase[{Blockchain`Utilities`PackagePrivate`base, Blockchain`Utilities`PackagePrivate`det}], {} | {\"ethereum\" | \"bitcoin\" | \"btc\" | \"btc.main\" | \"btc.test\" | \"eth\" | \"eth.main\" | \"eth.test\" | \"ark\"} | {\"ethereum\" | \"bitcoin\" | \"multichain\" | \"ark\", \"testnet\" | \"mainnet\" | \"wolfram\" | \"devnet\"}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Blockchain`ValidBlockchainBaseQ",
	"System`Dump`ValidCenter2D":"ObjectType: Symbol\nUsage: System`Dump`ValidCenter2D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidCenter2D[Left | Right | Bottom | Top | Center | _?System`Dump`ValidNumber] := True\nSystem`Dump`ValidCenter2D[{Left | Right | Bottom | Top | Center | _?System`Dump`ValidNumber, Left | Right | Bottom | Top | Center | _?System`Dump`ValidNumber}] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidCenter2D",
	"System`Dump`ValidCenter3D":"ObjectType: Symbol\nUsage: System`Dump`ValidCenter3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidCenter3D[Left | Right | Bottom | Top | Front | Back | Center | _?System`Dump`ValidNumber] := True\nSystem`Dump`ValidCenter3D[{Left | Right | Bottom | Top | Front | Back | Center | _?System`Dump`ValidNumber, Left | Right | Bottom | Top | Front | Back | Center | _?System`Dump`ValidNumber, Left | Right | Bottom | Top | Front | Back | Center | _?System`Dump`ValidNumber}] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidCenter3D",
	"System`Dump`ValidColor":"ObjectType: Symbol\nUsage: System`Dump`ValidColor\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidColor[Dynamic[___]] := True\nSystem`Dump`ValidColor[RGBColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[RGBColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[RGBColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[RGBColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[Hue[{_?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[Hue[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[Hue[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[Hue[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[Hue[_?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[Hue[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[Hue[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[Hue[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[GrayLevel[{_?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[GrayLevel[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[GrayLevel[_?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[GrayLevel[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[CMYKColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[CMYKColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[CMYKColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[CMYKColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[LABColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[LABColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[LABColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[LABColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[LCHColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[LCHColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[LCHColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[LCHColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[LUVColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[LUVColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[LUVColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[LUVColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[XYZColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[XYZColor[{_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidColor[XYZColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidColor[XYZColor[_?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber]] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidColor",
	"DataPaclets`ColorData`ValidColorDataFunctionQ":"ObjectType: Symbol\nUsage: DataPaclets`ColorData`ValidColorDataFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DataPaclets`ColorData`ValidColorDataFunctionQ[DataPaclets`ColorDataDump`f_] := Head[DataPaclets`ColorDataDump`f] === ColorDataFunction && Length[DataPaclets`ColorDataDump`f] === 4 && (DataPaclets`ColorDataDump`colorSchemeNameQ[DataPaclets`ColorDataDump`f[[1]]] || MemberQ[DataPaclets`ColorDataDump`$themegradients, DataPaclets`ColorDataDump`f[[1]]]) && MatchQ[DataPaclets`ColorDataDump`f[[2]], DataPaclets`ColorDataDump`colorSchemeGroupsPattern] && Head[DataPaclets`ColorDataDump`f[[4]]] === Function\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DataPaclets`ColorData`ValidColorDataFunctionQ",
	"Image`ColorOperationsDump`ValidColorProfileDataQ":"ObjectType: Symbol\nUsage: Image`ColorOperationsDump`ValidColorProfileDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ColorOperationsDump`ValidColorProfileDataQ",
	"Asymptotics`ValidConditionQ":"ObjectType: Symbol\nUsage: Asymptotics`ValidConditionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Asymptotics`ValidConditionQ[Asymptotics`AsymptoticsUtilsDump`e_] := FreeQ[Asymptotics`AsymptoticsUtilsDump`e, Interval | Indeterminate | DirectedInfinity]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Asymptotics`ValidConditionQ",
	"GroupTheory`PermutationGroups`ValidCycles":"ObjectType: Symbol\nUsage: GroupTheory`PermutationGroups`ValidCycles\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GroupTheory`PermutationGroups`ValidCycles",
	"RandomProcesses`Library`ValidDataQ":"ObjectType: Symbol\nUsage: RandomProcesses`Library`ValidDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`ValidDataQ[RandomProcesses`Library`Dump`data_TemporalData, RandomProcesses`Library`Dump`proc_, RandomProcesses`Library`Dump`caller_, RandomProcesses`Library`Dump`allowsym_:False, RandomProcesses`Library`Dump`allowdates_:False] := Module[{RandomProcesses`Library`Dump`res, RandomProcesses`Library`Dump`pc, RandomProcesses`Library`Dump`psd, RandomProcesses`Library`Dump`ptd, RandomProcesses`Library`Dump`values}, RandomProcesses`Library`Dump`pc = RandomProcesses`Library`Dump`data[\"PathCount\"]; Catch[If[ !Internal`PositiveIntegerQ[RandomProcesses`Library`Dump`pc], Throw[$Failed]]; If[RandomProcesses`Library`Dump`allowdates === False && RandomProcesses`Library`Dump`data[\"DatesQ\"], Message[RandomProcesses`Library`Dump`caller::nodate, RandomProcesses`Library`Dump`caller]; Return[False]]; RandomProcesses`Library`Dump`psd = ProcessStateDomain[RandomProcesses`Library`Dump`proc]; RandomProcesses`Library`Dump`ptd = ProcessTimeDomain[RandomProcesses`Library`Dump`proc]; If[RandomProcesses`Library`Dump`pc == 1, RandomProcesses`Library`Dump`values = RandomProcesses`Library`Dump`data[\"Values\"]; If[Internal`LiterallyOccurringQ[RandomProcesses`Library`Dump`values, Missing], RandomProcesses`Library`Dump`values = DeleteCases[RandomProcesses`Library`Dump`values, _?(Internal`LiterallyOccurringQ[#1, Missing] & )]]; RandomProcesses`Library`Dump`res = RandomProcesses`Library`Dump`forgivingAcceptableDistributedDataQ[RandomProcesses`Library`Dump`values, RandomProcesses`Library`Dump`psd, RandomProcesses`Library`Dump`allowsym] && ((RandomProcesses`Library`Dump`allowdates === \"Always\" && RandomProcesses`Library`Dump`data[\"DatesQ\"]) || RandomProcesses`Library`Dump`forgivingAcceptableDistributedDataQ[RandomProcesses`Library`Dump`data[\"PathTimes\"], RandomProcesses`Library`Dump`ptd, RandomProcesses`Library`Dump`allowsym]), RandomProcesses`Library`Dump`values = Join @@ RandomProcesses`Library`Dump`data[\"ValueList\"]; If[Internal`LiterallyOccurringQ[RandomProcesses`Library`Dump`values, Missing], RandomProcesses`Library`Dump`values = DeleteCases[RandomProcesses`Library`Dump`values, _?(Internal`LiterallyOccurringQ[#1, Missing] & )]]; RandomProcesses`Library`Dump`res = RandomProcesses`Library`Dump`forgivingAcceptableDistributedDataQ[RandomProcesses`Library`Dump`values, RandomProcesses`Library`Dump`psd, RandomProcesses`Library`Dump`allowsym] && ((RandomProcesses`Library`Dump`allowdates === \"Always\" && RandomProcesses`Library`Dump`data[\"DatesQ\"]) || RandomProcesses`Library`Dump`forgivingAcceptableDistributedDataQ[Join @@ RandomProcesses`Library`Dump`data[\"TimeList\"], RandomProcesses`Library`Dump`ptd, RandomProcesses`Library`Dump`allowsym])]; ]; If[TrueQ[RandomProcesses`Library`Dump`res], True, Message[RandomProcesses`Library`Dump`caller::ntsprt, RandomProcesses`Library`Dump`proc]; False]]\nRandomProcesses`Library`ValidDataQ[RandomProcesses`Library`Dump`data:{__?VectorQ}, RandomProcesses`Library`Dump`proc_, RandomProcesses`Library`Dump`caller_, RandomProcesses`Library`Dump`allowsym_:False, RandomProcesses`Library`Dump`allowdates_:False] \/; RandomProcesses`Library`ProcessStateDimensionality[RandomProcesses`Library`Dump`proc] == 1 := If[MatrixQ[RandomProcesses`Library`Dump`data] && Last[Dimensions[RandomProcesses`Library`Dump`data]] == 2, RandomProcesses`Library`ValidDataQ[RandomProcesses`Library`ListToTemporalData[RandomProcesses`Library`Dump`data, 1], RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`caller, RandomProcesses`Library`Dump`allowsym, RandomProcesses`Library`Dump`allowdates], VectorQ[RandomProcesses`Library`Dump`data, RandomProcesses`Library`ValidDataQ[TemporalData[#1], RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`caller, RandomProcesses`Library`Dump`allowsym, RandomProcesses`Library`Dump`allowdates] & ]]\nRandomProcesses`Library`ValidDataQ[RandomProcesses`Library`Dump`data:{__?MatrixQ}, RandomProcesses`Library`Dump`proc_, RandomProcesses`Library`Dump`caller_, RandomProcesses`Library`Dump`allowsym_:False, RandomProcesses`Library`Dump`allowdates_:False] \/; RandomProcesses`Library`ProcessStateDimensionality[RandomProcesses`Library`Dump`proc] == 1 && And @@ Apply[Last[Dimensions[#1]] == 2 & , RandomProcesses`Library`Dump`data, {1}] := Catch[Scan[If[ !RandomProcesses`Library`ValidDataQ[TemporalData[#1], RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`caller, RandomProcesses`Library`Dump`allowsym, RandomProcesses`Library`Dump`allowdates], Throw[False]] & , RandomProcesses`Library`Dump`data]; True]\nRandomProcesses`Library`ValidDataQ[$Failed, __] := False\nRandomProcesses`Library`ValidDataQ[Except[_TemporalData, RandomProcesses`Library`Dump`data_], RandomProcesses`Library`Dump`proc_, RandomProcesses`Library`Dump`caller_, RandomProcesses`Library`Dump`allowsym_:False, RandomProcesses`Library`Dump`allowdates_:False] := RandomProcesses`Library`ValidDataQ[RandomProcesses`Library`ListToTemporalData[Statistics`Library`DestructureToList[RandomProcesses`Library`Dump`data], RandomProcesses`Library`ProcessStateDimensionality[RandomProcesses`Library`Dump`proc]], RandomProcesses`Library`Dump`proc, RandomProcesses`Library`Dump`caller, RandomProcesses`Library`Dump`allowsym, RandomProcesses`Library`Dump`allowdates]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`ValidDataQ",
	"Dataset`ValidDatasetQ":"ObjectType: Symbol\nUsage: Dataset`ValidDatasetQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Dataset`ValidDatasetQ",
	"FittedModels`ValidDesignInputQ":"ObjectType: Symbol\nUsage: FittedModels`ValidDesignInputQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FittedModels`ValidDesignInputQ[FittedModels`FittedModelsCommonDump`mat_, FittedModels`FittedModelsCommonDump`resp_, FittedModels`FittedModelsCommonDump`fam_, FittedModels`FittedModelsCommonDump`caller_] := Module[{FittedModels`FittedModelsCommonDump`vecq = Statistics`Library`RealVectorQ[FittedModels`FittedModelsCommonDump`resp], FittedModels`FittedModelsCommonDump`matq, FittedModels`FittedModelsCommonDump`respQ}, If[Length[FittedModels`FittedModelsCommonDump`mat] < 1, Message[FittedModels`FittedModelsCommonDump`caller::notdata]; Return[False]]; FittedModels`FittedModelsCommonDump`matq = If[( !FittedModels`FittedModelsCommonDump`vecq && MemberQ[{\"Binomial\", \"QuasiLikelihood\"}, FittedModels`FittedModelsCommonDump`fam]) || (Head[FittedModels`FittedModelsCommonDump`fam] === List && FittedModels`FittedModelsCommonDump`fam[[1]] === \"QuasiLikelihood\"), Statistics`Library`RealMatrixQ[FittedModels`FittedModelsCommonDump`resp], False]; If[ !Statistics`Library`RealMatrixQ[FittedModels`FittedModelsCommonDump`mat], Message[FittedModels`FittedModelsCommonDump`caller::fitm]; Return[False]]; If[ !MemberQ[{GeneralizedLinearModelFit, LogitModelFit, ProbitModelFit}, FittedModels`FittedModelsCommonDump`caller], If[FittedModels`FittedModelsCommonDump`vecq =!= True, Message[FittedModels`FittedModelsCommonDump`caller::resp]; Return[False]], If[ !FittedModels`FittedModelsCommonDump`validFamilyQ[FittedModels`FittedModelsCommonDump`fam, FittedModels`FittedModelsCommonDump`caller], Message[FittedModels`FittedModelsCommonDump`caller::notfam, FittedModels`FittedModelsCommonDump`fam]; Return[False]]; FittedModels`FittedModelsCommonDump`respQ = Which[FittedModels`FittedModelsCommonDump`matq, Length[FittedModels`FittedModelsCommonDump`resp[[1]]] === 2 && FittedModels`FittedModelsCommonDump`nonnegativeIntegerMatrixQ[FittedModels`FittedModelsCommonDump`resp], FittedModels`FittedModelsCommonDump`fam === \"Binomial\" && FittedModels`FittedModelsCommonDump`vecq, FittedModels`FittedModelsCommonDump`probVectorQ[FittedModels`FittedModelsCommonDump`resp], True, FittedModels`FittedModelsCommonDump`validResponseQ[FittedModels`FittedModelsCommonDump`resp, FittedModels`FittedModelsCommonDump`fam]]; If[FittedModels`FittedModelsCommonDump`respQ =!= True, If[FittedModels`FittedModelsCommonDump`caller === GeneralizedLinearModelFit, Message[FittedModels`FittedModelsCommonDump`caller::resp, FittedModels`FittedModelsCommonDump`fam], Message[FittedModels`FittedModelsCommonDump`caller::resp]]; Return[False]]]; True]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ValidDesignInputQ",
	"System`Dump`ValidDirective":"ObjectType: Symbol\nUsage: System`Dump`ValidDirective\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidDirective[SurfaceColor[]] := True\nSystem`Dump`ValidDirective[Glow[]] := True\nSystem`Dump`ValidDirective[Specularity[]] := True\nSystem`Dump`ValidDirective[EdgeForm[]] := True\nSystem`Dump`ValidDirective[FaceForm[]] := True\nSystem`Dump`ValidDirective[Dynamic[___]] := True\nSystem`Dump`ValidDirective[System`Dump`x_GrayLevel] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_RGBColor] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_Hue] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_CMYKColor] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_LABColor] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_LCHColor] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_LUVColor] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[System`Dump`x_XYZColor] := System`Dump`ValidColor[System`Dump`x]\nSystem`Dump`ValidDirective[Arrowheads[___?System`Dump`HeldOptionQ]] := True\nSystem`Dump`ValidDirective[Arrowheads[Automatic | Tiny | Small | Medium | Large | -(Automatic | Tiny | Small | Medium | Large) | _?System`Dump`ValidNumber | {___?System`Dump`ValidArrowheadSpec}, ___?System`Dump`HeldOptionQ]] := True\nSystem`Dump`ValidDirective[PointSize[Tiny | Small | Medium | Large | _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[Thickness[Tiny | Small | Medium | Large | _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[Opacity[_?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[Opacity[_?System`Dump`ValidNumber, _?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[Dashing[Tiny | Small | Medium | Large | _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[Dashing[{(Tiny | Small | Medium | Large | _?System`Dump`ValidNumber)...}]] := True\nSystem`Dump`ValidDirective[AbsolutePointSize[Tiny | Small | Medium | Large | _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[AbsoluteThickness[Tiny | Small | Medium | Large | _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[AbsoluteDashing[Tiny | Small | Medium | Large | _?System`Dump`ValidNumber | {___?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidDirective[SurfaceColor[_?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[SurfaceColor[_?System`Dump`ValidColor, {_?System`Dump`ValidColor, _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidDirective[SurfaceColor[_?System`Dump`ValidColor, {_?System`Dump`ValidColor, _?System`Dump`ValidNumber}, _?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[SurfaceColor[_?System`Dump`ValidColor, _?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[SurfaceColor[_?System`Dump`ValidColor, _?System`Dump`ValidColor, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[SurfaceColor[_?System`Dump`ValidColor, _?System`Dump`ValidColor, _?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[Glow[_?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[Specularity[_?System`Dump`ValidNumber | _?System`Dump`ValidColor]] := True\nSystem`Dump`ValidDirective[Specularity[_?System`Dump`ValidNumber | _?System`Dump`ValidColor, _?System`Dump`ValidNumber]] := True\nSystem`Dump`ValidDirective[Directive[___]] := True\nSystem`Dump`ValidDirective[CapForm[\"Round\" | \"Butt\" | \"Square\"]] := True\nSystem`Dump`ValidDirective[JoinForm[\"Round\" | \"Bevel\" | \"Miter\" | {\"Miter\", _?System`Dump`ValidNumber}]] := True\nSystem`Dump`ValidDirective[EdgeForm[None | _?System`Dump`ValidDirectiveList | __?System`Dump`ValidDirective]] := True\nSystem`Dump`ValidDirective[FaceForm[None | _?System`Dump`ValidDirectiveList]] := True\nSystem`Dump`ValidDirective[FaceForm[None | _?System`Dump`ValidDirectiveList, None | _?System`Dump`ValidDirectiveList]] := True\nSystem`Dump`ValidDirective[StrokeForm[_?System`Dump`ValidDirectiveList, None | _?System`Dump`ValidDirectiveList]] := True\nSystem`Dump`ValidDirective[_ToonShading] := True\nSystem`Dump`ValidDirective[_StippleShading] := True\nSystem`Dump`ValidDirective[_HatchShading] := True\nSystem`Dump`ValidDirective[_HalftoneShading] := True\nSystem`Dump`ValidDirective[_GoochShading] := True\nSystem`Dump`ValidDirective[_?System`Dump`HeldOptionQ] := True\nSystem`Dump`ValidDirective[System`Dump`x___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidDirective",
	"System`Dump`ValidDirectiveList":"ObjectType: Symbol\nUsage: System`Dump`ValidDirectiveList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidDirectiveList[{___?System`Dump`ValidDirective}] := True\nSystem`Dump`ValidDirectiveList[_?System`Dump`ValidDirective] := True\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidDirectiveList",
	"Statistics`Library`ValidDistributedQ":"ObjectType: Symbol\nUsage: Statistics`Library`ValidDistributedQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ValidDistributedQ[Distributed[Statistics`SolversCommonDump`x_, Statistics`SolversCommonDump`dist_]] := Module[{Statistics`SolversCommonDump`params, Statistics`SolversCommonDump`vars}, Statistics`SolversCommonDump`params = Statistics`Library`GetDistributionParameters[Statistics`SolversCommonDump`dist]; Statistics`SolversCommonDump`vars = Flatten[{Statistics`SolversCommonDump`x}]; ListQ[Statistics`SolversCommonDump`params] && DuplicateFreeQ[Statistics`SolversCommonDump`vars] &&  !MemberQ[Statistics`SolversCommonDump`params, Alternatives @@ Statistics`SolversCommonDump`vars]]\nStatistics`Library`ValidDistributedQ[(And | List)[Statistics`SolversCommonDump`distseq:Distributed[_, _]..]] := Module[{Statistics`SolversCommonDump`params, Statistics`SolversCommonDump`vars}, Statistics`SolversCommonDump`params = Flatten[Statistics`Library`GetDistributionParameters \/@ {Statistics`SolversCommonDump`distseq}[[All,2]]]; Statistics`SolversCommonDump`vars = Flatten[{{Statistics`SolversCommonDump`distseq}[[All,1]]}]; ListQ[Statistics`SolversCommonDump`params] && DuplicateFreeQ[Statistics`SolversCommonDump`vars] &&  !MemberQ[Statistics`SolversCommonDump`params, Alternatives @@ Statistics`SolversCommonDump`vars]]\nStatistics`Library`ValidDistributedQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ValidDistributedQ",
	"Wavelets`WaveletUtilities`ValidFrequencyQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`ValidFrequencyQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`ValidFrequencyQ[Wavelets`WaveletUtilities`Dump`n_] := NumberQ[Wavelets`WaveletUtilities`Dump`n] &&  !PossibleZeroQ[Wavelets`WaveletUtilities`Dump`n] && Wavelets`WaveletUtilities`Dump`n > 0\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`ValidFrequencyQ",
	"GraphComputation`ValidGraphDistributionQ":"ObjectType: Symbol\nUsage: GraphComputation`ValidGraphDistributionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`ValidGraphDistributionQ[GraphComputation`GraphPropertyDistributionDump`expr_] := GraphComputation`GraphPropertyDistributionDump`iGraphDistributionQ[GraphComputation`GraphPropertyDistributionDump`expr]\nGraphComputation`ValidGraphDistributionQ[GraphComputation`GraphPropertyDistributionDump`expr___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`ValidGraphDistributionQ",
	"Image`ValidImage3DQ":"ObjectType: Symbol\nUsage: Image`ValidImage3DQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ValidImage3DQ",
	"Image`ValidImage3DQHold":"ObjectType: Symbol\nUsage: Image`ValidImage3DQHold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Image`ValidImage3DQHold",
	"Image`ValidImageQ":"ObjectType: Symbol\nUsage: Image`ValidImageQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ValidImageQ",
	"Image`ValidImageQHold":"ObjectType: Symbol\nUsage: Image`ValidImageQHold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Image`ValidImageQHold",
	"FittedModels`ValidInputQ":"ObjectType: Symbol\nUsage: FittedModels`ValidInputQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FittedModels`ValidInputQ[FittedModels`FittedModelsCommonDump`data_, FittedModels`FittedModelsCommonDump`fam_, FittedModels`FittedModelsCommonDump`basis_, FittedModels`FittedModelsCommonDump`vars_, FittedModels`FittedModelsCommonDump`caller_] := Block[{FittedModels`FittedModelsCommonDump`vecq, FittedModels`FittedModelsCommonDump`matq, FittedModels`FittedModelsCommonDump`status = False}, If[Length[FittedModels`FittedModelsCommonDump`data] < 1, If[FittedModels`FittedModelsCommonDump`caller === DesignMatrix, Message[DesignMatrix::fitd, FittedModels`FittedModelsCommonDump`data], Message[FittedModels`FittedModelsCommonDump`caller::notdata]]; Return[False]]; If[FittedModels`FittedModelsCommonDump`caller === GeneralizedLinearModelFit && FittedModels`FittedModelsCommonDump`validFamilyQ[FittedModels`FittedModelsCommonDump`fam, FittedModels`FittedModelsCommonDump`caller] =!= True, Message[FittedModels`FittedModelsCommonDump`caller::notfam, FittedModels`FittedModelsCommonDump`fam]; Return[False]]; FittedModels`FittedModelsCommonDump`vecq = Statistics`Library`RealVectorQ[FittedModels`FittedModelsCommonDump`data]; FittedModels`FittedModelsCommonDump`matq = If[FittedModels`FittedModelsCommonDump`vecq, False, MatrixQ[FittedModels`FittedModelsCommonDump`data] && Statistics`Library`RealVectorQ[FittedModels`FittedModelsCommonDump`data[[All,-1]]]]; Which[MatchQ[FittedModels`FittedModelsCommonDump`caller, GeneralizedLinearModelFit | LogitModelFit | ProbitModelFit] &&  !FittedModels`FittedModelsCommonDump`matq &&  !FittedModels`FittedModelsCommonDump`vecq && ListQ[FittedModels`FittedModelsCommonDump`data] && ListQ[FittedModels`FittedModelsCommonDump`data[[1]]] && ListQ[FittedModels`FittedModelsCommonDump`data[[1,-1]]] && FreeQ[Dimensions[FittedModels`FittedModelsCommonDump`data[[1]]], 0] && FreeQ[Dimensions[FittedModels`FittedModelsCommonDump`data[[1,-1]]], 0], If[FittedModels`FittedModelsCommonDump`binomDataQ[FittedModels`FittedModelsCommonDump`data], If[MatchQ[FittedModels`FittedModelsCommonDump`fam, \"Binomial\" | \"QuasiLikelihood\" | {\"QuasiLikelihood\", ___}], FittedModels`FittedModelsCommonDump`status = True, FittedModels`FittedModelsCommonDump`status = \"notdata\"], FittedModels`FittedModelsCommonDump`status = \"notdata\"], FittedModels`FittedModelsCommonDump`vecq && FittedModels`FittedModelsCommonDump`fam === \"Binomial\", If[FittedModels`FittedModelsCommonDump`probVectorQ[FittedModels`FittedModelsCommonDump`data], FittedModels`FittedModelsCommonDump`status = True, Message[FittedModels`FittedModelsCommonDump`caller::binrsp]; ], FittedModels`FittedModelsCommonDump`matq && FittedModels`FittedModelsCommonDump`fam === \"Binomial\", If[FittedModels`FittedModelsCommonDump`probVectorQ[FittedModels`FittedModelsCommonDump`data[[All,-1]]], FittedModels`FittedModelsCommonDump`status = True, Message[FittedModels`FittedModelsCommonDump`caller::binrsp]; ], FittedModels`FittedModelsCommonDump`matq && FittedModels`FittedModelsCommonDump`caller =!= GeneralizedLinearModelFit, If[Statistics`Library`RealVectorQ[FittedModels`FittedModelsCommonDump`data[[All,-1]]], FittedModels`FittedModelsCommonDump`status = True, FittedModels`FittedModelsCommonDump`status = \"notdata\"], FittedModels`FittedModelsCommonDump`matq, If[TrueQ[FittedModels`FittedModelsCommonDump`validResponseQ[FittedModels`FittedModelsCommonDump`data[[All,-1]], FittedModels`FittedModelsCommonDump`fam]], FittedModels`FittedModelsCommonDump`status = True, Message[FittedModels`FittedModelsCommonDump`caller::respmat, FittedModels`FittedModelsCommonDump`fam]; ], FittedModels`FittedModelsCommonDump`vecq && FittedModels`FittedModelsCommonDump`caller =!= GeneralizedLinearModelFit, If[Statistics`Library`RealVectorQ[FittedModels`FittedModelsCommonDump`data], FittedModels`FittedModelsCommonDump`status = True, FittedModels`FittedModelsCommonDump`status = \"notdata\"], FittedModels`FittedModelsCommonDump`vecq, If[TrueQ[FittedModels`FittedModelsCommonDump`validResponseQ[FittedModels`FittedModelsCommonDump`data, FittedModels`FittedModelsCommonDump`fam]], FittedModels`FittedModelsCommonDump`status = True, Message[FittedModels`FittedModelsCommonDump`caller::respvec, FittedModels`FittedModelsCommonDump`fam]; ], True, FittedModels`FittedModelsCommonDump`status = \"notdata\"]; If[FittedModels`FittedModelsCommonDump`status =!= True, If[FittedModels`FittedModelsCommonDump`status === \"notdata\", If[FittedModels`FittedModelsCommonDump`caller === DesignMatrix, Message[DesignMatrix::fitd, FittedModels`FittedModelsCommonDump`data], Message[FittedModels`FittedModelsCommonDump`caller::notdata]]]; Return[False]]; If[ !(FreeQ[FittedModels`FittedModelsCommonDump`basis, List] || VectorQ[FittedModels`FittedModelsCommonDump`basis]), Message[FittedModels`FittedModelsCommonDump`caller::fitm]; Return[False]]; If[(FreeQ[FittedModels`FittedModelsCommonDump`vars, List] || VectorQ[FittedModels`FittedModelsCommonDump`vars]) && Head[FittedModels`FittedModelsCommonDump`vars] =!= Rule, True, Message[FittedModels`FittedModelsCommonDump`caller::ivar]; False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ValidInputQ",
	"BinningUtilities`ValidIntegerDataPositions":"ObjectType: Symbol\nUsage: BinningUtilities`ValidIntegerDataPositions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BinningUtilities`ValidIntegerDataPositions",
	"Statistics`DataDistributionUtilities`ValidKDEBandwidthQ":"ObjectType: Symbol\nUsage: Statistics`DataDistributionUtilities`ValidKDEBandwidthQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`DataDistributionUtilities`ValidKDEBandwidthQ[Automatic, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[{\"Standardized\", Except[_String, (Statistics`DataDistributionUtilities`Dump`h_)?Statistics`Library`AdmissibleUnivariateInputQ]}, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] \/; FreeQ[Statistics`DataDistributionUtilities`Dump`h, \"Adaptive\" | \"Standardized\"] := Statistics`DataDistributionUtilities`ValidKDEBandwidthQ[Statistics`DataDistributionUtilities`Dump`h, Statistics`DataDistributionUtilities`Dump`dim, Statistics`DataDistributionUtilities`Dump`head]\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[{\"Adaptive\", Statistics`DataDistributionUtilities`Dump`h_, Statistics`DataDistributionUtilities`Dump`s_}, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] \/; FreeQ[Statistics`DataDistributionUtilities`Dump`h, \"Adaptive\"] := If[Statistics`DataDistributionUtilities`Dump`s === Automatic || TrueQ[0 <= Statistics`DataDistributionUtilities`Dump`s <= 1], Statistics`DataDistributionUtilities`ValidKDEBandwidthQ[Statistics`DataDistributionUtilities`Dump`h, Statistics`DataDistributionUtilities`Dump`dim, Statistics`DataDistributionUtilities`Dump`head], Statistics`Library`iComplain[Statistics`DataDistributionUtilities`Dump`head::sns, Statistics`DataDistributionUtilities`Dump`s]]\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[\"StandardDeviation\" | \"Scott\" | \"Oversmooth\" | \"SheatherJones\" | \"SJ\" | \"sj\" | \"LSCV\" | \"lscv\" | \"LeastSquaresCrossValidation\" | \"StandardGaussian\" | \"Silverman\", Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[(Statistics`DataDistributionUtilities`Dump`h_)?Internal`RealValuedNumberQ, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] \/; Statistics`DataDistributionUtilities`Dump`h > 0 := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[Except[_String, (Statistics`DataDistributionUtilities`Dump`h_)?Statistics`Library`AdmissibleUnivariateInputQ], Statistics`DataDistributionUtilities`Dump`dim_, KernelMixtureDistribution] \/;  !PossibleZeroQ[Statistics`DataDistributionUtilities`Dump`h] := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[Statistics`DataDistributionUtilities`Dump`h_, 1, Statistics`DataDistributionUtilities`Dump`head_] := Statistics`Library`iComplain[Statistics`DataDistributionUtilities`Dump`head::bwspc, Statistics`DataDistributionUtilities`Dump`h]\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[{Statistics`DataDistributionUtilities`Dump`bw__}, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] \/; Quiet[And @@ (Statistics`DataDistributionUtilities`ValidKDEBandwidthQ[#1, 1, Statistics`DataDistributionUtilities`Dump`head] & ) \/@ {Statistics`DataDistributionUtilities`Dump`bw}] && Length[{Statistics`DataDistributionUtilities`Dump`bw}] == Statistics`DataDistributionUtilities`Dump`dim := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[(Statistics`DataDistributionUtilities`Dump`h_)?SymmetricMatrixQ, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] \/; Length[Statistics`DataDistributionUtilities`Dump`h] == Statistics`DataDistributionUtilities`Dump`dim && PositiveDefiniteMatrixQ[Statistics`DataDistributionUtilities`Dump`h] := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[(Statistics`DataDistributionUtilities`Dump`h_)?SymmetricMatrixQ, Statistics`DataDistributionUtilities`Dump`dim_, KernelMixtureDistribution] \/; Length[Statistics`DataDistributionUtilities`Dump`h] == Statistics`DataDistributionUtilities`Dump`dim && Statistics`DataDistributionUtilities`Dump`PosDefMat[Statistics`DataDistributionUtilities`Dump`h] := True\nStatistics`DataDistributionUtilities`ValidKDEBandwidthQ[Statistics`DataDistributionUtilities`Dump`h___, Statistics`DataDistributionUtilities`Dump`dim_, Statistics`DataDistributionUtilities`Dump`head_] := Statistics`Library`iComplain[Statistics`DataDistributionUtilities`Dump`head::bwspc, Statistics`DataDistributionUtilities`Dump`h]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`DataDistributionUtilities`ValidKDEBandwidthQ",
	"Statistics`DataDistributionUtilities`ValidKDEDataQ":"ObjectType: Symbol\nUsage: Statistics`DataDistributionUtilities`ValidKDEDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`DataDistributionUtilities`ValidKDEDataQ[Statistics`DataDistributionUtilities`Dump`data_, Statistics`DataDistributionUtilities`Dump`bw_, Statistics`DataDistributionUtilities`Dump`MMK_, Statistics`DataDistributionUtilities`Dump`Caller_] \/; Statistics`DataDistributionUtilities`Dump`iValidKDEDataQ[Statistics`DataDistributionUtilities`Dump`data, Statistics`DataDistributionUtilities`Dump`bw, Statistics`DataDistributionUtilities`Dump`MMK, Statistics`DataDistributionUtilities`Dump`Caller] := True\nStatistics`DataDistributionUtilities`ValidKDEDataQ[Statistics`DataDistributionUtilities`Dump`data_, Statistics`DataDistributionUtilities`Dump`bw_, Statistics`DataDistributionUtilities`Dump`MMK_, SmoothKernelDistribution] := Statistics`Library`iComplain[SmoothKernelDistribution::invldd, HoldForm[SmoothKernelDistribution][Statistics`DataDistributionUtilities`Dump`data], 1]\nStatistics`DataDistributionUtilities`ValidKDEDataQ[Statistics`DataDistributionUtilities`Dump`data_, Statistics`DataDistributionUtilities`Dump`bw_, Statistics`DataDistributionUtilities`Dump`MMK_, KernelMixtureDistribution] := If[Statistics`DataDistributionUtilities`Dump`iSymbolicDataQ[Statistics`DataDistributionUtilities`Dump`data, Statistics`DataDistributionUtilities`Dump`MMK], Statistics`Library`iComplain[KernelMixtureDistribution::invd2, Statistics`DataDistributionUtilities`Dump`bw], Statistics`Library`iComplain[KernelMixtureDistribution::invldgd, HoldForm[KernelMixtureDistribution][Statistics`DataDistributionUtilities`Dump`data], 1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`DataDistributionUtilities`ValidKDEDataQ",
	"Statistics`DataDistributionUtilities`ValidKernelFunctionQ":"ObjectType: Symbol\nUsage: Statistics`DataDistributionUtilities`ValidKernelFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`DataDistributionUtilities`ValidKernelFunctionQ[{\"Bounded\", Statistics`DataDistributionUtilities`Dump`c_, Statistics`DataDistributionUtilities`Dump`k_}, SmoothKernelDistribution] \/; Statistics`DataDistributionUtilities`ValidKernelFunctionQ[Statistics`DataDistributionUtilities`Dump`k, SmoothKernelDistribution] := True\nStatistics`DataDistributionUtilities`ValidKernelFunctionQ[{Statistics`DataDistributionUtilities`Dump`type:\"Product\" | \"Radial\", Statistics`DataDistributionUtilities`Dump`kf_}, Statistics`DataDistributionUtilities`Dump`head_] := Switch[Statistics`DataDistributionUtilities`Dump`kf, \"Gaussian\" | \"Rectangular\" | \"Triweight\" | \"Triangular\" | \"Biweight\" | \"Cosine\" | \"Epanechnikov\" | \"SemiCircle\", True, ___ & , True, _, Message[Statistics`DataDistributionUtilities`Dump`head::krfn, {Statistics`DataDistributionUtilities`Dump`type, Statistics`DataDistributionUtilities`Dump`kf}]; False]\nStatistics`DataDistributionUtilities`ValidKernelFunctionQ[Statistics`DataDistributionUtilities`Dump`kf_, Statistics`DataDistributionUtilities`Dump`head_] := Switch[Statistics`DataDistributionUtilities`Dump`kf, \"Gaussian\" | \"Rectangular\" | \"Triweight\" | \"Triangular\" | \"Biweight\" | \"Cosine\" | \"Epanechnikov\" | \"SemiCircle\", True, ___ & , True, _, Message[Statistics`DataDistributionUtilities`Dump`head::krfn, Statistics`DataDistributionUtilities`Dump`kf]; False]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`DataDistributionUtilities`ValidKernelFunctionQ",
	"Image`MorphologicalOperationsDump`ValidLabelMatrix":"ObjectType: Symbol\nUsage: Image`MorphologicalOperationsDump`ValidLabelMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`MorphologicalOperationsDump`ValidLabelMatrix[Image`MorphologicalOperationsDump`m_] := Quiet[MatrixQ[Image`MorphologicalOperationsDump`m, IntegerQ] && And @@ NonNegative[Flatten[Image`MorphologicalOperationsDump`m]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`MorphologicalOperationsDump`ValidLabelMatrix",
	"Wavelets`WaveletUtilities`ValidLimitQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`ValidLimitQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`ValidLimitQ[Wavelets`WaveletUtilities`Dump`lim_] := Internal`PositiveMachineIntegerQ[Wavelets`WaveletUtilities`Dump`lim]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`ValidLimitQ",
	"System`Private`ValidMeijerGQ":"ObjectType: Symbol\nUsage: System`Private`ValidMeijerGQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`ValidMeijerGQ[{System`MeijerGDump`a_List, System`MeijerGDump`b_List}, {System`MeijerGDump`c_List, System`MeijerGDump`d_List}, System`MeijerGDump`r_:1] := Module[{System`MeijerGDump`aa, System`MeijerGDump`bb, System`MeijerGDump`cc, System`MeijerGDump`dd}, {System`MeijerGDump`aa, System`MeijerGDump`bb, System`MeijerGDump`cc, System`MeijerGDump`dd} = System`MeijerGDump`RationalizeParameters[{System`MeijerGDump`a, System`MeijerGDump`b, System`MeijerGDump`c, System`MeijerGDump`d}]; {System`MeijerGDump`bb, System`MeijerGDump`cc} = System`MeijerGDump`sortClean[System`MeijerGDump`bb, System`MeijerGDump`cc]; {System`MeijerGDump`aa, System`MeijerGDump`dd} = System`MeijerGDump`sortClean[System`MeijerGDump`aa, System`MeijerGDump`dd]; Join[System`MeijerGDump`aa, System`MeijerGDump`cc] =!= {} && Internal`LiterallyAbsentQ[{System`MeijerGDump`aa, System`MeijerGDump`bb, System`MeijerGDump`cc, System`MeijerGDump`dd}, DirectedInfinity] &&  !Fold[Function[{System`MeijerGDump`tf, System`MeijerGDump`y}, System`MeijerGDump`tf || Fold[#1 || System`MeijerGDump`NonPosInt[Together[#2 - System`MeijerGDump`y + 1]] & , False, System`MeijerGDump`cc]], False, System`MeijerGDump`aa]] \/; VectorQ[Join[System`MeijerGDump`a, System`MeijerGDump`b, System`MeijerGDump`c, System`MeijerGDump`d]] && NumericQ[System`MeijerGDump`r] && System`MeijerGDump`r != 0 && Im[System`MeijerGDump`r] == 0\nSystem`Private`ValidMeijerGQ[System`MeijerGDump`w___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`ValidMeijerGQ",
	"AugmentedData`ValidMultivariateAugmentedDataQ":"ObjectType: Symbol\nUsage: AugmentedData`ValidMultivariateAugmentedDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AugmentedData`ValidMultivariateAugmentedDataQ[AugmentedData`Dump`d_] \/; AugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`d, Head[AugmentedData`Dump`d]] \/; AugmentedData`ADDimensionality[AugmentedData`Dump`d] =!= 1 := True\nAugmentedData`ValidMultivariateAugmentedDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: AugmentedData`ValidMultivariateAugmentedDataQ",
	"AugmentedData`ValidNAugmentedDataQ":"ObjectType: Symbol\nUsage: AugmentedData`ValidNAugmentedDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AugmentedData`ValidNAugmentedDataQ[AugmentedData`Dump`e_EventData, AugmentedData`Dump`Caller_] \/; AugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e, AugmentedData`Dump`Caller] := True\nAugmentedData`ValidNAugmentedDataQ[AugmentedData`Dump`w_WeightedData, AugmentedData`Dump`Caller_] \/; AugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`w, AugmentedData`Dump`Caller] := Block[{AugmentedData`Dump`wts = AugmentedData`Dump`w[\"Weights\"]}, AugmentedData`Dump`wts === None || Statistics`Library`RealVectorQ[AugmentedData`Dump`wts]]\nAugmentedData`ValidNAugmentedDataQ[AugmentedData`Dump`e_EventData] \/; AugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`e] := True\nAugmentedData`ValidNAugmentedDataQ[AugmentedData`Dump`w_WeightedData] \/; AugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`w] := Block[{AugmentedData`Dump`wts = AugmentedData`Dump`w[\"Weights\"]}, AugmentedData`Dump`wts === None || Statistics`Library`RealVectorQ[AugmentedData`Dump`wts]]\nAugmentedData`ValidNAugmentedDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: AugmentedData`ValidNAugmentedDataQ",
	"NeuralNetworks`ValidNetQ":"ObjectType: Symbol\nUsage: NeuralNetworks`ValidNetQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NeuralNetworks`ValidNetQ[(NetGraph[_Association, _Association])?System`Private`NoEntryQ] := True\nNeuralNetworks`ValidNetQ[(NetChain[_Association, _Association])?System`Private`NoEntryQ] := True\nNeuralNetworks`ValidNetQ[((NeuralNetworks`Private`Initial`sym_Symbol)[_Association, _Association])?System`Private`NoEntryQ] := MemberQ[NeuralNetworks`$NetHeads, NeuralNetworks`Private`Initial`sym]\nNeuralNetworks`ValidNetQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NeuralNetworks`ValidNetQ",
	"System`Dump`ValidNumber":"ObjectType: Symbol\nUsage: System`Dump`ValidNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidNumber[Dynamic[___]] := True\nSystem`Dump`ValidNumber[System`Dump`x_] := System`Dump`NumericFunctionOutputQ[System`Dump`x]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidNumber",
	"Image`MorphologicalOperationsDump`ValidNumberIter":"ObjectType: Symbol\nUsage: Image`MorphologicalOperationsDump`ValidNumberIter\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`MorphologicalOperationsDump`ValidNumberIter[Image`MorphologicalOperationsDump`niter_] := (IntegerQ[Image`MorphologicalOperationsDump`niter] && NonNegative[Image`MorphologicalOperationsDump`niter]) || Image`MorphologicalOperationsDump`niter === Infinity\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`MorphologicalOperationsDump`ValidNumberIter",
	"System`Dump`ValidNumberPair":"ObjectType: Symbol\nUsage: System`Dump`ValidNumberPair\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidNumberPair[{(System`Dump`x_)?System`Dump`ValidNumber, (System`Dump`y_)?System`Dump`ValidNumber}] := True\nSystem`Dump`ValidNumberPair[Dynamic[___]] := True\nSystem`Dump`ValidNumberPair[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidNumberPair",
	"Reduce`ValidNumberQ":"ObjectType: Symbol\nUsage: Reduce`ValidNumberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ValidNumberQ[System`ReduceUtilsDump`e_] := NumberQ[System`ReduceUtilsDump`e] && FreeQ[System`ReduceUtilsDump`e, Overflow[] | Underflow[]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ValidNumberQ",
	"System`Dump`ValidNumberTriple":"ObjectType: Symbol\nUsage: System`Dump`ValidNumberTriple\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidNumberTriple[{(System`Dump`x_)?System`Dump`ValidNumber, (System`Dump`y_)?System`Dump`ValidNumber, (System`Dump`z_)?System`Dump`ValidNumber}] := True\nSystem`Dump`ValidNumberTriple[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidNumberTriple",
	"NDSolve`ValidNumericalFunctionQ":"ObjectType: Symbol\nUsage: NDSolve`ValidNumericalFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ValidNumericalFunctionQ[NDSolve`NDSUtilitiesDump`nf_] := NDSolve`NDSUtilitiesDump`ValidDataObjectQ[NDSolve`NDSUtilitiesDump`nf, Experimental`NumericalFunction]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ValidNumericalFunctionQ",
	"NIntegrate`ValidNumericalFunctionQ":"ObjectType: Symbol\nUsage: NIntegrate`ValidNumericalFunctionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NIntegrate`ValidNumericalFunctionQ[NIntegrate`BNFDefinitionsDump`nf_] := NIntegrate`BNFDefinitionsDump`ValidDataObjectQ[NIntegrate`BNFDefinitionsDump`nf, Experimental`NumericalFunction]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`ValidNumericalFunctionQ",
	"Wavelets`WaveletUtilities`ValidOrderQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`ValidOrderQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`ValidOrderQ[Wavelets`WaveletUtilities`Dump`n_] := Internal`PositiveMachineIntegerQ[Wavelets`WaveletUtilities`Dump`n]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`ValidOrderQ",
	"Wavelets`WaveletUtilities`ValidOrderZeroQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`ValidOrderZeroQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`ValidOrderZeroQ[Wavelets`WaveletUtilities`Dump`n_] := Developer`MachineIntegerQ[Wavelets`WaveletUtilities`Dump`n] && Wavelets`WaveletUtilities`Dump`n >= 0\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`ValidOrderZeroQ",
	"FittedModels`ValidParameterEllipsoidQ":"ObjectType: Symbol\nUsage: FittedModels`ValidParameterEllipsoidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FittedModels`ValidParameterEllipsoidQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ValidParameterEllipsoidQ",
	"Statistics`Library`ValidParameterQ":"ObjectType: Symbol\nUsage: Statistics`Library`ValidParameterQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ValidParameterQ[_List | _SparseArray | _?StructuredArray`StructuredArrayQ | _TemporalData] := False\nStatistics`Library`ValidParameterQ[Statistics`DistributionEstimateDump`expr_] := {Statistics`DistributionEstimateDump`expr} === Statistics`DistributionEstimateDump`paramsOrVars[Statistics`DistributionEstimateDump`expr]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ValidParameterQ",
	"Sound`ValidPercussionQ":"ObjectType: Symbol\nUsage: Sound`ValidPercussionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`ValidPercussionQ[Sound`MIDIDump`note_String] := NumberQ[Sound`MIDIDump`note \/. Reverse \/@ Sound`MIDIDump`PercussionNames]\nSound`ValidPercussionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`ValidPercussionQ",
	"Sound`ValidPitchQ":"ObjectType: Symbol\nUsage: Sound`ValidPitchQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`ValidPitchQ[None] := True\nSound`ValidPitchQ[Sound`MIDIDump`note_Integer] := Inequality[-60, LessEqual, Sound`MIDIDump`note, Less, 68]\nSound`ValidPitchQ[Sound`MIDIDump`note_String] := Quiet[Sound`PitchNameToNumber[Sound`MIDIDump`note] =!= $Failed, {SoundNote::invnote}]\nSound`ValidPitchQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`ValidPitchQ",
	"Graphics`PolygonUtils`ValidPolygonDataQ":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`ValidPolygonDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`PolygonUtils`ValidPolygonDataQ[Graphics`PolygonUtils`PolygonUtilsDump`lpolys_] := And @@ (Graphics`PolygonUtils`ValidPolygonDataQ[#1] & ) \/@ Graphics`PolygonUtils`PolygonUtilsDump`lpolys \/; ListQ[Graphics`PolygonUtils`PolygonUtilsDump`lpolys] && ( !FreeQ[Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Polygon] ||  !FreeQ[Graphics`PolygonUtils`PolygonUtilsDump`lpolys, Graphics`PolygonUtils`Curve])\nGraphics`PolygonUtils`ValidPolygonDataQ[Polygon[Graphics`PolygonUtils`PolygonUtilsDump`data_]] := Graphics`PolygonUtils`ValidPolygonDataQ[Graphics`PolygonUtils`PolygonUtilsDump`data]\nGraphics`PolygonUtils`ValidPolygonDataQ[Graphics`PolygonUtils`Curve[Graphics`PolygonUtils`PolygonUtilsDump`data_]] := Graphics`PolygonUtils`ValidPolygonDataQ[Graphics`PolygonUtils`PolygonUtilsDump`data]\nGraphics`PolygonUtils`ValidPolygonDataQ[Graphics`PolygonUtils`PolygonUtilsDump`data_] := True \/; MatrixQ[Graphics`PolygonUtils`PolygonUtilsDump`data] && Dimensions[Graphics`PolygonUtils`PolygonUtilsDump`data][[2]] == 2 && Dimensions[Graphics`PolygonUtils`PolygonUtilsDump`data][[1]] >= 3\nGraphics`PolygonUtils`ValidPolygonDataQ[Graphics`PolygonUtils`PolygonUtilsDump`data_] := And @@ (MatrixQ[#1] && Dimensions[#1][[2]] == 2 && Dimensions[#1][[1]] >= 3 & ) \/@ Graphics`PolygonUtils`PolygonUtilsDump`data \/; (ListQ[Graphics`PolygonUtils`PolygonUtilsDump`data] || ArrayQ[Graphics`PolygonUtils`PolygonUtilsDump`data]) && ArrayDepth[Graphics`PolygonUtils`PolygonUtilsDump`data] >= 1 && ArrayDepth[Graphics`PolygonUtils`PolygonUtilsDump`data] <= 3\nGraphics`PolygonUtils`ValidPolygonDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`ValidPolygonDataQ",
	"Graphics`PolygonUtils`Developer`ValidPolygonDataQ":"ObjectType: Symbol\nUsage: Graphics`PolygonUtils`Developer`ValidPolygonDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`PolygonUtils`Developer`ValidPolygonDataQ",
	"Statistics`Library`ValidPrecisionQ":"ObjectType: Symbol\nUsage: Statistics`Library`ValidPrecisionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ValidPrecisionQ[Automatic | MachinePrecision | Infinity] := True\nStatistics`Library`ValidPrecisionQ[Statistics`Library`Dump`prec:_Integer | _Real | _Rational] := Statistics`Library`Dump`prec > 0\nStatistics`Library`ValidPrecisionQ[_Complex] := False\nStatistics`Library`ValidPrecisionQ[(Statistics`Library`Dump`e_)?NumericQ] := With[{Statistics`Library`Dump`ne = N[Statistics`Library`Dump`e]}, NumberQ[Statistics`Library`Dump`ne] && Statistics`Library`ValidPrecisionQ[Statistics`Library`Dump`ne]]\nStatistics`Library`ValidPrecisionQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ValidPrecisionQ",
	"GeneralUtilities`ValidPropertyQ":"ObjectType: Symbol\nUsage: ValidPropertyQ[symbol, elem, list] returns True if an element of list matches elem, and False otherwise.   symbol:xxx message will be displayed.       ValidPropertyQ[symbol, elem, list , list ] checks if elem belongs to list  or list  but omits the elements of list  in messages. This is used to specify elements that are allowed but not documented.\"Type\"                                                      \"property\"                                                  the name of element type (property, method, etc.)\n                                                                                  If False, an appropriate       Elements should be strings or symbols.                                 1      2                                1        2                               2The following options can be given:\n                                                                                                                                                                                                                                                                                                                                                             \"TypePlural\"                                                Automatic                                                   plurialized name of element type\n\n                                                                                                                                                                                                                                                                                                                                                             MaxItems                                                    15                                                          maximum number of elements to be displayed in the message\n\n                                                                                                                                                                                                                                                                                                                                                             SameTest                                                    Automatic                                                   function to determine whether there is a match\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeneralUtilities`ValidPropertyQ[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol_, GeneralUtilities`ValidPropertyQ`PackagePrivate`prop_, GeneralUtilities`ValidPropertyQ`PackagePrivate`documented_List, GeneralUtilities`ValidPropertyQ`PackagePrivate`undocumented_List:{}, GeneralUtilities`ValidPropertyQ`PackagePrivate`opts:OptionsPattern[]] := Module[{GeneralUtilities`ValidPropertyQ`PackagePrivate`l, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest, GeneralUtilities`ValidPropertyQ`PackagePrivate`dist, GeneralUtilities`ValidPropertyQ`PackagePrivate`dmax, GeneralUtilities`ValidPropertyQ`PackagePrivate`lmax, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearestindex, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`plural, GeneralUtilities`ValidPropertyQ`PackagePrivate`documentedstring}, GeneralUtilities`ValidPropertyQ`PackagePrivate`l = Length[GeneralUtilities`ValidPropertyQ`PackagePrivate`documented]; GeneralUtilities`ValidPropertyQ`PackagePrivate`dmax = 0; GeneralUtilities`ValidPropertyQ`PackagePrivate`lmax = OptionValue[MaxItems]; If[ !TrueQ[Quiet[ContainsOnly[{GeneralUtilities`ValidPropertyQ`PackagePrivate`prop}, Join[GeneralUtilities`ValidPropertyQ`PackagePrivate`documented, GeneralUtilities`ValidPropertyQ`PackagePrivate`undocumented], SameTest -> OptionValue[SameTest]]]], If[GeneralUtilities`ValidPropertyQ`PackagePrivate`l > 0, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearestindex = First[Nearest[ToString \/@ GeneralUtilities`ValidPropertyQ`PackagePrivate`documented -> Automatic, ToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`prop], DistanceFunction -> (-GeneralUtilities`CommonSequencesSimilarity[##1] & )]]; GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest = GeneralUtilities`ValidPropertyQ`PackagePrivate`documented[[GeneralUtilities`ValidPropertyQ`PackagePrivate`nearestindex]]; GeneralUtilities`ValidPropertyQ`PackagePrivate`dist = -GeneralUtilities`CommonSequencesSimilarity[ToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest], ToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`prop]]; ]; GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring = GeneralUtilities`ValidPropertyQ`PackagePrivate`propertyToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`prop]; GeneralUtilities`ValidPropertyQ`PackagePrivate`type = OptionValue[\"Type\"]; Which[GeneralUtilities`ValidPropertyQ`PackagePrivate`l == 0, Message[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol::elmntav, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring], GeneralUtilities`ValidPropertyQ`PackagePrivate`l < GeneralUtilities`ValidPropertyQ`PackagePrivate`lmax, GeneralUtilities`ValidPropertyQ`PackagePrivate`plural = Replace[OptionValue[\"TypePlural\"], Automatic :> GeneralUtilities`SimplePluralize[GeneralUtilities`ValidPropertyQ`PackagePrivate`type]]; If[GeneralUtilities`ValidPropertyQ`PackagePrivate`dist < GeneralUtilities`ValidPropertyQ`PackagePrivate`dmax, GeneralUtilities`ValidPropertyQ`PackagePrivate`documentedstring = GeneralUtilities`ValidPropertyQ`PackagePrivate`propertyListToString[DeleteCases[GeneralUtilities`ValidPropertyQ`PackagePrivate`documented, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest]]; GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest = GeneralUtilities`ValidPropertyQ`PackagePrivate`propertyToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest]; If[GeneralUtilities`ValidPropertyQ`PackagePrivate`l - 1 > 0, Message[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol::elmntavsl, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest, GeneralUtilities`ValidPropertyQ`PackagePrivate`plural, GeneralUtilities`ValidPropertyQ`PackagePrivate`documentedstring], Message[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol::elmntavs, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest]], GeneralUtilities`ValidPropertyQ`PackagePrivate`documentedstring = GeneralUtilities`ValidPropertyQ`PackagePrivate`propertyListToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`documented]; Message[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol::elmntavl, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring, GeneralUtilities`ValidPropertyQ`PackagePrivate`plural, GeneralUtilities`ValidPropertyQ`PackagePrivate`documentedstring]], True, If[GeneralUtilities`ValidPropertyQ`PackagePrivate`dist < GeneralUtilities`ValidPropertyQ`PackagePrivate`dmax, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest = GeneralUtilities`ValidPropertyQ`PackagePrivate`propertyToString[GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest]; Message[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol::elmntavs, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring, GeneralUtilities`ValidPropertyQ`PackagePrivate`nearest], Message[GeneralUtilities`ValidPropertyQ`PackagePrivate`symbol::elmntav, GeneralUtilities`ValidPropertyQ`PackagePrivate`type, GeneralUtilities`ValidPropertyQ`PackagePrivate`propstring]]]; False, True]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxItems -> 15, SameTest -> Automatic, Type -> property, TypePlural -> Automatic}\nAttributes: {}\nFullName: GeneralUtilities`ValidPropertyQ",
	"PersistenceLocations`ValidQ":"ObjectType: Symbol\nUsage: PersistenceLocations`ValidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PersistenceLocations`ValidQ",
	"System`Private`ValidQ":"ObjectType: Symbol\nUsage: System`Private`ValidQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`ValidQ",
	"System`ConvertersDump`ValidRuleQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`ValidRuleQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`ValidRuleQ[(Rule | RuleDelayed)[_, _]] = True\nSystem`ConvertersDump`ValidRuleQ[_] = False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`ValidRuleQ",
	"NDSolve`ValidScaledVectorNormQ":"ObjectType: Symbol\nUsage: NDSolve`ValidScaledVectorNormQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ValidScaledVectorNormQ[NDSolve`NDSUtilitiesDump`n_] := NDSolve`NDSUtilitiesDump`ValidDataObjectQ[NDSolve`NDSUtilitiesDump`n, NDSolve`ScaledVectorNorm]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ValidScaledVectorNormQ",
	"System`LanguageEnhancements`ValidSetsQ":"ObjectType: Symbol\nUsage: System`LanguageEnhancements`ValidSetsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`LanguageEnhancements`ValidSetsQ[System`LanguageEnhancements`setsToMerge:{{___Integer | Infinity}..}, (System`LanguageEnhancements`R_Integer)?Positive] := Module[{System`LanguageEnhancements`flatSet, System`LanguageEnhancements`union}, System`LanguageEnhancements`flatSet = Sort[Flatten[System`LanguageEnhancements`setsToMerge]]; System`LanguageEnhancements`flatSet = Replace[System`LanguageEnhancements`flatSet, {(System`LanguageEnhancements`neg_)?Negative :> (System`LanguageEnhancements`R + 1) + System`LanguageEnhancements`neg, System`LanguageEnhancements`toodeep_ \/; System`LanguageEnhancements`R < System`LanguageEnhancements`toodeep -> System`LanguageEnhancements`R}, {1}]; System`LanguageEnhancements`union = Union[System`LanguageEnhancements`flatSet]; If[Select[System`LanguageEnhancements`union, 1 <= #1 <= System`LanguageEnhancements`R & ] === System`LanguageEnhancements`flatSet, True, Message[Internal`BlockFlatten::nonzerodistinct, System`LanguageEnhancements`setsToMerge]; False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`LanguageEnhancements`ValidSetsQ",
	"Sound`ValidSoundArgument":"ObjectType: Symbol\nUsage: Sound`ValidSoundArgument\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`ValidSoundArgument[_?Sound`ValidSoundPrimitive | {__?Sound`ValidSoundPrimitive}] := True\nSound`ValidSoundArgument[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Sound`ValidSoundArgument",
	"System`Dump`ValidSoundArgument":"ObjectType: Symbol\nUsage: System`Dump`ValidSoundArgument\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidSoundArgument[_?System`Dump`ValidSoundPrimitive | {__?System`Dump`ValidSoundPrimitive}] := True\nSystem`Dump`ValidSoundArgument[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidSoundArgument",
	"Sound`ValidSoundPrimitive":"ObjectType: Symbol\nUsage: Sound`ValidSoundPrimitive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`ValidSoundPrimitive[SampledSoundList[Sound`SoundFormatDump`data_, _?System`Dump`ValidNumber | _?System`Dump`ValidNumberPair]] := If[Depth[Sound`SoundFormatDump`data] > 3, False, If[Developer`PackedArrayQ[Sound`SoundFormatDump`data] || VectorQ[Sound`SoundFormatDump`data, Developer`PackedArrayQ], True, If[MatchQ[Sound`SoundFormatDump`data, {__?System`Dump`ValidNumber} | {{__?System`Dump`ValidNumber}..}], True, False]]]\nSound`ValidSoundPrimitive[Sound`SoundFormatDump`ssf:SampledSoundFunction[_, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber | _?System`Dump`ValidNumberPair]] := (Sound`ValidSoundPrimitive[#1] & )[Quiet[Sound`SoundFormatDump`soundSamples[Sound`SoundFormatDump`ssf]]]\nSound`ValidSoundPrimitive[{__?Sound`ValidSoundPrimitive}] := True\nSound`ValidSoundPrimitive[Sound[_?Sound`ValidSoundArgument, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[Sound[_?Sound`ValidSoundArgument, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber} | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[Style[_?Sound`ValidSoundPrimitive, ___]] := True\nSound`ValidSoundPrimitive[_String?Sound`ValidStyleQ] := True\nSound`ValidSoundPrimitive[SoundNote[___?OptionQ]] := True\nSound`ValidSoundPrimitive[SoundNote[_?Sound`ValidPitchQ | {__?Sound`ValidPitchQ}, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[SoundNote[_?Sound`ValidPitchQ | {__?Sound`ValidPitchQ}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[SoundNote[_?Sound`ValidPitchQ | {__?Sound`ValidPitchQ}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, _?Sound`ValidStyleQ, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[SoundNote[{}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[SoundNote[{}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, _?Sound`ValidStyleQ, ___?OptionQ]] := True\nSound`ValidSoundPrimitive[Sound`MIDISequence[__]] := True\nSound`ValidSoundPrimitive[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Sound`ValidSoundPrimitive",
	"System`Dump`ValidSoundPrimitive":"ObjectType: Symbol\nUsage: System`Dump`ValidSoundPrimitive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Dump`ValidSoundPrimitive[SampledSoundList[System`Dump`data_, _?System`Dump`ValidNumber | _?System`Dump`ValidNumberPair]] := If[Depth[System`Dump`data] > 3, False, If[Developer`PackedArrayQ[System`Dump`data] || VectorQ[System`Dump`data, Developer`PackedArrayQ], True, If[MatchQ[System`Dump`data, {__?System`Dump`ValidNumber} | {{__?System`Dump`ValidNumber}..}], True, False]]]\nSystem`Dump`ValidSoundPrimitive[System`Dump`ssf:SampledSoundFunction[_, _?System`Dump`ValidNumber, _?System`Dump`ValidNumber | _?System`Dump`ValidNumberPair]] := (System`Dump`ValidSoundPrimitive[#1] & )[Quiet[System`Dump`soundSamples[System`Dump`ssf]]]\nSystem`Dump`ValidSoundPrimitive[{__?System`Dump`ValidSoundPrimitive}] := True\nSystem`Dump`ValidSoundPrimitive[Sound[_?System`Dump`ValidSoundArgument, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[Sound[_?System`Dump`ValidSoundArgument, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber} | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[Style[_?System`Dump`ValidSoundPrimitive, ___]] := True\nSystem`Dump`ValidSoundPrimitive[_String?Sound`ValidStyleQ] := True\nSystem`Dump`ValidSoundPrimitive[SoundNote[___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[SoundNote[_?Sound`ValidPitchQ | {__?Sound`ValidPitchQ}, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[SoundNote[_?Sound`ValidPitchQ | {__?Sound`ValidPitchQ}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[SoundNote[_?Sound`ValidPitchQ | {__?Sound`ValidPitchQ}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, _?Sound`ValidStyleQ, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[SoundNote[{}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[SoundNote[{}, _?System`Dump`ValidNumber | {_?System`Dump`ValidNumber, _?System`Dump`ValidNumber}, _?Sound`ValidStyleQ, ___?OptionQ]] := True\nSystem`Dump`ValidSoundPrimitive[Sound`MIDISequence[__]] := True\nSystem`Dump`ValidSoundPrimitive[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Dump`ValidSoundPrimitive",
	"System`ConvertersDump`Utilities`ValidSpanQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`ValidSpanQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`ValidSpanQ[System`ConvertersDump`Utilities`Private`elem_Span] := Block[{System`ConvertersDump`Utilities`Private`newElem}, System`ConvertersDump`Utilities`Private`newElem = System`ConvertersDump`Utilities`Private`elem \/. UpTo[System`ConvertersDump`Utilities`Private`x_] :> System`ConvertersDump`Utilities`Private`x; Switch[Length[System`ConvertersDump`Utilities`Private`newElem], 2, If[MatchQ[System`ConvertersDump`Utilities`Private`newElem, _?Positive ;; _?Positive], System`ConvertersDump`Utilities`Private`newElem[[1]] <= System`ConvertersDump`Utilities`Private`newElem[[2]], True], 3, If[MatchQ[System`ConvertersDump`Utilities`Private`newElem, _?Positive ;; _?Positive ;; _Integer], If[Positive[System`ConvertersDump`Utilities`Private`newElem[[3]]], System`ConvertersDump`Utilities`Private`newElem[[1]] <= System`ConvertersDump`Utilities`Private`newElem[[2]], System`ConvertersDump`Utilities`Private`newElem[[1]] >= System`ConvertersDump`Utilities`Private`newElem[[2]]], True]]] \/; MatchQ[{System`ConvertersDump`Utilities`Private`elem[[1]], System`ConvertersDump`Utilities`Private`elem[[2]]}, {_?IntegerQ | All | UpTo[_?Internal`NonNegativeMachineIntegerQ], _?IntegerQ | All | UpTo[_?Internal`NonNegativeMachineIntegerQ]}] &&  !MemberQ[{System`ConvertersDump`Utilities`Private`elem[[1]], System`ConvertersDump`Utilities`Private`elem[[2]]}, 0] && If[Length[System`ConvertersDump`Utilities`Private`elem] === 3, MatchQ[System`ConvertersDump`Utilities`Private`elem[[3]], _?IntegerQ | All] && System`ConvertersDump`Utilities`Private`elem[[3]] =!= 0, True]\nSystem`ConvertersDump`Utilities`ValidSpanQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`ValidSpanQ",
	"NDSolve`ValidStateDataQ":"ObjectType: Symbol\nUsage: NDSolve`ValidStateDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`ValidStateDataQ[NDSolve`NDSUtilitiesDump`ndstate_] := NDSolve`NDSUtilitiesDump`ValidDataObjectQ[NDSolve`NDSUtilitiesDump`ndstate, NDSolve`StateData]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`ValidStateDataQ",
	"Sound`ValidStyleQ":"ObjectType: Symbol\nUsage: Sound`ValidStyleQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Sound`ValidStyleQ[-1] := True\nSound`ValidStyleQ[{-1}] := True\nSound`ValidStyleQ[Automatic] := True\nSound`ValidStyleQ[Sound`MIDIDump`style_Integer] := 1 <= Sound`MIDIDump`style <= 128\nSound`ValidStyleQ[{Sound`MIDIDump`style_Integer}] := 1 <= Sound`MIDIDump`style <= 128\nSound`ValidStyleQ[Sound`MIDIDump`style_String] := Sound`MIDIDump`InstrumentNameToNumber[Sound`MIDIDump`style] =!= $Failed\nSound`ValidStyleQ[{Sound`MIDIDump`style_String}] := Sound`MIDIDump`InstrumentNameToNumber[Sound`MIDIDump`style] =!= $Failed\nSound`ValidStyleQ[{Sound`MIDIDump`patch_Integer, Sound`MIDIDump`style_String}] := Sound`ValidStyleQ[Sound`MIDIDump`style] \/; 1 <= Sound`MIDIDump`patch <= 128\nSound`ValidStyleQ[{Sound`MIDIDump`patch_Integer, Sound`MIDIDump`style_Integer}] := Sound`ValidStyleQ[Sound`MIDIDump`style] \/; 1 <= Sound`MIDIDump`patch <= 128\nSound`ValidStyleQ[{Sound`MIDIDump`bank_Integer, Sound`MIDIDump`patch_Integer, Sound`MIDIDump`style_String}] := Sound`ValidStyleQ[{Sound`MIDIDump`patch, Sound`MIDIDump`style}] \/; 1 <= Sound`MIDIDump`bank <= 128\nSound`ValidStyleQ[{Sound`MIDIDump`bank_Integer, Sound`MIDIDump`patch_Integer, Sound`MIDIDump`style_Integer}] := Sound`ValidStyleQ[{Sound`MIDIDump`patch, Sound`MIDIDump`style}] \/; 1 <= Sound`MIDIDump`bank <= 128\nSound`ValidStyleQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Sound`ValidStyleQ",
	"Statistics`SurvivalAnalysisTools`ValidSurvivalDataQ":"ObjectType: Symbol\nUsage: Statistics`SurvivalAnalysisTools`ValidSurvivalDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`SurvivalAnalysisTools`ValidSurvivalDataQ[Statistics`SurvivalAnalysisTools`Dump`d:(Statistics`SurvivalAnalysisTools`SurvivalData[Statistics`SurvivalAnalysisTools`Dump`e_, Statistics`SurvivalAnalysisTools`Dump`t_, Statistics`SurvivalAnalysisTools`Dump`tr_, Statistics`SurvivalAnalysisTools`Dump`type_])?System`Private`ValidQ] := True\nStatistics`SurvivalAnalysisTools`ValidSurvivalDataQ[Statistics`SurvivalAnalysisTools`Dump`d:Statistics`SurvivalAnalysisTools`SurvivalData[Statistics`SurvivalAnalysisTools`Dump`e_, Statistics`SurvivalAnalysisTools`Dump`t_, Statistics`SurvivalAnalysisTools`Dump`tr_, \"Interval\" | \"Right\" | \"Left\" | \"Double\" | \"CurrentStatus\" | \"None\"]] := Statistics`SurvivalAnalysisTools`Dump`iValidate[Statistics`SurvivalAnalysisTools`Dump`d]\nStatistics`SurvivalAnalysisTools`ValidSurvivalDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`SurvivalAnalysisTools`ValidSurvivalDataQ",
	"TemporalData`ValidTemporalDataQ":"ObjectType: Symbol\nUsage: TemporalData`TemporalDataQ that does not set a valid flag.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: TemporalData`ValidTemporalDataQ[HoldPattern[RandomProcesses`TemporalDataDump`td:TemporalData[RandomProcesses`TemporalDataDump`type_, ___]], RandomProcesses`TemporalDataDump`quietQ:True | False:False] \/; RandomProcesses`TemporalDataDump`validStructurallyQ[RandomProcesses`TemporalDataDump`td, RandomProcesses`TemporalDataDump`type, RandomProcesses`TemporalDataDump`quietQ] := True\nTemporalData`ValidTemporalDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: TemporalData`ValidTemporalDataQ",
	"Charting`ValidTickerQ":"ObjectType: Symbol\nUsage: Charting`ValidTickerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`ValidTickerQ[Visualization`Utilities`FinancialUtilitiesDump`ticker_] := Quiet[FinancialData[Visualization`Utilities`FinancialUtilitiesDump`RemapTickers[Visualization`Utilities`FinancialUtilitiesDump`ticker], \"Lookup\"]] =!= {}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`ValidTickerQ",
	"RandomProcesses`TimeSeriesCommon`ValidTimeSeriesModelQ":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`ValidTimeSeriesModelQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`ValidTimeSeriesModelQ[RandomProcesses`TimeSeriesModelFitDump`args___] := RandomProcesses`TimeSeriesModelFitDump`iValidTSModelQ[RandomProcesses`TimeSeriesModelFitDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`ValidTimeSeriesModelQ",
	"Statistics`DerivedDistributionUtilities`ValidTruncatedCensoredQ":"ObjectType: Symbol\nUsage: Statistics`DerivedDistributionUtilities`ValidTruncatedCensoredQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`DerivedDistributionUtilities`ValidTruncatedCensoredQ[Statistics`TruncatedDistributionDump`head_, Statistics`TruncatedDistributionDump`int_, Statistics`TruncatedDistributionDump`dist_] := Module[{Statistics`TruncatedDistributionDump`ddim, Statistics`TruncatedDistributionDump`dunv}, Statistics`TruncatedDistributionDump`dunv = Statistics`Library`UnivariateDistributionQ[Statistics`TruncatedDistributionDump`dist]; If[Statistics`TruncatedDistributionDump`dunv =!= False, Statistics`TruncatedDistributionDump`iValidUnivariateTruncationInterval[Statistics`TruncatedDistributionDump`int] === True, Statistics`TruncatedDistributionDump`ddim = Statistics`Library`DistributionDimensionality[Statistics`TruncatedDistributionDump`dist]; MatrixQ[Statistics`TruncatedDistributionDump`int] && ( !Internal`PositiveIntegerQ[Statistics`TruncatedDistributionDump`ddim] || Dimensions[Statistics`TruncatedDistributionDump`int] == {Statistics`TruncatedDistributionDump`ddim, 2}) && AllTrue[Statistics`TruncatedDistributionDump`int, Statistics`TruncatedDistributionDump`iValidUnivariateTruncationInterval] === True]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`DerivedDistributionUtilities`ValidTruncatedCensoredQ",
	"Internal`ValidUnitSystemQ":"ObjectType: Symbol\nUsage: Internal`ValidUnitSystemQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`ValidUnitSystemQ",
	"AugmentedData`ValidUnivariateAugmentedDataQ":"ObjectType: Symbol\nUsage: AugmentedData`ValidUnivariateAugmentedDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AugmentedData`ValidUnivariateAugmentedDataQ[AugmentedData`Dump`d_] \/; AugmentedData`ValidAugmentedDataQ[AugmentedData`Dump`d, Head[AugmentedData`Dump`d]] \/; AugmentedData`ADDimensionality[AugmentedData`Dump`d] === 1 := True\nAugmentedData`ValidUnivariateAugmentedDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: AugmentedData`ValidUnivariateAugmentedDataQ",
	"Wavelets`WaveletUtilities`ValidUserWaveletQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`ValidUserWaveletQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`ValidUserWaveletQ[Wavelets`WaveletUtilities`Dump`fwave_] := Block[{Wavelets`WaveletUtilities`Dump`mem, Wavelets`WaveletUtilities`Dump`wdef, Wavelets`WaveletUtilities`Dump`head}, Wavelets`WaveletUtilities`Dump`head = Head[Wavelets`WaveletUtilities`Dump`fwave]; Wavelets`WaveletUtilities`Dump`mem = MemberQ[Wavelets`$DiscreteTransformWavelets, ToString[Wavelets`WaveletUtilities`Dump`head]]; Wavelets`WaveletUtilities`Dump`wdef = If[TrueQ[Wavelets`WaveletUtilities`Dump`mem] && TrueQ[Wavelets`WaveletParameterQ[Wavelets`WaveletUtilities`Dump`fwave]], True, False]; If[TrueQ[Wavelets`WaveletUtilities`Dump`wdef], Return[True], Return[False]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`ValidUserWaveletQ",
	"Statistics`Library`ValidVariableQ":"ObjectType: Symbol\nUsage: Statistics`Library`ValidVariableQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`ValidVariableQ[_List | _Times | _Plus | _Power] := False\nStatistics`Library`ValidVariableQ[_Integer | _Real | _Complex] := False\nStatistics`Library`ValidVariableQ[(Statistics`Library`Dump`var_)?NumericQ] := False\nStatistics`Library`ValidVariableQ[(Statistics`Library`Dump`var_)?(Internal`LiterallyOccurringQ[#1, {DirectedInfinity, Indeterminate, Underflow[], Overflow[]}] & )] := False\nStatistics`Library`ValidVariableQ[Statistics`Library`Dump`var_Symbol] := True\nStatistics`Library`ValidVariableQ[Statistics`Library`Dump`var_] := Quiet[Head[Integrate[1, Statistics`Library`Dump`var]] =!= Integrate]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`ValidVariableQ",
	"Video`ValidVideoQHold":"ObjectType: Symbol\nUsage: Video`ValidVideoQHold\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: Video`ValidVideoQHold",
	"Wavelets`ValidWaveletTreeQ":"ObjectType: Symbol\nUsage: Wavelets`ValidWaveletTreeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`ValidWaveletTreeQ[Wavelets`WaveletBestBasisDump`WIndexMap_List, Wavelets`WaveletBestBasisDump`BestBasisIndex_List, Wavelets`WaveletBestBasisDump`rank_Integer] := Block[{Wavelets`WaveletBestBasisDump`ValidTree, Wavelets`WaveletBestBasisDump`ValidBasisIndex, Wavelets`WaveletBestBasisDump`InvalidBasisIndex, Wavelets`WaveletBestBasisDump`res}, Wavelets`WaveletBestBasisDump`res = Catch[Wavelets`WaveletBestBasisDump`WaveletTreeReconstruction[Wavelets`WaveletBestBasisDump`WIndexMap, Wavelets`WaveletBestBasisDump`BestBasisIndex, Wavelets`WaveletBestBasisDump`rank]]; If[Wavelets`WaveletBestBasisDump`res === $Failed, Return[False]]; {Wavelets`WaveletBestBasisDump`ValidTree, Wavelets`WaveletBestBasisDump`ValidBasisIndex, Wavelets`WaveletBestBasisDump`InvalidBasisIndex} = Wavelets`WaveletBestBasisDump`res; If[Wavelets`WaveletBestBasisDump`ValidTree, If[Length[Wavelets`WaveletBestBasisDump`InvalidBasisIndex] > 0, Message[WaveletBestBasis::rindx, Wavelets`WaveletBestBasisDump`InvalidBasisIndex]]; Return[True]; , Return[False]; ]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`ValidWaveletTreeQ",
	"FrontEnd`Value":"ObjectType: Symbol\nUsage: FrontEnd`Value\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FrontEnd`Value",
	"Internal`ValueChangeVeto":"ObjectType: Symbol\nUsage: Internal`ValueChangeVeto\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst, Listable}\nFullName: Internal`ValueChangeVeto",
	"Experimental`ValueFunction":"ObjectType: Symbol\nUsage: ValueFunction[symb] represents a function to be applied whenever the symbol symb gets a new value.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Experimental`ValueFunction[Developer`$InactivateExclusions] = Language`UpdateInactivateExclusions\nExperimental`ValueFunction[$SSHAuthentication] := (RemoteConnect; True)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Experimental`ValueFunction",
	"System`Private`ValueList":"ObjectType: Symbol\nUsage: System`Private`ValueList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: System`Private`ValueList",
	"Visualization`VectorFields`ValueModulate":"ObjectType: Symbol\nUsage: Visualization`VectorFields`ValueModulate\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`ValueModulate[Visualization`VectorFields`VectorFieldsDump`a_] := Module[{}, Visualization`VectorFields`VectorFieldsDump`a]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`VectorFields`ValueModulate",
	"System`InterpolatingFunction`ValuesOnGrid":"ObjectType: Symbol\nUsage: System`InterpolatingFunction`ValuesOnGrid\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DropPeriodicEndpoint -> False}\nAttributes: {}\nFullName: System`InterpolatingFunction`ValuesOnGrid",
	"System`Private`ValueTable":"ObjectType: Symbol\nUsage: System`Private`ValueTable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`ValueTable",
	"Data`ValueToKey":"ObjectType: Symbol\nUsage: Data`ValueToKey\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Data`ValueToKey",
	"LinearAlgebra`Private`VandermondeInverse":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`VandermondeInverse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Transpose -> False}\nAttributes: {}\nFullName: LinearAlgebra`Private`VandermondeInverse",
	"LinearAlgebra`Private`VandermondeMatrix":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`VandermondeMatrix\nDocumentation: None\nOwnValues: None\nUpValues: LinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`StructuredArrayAlgorithm[Det, LinearAlgebra`Private`VandermondeMatrix] = StructuredArray`VandermondeMatrixDump`VandermondeMatrixDet\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`StructuredArrayAlgorithm[Inverse, LinearAlgebra`Private`VandermondeMatrix] = StructuredArray`VandermondeMatrixDump`VanderInverse\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`StructuredArrayAlgorithm[LinearSolve, LinearAlgebra`Private`VandermondeMatrix, VectorQ] = StructuredArray`VandermondeMatrixDump`VandermondeMatrixLinearSolve\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`StructuredArrayAlgorithm[Dot, LinearAlgebra`Private`VandermondeMatrix, VectorQ] = StructuredArray`VandermondeMatrixDump`VandermondeMatrixDot\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`ValidateStructuredData[LinearAlgebra`Private`VandermondeMatrix, StructuredArray`StructuredData[StructuredArray`VandermondeMatrixDump`dims_, {StructuredArray`VandermondeMatrixDump`x_, StructuredArray`VandermondeMatrixDump`transposedQ:True | False}]] := Module[{StructuredArray`VandermondeMatrixDump`n = Length[StructuredArray`VandermondeMatrixDump`x]}, VectorQ[StructuredArray`VandermondeMatrixDump`x] && StructuredArray`VandermondeMatrixDump`dims === {StructuredArray`VandermondeMatrixDump`n, StructuredArray`VandermondeMatrixDump`n}]\nStructuredArray`StructuredPropertyList[LinearAlgebra`Private`VandermondeMatrix, _] ^= {}\nStructuredArray`CachedStructuredPropertyList[LinearAlgebra`Private`VandermondeMatrix, _] ^= {\"Vector\", \"TransposedQ\"}\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`GetStructuredProperty[LinearAlgebra`Private`VandermondeMatrix, \"Vector\", StructuredArray`StructuredData[_, {StructuredArray`VandermondeMatrixDump`x_, _}]] := StructuredArray`VandermondeMatrixDump`x\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`GetStructuredProperty[LinearAlgebra`Private`VandermondeMatrix, \"TransposedQ\", StructuredArray`StructuredData[_, {_, StructuredArray`VandermondeMatrixDump`transposedQ_}]] := StructuredArray`VandermondeMatrixDump`transposedQ\nStructuredArray`StructuredElementFunction[LinearAlgebra`Private`VandermondeMatrix, StructuredArray`VandermondeMatrixDump`sa_] ^:= With[{StructuredArray`VandermondeMatrixDump`x = StructuredArray`VandermondeMatrixDump`sa[\"Vector\"]}, If[StructuredArray`VandermondeMatrixDump`sa[\"TransposedQ\"], Function[{StructuredArray`VandermondeMatrixDump`i, StructuredArray`VandermondeMatrixDump`j}, Compile`GetElement[StructuredArray`VandermondeMatrixDump`x, StructuredArray`VandermondeMatrixDump`i]^(StructuredArray`VandermondeMatrixDump`j - 1), Listable], Function[{StructuredArray`VandermondeMatrixDump`i, StructuredArray`VandermondeMatrixDump`j}, Compile`GetElement[StructuredArray`VandermondeMatrixDump`x, StructuredArray`VandermondeMatrixDump`j]^(StructuredArray`VandermondeMatrixDump`i - 1), Listable]]]\nStructuredArray`StructuredTypeElements[LinearAlgebra`Private`VandermondeMatrix, StructuredArray`VandermondeMatrixDump`sa_] ^:= StructuredArray`VandermondeMatrixDump`sa[\"Vector\"]\nStructuredArray`Destructure[LinearAlgebra`Private`VandermondeMatrix, StructuredArray`VandermondeMatrixDump`m_, _] ^:= Module[{StructuredArray`VandermondeMatrixDump`x = StructuredArray`VandermondeMatrixDump`m[\"Vector\"]}, LinearAlgebra`Private`VandermondeMatrix[StructuredArray`VandermondeMatrixDump`x, List, Transpose -> StructuredArray`VandermondeMatrixDump`m[\"TransposedQ\"]]]\nLinearAlgebra`Private`VandermondeMatrix \/: StructuredArray`StructuredArrayAlgorithm[Transpose | ConjugateTranspose, LinearAlgebra`Private`VandermondeMatrix] = StructuredArray`VandermondeMatrixDump`VandermondeTranspose\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`a_LinearAlgebra`Private`VandermondeMatrix, BoxForm`fmt_] ^:= BoxForm`MakeRowBoxes[BoxForm`a, BoxForm`fmt] \/; Refresh[BoxForm`UseTextFormattingQ, None]\nMakeBoxes[StructuredArray`StructuredArrayBoxes`e:HoldPattern[LinearAlgebra`Private`VandermondeMatrix[___]], StructuredArray`StructuredArrayBoxes`fmt_] \/; BoxForm`UseIcons && StructuredArray`HeldStructuredArrayQ[StructuredArray`StructuredArrayBoxes`e] ^:= StructuredArray`MakeStructuredArrayBoxes[StructuredArray`StructuredArrayBoxes`e, StructuredArray`StructuredArrayBoxes`fmt]\nOptions: {Transpose -> False}\nAttributes: {}\nFullName: LinearAlgebra`Private`VandermondeMatrix",
	"LinearAlgebra`Private`VandermondeResidual":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`VandermondeResidual\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Transpose -> False}\nAttributes: {}\nFullName: LinearAlgebra`Private`VandermondeResidual",
	"LinearAlgebra`Private`VandermondeSolve":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`VandermondeSolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Transpose -> False}\nAttributes: {}\nFullName: LinearAlgebra`Private`VandermondeSolve",
	"Algebra`VanHoeijFactorize":"ObjectType: Symbol\nUsage: Algebra`VanHoeijFactorize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Algebra`VanHoeijFactorize[System`VanHoeijFactorizationDump`poly_, System`VanHoeijFactorizationDump`mod_:-1] := System`VanHoeijFactorizationDump`vHFactor[System`VanHoeijFactorizationDump`poly, System`VanHoeijFactorizationDump`mod]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Algebra`VanHoeijFactorize",
	"NRoots`VanVleckBound":"ObjectType: Symbol\nUsage: NRoots`VanVleckBound\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NRoots`VanVleckBound",
	"Factor`VarForAlgebraic":"ObjectType: Symbol\nUsage: Factor`VarForAlgebraic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Factor`VarForAlgebraic",
	"Factor`VarForNumeric":"ObjectType: Symbol\nUsage: Factor`VarForNumeric\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Factor`VarForNumeric",
	"Factor`VarForTrig":"ObjectType: Symbol\nUsage: Factor`VarForTrig\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Factor`VarForTrig",
	"Compile`Variable":"ObjectType: Symbol\nUsage: Compile`Variable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Compile`Variable",
	"NDSolve`VariableData":"ObjectType: Symbol\nUsage: NDSolve`VariableData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`VariableData[NDSolve`NDSUtilitiesDump`in_] := With[{NDSolve`NDSUtilitiesDump`res = Catch[NDSolve`NDSUtilitiesDump`iSolutionData[NDSolve`NDSUtilitiesDump`in, NDSolve`VariableData], NDSolve`NDSUtilitiesDump`SolutionDataError]}, NDSolve`NDSUtilitiesDump`res \/; Unevaluated[NDSolve`NDSUtilitiesDump`res] =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`VariableData",
	"NDSolve`FEM`VariableDataQ":"ObjectType: Symbol\nUsage: NDSolve`FEM`VariableDataQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`VariableDataQ[NDSolve`FEM`FEMDiscretizationDump`d__] := MatchQ[NDSolve`FEM`FEMDiscretizationDump`d, {None | _Symbol, {__Symbol}, {__Symbol}, {___}, {___}, {___}, {___}, {___}}]\nNDSolve`FEM`VariableDataQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NDSolve`FEM`VariableDataQ",
	"Statistics`Library`VarianceDefinition":"ObjectType: Symbol\nUsage: Statistics`Library`VarianceDefinition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`VarianceDefinition[(Statistics`DistributionPropertiesDump`dist_)?Statistics`DistributionPropertiesDump`OneDimensionalQ, Statistics`DistributionPropertiesDump`mean_:Null] := Block[{Statistics`DistributionPropertiesDump`m, Statistics`DistributionPropertiesDump`res, Statistics`DistributionPropertiesDump`x3, Statistics`DistributionPropertiesDump`cond}, If[Statistics`DistributionPropertiesDump`mean =!= Null, Statistics`DistributionPropertiesDump`m = Statistics`DistributionPropertiesDump`mean, Quiet[Statistics`DistributionPropertiesDump`m = Statistics`Library`MeanDefinition[Statistics`DistributionPropertiesDump`dist]]]; (Statistics`DistributionPropertiesDump`cond = DistributionParameterAssumptions[Statistics`DistributionPropertiesDump`dist] === True; Statistics`DistributionPropertiesDump`res = Quiet[Expectation[(Statistics`DistributionPropertiesDump`x3 - Statistics`DistributionPropertiesDump`m)^2, Distributed[Statistics`DistributionPropertiesDump`x3, Statistics`DistributionPropertiesDump`dist], GenerateConditions -> Statistics`DistributionPropertiesDump`cond]]; Statistics`DistributionPropertiesDump`res \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`res, {Expectation, Infinity, Indeterminate}]) \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`m, $Failed]]\nStatistics`Library`VarianceDefinition[(Statistics`DistributionPropertiesDump`dist_)?Statistics`DistributionPropertiesDump`MultiDimensionalQ, Statistics`DistributionPropertiesDump`mean_:Null] := Block[{Statistics`DistributionPropertiesDump`r, Statistics`DistributionPropertiesDump`m, Statistics`DistributionPropertiesDump`res, Statistics`DistributionPropertiesDump`res1, Statistics`DistributionPropertiesDump`x4}, Statistics`DistributionPropertiesDump`r = Statistics`Library`DistributionDimensionality[Statistics`DistributionPropertiesDump`dist]; If[Statistics`DistributionPropertiesDump`mean =!= Null, Statistics`DistributionPropertiesDump`m = Statistics`DistributionPropertiesDump`mean, Quiet[Statistics`DistributionPropertiesDump`m = Statistics`Library`MeanDefinition[Statistics`DistributionPropertiesDump`dist]]]; (Quiet[Statistics`DistributionPropertiesDump`res = Catch[Table[Statistics`DistributionPropertiesDump`res1 = Expectation[(Statistics`DistributionPropertiesDump`x4 - Statistics`DistributionPropertiesDump`m[[Statistics`DistributionPropertiesDump`i]])^2, Distributed[Statistics`DistributionPropertiesDump`x4, MarginalDistribution[Statistics`DistributionPropertiesDump`dist, Statistics`DistributionPropertiesDump`i]]]; If[Internal`LiterallyOccurringQ[Statistics`DistributionPropertiesDump`res1, Expectation], Throw[$Failed], Statistics`DistributionPropertiesDump`res1], {Statistics`DistributionPropertiesDump`i, Statistics`DistributionPropertiesDump`r}]]]; Statistics`DistributionPropertiesDump`res \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`res, {$Failed, Expectation, Infinity, Indeterminate}]) \/; Internal`LiterallyAbsentQ[Statistics`DistributionPropertiesDump`m, $Failed] && VectorQ[Statistics`DistributionPropertiesDump`m] && Length[Statistics`DistributionPropertiesDump`m] === Statistics`DistributionPropertiesDump`r]\nStatistics`Library`VarianceDefinition[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`VarianceDefinition",
	"System`VectorPlotsDump`VecotrSizes":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`VecotrSizes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`VecotrSizes",
	"System`VectorPlotsDump`VectorAspectratio":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`VectorAspectratio\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`VectorAspectratio",
	"SurfaceGraphics`Methods`VectorBackgroundPadding":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`VectorBackgroundPadding\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`VectorBackgroundPadding",
	"Visualization`Core`VectorDensityPlot":"ObjectType: Symbol\nUsage: Visualization`Core`VectorDensityPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> 1, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, BoxRatios -> Automatic, ClippingStyle -> Automatic, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, FormatType :> TraditionalForm, Frame -> True, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, LightingAngle -> None, MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> Automatic, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> {Full, Full}, PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotateLabel -> True, StreamColorFunction -> None, StreamColorFunctionScaling -> True, StreamPoints -> None, StreamScale -> Automatic, StreamStyle -> Automatic, Ticks -> Automatic, TicksStyle -> {}, VectorColorFunction -> None, VectorColorFunctionScaling -> True, VectorPoints -> Automatic, VectorRange -> Automatic, VectorScale -> Automatic, VectorSizes -> Automatic, VectorStyle -> Automatic, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`VectorDensityPlot",
	"RandomProcesses`Simulation`VectorEulerMaruyama":"ObjectType: Symbol\nUsage: RandomProcesses`Simulation`VectorEulerMaruyama\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Simulation`VectorEulerMaruyama[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`t0_, RandomProcesses`SimulationDump`t1_, (RandomProcesses`SimulationDump`steps_Integer)?Positive}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts___] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorEulerMaruyama[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, {RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`x0}, {RandomProcesses`SimulationDump`t, Range[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps]}, RandomProcesses`SimulationDump`repetitions, RandomProcesses`SimulationDump`opts]; {{RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps}, Last[RandomProcesses`SimulationDump`res]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nRandomProcesses`Simulation`VectorEulerMaruyama[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`timeGrid_List}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[]] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`deltas, RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`bag = Internal`Bag[], RandomProcesses`SimulationDump`nfab, RandomProcesses`SimulationDump`nfopts, RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`rvoptions, RandomProcesses`SimulationDump`dw, RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`projFunc, RandomProcesses`SimulationDump`yc, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`zs, RandomProcesses`SimulationDump`outFunc, RandomProcesses`SimulationDump`dwv}, RandomProcesses`SimulationDump`deltas = Differences[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`len = Length[RandomProcesses`SimulationDump`deltas]; {RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`m} = Dimensions[RandomProcesses`SimulationDump`bmat]; RandomProcesses`SimulationDump`nfopts = RandomProcesses`SimulationDump`FilterNFRules[{RandomProcesses`SimulationDump`opts}]; RandomProcesses`SimulationDump`dwv = Table[Unique[RandomProcesses`SimulationDump`dw, Temporary], {RandomProcesses`SimulationDump`m}]; RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`dwv}, RandomProcesses`SimulationDump`avec*RandomProcesses`SimulationDump`dt + Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`bmat . RandomProcesses`SimulationDump`dwv, {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`nfopts]; RandomProcesses`SimulationDump`rvoptions = FilterRules[{RandomProcesses`SimulationDump`opts}, {WorkingPrecision}]; RandomProcesses`SimulationDump`projFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`outFunc = Replace[OptionValue[\"OutputFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`yc = RandomProcesses`SimulationDump`outFunc[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0]; If[VectorQ[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = Length[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = 0]; Quiet[If[VectorQ[RandomProcesses`SimulationDump`nfab[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0, 0.1, ConstantArray[0.11, RandomProcesses`SimulationDump`m]], NumberQ] =!= True, Return[{$Failed, $Failed}]]]; Do[RandomProcesses`SimulationDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[], {RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`rvoptions]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0; Do[RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k + 1]]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfab[RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]]]]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1], {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}]; , {RandomProcesses`SimulationDump`repetitions}]; RandomProcesses`SimulationDump`nfab =. ; RandomProcesses`SimulationDump`dwv =. ; {{RandomProcesses`SimulationDump`timeGrid}, RandomProcesses`SimulationDump`FromBagToPartitionedList[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`len]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, ErrorReturn -> Automatic, Evaluated -> Automatic, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, SampleArgument -> False, StepMonitor -> None, WorkingPrecision -> MachinePrecision, Calculus -> ItoCalculus, ProjectionFunction -> Automatic, OutputFunction -> Automatic, CommutativeNoise -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Simulation`VectorEulerMaruyama",
	"Visualization`VectorFields`VectorFieldBlendImages":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldBlendImages\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldBlendImages[Visualization`VectorFields`VectorFieldsDump`limages_List, Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Module[{}, Visualization`VectorFields`VectorFieldsDump`limages[[1]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Visualization`VectorFields`BlendFunction -> Automatic}\nAttributes: {}\nFullName: Visualization`VectorFields`VectorFieldBlendImages",
	"Visualization`VectorFields`VectorFieldPlotParameters":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldPlotParameters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`VectorFields`VectorFieldPlotParameters",
	"Visualization`VectorFields`VectorFieldProcessData":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldProcessData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`datasets_, Visualization`VectorFields`VectorFieldsDump`n_Integer \/; Visualization`VectorFields`VectorFieldsDump`n == 2, Visualization`VectorFields`VectorFieldsDump`opts:OptionsPattern[]] := Module[{Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`dims, Visualization`VectorFields`VectorFieldsDump`result, Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts, Visualization`VectorFields`VectorFieldsDump`rank, Visualization`VectorFields`VectorFieldsDump`n2, Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`datarange}, {Visualization`VectorFields`VectorFieldsDump`datarange} = OptionValue[{DataRange}]; Visualization`VectorFields`VectorFieldsDump`n2 = 2*Visualization`VectorFields`VectorFieldsDump`n; Visualization`VectorFields`VectorFieldsDump`data = If[Visualization`VectorFields`VectorFieldsDump`sparseQ[Visualization`VectorFields`VectorFieldsDump`datasets], Visualization`VectorFields`VectorFieldsDump`toPacked[Normal[Visualization`VectorFields`VectorFieldsDump`datasets]], Visualization`VectorFields`VectorFieldsDump`datasets]; Visualization`VectorFields`VectorFieldsDump`data = Visualization`VectorFields`VectorFieldsDump`toUnruled[Visualization`VectorFields`VectorFieldsDump`datasets]; Visualization`VectorFields`VectorFieldsDump`data = Visualization`VectorFields`VectorFieldsDump`toPacked[Visualization`VectorFields`VectorFieldsDump`data]; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {$Failed, $Failed}; {Visualization`VectorFields`VectorFieldsDump`dims, Visualization`VectorFields`VectorFieldsDump`rank} = {Dimensions[Visualization`VectorFields`VectorFieldsDump`data], ArrayDepth[Visualization`VectorFields`VectorFieldsDump`data]}; Switch[Visualization`VectorFields`VectorFieldsDump`rank, 0, True, 1, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`data[[1]], Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts]; If[Visualization`VectorFields`VectorFieldsDump`tmp[[1]] =!= $Failed, Visualization`VectorFields`VectorFieldsDump`result = Flatten[Join[{Visualization`VectorFields`VectorFieldsDump`tmp}, (Visualization`VectorFields`VectorFieldProcessData[#1, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts] & ) \/@ Rest[Visualization`VectorFields`VectorFieldsDump`data]], 1]], 2, If[Visualization`VectorFields`VectorFieldsDump`dims[[2]] == Visualization`VectorFields`VectorFieldsDump`n2, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldsDump`data \/. {Visualization`VectorFields`VectorFieldsDump`x1_, Visualization`VectorFields`VectorFieldsDump`x2_, Visualization`VectorFields`VectorFieldsDump`x3_, Visualization`VectorFields`VectorFieldsDump`x4_} -> {{Visualization`VectorFields`VectorFieldsDump`x1, Visualization`VectorFields`VectorFieldsDump`x2}, {Visualization`VectorFields`VectorFieldsDump`x3, Visualization`VectorFields`VectorFieldsDump`x4}}; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts]], 3, Switch[Visualization`VectorFields`VectorFieldsDump`dims[[3]], Visualization`VectorFields`VectorFieldsDump`n, If[Visualization`VectorFields`VectorFieldsDump`dims[[2]] == 2, Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {Visualization`VectorFields`VectorFieldsDump`getInterpolation[Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], Visualization`VectorFields`VectorFieldsDump`getPtsData[Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`datarange, Visualization`VectorFields`VectorFieldsDump`n]}; , Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldsDump`getDomainPts[Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`datarange, Visualization`VectorFields`VectorFieldsDump`n]; If[Visualization`VectorFields`VectorFieldsDump`tmp =!= $Failed, Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts]]], Visualization`VectorFields`VectorFieldsDump`n2, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldsDump`data \/. {Visualization`VectorFields`VectorFieldsDump`x1_, Visualization`VectorFields`VectorFieldsDump`x2_, Visualization`VectorFields`VectorFieldsDump`x3_, Visualization`VectorFields`VectorFieldsDump`x4_} -> {{Visualization`VectorFields`VectorFieldsDump`x1, Visualization`VectorFields`VectorFieldsDump`x2}, {Visualization`VectorFields`VectorFieldsDump`x3, Visualization`VectorFields`VectorFieldsDump`x4}}; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], _, Visualization`VectorFields`VectorFieldsDump`result = Flatten[(Visualization`VectorFields`VectorFieldProcessData[#1, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts] & ) \/@ Visualization`VectorFields`VectorFieldsDump`data, 1]], 4, If[Visualization`VectorFields`VectorFieldsDump`dims[[3]] == Visualization`VectorFields`VectorFieldsDump`n && Visualization`VectorFields`VectorFieldsDump`dims[[4]] == Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`tmp = Flatten[Visualization`VectorFields`VectorFieldsDump`data, 1]; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], Visualization`VectorFields`VectorFieldsDump`result = Flatten[(Visualization`VectorFields`VectorFieldProcessData[#1, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts] & ) \/@ Visualization`VectorFields`VectorFieldsDump`data, 1]], _, Visualization`VectorFields`VectorFieldsDump`result = Flatten[(Visualization`VectorFields`VectorFieldProcessData[#1, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts] & ) \/@ Visualization`VectorFields`VectorFieldsDump`data, 1]]; Visualization`VectorFields`VectorFieldsDump`result]\nVisualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`datasets_, Visualization`VectorFields`VectorFieldsDump`n_Integer \/; Visualization`VectorFields`VectorFieldsDump`n == 3, Visualization`VectorFields`VectorFieldsDump`opts:OptionsPattern[]] := Module[{Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`dims, Visualization`VectorFields`VectorFieldsDump`result, Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts, Visualization`VectorFields`VectorFieldsDump`rank, Visualization`VectorFields`VectorFieldsDump`n2, Visualization`VectorFields`VectorFieldsDump`datarange, Visualization`VectorFields`VectorFieldsDump`tmp}, {Visualization`VectorFields`VectorFieldsDump`datarange} = OptionValue[{DataRange}]; Visualization`VectorFields`VectorFieldsDump`n2 = 2*Visualization`VectorFields`VectorFieldsDump`n; Visualization`VectorFields`VectorFieldsDump`data = If[Visualization`VectorFields`VectorFieldsDump`sparseQ[Visualization`VectorFields`VectorFieldsDump`datasets], Visualization`VectorFields`VectorFieldsDump`toPacked[Normal[Visualization`VectorFields`VectorFieldsDump`datasets]], Visualization`VectorFields`VectorFieldsDump`datasets]; Visualization`VectorFields`VectorFieldsDump`data = Visualization`VectorFields`VectorFieldsDump`toUnruled[Visualization`VectorFields`VectorFieldsDump`datasets]; Visualization`VectorFields`VectorFieldsDump`data = Visualization`VectorFields`VectorFieldsDump`toPacked[Visualization`VectorFields`VectorFieldsDump`data]; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {$Failed, $Failed}; {Visualization`VectorFields`VectorFieldsDump`dims, Visualization`VectorFields`VectorFieldsDump`rank} = {Dimensions[Visualization`VectorFields`VectorFieldsDump`data], ArrayDepth[Visualization`VectorFields`VectorFieldsDump`data]}; Switch[Visualization`VectorFields`VectorFieldsDump`rank, 0, True, 2, Switch[Visualization`VectorFields`VectorFieldsDump`dims[[2]], Visualization`VectorFields`VectorFieldsDump`n2, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldsDump`data \/. {Visualization`VectorFields`VectorFieldsDump`x1_, Visualization`VectorFields`VectorFieldsDump`x2_, Visualization`VectorFields`VectorFieldsDump`x3_, Visualization`VectorFields`VectorFieldsDump`v1_, Visualization`VectorFields`VectorFieldsDump`v2_, Visualization`VectorFields`VectorFieldsDump`v3_} -> {{Visualization`VectorFields`VectorFieldsDump`x1, Visualization`VectorFields`VectorFieldsDump`x2, Visualization`VectorFields`VectorFieldsDump`x3}, {Visualization`VectorFields`VectorFieldsDump`v1, Visualization`VectorFields`VectorFieldsDump`v2, Visualization`VectorFields`VectorFieldsDump`v3}}; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], _, True], 3, If[MatchQ[Visualization`VectorFields`VectorFieldsDump`dims, {_, 2, 3}], Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {Visualization`VectorFields`VectorFieldsDump`getInterpolation[Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], Visualization`VectorFields`VectorFieldsDump`getPtsData[Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`datarange, Visualization`VectorFields`VectorFieldsDump`n]}, True], 4, Switch[Visualization`VectorFields`VectorFieldsDump`dims[[4]], Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldsDump`getDomainPts[Visualization`VectorFields`VectorFieldsDump`data, Visualization`VectorFields`VectorFieldsDump`datarange, Visualization`VectorFields`VectorFieldsDump`n]; If[Visualization`VectorFields`VectorFieldsDump`tmp =!= $Failed, Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts]], Visualization`VectorFields`VectorFieldsDump`n2, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldsDump`data \/. {Visualization`VectorFields`VectorFieldsDump`x1_, Visualization`VectorFields`VectorFieldsDump`x2_, Visualization`VectorFields`VectorFieldsDump`x3_, Visualization`VectorFields`VectorFieldsDump`v1_, Visualization`VectorFields`VectorFieldsDump`v2_, Visualization`VectorFields`VectorFieldsDump`v3_} -> {{Visualization`VectorFields`VectorFieldsDump`x1, Visualization`VectorFields`VectorFieldsDump`x2, Visualization`VectorFields`VectorFieldsDump`x3}, {Visualization`VectorFields`VectorFieldsDump`v1, Visualization`VectorFields`VectorFieldsDump`v2, Visualization`VectorFields`VectorFieldsDump`v3}}; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], _, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`data[[1]], Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts]; If[Visualization`VectorFields`VectorFieldsDump`tmp[[1]] =!= $Failed, Visualization`VectorFields`VectorFieldsDump`result = Flatten[Join[{Visualization`VectorFields`VectorFieldsDump`tmp}, (Visualization`VectorFields`VectorFieldProcessData[#1, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts] & ) \/@ Rest[Visualization`VectorFields`VectorFieldsDump`data]], 1], Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {$Failed, $Failed}]], 5, Switch[Visualization`VectorFields`VectorFieldsDump`dims[[5]], Visualization`VectorFields`VectorFieldsDump`n, If[Visualization`VectorFields`VectorFieldsDump`dims[[4]] == 2, Visualization`VectorFields`VectorFieldsDump`tmp = Flatten[Visualization`VectorFields`VectorFieldsDump`data, 2]; Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {Visualization`VectorFields`VectorFieldsDump`getInterpolation[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts], Visualization`VectorFields`VectorFieldsDump`getPtsData[Visualization`VectorFields`VectorFieldsDump`tmp, Visualization`VectorFields`VectorFieldsDump`datarange, Visualization`VectorFields`VectorFieldsDump`n]}, True], _, True], _, Visualization`VectorFields`VectorFieldsDump`tmp = Visualization`VectorFields`VectorFieldProcessData[Visualization`VectorFields`VectorFieldsDump`data[[1]], Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts]; If[Visualization`VectorFields`VectorFieldsDump`tmp[[1]] =!= $Failed, Visualization`VectorFields`VectorFieldsDump`result = Flatten[Join[{Visualization`VectorFields`VectorFieldsDump`tmp}, (Visualization`VectorFields`VectorFieldProcessData[#1, Visualization`VectorFields`VectorFieldsDump`n, Visualization`VectorFields`VectorFieldsDump`opts] & ) \/@ Rest[Visualization`VectorFields`VectorFieldsDump`data]], 1], Visualization`VectorFields`VectorFieldsDump`result = {Visualization`VectorFields`VectorFieldsDump`ifunc, Visualization`VectorFields`VectorFieldsDump`pts} = {$Failed, $Failed}]]; Visualization`VectorFields`VectorFieldsDump`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {DataRange -> Automatic, InterpolationOrder -> Automatic, Method -> {Extrapolation -> True}}\nAttributes: {}\nFullName: Visualization`VectorFields`VectorFieldProcessData",
	"Visualization`VectorFields`VectorFieldProcessEquations":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldProcessEquations\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldProcessEquations[Visualization`VectorFields`VectorFieldsDump`mesh_, Visualization`VectorFields`VectorFieldsDump`vf_, {Visualization`VectorFields`VectorFieldsDump`x_, Visualization`VectorFields`VectorFieldsDump`y_}, Visualization`VectorFields`VectorFieldsDump`p0_, Visualization`VectorFields`VectorFieldsDump`p0len_Integer, Visualization`VectorFields`VectorFieldsDump`newtonflow_, Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Block[{Visualization`VectorFields`VectorFieldsDump`state, Visualization`VectorFields`VectorFieldsDump`t, Visualization`VectorFields`VectorFieldsDump`VF, Visualization`VectorFields`VectorFieldsDump`method, Visualization`VectorFields`VectorFieldsDump`agoal, Visualization`VectorFields`VectorFieldsDump`pgoal, Visualization`VectorFields`VectorFieldsDump`PP0, Visualization`VectorFields`VectorFieldsDump`df, Visualization`VectorFields`VectorFieldsDump`smethod, Visualization`VectorFields`VectorFieldsDump`rhs}, {Visualization`VectorFields`VectorFieldsDump`method, Visualization`VectorFields`VectorFieldsDump`agoal, Visualization`VectorFields`VectorFieldsDump`pgoal} = OptionValue[{Method, AccuracyGoal, PrecisionGoal}]; If[Visualization`VectorFields`VectorFieldsDump`method === Default, Visualization`VectorFields`VectorFieldsDump`method = {\"ExplicitRungeKutta\", \"DifferenceOrder\" -> 2, \"StiffnessTest\" -> False}]; Visualization`VectorFields`VectorFieldsDump`rhs = Visualization`VectorFields`VectorFieldsDump`VF[Visualization`VectorFields`VectorFieldsDump`V[Visualization`VectorFields`VectorFieldsDump`t]]; Which[Head[Visualization`VectorFields`VectorFieldsDump`vf] === CompiledFunction, If[Visualization`VectorFields`VectorFieldsDump`newtonflow, Visualization`VectorFields`VectorFieldsDump`df[{Visualization`VectorFields`VectorFieldsDump`xx_, Visualization`VectorFields`VectorFieldsDump`yy_}] = Visualization`VectorFields`VectorFieldsDump`vf[Visualization`VectorFields`VectorFieldsDump`xx, Visualization`VectorFields`VectorFieldsDump`yy]; Visualization`VectorFields`VectorFieldsDump`VF[{Visualization`VectorFields`VectorFieldsDump`xx_, Visualization`VectorFields`VectorFieldsDump`yy_}] := (#1\/Abs[#1] & )[Visualization`VectorFields`VectorFieldsDump`df[{Visualization`VectorFields`VectorFieldsDump`xx, Visualization`VectorFields`VectorFieldsDump`yy}]], Visualization`VectorFields`VectorFieldsDump`VF[{Visualization`VectorFields`VectorFieldsDump`xx_, Visualization`VectorFields`VectorFieldsDump`yy_}] := Visualization`VectorFields`VectorFieldsDump`vf[Visualization`VectorFields`VectorFieldsDump`xx, Visualization`VectorFields`VectorFieldsDump`yy]], Head[Visualization`VectorFields`VectorFieldsDump`vf] === Experimental`NumericalFunction, If[Length[Visualization`VectorFields`VectorFieldsDump`vf[\"InputTypes\"]] == 2, Visualization`VectorFields`VectorFieldsDump`rhs = Visualization`VectorFields`VectorFieldsDump`vf[Visualization`VectorFields`VectorFieldsDump`t, Visualization`VectorFields`VectorFieldsDump`V[Visualization`VectorFields`VectorFieldsDump`t]], Visualization`VectorFields`VectorFieldsDump`rhs = Visualization`VectorFields`VectorFieldsDump`vf[Visualization`VectorFields`VectorFieldsDump`V[Visualization`VectorFields`VectorFieldsDump`t]]], True, If[Visualization`VectorFields`VectorFieldsDump`newtonflow, Visualization`VectorFields`VectorFieldsDump`df[{Visualization`VectorFields`VectorFieldsDump`xx_, Visualization`VectorFields`VectorFieldsDump`yy_}] = Function[{Visualization`VectorFields`VectorFieldsDump`x, Visualization`VectorFields`VectorFieldsDump`y}, Visualization`VectorFields`VectorFieldsDump`vf] @@ {Visualization`VectorFields`VectorFieldsDump`x, Visualization`VectorFields`VectorFieldsDump`y} \/. {Visualization`VectorFields`VectorFieldsDump`x -> Visualization`VectorFields`VectorFieldsDump`xx, Visualization`VectorFields`VectorFieldsDump`y -> Visualization`VectorFields`VectorFieldsDump`yy}; Visualization`VectorFields`VectorFieldsDump`VF[{Visualization`VectorFields`VectorFieldsDump`xx_, Visualization`VectorFields`VectorFieldsDump`yy_}] := (#1\/Abs[#1] & )[Visualization`VectorFields`VectorFieldsDump`df[{Visualization`VectorFields`VectorFieldsDump`xx, Visualization`VectorFields`VectorFieldsDump`yy}]], Visualization`VectorFields`VectorFieldsDump`VF[{Visualization`VectorFields`VectorFieldsDump`xx_, Visualization`VectorFields`VectorFieldsDump`yy_}] = Function[{Visualization`VectorFields`VectorFieldsDump`x, Visualization`VectorFields`VectorFieldsDump`y}, Visualization`VectorFields`VectorFieldsDump`vf] @@ {Visualization`VectorFields`VectorFieldsDump`x, Visualization`VectorFields`VectorFieldsDump`y} \/. {Visualization`VectorFields`VectorFieldsDump`x -> Visualization`VectorFields`VectorFieldsDump`xx, Visualization`VectorFields`VectorFieldsDump`y -> Visualization`VectorFields`VectorFieldsDump`yy}]]; Visualization`VectorFields`VectorFieldsDump`PP0 = If[Visualization`VectorFields`VectorFieldsDump`p0len <= 1, Visualization`VectorFields`VectorFieldsDump`p0, Table[Visualization`VectorFields`VectorFieldsDump`p0, {Visualization`VectorFields`VectorFieldsDump`p0len}]]; If[TrueQ[Visualization`VectorFields`StreamlineMethodQ], Visualization`VectorFields`VectorFieldsDump`smethod = {\"Streamline\", \"Mesh\" -> Visualization`VectorFields`VectorFieldsDump`mesh, Method -> Visualization`VectorFields`VectorFieldsDump`method}, Visualization`VectorFields`VectorFieldsDump`smethod = {\"EventLocator\", \"Event\" :> Visualization`VectorFields`VectorFieldsDump`StreamlinesIntegrateStep[Visualization`VectorFields`VectorFieldsDump`mesh, Visualization`VectorFields`VectorFieldsDump`t, Visualization`VectorFields`VectorFieldsDump`V[Visualization`VectorFields`VectorFieldsDump`t], Derivative[1][Visualization`VectorFields`VectorFieldsDump`V][Visualization`VectorFields`VectorFieldsDump`t]], \"EventLocationMethod\" -> \"StepEnd\", Method -> Visualization`VectorFields`VectorFieldsDump`method}]; Visualization`VectorFields`VectorFieldsDump`state = First[NDSolve`ProcessEquations[{Derivative[1][Visualization`VectorFields`VectorFieldsDump`V][Visualization`VectorFields`VectorFieldsDump`t] == Visualization`VectorFields`VectorFieldsDump`rhs, Visualization`VectorFields`VectorFieldsDump`V[0] == Visualization`VectorFields`VectorFieldsDump`PP0}, {}, Visualization`VectorFields`VectorFieldsDump`t, Method -> Visualization`VectorFields`VectorFieldsDump`smethod, MaxStepFraction -> 1, DependentVariables -> Visualization`VectorFields`VectorFieldsDump`V, AccuracyGoal -> Visualization`VectorFields`VectorFieldsDump`agoal, PrecisionGoal -> Visualization`VectorFields`VectorFieldsDump`pgoal]]; Visualization`VectorFields`VectorFieldsDump`state]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AccuracyGoal -> 3, Method -> Automatic, PrecisionGoal -> 3}\nAttributes: {HoldFirst}\nFullName: Visualization`VectorFields`VectorFieldProcessEquations",
	"Visualization`VectorFields`VectorFieldsInit":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldsInit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldsInit[] := If[ !MemberQ[$ContextPath, \"Visualization`VectorFields`\"], $ContextPath = Join[$ContextPath, {\"Visualization`VectorFields`\"}], $ContextPath]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`VectorFields`VectorFieldsInit",
	"Visualization`VectorFields`VectorFieldVectorLineStyle":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldVectorLineStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot_, VectorStyle, Visualization`VectorFields`VectorFieldsDump`style_, \"Speed\", Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Visualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot, VectorStyle, Visualization`VectorFields`VectorFieldsDump`style, \"Quality\", Visualization`VectorFields`VectorFieldsDump`o] \/; MemberQ[{VectorPlot, ListVectorPlot, VectorDensityPlot, ListVectorDensityPlot, VectorPlot3D, ListVectorPlot3D}, Visualization`VectorFields`VectorFieldsDump`plot]\nVisualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot_, Visualization`VectorFields`VectorFieldsDump`pstyle_, Visualization`VectorFields`VectorFieldsDump`style_List, \"Speed\", Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Visualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot, Visualization`VectorFields`VectorFieldsDump`pstyle, Select[Visualization`VectorFields`VectorFieldsDump`style,  !StringQ[#1] & ], \"Quality\", Visualization`VectorFields`VectorFieldsDump`o]\nVisualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot_, Visualization`VectorFields`VectorFieldsDump`pstyle_, Visualization`VectorFields`VectorFieldsDump`style_List, Visualization`VectorFields`VectorFieldsDump`pgoal_, Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Module[{Visualization`VectorFields`VectorFieldsDump`vectorscale, Visualization`VectorFields`VectorFieldsDump`linescale, Visualization`VectorFields`VectorFieldsDump`param, Visualization`VectorFields`VectorFieldsDump`opts, Visualization`VectorFields`VectorFieldsDump`directives, Visualization`VectorFields`VectorFieldsDump`glyphoptions, Visualization`VectorFields`VectorFieldsDump`glyphfunc, Visualization`VectorFields`VectorFieldsDump`result, Visualization`VectorFields`VectorFieldsDump`qglyphpath, Visualization`VectorFields`VectorFieldsDump`estyle, Visualization`VectorFields`VectorFieldsDump`s1, Visualization`VectorFields`VectorFieldsDump`s2}, {Visualization`VectorFields`VectorFieldsDump`vectorscale, Visualization`VectorFields`VectorFieldsDump`linescale, Visualization`VectorFields`VectorFieldsDump`param} = OptionValue[{VectorScale, StreamScale, Visualization`VectorFields`VectorFieldPlotParameters}]; Visualization`VectorFields`VectorFieldsDump`s2 = Cases[Visualization`VectorFields`VectorFieldsDump`style, Visualization`VectorFields`VectorFieldsDump`x_ \/;  !Graphics`Glyphs`GlyphDataQ[Visualization`VectorFields`VectorFieldsDump`x]]; Visualization`VectorFields`VectorFieldsDump`s1 = Complement[Visualization`VectorFields`VectorFieldsDump`style, Visualization`VectorFields`VectorFieldsDump`s2]; Visualization`VectorFields`VectorFieldsDump`estyle = If[Length[Visualization`VectorFields`VectorFieldsDump`s1] > 0, Visualization`VectorFields`VectorFieldsDump`s1 = Graphics`Glyphs`GlyphData[First[Visualization`VectorFields`VectorFieldsDump`s1]]; If[Visualization`VectorFields`VectorFieldsDump`s1 == {}, Return[Visualization`VectorFields`VectorFieldsDump`s2]]; Append[Visualization`VectorFields`VectorFieldsDump`s2, Visualization`VectorFields`VectorFieldsDump`s1], Visualization`VectorFields`VectorFieldsDump`s2]; Visualization`VectorFields`VectorFieldsDump`qglyphpath = FreeQ[Visualization`VectorFields`VectorFieldsDump`estyle, Graphics`Glyphs`GlyphDataFunction, Infinity]; Switch[Visualization`VectorFields`VectorFieldsDump`pstyle, VectorStyle, Visualization`VectorFields`VectorFieldsDump`opts = Visualization`VectorFields`VectorFieldsDump`vectorScaleGlyphOptions[Visualization`VectorFields`VectorFieldsDump`vectorscale]; If[Visualization`VectorFields`VectorFieldsDump`opts === None, Return[None]], StreamStyle, Visualization`VectorFields`VectorFieldsDump`opts = Visualization`VectorFields`VectorFieldsDump`LineFieldGlyphOptions[Visualization`VectorFields`VectorFieldsDump`linescale, Visualization`VectorFields`VectorFieldsDump`param, Visualization`VectorFields`VectorFieldsDump`qglyphpath]; If[Visualization`VectorFields`VectorFieldsDump`opts === None, Return[Visualization`VectorFields`VectorFieldsDump`estyle]], _, Return[Visualization`VectorFields`VectorFieldsDump`estyle]]; If[Visualization`VectorFields`VectorFieldsDump`qglyphpath, Visualization`VectorFields`VectorFieldsDump`opts = Join[{Graphics`Glyphs`ArrowStyle -> Automatic}, Visualization`VectorFields`VectorFieldsDump`opts]; Visualization`VectorFields`VectorFieldsDump`result = Join[Visualization`VectorFields`VectorFieldsDump`estyle, {Graphics`Glyphs`GlyphDataFunction[#1, Sequence @@ Visualization`VectorFields`VectorFieldsDump`opts] & }]; Return[Visualization`VectorFields`VectorFieldsDump`result]]; Visualization`VectorFields`VectorFieldsDump`directives = Flatten[Visualization`VectorFields`VectorFieldsDump`estyle \/. {(Graphics`Glyphs`GlyphDataFunction[___] & ) :> Sequence[]}]; Visualization`VectorFields`VectorFieldsDump`glyphoptions = Options[Cases[{Visualization`VectorFields`VectorFieldsDump`estyle}, (Graphics`Glyphs`GlyphDataFunction[Visualization`VectorFields`VectorFieldsDump`a___] & ) -> {Visualization`VectorFields`VectorFieldsDump`a}, Infinity][[1]]]; Visualization`VectorFields`VectorFieldsDump`glyphoptions = Join[Visualization`VectorFields`VectorFieldsDump`glyphoptions, Visualization`VectorFields`VectorFieldsDump`opts]; If[Visualization`VectorFields`VectorFieldsDump`pstyle === VectorStyle, Visualization`VectorFields`VectorFieldsDump`glyphoptions = Join[{Graphics`Glyphs`PathLengths -> None}, Visualization`VectorFields`VectorFieldsDump`glyphoptions]]; Visualization`VectorFields`VectorFieldsDump`glyphfunc = Graphics`Glyphs`GlyphDataFunction[#1, Sequence[Visualization`VectorFields`VectorFieldsDump`glyphoptions]] & ; Visualization`VectorFields`VectorFieldsDump`result = Append[Visualization`VectorFields`VectorFieldsDump`directives, Visualization`VectorFields`VectorFieldsDump`glyphfunc]; Visualization`VectorFields`VectorFieldsDump`result]\nVisualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot_, Visualization`VectorFields`VectorFieldsDump`pstyle_, Visualization`VectorFields`VectorFieldsDump`style_, Visualization`VectorFields`VectorFieldsDump`pg_, Visualization`VectorFields`VectorFieldsDump`o:OptionsPattern[]] := Visualization`VectorFields`VectorFieldVectorLineStyle[Visualization`VectorFields`VectorFieldsDump`plot, Visualization`VectorFields`VectorFieldsDump`pstyle, {Visualization`VectorFields`VectorFieldsDump`style}, Visualization`VectorFields`VectorFieldsDump`pg, Visualization`VectorFields`VectorFieldsDump`o]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {VectorScale -> Automatic, StreamScale -> {None, Automatic, Automatic, Automatic}, Visualization`VectorFields`VectorFieldPlotParameters -> Automatic, Method -> VectorStyle}\nAttributes: {}\nFullName: Visualization`VectorFields`VectorFieldVectorLineStyle",
	"Graphics`Glyphs`VectorGlyphAdjust":"ObjectType: Symbol\nUsage: Graphics`Glyphs`VectorGlyphAdjust\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Glyphs`VectorGlyphAdjust[{{Graphics`Glyphs`GlyphsDump`x0_, Graphics`Glyphs`GlyphsDump`y0_}, {Graphics`Glyphs`GlyphsDump`x1_, Graphics`Glyphs`GlyphsDump`y1_}}, Graphics`Glyphs`GlyphsDump`ar_] := Module[{Graphics`Glyphs`GlyphsDump`vec, Graphics`Glyphs`GlyphsDump`center, Graphics`Glyphs`GlyphsDump`ucen, Graphics`Glyphs`GlyphsDump`length, Graphics`Glyphs`GlyphsDump`nx0, Graphics`Glyphs`GlyphsDump`ny0, Graphics`Glyphs`GlyphsDump`nx1, Graphics`Glyphs`GlyphsDump`ny1, Graphics`Glyphs`GlyphsDump`re, Graphics`Glyphs`GlyphsDump`nar}, Graphics`Glyphs`GlyphsDump`dbPrint[\"before: \", {{Graphics`Glyphs`GlyphsDump`x0, Graphics`Glyphs`GlyphsDump`y0}, {Graphics`Glyphs`GlyphsDump`x1, Graphics`Glyphs`GlyphsDump`y1}}]; Graphics`Glyphs`GlyphsDump`center = {(Graphics`Glyphs`GlyphsDump`x0 + Graphics`Glyphs`GlyphsDump`x1)\/2, (Graphics`Glyphs`GlyphsDump`y0 + Graphics`Glyphs`GlyphsDump`y1)\/2}; Graphics`Glyphs`GlyphsDump`vec = {Graphics`Glyphs`GlyphsDump`x1 - Graphics`Glyphs`GlyphsDump`x0, Graphics`Glyphs`GlyphsDump`y1 - Graphics`Glyphs`GlyphsDump`y0}; Graphics`Glyphs`GlyphsDump`length = Norm[Graphics`Glyphs`GlyphsDump`vec]; Graphics`Glyphs`GlyphsDump`nar = If[-$MaxMachineNumber < Graphics`Glyphs`GlyphsDump`ar < $MaxMachineNumber, Abs[Graphics`Glyphs`GlyphsDump`ar], 1]; Graphics`Glyphs`GlyphsDump`vec = Graphics`Glyphs`GlyphsDump`length*Normalize[{Graphics`Glyphs`GlyphsDump`nar, 1}*Graphics`Glyphs`GlyphsDump`vec]; Graphics`Glyphs`GlyphsDump`ucen = -(Graphics`Glyphs`GlyphsDump`vec\/2); Graphics`Glyphs`GlyphsDump`vec = TranslationTransform[Graphics`Glyphs`GlyphsDump`ucen] \/@ {{0, 0}, Graphics`Glyphs`GlyphsDump`vec}; {{Graphics`Glyphs`GlyphsDump`nx0, Graphics`Glyphs`GlyphsDump`ny0}, {Graphics`Glyphs`GlyphsDump`nx1, Graphics`Glyphs`GlyphsDump`ny1}} = TranslationTransform[Graphics`Glyphs`GlyphsDump`center] \/@ Graphics`Glyphs`GlyphsDump`vec; Graphics`Glyphs`GlyphsDump`re = {{Graphics`Glyphs`GlyphsDump`nx0, (Graphics`Glyphs`GlyphsDump`ny0 + Graphics`Glyphs`GlyphsDump`ny1)\/2 - (Graphics`Glyphs`GlyphsDump`nar*(Graphics`Glyphs`GlyphsDump`ny1 - Graphics`Glyphs`GlyphsDump`ny0))\/2}, {Graphics`Glyphs`GlyphsDump`nx1, (Graphics`Glyphs`GlyphsDump`ny0 + Graphics`Glyphs`GlyphsDump`ny1)\/2 + (Graphics`Glyphs`GlyphsDump`nar*(Graphics`Glyphs`GlyphsDump`ny1 - Graphics`Glyphs`GlyphsDump`ny0))\/2}}; Graphics`Glyphs`GlyphsDump`dbPrint[\"after: \", Graphics`Glyphs`GlyphsDump`re]; Graphics`Glyphs`GlyphsDump`re]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Glyphs`VectorGlyphAdjust",
	"Developer`VectorInequality":"ObjectType: Symbol\nUsage: Developer`VectorInequality\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[Developer`VectorInequality[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Misc`\", {{Missing, _}, {Divisible, _}, {SeriesData, _}, {O, _}, {C, _}, {ConditionalExpression, _}, {VectorGreater, _}, {VectorGreaterEqual, _}, {VectorLess, _}, {VectorLessEqual, _}, {Developer`VectorInequality, _}, {InverseFunction, _}, {TagBox, HoldPattern[MakeExpression[TagBox[_, InverseFunction | {InverseFunction, __} | _Dataset`InterpretDataset, ___], _]]}, {AsynchronousTaskObject, _}, {EmbeddedHTML, _}, {File, _}, {URL, _}, {KroneckerDelta, _}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"KroneckerDeltaSeq\" | \"C\" | \"CTraditional\" | \"EmbeddedHTML\" | \"EmbeddedHTMLLink\" | \"FileArgument\" | \"URLArgument\" | \"NonNegativeConeString\" | \"SemidefiniteConeString\" | \"NormConeString\" | \"ExponentialConeString\" | \"DualExponentialConeString\" | \"PowerConeString\" | \"DualPowerConeString\" | \"NonNegativeConeList\" | \"SemidefiniteConeList\" | \"NormConeList\" | \"PowerConeList\" | \"DualPowerConeList\", ___], _]]}}, Hold[Missing, Divisible, SeriesData, O, C, ConditionalExpression, InverseFunction, TagBox, AsynchronousTaskObject, EmbeddedHTML, File, URL, TemplateBox, KroneckerDelta, VectorGreater, VectorGreaterEqual, VectorLess, VectorLessEqual, Developer`VectorInequality]]\nOptions: None\nAttributes: {}\nFullName: Developer`VectorInequality",
	"RandomProcesses`Simulation`VectorKloedenPlatenSchurz":"ObjectType: Symbol\nUsage: RandomProcesses`Simulation`VectorKloedenPlatenSchurz\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Simulation`VectorKloedenPlatenSchurz[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`t0_, RandomProcesses`SimulationDump`t1_, (RandomProcesses`SimulationDump`steps_Integer)?Positive}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts___] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] && Last[Dimensions[RandomProcesses`SimulationDump`bmat]] == 1 := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorKloedenPlatenSchurz[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, {RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`x0}, {RandomProcesses`SimulationDump`t, Range[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps]}, RandomProcesses`SimulationDump`repetitions, RandomProcesses`SimulationDump`opts]; {{RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps}, Last[RandomProcesses`SimulationDump`res]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nRandomProcesses`Simulation`VectorKloedenPlatenSchurz[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`timeGrid_List}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[]] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] && Last[Dimensions[RandomProcesses`SimulationDump`bmat]] == 1 := Module[{RandomProcesses`SimulationDump`l0, RandomProcesses`SimulationDump`l1, RandomProcesses`SimulationDump`l0l0, RandomProcesses`SimulationDump`l1l0, RandomProcesses`SimulationDump`l0l1, RandomProcesses`SimulationDump`l1l1, RandomProcesses`SimulationDump`l1l1l1, RandomProcesses`SimulationDump`dw, RandomProcesses`SimulationDump`du, RandomProcesses`SimulationDump`nfab, RandomProcesses`SimulationDump`d = Length[RandomProcesses`SimulationDump`x], RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`rvoptions, RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`zs, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`nfopts, RandomProcesses`SimulationDump`projFunc, RandomProcesses`SimulationDump`outFunc, RandomProcesses`SimulationDump`yc, RandomProcesses`SimulationDump`deltas, RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`calc, RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`tc}, RandomProcesses`SimulationDump`deltas = Differences[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`len = Length[RandomProcesses`SimulationDump`deltas]; RandomProcesses`SimulationDump`calc = RandomProcesses`SimulationDump`ParseCalculusOption[OptionValue[\"Calculus\"]]; RandomProcesses`SimulationDump`projFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`outFunc = Replace[OptionValue[\"OutputFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`nfopts = RandomProcesses`SimulationDump`FilterNFRules[{RandomProcesses`SimulationDump`opts}]; If[RandomProcesses`SimulationDump`calc === \"ItoCalculus\", StochasticCalculus`WithMemoization[RandomProcesses`SimulationDump`l0 = Together[StochasticCalculus`ItoL[0, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`x]]; RandomProcesses`SimulationDump`l1 = Together[StochasticCalculus`ItoL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`x]]; RandomProcesses`SimulationDump`l0l0 = Together[StochasticCalculus`ItoL[0, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l0]]; RandomProcesses`SimulationDump`l0l1 = Together[StochasticCalculus`ItoL[0, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l1]]; RandomProcesses`SimulationDump`l1l0 = Together[StochasticCalculus`ItoL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l0]]; RandomProcesses`SimulationDump`l1l1 = Together[StochasticCalculus`ItoL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l1]]; RandomProcesses`SimulationDump`l1l1l1 = Together[StochasticCalculus`ItoL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l1l1]]; ]; RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, {RandomProcesses`SimulationDump`dw, {}}, {RandomProcesses`SimulationDump`du, {}}}, Hold[Plus][RandomProcesses`SimulationDump`dt*RandomProcesses`SimulationDump`l0, Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`dw*RandomProcesses`SimulationDump`l1, (RandomProcesses`SimulationDump`dt^2*RandomProcesses`SimulationDump`l0l0)\/2, RandomProcesses`SimulationDump`l0l1*(RandomProcesses`SimulationDump`dw - RandomProcesses`SimulationDump`du)*Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`l1l0*RandomProcesses`SimulationDump`du*Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`dt, (RandomProcesses`SimulationDump`l1l1*RandomProcesses`SimulationDump`dt*(RandomProcesses`SimulationDump`dw^2 - 1))\/2, (RandomProcesses`SimulationDump`dt*Sqrt[RandomProcesses`SimulationDump`dt]*(RandomProcesses`SimulationDump`dw^2\/3 - 1)*RandomProcesses`SimulationDump`dw*RandomProcesses`SimulationDump`l1l1l1)\/2], {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, 2}, RandomProcesses`SimulationDump`nfopts] \/. Hold[Plus] -> Plus; , StochasticCalculus`WithMemoization[RandomProcesses`SimulationDump`l0 = Together[StochasticCalculus`StratonovichL[0, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`x]]; RandomProcesses`SimulationDump`l1 = Together[StochasticCalculus`StratonovichL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`x]]; RandomProcesses`SimulationDump`l0l0 = Together[StochasticCalculus`StratonovichL[0, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l0]]; RandomProcesses`SimulationDump`l0l1 = Together[StochasticCalculus`StratonovichL[0, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l1]]; RandomProcesses`SimulationDump`l1l0 = Together[StochasticCalculus`StratonovichL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l0]]; RandomProcesses`SimulationDump`l1l1 = Together[StochasticCalculus`StratonovichL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l1]]; RandomProcesses`SimulationDump`l1l1l1 = Together[StochasticCalculus`StratonovichL[1, {RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}][RandomProcesses`SimulationDump`l1l1]]; ]; RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, {RandomProcesses`SimulationDump`dw, {}}, {RandomProcesses`SimulationDump`du, {}}}, Hold[Plus][RandomProcesses`SimulationDump`dt*RandomProcesses`SimulationDump`l0, Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`dw*RandomProcesses`SimulationDump`l1, (RandomProcesses`SimulationDump`dt^2*RandomProcesses`SimulationDump`l0l0)\/2, RandomProcesses`SimulationDump`l0l1*(RandomProcesses`SimulationDump`dw - RandomProcesses`SimulationDump`du)*Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`l1l0*RandomProcesses`SimulationDump`du*Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`l1l1*RandomProcesses`SimulationDump`dt*(RandomProcesses`SimulationDump`dw^2\/2), (RandomProcesses`SimulationDump`dt*Sqrt[RandomProcesses`SimulationDump`dt]*(RandomProcesses`SimulationDump`dw^2\/2)*RandomProcesses`SimulationDump`dw*RandomProcesses`SimulationDump`l1l1l1)\/3], {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, 2}, RandomProcesses`SimulationDump`nfopts] \/. Hold[Plus] -> Plus; ]; RandomProcesses`SimulationDump`rvoptions = FilterRules[{RandomProcesses`SimulationDump`opts}, {WorkingPrecision}]; RandomProcesses`SimulationDump`bag = Internal`Bag[]; RandomProcesses`SimulationDump`yc = RandomProcesses`SimulationDump`outFunc[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0]; If[VectorQ[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = Length[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = 0]; If[Quiet[VectorQ[RandomProcesses`SimulationDump`nfab[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0, 0.1, {0.01, -0.02}], NumberQ]] =!= True, Return[{$Failed, $Failed}]]; Do[RandomProcesses`SimulationDump`zs = RandomVariate[BinormalDistribution[{0, 0}, {1, 1\/Sqrt[3]}, Sqrt[3]\/2], RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`rvoptions]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0; Do[RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k + 1]]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfab[RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]]]]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1], {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}]; , {RandomProcesses`SimulationDump`repetitions}]; {{RandomProcesses`SimulationDump`timeGrid}, RandomProcesses`SimulationDump`FromBagToPartitionedList[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`len]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, ErrorReturn -> Automatic, Evaluated -> Automatic, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, SampleArgument -> False, StepMonitor -> None, WorkingPrecision -> MachinePrecision, Calculus -> ItoCalculus, ProjectionFunction -> Automatic, OutputFunction -> Automatic, CommutativeNoise -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Simulation`VectorKloedenPlatenSchurz",
	"Visualization`VectorFields`VectorLengthFunction":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorLengthFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`VectorFields`VectorLengthFunction",
	"RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceArray":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceArray[RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, {RandomProcesses`TimeSeriesCommonDump`s_Integer, RandomProcesses`TimeSeriesCommonDump`t_Integer}] := Module[{RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`tf, RandomProcesses`TimeSeriesCommonDump`p = Length[RandomProcesses`TimeSeriesCommonDump`avec], RandomProcesses`TimeSeriesCommonDump`q = Length[RandomProcesses`TimeSeriesCommonDump`bvec], RandomProcesses`TimeSeriesCommonDump`dim = Length[RandomProcesses`TimeSeriesCommonDump`cov], RandomProcesses`TimeSeriesCommonDump`maxst = Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t], RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`stmax = Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t], RandomProcesses`TimeSeriesCommonDump`stmin = Min[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t], RandomProcesses`TimeSeriesCommonDump`diagcovm, RandomProcesses`TimeSeriesCommonDump`offdiagcovm}, RandomProcesses`TimeSeriesCommonDump`tf = Inverse[IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`p}] . (-RandomProcesses`TimeSeriesCommonDump`avec)] . (IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`q}] . RandomProcesses`TimeSeriesCommonDump`bvec); RandomProcesses`TimeSeriesCommonDump`alist = Transpose[Map[RandomProcesses`TimeSeriesCommonDump`iCoefficientList[Series[#1, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`maxst}], RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`maxst + 1] & , RandomProcesses`TimeSeriesCommonDump`tf, {2}], {2, 3, 1}]; RandomProcesses`TimeSeriesCommonDump`diagcovm = SparseArray[Block[{RandomProcesses`TimeSeriesCommonDump`len = 1 + RandomProcesses`TimeSeriesCommonDump`stmin}, Flatten[Table[{RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`j}, {RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`len}, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`dim}, {RandomProcesses`TimeSeriesCommonDump`j, RandomProcesses`TimeSeriesCommonDump`dim}], 2] -> Flatten[Accumulate[MapThread[Dot[#1 . RandomProcesses`TimeSeriesCommonDump`cov . #2] & , {Take[RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`len], Transpose \/@ Take[RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`len]}]]]], {RandomProcesses`TimeSeriesCommonDump`s + 1, RandomProcesses`TimeSeriesCommonDump`t + 1, RandomProcesses`TimeSeriesCommonDump`dim, RandomProcesses`TimeSeriesCommonDump`dim}]; RandomProcesses`TimeSeriesCommonDump`offdiagcovm = SparseArray[Table[Block[{RandomProcesses`TimeSeriesCommonDump`len = 1 + Min[RandomProcesses`TimeSeriesCommonDump`stmin, RandomProcesses`TimeSeriesCommonDump`stmax - RandomProcesses`TimeSeriesCommonDump`h]}, If[RandomProcesses`TimeSeriesCommonDump`s <= RandomProcesses`TimeSeriesCommonDump`t, Flatten[Table[{RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`h + RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`j}, {RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`len}, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`dim}, {RandomProcesses`TimeSeriesCommonDump`j, RandomProcesses`TimeSeriesCommonDump`dim}], 2], Flatten[Table[{RandomProcesses`TimeSeriesCommonDump`h + RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`j}, {RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`len}, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`dim}, {RandomProcesses`TimeSeriesCommonDump`j, RandomProcesses`TimeSeriesCommonDump`dim}], 2]] -> Flatten[Accumulate[MapThread[Dot[#1 . RandomProcesses`TimeSeriesCommonDump`cov . #2] & , If[RandomProcesses`TimeSeriesCommonDump`s <= RandomProcesses`TimeSeriesCommonDump`t, {Take[RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`len], Transpose \/@ Take[RandomProcesses`TimeSeriesCommonDump`alist, {RandomProcesses`TimeSeriesCommonDump`h + 1, RandomProcesses`TimeSeriesCommonDump`len + RandomProcesses`TimeSeriesCommonDump`h}]}, {Take[RandomProcesses`TimeSeriesCommonDump`alist, {RandomProcesses`TimeSeriesCommonDump`h + 1, RandomProcesses`TimeSeriesCommonDump`len + RandomProcesses`TimeSeriesCommonDump`h}], Transpose \/@ Take[RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`len]}]]]]], {RandomProcesses`TimeSeriesCommonDump`h, 1, RandomProcesses`TimeSeriesCommonDump`stmax}], {RandomProcesses`TimeSeriesCommonDump`s + 1, RandomProcesses`TimeSeriesCommonDump`t + 1, RandomProcesses`TimeSeriesCommonDump`dim, RandomProcesses`TimeSeriesCommonDump`dim}]; ArrayReshape[Normal[Which[RandomProcesses`TimeSeriesCommonDump`s == RandomProcesses`TimeSeriesCommonDump`t, Transpose[RandomProcesses`TimeSeriesCommonDump`offdiagcovm, {2, 1, 4, 3}] + RandomProcesses`TimeSeriesCommonDump`diagcovm + RandomProcesses`TimeSeriesCommonDump`offdiagcovm, RandomProcesses`TimeSeriesCommonDump`s < RandomProcesses`TimeSeriesCommonDump`t, SparseArray[Transpose[Take[RandomProcesses`TimeSeriesCommonDump`offdiagcovm, RandomProcesses`TimeSeriesCommonDump`stmin + 1, RandomProcesses`TimeSeriesCommonDump`stmin + 1], {2, 1, 4, 3}], {RandomProcesses`TimeSeriesCommonDump`s + 1, RandomProcesses`TimeSeriesCommonDump`t + 1, RandomProcesses`TimeSeriesCommonDump`dim, RandomProcesses`TimeSeriesCommonDump`dim}] + RandomProcesses`TimeSeriesCommonDump`diagcovm + RandomProcesses`TimeSeriesCommonDump`offdiagcovm, RandomProcesses`TimeSeriesCommonDump`s > RandomProcesses`TimeSeriesCommonDump`t, SparseArray[Transpose[Take[RandomProcesses`TimeSeriesCommonDump`offdiagcovm, RandomProcesses`TimeSeriesCommonDump`stmin + 1, RandomProcesses`TimeSeriesCommonDump`stmin + 1], {2, 1, 4, 3}], {RandomProcesses`TimeSeriesCommonDump`s + 1, RandomProcesses`TimeSeriesCommonDump`t + 1, RandomProcesses`TimeSeriesCommonDump`dim, RandomProcesses`TimeSeriesCommonDump`dim}] + RandomProcesses`TimeSeriesCommonDump`diagcovm + RandomProcesses`TimeSeriesCommonDump`offdiagcovm]], {RandomProcesses`TimeSeriesCommonDump`s + 1, RandomProcesses`TimeSeriesCommonDump`t + 1, RandomProcesses`TimeSeriesCommonDump`dim, RandomProcesses`TimeSeriesCommonDump`dim}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceArray",
	"RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceDirectDefinition":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceDirectDefinition\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceDirectDefinition[RandomProcesses`TimeSeriesCommonDump`aparams_, RandomProcesses`TimeSeriesCommonDump`bparams_, RandomProcesses`TimeSeriesCommonDump`covm_, {(RandomProcesses`TimeSeriesCommonDump`s_Integer)?NonNegative, (RandomProcesses`TimeSeriesCommonDump`t_Integer)?NonNegative}, RandomProcesses`TimeSeriesCommonDump`y0_, RandomProcesses`TimeSeriesCommonDump`e0_] := Module[{RandomProcesses`TimeSeriesCommonDump`eq, RandomProcesses`TimeSeriesCommonDump`yvar, RandomProcesses`TimeSeriesCommonDump`evar, RandomProcesses`TimeSeriesCommonDump`evec, RandomProcesses`TimeSeriesCommonDump`yvec, RandomProcesses`TimeSeriesCommonDump`dim = Length[RandomProcesses`TimeSeriesCommonDump`covm], RandomProcesses`TimeSeriesCommonDump`k, RandomProcesses`TimeSeriesCommonDump`yvaric, RandomProcesses`TimeSeriesCommonDump`evaric}, RandomProcesses`TimeSeriesCommonDump`yvec = Array[RandomProcesses`TimeSeriesCommonDump`yvar[#1][RandomProcesses`TimeSeriesCommonDump`k] & , RandomProcesses`TimeSeriesCommonDump`dim]; RandomProcesses`TimeSeriesCommonDump`evec = Array[RandomProcesses`TimeSeriesCommonDump`evar[#1][RandomProcesses`TimeSeriesCommonDump`k] & , RandomProcesses`TimeSeriesCommonDump`dim]; RandomProcesses`TimeSeriesCommonDump`yvaric = PadLeft[RandomProcesses`TimeSeriesCommonDump`y0, Length[RandomProcesses`TimeSeriesCommonDump`aparams], ConstantArray[0, {1, RandomProcesses`TimeSeriesCommonDump`dim}]]; RandomProcesses`TimeSeriesCommonDump`evaric = PadLeft[RandomProcesses`TimeSeriesCommonDump`e0, Length[RandomProcesses`TimeSeriesCommonDump`bparams], ConstantArray[0, {1, RandomProcesses`TimeSeriesCommonDump`dim}]]; RandomProcesses`TimeSeriesCommonDump`eq = Thread[RandomProcesses`TimeSeriesCommonDump`yvec == RandomProcesses`TimeSeriesCommonDump`matDot[RandomProcesses`TimeSeriesCommonDump`aparams, Table[RandomProcesses`TimeSeriesCommonDump`yvec \/. RandomProcesses`TimeSeriesCommonDump`k -> RandomProcesses`TimeSeriesCommonDump`k - RandomProcesses`TimeSeriesCommonDump`d, {RandomProcesses`TimeSeriesCommonDump`d, 1, Length[RandomProcesses`TimeSeriesCommonDump`aparams]}]] + RandomProcesses`TimeSeriesCommonDump`evec + RandomProcesses`TimeSeriesCommonDump`matDot[RandomProcesses`TimeSeriesCommonDump`bparams, Table[RandomProcesses`TimeSeriesCommonDump`evec \/. RandomProcesses`TimeSeriesCommonDump`k -> RandomProcesses`TimeSeriesCommonDump`k - RandomProcesses`TimeSeriesCommonDump`d, {RandomProcesses`TimeSeriesCommonDump`d, 1, Length[RandomProcesses`TimeSeriesCommonDump`bparams]}]]]; RandomProcesses`TimeSeriesCommonDump`eq = Flatten[Table[RandomProcesses`TimeSeriesCommonDump`eq, {RandomProcesses`TimeSeriesCommonDump`k, 0, Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t]}] \/. {RandomProcesses`TimeSeriesCommonDump`yvar[RandomProcesses`TimeSeriesCommonDump`i_][(RandomProcesses`TimeSeriesCommonDump`m_)?Negative] :> RandomProcesses`TimeSeriesCommonDump`yvaric[[RandomProcesses`TimeSeriesCommonDump`m,RandomProcesses`TimeSeriesCommonDump`i]], RandomProcesses`TimeSeriesCommonDump`evar[RandomProcesses`TimeSeriesCommonDump`i_][(RandomProcesses`TimeSeriesCommonDump`m_)?Negative] :> RandomProcesses`TimeSeriesCommonDump`evaric[[RandomProcesses`TimeSeriesCommonDump`m,RandomProcesses`TimeSeriesCommonDump`i]]}]; Expectation[Expand[KroneckerProduct[RandomProcesses`TimeSeriesCommonDump`yvec \/. RandomProcesses`TimeSeriesCommonDump`k -> RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`yvec \/. RandomProcesses`TimeSeriesCommonDump`k -> RandomProcesses`TimeSeriesCommonDump`t] \/. First[Solve[RandomProcesses`TimeSeriesCommonDump`eq, Flatten[Table[RandomProcesses`TimeSeriesCommonDump`yvec, {RandomProcesses`TimeSeriesCommonDump`k, 0, Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t]}]]]]], Distributed[Flatten[Table[RandomProcesses`TimeSeriesCommonDump`evec, {RandomProcesses`TimeSeriesCommonDump`k, 0, Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t]}]], ProductDistribution[{MultinormalDistribution[Table[0, {RandomProcesses`TimeSeriesCommonDump`dim}], RandomProcesses`TimeSeriesCommonDump`covm], Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t] + 1}]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceDirectDefinition",
	"RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction[RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, {RandomProcesses`TimeSeriesCommonDump`s_Integer, RandomProcesses`TimeSeriesCommonDump`t_Integer}] := Module[{RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`tf, RandomProcesses`TimeSeriesCommonDump`p = Length[RandomProcesses`TimeSeriesCommonDump`avec], RandomProcesses`TimeSeriesCommonDump`q = Length[RandomProcesses`TimeSeriesCommonDump`bvec], RandomProcesses`TimeSeriesCommonDump`dim = Length[RandomProcesses`TimeSeriesCommonDump`cov], RandomProcesses`TimeSeriesCommonDump`maxst = Max[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t], RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`rmax = Min[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t] + 1, RandomProcesses`TimeSeriesCommonDump`covm}, RandomProcesses`TimeSeriesCommonDump`tf = Inverse[IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`p}] . (-RandomProcesses`TimeSeriesCommonDump`avec)] . (IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`q}] . RandomProcesses`TimeSeriesCommonDump`bvec); RandomProcesses`TimeSeriesCommonDump`alist = Transpose[Map[RandomProcesses`TimeSeriesCommonDump`iCoefficientList[Series[#1, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`maxst}], RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`maxst + 1] & , RandomProcesses`TimeSeriesCommonDump`tf, {2}], {2, 3, 1}]; RandomProcesses`TimeSeriesCommonDump`covm = Total[MapThread[Dot[#1 . RandomProcesses`TimeSeriesCommonDump`cov . #2] & , {Take[RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`rmax], Transpose \/@ Take[RandomProcesses`TimeSeriesCommonDump`alist, -RandomProcesses`TimeSeriesCommonDump`rmax]}]]; If[RandomProcesses`TimeSeriesCommonDump`s > RandomProcesses`TimeSeriesCommonDump`t, Transpose[RandomProcesses`TimeSeriesCommonDump`covm], RandomProcesses`TimeSeriesCommonDump`covm]]\nRandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction[RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, {RandomProcesses`TimeSeriesCommonDump`s_, RandomProcesses`TimeSeriesCommonDump`t_}] \/; (RandomProcesses`TimeSeriesCommonDump`avec === {} || ArrayQ[RandomProcesses`TimeSeriesCommonDump`avec, 3, Internal`RealValuedNumberQ]) && (RandomProcesses`TimeSeriesCommonDump`bvec === {} || ArrayQ[RandomProcesses`TimeSeriesCommonDump`bvec, 3, Internal`RealValuedNumberQ]) && MatrixQ[RandomProcesses`TimeSeriesCommonDump`cov, Internal`RealValuedNumberQ] := Module[{RandomProcesses`TimeSeriesCommonDump`pr, RandomProcesses`TimeSeriesCommonDump`ratcov}, RandomProcesses`TimeSeriesCommonDump`pr = Internal`PrecAccur[{RandomProcesses`TimeSeriesCommonDump`avec, RandomProcesses`TimeSeriesCommonDump`bvec, RandomProcesses`TimeSeriesCommonDump`cov}]; (RandomProcesses`TimeSeriesCommonDump`ratcov = Rationalize[RandomProcesses`TimeSeriesCommonDump`cov, 0]; RandomProcesses`TimeSeriesCommonDump`ratcov = Statistics`Library`VectorToHermitianMatrix[Statistics`Library`UpperTriangularMatrixToVector[RandomProcesses`TimeSeriesCommonDump`ratcov], Diagonal[RandomProcesses`TimeSeriesCommonDump`ratcov], Length[RandomProcesses`TimeSeriesCommonDump`ratcov]]; RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction[Rationalize[RandomProcesses`TimeSeriesCommonDump`avec, 0], Rationalize[RandomProcesses`TimeSeriesCommonDump`bvec, 0], RandomProcesses`TimeSeriesCommonDump`ratcov, {RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t}]) \/; RandomProcesses`TimeSeriesCommonDump`pr < Infinity]\nRandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction[RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, {RandomProcesses`TimeSeriesCommonDump`s_, RandomProcesses`TimeSeriesCommonDump`t_}] := Module[{RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`tf, RandomProcesses`TimeSeriesCommonDump`p = Length[RandomProcesses`TimeSeriesCommonDump`avec], RandomProcesses`TimeSeriesCommonDump`q = Length[RandomProcesses`TimeSeriesCommonDump`bvec], RandomProcesses`TimeSeriesCommonDump`dim = Length[RandomProcesses`TimeSeriesCommonDump`cov], RandomProcesses`TimeSeriesCommonDump`denmat, RandomProcesses`TimeSeriesCommonDump`src, RandomProcesses`TimeSeriesCommonDump`alist, RandomProcesses`TimeSeriesCommonDump`alen, RandomProcesses`TimeSeriesCommonDump`h = Abs[Together[RandomProcesses`TimeSeriesCommonDump`t - RandomProcesses`TimeSeriesCommonDump`s]], RandomProcesses`TimeSeriesCommonDump`n, RandomProcesses`TimeSeriesCommonDump`hdr, RandomProcesses`TimeSeriesCommonDump`detpoly, RandomProcesses`TimeSeriesCommonDump`fp, RandomProcesses`TimeSeriesCommonDump`sric, RandomProcesses`TimeSeriesCommonDump`y, RandomProcesses`TimeSeriesCommonDump`res}, RandomProcesses`TimeSeriesCommonDump`denmat = IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`p}] . (-RandomProcesses`TimeSeriesCommonDump`avec); RandomProcesses`TimeSeriesCommonDump`detpoly = Det[RandomProcesses`TimeSeriesCommonDump`denmat]; RandomProcesses`TimeSeriesCommonDump`fp = TimeConstrained[FactorList[RandomProcesses`TimeSeriesCommonDump`detpoly], 0.2, {{RandomProcesses`TimeSeriesCommonDump`detpoly, 1}}]; RandomProcesses`TimeSeriesCommonDump`src = RandomProcesses`TimeSeriesCommonDump`SumOfProductsRecurrenceCoefficients[-Rest[CoefficientList[RandomProcesses`TimeSeriesCommonDump`detpoly, RandomProcesses`TimeSeriesCommonDump`z]]]; RandomProcesses`TimeSeriesCommonDump`tf = Together[LinearSolve[RandomProcesses`TimeSeriesCommonDump`denmat, IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`q}] . RandomProcesses`TimeSeriesCommonDump`bvec]]; RandomProcesses`TimeSeriesCommonDump`hdr = Refine[Function[RandomProcesses`TimeSeriesCommonDump`e, RandomProcesses`TimeSeriesCommon`RFSeriesCoefficient[RandomProcesses`TimeSeriesCommonDump`e, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`n}], Listable][RandomProcesses`TimeSeriesCommonDump`tf], RandomProcesses`TimeSeriesCommonDump`n >= 0]; If[Internal`LiterallyOccurringQ[RandomProcesses`TimeSeriesCommonDump`hdr, {RandomProcesses`TimeSeriesCommonDump`z, $Failed}], Return[$Failed]]; RandomProcesses`TimeSeriesCommonDump`alen = Max[Max[RandomProcesses`TimeSeriesCommonDump`p, RandomProcesses`TimeSeriesCommonDump`q]*RandomProcesses`TimeSeriesCommonDump`dim, Length[RandomProcesses`TimeSeriesCommonDump`src] - 1]; RandomProcesses`TimeSeriesCommonDump`alist = Transpose[Map[RandomProcesses`TimeSeriesCommonDump`iCoefficientList[Series[#1, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`alen}], RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`alen + 1] & , RandomProcesses`TimeSeriesCommonDump`tf, {2}], {2, 3, 1}]; RandomProcesses`TimeSeriesCommonDump`sric = Accumulate[MapThread[Dot[#1 . RandomProcesses`TimeSeriesCommonDump`cov . #2] & , {RandomProcesses`TimeSeriesCommonDump`alist, Transpose \/@ Table[RandomProcesses`TimeSeriesCommonDump`hdr, {RandomProcesses`TimeSeriesCommonDump`n, RandomProcesses`TimeSeriesCommonDump`h, RandomProcesses`TimeSeriesCommonDump`h + RandomProcesses`TimeSeriesCommonDump`alen}]}]]; Catch[Block[{RandomProcesses`TimeSeriesCommonDump`dr}, RandomProcesses`TimeSeriesCommonDump`res = Table[RandomProcesses`TimeSeriesCommonDump`dr = RandomProcesses`TimeSeriesCommonDump`iDifferenceRoot[{RandomProcesses`TimeSeriesCommonDump`y, RandomProcesses`TimeSeriesCommonDump`n}, RandomProcesses`TimeSeriesCommonDump`src . Table[RandomProcesses`TimeSeriesCommonDump`y[RandomProcesses`TimeSeriesCommonDump`n + RandomProcesses`TimeSeriesCommonDump`k - 1], {RandomProcesses`TimeSeriesCommonDump`k, Length[RandomProcesses`TimeSeriesCommonDump`src]}], RandomProcesses`TimeSeriesCommonDump`sric[[All,RandomProcesses`TimeSeriesCommonDump`i,RandomProcesses`TimeSeriesCommonDump`j]]]; If[ !System`Private`ValidQ[RandomProcesses`TimeSeriesCommonDump`dr], Throw[$Failed, \"EarlyExit\"]]; RandomProcesses`TimeSeriesCommonDump`dr, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`dim}, {RandomProcesses`TimeSeriesCommonDump`j, RandomProcesses`TimeSeriesCommonDump`dim}]; ], \"EarlyExit\", (RandomProcesses`TimeSeriesCommonDump`res = $Failed) & ]; If[RandomProcesses`TimeSeriesCommonDump`res === $Failed, Return[$Failed]]; RandomProcesses`TimeSeriesCommonDump`PWPostProcess[Map[#1[Min[RandomProcesses`TimeSeriesCommonDump`s, RandomProcesses`TimeSeriesCommonDump`t]] & , RandomProcesses`TimeSeriesCommonDump`res, {2}], RandomProcesses`TimeSeriesCommonDump`t - RandomProcesses`TimeSeriesCommonDump`s]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`VectorLinearModelCovarianceFunction",
	"RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanFunction":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanFunction[RandomProcesses`TimeSeriesCommonDump`const_, RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, RandomProcesses`TimeSeriesCommonDump`t_, RandomProcesses`TimeSeriesCommonDump`istate_:{}] := Module[{RandomProcesses`TimeSeriesCommonDump`gf, RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`mf}, RandomProcesses`TimeSeriesCommonDump`gf = RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanGF[RandomProcesses`TimeSeriesCommonDump`const, RandomProcesses`TimeSeriesCommonDump`avec, RandomProcesses`TimeSeriesCommonDump`bvec, RandomProcesses`TimeSeriesCommonDump`cov, RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`istate]; RandomProcesses`TimeSeriesCommonDump`mf = If[IntegerQ[RandomProcesses`TimeSeriesCommonDump`t], (SeriesCoefficient[#1, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`t}] & ) \/@ RandomProcesses`TimeSeriesCommonDump`gf, (Refine[RandomProcesses`TimeSeriesCommon`RFSeriesCoefficient[#1, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`t}], RandomProcesses`TimeSeriesCommonDump`t >= 0] & ) \/@ RandomProcesses`TimeSeriesCommonDump`gf]; If[Internal`LiterallyAbsentQ[RandomProcesses`TimeSeriesCommonDump`mf, {RandomProcesses`TimeSeriesCommonDump`z, $Failed}], RandomProcesses`TimeSeriesCommonDump`mf, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanFunction",
	"RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanGF":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanGF\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanGF[RandomProcesses`TimeSeriesCommonDump`const_, RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, RandomProcesses`TimeSeriesCommonDump`z_, RandomProcesses`TimeSeriesCommonDump`istate_:{}] := Module[{RandomProcesses`TimeSeriesCommonDump`p, RandomProcesses`TimeSeriesCommonDump`q, RandomProcesses`TimeSeriesCommonDump`maxpq, RandomProcesses`TimeSeriesCommonDump`y0, RandomProcesses`TimeSeriesCommonDump`gf, RandomProcesses`TimeSeriesCommonDump`den, RandomProcesses`TimeSeriesCommonDump`dim = Length[RandomProcesses`TimeSeriesCommonDump`const], RandomProcesses`TimeSeriesCommonDump`rhs}, RandomProcesses`TimeSeriesCommonDump`p = Length[RandomProcesses`TimeSeriesCommonDump`avec]; RandomProcesses`TimeSeriesCommonDump`q = Length[RandomProcesses`TimeSeriesCommonDump`bvec]; RandomProcesses`TimeSeriesCommonDump`maxpq = Max[RandomProcesses`TimeSeriesCommonDump`p, RandomProcesses`TimeSeriesCommonDump`q]; If[TemporalData`TemporalDataQ[RandomProcesses`TimeSeriesCommonDump`istate], RandomProcesses`TimeSeriesCommonDump`y0 = PadLeft[RandomProcesses`TimeSeriesCommonDump`istate[\"PathStates\"], RandomProcesses`TimeSeriesCommonDump`p, {0*RandomProcesses`TimeSeriesCommonDump`const}], RandomProcesses`TimeSeriesCommonDump`y0 = PadLeft[RandomProcesses`TimeSeriesCommonDump`istate, RandomProcesses`TimeSeriesCommonDump`p, {0*RandomProcesses`TimeSeriesCommonDump`const}]]; RandomProcesses`TimeSeriesCommonDump`den = IdentityMatrix[RandomProcesses`TimeSeriesCommonDump`dim] + Table[RandomProcesses`TimeSeriesCommonDump`z^RandomProcesses`TimeSeriesCommonDump`i, {RandomProcesses`TimeSeriesCommonDump`i, RandomProcesses`TimeSeriesCommonDump`p}] . (-RandomProcesses`TimeSeriesCommonDump`avec); RandomProcesses`TimeSeriesCommonDump`rhs = RandomProcesses`TimeSeriesCommonDump`const\/(1 - RandomProcesses`TimeSeriesCommonDump`z) + If[RandomProcesses`TimeSeriesCommonDump`p == 0 || RandomProcesses`TimeSeriesCommonDump`istate === {}, 0*RandomProcesses`TimeSeriesCommonDump`const, Total[MapThread[Dot, {FoldList[#1*RandomProcesses`TimeSeriesCommonDump`z + #2 & , Last[RandomProcesses`TimeSeriesCommonDump`avec], Take[RandomProcesses`TimeSeriesCommonDump`avec, {-2, 1, -1}]], RandomProcesses`TimeSeriesCommonDump`y0}]]]; RandomProcesses`TimeSeriesCommonDump`gf = LinearSolve[RandomProcesses`TimeSeriesCommonDump`den, RandomProcesses`TimeSeriesCommonDump`rhs]; If[Precision[RandomProcesses`TimeSeriesCommonDump`gf] < Infinity && Quiet[Internal`LiterallyOccurringQ[RandomProcesses`TimeSeriesCommonDump`gf \/. RandomProcesses`TimeSeriesCommonDump`z -> 0, {Indeterminate, DirectedInfinity}]], RandomProcesses`TimeSeriesCommonDump`gf = Inverse[RandomProcesses`TimeSeriesCommonDump`den] . RandomProcesses`TimeSeriesCommonDump`rhs; ]; RandomProcesses`TimeSeriesCommonDump`gf]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanGF",
	"RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanList":"ObjectType: Symbol\nUsage: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanList[RandomProcesses`TimeSeriesCommonDump`const_, RandomProcesses`TimeSeriesCommonDump`avec_, RandomProcesses`TimeSeriesCommonDump`bvec_, RandomProcesses`TimeSeriesCommonDump`cov_, (RandomProcesses`TimeSeriesCommonDump`t_Integer)?NonNegative, RandomProcesses`TimeSeriesCommonDump`istate_:{}] := Module[{RandomProcesses`TimeSeriesCommonDump`gf, RandomProcesses`TimeSeriesCommonDump`z}, RandomProcesses`TimeSeriesCommonDump`gf = RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanGF[RandomProcesses`TimeSeriesCommonDump`const, RandomProcesses`TimeSeriesCommonDump`avec, RandomProcesses`TimeSeriesCommonDump`bvec, RandomProcesses`TimeSeriesCommonDump`cov, RandomProcesses`TimeSeriesCommonDump`z, RandomProcesses`TimeSeriesCommonDump`istate]; RandomProcesses`TimeSeriesCommonDump`gf = (RandomProcesses`TimeSeriesCommonDump`SeriesDataCoefficientList[Series[#1, {RandomProcesses`TimeSeriesCommonDump`z, 0, RandomProcesses`TimeSeriesCommonDump`t}] + SeriesData[RandomProcesses`TimeSeriesCommonDump`z, 0, {}, RandomProcesses`TimeSeriesCommonDump`t + 1, RandomProcesses`TimeSeriesCommonDump`t + 1, 1]] & ) \/@ RandomProcesses`TimeSeriesCommonDump`gf; If[MatrixQ[RandomProcesses`TimeSeriesCommonDump`gf], Transpose[RandomProcesses`TimeSeriesCommonDump`gf], $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`TimeSeriesCommon`VectorLinearModelMeanList",
	"Charting`VectorMarkerQ":"ObjectType: Symbol\nUsage: Charting`VectorMarkerQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`VectorMarkerQ[(System`VectorPlotsDump`marker_String)?Charting`VectorMarkerStringQ] := True\nCharting`VectorMarkerQ[Placed[(System`VectorPlotsDump`marker_String)?Charting`VectorMarkerStringQ, \"Right\" | \"Center\" | \"Left\" | \"Start\" | \"Middle\" | \"End\"]] := True\nCharting`VectorMarkerQ[Placed[System`VectorPlotsDump`marker_ \/; VectorQ[System`VectorPlotsDump`marker, Charting`VectorMarkerStringQ], \"Right\" | \"Center\" | \"Left\" | \"Start\" | \"Middle\" | \"End\"]] := True\nCharting`VectorMarkerQ[Placed[System`VectorPlotsDump`marker_, System`VectorPlotsDump`pos_Symbol]] := Charting`VectorMarkerQ[Placed[System`VectorPlotsDump`marker, SymbolName[System`VectorPlotsDump`pos]]]\nCharting`VectorMarkerQ[System`VectorPlotsDump`marker_ \/; VectorQ[System`VectorPlotsDump`marker, Charting`VectorMarkerQ]] := True\nCharting`VectorMarkerQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`VectorMarkerQ",
	"Charting`VectorMarkerStringQ":"ObjectType: Symbol\nUsage: Charting`VectorMarkerStringQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`VectorMarkerStringQ[Charting`s_String] := MemberQ[{\"Arrow\", \"PinDart\", \"Dart\", \"CircleArrow\", \"Dot\", \"DotArrow\", \"Pointer\", \"BackwardPointer\", \"Drop\", \"Paddle\", \"Box\", \"Segment\", \"DoubleDart\", \"ArrowArrow\", \"DotDot\", \"BarDot\", \"Spindle\", \"Toothpick\", \"Circle\", \"Disk\", \"Arrow3D\", \"Arrow2D\", \"Tube\", \"Cone\"}, Charting`s]\nCharting`VectorMarkerStringQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`VectorMarkerStringQ",
	"RandomProcesses`Simulation`VectorMilstein":"ObjectType: Symbol\nUsage: RandomProcesses`Simulation`VectorMilstein\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Simulation`VectorMilstein[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`t0_, RandomProcesses`SimulationDump`t1_, (RandomProcesses`SimulationDump`steps_Integer)?Positive}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts___] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorMilstein[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, {RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`x0}, {RandomProcesses`SimulationDump`t, Range[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps]}, RandomProcesses`SimulationDump`repetitions, RandomProcesses`SimulationDump`opts]; {{RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps}, Last[RandomProcesses`SimulationDump`res]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nRandomProcesses`Simulation`VectorMilstein[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`timeGrid_List}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[{RandomProcesses`Simulation`VectorMilstein, \"DiffusionDerivatives\" -> Automatic}]] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`nfab, RandomProcesses`SimulationDump`zs, RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`bag = Internal`Bag[], RandomProcesses`SimulationDump`dw, RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`rvoptions, RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`iii, RandomProcesses`SimulationDump`bx3, RandomProcesses`SimulationDump`prec = OptionValue[WorkingPrecision], RandomProcesses`SimulationDump`dww, RandomProcesses`SimulationDump`nfopts, RandomProcesses`SimulationDump`commutativeQ, RandomProcesses`SimulationDump`projFunc, RandomProcesses`SimulationDump`yc, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`calc, RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`itoq, RandomProcesses`SimulationDump`deltas, RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`outFunc, RandomProcesses`SimulationDump`wnv, RandomProcesses`SimulationDump`iiiv, RandomProcesses`SimulationDump`bgrad}, RandomProcesses`SimulationDump`deltas = Differences[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`len = Length[RandomProcesses`SimulationDump`deltas]; RandomProcesses`SimulationDump`bgrad = OptionValue[\"DiffusionDerivatives\"]; If[RandomProcesses`SimulationDump`bgrad === Automatic, RandomProcesses`SimulationDump`bx3 = Map[D[#1, {RandomProcesses`SimulationDump`x}] . RandomProcesses`SimulationDump`bmat & , RandomProcesses`SimulationDump`bmat, {2}]; , RandomProcesses`SimulationDump`bx3 = (Transpose[{RandomProcesses`SimulationDump`x}] \/. RandomProcesses`SimulationDump`bgrad) . RandomProcesses`SimulationDump`bmat; ]; {RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`m} = Dimensions[RandomProcesses`SimulationDump`bmat]; RandomProcesses`SimulationDump`projFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`outFunc = Replace[OptionValue[\"OutputFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`nfopts = RandomProcesses`SimulationDump`FilterNFRules[{RandomProcesses`SimulationDump`opts}]; RandomProcesses`SimulationDump`commutativeQ = OptionValue[\"CommutativeNoise\"]; RandomProcesses`SimulationDump`calc = RandomProcesses`SimulationDump`ParseCalculusOption[OptionValue[\"Calculus\"]]; RandomProcesses`SimulationDump`itoq = Boole[RandomProcesses`SimulationDump`calc === \"ItoCalculus\"]; If[RandomProcesses`SimulationDump`commutativeQ === Automatic, If[RandomProcesses`SimulationDump`m == 1, RandomProcesses`SimulationDump`commutativeQ = True, RandomProcesses`SimulationDump`commutativeQ = RandomProcesses`SimulationDump`CommutativeNoiseQ[RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat] === True]; ]; RandomProcesses`SimulationDump`commutativeQ = RandomProcesses`SimulationDump`commutativeQ === True; RandomProcesses`SimulationDump`wnv = Table[Unique[RandomProcesses`SimulationDump`dw, Temporary], {RandomProcesses`SimulationDump`m}]; If[RandomProcesses`SimulationDump`commutativeQ, If[RandomProcesses`SimulationDump`calc === \"ItoCalculus\", RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`wnv}, RandomProcesses`SimulationDump`avec*RandomProcesses`SimulationDump`dt + Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`bmat . RandomProcesses`SimulationDump`wnv + RandomProcesses`SimulationDump`dt*(RandomProcesses`SimulationDump`bx3 . RandomProcesses`SimulationDump`wnv . (RandomProcesses`SimulationDump`wnv\/2) - Tr[Transpose[RandomProcesses`SimulationDump`bx3, {3, 1, 2}], Plus, 2]\/2), {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`nfopts], RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`wnv}, RandomProcesses`SimulationDump`avec*RandomProcesses`SimulationDump`dt + Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`bmat . RandomProcesses`SimulationDump`wnv + RandomProcesses`SimulationDump`dt*RandomProcesses`SimulationDump`bx3 . RandomProcesses`SimulationDump`wnv . (RandomProcesses`SimulationDump`wnv\/2), {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`nfopts]], RandomProcesses`SimulationDump`bx3 = Flatten[RandomProcesses`SimulationDump`bx3, {{1}, {3, 2}}]; RandomProcesses`SimulationDump`iii = Table[Unique[RandomProcesses`SimulationDump`iiiv, Temporary], {RandomProcesses`SimulationDump`m^2}]; RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`wnv, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`iii}, RandomProcesses`SimulationDump`avec*RandomProcesses`SimulationDump`dt + Sqrt[RandomProcesses`SimulationDump`dt]*RandomProcesses`SimulationDump`bmat . RandomProcesses`SimulationDump`wnv + RandomProcesses`SimulationDump`dt*RandomProcesses`SimulationDump`bx3 . RandomProcesses`SimulationDump`iii, {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`m^2}, RandomProcesses`SimulationDump`nfopts]]; RandomProcesses`SimulationDump`rvoptions = FilterRules[{RandomProcesses`SimulationDump`opts}, {WorkingPrecision}]; RandomProcesses`SimulationDump`yc = RandomProcesses`SimulationDump`outFunc[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0]; If[VectorQ[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = Length[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = 0]; If[RandomProcesses`SimulationDump`commutativeQ, If[Quiet[VectorQ[RandomProcesses`SimulationDump`nfab[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0, 0.1, ConstantArray[0.01, RandomProcesses`SimulationDump`m]], NumberQ]] =!= True, Return[{$Failed, $Failed}]]; Do[RandomProcesses`SimulationDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[], {RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`rvoptions]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0; Do[RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k + 1]]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfab[RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]]]]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1], {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}]; , {RandomProcesses`SimulationDump`repetitions}]; , If[Quiet[VectorQ[RandomProcesses`SimulationDump`nfab[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0, 0.1, ConstantArray[0.01, RandomProcesses`SimulationDump`m], ConstantArray[0.02, RandomProcesses`SimulationDump`m^2]], NumberQ]] =!= True, Return[{$Failed, $Failed}]]; Do[RandomProcesses`SimulationDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[], {RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`rvoptions]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0; Do[RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k + 1]]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfab[RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`RandomDoublyNestedItoIntegral[RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`dww = RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]], Ceiling[Sqrt[(RandomProcesses`SimulationDump`m*(RandomProcesses`SimulationDump`m - 1)*(RandomProcesses`SimulationDump`m + 4*RandomProcesses`SimulationDump`dww . RandomProcesses`SimulationDump`dww))\/((24*Pi^2)*(2*RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]]))]], 1, RandomProcesses`SimulationDump`prec, RandomProcesses`SimulationDump`itoq]]]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1], {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}]; , {RandomProcesses`SimulationDump`repetitions}]; ]; RandomProcesses`SimulationDump`nfab =. ; RandomProcesses`SimulationDump`iii =. ; RandomProcesses`SimulationDump`wnv =. ; {{RandomProcesses`SimulationDump`timeGrid}, RandomProcesses`SimulationDump`FromBagToPartitionedList[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`len]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, ErrorReturn -> Automatic, Evaluated -> Automatic, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, SampleArgument -> False, StepMonitor -> None, WorkingPrecision -> MachinePrecision, Calculus -> ItoCalculus, ProjectionFunction -> Automatic, OutputFunction -> Automatic, CommutativeNoise -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Simulation`VectorMilstein",
	"Internal`VectorNorm":"ObjectType: Symbol\nUsage: Internal`VectorNorm\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`VectorNorm",
	"System`ConvertersDump`FormatUtilities`VectorOfImagesQ":"ObjectType: Symbol\nUsage: System`ConvertersDump`FormatUtilities`VectorOfImagesQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`FormatUtilities`VectorOfImagesQ[System`ConvertersDump`FormatUtilities`Private`expr_] := VectorQ[System`ConvertersDump`FormatUtilities`Private`expr, Image`Image2DQ]\nSystem`ConvertersDump`FormatUtilities`VectorOfImagesQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`FormatUtilities`VectorOfImagesQ",
	"Image`IntegrationDump`VectorOfImagesWithSameProperties":"ObjectType: Symbol\nUsage: Image`IntegrationDump`VectorOfImagesWithSameProperties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`IntegrationDump`VectorOfImagesWithSameProperties[Image`IntegrationDump`list_List] := Block[{Image`IntegrationDump`info}, If[ !VectorQ[Image`IntegrationDump`list, ImageQ], Return[False]; ]; Image`IntegrationDump`info = Image`ImageInformation \/@ Image`IntegrationDump`list; SameQ @@ Image`IntegrationDump`info]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`IntegrationDump`VectorOfImagesWithSameProperties",
	"RandomProcesses`Simulation`VectorOzaki":"ObjectType: Symbol\nUsage: RandomProcesses`Simulation`VectorOzaki\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Simulation`VectorOzaki[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`t0_, RandomProcesses`SimulationDump`t1_, (RandomProcesses`SimulationDump`steps_Integer)?Positive}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts___] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] := RandomProcesses`Simulation`VectorOzaki[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, {RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`x0}, {RandomProcesses`SimulationDump`t, Range[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`steps]}, RandomProcesses`SimulationDump`repetitions, RandomProcesses`SimulationDump`opts]\nRandomProcesses`Simulation`VectorOzaki[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {(RandomProcesses`SimulationDump`x_)?VectorQ, (RandomProcesses`SimulationDump`x0_)?VectorQ}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`timeGrid_List}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[{Experimental`CreateNumericalFunction, \"ProjectionFunction\" -> Automatic}]] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`x] == Length[RandomProcesses`SimulationDump`x0] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`nfab, RandomProcesses`SimulationDump`deltas, RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`zs, RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`bag = Internal`Bag[], RandomProcesses`SimulationDump`dw, RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`rvoptions, RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`jac, RandomProcesses`SimulationDump`phi, RandomProcesses`SimulationDump`cov, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`nfopts, RandomProcesses`SimulationDump`projFunc, RandomProcesses`SimulationDump`outFunc, RandomProcesses`SimulationDump`yc, RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`tc}, RandomProcesses`SimulationDump`deltas = Differences[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`len = Length[RandomProcesses`SimulationDump`deltas]; {RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`m} = Dimensions[RandomProcesses`SimulationDump`bmat]; RandomProcesses`SimulationDump`jac = D[RandomProcesses`SimulationDump`avec, {RandomProcesses`SimulationDump`x}]; RandomProcesses`SimulationDump`phi = RandomProcesses`SimulationDump`PhiVector[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, RandomProcesses`SimulationDump`x, RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`dt]; RandomProcesses`SimulationDump`cov = Refine[CholeskyDecomposition[RandomProcesses`SimulationDump`CovarianceMatrix[RandomProcesses`SimulationDump`jac, RandomProcesses`SimulationDump`bmat, RandomProcesses`SimulationDump`t] \/. RandomProcesses`SimulationDump`t -> RandomProcesses`SimulationDump`dt], 0 < RandomProcesses`SimulationDump`dt < 1]; (RandomProcesses`SimulationDump`nfopts = RandomProcesses`SimulationDump`FilterNFRules[{RandomProcesses`SimulationDump`opts}]; RandomProcesses`SimulationDump`nfab = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`x, {RandomProcesses`SimulationDump`dt, {}}, {RandomProcesses`SimulationDump`dw, {RandomProcesses`SimulationDump`d}}}, Hold[Plus][RandomProcesses`SimulationDump`phi, RandomProcesses`SimulationDump`dw . RandomProcesses`SimulationDump`cov], {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d, _, RandomProcesses`SimulationDump`d}, RandomProcesses`SimulationDump`nfopts] \/. Hold[Plus] -> Plus; RandomProcesses`SimulationDump`rvoptions = FilterRules[{RandomProcesses`SimulationDump`opts}, {WorkingPrecision}]; RandomProcesses`SimulationDump`projFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`outFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`yc = RandomProcesses`SimulationDump`outFunc[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0]; If[VectorQ[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = Length[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = 0]; Do[RandomProcesses`SimulationDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[], {RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`d}, RandomProcesses`SimulationDump`rvoptions]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0; Do[RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k + 1]]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfab[RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]], RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]]]]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1], {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}]; , {RandomProcesses`SimulationDump`repetitions}]; {RandomProcesses`SimulationDump`timeGrid, RandomProcesses`SimulationDump`FromBagToPartitionedList[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`len]}) \/; Internal`LiterallyAbsentQ[RandomProcesses`SimulationDump`cov, $Failed] &&  !LinearAlgebra`Private`ZeroMatrixQ[RandomProcesses`SimulationDump`cov]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, ErrorReturn -> Automatic, Evaluated -> Automatic, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, SampleArgument -> False, StepMonitor -> None, WorkingPrecision -> MachinePrecision, Calculus -> ItoCalculus, ProjectionFunction -> Automatic, OutputFunction -> Automatic, CommutativeNoise -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Simulation`VectorOzaki",
	"Visualization`Core`VectorPlot":"ObjectType: Symbol\nUsage: Visualization`Core`VectorPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> 1, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, BoxRatios -> Automatic, ClippingStyle -> Automatic, ColorFunction -> None, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, FormatType :> TraditionalForm, Frame -> True, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, LightingAngle -> None, MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> Automatic, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> {Full, Full}, PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotateLabel -> True, StreamColorFunction -> None, StreamColorFunctionScaling -> True, StreamPoints -> None, StreamScale -> Automatic, StreamStyle -> Automatic, Ticks -> Automatic, TicksStyle -> {}, VectorColorFunction -> None, VectorColorFunctionScaling -> True, VectorPoints -> Automatic, VectorRange -> Automatic, VectorScale -> Automatic, VectorSizes -> Automatic, VectorStyle -> Automatic, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`VectorPlot",
	"Visualization`Core`VectorPlot3D":"ObjectType: Symbol\nUsage: Visualization`Core`VectorPlot3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> True, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, BoundaryStyle -> None, Boxed -> True, BoxRatios -> {1, 1, 1}, BoxStyle -> {}, ClippingStyle -> Automatic, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorFunction -> None, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Evaluated -> Automatic, EvaluationMonitor -> None, FaceGrids -> None, FaceGridsStyle -> {}, FormatType :> TraditionalForm, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Lighting -> Automatic, MaxRecursion -> Automatic, Mesh -> None, MeshFunctions -> Automatic, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, NormalsFunction -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> None, PlotRange -> {Full, Full, Full}, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RegionFunction -> (True & ), RotationAction -> Fit, SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, VectorColorFunction -> None, VectorColorFunctionScaling -> True, VectorPoints -> Automatic, VectorRange -> Automatic, VectorScale -> Automatic, VectorSizes -> Automatic, VectorStyle -> Automatic, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, WorkingPrecision -> MachinePrecision}\nAttributes: {HoldAll}\nFullName: Visualization`Core`VectorPlot3D",
	"ResourceFunctionHelpers`VectorProjectionPlot":"ObjectType: Symbol\nUsage: Plots the projection of vector a on vector b\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`VectorProjectionPlot[ResourceFunctionHelpers`VectorProjectionPlot`Private`v:{__?NumericQ}, ResourceFunctionHelpers`VectorProjectionPlot`Private`l:{__?NumericQ}, ResourceFunctionHelpers`VectorProjectionPlot`Private`opts:OptionsPattern[]] \/; AllTrue[{ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`l}, Length[#1] == 2 & ] := Block[{ResourceFunctionHelpers`VectorProjectionPlot`Private`p}, ResourceFunctionHelpers`VectorProjectionPlot`Private`p = Projection[ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`l]; Graphics[{Blue, InfiniteLine[{0, 0}, ResourceFunctionHelpers`VectorProjectionPlot`Private`l], Arrowheads[Medium], ResourceFunctionHelpers`VectorProjectionPlot`Private`$originalVectorStyle, Arrow[{{0, 0}, ResourceFunctionHelpers`VectorProjectionPlot`Private`v}], ResourceFunctionHelpers`VectorProjectionPlot`Private`$projectedVectorStyle, Arrow[{{0, 0}, ResourceFunctionHelpers`VectorProjectionPlot`Private`p}], ResourceFunctionHelpers`VectorProjectionPlot`Private`$substractedVectorStyle, Line[{ResourceFunctionHelpers`VectorProjectionPlot`Private`p, ResourceFunctionHelpers`VectorProjectionPlot`Private`v}]}, FilterRules[{ResourceFunctionHelpers`VectorProjectionPlot`Private`opts}, Options[Graphics]], PlotRangePadding -> 0.5, Axes -> True]]\nResourceFunctionHelpers`VectorProjectionPlot[ResourceFunctionHelpers`VectorProjectionPlot`Private`v:{__?NumericQ}, ResourceFunctionHelpers`VectorProjectionPlot`Private`lists:{ResourceFunctionHelpers`VectorProjectionPlot`Private`b1:{__?NumericQ}, ResourceFunctionHelpers`VectorProjectionPlot`Private`b2:{__?NumericQ}} | (ResourceFunctionHelpers`VectorProjectionPlot`Private`b:{__?NumericQ}), ResourceFunctionHelpers`VectorProjectionPlot`Private`opts:OptionsPattern[]] \/; If[If[MatchQ[ResourceFunctionHelpers`VectorProjectionPlot`Private`lists, {_, _, _}], AllTrue[{ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`b}, Length[#1] == 3 & ], AllTrue[{ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`b1, ResourceFunctionHelpers`VectorProjectionPlot`Private`b2}, Length[#1] == 3 & ]], True, ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`VectorProjectionPlot::dim]] := Block[{ResourceFunctionHelpers`VectorProjectionPlot`Private`b3, ResourceFunctionHelpers`VectorProjectionPlot`Private`p, ResourceFunctionHelpers`VectorProjectionPlot`Private`oneVector = TrueQ[Length[ResourceFunctionHelpers`VectorProjectionPlot`Private`lists] == 3]}, ResourceFunctionHelpers`VectorProjectionPlot`Private`p = If[ResourceFunctionHelpers`VectorProjectionPlot`Private`oneVector, Projection[ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`b], ResourceFunctionHelpers`VectorProjectionPlot`Private`b3 = ResourceFunctionHelpers`VectorProjectionPlot`Private`b2 - Projection[ResourceFunctionHelpers`VectorProjectionPlot`Private`b2, ResourceFunctionHelpers`VectorProjectionPlot`Private`b1]; Projection[ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`b1] + Projection[ResourceFunctionHelpers`VectorProjectionPlot`Private`v, ResourceFunctionHelpers`VectorProjectionPlot`Private`b3]]; Graphics3D[{Blue, InfiniteLine[{{0, 0, 0}, ResourceFunctionHelpers`VectorProjectionPlot`Private`p}], If[ResourceFunctionHelpers`VectorProjectionPlot`Private`oneVector, {}, {FaceForm[LightGray], InfinitePlane[{0, 0, 0}, {ResourceFunctionHelpers`VectorProjectionPlot`Private`b1, ResourceFunctionHelpers`VectorProjectionPlot`Private`b2}]}], Arrowheads[Medium], ResourceFunctionHelpers`VectorProjectionPlot`Private`$originalVectorStyle, Arrow[Tube[{{0, 0, 0}, ResourceFunctionHelpers`VectorProjectionPlot`Private`v}]], ResourceFunctionHelpers`VectorProjectionPlot`Private`$projectedVectorStyle, Arrow[Tube[{{0, 0, 0}, ResourceFunctionHelpers`VectorProjectionPlot`Private`p}]], ResourceFunctionHelpers`VectorProjectionPlot`Private`$substractedVectorStyle, Line[{ResourceFunctionHelpers`VectorProjectionPlot`Private`p, ResourceFunctionHelpers`VectorProjectionPlot`Private`v}]}, FilterRules[{ResourceFunctionHelpers`VectorProjectionPlot`Private`opts}, Options[Graphics3D]], PlotRangePadding -> 1, Axes -> True]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> Automatic, AutomaticImageSize -> False, Axes -> False, AxesEdge -> Automatic, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, Boxed -> True, BoxRatios -> Automatic, BoxStyle -> {}, ClipPlanes -> None, ClipPlanesStyle -> Automatic, ColorOutput -> Automatic, ContentSelectable -> Automatic, ControllerLinking -> False, ControllerMethod -> Automatic, ControllerPath -> Automatic, CoordinatesToolOptions -> Automatic, Epilog -> {}, FaceGrids -> None, FaceGridsStyle -> {}, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, LabelStyle -> {}, Lighting -> Automatic, Method -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, RotationAction -> Fit, SphericalRegion -> Automatic, Ticks -> Automatic, TicksStyle -> {}, TouchscreenAutoZoom -> False, ViewAngle -> Automatic, ViewCenter -> Automatic, ViewMatrix -> Automatic, ViewPoint -> {1.3, -2.4, 2.}, ViewProjection -> Automatic, ViewRange -> All, ViewVector -> Automatic, ViewVertical -> {0, 0, 1}, DisplayFunction :> $DisplayFunction, FormatType :> TraditionalForm}\nAttributes: {}\nFullName: ResourceFunctionHelpers`VectorProjectionPlot",
	"Control`NCS`VectorRelativeOrderCompensator":"ObjectType: Symbol\nUsage: Control`NCS`VectorRelativeOrderCompensator\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`NCS`VectorRelativeOrderCompensator[Control`AffineModelDesignDump`fn:FeedbackLinearize | AsymptoticOutputTracker, Control`AffineModelDesignDump`args___] := Control`AffineModelDesignDump`drdcomp0[Control`AffineModelDesignDump`fn, Control`AffineModelDesignDump`args]\n(Control`AffineModelDesignDump`fn:Control`NCS`VectorRelativeOrderCompensator)[Control`AffineModelDesignDump`args___] := With[{Control`AffineModelDesignDump`res = Control`AffineModelDesignDump`drdcomp[Control`AffineModelDesignDump`fn, Control`AffineModelDesignDump`args]}, Control`AffineModelDesignDump`res \/; Control`AffineModelDesignDump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {PreCompensatorSpecifications -> Automatic, MaxIterations -> Automatic, ZeroTest -> Automatic}\nAttributes: {}\nFullName: Control`NCS`VectorRelativeOrderCompensator",
	"RandomProcesses`Simulation`VectorRosslerRungeKutta1010":"ObjectType: Symbol\nUsage: RandomProcesses`Simulation`VectorRosslerRungeKutta1010\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Simulation`VectorRosslerRungeKutta1010[{(RandomProcesses`SimulationDump`avec_)?VectorQ, RandomProcesses`SimulationDump`bmat_}, {RandomProcesses`SimulationDump`xvec_, RandomProcesses`SimulationDump`x0vec_}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`t0_, RandomProcesses`SimulationDump`t1_, (RandomProcesses`SimulationDump`len_Integer)?Positive}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[]] \/; Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`xvec] == Length[RandomProcesses`SimulationDump`x0vec] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorRosslerRungeKutta1010[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, {RandomProcesses`SimulationDump`xvec, RandomProcesses`SimulationDump`x0vec}, {RandomProcesses`SimulationDump`t, Range[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`len]}, RandomProcesses`SimulationDump`repetitions, RandomProcesses`SimulationDump`opts]; {{RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`len}, Last[RandomProcesses`SimulationDump`res]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nRandomProcesses`Simulation`VectorRosslerRungeKutta1010[{(RandomProcesses`SimulationDump`avec_)?VectorQ, (RandomProcesses`SimulationDump`bmat_)?MatrixQ}, {RandomProcesses`SimulationDump`xvec_, RandomProcesses`SimulationDump`x0vec_}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`timeGrid_List}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[]] \/; MatrixQ[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`xvec, RandomProcesses`SimulationDump`x0vec}] && Length[RandomProcesses`SimulationDump`avec] == Length[RandomProcesses`SimulationDump`xvec] == Length[RandomProcesses`SimulationDump`x0vec] == Length[RandomProcesses`SimulationDump`bmat] := Module[{RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`dw, RandomProcesses`SimulationDump`sqrth, RandomProcesses`SimulationDump`nfa, RandomProcesses`SimulationDump`nfbvec, RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`zs, RandomProcesses`SimulationDump`prec = OptionValue[WorkingPrecision], RandomProcesses`SimulationDump`dww, RandomProcesses`SimulationDump`bm, RandomProcesses`SimulationDump`del, RandomProcesses`SimulationDump`rvoptions, RandomProcesses`SimulationDump`commutativeQ, RandomProcesses`SimulationDump`nfopts, RandomProcesses`SimulationDump`projFunc, RandomProcesses`SimulationDump`outFunc, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`yc, RandomProcesses`SimulationDump`calc, RandomProcesses`SimulationDump`calcIndicator, RandomProcesses`SimulationDump`deltas, RandomProcesses`SimulationDump`len}, RandomProcesses`SimulationDump`deltas = Differences[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`len = Length[RandomProcesses`SimulationDump`deltas]; {RandomProcesses`SimulationDump`d, RandomProcesses`SimulationDump`m} = Dimensions[RandomProcesses`SimulationDump`bmat]; RandomProcesses`SimulationDump`calc = RandomProcesses`SimulationDump`ParseCalculusOption[OptionValue[\"Calculus\"]]; RandomProcesses`SimulationDump`calcIndicator = If[RandomProcesses`SimulationDump`calc === \"ItoCalculus\", 1, 0]; RandomProcesses`SimulationDump`projFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`outFunc = Replace[OptionValue[\"OutputFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`nfopts = RandomProcesses`SimulationDump`FilterNFRules[{RandomProcesses`SimulationDump`opts}]; RandomProcesses`SimulationDump`nfa = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`xvec}, RandomProcesses`SimulationDump`avec, {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d}, RandomProcesses`SimulationDump`nfopts]; RandomProcesses`SimulationDump`nfbvec = Table[Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`xvec}, RandomProcesses`SimulationDump`bel, {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d}, RandomProcesses`SimulationDump`nfopts], {RandomProcesses`SimulationDump`bel, Transpose[RandomProcesses`SimulationDump`bmat]}]; RandomProcesses`SimulationDump`bag = Internal`Bag[]; RandomProcesses`SimulationDump`rvoptions = FilterRules[{RandomProcesses`SimulationDump`opts}, {WorkingPrecision}]; RandomProcesses`SimulationDump`commutativeQ = OptionValue[\"CommutativeNoise\"]; If[RandomProcesses`SimulationDump`commutativeQ === Automatic, If[RandomProcesses`SimulationDump`m == 1, RandomProcesses`SimulationDump`commutativeQ = True, RandomProcesses`SimulationDump`commutativeQ = RandomProcesses`SimulationDump`CommutativeNoiseQ[RandomProcesses`SimulationDump`t, RandomProcesses`SimulationDump`xvec, RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat] === True]; ]; RandomProcesses`SimulationDump`commutativeQ = RandomProcesses`SimulationDump`commutativeQ === True; RandomProcesses`SimulationDump`yc = RandomProcesses`SimulationDump`outFunc[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0vec]; If[VectorQ[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = Length[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = 0]; If[Quiet[VectorQ[RandomProcesses`SimulationDump`nfa[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0vec], NumberQ] =!= True || MatrixQ[Table[RandomProcesses`SimulationDump`nfbi[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0vec], {RandomProcesses`SimulationDump`nfbi, RandomProcesses`SimulationDump`nfbvec}], NumberQ] =!= True], Return[{$Failed, $Failed}]]; If[RandomProcesses`SimulationDump`commutativeQ, Do[RandomProcesses`SimulationDump`tc = First[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0vec; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[0, 1], {RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`rvoptions]; Do[RandomProcesses`SimulationDump`dt = RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`sqrth = Sqrt[RandomProcesses`SimulationDump`dt]; RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`bm = Table[RandomProcesses`SimulationDump`nfbi[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], {RandomProcesses`SimulationDump`nfbi, RandomProcesses`SimulationDump`nfbvec}]; RandomProcesses`SimulationDump`dw = RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`del = RandomProcesses`SimulationDump`SymmetrizedDoublyNestedIntegral[RandomProcesses`SimulationDump`bm, RandomProcesses`SimulationDump`dw, RandomProcesses`SimulationDump`calcIndicator]*RandomProcesses`SimulationDump`sqrth\/2; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfa[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc]*RandomProcesses`SimulationDump`dt + RandomProcesses`SimulationDump`sqrth*RandomProcesses`SimulationDump`dw . RandomProcesses`SimulationDump`bm + (RandomProcesses`SimulationDump`sqrth*Total[MapThread[#1[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + #2]] - #1[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc - #2]] & , {RandomProcesses`SimulationDump`nfbvec, RandomProcesses`SimulationDump`del}]])\/2]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1]; , {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}], {RandomProcesses`SimulationDump`repetitions}]; , Do[RandomProcesses`SimulationDump`tc = First[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0vec; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`zs = RandomVariate[Random`Private`InternalNormalDistribution[0, 1], {RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`m}, RandomProcesses`SimulationDump`rvoptions]; Do[RandomProcesses`SimulationDump`dt = RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`sqrth = Sqrt[RandomProcesses`SimulationDump`dt]; RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`timeGrid[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`bm = Table[RandomProcesses`SimulationDump`nfbi[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], {RandomProcesses`SimulationDump`nfbi, RandomProcesses`SimulationDump`nfbvec}]; RandomProcesses`SimulationDump`dw = RandomProcesses`SimulationDump`zs[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`del = RandomProcesses`SimulationDump`sqrth*Transpose[Partition[RandomProcesses`SimulationDump`RandomDoublyNestedItoIntegral[RandomProcesses`SimulationDump`m, RandomProcesses`SimulationDump`dww = RandomProcesses`SimulationDump`dw, Ceiling[Sqrt[(RandomProcesses`SimulationDump`m*(RandomProcesses`SimulationDump`m - 1)*(RandomProcesses`SimulationDump`m + 4*RandomProcesses`SimulationDump`dww . RandomProcesses`SimulationDump`dww))\/((24*Pi^2)*2)]\/RandomProcesses`SimulationDump`sqrth], 1, RandomProcesses`SimulationDump`prec, RandomProcesses`SimulationDump`calcIndicator], RandomProcesses`SimulationDump`m]] . RandomProcesses`SimulationDump`bm; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`nfa[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc]*RandomProcesses`SimulationDump`dt + RandomProcesses`SimulationDump`sqrth*RandomProcesses`SimulationDump`dw . RandomProcesses`SimulationDump`bm + (RandomProcesses`SimulationDump`sqrth*Total[MapThread[#1[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc + #2]] - #1[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc - #2]] & , {RandomProcesses`SimulationDump`nfbvec, RandomProcesses`SimulationDump`del}]])\/2]; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc], 1]; , {RandomProcesses`SimulationDump`k, RandomProcesses`SimulationDump`len}], {RandomProcesses`SimulationDump`repetitions}]; ]; {{RandomProcesses`SimulationDump`timeGrid}, RandomProcesses`SimulationDump`FromBagToPartitionedList[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`len]}]\nRandomProcesses`Simulation`VectorRosslerRungeKutta1010[{Except[_List, RandomProcesses`SimulationDump`drift_], Except[_List, RandomProcesses`SimulationDump`diffusion_]}, {Except[_List, RandomProcesses`SimulationDump`x_], Except[_List, RandomProcesses`SimulationDump`x0_]}, RandomProcesses`SimulationDump`rest___] := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorRosslerRungeKutta1010[{{RandomProcesses`SimulationDump`drift}, {{RandomProcesses`SimulationDump`diffusion}}}, {{RandomProcesses`SimulationDump`x}, {RandomProcesses`SimulationDump`x0}}, RandomProcesses`SimulationDump`rest]; {First[RandomProcesses`SimulationDump`res], If[ArrayDepth[Last[RandomProcesses`SimulationDump`res]] == 4, RandomProcesses`SimulationDump`res[[-1,All,All,1]], Last[RandomProcesses`SimulationDump`res]]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, ErrorReturn -> Automatic, Evaluated -> Automatic, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, SampleArgument -> False, StepMonitor -> None, WorkingPrecision -> MachinePrecision, Calculus -> ItoCalculus, ProjectionFunction -> Automatic, OutputFunction -> Automatic, CommutativeNoise -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Simulation`VectorRosslerRungeKutta1010",
	"RandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015":"ObjectType: Symbol\nUsage: RandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015[{RandomProcesses`SimulationDump`avec_, RandomProcesses`SimulationDump`bmat_}, {RandomProcesses`SimulationDump`xvec_, RandomProcesses`SimulationDump`x0vec_}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`t0_, RandomProcesses`SimulationDump`t1_, (RandomProcesses`SimulationDump`len_Integer)?Positive}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[]] := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`bmat}, {RandomProcesses`SimulationDump`xvec, RandomProcesses`SimulationDump`x0vec}, {RandomProcesses`SimulationDump`t, Range[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`len]}, RandomProcesses`SimulationDump`repetitions, RandomProcesses`SimulationDump`opts]; {{RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`t1, (RandomProcesses`SimulationDump`t1 - RandomProcesses`SimulationDump`t0)\/RandomProcesses`SimulationDump`len}, Last[RandomProcesses`SimulationDump`res]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nRandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015[{RandomProcesses`SimulationDump`avec_, RandomProcesses`SimulationDump`bmat_}, {RandomProcesses`SimulationDump`xvec_, RandomProcesses`SimulationDump`x0vec_}, {RandomProcesses`SimulationDump`t_, RandomProcesses`SimulationDump`timeGrid_List}, RandomProcesses`SimulationDump`repetitions_, RandomProcesses`SimulationDump`opts:OptionsPattern[]] := Module[{RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc, RandomProcesses`SimulationDump`sqrth, RandomProcesses`SimulationDump`nfa, RandomProcesses`SimulationDump`nfb, RandomProcesses`SimulationDump`d = Length[RandomProcesses`SimulationDump`xvec], RandomProcesses`SimulationDump`zws, RandomProcesses`SimulationDump`prec = OptionValue[WorkingPrecision], RandomProcesses`SimulationDump`calc, RandomProcesses`SimulationDump`calcIndicator, RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`deltas, RandomProcesses`SimulationDump`ac, RandomProcesses`SimulationDump`bc, RandomProcesses`SimulationDump`zc, RandomProcesses`SimulationDump`wc, RandomProcesses`SimulationDump`h02, RandomProcesses`SimulationDump`h12, RandomProcesses`SimulationDump`h13, RandomProcesses`SimulationDump`h14, RandomProcesses`SimulationDump`bc1, RandomProcesses`SimulationDump`bc2, RandomProcesses`SimulationDump`tn, RandomProcesses`SimulationDump`i1, RandomProcesses`SimulationDump`i2, RandomProcesses`SimulationDump`i3, RandomProcesses`SimulationDump`i4, RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`rvoptions, RandomProcesses`SimulationDump`yc, RandomProcesses`SimulationDump`projFunc, RandomProcesses`SimulationDump`outFunc, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`nfopts, RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`dt}, RandomProcesses`SimulationDump`deltas = Differences[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`len = Length[RandomProcesses`SimulationDump`deltas]; RandomProcesses`SimulationDump`t0 = First[RandomProcesses`SimulationDump`timeGrid]; RandomProcesses`SimulationDump`nfopts = RandomProcesses`SimulationDump`FilterNFRules[{RandomProcesses`SimulationDump`opts}]; RandomProcesses`SimulationDump`nfa = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`xvec}, RandomProcesses`SimulationDump`avec, {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d}, RandomProcesses`SimulationDump`nfopts]; RandomProcesses`SimulationDump`nfb = Experimental`CreateNumericalFunction[{{RandomProcesses`SimulationDump`t, {}}, Sequence @@ ({#1, {}} & ) \/@ RandomProcesses`SimulationDump`xvec}, Flatten[RandomProcesses`SimulationDump`bmat], {RandomProcesses`SimulationDump`d}, {_, RandomProcesses`SimulationDump`d}, RandomProcesses`SimulationDump`nfopts]; RandomProcesses`SimulationDump`bag = Internal`Bag[]; RandomProcesses`SimulationDump`calc = RandomProcesses`SimulationDump`ParseCalculusOption[OptionValue[\"Calculus\"]]; RandomProcesses`SimulationDump`calcIndicator = If[RandomProcesses`SimulationDump`calc === \"ItoCalculus\", 1, 0]; RandomProcesses`SimulationDump`rvoptions = FilterRules[{RandomProcesses`SimulationDump`opts}, {WorkingPrecision}]; RandomProcesses`SimulationDump`projFunc = Replace[OptionValue[\"ProjectionFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`outFunc = Replace[OptionValue[\"OutputFunction\"], Automatic -> (#2 & )]; RandomProcesses`SimulationDump`yc = RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`t0, RandomProcesses`SimulationDump`x0vec]; If[VectorQ[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = Length[RandomProcesses`SimulationDump`yc], RandomProcesses`SimulationDump`outputDim = 0]; If[Quiet[VectorQ[RandomProcesses`SimulationDump`nfa[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0vec], NumberQ] =!= True || VectorQ[RandomProcesses`SimulationDump`nfb[First[RandomProcesses`SimulationDump`timeGrid], RandomProcesses`SimulationDump`x0vec], NumberQ] =!= True], Return[{$Failed, $Failed}]]; Do[RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`t0; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`x0vec; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`yc, 1]; RandomProcesses`SimulationDump`zws = RandomVariate[BinormalDistribution[{0, 0}, N[{1, 1\/Sqrt[3]}, RandomProcesses`SimulationDump`prec], N[Sqrt[3]\/2, RandomProcesses`SimulationDump`prec]], RandomProcesses`SimulationDump`len, RandomProcesses`SimulationDump`rvoptions]; Do[RandomProcesses`SimulationDump`dt = RandomProcesses`SimulationDump`deltas[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`dtq = RandomProcesses`SimulationDump`dt\/4; RandomProcesses`SimulationDump`sqrth = Sqrt[RandomProcesses`SimulationDump`dt]; {RandomProcesses`SimulationDump`zc, RandomProcesses`SimulationDump`wc} = RandomProcesses`SimulationDump`zws[[RandomProcesses`SimulationDump`k]]; RandomProcesses`SimulationDump`i1 = RandomProcesses`SimulationDump`sqrth*RandomProcesses`SimulationDump`zc; RandomProcesses`SimulationDump`i2 = (RandomProcesses`SimulationDump`sqrth*(RandomProcesses`SimulationDump`zc^2 - RandomProcesses`SimulationDump`calcIndicator))\/2; RandomProcesses`SimulationDump`i3 = RandomProcesses`SimulationDump`sqrth*RandomProcesses`SimulationDump`wc; RandomProcesses`SimulationDump`i4 = RandomProcesses`SimulationDump`sqrth*(RandomProcesses`SimulationDump`zc*(RandomProcesses`SimulationDump`zc^2 - 3*RandomProcesses`SimulationDump`calcIndicator))\/6; RandomProcesses`SimulationDump`ac = RandomProcesses`SimulationDump`nfa[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc]; RandomProcesses`SimulationDump`bc = RandomProcesses`SimulationDump`nfb[RandomProcesses`SimulationDump`tc, RandomProcesses`SimulationDump`xc]; RandomProcesses`SimulationDump`h02 = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc + 3*RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`xc + (3*(RandomProcesses`SimulationDump`ac*RandomProcesses`SimulationDump`dt + 2*RandomProcesses`SimulationDump`bc*RandomProcesses`SimulationDump`i3))\/4]; RandomProcesses`SimulationDump`h12 = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc + RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`xc + (RandomProcesses`SimulationDump`ac*RandomProcesses`SimulationDump`dt + 2*RandomProcesses`SimulationDump`bc*RandomProcesses`SimulationDump`sqrth)\/4]; RandomProcesses`SimulationDump`h13 = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc + RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`ac*RandomProcesses`SimulationDump`dt - RandomProcesses`SimulationDump`bc*RandomProcesses`SimulationDump`sqrth]; RandomProcesses`SimulationDump`bc1 = RandomProcesses`SimulationDump`nfb[RandomProcesses`SimulationDump`tc + RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`h12]; RandomProcesses`SimulationDump`bc2 = RandomProcesses`SimulationDump`nfb[RandomProcesses`SimulationDump`tn = RandomProcesses`SimulationDump`tc + RandomProcesses`SimulationDump`dt, RandomProcesses`SimulationDump`h13]; RandomProcesses`SimulationDump`h14 = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tc + RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`xc + RandomProcesses`SimulationDump`dtq*RandomProcesses`SimulationDump`ac + (-5*RandomProcesses`SimulationDump`bc + 3*RandomProcesses`SimulationDump`bc1 + RandomProcesses`SimulationDump`bc2\/2)*RandomProcesses`SimulationDump`sqrth]; RandomProcesses`SimulationDump`xc = RandomProcesses`SimulationDump`projFunc[RandomProcesses`SimulationDump`tn, RandomProcesses`SimulationDump`xc + (RandomProcesses`SimulationDump`ac + 2*RandomProcesses`SimulationDump`nfa[RandomProcesses`SimulationDump`tc + 3*RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`h02])*RandomProcesses`SimulationDump`dt\/3 + RandomProcesses`SimulationDump`bc*(-RandomProcesses`SimulationDump`i1 - RandomProcesses`SimulationDump`i2 + 2*RandomProcesses`SimulationDump`i3 - 2*RandomProcesses`SimulationDump`i4) + (RandomProcesses`SimulationDump`bc1*(4*(RandomProcesses`SimulationDump`i1 + RandomProcesses`SimulationDump`i2 - RandomProcesses`SimulationDump`i3 + RandomProcesses`SimulationDump`i4) + RandomProcesses`SimulationDump`i4) + RandomProcesses`SimulationDump`bc2*(2*(RandomProcesses`SimulationDump`i1 - RandomProcesses`SimulationDump`i3 - RandomProcesses`SimulationDump`i4) - RandomProcesses`SimulationDump`i2))\/3 + RandomProcesses`SimulationDump`nfb[RandomProcesses`SimulationDump`tc + RandomProcesses`SimulationDump`dtq, RandomProcesses`SimulationDump`h14]*RandomProcesses`SimulationDump`i4]; RandomProcesses`SimulationDump`tc = RandomProcesses`SimulationDump`tn; Internal`StuffBag[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outFunc[RandomProcesses`SimulationDump`tn, RandomProcesses`SimulationDump`xc], 1]; , {RandomProcesses`SimulationDump`k, 1, RandomProcesses`SimulationDump`len}]; , {RandomProcesses`SimulationDump`repetitions}]; {{RandomProcesses`SimulationDump`timeGrid}, RandomProcesses`SimulationDump`FromBagToPartitionedList[RandomProcesses`SimulationDump`bag, RandomProcesses`SimulationDump`outputDim, RandomProcesses`SimulationDump`len]}] \/; MatrixQ[{RandomProcesses`SimulationDump`avec, RandomProcesses`SimulationDump`xvec, RandomProcesses`SimulationDump`x0vec}] && MatrixQ[RandomProcesses`SimulationDump`bmat] && Dimensions[RandomProcesses`SimulationDump`bmat] == {Length[RandomProcesses`SimulationDump`avec], 1}\nRandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015[{Except[_List, RandomProcesses`SimulationDump`drift_], Except[_List, RandomProcesses`SimulationDump`diffusion_]}, {Except[_List, RandomProcesses`SimulationDump`x_], Except[_List, RandomProcesses`SimulationDump`x0_]}, RandomProcesses`SimulationDump`rest___] := Module[{RandomProcesses`SimulationDump`res}, RandomProcesses`SimulationDump`res = RandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015[{{RandomProcesses`SimulationDump`drift}, {{RandomProcesses`SimulationDump`diffusion}}}, {{RandomProcesses`SimulationDump`x}, {RandomProcesses`SimulationDump`x0}}, RandomProcesses`SimulationDump`rest]; {First[RandomProcesses`SimulationDump`res], If[ArrayDepth[Last[RandomProcesses`SimulationDump`res]] == 4, RandomProcesses`SimulationDump`res[[-1,All,All,1]], Last[RandomProcesses`SimulationDump`res]]} \/; ListQ[RandomProcesses`SimulationDump`res]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compiled -> Automatic, ErrorReturn -> Automatic, Evaluated -> Automatic, EvaluationMonitor -> None, Gradient -> Automatic, Hessian -> Automatic, Jacobian -> Automatic, Message -> Automatic, SampleArgument -> False, StepMonitor -> None, WorkingPrecision -> MachinePrecision, Calculus -> ItoCalculus, ProjectionFunction -> Automatic, OutputFunction -> Automatic, CommutativeNoise -> Automatic}\nAttributes: {}\nFullName: RandomProcesses`Simulation`VectorRosslerRungeKuttaScalarNoise2015",
	"Visualization`VectorFields`VectorFieldsDump`VectorScaleParse":"ObjectType: Symbol\nUsage: Visualization`VectorFields`VectorFieldsDump`VectorScaleParse\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VectorFields`VectorFieldsDump`VectorScaleParse[Visualization`VectorFields`VectorFieldsDump`plot_, Visualization`VectorFields`VectorFieldsDump`scale_, Visualization`VectorFields`VectorFieldsDump`plotrange_, Visualization`VectorFields`VectorFieldsDump`cellrange_, Visualization`VectorFields`VectorFieldsDump`pgoal_] := Module[{Visualization`VectorFields`VectorFieldsDump`result, Visualization`VectorFields`VectorFieldsDump`dim}, Visualization`VectorFields`VectorFieldsDump`dim = If[MemberQ[{VectorPlot3D, ListVectorPlot3D}, Visualization`VectorFields`VectorFieldsDump`plot], 3, 2]; Visualization`VectorFields`VectorFieldsDump`result = Visualization`VectorFields`VectorFieldsDump`initVectorScale[Visualization`VectorFields`VectorFieldsDump`scale]; Visualization`VectorFields`VectorFieldsDump`result = Visualization`VectorFields`VectorFieldsDump`validateVectorScale[Visualization`VectorFields`VectorFieldsDump`result, Visualization`VectorFields`VectorFieldsDump`plotrange, Visualization`VectorFields`VectorFieldsDump`cellrange, Visualization`VectorFields`VectorFieldsDump`dim]; If[Visualization`VectorFields`VectorFieldsDump`result === $Failed, Message[Visualization`VectorFields`VectorFieldsDump`plot::vectsc, Visualization`VectorFields`VectorFieldsDump`scale]; Return[None]; ]; Visualization`VectorFields`VectorFieldsDump`result]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Visualization`VectorFields`VectorFieldsDump`VectorScaleParse",
	"LinearAlgebra`Private`VectorTimesColumns":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`VectorTimesColumns\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`VectorTimesColumns",
	"Statistics`Library`VectorToAntiSymmetricMatrix":"ObjectType: Symbol\nUsage: Statistics`Library`VectorToAntiSymmetricMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`VectorToAntiSymmetricMatrix",
	"SparseArray`VectorToDiagonalSparseArray":"ObjectType: Symbol\nUsage: SparseArray`VectorToDiagonalSparseArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SparseArray`VectorToDiagonalSparseArray",
	"Statistics`Library`VectorToHermitianMatrix":"ObjectType: Symbol\nUsage: Statistics`Library`VectorToHermitianMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`VectorToHermitianMatrix",
	"Reduce`VectorToScalarInequalities":"ObjectType: Symbol\nUsage: Reduce`VectorToScalarInequalities\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`VectorToScalarInequalities[System`ReduceUtilsDump`e_] := Module[{System`ReduceUtilsDump`vineq, System`ReduceUtilsDump`sineq, System`ReduceUtilsDump`pos}, System`ReduceUtilsDump`vineq = Union[Cases[System`ReduceUtilsDump`e, System`ReduceUtilsDump`$vectorineqpatt, {0, Infinity}]]; System`ReduceUtilsDump`sineq = Quiet[(Catch[System`ReduceUtilsDump`vtsineq[#1]] & ) \/@ System`ReduceUtilsDump`vineq]; System`ReduceUtilsDump`pos = Position[System`ReduceUtilsDump`sineq, $Failed, 1]; If[System`ReduceUtilsDump`pos =!= {}, $Failed @@ {Extract[System`ReduceUtilsDump`vineq, System`ReduceUtilsDump`pos]}, System`ReduceUtilsDump`e \/. Thread[System`ReduceUtilsDump`vineq -> System`ReduceUtilsDump`sineq]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`VectorToScalarInequalities",
	"Statistics`Library`VectorToSymmetricMatrix":"ObjectType: Symbol\nUsage: Statistics`Library`VectorToSymmetricMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`VectorToSymmetricMatrix",
	"Statistics`Library`VectorToUpperTriangularMatrix":"ObjectType: Symbol\nUsage: Statistics`Library`VectorToUpperTriangularMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`VectorToUpperTriangularMatrix",
	"SurfaceGraphics`Methods`Velocity":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`Velocity\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`Velocity",
	"SurfaceGraphics`Methods`VelocityScaled":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`VelocityScaled\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`VelocityScaled",
	"ResourceFunctionHelpers`VennDiagram":"ObjectType: Symbol\nUsage: VennDiagram[expression] generates the Venn diagram associated to expression.             set ,set ,…}] generates the Venn diagram of the provided sets.\n                                                                            VennDiagram[{   1    2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`VennDiagram[ResourceFunctionHelpers`VennDiagram`Private`expr_, ResourceFunctionHelpers`VennDiagram`Private`ops:OptionsPattern[]] := Module[{ResourceFunctionHelpers`VennDiagram`Private`type, ResourceFunctionHelpers`VennDiagram`Private`n, ResourceFunctionHelpers`VennDiagram`Private`varsFlag = False, ResourceFunctionHelpers`VennDiagram`Private`inputFlag = False}, If[MatchQ[ResourceFunctionHelpers`VennDiagram`Private`expr, {{(_String | _Symbol | _?NumberQ)...}..}], ResourceFunctionHelpers`VennDiagram`Private`n = Length[ResourceFunctionHelpers`VennDiagram`Private`expr]; ResourceFunctionHelpers`VennDiagram`Private`type = \"sets\"; ResourceFunctionHelpers`VennDiagram`Private`inputFlag = True; ResourceFunctionHelpers`VennDiagram`Private`varsFlag = ResourceFunctionHelpers`VennDiagram`Private`varMessages[ResourceFunctionHelpers`VennDiagram`Private`n, ResourceFunctionHelpers`VennDiagram`Private`type], If[ResourceFunctionHelpers`VennDiagram`Private`booleanExpressionQ[ResourceFunctionHelpers`VennDiagram`Private`expr], ResourceFunctionHelpers`VennDiagram`Private`n = Length[BooleanVariables[ResourceFunctionHelpers`VennDiagram`Private`expr]]; ResourceFunctionHelpers`VennDiagram`Private`type = \"boolean\"; ResourceFunctionHelpers`VennDiagram`Private`inputFlag = True; ResourceFunctionHelpers`VennDiagram`Private`varsFlag = ResourceFunctionHelpers`VennDiagram`Private`varMessages[ResourceFunctionHelpers`VennDiagram`Private`n, ResourceFunctionHelpers`VennDiagram`Private`type], ResourceFunctionHelpers`CommonFunctions`RFHMessage[ResourceFunctionHelpers`VennDiagram::arg, ResourceFunctionHelpers`VennDiagram`Private`expr]]]; ResourceFunctionHelpers`VennDiagram`Private`iVennDiagram[ResourceFunctionHelpers`VennDiagram`Private`expr, ResourceFunctionHelpers`VennDiagram`Private`ops] \/; ResourceFunctionHelpers`VennDiagram`Private`inputFlag && ResourceFunctionHelpers`VennDiagram`Private`varsFlag]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ImageSize -> 185, DiagramLegends -> SwatchLegend, EquationForm -> None}\nAttributes: {}\nFullName: ResourceFunctionHelpers`VennDiagram",
	"System`Private`VerbatimSameQ":"ObjectType: Symbol\nUsage: System`Private`VerbatimSameQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`VerbatimSameQ",
	"Image`VerbosePrint":"ObjectType: Symbol\nUsage: Image`VerbosePrint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Image`VerbosePrint[Image`ImageDump`fun_, Image`ImageDump`msgs__] := If[Last[Internal`ImageProcessingOptions[\"Verbose\"]], Print[\"ImageAPI(\", Image`ImageDump`fun, \"): \", Image`ImageDump`msgs]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`VerbosePrint",
	"System`ConvertersDump`Utilities`VerbosePrint":"ObjectType: Symbol\nUsage: System`ConvertersDump`Utilities`VerbosePrint\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`ConvertersDump`Utilities`VerbosePrint[System`ConvertersDump`Utilities`Private`fun_, System`ConvertersDump`Utilities`Private`msgs__] := (If[Last[Internal`ImportExportOptions[\"Verbose\"]], Print[\"ImportExport(\", SymbolName[System`ConvertersDump`Utilities`Private`fun], \"): \", System`ConvertersDump`Utilities`Private`msgs]]; )\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`ConvertersDump`Utilities`VerbosePrint",
	"System`DateObjectDump`VerifyDVArgs":"ObjectType: Symbol\nUsage: System`DateObjectDump`VerifyDVArgs\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`DateObjectDump`VerifyDVArgs[System`DateObjectDump`elem_String] \/; MemberQ[System`DateObjectDump`$DateValueProperties, System`DateObjectDump`elem] := True\nSystem`DateObjectDump`VerifyDVArgs[System`DateObjectDump`elem:{_String..}] \/; Complement[System`DateObjectDump`elem, System`DateObjectDump`$DateValueProperties] === {} := True\nSystem`DateObjectDump`VerifyDVArgs[System`DateObjectDump`elem_] := (Message[DateValue::noelem, System`DateObjectDump`elem]; False)\nSystem`DateObjectDump`VerifyDVArgs[System`DateObjectDump`elem_, System`DateObjectDump`type_Symbol] := If[System`DateObjectDump`VerifyDVArgs[System`DateObjectDump`elem], System`DateObjectDump`VerifyDVArgType[System`DateObjectDump`elem, System`DateObjectDump`type], False, False]\nSystem`DateObjectDump`VerifyDVArgs[System`DateObjectDump`elem_, System`DateObjectDump`type_] := (Message[DateValue::etype, System`DateObjectDump`type, System`DateObjectDump`elem]; False)\nSystem`DateObjectDump`VerifyDVArgs[System`DateObjectDump`args___] := (ArgumentCountQ[DateValue, Length[{System`DateObjectDump`args}] + 1, 0, 3]; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`VerifyDVArgs",
	"System`DateObjectDump`VerifyDVArgType":"ObjectType: Symbol\nUsage: System`DateObjectDump`VerifyDVArgType\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`DateObjectDump`VerifyDVArgType[System`DateObjectDump`elem_, System`DateObjectDump`type_] := If[ !MemberQ[Append[System`DateObjectDump`$FunctionAssociation[System`DateObjectDump`elem], Automatic], System`DateObjectDump`type | Verbatim[HoldPattern][System`DateObjectDump`type]], Message[DateValue::etype, System`DateObjectDump`type, System`DateObjectDump`elem]; False, True]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`VerifyDVArgType",
	"DateAndTime`VerifyHolidayCalendar":"ObjectType: Symbol\nUsage: DateAndTime`VerifyHolidayCalendar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`VerifyHolidayCalendar[DataPaclets`CalendarDataDump`head_, DataPaclets`CalendarDataDump`input:{DataPaclets`CalendarDataDump`country_, DataPaclets`CalendarDataDump`market_}] := (If[DateAndTime`InitializeHolidayCalendar[] === $Failed, Throw[DataPaclets`CalendarDataDump`$unevaluatedTag, DataPaclets`CalendarDataDump`$tag]]; If[MemberQ[DataPaclets`CalendarDataDump`HolC, DataPaclets`CalendarDataDump`country], DataPaclets`CalendarDataDump`input, Message[DataPaclets`CalendarDataDump`head::holc, DataPaclets`CalendarDataDump`input]; Throw[DataPaclets`CalendarDataDump`$unevaluatedTag, DataPaclets`CalendarDataDump`$tag]])\nDateAndTime`VerifyHolidayCalendar[DataPaclets`CalendarDataDump`head_, DataPaclets`CalendarDataDump`rules:{_Rule}] := If[Complement[DataPaclets`CalendarDataDump`rules[[All,1]], DataPaclets`CalendarDataDump`calendars] === {}, (Internal`SetHolidayCalendar[{\"__CurrentCalendar\", \"Default\", #1}, {}] & ) \/@ DataPaclets`CalendarDataDump`calendars; Apply[Internal`SetHolidayCalendar[{\"__CurrentCalendar\", \"Default\", #1}, #2] & , DataPaclets`CalendarDataDump`rules, {1}]; {\"__CurrentCalendar\", \"Default\"}, Message[DataPaclets`CalendarDataDump`head::holc, DataPaclets`CalendarDataDump`rules]; Throw[\"DateFrameworkUnevaluatedTag\", \"DateFrameworkCatchThrowTag\"]]\nDateAndTime`VerifyHolidayCalendar[DataPaclets`CalendarDataDump`head_, DataPaclets`CalendarDataDump`input_] := (Message[DataPaclets`CalendarDataDump`head::holc, DataPaclets`CalendarDataDump`input]; Throw[\"DateFrameworkUnevaluatedTag\", \"DateFrameworkCatchThrowTag\"])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`VerifyHolidayCalendar",
	"DateAndTime`VerifyOptionValues":"ObjectType: Symbol\nUsage: DateAndTime`VerifyOptionValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`VerifyOptionValues[System`InternalDateUtilitiesDump`head_, System`InternalDateUtilitiesDump`optionNames_List, System`InternalDateUtilitiesDump`opts_List] := Module[{System`InternalDateUtilitiesDump`pairs}, System`InternalDateUtilitiesDump`pairs = (Check[{#1, OptionValue[System`InternalDateUtilitiesDump`head, System`InternalDateUtilitiesDump`opts, #1]}, Throw[System`InternalDateUtilitiesDump`$unevaluatedTag, System`InternalDateUtilitiesDump`$tag], {OptionValue::nodef, OptionValue::optnf}] & ) \/@ System`InternalDateUtilitiesDump`optionNames; (System`InternalDateUtilitiesDump`verifyOptionValues[System`InternalDateUtilitiesDump`head, #1] & ) \/@ System`InternalDateUtilitiesDump`pairs]\nDateAndTime`VerifyOptionValues[System`InternalDateUtilitiesDump`head_, System`InternalDateUtilitiesDump`optionNames_List, System`InternalDateUtilitiesDump`opts___] := DateAndTime`VerifyOptionValues[System`InternalDateUtilitiesDump`head, System`InternalDateUtilitiesDump`optionNames, {System`InternalDateUtilitiesDump`opts}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`VerifyOptionValues",
	"PacletManager`VerifyPaclet":"ObjectType: Symbol\nUsage: VerifyPaclet is an internal symbol.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`VerifyPaclet[PacletManager`Paclet`Private`p_PacletObject, OptionsPattern[]] := Module[{PacletManager`Paclet`Private`name, PacletManager`Paclet`Private`vers, PacletManager`Paclet`Private`verbose}, PacletManager`Paclet`Private`verbose = OptionValue[Verbose]; If[ !MatchQ[PacletManager`Paclet`Private`p, HoldPattern[PacletObject[_Association]]], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::rules]]; Return[False]]; If[ !MatchQ[Normal[First[PacletManager`Paclet`Private`p]], {(_String -> _String | _Symbol | _List)..}], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::rules]]; Return[False]]; {PacletManager`Paclet`Private`name, PacletManager`Paclet`Private`vers} = PacletManager`Package`getPIValue[PacletManager`Paclet`Private`p, {\"Name\", \"Version\"}]; If[ !StringQ[PacletManager`Paclet`Private`name], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::noname]]; Return[False]]; If[ !StringQ[PacletManager`Paclet`Private`vers], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::novers]]; Return[False]]; If[ !StringMatchQ[PacletManager`Paclet`Private`vers, (DigitCharacter | \".\")..], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::badvers]]; Return[False]]; If[ !PacletManager`Paclet`Private`verifyExtensions[PacletManager`Paclet`Private`p, PacletManager`Paclet`Private`verbose], Return[False]]; True]\nPacletManager`VerifyPaclet[PacletManager`Paclet`Private`pacletFileOrDir_String, OptionsPattern[]] := Module[{PacletManager`Paclet`Private`piData, PacletManager`Paclet`Private`strm, PacletManager`Paclet`Private`dataBuffer, PacletManager`Paclet`Private`verbose, PacletManager`Paclet`Private`piExpr}, PacletManager`Paclet`Private`verbose = OptionValue[Verbose]; PacletManager`Paclet`Private`piData = $Failed; Which[StringMatchQ[FileNameTake[PacletManager`Paclet`Private`pacletFileOrDir], \"PacletInfo.m\"] || StringMatchQ[FileNameTake[PacletManager`Paclet`Private`pacletFileOrDir], \"PacletInfo.wl\"], PacletManager`Package`using[{PacletManager`Paclet`Private`strm = Quiet[OpenRead[PacletManager`Paclet`Private`pacletFileOrDir, BinaryFormat -> True]]}, If[Head[PacletManager`Paclet`Private`strm] === InputStream, PacletManager`Paclet`Private`piData = FromCharacterCode[BinaryReadList[PacletManager`Paclet`Private`strm], \"UTF8\"]]], StringMatchQ[PacletManager`Paclet`Private`pacletFileOrDir, \"*.paclet\"] || StringMatchQ[PacletManager`Paclet`Private`pacletFileOrDir, \"*.cdf\"], If[FileType[PacletManager`Paclet`Private`pacletFileOrDir] === File, Quiet[PacletManager`Paclet`Private`dataBuffer = PacletManager`ZipGetFile[PacletManager`Paclet`Private`pacletFileOrDir, \"PacletInfo.m\"]; If[ !ListQ[PacletManager`Paclet`Private`dataBuffer], PacletManager`Paclet`Private`dataBuffer = PacletManager`ZipGetFile[PacletManager`Paclet`Private`pacletFileOrDir, \"PacletInfo.wl\"]]]; If[ListQ[PacletManager`Paclet`Private`dataBuffer], PacletManager`Paclet`Private`piData = FromCharacterCode[PacletManager`Paclet`Private`dataBuffer, \"UTF8\"], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::noppi, PacletManager`Paclet`Private`pacletFileOrDir]]], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::notfound, PacletManager`Paclet`Private`pacletFileOrDir]]], DirectoryQ[PacletManager`Paclet`Private`pacletFileOrDir], (If[Length[#1] > 0, Return[PacletManager`VerifyPaclet[First[#1], Verbose -> PacletManager`Paclet`Private`verbose]], If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::nopi, PacletManager`Paclet`Private`pacletFileOrDir]]] & )[FileNames[{\"PacletInfo.m\", \"PacletInfo.wl\"}, PacletManager`Paclet`Private`pacletFileOrDir]], True, Message[PacletManager`VerifyPaclet::path, PacletManager`Paclet`Private`pacletFileOrDir]]; If[StringQ[PacletManager`Paclet`Private`piData], PacletManager`Paclet`Private`piExpr = PacletManager`Package`parsePacletInfo[PacletManager`Paclet`Private`piData]; Switch[PacletManager`Paclet`Private`piExpr, {_PacletObject}, PacletManager`VerifyPaclet[First[PacletManager`Paclet`Private`piExpr], Verbose -> PacletManager`Paclet`Private`verbose], {__PacletObject}, And @@ (PacletManager`VerifyPaclet[#1, Verbose -> PacletManager`Paclet`Private`verbose] & ) \/@ PacletManager`Paclet`Private`piExpr, _, If[PacletManager`Paclet`Private`verbose, Message[PacletManager`VerifyPaclet::badpi, PacletManager`Paclet`Private`pacletFileOrDir]]; False], False]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Verbose -> True}\nAttributes: {}\nFullName: PacletManager`VerifyPaclet",
	"Audio`Version":"ObjectType: Symbol\nUsage: Audio`Version\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Version[] := 3\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Version",
	"System`Environment`Version":"ObjectType: Symbol\nUsage: System`Environment`Version\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Environment`Version",
	"Video`Version":"ObjectType: Symbol\nUsage: Video`Version\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`Version[] := 1\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`Version",
	"ComputationalGeometry`Surface`Vertex":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`Vertex\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ComputationalGeometry`Dump`Color -> Null, ComputationalGeometry`Surface`Coord -> Null, ComputationalGeometry`Surface`ElementNormal -> Null, Graphics`Mesh`Developer`ExtendedTags -> Null, Graphics`Mesh`Developer`OriginalCoordinates -> False, Graphics`Mesh`Developer`Scalars -> Null, ComputationalGeometry`Surface`SID -> Null, Graphics`Mesh`Developer`SolidParameter -> Null, Graphics`Mesh`Developer`Tag -> Null}\nAttributes: {}\nFullName: ComputationalGeometry`Surface`Vertex",
	"GraphComputation`VertexAddTo":"ObjectType: Symbol\nUsage: GraphComputation`VertexAddTo\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`VertexAddTo",
	"SurfaceGraphics`Methods`VertexAliasTolerance":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`VertexAliasTolerance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`VertexAliasTolerance",
	"SurfaceGraphics`Methods`VertexColorsPalette":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`VertexColorsPalette\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`VertexColorsPalette",
	"Graphics`Mesh`Developer`VertexCoordinates":"ObjectType: Symbol\nUsage: Graphics`Mesh`Developer`VertexCoordinates\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`Developer`Dimension -> Automatic, Graphics`Mesh`Developer`OriginalCoordinates -> False}\nAttributes: {}\nFullName: Graphics`Mesh`Developer`VertexCoordinates",
	"GraphComputation`VertexDeleteFrom":"ObjectType: Symbol\nUsage: GraphComputation`VertexDeleteFrom\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`VertexDeleteFrom",
	"ComputationalGeometry`Surface`VertexIndex":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`VertexIndex\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`VertexIndex",
	"Graphics`Mesh`VertexInMeshQ":"ObjectType: Symbol\nUsage: Graphics`Mesh`VertexInMeshQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`VertexInMeshQ",
	"System`Private`VertexInterpolants":"ObjectType: Symbol\nUsage: System`Private`VertexInterpolants\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`VertexInterpolants",
	"Graphics`Mesh`VertexIntersection":"ObjectType: Symbol\nUsage: Graphics`Mesh`VertexIntersection\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`VertexIntersection",
	"GraphComputation`VertexLabelingFunction":"ObjectType: Symbol\nUsage: GraphComputation`VertexLabelingFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`VertexLabelingFunction[Placed[Dynamic[GraphComputation`GraphLabelsDump`label_], Dynamic[GraphComputation`GraphLabelsDump`pos_]], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos], GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label:Except[_Dynamic], Dynamic[GraphComputation`GraphLabelsDump`pos_]], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos], GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction[Placed[Dynamic[GraphComputation`GraphLabelsDump`label_], GraphComputation`GraphLabelsDump`pos:Except[_Dynamic]], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos], GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction[Dynamic[GraphComputation`GraphLabelsDump`a_], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction[GraphComputation`GraphLabelsDump`a, GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label_, GraphComputation`GraphLabelsDump`pos_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[][GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[][GraphComputation`GraphLabelsDump`label, Automatic, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label_List, GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[GraphComputation`GraphLabelsDump`f][GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[Placed[\"Name\" | All, GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[GraphComputation`GraphLabelsDump`f][#2, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[Placed[\"Index\", GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[GraphComputation`GraphLabelsDump`f][#5, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[Placed[GraphComputation`GraphLabelsDump`label:Except[_List], GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[GraphComputation`GraphLabelsDump`f][GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[GraphComputation`GraphLabelsDump`label:Except[_Placed], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction[][GraphComputation`GraphLabelsDump`label, Automatic, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction[___] := #1 & \nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`VertexLabelingFunction",
	"GraphComputation`VertexLabelingFunction3D":"ObjectType: Symbol\nUsage: GraphComputation`VertexLabelingFunction3D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`VertexLabelingFunction3D[Placed[Dynamic[GraphComputation`GraphLabelsDump`label_], Dynamic[GraphComputation`GraphLabelsDump`pos_]], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos], GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label:Except[_Dynamic], Dynamic[GraphComputation`GraphLabelsDump`pos_]], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos], GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction3D[Placed[Dynamic[GraphComputation`GraphLabelsDump`label_], GraphComputation`GraphLabelsDump`pos:Except[_Dynamic]], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos], GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction3D[Dynamic[GraphComputation`GraphLabelsDump`a_], GraphComputation`GraphLabelsDump`expr___] = Dynamic[GraphComputation`VertexLabelingFunction3D[GraphComputation`GraphLabelsDump`a, GraphComputation`GraphLabelsDump`expr][##1]] & \nGraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label_, GraphComputation`GraphLabelsDump`pos_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[][GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[][GraphComputation`GraphLabelsDump`label, Automatic, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label_List, GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[GraphComputation`GraphLabelsDump`f][GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[Placed[\"Name\" | All, GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[GraphComputation`GraphLabelsDump`f][#2, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[Placed[\"Index\", GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[GraphComputation`GraphLabelsDump`f][#5, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[Placed[GraphComputation`GraphLabelsDump`label:Except[_List], GraphComputation`GraphLabelsDump`pos_, GraphComputation`GraphLabelsDump`f_], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[GraphComputation`GraphLabelsDump`f][GraphComputation`GraphLabelsDump`label, GraphComputation`GraphLabelsDump`pos, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[GraphComputation`GraphLabelsDump`label:Except[_Placed], GraphComputation`GraphLabelsDump`expr___] := Block[{GraphComputation`GraphLabelsDump`res}, GraphComputation`GraphLabelsDump`res = GraphComputation`GraphLabelsDump`vertexLabelingFunction3D[][GraphComputation`GraphLabelsDump`label, Automatic, GraphComputation`GraphLabelsDump`expr]; GraphComputation`GraphLabelsDump`res \/; GraphComputation`GraphLabelsDump`res =!= $Failed]\nGraphComputation`VertexLabelingFunction3D[___] := #1 & \nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`VertexLabelingFunction3D",
	"Network`GraphPlot`VertexList":"ObjectType: Symbol\nUsage: Network`GraphPlot`VertexList\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Network`GraphPlot`VertexList[{}] := {}\nNetwork`GraphPlot`VertexList[Network`GraphPlotDump`Private`G_Combinatorica`Graph] := Module[{Network`GraphPlotDump`Private`l, Network`GraphPlotDump`Private`n}, Network`GraphPlotDump`Private`l = Combinatorica`ToAdjacencyLists[Network`GraphPlotDump`Private`G, Combinatorica`EdgeWeight]; Network`GraphPlotDump`Private`n = Length[Network`GraphPlotDump`Private`l]; Table[Network`GraphPlotDump`Private`i, {Network`GraphPlotDump`Private`i, Network`GraphPlotDump`Private`n}]]\nNetwork`GraphPlot`VertexList[(Network`GraphPlotDump`Private`G_)?Network`GraphPlotDump`Private`RuleListGraphQ] := Module[{}, Network`GraphPlotDump`Private`RulesToSparseArrayWithLabels[Network`GraphPlotDump`Private`G][[2]]]\nNetwork`GraphPlot`VertexList[(Network`GraphPlotDump`Private`G_)?MatrixQ] := Module[{Network`GraphPlotDump`Private`n}, Network`GraphPlotDump`Private`n = Dimensions[Network`GraphPlotDump`Private`G][[1]]; Table[Network`GraphPlotDump`Private`i, {Network`GraphPlotDump`Private`i, Network`GraphPlotDump`Private`n}]]\nNetwork`GraphPlotDump`Private`e:Network`GraphPlot`VertexList[___] := With[{Network`GraphPlotDump`Private`res = Network`GraphPlotDump`Private`IssueArgsMessage[Network`GraphPlot`VertexList, Network`GraphPlotDump`Private`argLength[Network`GraphPlotDump`Private`e], 1, 1]}, Network`GraphPlotDump`Private`res \/; Network`GraphPlotDump`Private`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Network`GraphPlot`VertexList",
	"ComputationalGeometry`Surface`VertexMode":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`VertexMode\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`VertexMode",
	"ComputationalGeometry`Surface`VertexPlus":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`VertexPlus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`VertexPlus",
	"ComputationalGeometry`Dump`VertexProgram":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`VertexProgram\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`VertexProgram",
	"ComputationalGeometry`Surface`VertexTimes":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`VertexTimes\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`VertexTimes",
	"Graphics`Mesh`VertexTolerance":"ObjectType: Symbol\nUsage: Graphics`Mesh`VertexTolerance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`VertexTolerance",
	"SurfaceGraphics`Methods`VertexTolerance":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`VertexTolerance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`VertexTolerance",
	"Charting`VerticalScale":"ObjectType: Symbol\nUsage: Charting`VerticalScale\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`VerticalScale[Charting`AxisDump`x_, {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`VerticalScale, {\"Line\", {{Charting`AxisDump`x, Charting`AxisDump`min} -> Charting`AxisDump`min, {Charting`AxisDump`x, Charting`AxisDump`max} -> Charting`AxisDump`max}}, {Charting`AxisDump`min, Charting`AxisDump`max}, Charting`AxisDump`opts]\nCharting`VerticalScale[Charting`AxisDump`x_, {Charting`AxisDump`scalemin_, Charting`AxisDump`scalemax_} -> {Charting`AxisDump`min_, Charting`AxisDump`max_}, Charting`AxisDump`opts:OptionsPattern[]] := Charting`AxisDump`iQuantitativeScale[Charting`VerticalScale, {\"Line\", {{Charting`AxisDump`x, Charting`AxisDump`min} -> Charting`AxisDump`scalemin, {Charting`AxisDump`x, Charting`AxisDump`max} -> Charting`AxisDump`scalemax}}, {Charting`AxisDump`scalemin, Charting`AxisDump`scalemax}, Charting`AxisDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Charting`AxisDump`DivisionAlignment -> Automatic, Charting`AxisDump`DivisionAnnotations -> None, Charting`AxisDump`DivisionLabelAlignment -> Automatic, Charting`AxisDump`DivisionLabels -> Automatic, Charting`AxisDump`DivisionLabelStyle -> Automatic, Charting`AxisDump`DivisionMarker -> Automatic, Charting`AxisDump`DivisionSizes -> Automatic, Charting`AxisDump`DivisionStyle -> Automatic, LabelingFunction -> Automatic, Method -> Automatic, Charting`AxisDump`ScaleAppearance -> Automatic, ScaleDivisions -> Automatic, Charting`AxisDump`ScaleFactor -> None, Charting`AxisDump`ScaleLabels -> Automatic, Charting`AxisDump`ScaleLabelStyle -> Automatic, ScaleRanges -> {}, ScaleRangeStyle -> Automatic, Charting`AxisDump`ScaleStyle -> Automatic, ScalingFunctions -> None}\nAttributes: {}\nFullName: Charting`VerticalScale",
	"Image`VerticalZoombar":"ObjectType: Symbol\nUsage: VerticalZoombar[Dynamic[s], Dynamic[{x, y}], Dynamic[{width, height}, None], Dynamic[{W, H}, None]] represent a vertical scrollbar with zoom-handles at the ends. s represent the zoom factor,  {x, y} determine the scaled zoombar positions. {width, height} is the width and height of the pane to which the zoombar is attached. {W, H} is the ImageSize of the pane content.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: MakeBoxes[BoxForm`apat$:HoldPattern[Image`VerticalZoombar[___]], BoxForm`fpat$_] ^:= BoxForm`BoxFormAutoLoad[MakeBoxes, BoxForm`apat$, BoxForm`fpat$, \"Typeset`Dynamic`\", {{ActionMenu, _}, {ActionMenuBox, _}, {Animator, _}, {AnimatorBox, _}, {Button, _}, {ButtonBar, _}, {ButtonBox, _}, {Checkbox, _}, {CheckboxBar, _}, {CheckboxBox, _}, {ClickPane, _}, {ColorSetter, _}, {ColorSetterBox, _}, {ColorSlider, _}, {Dynamic, _}, {DynamicBox, _}, {DynamicName, _}, {DynamicNamespace, _}, {EventHandler, _}, {FileNameSetter, _}, {FlipView, _}, {GestureHandler, _}, {Hyperlink, _}, {Image`HorizontalZoombar, _}, {Image`VerticalZoombar, _}, {InputField, _}, {InputFieldBox, _}, {IntervalSlider, _}, {LabeledSlider, _}, {Experimental`ListAnimator, _}, {ListPicker, _}, {LocatorPane, _}, {LocatorPaneBox, _}, {MenuView, _}, {MouseAppearance, _}, {Mouseover, _}, {NamespaceBox, _}, {Opener, _}, {OpenerBox, _}, {OpenerView, _}, {Overlay, _}, {OverlayBox, _}, {PaneSelector, _}, {PaneSelectorBox, _}, {PasteButton, _}, {PopupMenu, _}, {PopupMenuBox, _}, {PopupView, _}, {ProgressIndicator, _}, {ProgressIndicatorBox, _}, {RadioButton, _}, {RadioButtonBar, _}, {RadioButtonBox, _}, {Setter, _}, {SetterBar, _}, {SetterBox, _}, {Slider, _}, {SliderBox, _}, {Slider2D, _}, {Slider2DBox, _}, {SlideView, _}, {Experimental`SpinAnimator, _}, {StatusArea, _}, {TabView, _}, {TabViewBox, _}, {Toggler, _}, {TogglerBar, _}, {TogglerBox, _}, {Tooltip, _}, {TooltipBox, _}, {Trigger, _}, {VerticalSlider, _}, {ActionMenuBox, HoldPattern[MakeExpression[_ActionMenuBox, _]]}, {AnimatorBox, HoldPattern[MakeExpression[_AnimatorBox, _]]}, {ButtonBox, HoldPattern[MakeExpression[_ButtonBox, _]]}, {CheckboxBox, HoldPattern[MakeExpression[_CheckboxBox, _]]}, {ColorSetterBox, HoldPattern[MakeExpression[_ColorSetterBox, _]]}, {DynamicBox, HoldPattern[MakeExpression[_DynamicBox, _]]}, {InputFieldBox, HoldPattern[MakeExpression[_InputFieldBox, _]]}, {ListPickerBox, HoldPattern[MakeExpression[_ListPickerBox, _]]}, {LocatorPaneBox, HoldPattern[MakeExpression[_LocatorPaneBox, _]]}, {NamespaceBox, HoldPattern[MakeExpression[_NamespaceBox, _]]}, {OpenerBox, HoldPattern[MakeExpression[_OpenerBox, _]]}, {OverlayBox, HoldPattern[MakeExpression[_OverlayBox, _]]}, {PaneSelectorBox, HoldPattern[MakeExpression[_PaneSelectorBox, _]]}, {PopupMenuBox, HoldPattern[MakeExpression[_PopupMenuBox, _]]}, {ProgressIndicatorBox, HoldPattern[MakeExpression[_ProgressIndicatorBox, _]]}, {RadioButtonBox, HoldPattern[MakeExpression[_RadioButtonBox, _]]}, {SetterBox, HoldPattern[MakeExpression[_SetterBox, _]]}, {SliderBox, HoldPattern[MakeExpression[_SliderBox, _]]}, {Slider2DBox, HoldPattern[MakeExpression[_Slider2DBox, _]]}, {TabViewBox, HoldPattern[MakeExpression[_TabViewBox, _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _EventHandlerTag | _GestureHandlerTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, _MouseAppearanceTag, ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, \"DynamicName\" | \"PrivateDynamicName\" | \"PublicDynamicName\", ___], _]]}, {TagBox, HoldPattern[MakeExpression[TagBox[_, {\"ListAnimator\" | \"SpinAnimator\", ___}, ___], _]]}, {TemplateBox, HoldPattern[MakeExpression[TemplateBox[_, \"MouseoverTemplate\" | \"HyperlinkURL\" | \"HyperlinkPaclet\" | \"HyperlinkDefault\" | \"HyperlinkStaticTemplate\" | \"HyperlinkTemplate\", ___], _]]}, {TogglerBox, HoldPattern[MakeExpression[_TogglerBox, _]]}, {TooltipBox, HoldPattern[MakeExpression[_TooltipBox, _]]}}, Hold[ActionMenu, ActionMenuBox, Animator, AnimatorBox, Button, ButtonBar, ButtonBox, Checkbox, CheckboxBar, CheckboxBox, ClickPane, ColorSetter, ColorSetterBox, ColorSlider, Dynamic, DynamicBox, FileNameSetter, Hyperlink, Image`HorizontalZoombar, Image`VerticalZoombar, InputField, InputFieldBox, IntervalSlider, LabeledSlider, Experimental`ListAnimator, ListPicker, ListPickerBox, LocatorPane, LocatorPaneBox, MouseAppearance, Mouseover, Opener, OpenerBox, PasteButton, PopupMenu, PopupMenuBox, ProgressIndicator, ProgressIndicatorBox, RadioButton, RadioButtonBar, RadioButtonBox, Setter, SetterBar, SetterBox, Slider, SliderBox, Slider2D, Slider2DBox, Experimental`SpinAnimator, StatusArea, Toggler, TogglerBar, TogglerBox, Tooltip, TooltipBox, Trigger, VerticalSlider, EventHandler, GestureHandler, TagBox, TemplateBox, FlipView, MenuView, OpenerView, Overlay, OverlayBox, PaneSelector, PaneSelectorBox, PopupView, SlideView, TabView, TabViewBox, DynamicName, DynamicNamespace, NamespaceBox]]\nOptions: None\nAttributes: {}\nFullName: Image`VerticalZoombar",
	"ComputationalGeometry`Dump`Vertices":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`Vertices\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`Vertices",
	"Graphics`Mesh`VerticesGoal":"ObjectType: Symbol\nUsage: Graphics`Mesh`VerticesGoal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`VerticesGoal",
	"SurfaceGraphics`Methods`VerticesGoal":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`VerticesGoal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`VerticesGoal",
	"ComputationalGeometry`Dump`VerticesStyle":"ObjectType: Symbol\nUsage: ComputationalGeometry`Dump`VerticesStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Dump`VerticesStyle",
	"ComputationalGeometry`Surface`VID":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`VID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`VID",
	"Video`VideoBox":"ObjectType: Symbol\nUsage: Video`VideoBox\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`VideoBox",
	"Video`VideoGUI":"ObjectType: Symbol\nUsage: Video`VideoGUI\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`VideoGUI[(Video`VideoGUIDump`boxVersion_)?Video`VideoGUIDump`ValidVideoVersionQ, Video`VideoGUIDump`resourcePath_, Dynamic[Video`VideoGUIDump`appearanceState_], Video`VideoGUIDump`videoIn_] \/; MatchQ[Video`VideoGUIDump`resourcePath, Except[_URL | _?Audio`Utilities`IsURIString]] := DynamicModule[{Video`VideoGUIDump`class, Video`VideoGUIDump`stream, Video`VideoGUIDump`audioOutputDevice, Video`VideoGUIDump`imageSize, Video`VideoGUIDump`rasterSize, Video`VideoGUIDump`vol, Video`VideoGUIDump`video, Video`VideoGUIDump`path, Video`VideoGUIDump`broken = False, Video`VideoGUIDump`audioDeviceList = Quiet[Replace[\"OutputDevices\", FFmpegTools`AudioDevices[]]], Video`VideoGUIDump`initialize}, Video`VideoGUIDump`initialize[] := (Video`VideoGUIDump`video = MakeExpression[Video`VideoGUIDump`videoIn[[1]]]; Video`VideoGUIDump`audioDeviceList = If[ListQ[Video`VideoGUIDump`audioDeviceList], Video`VideoGUIDump`audioDeviceList, {}]; Video`VideoGUIDump`audioOutputDevice = FirstCase[Video`VideoGUIDump`video, (AudioOutputDevice -> Video`VideoGUIDump`device_) :> Video`VideoGUIDump`device, Automatic, 2]; Video`VideoGUIDump`audioOutputDevice = If[MemberQ[Video`VideoGUIDump`audioDeviceList, Video`VideoGUIDump`audioOutputDevice], Video`VideoGUIDump`audioOutputDevice, Automatic]; Video`VideoGUIDump`imageSize = FirstCase[Video`VideoGUIDump`video, (ImageSize -> Video`VideoGUIDump`s_) :> Video`VideoGUIDump`s, Automatic, 2]; Video`VideoGUIDump`rasterSize = FirstCase[Video`VideoGUIDump`video, (RasterSize -> Video`VideoGUIDump`s_) :> Video`VideoGUIDump`s, Automatic, 2]; Video`VideoGUIDump`vol = FirstCase[Video`VideoGUIDump`video, (SoundVolume -> Video`VideoGUIDump`v_) :> Video`VideoGUIDump`v, Automatic, 2]; If[ !Video`VideoStreamQ[Video`VideoGUIDump`stream], Video`VideoGUIDump`stream = Quiet[VideoStream[Video`VideoGUIDump`resourcePath, \"Context\" -> \"Internal\", AudioOutputDevice -> Video`VideoGUIDump`audioOutputDevice, ImageSize -> Replace[Video`VideoGUIDump`imageSize, Tiny | Small | Medium | Large -> Automatic], RasterSize -> Video`VideoGUIDump`rasterSize, SoundVolume -> Video`VideoGUIDump`vol]]; If[MatchQ[Video`VideoGUIDump`imageSize, Tiny | Small | Medium | Large], Video`VideoGUIDump`stream[\"ResolvedImageSize\"] = Video`Utilities`ResolveImageSize[Video`VideoGUIDump`imageSize]]]; Video`VideoGUIDump`class = Video`VideoGUIDump`getStreamProperty[Video`VideoGUIDump`stream, \"Class\"]; Video`VideoGUIDump`path = Video`VideoGUIDump`getStreamProperty[Video`VideoGUIDump`stream, \"ResourcePathAbsolute\"]; If[ !Video`VideoStreamQ[Video`VideoGUIDump`stream], Video`VideoGUIDump`broken = True]; ); Video`VideoGUIDump`initialize[]; PaneSelector[{\"Minimal\" -> Video`VideoGUIDump`videoDisplayAreaWithButtons[Dynamic[Video`VideoGUIDump`stream], Dynamic[CurrentValue[\"ImageSizeMultiplier\"]], Dynamic[Video`VideoGUIDump`appearanceState], Dynamic[Video`VideoGUIDump`broken], Dynamic[Video`VideoGUIDump`initialize]], \"Basic\" -> Video`VideoGUIDump`videoBasicView[Dynamic[Video`VideoGUIDump`stream], Dynamic[CurrentValue[\"ImageSizeMultiplier\"]], Dynamic[Video`VideoGUIDump`appearanceState], Dynamic[Video`VideoGUIDump`broken], Dynamic[Video`VideoGUIDump`initialize]], \"Thumbnail\" -> Video`VideoGUIDump`videoThumbnailView[Dynamic[Video`VideoGUIDump`stream], Video`VideoGUIDump`path, Dynamic[Video`VideoGUIDump`appearanceState], Dynamic[Video`VideoGUIDump`broken], Dynamic[Video`VideoGUIDump`initialize]]}, Dynamic[Video`VideoGUIDump`appearanceState], ImageSize -> Automatic], Deinitialization :> (Quiet[If[Video`VideoStreamQ[Video`VideoGUIDump`stream], RemoveVideoStream[Video`VideoGUIDump`stream]]]; ), Initialization :> If[ !Video`VideoStreamQ[Video`VideoGUIDump`stream], Video`VideoGUIDump`initialize[]]]\nVideo`VideoGUI[(Video`VideoGUIDump`boxVersion_)?Video`VideoGUIDump`ValidVideoVersionQ, Video`VideoGUIDump`resourcePath_, Dynamic[Video`VideoGUIDump`appearanceState_], Video`VideoGUIDump`videoIn_] \/; MatchQ[Video`VideoGUIDump`resourcePath, _URL | _?Audio`Utilities`IsURIString] := MouseAppearance[Button[PaneSelector[{False -> Overlay[{ConstantImage[Video`VideoGUIDump`$gray64, Video`VideoGUIDump`$defaultThumbnailDimensions], Video`Internals`getAsset[\"$openBrowserIconDefault\", \"Large\", ImageSize -> 36]}, Alignment -> Center], True -> Overlay[{ConstantImage[Lighter[Video`VideoGUIDump`$gray64], Video`VideoGUIDump`$defaultThumbnailDimensions], Video`Internals`getAsset[\"$openBrowserIconHover\", \"Large\", ImageSize -> 36]}, Alignment -> Center]}, Dynamic[CurrentValue[\"MouseOver\"]], ImageSize -> Automatic], SystemOpen[Video`VideoGUIDump`resourcePath], Appearance -> None, Tooltip -> Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"openWithSystemPlayer\"]], TooltipStyle -> Video`VideoGUIDump`$tooltipStyle, ImageSize -> Video`VideoGUIDump`$defaultThumbnailDimensions, BaseStyle -> {ContextMenu -> {MenuItem[\"Copy Video\", KernelExecute[CopyToClipboard[NotebookRead[EvaluationCell[]]]], MenuEvaluator -> Automatic, Method -> \"Queued\"], MenuItem[\"Copy Resource Path\", KernelExecute[CopyToClipboard[RowBox[{\"Video`VideoGUIDump`resourcePath\"}]]], MenuEvaluator -> Automatic, Method -> \"Queued\"], Delimiter, MenuItem[\"Download Video...\", KernelExecute[Module[{Video`VideoGUIDump`path}, Video`VideoGUIDump`path = SystemDialogInput[\"Directory\", FileNameJoin[{$WolframDocumentsDirectory, \"Video\"}]]; If[StringQ[Video`VideoGUIDump`path], URLDownload[Video`VideoGUIDump`resourcePath, Video`VideoGUIDump`path]]]], MenuEvaluator -> Automatic, Method -> \"Queued\"], MenuItem[\"Open In System Player »\", KernelExecute[SystemOpen[Video`VideoGUIDump`resourcePath]], MenuEvaluator -> Automatic, Method -> \"Queued\"]}}], \"LinkHand\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`VideoGUI",
	"Video`VideoPart":"ObjectType: Symbol\nUsage: Video`VideoPart[vid: _Video|_VideoStream|_?VideoHandleQ, spec]\nextracts a list of images from vid.\n\nspec can be:\n\ta number (interpreted as time in seconds)\n\ta time quantity\n\ta \"Frames\" quantity\n\ta Interval specification containing any of the above\n\nThe options are:\n\t\"CallingFunction\" -> Video`VideoPart\n\t\"Step\" -> Automatic\n\tMaxItems -> Infinity\n\tVideoTracks -> 1\n\n\"Step\" will be used if spec is All or an Interval an its values can be:\n\ta number (interpreted as time in seconds)\n\ta time quantity\n\ta \"Frames\" quantity\n\tInto[n] returns uniformly spaced frames in ROI\n\t{\"Random\", Into[n]} returns random uniformly distributed frames in ROI\nThe value of VideoTracks can be an integer, a list of integers or All.\nMessages will be issued with the head specified in the \"CallingFunction\" option\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`VideoPart[Video`FrameExtractionDump`s___] := Block[{Video`FrameExtractionDump`a}, Video`FrameExtractionDump`a = System`Private`Arguments[Video`VideoPart[Video`FrameExtractionDump`s], 2]; If[Video`FrameExtractionDump`a === {}, $Failed, Video`FrameExtractionDump`iVideoPart @@ Video`FrameExtractionDump`a]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {CallingFunction -> Video`VideoPart, MaxItems -> Infinity, Step -> Automatic, VideoTracks -> 1}\nAttributes: {}\nFullName: Video`VideoPart",
	"Video`VideoPatternQ":"ObjectType: Symbol\nUsage: VideoPatternQ[patt_] returns True for patt matching _Video|_VideoStream|_?VideoHandleQ|_?Video`ValidVideoQHold and False for anything else.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`VideoPatternQ[_Video | _VideoStream | _?Video`VideoUtilitiesDump`VideoHandleQ | _?Video`ValidVideoQHold] := True\nVideo`VideoPatternQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`VideoPatternQ",
	"Internal`VideoProcessingOptions":"ObjectType: Symbol\nUsage: Internal`VideoProcessingOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`VideoProcessingOptions",
	"Video`VideoStreamQ":"ObjectType: Symbol\nUsage: Video`VideoStreamQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Video`VideoStreamQ[Video`VideoStreamDump`s___] := Block[{Video`VideoStreamDump`a, Video`VideoStreamDump`r}, Video`VideoStreamDump`a = System`Private`Arguments[Video`VideoStreamQ[Video`VideoStreamDump`s], 1]; Video`VideoStreamDump`r \/; Video`VideoStreamDump`a =!= {} &&  !FailureQ[Video`VideoStreamDump`r = Video`VideoStreamDump`iVideoStreamQ @@ Video`VideoStreamDump`a]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Video`VideoStreamQ",
	"NotebookTools`ViewNotebookPatch":"ObjectType: Symbol\nUsage: NotebookTools`ViewNotebookPatch\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NotebookTools`ViewNotebookPatch[NotebookTools`NotebookDiffDump`nbfile1_, NotebookTools`NotebookDiffDump`nbfile2_, NotebookTools`NotebookDiffDump`opts___] := NotebookTools`ViewNotebookPatch[NotebookTools`NotebookAlignmentPatch[NotebookTools`NotebookDiffDump`nbfile1, NotebookTools`NotebookDiffDump`nbfile2, NotebookTools`NotebookDiffDump`opts]]\nNotebookTools`ViewNotebookPatch[NotebookTools`NotebookDiffDump`p:NotebookTools`NotebookPatch[{NotebookTools`NotebookDiffDump`nbfile1_, NotebookTools`NotebookDiffDump`nbfile2_}, NotebookTools`NotebookDiffDump`cellpatchlist:{}, NotebookTools`NotebookDiffDump`optionpatchlist:{}]] := MessageDialog[Row[{\"No differences found between \", NotebookTools`NotebookDiffDump`nbfile1, \" and \", NotebookTools`NotebookDiffDump`nbfile2}]]\nNotebookTools`ViewNotebookPatch[NotebookTools`NotebookDiffDump`p:NotebookTools`NotebookPatch[{NotebookTools`NotebookDiffDump`nbfile1_, NotebookTools`NotebookDiffDump`nbfile2_}, NotebookTools`NotebookDiffDump`cellpatchlist_, NotebookTools`NotebookDiffDump`optionpatchlist_]] := CreateDocument[DynamicModule[{NotebookTools`NotebookDiffDump`patch, NotebookTools`NotebookDiffDump`cellpatches, NotebookTools`NotebookDiffDump`optionpatches, NotebookTools`NotebookDiffDump`cellnum, NotebookTools`NotebookDiffDump`optnum, NotebookTools`NotebookDiffDump`num, NotebookTools`NotebookDiffDump`nbobj1, NotebookTools`NotebookDiffDump`nbobj2, NotebookTools`NotebookDiffDump`cellobjs1, NotebookTools`NotebookDiffDump`cellobjs2, NotebookTools`NotebookDiffDump`celloutlines1, NotebookTools`NotebookDiffDump`celloutlines2, NotebookTools`NotebookDiffDump`chosen = {0}, NotebookTools`NotebookDiffDump`applyPatch, NotebookTools`NotebookDiffDump`applyCellPatch, NotebookTools`NotebookDiffDump`applyOptionPatch, NotebookTools`NotebookDiffDump`updateViews, NotebookTools`NotebookDiffDump`detailView, NotebookTools`NotebookDiffDump`screenarea}, NotebookTools`NotebookDiffDump`patch = NotebookTools`NotebookDiffDump`p; NotebookTools`NotebookDiffDump`cellpatches = NotebookTools`NotebookDiffDump`cellpatchlist; NotebookTools`NotebookDiffDump`optionpatches = NotebookTools`NotebookDiffDump`optionpatchlist; NotebookTools`NotebookDiffDump`cellnum = Length[NotebookTools`NotebookDiffDump`cellpatches]; NotebookTools`NotebookDiffDump`optnum = Length[NotebookTools`NotebookDiffDump`optionpatches]; NotebookTools`NotebookDiffDump`num = NotebookTools`NotebookDiffDump`cellnum + NotebookTools`NotebookDiffDump`optnum; NotebookTools`NotebookDiffDump`screenarea = \"ScreenArea\" \/. First[SystemInformation[\"Devices\", \"ScreenInformation\"]]; NotebookTools`NotebookDiffDump`nbobj1 = NotebookOpen[NotebookTools`NotebookDiffDump`nbfile1, NotebookTools`NotebookDiffDump`compareNotebookWindowPositionOptions[\"Notebook1\", NotebookTools`NotebookDiffDump`screenarea]]; NotebookTools`NotebookDiffDump`nbobj2 = NotebookOpen[NotebookTools`NotebookDiffDump`nbfile2, NotebookTools`NotebookDiffDump`compareNotebookWindowPositionOptions[\"Notebook2\", NotebookTools`NotebookDiffDump`screenarea]]; NotebookTools`NotebookDiffDump`cellobjs1 = Cells[NotebookTools`NotebookDiffDump`nbobj1]; NotebookTools`NotebookDiffDump`cellobjs2 = Cells[NotebookTools`NotebookDiffDump`nbobj2]; Quiet[NotebookTools`NotebookDiffDump`celloutlines1 = NotebookTools`NotebookLookup[NotebookTools`NotebookDiffDump`nbfile1, \"CellOutline\"]; NotebookTools`NotebookDiffDump`celloutlines2 = NotebookTools`NotebookLookup[NotebookTools`NotebookDiffDump`nbfile2, \"CellOutline\"]; ]; NotebookTools`NotebookDiffDump`updateViews[{NotebookTools`NotebookDiffDump`chosen_}] \/; NotebookTools`NotebookDiffDump`chosen <= NotebookTools`NotebookDiffDump`cellnum := Block[{NotebookTools`NotebookDiffDump`itempatch = NotebookTools`NotebookDiffDump`cellpatches[[NotebookTools`NotebookDiffDump`chosen]], NotebookTools`NotebookDiffDump`apos, NotebookTools`NotebookDiffDump`bpos}, NotebookTools`NotebookDiffDump`apos = (If[ListQ[#1], Most[#1], #1] & )[First[NotebookTools`NotebookDiffDump`itempatch]]; NotebookTools`NotebookDiffDump`bpos = (If[ListQ[#1], Most[#1], #1] & )[Last[NotebookTools`NotebookDiffDump`itempatch]]; NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj1, NotebookTools`NotebookDiffDump`apos, If[IntegerQ[NotebookTools`NotebookDiffDump`apos], NotebookTools`NotebookDiffDump`cellobjs1[[NotebookTools`NotebookDiffDump`apos]], NotebookTools`NotebookDiffDump`cellobjs1[[Span @@ NotebookTools`NotebookDiffDump`apos]]]]; NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj2, NotebookTools`NotebookDiffDump`bpos, If[IntegerQ[NotebookTools`NotebookDiffDump`bpos], NotebookTools`NotebookDiffDump`cellobjs2[[NotebookTools`NotebookDiffDump`bpos]], NotebookTools`NotebookDiffDump`cellobjs2[[Span @@ NotebookTools`NotebookDiffDump`bpos]]]]; NotebookTools`NotebookDiffDump`$detailView = NotebookTools`NotebookDiffDump`detailView[NotebookTools`NotebookDiffDump`apos, NotebookTools`NotebookDiffDump`bpos]]; NotebookTools`NotebookDiffDump`updateViews[{NotebookTools`NotebookDiffDump`chosen_}] := Block[{NotebookTools`NotebookDiffDump`itempatch = NotebookTools`NotebookDiffDump`optionpatches[[NotebookTools`NotebookDiffDump`chosen - NotebookTools`NotebookDiffDump`cellnum]]}, SelectionMove[NotebookTools`NotebookDiffDump`nbobj1, After, Notebook]; SelectionMove[NotebookTools`NotebookDiffDump`nbobj2, After, Notebook]; NotebookTools`NotebookDiffDump`$detailView = NotebookTools`NotebookDiffDump`notebookOptionCompare[If[ListQ[First[NotebookTools`NotebookDiffDump`itempatch]], Last[First[NotebookTools`NotebookDiffDump`itempatch]], {}], If[ListQ[Last[NotebookTools`NotebookDiffDump`itempatch]], Last[Last[NotebookTools`NotebookDiffDump`itempatch]], {}]]]; NotebookTools`NotebookDiffDump`detailView[NotebookTools`NotebookDiffDump`apos:_Integer | {_Integer, _Integer}, NotebookTools`NotebookDiffDump`bpos:_Integer | {_Integer, _Integer}] := Block[{NotebookTools`NotebookDiffDump`cellstr1, NotebookTools`NotebookDiffDump`cellstr2}, If[Length[NotebookTools`NotebookDiffDump`celloutlines1] < Max[NotebookTools`NotebookDiffDump`apos] || Length[NotebookTools`NotebookDiffDump`celloutlines2] < Max[NotebookTools`NotebookDiffDump`bpos], \"Cell String Comparison is only available for notebooks that have file outline caches\", NotebookTools`NotebookDiffDump`cellstr1 = If[IntegerQ[NotebookTools`NotebookDiffDump`apos], {\"\"}, NotebookTools`NotebookLookup[NotebookTools`NotebookDiffDump`nbfile1, \"CellString\", Alternatives @@ NotebookTools`NotebookDiffDump`celloutlines1[[Span @@ NotebookTools`NotebookDiffDump`apos]]]]; NotebookTools`NotebookDiffDump`cellstr2 = If[IntegerQ[NotebookTools`NotebookDiffDump`bpos], {\"\"}, NotebookTools`NotebookLookup[NotebookTools`NotebookDiffDump`nbfile2, \"CellString\", Alternatives @@ NotebookTools`NotebookDiffDump`celloutlines2[[Span @@ NotebookTools`NotebookDiffDump`bpos]]]]; NotebookTools`NotebookDiffDump`cellstr1 = StringJoin[Riffle[NotebookTools`NotebookDiffDump`cellstr1, \"\\n,\\n\"]]; NotebookTools`NotebookDiffDump`cellstr2 = StringJoin[Riffle[NotebookTools`NotebookDiffDump`cellstr2, \"\\n,\\n\"]]; NotebookTools`NotebookDiffDump`cellStringCompare[NotebookTools`NotebookDiffDump`cellstr1, NotebookTools`NotebookDiffDump`cellstr2]]]; NotebookTools`NotebookDiffDump`detailView[___] := Null; If[Length[NotebookTools`NotebookDiffDump`celloutlines1] > 0 && Length[NotebookTools`NotebookDiffDump`celloutlines2] > 0, CreateDocument[ExpressionCell[Dynamic[NotebookTools`NotebookDiffDump`$detailView, SynchronousUpdating -> False], \"Output\", FontSize -> 11, CellMargins -> {{0, 0}, {0, 0}}], ShowCellBracket -> False, WindowTitle -> \"Comparison Details\", NotebookTools`NotebookDiffDump`compareNotebookWindowPositionOptions[\"Strings\"]]]; NotebookTools`NotebookDiffDump`applyPatch[NotebookTools`NotebookDiffDump`direction_, {NotebookTools`NotebookDiffDump`chosen_}] := If[NotebookTools`NotebookDiffDump`chosen <= NotebookTools`NotebookDiffDump`cellnum, NotebookTools`NotebookDiffDump`applyCellPatch[NotebookTools`NotebookDiffDump`direction, NotebookTools`NotebookDiffDump`cellpatches[[NotebookTools`NotebookDiffDump`chosen]]], NotebookTools`NotebookDiffDump`applyOptionPatch[NotebookTools`NotebookDiffDump`direction, NotebookTools`NotebookDiffDump`optionpatches[[NotebookTools`NotebookDiffDump`chosen - NotebookTools`NotebookDiffDump`cellnum]]]]; NotebookTools`NotebookDiffDump`applyCellPatch[NotebookTools`NotebookDiffDump`direction_, NotebookTools`ItemPatch[{NotebookTools`NotebookDiffDump`amin_, NotebookTools`NotebookDiffDump`amax_, NotebookTools`NotebookDiffDump`acells_}, {NotebookTools`NotebookDiffDump`bmin_, NotebookTools`NotebookDiffDump`bmax_, NotebookTools`NotebookDiffDump`bcells_}]] := (NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj1, {NotebookTools`NotebookDiffDump`amin, NotebookTools`NotebookDiffDump`amax}, NotebookTools`NotebookDiffDump`cellobjs1[[NotebookTools`NotebookDiffDump`amin ;; NotebookTools`NotebookDiffDump`amax]]]; NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj2, {NotebookTools`NotebookDiffDump`bmin, NotebookTools`NotebookDiffDump`bmax}, NotebookTools`NotebookDiffDump`cellobjs2[[NotebookTools`NotebookDiffDump`bmin ;; NotebookTools`NotebookDiffDump`bmax]]]; If[NotebookTools`NotebookDiffDump`direction === (1 -> 2), NotebookWrite[NotebookTools`NotebookDiffDump`nbobj2, NotebookRead[NotebookTools`NotebookDiffDump`nbobj1], All], NotebookWrite[NotebookTools`NotebookDiffDump`nbobj1, NotebookRead[NotebookTools`NotebookDiffDump`nbobj2], All]]); NotebookTools`NotebookDiffDump`applyCellPatch[NotebookTools`NotebookDiffDump`direction_, NotebookTools`ItemPatch[NotebookTools`NotebookDiffDump`apos_, {NotebookTools`NotebookDiffDump`bmin_, NotebookTools`NotebookDiffDump`bmax_, NotebookTools`NotebookDiffDump`bcells_}]] := (NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj1, NotebookTools`NotebookDiffDump`apos, NotebookTools`NotebookDiffDump`cellobjs1[[NotebookTools`NotebookDiffDump`apos]]]; NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj2, {NotebookTools`NotebookDiffDump`bmin, NotebookTools`NotebookDiffDump`bmax}, NotebookTools`NotebookDiffDump`cellobjs2[[NotebookTools`NotebookDiffDump`bmin ;; NotebookTools`NotebookDiffDump`bmax]]]; If[NotebookTools`NotebookDiffDump`direction === (1 -> 2), NotebookDelete[NotebookTools`NotebookDiffDump`nbobj2], NotebookWrite[NotebookTools`NotebookDiffDump`nbobj1, NotebookRead[NotebookTools`NotebookDiffDump`nbobj2], All]]); NotebookTools`NotebookDiffDump`applyCellPatch[NotebookTools`NotebookDiffDump`direction_, NotebookTools`ItemPatch[{NotebookTools`NotebookDiffDump`amin_, NotebookTools`NotebookDiffDump`amax_, NotebookTools`NotebookDiffDump`acells_}, NotebookTools`NotebookDiffDump`bpos_]] := (NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj1, {NotebookTools`NotebookDiffDump`amin, NotebookTools`NotebookDiffDump`amax}, NotebookTools`NotebookDiffDump`cellobjs1[[NotebookTools`NotebookDiffDump`amin ;; NotebookTools`NotebookDiffDump`amax]]]; NotebookTools`NotebookDiffDump`selectCells[NotebookTools`NotebookDiffDump`nbobj2, NotebookTools`NotebookDiffDump`bpos, NotebookTools`NotebookDiffDump`cellobjs2[[NotebookTools`NotebookDiffDump`bpos]]]; If[NotebookTools`NotebookDiffDump`direction === (1 -> 2), NotebookWrite[NotebookTools`NotebookDiffDump`nbobj2, NotebookRead[NotebookTools`NotebookDiffDump`nbobj1], All], NotebookDelete[NotebookTools`NotebookDiffDump`nbobj1]]); NotebookTools`NotebookDiffDump`applyOptionPatch[NotebookTools`NotebookDiffDump`direction_, NotebookTools`ItemPatch[{NotebookTools`NotebookDiffDump`amin_, NotebookTools`NotebookDiffDump`amax_, {NotebookTools`NotebookDiffDump`aopts__}}, {NotebookTools`NotebookDiffDump`bmin_, NotebookTools`NotebookDiffDump`bmax_, {NotebookTools`NotebookDiffDump`bopts__}}]] := If[NotebookTools`NotebookDiffDump`direction === (1 -> 2), SetOptions[NotebookTools`NotebookDiffDump`nbobj2, NotebookTools`NotebookDiffDump`aopts], SetOptions[NotebookTools`NotebookDiffDump`nbobj1, NotebookTools`NotebookDiffDump`bopts]]; NotebookTools`NotebookDiffDump`applyOptionPatch[NotebookTools`NotebookDiffDump`direction_, NotebookTools`ItemPatch[NotebookTools`NotebookDiffDump`apos, {NotebookTools`NotebookDiffDump`bmin_, NotebookTools`NotebookDiffDump`bmax_, {NotebookTools`NotebookDiffDump`bopts__}}]] := If[NotebookTools`NotebookDiffDump`direction === (1 -> 2), SetOptions[NotebookTools`NotebookDiffDump`nbobj2, Sequence @@ (First[#1] -> Inherited & ) \/@ {NotebookTools`NotebookDiffDump`bopts}], SetOptions[NotebookTools`NotebookDiffDump`nbobj1, NotebookTools`NotebookDiffDump`bopts]]; NotebookTools`NotebookDiffDump`applyOptionPatch[NotebookTools`NotebookDiffDump`direction_, NotebookTools`ItemPatch[{NotebookTools`NotebookDiffDump`amin_, NotebookTools`NotebookDiffDump`amax_, {NotebookTools`NotebookDiffDump`aopts__}}, NotebookTools`NotebookDiffDump`bpos_]] := If[NotebookTools`NotebookDiffDump`direction === (1 -> 2), SetOptions[NotebookTools`NotebookDiffDump`nbobj2, NotebookTools`NotebookDiffDump`aopts], SetOptions[NotebookTools`NotebookDiffDump`nbobj1, Sequence @@ (First[#1] -> Inherited & ) \/@ {NotebookTools`NotebookDiffDump`aopts}]]; EventHandler[Column[{Row[{Button[\"<-\", NotebookTools`NotebookDiffDump`applyPatch[2 -> 1, NotebookTools`NotebookDiffDump`chosen]], Button[\"->\", NotebookTools`NotebookDiffDump`applyPatch[1 -> 2, NotebookTools`NotebookDiffDump`chosen]]}], ListPicker[Dynamic[NotebookTools`NotebookDiffDump`chosen, (NotebookTools`NotebookDiffDump`chosen = #1; NotebookTools`NotebookDiffDump`updateViews[NotebookTools`NotebookDiffDump`chosen]) & ], Thread[Range[NotebookTools`NotebookDiffDump`num] -> Join[NotebookTools`NotebookDiffDump`cellPatchToLabel \/@ NotebookTools`NotebookDiffDump`cellpatches, NotebookTools`NotebookDiffDump`optionPatchToLabel \/@ NotebookTools`NotebookDiffDump`optionpatches]], Scrollbars -> False, ImageSize -> Scaled[1], FieldSize -> {{1, Infinity}, {1, Infinity}}, BaseStyle -> \"DialogStyle\", FrameMargins -> 5, Multiselection -> False]}], {\"DownArrowKeyDown\" :> (NotebookTools`NotebookDiffDump`chosen = Clip[NotebookTools`NotebookDiffDump`chosen + 1, {1, NotebookTools`NotebookDiffDump`num}]; NotebookTools`NotebookDiffDump`updateViews[NotebookTools`NotebookDiffDump`chosen]), \"UpArrowKeyDown\" :> (NotebookTools`NotebookDiffDump`chosen = Clip[NotebookTools`NotebookDiffDump`chosen - 1, {1, NotebookTools`NotebookDiffDump`num}]; NotebookTools`NotebookDiffDump`updateViews[NotebookTools`NotebookDiffDump`chosen])}], Initialization :> {NotebookTools`NotebookDiffDump`$detailView = \"\"}], WindowTitle -> \"Compare Notebook Files\", ShowCellBracket -> False, NotebookTools`NotebookDiffDump`compareNotebookWindowPositionOptions[\"Controller\"], DockedCells -> {Cell[BoxData[ToBoxes[Grid[{{Row[{Style[FileNameTake[NotebookTools`NotebookDiffDump`nbfile1], Bold], \" - \", DirectoryName[NotebookTools`NotebookDiffDump`nbfile1]}], NotebookTools`NotebookDiffDump`notebookPatchSummary[NotebookTools`NotebookDiffDump`p], Row[{Style[FileNameTake[NotebookTools`NotebookDiffDump`nbfile2], Bold], \" - \", DirectoryName[NotebookTools`NotebookDiffDump`nbfile2]}]}}, ItemSize -> Scaled[0.33], Alignment -> {{Left, Center, Right}, Automatic}]]], \"DockedCell\", \"ControlStyle\", LineBreakWithin -> Automatic]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NotebookTools`ViewNotebookPatch",
	"NotebookTools`ViewSequenceAlignment":"ObjectType: Symbol\nUsage: NotebookTools`ViewSequenceAlignment\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NotebookTools`ViewSequenceAlignment[NotebookTools`NotebookDiffDump`a_String, NotebookTools`NotebookDiffDump`b_String, NotebookTools`NotebookDiffDump`opts:OptionsPattern[]] := NotebookTools`ViewSequenceAlignment[NotebookTools`NotebookDiffDump`a, NotebookTools`NotebookDiffDump`b, NotebookTools`NotebookDiffDump`$defaultStringAlignmentFormat, NotebookTools`NotebookDiffDump`opts]\nNotebookTools`ViewSequenceAlignment[NotebookTools`NotebookDiffDump`a_List, NotebookTools`NotebookDiffDump`b_List, NotebookTools`NotebookDiffDump`opts:OptionsPattern[]] := NotebookTools`ViewSequenceAlignment[NotebookTools`NotebookDiffDump`a, NotebookTools`NotebookDiffDump`b, NotebookTools`NotebookDiffDump`$defaultListAlignmentFormat, NotebookTools`NotebookDiffDump`opts]\nNotebookTools`ViewSequenceAlignment[NotebookTools`NotebookDiffDump`a_String, NotebookTools`NotebookDiffDump`b_String, NotebookTools`NotebookDiffDump`fmt:\"Separate\" | \"Combined\" | \"Lines\", NotebookTools`NotebookDiffDump`opts:OptionsPattern[]] := NotebookTools`NotebookDiffDump`viewStringAlignment[NotebookTools`NotebookDiffDump`a, NotebookTools`NotebookDiffDump`b, NotebookTools`NotebookDiffDump`fmt, NotebookTools`NotebookDiffDump`opts]\nNotebookTools`ViewSequenceAlignment[NotebookTools`NotebookDiffDump`a_List, NotebookTools`NotebookDiffDump`b_List, NotebookTools`NotebookDiffDump`fmt:\"Separate\" | \"Combined\" | \"SideBySide\", NotebookTools`NotebookDiffDump`opts:OptionsPattern[]] := NotebookTools`NotebookDiffDump`viewListAlignment[NotebookTools`NotebookDiffDump`a, NotebookTools`NotebookDiffDump`b, NotebookTools`NotebookDiffDump`fmt, NotebookTools`NotebookDiffDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {GapPenalty -> 0, IgnoreCase -> False, MergeDifferences -> True, Method -> Global, SimilarityRules -> Automatic}\nAttributes: {}\nFullName: NotebookTools`ViewSequenceAlignment",
	"Reduce`VirtSubstInstance":"ObjectType: Symbol\nUsage: Reduce`VirtSubstInstance\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`VirtSubstInstance[System`VirtSubstDump`form_, System`VirtSubstDump`vars_] := Block[{System`VirtSubstDump`$UseLogicalExpand = True}, Module[{System`VirtSubstDump`sol, System`VirtSubstDump`i, System`VirtSubstDump`ff}, System`VirtSubstDump`ff = System`VirtSubstDump`lexpform[System`VirtSubstDump`form]; Do[System`VirtSubstDump`sol = System`VirtSubstDump`quadFI[System`VirtSubstDump`ff, System`VirtSubstDump`vars[[System`VirtSubstDump`i]], System`VirtSubstDump`vars]; If[System`VirtSubstDump`sol =!= $Failed, Return[System`VirtSubstDump`sol, Module]], {System`VirtSubstDump`i, Length[System`VirtSubstDump`vars]}]; $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`VirtSubstInstance",
	"Reduce`VirtSubstQE":"ObjectType: Symbol\nUsage: Reduce`VirtSubstQE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`VirtSubstQE[System`VirtSubstDump`quants_, System`VirtSubstDump`form_, System`VirtSubstDump`full_] := Block[{System`VirtSubstDump`$UseLogicalExpand = True}, Module[{System`VirtSubstDump`qq, System`VirtSubstDump`ff, System`VirtSubstDump`q, System`VirtSubstDump`vars, System`VirtSubstDump`i, System`VirtSubstDump`tmp, System`VirtSubstDump`elims, System`VirtSubstDump`s}, System`VirtSubstDump`qq = System`VirtSubstDump`quants; System`VirtSubstDump`ff = System`VirtSubstDump`lexpform[System`VirtSubstDump`form]; System`VirtSubstDump`elims = {}; If[ !System`VirtSubstDump`full, System`VirtSubstDump`s = System`VirtSubstDump`lesize[System`VirtSubstDump`ff]]; While[System`VirtSubstDump`qq =!= {}, {System`VirtSubstDump`q, System`VirtSubstDump`vars} = System`VirtSubstDump`qq[[1]]; If[System`VirtSubstDump`q === ForAll, System`VirtSubstDump`ff = System`VirtSubstDump`lexpform[System`VirtSubstDump`negate[System`VirtSubstDump`ff]]]; System`VirtSubstDump`i = 1; While[System`VirtSubstDump`i <= Length[System`VirtSubstDump`vars], System`VirtSubstDump`tmp = System`VirtSubstDump`quadQE[System`VirtSubstDump`ff, System`VirtSubstDump`vars[[System`VirtSubstDump`i]]]; If[System`VirtSubstDump`tmp === $Failed, System`VirtSubstDump`i++, If[System`VirtSubstDump`full, System`VirtSubstDump`ff = System`VirtSubstDump`lexpform[System`VirtSubstDump`tmp], System`VirtSubstDump`tmp = System`VirtSubstDump`lexpform[System`VirtSubstDump`tmp]; System`VirtSubstDump`s = 2*System`VirtSubstDump`s; If[If[System`VirtSubstDump`q === ForAll, System`VirtSubstDump`negsize, System`VirtSubstDump`lesize][System`VirtSubstDump`tmp] > System`VirtSubstDump`s, Return[$Failed, Module], System`VirtSubstDump`ff = System`VirtSubstDump`tmp]]; System`VirtSubstDump`elims = Append[System`VirtSubstDump`elims, System`VirtSubstDump`vars[[System`VirtSubstDump`i]]]; System`VirtSubstDump`vars = Drop[System`VirtSubstDump`vars, {System`VirtSubstDump`i}]]]; If[Length[System`VirtSubstDump`vars] > 0, If[Length[System`VirtSubstDump`elims] == 0, Return[$Failed, Module]]; System`VirtSubstDump`qq[[1]] = {System`VirtSubstDump`q, System`VirtSubstDump`vars}; If[System`VirtSubstDump`q === ForAll, System`VirtSubstDump`ff = System`VirtSubstDump`lexpform[System`VirtSubstDump`negate[System`VirtSubstDump`ff]]]; System`VirtSubstDump`ff = Simplify`SimplifyInequalities[System`VirtSubstDump`ff, 4]; Return[{System`VirtSubstDump`qq, System`VirtSubstDump`ff, System`VirtSubstDump`elims, System`VirtSubstDump`$UseLogicalExpand}, Module]]; If[System`VirtSubstDump`q === ForAll, System`VirtSubstDump`ff = System`VirtSubstDump`lexpform[System`VirtSubstDump`negate[System`VirtSubstDump`ff]]]; System`VirtSubstDump`qq = Rest[System`VirtSubstDump`qq]]; System`VirtSubstDump`ff = Simplify`SimplifyInequalities[System`VirtSubstDump`ff, 4]; {{}, System`VirtSubstDump`ff, System`VirtSubstDump`elims, System`VirtSubstDump`$UseLogicalExpand}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`VirtSubstQE",
	"ComputationalGeometry`Surface`VisibilityFunction":"ObjectType: Symbol\nUsage: ComputationalGeometry`Surface`VisibilityFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ComputationalGeometry`Surface`VisibilityFunction",
	"Charting`CommonDump`VisualizationCoreHiddenOptions":"ObjectType: Symbol\nUsage: Charting`CommonDump`VisualizationCoreHiddenOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Charting`CommonDump`VisualizationCoreHiddenOptions[RegionPlot3D] = {\"ClipFill\", \"ClipRegion\", \"ColorStyle\", \"Compiled\", \"ContourSmoothing\", \"ContourStyle\", \"Contours\", \"ContoursAxis\", \"DualPlot\", \"Extrusion\", \"ExtrusionStyle\", \"HiddenSurface\", \"Labels\", \"PolygonTriangulate\", \"RegionFunction\", \"ShadingMode\", \"ShadingStyle\", \"VertexColors\", \"VertexNormals\", \"Vertices\", \"VerticesStyle\", \"ScalingFunctions\", \"CoordinateFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[VectorDensityPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"PlotStyle\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListPlot3D] = {\"ClipFill\", \"ClipRegion\", \"ColorStyle\", \"ContourSmoothing\", \"ContourStyle\", \"Contours\", \"ContoursAxis\", \"DualPlot\", \"HiddenSurface\", \"Labels\", \"MaxRecursion\", \"MeshRange\", \"PlotPoints\", \"PlotRangeClipping\", \"PolygonTriangulate\", \"ShadingMode\", \"ShadingStyle\", \"Vertices\", \"VerticesStyle\", \"Overlays\", \"OverlaysStyle\", \"Extrusion\", \"ExtrusionStyle\", \"CoordinateFunctions\", \"ScalingFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListCurvePathPlot] = {\"MaxRecursion\", \"MeshShading\", \"PolygonTriangulate\", \"ScalingFunctions\", \"CoordinateFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[RegionPlot] = {\"ColorStyle\", \"Compiled\", \"PolygonTriangulate\", \"ShadingMode\", \"ShadingStyle\", \"RegionFunction\", \"ScalingFunctions\", \"CoordinateFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ContourPlot3D] = {\"ClipFill\", \"ClipRegion\", \"ColorStyle\", \"Compiled\", \"ContourShading\", \"ContourSmoothing\", \"ContoursAxis\", \"DualPlot\", \"Extrusion\", \"ExtrusionStyle\", \"Filling\", \"FillingStyle\", \"HiddenSurface\", \"InterpolantFunctions\", \"Labels\", \"PlotStyle\", \"PolygonTriangulate\", \"ShadingMode\", \"ShadingStyle\", \"TexturesGroup\", \"VertexColors\", \"VertexNormals\", \"Vertices\", \"VerticesStyle\", \"ScalingFunctions\", \"CoordinateFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ParametricPlot3D] = {\"ClipRegion\", \"ColorStyle\", \"Compiled\", \"ContourSmoothing\", \"ContourStyle\", \"Contours\", \"ContoursAxis\", \"DualPlot\", \"Extrusion\", \"ExtrusionStyle\", \"HiddenSurface\", \"InterpolantFunctions\", \"Labels\", \"MaxDegrees\", \"ParametricMesh\", \"PlotDivision\", \"PolygonTriangulate\", \"ShadingMode\", \"ShadingStyle\", \"TexturesGroup\", \"VertexColors\", \"VertexNormals\", \"Vertices\", \"VerticesStyle\", \"CoordinateFunctions\", \"ScalingFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListSurfacePlot3D] = {\"ClipFill\", \"ContourSmoothing\", \"Contours\", \"Extrusion\", \"ExtrusionStyle\", \"Filling\", \"FillingStyle\", \"MaxRecursion\", \"NormalsFunction\", \"PolygonTriangulate\", \"ShadingStyle\", \"VertexColors\", \"VertexNormals\", \"Vertices\", \"VerticesStyle\", \"ScalingFunctions\", \"CoordinateFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListContourPlot3D] = {\"ClipFill\", \"ClipRegion\", \"ColorStyle\", \"ContourSmoothing\", \"ContoursAxis\", \"ContourShading\", \"DualPlot\", \"Extrusion\", \"ExtrusionStyle\", \"Filling\", \"FillingStyle\", \"HiddenSurface\", \"Labels\", \"MaxRecursion\", \"NormalsFunction\", \"PlotStyle\", \"PolygonTriangulate\", \"ShadingMode\", \"ShadingStyle\", \"VertexColors\", \"VertexNormals\", \"Vertices\", \"VerticesStyle\", \"ScalingFunctions\", \"CoordinateFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[VectorPlot3D] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"VertexNormals\", \"ScalingFunctions\", \"CoordinateFunctions\", \"BackgroundStyle\", \"PlotStyle\", \"StreamPoints\", \"StreamScale\", \"StreamStyle\", \"LineIntegralConvolutionScale\", \"StreamColorFunction\", \"StreamColorFunctionScaling\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ContourPlot] = {\"ClipFill\", \"Compiled\", \"InterpolantFunctions\", \"NormalsFunction\", \"PolygonTriangulate\", \"MeshShading\", \"PlotStyle\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TextureCoordinateFunction\", \"TextureCoordinateScaling\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListStreamDensityPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"PlotPoints\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"PlotStyle\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListDensityPlot] = {\"ClipFill\", \"ColorStyle\", \"InterpolantFunctions\", \"MaxRecursion\", \"MeshRange\", \"MeshShading\", \"NormalsFunction\", \"PlotPoints\", \"PlotStyle\", \"PolygonTriangulate\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TextureCoordinateFunction\", \"TextureCoordinateScaling\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListContourPlot] = {\"ClipFill\", \"InterpolantFunctions\", \"MaxRecursion\", \"MeshRange\", \"NormalsFunction\", \"PlotPoints\", \"PolygonTriangulate\", \"MeshShading\", \"PlotStyle\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TextureCoordinateFunction\", \"TextureCoordinateScaling\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[VectorPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"PlotStyle\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[Plot3D] = {\"ClipFill\", \"ClipRegion\", \"ColorStyle\", \"Compiled\", \"ContourSmoothing\", \"ContourStyle\", \"Contours\", \"ContoursAxis\", \"DualPlot\", \"HiddenSurface\", \"InterpolantFunctions\", \"Labels\", \"PlotRangeClipping\", \"PolygonTriangulate\", \"ShadingMode\", \"ShadingStyle\", \"TexturesGroup\", \"VertexColors\", \"VertexNormals\", \"Vertices\", \"VertexStyle\", \"Overlays\", \"OverlaysStyle\", \"Extrusion\", \"ExtrusionStyle\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TargetUnits\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ParametricPlot] = {\"MeshMarkers\", \"Compiled\", \"InterpolantFunctions\", \"MaxDegrees\", \"PlotDivision\", \"PolygonTriangulate\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TargetUnits\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[StreamDensityPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"PlotStyle\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListStreamPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"PlotPoints\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"PlotStyle\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[StreamPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"PlotStyle\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[DensityPlot] = {\"ClipFill\", \"Compiled\", \"ColorStyle\", \"InterpolantFunctions\", \"NormalsFunction\", \"PlotStyle\", \"PolygonTriangulate\", \"VertexColors\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TextureCoordinateFunction\", \"TextureCoordinateScaling\", \"VertexStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListVectorPlot3D] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"VertexNormals\", \"ScalingFunctions\", \"CoordinateFunctions\", \"BackgroundStyle\", \"PlotStyle\", \"StreamPoints\", \"StreamScale\", \"StreamStyle\", \"LineIntegralConvolutionScale\", \"StreamColorFunction\", \"StreamColorFunctionScaling\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListVectorPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"PlotStyle\", \"PlotPoints\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListVectorDensityPlot] = {\"Compiled\", \"EdgeStyle\", \"InterpolantFunctions\", \"PolygonTriangulate\", \"BlendFunction\", \"VertexColors\", \"PlotStyle\", \"PlotPoints\", \"ScalingFunctions\", \"CoordinateFunctions\", \"LineIntegralConvolutionScale\", \"RasterSize\", \"BackgroundStyle\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[Plot | LogPlot | LogLogPlot | LogLinearPlot] = {\"MeshMarkers\", \"ClipFill\", \"Compiled\", \"InterpolantFunctions\", \"MaxDegrees\", \"PlotDivision\", \"BoundaryStyle\", \"PolygonTriangulate\", \"CoordinateFunctions\", \"ScalingFunctions\", \"TargetUnits\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListPlot | ListLogPlot | ListLogLogPlot | ListLogLinearPlot] = {\"MeshMarkers\", \"ClipFill\", \"InterpolantFunctions\", \"PlotJoined\", \"BoundaryStyle\", \"MaxRecursion\", \"PolygonTriangulate\", \"RegionFunction\", \"CoordinateFunctions\", \"ScalingFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[ListLinePlot | DateListPlot] = {\"MeshMarkers\", \"ClipFill\", \"InterpolantFunctions\", \"PlotJoined\", \"BoundaryStyle\", \"MaxRecursion\", \"PolygonTriangulate\", \"RegionFunction\", \"CoordinateFunctions\", \"ScalingFunctions\"}\nCharting`CommonDump`VisualizationCoreHiddenOptions[_] := {}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: Charting`CommonDump`VisualizationCoreHiddenOptions",
	"Visualization`VisualizationDiscontinuities":"ObjectType: Symbol\nUsage: Visualization`VisualizationDiscontinuities\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`VisualizationDiscontinuities[Visualization`DiscontinuityDump`e_, Visualization`DiscontinuityDump`z_] := Catch[Module[{Visualization`DiscontinuityDump`d}, If[Visualization`DiscontinuityDump`AvoidAnalysisQ[Visualization`DiscontinuityDump`e, Visualization`DiscontinuityDump`z], Throw[{}]]; Visualization`DiscontinuityDump`d = Visualization`DiscontinuityDump`Discontinuities[Visualization`DiscontinuityDump`e, Visualization`DiscontinuityDump`z]; If[ !ListQ[Visualization`DiscontinuityDump`d], Throw[{}]]; Select[Visualization`DiscontinuityDump`d, Last[#1] =!= False && Last[#1] =!= True & ]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Visualization`VisualizationDiscontinuities",
	"Internal`VisualizationOptions":"ObjectType: Symbol\nUsage: Internal`VisualizationOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`VisualizationOptions",
	"ResourceFunctionHelpers`VisualizeDigitPath":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`VisualizeDigitPath\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`VisualizeDigitPath[{(ResourceFunctionHelpers`VisualizeDigitPath`Private`n_)?NumericQ, (ResourceFunctionHelpers`VisualizeDigitPath`Private`b_Integer)?Positive}, (ResourceFunctionHelpers`VisualizeDigitPath`Private`l_Integer)?Positive, ResourceFunctionHelpers`VisualizeDigitPath`Private`type:\"Multigraph\" | \"WeightedGraph\" | \"Dynamic\" | \"MatrixPlot\":\"Multigraph\"] := Module[{ResourceFunctionHelpers`VisualizeDigitPath`Private`list = First[RealDigits[Re[ResourceFunctionHelpers`VisualizeDigitPath`Private`n], ResourceFunctionHelpers`VisualizeDigitPath`Private`b, ResourceFunctionHelpers`VisualizeDigitPath`Private`l]] \/. Indeterminate -> 0, ResourceFunctionHelpers`VisualizeDigitPath`Private`replace = ResourceFunctionHelpers`VisualizeDigitPath`Private`replaceDigits[ResourceFunctionHelpers`VisualizeDigitPath`Private`b], ResourceFunctionHelpers`VisualizeDigitPath`Private`listindex, ResourceFunctionHelpers`VisualizeDigitPath`Private`procList, ResourceFunctionHelpers`VisualizeDigitPath`Private`g, ResourceFunctionHelpers`VisualizeDigitPath`Private`ewcolors, ResourceFunctionHelpers`VisualizeDigitPath`Private`vColors, ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcList, ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeights, ResourceFunctionHelpers`VisualizeDigitPath`Private`eColors, ResourceFunctionHelpers`VisualizeDigitPath`Private`vLabels}, ResourceFunctionHelpers`VisualizeDigitPath`Private`listindex = Table[ResourceFunctionHelpers`VisualizeDigitPath`Private`list[[ResourceFunctionHelpers`VisualizeDigitPath`Private`i]] -> ResourceFunctionHelpers`VisualizeDigitPath`Private`list[[ResourceFunctionHelpers`VisualizeDigitPath`Private`i + 1]], {ResourceFunctionHelpers`VisualizeDigitPath`Private`i, 1, Length[ResourceFunctionHelpers`VisualizeDigitPath`Private`list] - 1}]; ResourceFunctionHelpers`VisualizeDigitPath`Private`vLabels = ResourceFunctionHelpers`VisualizeDigitPath`Private`vertexLabels[ResourceFunctionHelpers`VisualizeDigitPath`Private`listindex]; ResourceFunctionHelpers`VisualizeDigitPath`Private`procList = ResourceFunctionHelpers`VisualizeDigitPath`Private`processedList[ResourceFunctionHelpers`VisualizeDigitPath`Private`listindex, ResourceFunctionHelpers`VisualizeDigitPath`Private`b]; ResourceFunctionHelpers`VisualizeDigitPath`Private`g = SparseArray[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList, {ResourceFunctionHelpers`VisualizeDigitPath`Private`b, ResourceFunctionHelpers`VisualizeDigitPath`Private`b}]; ResourceFunctionHelpers`VisualizeDigitPath`Private`vColors = Replace[ResourceFunctionHelpers`VisualizeDigitPath`Private`vLabels, ResourceFunctionHelpers`VisualizeDigitPath`Private`x_Integer :> ResourceFunctionHelpers`VisualizeDigitPath`Private`x :> Evaluate[If[ResourceFunctionHelpers`VisualizeDigitPath`Private`b === 10, ResourceFunctionHelpers`VisualizeDigitPath`Private`$colors10[[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1]], ResourceFunctionHelpers`VisualizeDigitPath`Private`colors[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b]]], -1]; ResourceFunctionHelpers`VisualizeDigitPath`Private`eColors = Replace[Keys[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList], {ResourceFunctionHelpers`VisualizeDigitPath`Private`x_, ResourceFunctionHelpers`VisualizeDigitPath`Private`y_} :> (ResourceFunctionHelpers`VisualizeDigitPath`Private`x -> ResourceFunctionHelpers`VisualizeDigitPath`Private`y) -> If[ResourceFunctionHelpers`VisualizeDigitPath`Private`b === 10, ResourceFunctionHelpers`VisualizeDigitPath`Private`$colors10[[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1]], ResourceFunctionHelpers`VisualizeDigitPath`Private`colors[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b]], -1]; Switch[ResourceFunctionHelpers`VisualizeDigitPath`Private`type, \"WeightedGraph\", ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcList = ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcess[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList]; ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeights = ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeightsFun[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList]; ResourceFunctionHelpers`VisualizeDigitPath`Private`ewcolors = Replace[Keys[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList], {ResourceFunctionHelpers`VisualizeDigitPath`Private`x_, ResourceFunctionHelpers`VisualizeDigitPath`Private`y_} :> DirectedEdge[ResourceFunctionHelpers`VisualizeDigitPath`Private`x, ResourceFunctionHelpers`VisualizeDigitPath`Private`y] -> If[ResourceFunctionHelpers`VisualizeDigitPath`Private`b === 10, ResourceFunctionHelpers`VisualizeDigitPath`Private`$colors10[[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1]], ResourceFunctionHelpers`VisualizeDigitPath`Private`colors[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b]], -1]; Annotate[Graph[Range[1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b], ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcList, EdgeWeight -> ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeights, VertexLabels -> Table[ResourceFunctionHelpers`VisualizeDigitPath`Private`i -> Mod[ResourceFunctionHelpers`VisualizeDigitPath`Private`i, ResourceFunctionHelpers`VisualizeDigitPath`Private`b], {ResourceFunctionHelpers`VisualizeDigitPath`Private`i, 1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b}], EdgeStyle -> ResourceFunctionHelpers`VisualizeDigitPath`Private`ewcolors, VertexStyle -> ResourceFunctionHelpers`VisualizeDigitPath`Private`vColors, EdgeShapeFunction -> (Mouseover[{AbsoluteThickness[1.3], Arrow[#1, 0.1]}, {Black, AbsoluteThickness[1.3], Arrow[#1, 0.1], Inset[Panel[Style[AnnotationValue[{Graph[Range[1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b], ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcList, EdgeWeight -> ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeights], #2}, EdgeWeight], 14], FrameMargins -> 2, Background -> LightBlue], Mean[#1] + RotationTransform[ArcTan @@ Apply[Subtract, First[#1], {1}]][{0, -0.1}]]}] & ), GraphLayout -> {\"CircularEmbedding\", \"OptimalOrder\" -> False}, ImageSize -> Large], VertexLabels -> {\"Name\", Sequence @@ ResourceFunctionHelpers`VisualizeDigitPath`Private`replace, ResourceFunctionHelpers`VisualizeDigitPath`Private`b -> 0}], \"Multigraph\", Annotate[Graph[AdjacencyGraph[SparseArray[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList, {ResourceFunctionHelpers`VisualizeDigitPath`Private`b, ResourceFunctionHelpers`VisualizeDigitPath`Private`b}]], VertexLabels -> Table[ResourceFunctionHelpers`VisualizeDigitPath`Private`i -> Mod[ResourceFunctionHelpers`VisualizeDigitPath`Private`i, ResourceFunctionHelpers`VisualizeDigitPath`Private`b], {ResourceFunctionHelpers`VisualizeDigitPath`Private`i, 0, ResourceFunctionHelpers`VisualizeDigitPath`Private`b}], VertexStyle -> ResourceFunctionHelpers`VisualizeDigitPath`Private`vColors, EdgeStyle -> ResourceFunctionHelpers`VisualizeDigitPath`Private`eColors, EdgeShapeFunction -> (Mouseover[{AbsoluteThickness[1.3], Arrow[#1, 0.1]}, {Black, AbsoluteThickness[1.3], Arrow[#1, 0.1]}] & ), GraphLayout -> {\"CircularEmbedding\", \"OptimalOrder\" -> False}, ImageSize -> Large], VertexLabels -> {\"Name\", Sequence @@ ResourceFunctionHelpers`VisualizeDigitPath`Private`replace, ResourceFunctionHelpers`VisualizeDigitPath`Private`b -> 0}], \"Dynamic\", ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcList = ResourceFunctionHelpers`VisualizeDigitPath`Private`wProcess[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList]; ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeights = ResourceFunctionHelpers`VisualizeDigitPath`Private`eWeightsFun[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList]; ResourceFunctionHelpers`VisualizeDigitPath`Private`ewcolors = Replace[Keys[ResourceFunctionHelpers`VisualizeDigitPath`Private`procList], {ResourceFunctionHelpers`VisualizeDigitPath`Private`x_, ResourceFunctionHelpers`VisualizeDigitPath`Private`y_} :> DirectedEdge[ResourceFunctionHelpers`VisualizeDigitPath`Private`x, ResourceFunctionHelpers`VisualizeDigitPath`Private`y] -> If[ResourceFunctionHelpers`VisualizeDigitPath`Private`b === 10, ResourceFunctionHelpers`VisualizeDigitPath`Private`$colors10[[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1]], ResourceFunctionHelpers`VisualizeDigitPath`Private`colors[ResourceFunctionHelpers`VisualizeDigitPath`Private`x + 1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b]], -1]; ResourceFunctionHelpers`VisualizeDigitPath`Private`generateDynamicGraph[ResourceFunctionHelpers`VisualizeDigitPath`Private`b, ResourceFunctionHelpers`VisualizeDigitPath`Private`l, ResourceFunctionHelpers`VisualizeDigitPath`Private`vColors, ResourceFunctionHelpers`VisualizeDigitPath`Private`listindex], \"MatrixPlot\", MatrixPlot[ResourceFunctionHelpers`VisualizeDigitPath`Private`g, ColorFunction -> \"TemperatureMap\", PlotLegends -> BarLegend[Automatic, 5], (FrameTicks -> {#1, #1, #1, #1} & )[Join[Range[1, ResourceFunctionHelpers`VisualizeDigitPath`Private`b - 1], {{ResourceFunctionHelpers`VisualizeDigitPath`Private`b, 0}}]]]]]\nResourceFunctionHelpers`VisualizeDigitPath[(ResourceFunctionHelpers`VisualizeDigitPath`Private`num_)?NumericQ, (ResourceFunctionHelpers`VisualizeDigitPath`Private`l_Integer)?Positive, ResourceFunctionHelpers`VisualizeDigitPath`Private`type:\"Multigraph\" | \"WeightedGraph\" | \"Dynamic\" | \"MatrixPlot\":\"Multigraph\"] := ResourceFunctionHelpers`VisualizeDigitPath[{ResourceFunctionHelpers`VisualizeDigitPath`Private`num, 10}, ResourceFunctionHelpers`VisualizeDigitPath`Private`l, ResourceFunctionHelpers`VisualizeDigitPath`Private`type]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`VisualizeDigitPath",
	"MarkovProcesses`ViterbiTraining":"ObjectType: Symbol\nUsage: MarkovProcesses`ViterbiTraining\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: MarkovProcesses`ViterbiTraining[Except[_TemporalData, RandomProcesses`HiddenMarkovProcessDump`data_], RandomProcesses`HiddenMarkovProcessDump`elform_, RandomProcesses`HiddenMarkovProcessDump`proc:HiddenMarkovProcess[RandomProcesses`HiddenMarkovProcessDump`p0_, RandomProcesses`HiddenMarkovProcessDump`sm_, RandomProcesses`HiddenMarkovProcessDump`em_], RandomProcesses`HiddenMarkovProcessDump`opts:OptionsPattern[]] := MarkovProcesses`ViterbiTraining[TemporalData`Utilities`CoerceToTemporalData[RandomProcesses`HiddenMarkovProcessDump`data, ValueDimensions -> RandomProcesses`Library`ProcessStateDimensionality[RandomProcesses`HiddenMarkovProcessDump`proc]], RandomProcesses`HiddenMarkovProcessDump`elform, RandomProcesses`HiddenMarkovProcessDump`proc, RandomProcesses`HiddenMarkovProcessDump`opts]\nMarkovProcesses`ViterbiTraining[(RandomProcesses`HiddenMarkovProcessDump`data_TemporalData)?TemporalData`ValidTemporalDataQ, RandomProcesses`HiddenMarkovProcessDump`elform_, RandomProcesses`HiddenMarkovProcessDump`proc:HiddenMarkovProcess[RandomProcesses`HiddenMarkovProcessDump`p0_, RandomProcesses`HiddenMarkovProcessDump`sm_, RandomProcesses`HiddenMarkovProcessDump`em_], RandomProcesses`HiddenMarkovProcessDump`opts:OptionsPattern[]] := Catch[Module[{RandomProcesses`HiddenMarkovProcessDump`eproc = RandomProcesses`HiddenMarkovProcessDump`proc, RandomProcesses`HiddenMarkovProcessDump`vpath, RandomProcesses`HiddenMarkovProcessDump`data2, RandomProcesses`HiddenMarkovProcessDump`pars, RandomProcesses`HiddenMarkovProcessDump`oldpars, RandomProcesses`HiddenMarkovProcessDump`B, RandomProcesses`HiddenMarkovProcessDump`ss, RandomProcesses`HiddenMarkovProcessDump`pg, RandomProcesses`HiddenMarkovProcessDump`ag, RandomProcesses`HiddenMarkovProcessDump`prec, RandomProcesses`HiddenMarkovProcessDump`inputprec, RandomProcesses`HiddenMarkovProcessDump`newp0, RandomProcesses`HiddenMarkovProcessDump`newsm, RandomProcesses`HiddenMarkovProcessDump`newem, RandomProcesses`HiddenMarkovProcessDump`numiter = 0, RandomProcesses`HiddenMarkovProcessDump`maxiters, RandomProcesses`HiddenMarkovProcessDump`eopts}, RandomProcesses`HiddenMarkovProcessDump`maxiters = OptionValue[MaxIterations]; RandomProcesses`HiddenMarkovProcessDump`pg = OptionValue[PrecisionGoal]; RandomProcesses`HiddenMarkovProcessDump`ag = OptionValue[AccuracyGoal]; RandomProcesses`HiddenMarkovProcessDump`eopts = FilterRules[{RandomProcesses`HiddenMarkovProcessDump`opts}, Options[MarkovProcesses`SupervisedTraining]]; RandomProcesses`HiddenMarkovProcessDump`ss = RandomProcesses`HiddenMarkovProcessDump`iSilentStates[RandomProcesses`HiddenMarkovProcessDump`proc]; RandomProcesses`HiddenMarkovProcessDump`inputprec = Internal`PrecAccur[{RandomProcesses`HiddenMarkovProcessDump`proc, RandomProcesses`HiddenMarkovProcessDump`data[\"RawStates\"]}]; RandomProcesses`HiddenMarkovProcessDump`prec = Min[Max[OptionValue[\"WorkingPrecision\"] \/. Automatic -> (RandomProcesses`HiddenMarkovProcessDump`inputprec \/. Infinity -> MachinePrecision)], RandomProcesses`HiddenMarkovProcessDump`inputprec]; {RandomProcesses`HiddenMarkovProcessDump`pg, RandomProcesses`HiddenMarkovProcessDump`ag} = RandomProcesses`HiddenMarkovProcessDump`processPAgoal[RandomProcesses`HiddenMarkovProcessDump`pg, RandomProcesses`HiddenMarkovProcessDump`ag, RandomProcesses`HiddenMarkovProcessDump`prec]; RandomProcesses`HiddenMarkovProcessDump`data2 = RandomProcesses`HiddenMarkovProcessDump`FlattenData[RandomProcesses`HiddenMarkovProcessDump`data[\"ValueList\"]]; {RandomProcesses`HiddenMarkovProcessDump`newp0, RandomProcesses`HiddenMarkovProcessDump`newsm, RandomProcesses`HiddenMarkovProcessDump`newem} = List @@ RandomProcesses`HiddenMarkovProcessDump`eproc; RandomProcesses`HiddenMarkovProcessDump`B = RandomProcesses`HiddenMarkovProcessDump`HMMDensityMatrix[RandomProcesses`HiddenMarkovProcessDump`data2, RandomProcesses`HiddenMarkovProcessDump`newem]; If[Internal`LiterallyOccurringQ[RandomProcesses`HiddenMarkovProcessDump`B, {$Failed, PDF}], Message[EstimatedProcess::nopdf]; Throw[$Failed]]; RandomProcesses`HiddenMarkovProcessDump`pars = Flatten[{RandomProcesses`HiddenMarkovProcessDump`newp0, RandomProcesses`HiddenMarkovProcessDump`newsm, RandomProcesses`HiddenMarkovProcessDump`B}]; Do[RandomProcesses`HiddenMarkovProcessDump`numiter++; RandomProcesses`HiddenMarkovProcessDump`vpath = FindHiddenMarkovStates[RandomProcesses`HiddenMarkovProcessDump`data, RandomProcesses`HiddenMarkovProcessDump`eproc, WorkingPrecision -> RandomProcesses`HiddenMarkovProcessDump`prec]; RandomProcesses`HiddenMarkovProcessDump`oldpars = RandomProcesses`HiddenMarkovProcessDump`pars; RandomProcesses`HiddenMarkovProcessDump`eproc = MarkovProcesses`SupervisedTraining[RandomProcesses`HiddenMarkovProcessDump`data, RandomProcesses`HiddenMarkovProcessDump`vpath, RandomProcesses`HiddenMarkovProcessDump`elform, RandomProcesses`HiddenMarkovProcessDump`eproc, RandomProcesses`HiddenMarkovProcessDump`ss, RandomProcesses`HiddenMarkovProcessDump`eopts, EstimatedProcess]; If[Head[RandomProcesses`HiddenMarkovProcessDump`eproc] =!= HiddenMarkovProcess, Throw[$Failed]]; If[Quiet[RandomProcesses`Library`ProcessNParameterQ[RandomProcesses`HiddenMarkovProcessDump`eproc] =!= True], Message[EstimatedProcess::eminsfdt]; Throw[$Failed]]; {RandomProcesses`HiddenMarkovProcessDump`newp0, RandomProcesses`HiddenMarkovProcessDump`newsm, RandomProcesses`HiddenMarkovProcessDump`newem} = List @@ RandomProcesses`HiddenMarkovProcessDump`eproc; RandomProcesses`HiddenMarkovProcessDump`B = RandomProcesses`HiddenMarkovProcessDump`HMMDensityMatrix[RandomProcesses`HiddenMarkovProcessDump`data2, RandomProcesses`HiddenMarkovProcessDump`newem]; If[Internal`LiterallyOccurringQ[RandomProcesses`HiddenMarkovProcessDump`B, {$Failed, PDF}], Message[EstimatedProcess::nopdf]; Throw[$Failed]]; RandomProcesses`HiddenMarkovProcessDump`pars = Flatten[{RandomProcesses`HiddenMarkovProcessDump`newp0, RandomProcesses`HiddenMarkovProcessDump`newsm, RandomProcesses`HiddenMarkovProcessDump`B}]; If[RandomProcesses`HiddenMarkovProcessDump`cNorm[RandomProcesses`HiddenMarkovProcessDump`pars, RandomProcesses`HiddenMarkovProcessDump`oldpars, RandomProcesses`HiddenMarkovProcessDump`pg, RandomProcesses`HiddenMarkovProcessDump`ag], Break[]]; , {RandomProcesses`HiddenMarkovProcessDump`maxiters}]; RandomProcesses`HiddenMarkovProcessDump`$NumberOfIterations = RandomProcesses`HiddenMarkovProcessDump`numiter; RandomProcesses`HiddenMarkovProcessDump`eproc]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MaxIterations -> 100, WorkingPrecision -> Automatic, PrecisionGoal -> Automatic, AccuracyGoal -> Automatic}\nAttributes: {}\nFullName: MarkovProcesses`ViterbiTraining",
	"Audio`Viz`VizAudio":"ObjectType: Symbol\nUsage: Audio`Viz`VizAudio\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Viz`VizAudio[Dynamic[Audio`VizDump`audioData_], Audio`VizDump`sampleRate_, Dynamic[Audio`VizDump`mngr_], Audio`VizDump`opts:OptionsPattern[]] := Tooltip[DynamicModule[{Audio`VizDump`vizSel}, EventHandler[Dynamic[Audio`VizDump`vizSel = If[ !Audio`Internals`AudioManagerQ[Audio`VizDump`mngr], 1, Audio`Internals`GetInformation[Audio`VizDump`mngr, \"VisualizationState\"]]; If[ !IntegerQ[Audio`VizDump`vizSel], Audio`VizDump`vizSel = 1]; Switch[Audio`VizDump`vizSel, 1, Audio`Viz`VizWaveform[Dynamic[Audio`VizDump`audioData], Audio`VizDump`sampleRate, Audio`VizDump`opts], 2, Audio`Viz`VizSpectrumAnalyzer[Dynamic[Audio`VizDump`audioData], Audio`VizDump`sampleRate, Audio`VizDump`opts]]], {\"MouseClicked\" :> Audio`Internals`SetInformation[Audio`VizDump`mngr, \"VisualizationState\", Mod[Audio`VizDump`vizSel, 2] + 1]}]], PaneSelector[{1 -> Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"audioSpectrum\"]], 2 -> Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"audioWaveform\"]]}, Dynamic[If[Audio`Internals`AudioManagerQ[Audio`VizDump`mngr], Audio`Internals`GetInformation[Audio`VizDump`mngr, \"VisualizationState\"], 1]]], TooltipStyle -> {Background -> White, CellFrameColor -> RGBColor[0.7176470588235294, 0.7176470588235294, 0.7176470588235294], FontColor -> RGBColor[0.5098039215686274, 0.5098039215686274, 0.5098039215686274], CellFrame -> 0}, TooltipDelay -> 1.2]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`Viz`VizAudio",
	"Audio`Viz`VizSpectrumAnalyzer":"ObjectType: Symbol\nUsage: Audio`Viz`VizSpectrumAnalyzer\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Viz`VizSpectrumAnalyzer[Dynamic[Audio`VizDump`audioData_], Audio`VizDump`sampleRate_, Audio`VizDump`opts:OptionsPattern[]] := Dynamic[Graphics[{Audio`VizDump`$defaultBlue, Thickness[0.7\/22], CapForm[None], Line \/@ Audio`VizDump`spectrumAnalyzerLinePoints[Audio`VizDump`audioData, Audio`VizDump`sampleRate, OptionValue[PlotRange]]}, PlotRange -> {-45, 0}, PlotRangePadding -> {1.5, 3}, Sequence @@ FilterRules[{Audio`VizDump`opts}, Options[Graphics]], Sequence @@ FilterRules[Options[Audio`Viz`VizSpectrumAnalyzer], Options[Graphics]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> 0.243902, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> TraditionalForm, Frame -> {{False, False}, {False, True}}, FrameLabel -> None, FrameStyle -> RGBColor[0.717647, 0.717647, 0.717647], FrameTicks -> None, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> 223, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, PlotRange -> {-1, 1}, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {Polygon[{Scaled[{0, 0}], Scaled[{1, 0}], Scaled[{1, 1}], Scaled[{0, 1}]}, VertexColors -> {GrayLevel[1], GrayLevel[1], RGBColor[0.964706, 0.964706, 0.964706], RGBColor[0.964706, 0.964706, 0.964706]}]}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}}\nAttributes: {}\nFullName: Audio`Viz`VizSpectrumAnalyzer",
	"System`Private`VizualizationMethodOptions":"None",
	"Audio`Viz`VizWaveform":"ObjectType: Symbol\nUsage: Audio`Viz`VizWaveform\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`Viz`VizWaveform[Dynamic[Audio`VizDump`audioData_], Audio`VizDump`sampleRate_, Audio`VizDump`opts:OptionsPattern[]] := With[{Audio`VizDump`points = Audio`VizDump`computeWaveformPoints[Audio`VizDump`audioData, Audio`VizDump`sampleRate, Audio`VizDump`opts]}, Graphics[{Audio`VizDump`$defaultBlue, Line[Dynamic[Audio`VizDump`points]]}, PlotRangePadding -> {0.045, 0.}, Sequence @@ FilterRules[{Audio`VizDump`opts}, Options[Graphics]], Sequence @@ FilterRules[Options[Audio`Viz`VizWaveform], Options[Graphics]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AspectRatio -> 0.243902, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, FormatType :> TraditionalForm, Frame -> {{False, False}, {False, True}}, FrameLabel -> None, FrameStyle -> RGBColor[0.717647, 0.717647, 0.717647], FrameTicks -> None, FrameTicksStyle -> {}, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> 223, ImageSizeRaw -> Automatic, LabelStyle -> {}, Method -> Automatic, PlotLabel -> None, PlotRange -> {-1., 1}, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {Polygon[{Scaled[{0, 0}], Scaled[{1, 0}], Scaled[{1, 1}], Scaled[{0, 1}]}, VertexColors -> {GrayLevel[1], GrayLevel[1], RGBColor[0.964706, 0.964706, 0.964706], RGBColor[0.964706, 0.964706, 0.964706]}]}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, VizTime -> 0.07}\nAttributes: {}\nFullName: Audio`Viz`VizWaveform",
	"NDSolve`VODE":"ObjectType: Symbol\nUsage: NDSolve`VODE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: NDSolve`VODE",
	"ResourceFunctionHelpers`VolumeEncclosed":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`VolumeEncclosed\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`VolumeEncclosed",
	"Graphics`Mesh`Voronoi":"ObjectType: Symbol\nUsage: Graphics`Mesh`Voronoi\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Graphics`Mesh`BoundingVerticesFactor -> 50., Graphics`Mesh`Developer`Dimension -> 2, Graphics`Mesh`SoS`ExactArithmetic -> True, Graphics`Mesh`Developer`ExtendedTags -> 3, Method -> Automatic, Graphics`Mesh`Randomized -> False, Graphics`Mesh`RejectedVertices -> True, Graphics`Mesh`Developer`Scalars -> {0, 0, 0}}\nAttributes: {}\nFullName: Graphics`Mesh`Voronoi",
	"Graphics`Region`Voronoi3DMeshRegion":"ObjectType: Symbol\nUsage: Graphics`Region`Voronoi3DMeshRegion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`Region`Voronoi3DMeshRegion[Graphics`Region`RegionDump`pts_] := Module[{}, EmptyRegion[3]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Region`Voronoi3DMeshRegion",
	"System`VectorPlotsDump`VPMethods3Q":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`VPMethods3Q\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`VectorPlotsDump`VPMethods3Q[\"FCC\" | \"FaceCenteredCubic\" | \"HCP\" | \"Hexagonal\" | \"Regular3D\" | \"Regular\" | \"Mesh\" | \"Mesh3D\"] := True\nSystem`VectorPlotsDump`VPMethods3Q[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`VPMethods3Q",
	"System`VectorPlotsDump`VPMethodsQ":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`VPMethodsQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`VectorPlotsDump`VPMethodsQ[\"Hardcore\" | \"Hexagonal\" | \"Mesh\" | \"Regular\" | \"Experimental\"] := True\nSystem`VectorPlotsDump`VPMethodsQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`VPMethodsQ",
	"System`VectorPlotsDump`VPNumber":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`VPNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`VectorPlotsDump`VPNumber[{}] := Charting`padList[16, 2]\nSystem`VectorPlotsDump`VPNumber[System`VectorPlotsDump`n_List] := Charting`padList[Flatten[System`VectorPlotsDump`n], 2]\nSystem`VectorPlotsDump`VPNumber[System`VectorPlotsDump`n_] := System`VectorPlotsDump`VPNumber[{System`VectorPlotsDump`n}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`VPNumber",
	"System`VectorPlotsDump`VPNumber3":"ObjectType: Symbol\nUsage: System`VectorPlotsDump`VPNumber3\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`VectorPlotsDump`VPNumber3[{}] := Charting`padList[6, 3]\nSystem`VectorPlotsDump`VPNumber3[System`VectorPlotsDump`n_List] := Charting`padList[Flatten[System`VectorPlotsDump`n], 3]\nSystem`VectorPlotsDump`VPNumber3[System`VectorPlotsDump`n_] := System`VectorPlotsDump`VPNumber3[{System`VectorPlotsDump`n}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`VectorPlotsDump`VPNumber3",
	"Region`VSResolve":"ObjectType: Symbol\nUsage: Region`VSResolve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`VSResolve",
	"Graphics`Mesh`Developer`VStar":"ObjectType: Symbol\nUsage: Graphics`Mesh`Developer`VStar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`Mesh`Developer`VStar",
	"Simplify`W2Log":"ObjectType: Symbol\nUsage: Simplify`W2Log\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Simplify`W2Log[SimplifyDump`a_ProductLog] := Module[{SimplifyDump`e, SimplifyDump`r, SimplifyDump`s, SimplifyDump`n, SimplifyDump`b, SimplifyDump`ipf, SimplifyDump`ipc, SimplifyDump`x, SimplifyDump`lhs, SimplifyDump`rhs}, Switch[Length[SimplifyDump`a], 1, SimplifyDump`e = SimplifyDump`a[[1]], 2, If[SimplifyDump`a[[1]] =!= -1, Return[$Failed], SimplifyDump`e = SimplifyDump`a[[2]]], _, Return[$Failed]]; SimplifyDump`e = SimplifyDump`getrsnb[SimplifyDump`e]; If[ !ListQ[SimplifyDump`e] || Length[SimplifyDump`e] != 4, Return[$Failed]]; {SimplifyDump`r, SimplifyDump`s, SimplifyDump`n, SimplifyDump`b} = SimplifyDump`e; SimplifyDump`e = FactorInteger[SimplifyDump`b]; If[ !ListQ[SimplifyDump`e], Return[$Failed]]; SimplifyDump`ipc = GCD @@ (#1[[2]] & ) \/@ SimplifyDump`e; SimplifyDump`ipf = ({1, 1\/SimplifyDump`ipc}*#1 & ) \/@ SimplifyDump`e; SimplifyDump`e = (SimplifyDump`n*SimplifyDump`a)\/Log[Times @@ Apply[Power, SimplifyDump`ipf, {1}]]; SimplifyDump`x = Round[SimplifyDump`e]; If[ !IntegerQ[SimplifyDump`x] || SimplifyDump`x - SimplifyDump`e != 0, Return[$Failed]]; SimplifyDump`lhs = ({1, SimplifyDump`x}*#1 & ) \/@ SimplifyDump`ipf; SimplifyDump`rhs = FactorInteger[(SimplifyDump`r*SimplifyDump`n*SimplifyDump`ipc)\/SimplifyDump`x]; If[ !ListQ[SimplifyDump`rhs], Return[$Failed]]; SimplifyDump`rhs = SimplifyDump`flistTimes[({1, SimplifyDump`n}*#1 & ) \/@ SimplifyDump`rhs, SimplifyDump`s]; If[SimplifyDump`lhs =!= SimplifyDump`rhs, Return[$Failed]]; (SimplifyDump`x*Log[Times @@ Apply[Power, SimplifyDump`ipf, {1}]])\/SimplifyDump`n]\nSimplify`W2Log[SimplifyDump`other_] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Simplify`W2Log",
	"FunctionProperties`Private`WAFindDomain":"ObjectType: Symbol\nUsage: FunctionProperties`Private`WAFindDomain\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FunctionProperties`Private`WAFindDomain[System`DomainAndRangeDump`expr_, System`DomainAndRangeDump`varIn_, System`DomainAndRangeDump`codomain_:Reals, System`DomainAndRangeDump`opts:OptionsPattern[]] := Module[{System`DomainAndRangeDump`vars, System`DomainAndRangeDump`conditions, System`DomainAndRangeDump`firstTry, System`DomainAndRangeDump`result = \"Uninitialized\", System`DomainAndRangeDump`reducedRepQ, System`DomainAndRangeDump`workingPrecision}, Which[MatchQ[System`DomainAndRangeDump`varIn, _Symbol], System`DomainAndRangeDump`vars = {System`DomainAndRangeDump`varIn}, MatchQ[System`DomainAndRangeDump`varIn, {__Symbol}], System`DomainAndRangeDump`vars = System`DomainAndRangeDump`varIn, True, System`DomainAndRangeDump`result = $Failed]; If[System`DomainAndRangeDump`numericExpressionQ[System`DomainAndRangeDump`expr] =!= True, System`DomainAndRangeDump`result = $Failed]; System`DomainAndRangeDump`reducedRepQ = \"ReducedRepresentation\" \/. {System`DomainAndRangeDump`opts} \/. Options[FunctionProperties`Private`WAFindDomain]; System`DomainAndRangeDump`workingPrecision = WorkingPrecision \/. {System`DomainAndRangeDump`opts} \/. Options[FunctionProperties`Private`WAFindDomain]; Which[System`DomainAndRangeDump`workingPrecision === Infinity || TrueQ[NumericQ[System`DomainAndRangeDump`workingPrecision]], \"pass\", System`DomainAndRangeDump`workingPrecision === Automatic, System`DomainAndRangeDump`workingPrecision = Infinity, True, System`DomainAndRangeDump`workingPrecision = Infinity]; Which[System`DomainAndRangeDump`result === $Failed, \"pass\", System`DomainAndRangeDump`codomain === Reals, If[And @@ (FreeQ[System`DomainAndRangeDump`expr, #1] & ) \/@ System`DomainAndRangeDump`vars, Return[And @@ Table[Element[System`DomainAndRangeDump`x, System`DomainAndRangeDump`codomain], {System`DomainAndRangeDump`x, System`DomainAndRangeDump`vars}]]]; System`DomainAndRangeDump`conditions = And @@ Union[Flatten[System`DomainAndRangeDump`sowDomainConditions[System`DomainAndRangeDump`expr]]]; System`DomainAndRangeDump`firstTry = If[Length[System`DomainAndRangeDump`vars] === 1 && System`DomainAndRangeDump`reducedRepQ =!= False, Quiet[Reduce[System`DomainAndRangeDump`conditions, System`DomainAndRangeDump`vars, Reals, WorkingPrecision -> System`DomainAndRangeDump`workingPrecision], {Reduce::nsmet, Reduce::ratnz}], Simplify[System`DomainAndRangeDump`conditions, Assumptions -> Table[Element[System`DomainAndRangeDump`v, Reals], {System`DomainAndRangeDump`v, System`DomainAndRangeDump`vars}]]]; System`DomainAndRangeDump`firstTry = DeleteCases[System`DomainAndRangeDump`firstTry, C[_] == _?NumericQ, Infinity]; System`DomainAndRangeDump`result = Which[System`DomainAndRangeDump`firstTry === False, False, And @@ (FreeQ[System`DomainAndRangeDump`firstTry, #1] & ) \/@ System`DomainAndRangeDump`vars, True, Head[System`DomainAndRangeDump`firstTry] === Reduce || Head[System`DomainAndRangeDump`firstTry] === Simplify, Message[FunctionProperties`Private`WAFindDomain::implrep]; System`DomainAndRangeDump`conditions, True, System`DomainAndRangeDump`firstTry], System`DomainAndRangeDump`codomain === Complexes, If[And @@ (FreeQ[System`DomainAndRangeDump`expr, #1] & ) \/@ System`DomainAndRangeDump`vars, Return[True]]; System`DomainAndRangeDump`conditions = And @@ Union[Flatten[System`DomainAndRangeDump`sowComplexDomainConditions[System`DomainAndRangeDump`expr]]]; System`DomainAndRangeDump`firstTry = If[Length[System`DomainAndRangeDump`vars] === 1, Quiet[Reduce[System`DomainAndRangeDump`conditions, System`DomainAndRangeDump`vars, Complexes, WorkingPrecision -> System`DomainAndRangeDump`workingPrecision], {Reduce::nsmet, Reduce::ratnz, Reduce::useq}], Simplify[System`DomainAndRangeDump`conditions]]; System`DomainAndRangeDump`result = Which[System`DomainAndRangeDump`firstTry === False, False, And @@ (FreeQ[System`DomainAndRangeDump`firstTry, #1] & ) \/@ System`DomainAndRangeDump`vars, True, Head[System`DomainAndRangeDump`firstTry] === Reduce || Head[System`DomainAndRangeDump`firstTry] === Simplify, Message[FunctionProperties`Private`WAFindDomain::implrep]; System`DomainAndRangeDump`conditions, True, System`DomainAndRangeDump`firstTry], True, System`DomainAndRangeDump`result = $Failed]; If[System`DomainAndRangeDump`result === True, System`DomainAndRangeDump`result = And @@ Table[Element[System`DomainAndRangeDump`x, System`DomainAndRangeDump`codomain], {System`DomainAndRangeDump`x, System`DomainAndRangeDump`vars}], System`DomainAndRangeDump`result = Simplify[System`DomainAndRangeDump`result]]; If[TrueQ[NumericQ[System`DomainAndRangeDump`workingPrecision] && System`DomainAndRangeDump`workingPrecision > $MinPrecision], System`DomainAndRangeDump`result = N[System`DomainAndRangeDump`result, System`DomainAndRangeDump`workingPrecision]]; System`DomainAndRangeDump`result \/; System`DomainAndRangeDump`result =!= $Failed && System`DomainAndRangeDump`result =!= \"Uninitialized\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ReducedRepresentation -> Automatic, WorkingPrecision -> Infinity}\nAttributes: {HoldFirst}\nFullName: FunctionProperties`Private`WAFindDomain",
	"FunctionProperties`Private`WAFindRange":"ObjectType: Symbol\nUsage: FunctionProperties`Private`WAFindRange\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FunctionProperties`Private`WAFindRange[System`DomainAndRangeDump`expr_, System`DomainAndRangeDump`varIn_, System`DomainAndRangeDump`varOut_Symbol, System`DomainAndRangeDump`codomain_:Reals, System`DomainAndRangeDump`opts:OptionsPattern[]] := Module[{System`DomainAndRangeDump`vars, System`DomainAndRangeDump`releasedExpr, System`DomainAndRangeDump`rangeResult, System`DomainAndRangeDump`result = \"Uninitialized\", System`DomainAndRangeDump`range, System`DomainAndRangeDump`numericFlag, System`DomainAndRangeDump`domain, System`DomainAndRangeDump`numericExpressionCheck, System`DomainAndRangeDump`method, System`DomainAndRangeDump`workingPrecision}, Which[MatchQ[System`DomainAndRangeDump`varIn, _Symbol], System`DomainAndRangeDump`vars = {System`DomainAndRangeDump`varIn}, MatchQ[System`DomainAndRangeDump`varIn, {__Symbol}], System`DomainAndRangeDump`vars = System`DomainAndRangeDump`varIn, True, System`DomainAndRangeDump`result = $Failed]; System`DomainAndRangeDump`workingPrecision = WorkingPrecision \/. {System`DomainAndRangeDump`opts} \/. Options[FunctionProperties`Private`WAFindRange]; Which[System`DomainAndRangeDump`workingPrecision === Infinity || NumericQ[System`DomainAndRangeDump`workingPrecision] === True, \"pass\", System`DomainAndRangeDump`workingPrecision === Automatic, System`DomainAndRangeDump`workingPrecision = Infinity, True, System`DomainAndRangeDump`workingPrecision = Infinity]; System`DomainAndRangeDump`method = Method \/. {System`DomainAndRangeDump`opts}; If[System`DomainAndRangeDump`method === Method || System`DomainAndRangeDump`method === Automatic, System`DomainAndRangeDump`method = {}]; If[System`DomainAndRangeDump`result =!= $Failed, System`DomainAndRangeDump`domain = \"Domain\" \/. {System`DomainAndRangeDump`opts} \/. Options[FunctionProperties`Private`WAFindRange]; If[System`DomainAndRangeDump`domain === Automatic, System`DomainAndRangeDump`domain = Quiet[FunctionProperties`Private`WAFindDomain[System`DomainAndRangeDump`expr, System`DomainAndRangeDump`vars, System`DomainAndRangeDump`codomain], FunctionProperties`Private`WAFindDomain::implrep], System`DomainAndRangeDump`numericExpressionCheck = System`DomainAndRangeDump`numericExpressionQ[System`DomainAndRangeDump`expr] === True]; If[ !FreeQ[System`DomainAndRangeDump`domain, FunctionProperties`Private`WAFindDomain] || System`DomainAndRangeDump`domain === $Failed || System`DomainAndRangeDump`numericExpressionCheck === False, System`DomainAndRangeDump`result = $Failed]]; System`DomainAndRangeDump`releasedExpr = ReleaseHold[System`DomainAndRangeDump`expr]; Which[System`DomainAndRangeDump`result === $Failed, \"pass\", System`DomainAndRangeDump`codomain === Reals, If[Length[System`DomainAndRangeDump`vars] === 1 && TrueQ[System`DomainAndRangeDump`algebraicExpressionQ[System`DomainAndRangeDump`releasedExpr, First[System`DomainAndRangeDump`vars]]], System`DomainAndRangeDump`rangeResult = {System`DomainAndRangeDump`getAlgebraicRange1D[System`DomainAndRangeDump`releasedExpr, {System`DomainAndRangeDump`vars, System`DomainAndRangeDump`varOut}, System`DomainAndRangeDump`domain, WorkingPrecision -> System`DomainAndRangeDump`workingPrecision], False}, System`DomainAndRangeDump`rangeResult = System`DomainAndRangeDump`getRange1[System`DomainAndRangeDump`releasedExpr, {System`DomainAndRangeDump`vars, System`DomainAndRangeDump`varOut}, System`DomainAndRangeDump`domain, System`DomainAndRangeDump`opts]]; If[Length[System`DomainAndRangeDump`rangeResult] =!= 2, System`DomainAndRangeDump`result = $Failed, {System`DomainAndRangeDump`range, System`DomainAndRangeDump`numericFlag} = System`DomainAndRangeDump`rangeResult]; If[System`DomainAndRangeDump`numericFlag === True, Message[FunctionProperties`Private`WAFindRange::numeric]]; System`DomainAndRangeDump`result = System`DomainAndRangeDump`range, System`DomainAndRangeDump`codomain === Complexes, System`DomainAndRangeDump`range = System`DomainAndRangeDump`getComplexRange[System`DomainAndRangeDump`releasedExpr, {System`DomainAndRangeDump`vars, System`DomainAndRangeDump`varOut}, System`DomainAndRangeDump`domain, WorkingPrecision -> System`DomainAndRangeDump`workingPrecision]; System`DomainAndRangeDump`result = System`DomainAndRangeDump`range, True, System`DomainAndRangeDump`result = $Failed]; If[System`DomainAndRangeDump`result === True, System`DomainAndRangeDump`result = Element[System`DomainAndRangeDump`varOut, System`DomainAndRangeDump`codomain]]; System`DomainAndRangeDump`result \/; System`DomainAndRangeDump`result =!= $Failed && System`DomainAndRangeDump`result =!= \"Uninitialized\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Domain -> Automatic, Method -> Automatic, WorkingPrecision -> Infinity}\nAttributes: {HoldFirst}\nFullName: FunctionProperties`Private`WAFindRange",
	"Experimental`Wait":"ObjectType: Symbol\nUsage: Experimental`Wait\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Experimental`Wait",
	"MathLink`Wait":"ObjectType: Symbol\nUsage: MathLink`Wait\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MathLink`Wait",
	"MathLink`WaitNotify":"ObjectType: Symbol\nUsage: MathLink`WaitNotify\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MathLink`WaitNotify",
	"NDSolve`FEM`WarnIf":"ObjectType: Symbol\nUsage: NDSolve`FEM`WarnIf\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NDSolve`FEM`WarnIf[NDSolve`FEM`FEMErrorCheckingDump`test_, None, NDSolve`FEM`FEMErrorCheckingDump`tag_String, NDSolve`FEM`FEMErrorCheckingDump`data___] := Null\nNDSolve`FEM`WarnIf[NDSolve`FEM`FEMErrorCheckingDump`test_, NDSolve`FEM`FEMErrorCheckingDump`caller_Symbol, NDSolve`FEM`FEMErrorCheckingDump`tag_String, NDSolve`FEM`FEMErrorCheckingDump`data___] := With[{NDSolve`FEM`FEMErrorCheckingDump`name = NDSolve`FEM`FEMErrorCheckingDump`caller}, If[TrueQ[NDSolve`FEM`FEMErrorCheckingDump`test], Message[MessageName[NDSolve`FEM`FEMErrorCheckingDump`name, NDSolve`FEM`FEMErrorCheckingDump`tag], NDSolve`FEM`FEMErrorCheckingDump`data]; ]; ]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: NDSolve`FEM`WarnIf",
	"Audio`AudioGUIDump`Warning":"ObjectType: Symbol\nUsage: Audio`AudioGUIDump`Warning\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`AudioGUIDump`Warning[Dynamic[Audio`AudioGUIDump`mngr_], Dynamic[Audio`AudioGUIDump`warn_]] := Grid[{{PaneSelector[{True -> Tooltip[Dynamic[RawBoxes[FEPrivate`ImportImage[FrontEnd`FileName[{\"Typeset\", \"Audio\"}, \"IconWarning.png\"]]]], PaneSelector[{True -> Audio`AudioGUIDump`ttTextStyler[Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"audioBadDeviceText\"]], Audio`AudioGUIDump`$darkGray], False -> Audio`AudioGUIDump`ttTextStyler[Dynamic[FEPrivate`FrontEndResource[\"FEStrings\", \"audioNoOutputDevices\"]], Audio`AudioGUIDump`$darkGray]}, Dynamic[Audio`AudioGUIDump`OutputDevicesAvailableQ[]]], TooltipStyle -> {Background -> Audio`AudioGUIDump`$warningBackground, CellFrameColor -> Audio`AudioGUIDump`$warningBorder, CellFrameMargins -> {{10, 10}, {Automatic, Automatic}}, CellFrame -> 0}, TooltipDelay -> 0.1], False -> \"\"}, Dynamic[Audio`AudioGUIDump`warn], ImageSize -> Automatic], \"\"}}, Spacings -> {0.2, 0}, Alignment -> {Automatic, Bottom}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`AudioGUIDump`Warning",
	"Statistics`Library`WatsonUSquareTableLookup":"ObjectType: Symbol\nUsage: Statistics`Library`WatsonUSquareTableLookup\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`WatsonUSquareTableLookup[Statistics`GoodnessOfFitPValueFunctionsDump`n_, Statistics`GoodnessOfFitPValueFunctionsDump`u_] := Piecewise[{{1., Statistics`GoodnessOfFitPValueFunctionsDump`u < 0.006893289214533183}, {Interpolation[{{0.006893289214533183, 0.9999999999979592}, {0.007082740744101861, 0.9999998773189542}, {0.00713718661688071, 0.9999997853097005}, {0.007410031349820456, 0.9999996933004468}, {0.007493367742344222, 0.9999995706214418}, {0.007508959081257054, 0.9999994786121881}, {0.007656951082727299, 0.9999993866029344}, {0.007657616584492933, 0.9999992639239295}, {0.0076582987192834314, 0.9999991412449245}, {0.00772826398993091, 0.9999990185659196}, {0.007755990073617061, 0.9999989878961683}, {0.007835977570349133, 0.9999988958869146}, {0.007865960281735519, 0.9999987732079096}, {0.007874596278846853, 0.9999986505289047}, {0.00791734934251196, 0.9999985278498997}, {0.007979560824781512, 0.9999984971801484}, {0.008048742225756536, 0.9999982824918897}, {0.008060667299483513, 0.9999980371338798}, {0.008095359989382184, 0.9999979706348302}, {0.008126892907718078, 0.9999977711376813}, {0.008172681237207434, 0.9999975051414828}, {0.008190065664040048, 0.999997471891958}, {0.008191519294546468, 0.9999973721433835}, {0.008201820201151927, 0.9999972391452842}, {0.008281400865218513, 0.9999969731490856}, {0.008292420009274501, 0.9999968401509863}, {0.008299485938777097, 0.9999967071528871}, {0.008327701379688603, 0.9999964411566885}, {0.008406736218863604, 0.9999959091642915}, {0.008413888631508047, 0.9999958781181563}, {0.008429132615830809, 0.999995784979751}, {0.008431998923531367, 0.9999956607952104}, {0.00848766429495846, 0.9999954124261293}, {0.008594107895368503, 0.9999949156879672}, {0.00862250072982827, 0.9999948846418321}, {0.008662882708242994, 0.9999947915034267}, {0.008667662103037653, 0.9999946673188862}, {0.008689131375088005, 0.9999944189498051}, {0.008708318817928789, 0.999993922211643}, {0.008718666657420182, 0.9999938917745098}, {0.008723711274048647, 0.9999936787145773}, {0.008737545786924147, 0.9999934352175117}, {0.008781266112845106, 0.9999929482233806}, {0.008855334970853097, 0.9999919742351181}, {0.008860613240340334, 0.999991842167491}, {0.008862019249286573, 0.9999917100998639}, {0.008886611374937587, 0.9999914459646096}, {0.008938495334637218, 0.9999909176941012}, {0.009015693305633387, 0.9999898611530842}, {0.009027514249224268, 0.99998979952605}, {0.009028458408606681, 0.9999896146449474}, {0.009043526940587661, 0.9999893681368107}, {0.009058416102263036, 0.9999888751205371}, {0.009134551785976207, 0.9999878890879902}, {0.009241391734862055, 0.9999857519173871}, {0.009330691196092714, 0.9999836537229077}, {0.00946370131047446, 0.9999816965453681}, {0.009540066686381785, 0.9999795742623195}, {0.00961652757292252, 0.9999775929962108}, {0.009692522195478927, 0.9999756507062257}, {0.009759326036203496, 0.9999735433107316}, {0.00981783187018256, 0.9999715769321774}, {0.00988741979632185, 0.9999694454481142}, {0.00995480488878706, 0.9999673529401745}, {0.010004500167210812, 0.9999654014491748}, {0.01005282938881256, 0.999963284852666}, {0.010100543977541718, 0.9999613092730971}, {0.01014995394496263, 0.9999591685880191}, {0.010189171954288865, 0.9999570668790648}, {0.010230069750838415, 0.9999551061870504}, {0.010279656512644699, 0.999952980389527}, {0.01032894238064927, 0.9999509956089434}, {0.010365029851513483, 0.9999490498044834}, {0.01040972848814774, 0.9999469388945145}, {0.010437702976307098, 0.9999449690014853}, {0.010462088919200987, 0.9999428340029471}, {0.010497413158842577, 0.9999407379805326}, {0.01052364328802075, 0.999938782975058}, {0.010555858972394694, 0.9999366628640743}, {0.010582781872171378, 0.9999346837700306}, {0.010609964236316074, 0.9999327436521105}, {0.010636073754799686, 0.9999306384286812}, {0.010664448764647977, 0.999928674222192}, {0.010699671600790031, 0.9999265449101936}, {0.010726790059998426, 0.9999245566151352}, {0.01075061759719877, 0.9999226072962004}, {0.010784167436194836, 0.9999204928717565}, {0.010817484060507998, 0.9999185194642526}, {0.010839199516170234, 0.9999163809512396}, {0.010862655050816041, 0.9999142814143501}, {0.010878278653078917, 0.9999123228944007}, {0.010896668060611514, 0.9999101992689421}, {0.010916489561176319, 0.9999082166604235}, {0.01094324075978331, 0.9999062730280285}, {0.010964693786873264, 0.9999041642901244}, {0.010985925432335465, 0.9999021965691602}, {0.010987766046573321, 0.9999020592837152}, {0.010988336739645591, 0.9999019219982703}, {0.010990800774246067, 0.9999016474273804}, {0.01100142640036211, 0.9999010982856005}, {0.011003071252801791, 0.9999009610001556}, {0.01100342356635653, 0.9999008237147106}, {0.0110051595626339, 0.9999005491438206}, {0.011007752876761928, 0.9999004805010981}, {0.011011671955969986, 0.9999002745729307}, {0.011012646631215612, 0.9999001372874857}, {0.011013065084957497, 0.9999000686447633}, {0.011013416293598947, 0.9998999795959184}, {0.012714916957448457, 0.9995933434230245}, {0.01356169776745372, 0.9992867072501306}, {0.01414630232093147, 0.9989800710772367}, {0.014610470123614527, 0.9986734349043428}, {0.015007234923324586, 0.998366798731449}, {0.015339996420156442, 0.9980601625585551}, {0.01564426695668917, 0.9977535263856612}, {0.015925839538210085, 0.9974468902127673}, {0.016175512511405615, 0.9971402540398734}, {0.01641047190322448, 0.9968336178669795}, {0.01663118646082909, 0.9965269816940857}, {0.016833690325382657, 0.9962203455211918}, {0.017026940755519766, 0.9959137093482979}, {0.017209199030495604, 0.995607073175404}, {0.01754713905755448, 0.9949938008296163}, {0.017705241545989632, 0.9946871646567224}, {0.01785643638579541, 0.9943805284838285}, {0.01815179142324782, 0.9937672561380407}, {0.01829741511562154, 0.9934606199651469}, {0.018435372199978588, 0.993153983792253}, {0.01869769279381963, 0.9925407114464652}, {0.01882257971763992, 0.9922340752735713}, {0.01894398619008504, 0.9919274391006774}, {0.01917855313337245, 0.9913141667548897}, {0.019607898562489977, 0.9900876220633141}, {0.01971372516018003, 0.9897809858904203}, {0.01981477524995403, 0.9894743497175263}, {0.020007546297345292, 0.9888610773717386}, {0.020381317439969206, 0.9876345326801631}, {0.020468008289222014, 0.9873278965072692}, {0.020557310510014807, 0.9870212603343753}, {0.02073018783523776, 0.9864079879885875}, {0.021068133925572163, 0.9851814432970121}, {0.021149568594582474, 0.9848748071241181}, {0.02122931942190663, 0.9845681709512243}, {0.021384731268917965, 0.9839548986054365}, {0.021692302930996943, 0.9827283539138609}, {0.02225369035162382, 0.9802752645307099}, {0.022327186622491252, 0.9799428357815732}, {0.02239938875339412, 0.9796104070324364}, {0.02253972305498001, 0.9789455495341629}, {0.022814795850658088, 0.977615834537616}, {0.023349229973297653, 0.974956404544522}, {0.023412722638655556, 0.9746239757953853}, {0.023475802494583982, 0.9742915470462485}, {0.02360295472991304, 0.973626689547975}, {0.023851163245202416, 0.972296974551428}, {0.02432475988472786, 0.9696375445583342}, {0.02438322369084533, 0.9693051158091974}, {0.024438796410892753, 0.9689726870600607}, {0.02455229110385296, 0.9683078295617872}, {0.024775421738076384, 0.9669781145652402}, {0.025209543247993883, 0.9643186845721463}, {0.02602401394929338, 0.9589998245859584}, {0.026068522972350607, 0.9586894253269054}, {0.026114730052507973, 0.9583790260678523}, {0.02620502723909969, 0.9577582275497462}, {0.026384451293509397, 0.9565166305135339}, {0.026731925180117386, 0.9540334364411093}, {0.027410293127123224, 0.9490670482962602}, {0.027451014268775734, 0.9487566490372071}, {0.027492394482344956, 0.9484462497781541}, {0.027573403558601085, 0.9478254512600479}, {0.027737583251007863, 0.9465838542238356}, {0.028054974444007508, 0.944100660151411}, {0.028673669573882316, 0.939134272006562}, {0.028711637546257777, 0.938829961548817}, {0.028748909244708316, 0.9385256510910721}, {0.02882129710177316, 0.9379170301755823}, {0.02896665612571341, 0.9366997883446027}, {0.029259761453909575, 0.9342653046826433}, {0.029826336754842003, 0.9293963373587248}, {0.030914732398686716, 0.9196584027108877}, {0.030952256537530906, 0.9193282996769}, {0.03098824728262488, 0.9189981966429122}, {0.031060997303887065, 0.9183379905749367}, {0.031203984452264345, 0.9170175784389856}, {0.03148928610931506, 0.9143767541670834}, {0.032047922237823906, 0.9090951056232791}, {0.033122924556379364, 0.8985318085356705}, {0.03504573465219008, 0.8788151017258082}, {0.03702308151067552, 0.857447670036403}, {0.03889897703060417, 0.83646992163072}, {0.04061486535008403, 0.816902060590392}, {0.042432631126199355, 0.795683474670521}, {0.044116269814082516, 0.775874776116005}, {0.04575850940354216, 0.7564557608452112}, {0.047535537467668594, 0.7353860206948744}, {0.04920542535669576, 0.7157261679098925}, {0.05102189060949734, 0.6944155902453677}, {0.052829392197797344, 0.6734946958645652}, {0.054540084983493255, 0.6539836888491177}, {0.05642267901181898, 0.6328219569541271}, {0.05821478186913771, 0.6130701124244915}, {0.06019631190890471, 0.5916675430153129}, {0.062188196474789834, 0.5706546568898565}, {0.06409698961830394, 0.5510516581297552}, {0.06622190449804694, 0.5297979344901109}, {0.06828089705623056, 0.5099540982158215}, {0.0703577396890855, 0.4904999452252543}, {0.07268593249787107, 0.46939506735514425}, {0.07493943863537395, 0.44970007685038904}, {0.07748256868079118, 0.42835436146609085}, {0.08010529919543945, 0.407398329365515}, {0.08265699585976025, 0.38785218463029414}, {0.08556260299691235, 0.36665531501553017}, {0.08842205757734423, 0.34686833276612117}, {0.09139487000989065, 0.3274710338004345}, {0.0948071713238141, 0.3064230099552049}, {0.09819666981744203, 0.2867848734753302}, {0.10212427931359053, 0.26549601211591245}, {0.10609576108527548, 0.24561703812184965}, {0.11029200800919915, 0.2261277474115092}, {0.11529916021903226, 0.20498773182162577}, {0.12041612159658202, 0.1852576035970973}, {0.1266547515338798, 0.16387675049302575}, {0.133599391323956, 0.14288558067267654}, {0.14107546478106575, 0.1233042982176823}, {0.15070363657231806, 0.10207229088314507}, {0.15085696972337356, 0.10176257025862656}, {0.15101205151200783, 0.10145284963410806}, {0.15132659833007678, 0.10083340838507115}, {0.15195258626196165, 0.09959452588699724}, {0.15323131183593325, 0.09711676089084953}, {0.1559008371998626, 0.09216123089855399}, {0.1616421008804985, 0.0822501709139628}, {0.16182866431765736, 0.08194653909075256}, {0.16201006251803363, 0.0816429072675422}, {0.1623837083557533, 0.08103564362112148}, {0.16314709907954153, 0.07982111632828026}, {0.1647302249292958, 0.07739206174259783}, {0.1680281250492916, 0.07253395257123274}, {0.16823914693537761, 0.07223032074802238}, {0.1684543541786043, 0.07192668892481213}, {0.16888098942809884, 0.07131942527839152}, {0.16976458750087717, 0.07010489798555031}, {0.17155752569326288, 0.06767584339986776}, {0.17532518945663725, 0.06281773422850279}, {0.17558988030061548, 0.062488309829049626}, {0.17585866961550067, 0.06215888542959647}, {0.17639169740585242, 0.06150003663069015}, {0.17748578654538136, 0.0601823390328774}, {0.17977894788868887, 0.05754694383725201}, {0.18465171067189404, 0.05227615344600123}, {0.18497912297162514, 0.05194672904654807}, {0.18530786167240718, 0.05161730464709491}, {0.18595141946260313, 0.05095845584818859}, {0.1872863132410529, 0.04964075825037584}, {0.19003673005581173, 0.04700536305475045}, {0.19601902410515648, 0.04173457266349978}, {0.19640278357382684, 0.041427177754130184}, {0.196777768239485, 0.0411197828447607}, {0.19753176113610613, 0.04050499302602173}, {0.19908982227965688, 0.03927541338854379}, {0.20237767745091997, 0.03681625411358769}, {0.20279997205316558, 0.0365088592042182}, {0.20322156533433153, 0.03620146429484872}, {0.20407908577484904, 0.03558667447610975}, {0.2058626078829692, 0.0343570948386317}, {0.20964796149390025, 0.031897935563675706}, {0.2101496605361946, 0.03159054065430622}, {0.21063399835025903, 0.031283145744936736}, {0.2116159759437179, 0.030668355926197766}, {0.21369743932853003, 0.029438776288719715}, {0.2180819559486058, 0.026979617013763724}, {0.21866330888568933, 0.02667222210439424}, {0.2192614203065003, 0.026364827195024754}, {0.22048881681428745, 0.025750037376285784}, {0.2229785129724451, 0.024520457738807733}, {0.2283113152280401, 0.022061298463851742}, {0.22912415451610427, 0.021718153494167836}, {0.2299332273759141, 0.02137500852448393}, {0.23161457785199407, 0.020688718585116117}, {0.2350640306730795, 0.019316138706380492}, {0.23597818567441733, 0.018972993736696586}, {0.23692261753654287, 0.01862984876701268}, {0.2388423278170935, 0.017943558827644868}, {0.2428346063776799, 0.016570978948909243}, {0.2438948017435979, 0.016227833979225337}, {0.24496490877137475, 0.01588468900954143}, {0.2472359051102847, 0.015198399070173618}, {0.25203770931541414, 0.013825819191437994}, {0.2533013022711226, 0.013482674221754087}, {0.2546024211543131, 0.013139529252070181}, {0.25725300963398434, 0.012453239312702369}, {0.2632738629709482, 0.011080659433966744}, {0.26483483915990236, 0.010737514464282838}, {0.266525639961702, 0.010394369494598932}, {0.2699974963038527, 0.00970807955523112}, {0.27180540220027627, 0.009364934585547213}, {0.27370371993891596, 0.009021789615863307}, {0.2777029008528897, 0.008335499676495495}, {0.27985047015578474, 0.007992354706811589}, {0.282076974673791, 0.007649209737127682}, {0.2869010989416992, 0.00696291979775987}, {0.28949129361410847, 0.006619774828075964}, {0.2921796693755639, 0.006276629858392058}, {0.2980369587471015, 0.005590339919024245}, {0.301218913380369, 0.005247194949340339}, {0.30454155320027765, 0.004904049979656433}, {0.3082307533043112, 0.004560905009972527}, {0.3122019892178765, 0.004217760040288621}, {0.31641437013990226, 0.0038746150706047144}, {0.3210879107767143, 0.0035314701009208083}, {0.3262100783796295, 0.003188325131236902}, {0.33200723429137374, 0.002845180161552996}, {0.33857739409308113, 0.0025020351918690897}, {0.3461312811788594, 0.0021588902221851836}, {0.35457661550489983, 0.0018157452525012774}, {0.3655023745383508, 0.0014726002828173712}, {0.3788638729454629, 0.001129455313133465}, {0.39680668784156065, 0.0007863103434495589}, {0.42558082651885887, 0.00044316537376554166}, {0.501881262892749, 0.00010002040408163548}, {0.5018889788271774, 0.00009999999795917702}, {0.501951860537162, 0.00009987731895422236}, {0.5019551857919652, 0.0000997546399492677}, {0.5020168954765769, 0.00009950928193935837}, {0.5022696314078327, 0.00009901856591953972}, {0.502722587302387, 0.00009803713387990243}, {0.5036477490546912, 0.00009590916429158547}, {0.5048056760757162, 0.0000939222116431715}, {0.5060594100568525, 0.00009197423511830838}, {0.5075809633692829, 0.0000898611530844029}, {0.5092520072319289, 0.0000878890879904004}, {0.5109730905228467, 0.00008575191738735555}, {0.5115198482694064, 0.00008365372290797257}, {0.5131131716699294, 0.00008169654536849258}, {0.5146013216567442, 0.00007957426231997022}, {0.5161859505436687, 0.00007759299621135085}, {0.5171509772842017, 0.00007565070622628234}, {0.5192444661812, 0.00007354331073217146}, {0.5204954758954785, 0.00007157693217796357}, {0.5220655381403436, 0.00006944544811471332}, {0.5234913395752462, 0.00006735294017512494}, {0.524972158263969, 0.00006540144917543955}, {0.526675204143338, 0.0000632848526667118}, {0.5277445459938401, 0.00006130927309788703}, {0.5296850870944019, 0.000059168588020019897}, {0.5317289475812583, 0.000057066879065703624}, {0.5329263844730848, 0.000055106187051290334}, {0.5347354836279635, 0.00005298038952783468}, {0.5362759144459988, 0.00005099560894428201}, {0.537801360647524, 0.000049049804484391224}, {0.540356322515201, 0.000046938894515458074}, {0.542190207382279, 0.000044969001486427906}, {0.5451452786074453, 0.000042834002948355376}, {0.5481138401047269, 0.000040737980533833706}, {0.550365371112866, 0.00003878297505921502}, {0.5529294283752596, 0.00003666286407555397}, {0.5560470505703412, 0.0000346837700317959}, {0.5588817274855059, 0.00003274365211169972}, {0.5618450098208174, 0.00003063842868256117}, {0.5660003330383854, 0.000028674222193325605}, {0.5683772918292804, 0.000026544910195047677}, {0.572019140524872, 0.000024556615136672733}, {0.5757099939259076, 0.000022607296201848648}, {0.5807645394549787, 0.0000204928717579822}, {0.5851991876449195, 0.000018519464254018736}, {0.5900378349233728, 0.00001638095124101291}, {0.5968240899401402, 0.000014281414351668964}, {0.6033720952728425, 0.000012322894402228002}, {0.6036469075527823, 0.00001228971275446522}, {0.6040068274182199, 0.000012190167811065855}, {0.6040698084767121, 0.000012057441219903708}, {0.6051714905613583, 0.000011791988037579415}, {0.6073213891110426, 0.000011261081672930828}, {0.6106432872814341, 0.000010199268943744677}, {0.6106684733698108, 0.000010075355911354222}, {0.6109230196041032, 9.951442878852745*^-6}, {0.6121771935857391, 9.703616814071836*^-6}, {0.6142425474037554, 9.207964684510017*^-6}, {0.6151023388175232, 9.176986426440159*^-6}, {0.6151125502524276, 9.084051652119562*^-6}, {0.6152056551139661, 8.960138619729108*^-6}, {0.615968559259798, 8.712312554837176*^-6}, {0.6188739499434773, 8.216660425164335*^-6}, {0.619649695009709, 8.186291168943427*^-6}, {0.6197012961066399, 8.095183400502748*^-6}, {0.6202634905270978, 7.97370637584116*^-6}, {0.6213496947522624, 7.730752326406964*^-6}, {0.6249728420788346, 7.244844227649594*^-6}, {0.6249827953013217, 7.1841057153188*^-6}, {0.626955989076168, 7.00189017832642*^-6}, {0.6286595408815666, 6.758936128892223*^-6}, {0.6329167941688847, 6.273028030134853*^-6}, {0.6334277835935405, 6.141231911116485*^-6}, {0.6337307184120419, 6.009435792098117*^-6}, {0.6380239165511824, 5.745843554061381*^-6}, {0.6425874332997206, 5.218659078098931*^-6}, {0.6434396292677123, 5.185710048261072*^-6}, {0.6457076157113951, 5.0868629590805625*^-6}, {0.6465539738166399, 4.955066840173217*^-6}, {0.6479403965312573, 4.691474602136481*^-6}, {0.6524583074725879, 4.164290126063008*^-6}, {0.6526593352642702, 4.041307565816332*^-6}, {0.6537006163452461, 3.918325005569656*^-6}, {0.6579334815610905, 3.672359885076304*^-6}, {0.6583777600998121, 3.549377324829628*^-6}, {0.6600940764936121, 3.4263947645829518*^-6}, {0.6634214405902865, 3.1804296439785773*^-6}, {0.6634340409060714, 3.0574470837319012*^-6}, {0.6635976293935715, 2.934464523374203*^-6}, {0.66689776314081, 2.6884994028808507*^-6}, {0.6669594184393897, 2.5655168426341746*^-6}, {0.6697005973187045, 2.4425342823874985*^-6}, {0.6704011309551889, 2.1965691618941463*^-6}, {0.6747468791013409, 2.059283716882021*^-6}, {0.6786094266859398, 1.9219982717588735*^-6}, {0.6833393560173644, 1.8876769105613533*^-6}, {0.6889164659509123, 1.784712826635726*^-6}, {0.6915413415168239, 1.6474273816236007*^-6}, {0.6951960369899911, 1.578784659117538*^-6}, {0.7001358462562978, 1.3728564914883279*^-6}, {0.7006301001843159, 1.2355710463651803*^-6}, {0.70510251790195, 1.098285601353055*^-6}, {0.711326536630825, 9.610001563409298*^-7}, {0.7177346673786488, 8.923574337238449*^-7}, {0.7286799712652404, 7.893933500202621*^-7}, {0.7333313048356463, 6.864292660946347*^-7}, {0.7335370872311091, 5.491438210825095*^-7}, {0.7372553861930918, 4.805010985764469*^-7}, {0.7459831076650822, 3.7753701476184176*^-7}, {0.777224079888915, 2.7457293094723667*^-7}, {0.7889045567628403, 1.7160884713263158*^-7}, {0.7934296030199349, 6.864476331802649*^-8}}, InterpolationOrder -> 1][Statistics`GoodnessOfFitPValueFunctionsDump`u], 0.006893289214533183 <= Statistics`GoodnessOfFitPValueFunctionsDump`u <= 0.7934296030199349}, {0., Statistics`GoodnessOfFitPValueFunctionsDump`u > 0.7934296030199349}}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`WatsonUSquareTableLookup",
	"Wavelets`WaveletDualSupport":"ObjectType: Symbol\nUsage: Wavelets`WaveletDualSupport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[Wavelets`WaveletDualSupport][Wavelets`WaveletsCommonDump`args___] := (ArgumentCountQ[Wavelets`WaveletPrimalSupport, Length[{Wavelets`WaveletsCommonDump`args}], 1, 1]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletDualSupport",
	"Wavelets`WaveletListPlot`WaveletFilterPlot":"ObjectType: Symbol\nUsage: Wavelets`WaveletListPlot`WaveletFilterPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletListPlot`WaveletFilterPlot[Wavelets`WaveletListPlot`Dump`fwave_, Wavelets`WaveletListPlot`Dump`opt:OptionsPattern[]] := Module[{Wavelets`WaveletListPlot`Dump`Lowpass, Wavelets`WaveletListPlot`Dump`Highpass, Wavelets`WaveletListPlot`Dump`ortho, Wavelets`WaveletListPlot`Dump`DualLowpass, Wavelets`WaveletListPlot`Dump`DualHighpass, Wavelets`WaveletListPlot`Dump`lopt, Wavelets`WaveletListPlot`Dump`tooltip}, Wavelets`WaveletListPlot`Dump`ortho = Wavelets`WaveletListPlot`Dump`fwave[\"OrthogonalQ\"]; Wavelets`WaveletListPlot`Dump`Lowpass = WaveletFilterCoefficients[Wavelets`WaveletListPlot`Dump`fwave, \"PrimalLowpass\"]; Wavelets`WaveletListPlot`Dump`Highpass = WaveletFilterCoefficients[Wavelets`WaveletListPlot`Dump`fwave, \"PrimalHighpass\"]; Wavelets`WaveletListPlot`Dump`lopt = Flatten[{Wavelets`WaveletListPlot`Dump`opt, Options[Wavelets`WaveletListPlot`WaveletFilterPlot]}]; Wavelets`WaveletListPlot`Dump`lopt = Charting`PruneOptions[Wavelets`WaveletListPlot`Dump`lopt]; If[Wavelets`WaveletListPlot`Dump`ortho, Wavelets`WaveletListPlot`Dump`tooltip = Pane[Column[{Row[{\"Orthogonal     : \", Wavelets`WaveletListPlot`Dump`fwave[\"OrthogonalQ\"]}], Row[{\"Biorthogonal   : \", Wavelets`WaveletListPlot`Dump`fwave[\"BiorthogonalQ\"]}], Row[{\"Primal Support : \", Wavelets`WaveletPrimalSupport[Wavelets`WaveletListPlot`Dump`fwave]}]}]]; GraphicsRow[{Tooltip[ListPlot[Wavelets`WaveletListPlot`Dump`Lowpass, PlotLabel -> \"Primal Lowpass Filter\", Wavelets`WaveletListPlot`Dump`lopt], Wavelets`WaveletListPlot`Dump`tooltip], Tooltip[ListPlot[Wavelets`WaveletListPlot`Dump`Highpass, PlotLabel -> \"Primal Highpass Filter\", Wavelets`WaveletListPlot`Dump`lopt], Wavelets`WaveletListPlot`Dump`tooltip]}], Wavelets`WaveletListPlot`Dump`DualLowpass = WaveletFilterCoefficients[Wavelets`WaveletListPlot`Dump`fwave, \"DualLowpass\"]; Wavelets`WaveletListPlot`Dump`DualHighpass = WaveletFilterCoefficients[Wavelets`WaveletListPlot`Dump`fwave, \"DualHighpass\"]; GraphicsGrid[{{ListPlot[Wavelets`WaveletListPlot`Dump`DualLowpass, PlotLabel -> \"Dual Lowpass Filter\", Wavelets`WaveletListPlot`Dump`lopt], ListPlot[Wavelets`WaveletListPlot`Dump`DualHighpass, PlotLabel -> \"Dual Highpass Filter\", Wavelets`WaveletListPlot`Dump`lopt]}, {ListPlot[Wavelets`WaveletListPlot`Dump`Lowpass, PlotLabel -> \"Primal Lowpass Filter\", Wavelets`WaveletListPlot`Dump`lopt], ListPlot[Wavelets`WaveletListPlot`Dump`Highpass, PlotLabel -> \"Primal Highpass Filter\", Wavelets`WaveletListPlot`Dump`lopt]}}]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptionsn{AlignmentPoint -> Center, AspectRatio -> 0.8, Axes -> {True, False}, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ClippingStyle -> None, ColorFunction -> Automatic, ColorFunctionScaling -> True, ColorOutput -> Automatic, ContentSelectable -> Automatic, CoordinatesToolOptions -> Automatic, DataRange -> Automatic, DisplayFunction :> $DisplayFunction, Epilog -> {}, Filling -> Axis, FillingStyle -> Directive[RGBColor[0, 0, -], Thickness[Large]], FormatType :> TraditionalForm, Frame -> True, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> Automatic, FrameTicksStyle -> {}, GridLines -> Automatic, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, ImageSizeRaw -> Automatic, InterpolationOrder -> None, Joined -> False, LabelStyle -> {}, MaxPlotPoints -> Infinity, Mesh -> None, MeshFunctions -> {#1 & }, MeshShading -> None, MeshStyle -> Automatic, Method -> Automatic, PerformanceGoal :> $PerformanceGoal, PlotLabel -> Automatic, PlotMarkers -> None, PlotRange -> All, PlotRangeClipping -> True, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotStyle -> Automatic, PreserveImageOptions -> Automatic, Prolog -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, PlotTheme :> $PlotTheme, PlotLegends -> None}\nnAttributes: {}\nFullName: Wavelets`WaveletListPlot`WaveletFilterPlot",
	"Wavelets`WaveletFrequencyOrderedTree1D":"ObjectType: Symbol\nUsage: Wavelets`WaveletFrequencyOrderedTree1D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletFrequencyOrderedTree1D[Wavelets`WaveletsCommonDump`level_] := Module[{Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex, Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`nCoeff, Wavelets`WaveletsCommonDump`rank = 1}, Wavelets`WaveletsCommonDump`nCoeff = BitShiftLeft[1, Wavelets`WaveletsCommonDump`rank]; Wavelets`WaveletsCommonDump`CoeffIndexMap = {Table[{Wavelets`WaveletsCommonDump`i}, {Wavelets`WaveletsCommonDump`i, 0, Wavelets`WaveletsCommonDump`nCoeff - 1}]}; Do[Wavelets`WaveletsCommonDump`CoeffIndex = Flatten[Table[Wavelets`WaveletsCommonDump`WaveletFrequencyOrderedDecompositionTree[Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`nCoeff], {Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`CoeffIndexMap[[Wavelets`WaveletsCommonDump`j]]}], 1]; Wavelets`WaveletsCommonDump`CoeffIndexMap = Append[Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex]; , {Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`level - 1}]; Flatten[Wavelets`WaveletsCommonDump`CoeffIndexMap, 1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletFrequencyOrderedTree1D",
	"Wavelets`WaveletFullTree":"ObjectType: Symbol\nUsage: Wavelets`WaveletFullTree\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletFullTree[Wavelets`WaveletsCommonDump`rank_, Wavelets`WaveletsCommonDump`level_] := Module[{Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex, Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`nCoeff}, Wavelets`WaveletsCommonDump`nCoeff = BitShiftLeft[1, Wavelets`WaveletsCommonDump`rank]; Wavelets`WaveletsCommonDump`CoeffIndexMap = {Table[{Wavelets`WaveletsCommonDump`i}, {Wavelets`WaveletsCommonDump`i, 0, Wavelets`WaveletsCommonDump`nCoeff - 1}]}; Do[Wavelets`WaveletsCommonDump`CoeffIndex = Flatten[Table[Wavelets`WaveletsCommonDump`WaveletDecompositionTree[Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`nCoeff], {Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`CoeffIndexMap[[Wavelets`WaveletsCommonDump`j]]}], 1]; Wavelets`WaveletsCommonDump`CoeffIndexMap = Append[Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex]; , {Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`level - 1}]; Flatten[Wavelets`WaveletsCommonDump`CoeffIndexMap, 1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletFullTree",
	"Wavelets`WaveletIndexMemberQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletIndexMemberQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletIndexMemberQ[Wavelets`WaveletData`Dump`WTree_List, Wavelets`WaveletData`Dump`WIndexes_List] := Block[{Wavelets`WaveletData`Dump`treeRules, Wavelets`WaveletData`Dump`boolVec}, Wavelets`WaveletData`Dump`treeRules = Dispatch[Append[(#1 -> True & ) \/@ Wavelets`WaveletData`Dump`WTree, _ -> False]]; Wavelets`WaveletData`Dump`boolVec = (#1 \/. Wavelets`WaveletData`Dump`treeRules & ) \/@ Wavelets`WaveletData`Dump`WIndexes; VectorQ[Wavelets`WaveletData`Dump`boolVec, TrueQ]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletIndexMemberQ",
	"Internal`WaveletOptions":"ObjectType: Symbol\nUsage: Internal`WaveletOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`WaveletOptions",
	"Wavelets`WaveletParameterQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletParameterQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[Wavelets`WaveletParameterQ][Wavelets`WaveletsCommonDump`args___] := (ArgumentCountQ[Wavelets`WaveletParameterQ, Length[{Wavelets`WaveletsCommonDump`args}], 1, 2]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletParameterQ",
	"Wavelets`WaveletPartialReconstructionTree":"ObjectType: Symbol\nUsage: Wavelets`WaveletPartialReconstructionTree\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletPartialReconstructionTree[Wavelets`WaveletsCommonDump`rank_Integer, Wavelets`WaveletsCommonDump`level_Integer] := Module[{Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex, Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`CoarseCoeff, Wavelets`WaveletsCommonDump`nCoeff}, Wavelets`WaveletsCommonDump`nCoeff = 2^Wavelets`WaveletsCommonDump`rank; If[Wavelets`WaveletsCommonDump`level == 1, Wavelets`WaveletsCommonDump`CoeffIndexMap = {Table[{Wavelets`WaveletsCommonDump`i}, {Wavelets`WaveletsCommonDump`i, 0, Wavelets`WaveletsCommonDump`nCoeff - 1}]}, Wavelets`WaveletsCommonDump`CoeffIndexMap = {Table[{Wavelets`WaveletsCommonDump`i}, {Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`nCoeff - 1}]}; Do[Wavelets`WaveletsCommonDump`CoarseCoeff = ConstantArray[0, Wavelets`WaveletsCommonDump`j]; If[Wavelets`WaveletsCommonDump`j == Wavelets`WaveletsCommonDump`level - 1, Wavelets`WaveletsCommonDump`CoeffIndex = Join[Table[Append[Wavelets`WaveletsCommonDump`CoarseCoeff, Wavelets`WaveletsCommonDump`i], {Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`nCoeff - 1}], {Append[Wavelets`WaveletsCommonDump`CoarseCoeff, 0]}]; , Wavelets`WaveletsCommonDump`CoeffIndex = Table[Append[Wavelets`WaveletsCommonDump`CoarseCoeff, Wavelets`WaveletsCommonDump`i], {Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`nCoeff - 1}]; ]; Wavelets`WaveletsCommonDump`CoeffIndexMap = Append[Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex]; , {Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`level - 1}]; ]; Flatten[Wavelets`WaveletsCommonDump`CoeffIndexMap, 1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletPartialReconstructionTree",
	"Wavelets`WaveletPartialTree":"ObjectType: Symbol\nUsage: Wavelets`WaveletPartialTree\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletPartialTree[Wavelets`WaveletsCommonDump`rank_Integer, Wavelets`WaveletsCommonDump`level_Integer] := Module[{Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex, Wavelets`WaveletsCommonDump`i, Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`CoarseCoeff, Wavelets`WaveletsCommonDump`nCoeff}, Wavelets`WaveletsCommonDump`nCoeff = BitShiftLeft[1, Wavelets`WaveletsCommonDump`rank]; Wavelets`WaveletsCommonDump`CoeffIndexMap = {Table[{Wavelets`WaveletsCommonDump`i}, {Wavelets`WaveletsCommonDump`i, 0, Wavelets`WaveletsCommonDump`nCoeff - 1}]}; Do[Wavelets`WaveletsCommonDump`CoarseCoeff = ConstantArray[0, Wavelets`WaveletsCommonDump`j]; Wavelets`WaveletsCommonDump`CoeffIndex = Table[Append[Wavelets`WaveletsCommonDump`CoarseCoeff, Wavelets`WaveletsCommonDump`i], {Wavelets`WaveletsCommonDump`i, 0, Wavelets`WaveletsCommonDump`nCoeff - 1}]; Wavelets`WaveletsCommonDump`CoeffIndexMap = Append[Wavelets`WaveletsCommonDump`CoeffIndexMap, Wavelets`WaveletsCommonDump`CoeffIndex]; , {Wavelets`WaveletsCommonDump`j, Wavelets`WaveletsCommonDump`level - 1}]; Flatten[Wavelets`WaveletsCommonDump`CoeffIndexMap, 1]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletPartialTree",
	"Wavelets`WaveletUtilities`WaveletPhiPsiInitialize":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`WaveletPhiPsiInitialize\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`WaveletPhiPsiInitialize[Wavelets`WaveletUtilities`Dump`coeffs_, Wavelets`WaveletUtilities`Dump`zero_, Wavelets`WaveletUtilities`Dump`prec_] := Module[{Wavelets`WaveletUtilities`Dump`zvec, Wavelets`WaveletUtilities`Dump`initvec, Wavelets`WaveletUtilities`Dump`mat, Wavelets`WaveletUtilities`Dump`vals, Wavelets`WaveletUtilities`Dump`vecs, Wavelets`WaveletUtilities`Dump`vec, Wavelets`WaveletUtilities`Dump`posn}, Wavelets`WaveletUtilities`Dump`zvec = ConstantArray[Wavelets`WaveletUtilities`Dump`zero, Length[Wavelets`WaveletUtilities`Dump`coeffs] - 1]; Wavelets`WaveletUtilities`Dump`initvec = Join[Wavelets`WaveletUtilities`Dump`zvec, Wavelets`WaveletUtilities`Dump`coeffs, Wavelets`WaveletUtilities`Dump`zvec]; Wavelets`WaveletUtilities`Dump`mat = Reverse \/@ Partition[Wavelets`WaveletUtilities`Dump`initvec, Length[Wavelets`WaveletUtilities`Dump`coeffs], 2]; {Wavelets`WaveletUtilities`Dump`vals, Wavelets`WaveletUtilities`Dump`vecs} = Eigensystem[Wavelets`WaveletUtilities`Dump`mat]; Wavelets`WaveletUtilities`Dump`vec = Pick[Wavelets`WaveletUtilities`Dump`vecs, Wavelets`WaveletUtilities`Dump`vals, _?((Wavelets`WaveletUtilities`Dump`prec =!= Infinity && NumberQ[#1] && Abs[#1 - 1] < 2^(-(Wavelets`WaveletUtilities`Dump`prec\/2.) + 2.)) || PossibleZeroQ[#1 - 1] & )]; If[Wavelets`WaveletUtilities`Dump`vec === {}, Wavelets`WaveletUtilities`Dump`posn = Ordering[Abs[Wavelets`WaveletUtilities`Dump`vals - 1], 1, Less]; Wavelets`WaveletUtilities`Dump`vec = Wavelets`WaveletUtilities`Dump`vecs[[Wavelets`WaveletUtilities`Dump`posn]]; Wavelets`WaveletUtilities`Dump`vec = Re[Wavelets`WaveletUtilities`Dump`vec]; ]; If[ !ListQ[Wavelets`WaveletUtilities`Dump`vec] || Length[Wavelets`WaveletUtilities`Dump`vec] == 0, Return[$Failed], Wavelets`WaveletUtilities`Dump`vec = First[Wavelets`WaveletUtilities`Dump`vec]]; Wavelets`WaveletUtilities`Dump`vec\/Total[Wavelets`WaveletUtilities`Dump`vec]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`WaveletPhiPsiInitialize",
	"Wavelets`WaveletPrimalSupport":"ObjectType: Symbol\nUsage: Wavelets`WaveletPrimalSupport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: HoldPattern[Wavelets`WaveletPrimalSupport][Wavelets`WaveletsCommonDump`args___] := (ArgumentCountQ[Wavelets`WaveletPrimalSupport, Length[{Wavelets`WaveletsCommonDump`args}], 1, 1]; 1 \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletPrimalSupport",
	"Wavelets`WaveletUtilities`WaveletPropertyTable":"ObjectType: Symbol\nUsage: Wavelets`WaveletUtilities`WaveletPropertyTable\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletUtilities`WaveletPropertyTable[Wavelets`WaveletUtilities`Dump`wave_] := Module[{Wavelets`WaveletUtilities`Dump`title, Wavelets`WaveletUtilities`Dump`prop, Wavelets`WaveletUtilities`Dump`style = GrayLevel[0.7], Wavelets`WaveletUtilities`Dump`rules, Wavelets`WaveletUtilities`Dump`dual}, Wavelets`WaveletUtilities`Dump`rules = {True -> \"Yes\", False -> \"No\"}; Wavelets`WaveletUtilities`Dump`dual = If[Head[Wavelets`WaveletDualSupport[Wavelets`WaveletUtilities`Dump`wave]] === Interval, First[Wavelets`WaveletDualSupport[Wavelets`WaveletUtilities`Dump`wave]], \"-\"]; Wavelets`WaveletUtilities`Dump`title = {\"\", \"Orthogonal\", \"Biorthogonal\", \"Primal Support\", \"Dual Support\", \"Symmetry\"}; Wavelets`WaveletUtilities`Dump`prop = {\"Property Values\", Wavelets`WaveletUtilities`Dump`wave[\"OrthogonalQ\"] \/. Wavelets`WaveletUtilities`Dump`rules, Wavelets`WaveletUtilities`Dump`wave[\"BiorthogonalQ\"] \/. Wavelets`WaveletUtilities`Dump`rules, First[Wavelets`WaveletPrimalSupport[Wavelets`WaveletUtilities`Dump`wave]], Wavelets`WaveletUtilities`Dump`dual, Wavelets`WaveletUtilities`Dump`wave[\"Symmetry\"]}; Grid[Transpose[{Wavelets`WaveletUtilities`Dump`title, Wavelets`WaveletUtilities`Dump`prop}], Dividers -> {{2 -> Wavelets`WaveletUtilities`Dump`style}, {2 -> Wavelets`WaveletUtilities`Dump`style}}, Spacings -> 1.2, Alignment -> {{Right, Center}, Center, {{1, 2} -> {Center, Center}}}]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletUtilities`WaveletPropertyTable",
	"Wavelets`WaveletQ":"ObjectType: Symbol\nUsage: Wavelets`WaveletQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletQ",
	"Wavelets`WaveletTransformFilters":"ObjectType: Symbol\nUsage: Wavelets`WaveletTransformFilters\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {WorkingPrecision -> MachinePrecision}\nAttributes: {}\nFullName: Wavelets`WaveletTransformFilters",
	"Wavelets`WaveletScalogram`WaveletTransformViewPlot":"ObjectType: Symbol\nUsage: Wavelets`WaveletScalogram`WaveletTransformViewPlot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Wavelets`WaveletScalogram`WaveletTransformViewPlot[Wavelets`WaveletScalogram`Dump`dwd_DiscreteWaveletData, Wavelets`WaveletScalogram`Dump`plotLayoutOpt_:\"TreeView\"] := Module[{Wavelets`WaveletScalogram`Dump`tpos, Wavelets`WaveletScalogram`Dump`layout, Wavelets`WaveletScalogram`Dump`WIndexMap, Wavelets`WaveletScalogram`Dump`rank, Wavelets`WaveletScalogram`Dump`bestBasis, Wavelets`WaveletScalogram`Dump`Jmax, Wavelets`WaveletScalogram`Dump`packet, Wavelets`WaveletScalogram`Dump`transform, Wavelets`WaveletScalogram`Dump`costValues}, {Wavelets`WaveletScalogram`Dump`WIndexMap, Wavelets`WaveletScalogram`Dump`rank, Wavelets`WaveletScalogram`Dump`bestBasis, Wavelets`WaveletScalogram`Dump`Jmax, Wavelets`WaveletScalogram`Dump`transform} = Quiet[Wavelets`WaveletData`DiscreteWaveletDataInformation[Wavelets`WaveletScalogram`Dump`dwd, {\"WaveletIndex\", \"Rank\", \"BasisIndex\", \"Refinement\", \"Transform\"}, False]]; Switch[Wavelets`WaveletScalogram`Dump`transform, \"DiscreteWaveletTransform\" | \"StationaryWaveletTransform\" | \"LiftingWaveletTransform\", Wavelets`WaveletScalogram`Dump`packet = False; , \"DiscreteWaveletPacketTransform\" | \"StationaryWaveletPacketTransform\", Wavelets`WaveletScalogram`Dump`packet = True; Wavelets`WaveletScalogram`Dump`costValues = Quiet[Wavelets`WaveletData`DiscreteWaveletDataInformation[Wavelets`WaveletScalogram`Dump`dwd, {\"BestBasisCostValues\"}, False]]; , _, Throw[$Failed]; ]; If[ListQ[Wavelets`WaveletScalogram`Dump`plotLayoutOpt], If[Length[Wavelets`WaveletScalogram`Dump`plotLayoutOpt] == 2, Wavelets`WaveletScalogram`Dump`layout = First[Wavelets`WaveletScalogram`Dump`plotLayoutOpt]; Wavelets`WaveletScalogram`Dump`tpos = Wavelets`WaveletScalogram`Dump`plotLayoutOpt[[2]]; , Throw[$Failed]], Wavelets`WaveletScalogram`Dump`layout = Wavelets`WaveletScalogram`Dump`plotLayoutOpt; Wavelets`WaveletScalogram`Dump`tpos = Top]; If[ !MemberQ[{Top, Bottom, Left, Right, Center}, Wavelets`WaveletScalogram`Dump`tpos], Throw[$Failed]]; Switch[Wavelets`WaveletScalogram`Dump`layout, \"BlockView\", If[Wavelets`WaveletScalogram`Dump`packet, Wavelets`WaveletScalogram`Dump`WaveletPacketTransformBlockView[Wavelets`WaveletScalogram`Dump`WIndexMap, Wavelets`WaveletScalogram`Dump`rank, Wavelets`WaveletScalogram`Dump`Jmax, Wavelets`WaveletScalogram`Dump`bestBasis], Throw[$Failed]], \"CostValuePlot\", If[Wavelets`WaveletScalogram`Dump`packet, Wavelets`WaveletScalogram`Dump`WaveletPacketTransformCostValueBlockView[Wavelets`WaveletScalogram`Dump`WIndexMap, Wavelets`WaveletScalogram`Dump`rank, Wavelets`WaveletScalogram`Dump`Jmax, Wavelets`WaveletScalogram`Dump`bestBasis, First[Wavelets`WaveletScalogram`Dump`costValues]], Throw[$Failed]], \"TreeView\", Wavelets`WaveletScalogram`Dump`WaveletTransformTreeView[Wavelets`WaveletScalogram`Dump`tpos, Wavelets`WaveletScalogram`Dump`rank, Wavelets`WaveletScalogram`Dump`Jmax, Wavelets`WaveletScalogram`Dump`bestBasis, Wavelets`WaveletScalogram`Dump`packet], _, Throw[$Failed]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Wavelets`WaveletScalogram`WaveletTransformViewPlot",
	"Audio`WebAudioSearchInformation":"ObjectType: Symbol\nUsage: Audio`WebAudioSearchInformation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Audio`WebAudioSearchInformation[] := WebAudioSearch`Private`$services\nAudio`WebAudioSearchInformation[WebAudioSearch`Private`service:Alternatives[\"Freesound\"]] := Association[\"Properties\" -> WebAudioSearch`Private`$supportedProperty[WebAudioSearch`Private`service]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Audio`WebAudioSearchInformation",
	"Templating`WebHorizontalLayout":"ObjectType: Symbol\nUsage: Templating`WebHorizontalLayout\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[CloudObject`CloudDeployActiveQ][_Templating`WebHorizontalLayout] ^:= True\nHoldPattern[GenerateHTTPResponse][Templating`GenerateHTTPResponse`PackagePrivate`t_Templating`WebHorizontalLayout] ^:= GenerateHTTPResponse[HTTPResponse[Templating`ToHTML[Templating`HTMLTemplate[Templating`GenerateHTTPResponse`PackagePrivate`t]]]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Alignment -> None}\nAttributes: {}\nFullName: Templating`WebHorizontalLayout",
	"Templating`WebItem":"ObjectType: Symbol\nUsage: Templating`WebItem\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[CloudObject`CloudDeployActiveQ][_Templating`WebItem] ^:= True\nHoldPattern[GenerateHTTPResponse][Templating`GenerateHTTPResponse`PackagePrivate`t_Templating`WebItem] ^:= GenerateHTTPResponse[HTTPResponse[Templating`ToHTML[Templating`HTMLTemplate[Templating`GenerateHTTPResponse`PackagePrivate`t]]]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Alignment -> None}\nAttributes: {}\nFullName: Templating`WebItem",
	"Templating`Webpage":"ObjectType: Symbol\nUsage: Templating`Webpage\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[CloudObject`CloudDeployActiveQ][_Templating`Webpage] ^:= True\nHoldPattern[GenerateHTTPResponse][Templating`Webpage[Templating`GenerateHTTPResponse`PackagePrivate`content_, (Templating`GenerateHTTPResponse`PackagePrivate`meta_)?AssociationQ]] ^:= GenerateHTTPResponse[HTTPResponse[Block[{Templating`PackageScope`$HTMLExportOverride = Association[Templating`PackageScope`$HTMLExportOverride, KeyDrop[Templating`GenerateHTTPResponse`PackagePrivate`meta, {\"ContentType\", \"Headers\", \"StatusCode\"}]]}, GenerateHTTPResponse[Templating`GenerateHTTPResponse`PackagePrivate`content]], KeyTake[Templating`GenerateHTTPResponse`PackagePrivate`meta, {\"ContentType\", \"Headers\", \"StatusCode\"}]]]\nDownValues: Templating`Webpage[Templating`HTMLExport`PackagePrivate`c_, Templating`HTMLExport`PackagePrivate`a:_Rule | _RuleDelayed | {(_Rule | _RuleDelayed)...}:{}] := Templating`Webpage[Templating`HTMLExport`PackagePrivate`c, Association[Templating`HTMLExport`PackagePrivate`a]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Alignment -> None}\nAttributes: {}\nFullName: Templating`Webpage",
	"HTTPHandling`WebServer":"ObjectType: Symbol\nUsage: HTTPHandling`WebServer\nDocumentation: None\nOwnValues: None\nUpValues: SystemOpen[HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ]] ^:= SystemOpen[HTTPHandling`Main`PackagePrivate`ws[\"AbsoluteURL\"]]\nKillProcess[HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ]] ^:= HTTPHandling`Main`PackagePrivate`ws[\"StopServer\"]\nRunProcess[HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ]] ^:= HTTPHandling`Main`PackagePrivate`ws[\"StartServer\"]\nDownValues: HTTPHandling`WebServer[HTTPHandling`Main`PackagePrivate`port_Integer:7000] := HTTPHandling`WebServer[Association[\"Port\" -> HTTPHandling`Main`PackagePrivate`port]]\nSubValues: (HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"AsyncHandler\"] := Function[{HTTPHandling`Main`PackagePrivate`asyncTask, HTTPHandling`Main`PackagePrivate`client, HTTPHandling`Main`PackagePrivate`msg}, Block[{HTTPHandling`Main`PackagePrivate`stderr, HTTPHandling`Main`PackagePrivate`exitcode, HTTPHandling`Main`PackagePrivate`pubRes}, With[{HTTPHandling`Main`PackagePrivate`json = Association[ImportString[FromCharacterCode[Normal[HTTPHandling`Main`PackagePrivate`msg[\"Data\"]]], \"JSON\"]], HTTPHandling`Main`PackagePrivate`httpServerProcess = HTTPHandling`Main`PackagePrivate`ws[\"Meta\"][\"Server\"]}, If[ProcessStatus[HTTPHandling`$MQTTBroker[\"Process\"]] =!= \"Running\", HTTPHandling`Main`PackagePrivate`stderr = ReadString[ProcessConnection[HTTPHandling`$MQTTBroker[\"Process\"], \"StandardError\"]]; HTTPHandling`Main`PackagePrivate`exitcode = ProcessInformation[HTTPHandling`$MQTTBroker[\"Process\"], \"ExitCode\"]; Message[HTTPHandling`WebServer::procFail, \"MQTT broker\", HTTPHandling`Main`PackagePrivate`exitcode, HTTPHandling`Main`PackagePrivate`stderr]; Return[$Failed]; ]; If[ProcessStatus[HTTPHandling`Main`PackagePrivate`httpServerProcess] =!= \"Running\", HTTPHandling`Main`PackagePrivate`stderr = ReadString[ProcessConnection[HTTPHandling`Main`PackagePrivate`httpServerProcess, \"StandardError\"]]; HTTPHandling`Main`PackagePrivate`exitcode = ProcessInformation[HTTPHandling`Main`PackagePrivate`httpServerProcess, \"ExitCode\"]; Message[HTTPHandling`WebServer::procFail, \"HTTP\", HTTPHandling`Main`PackagePrivate`exitcode, HTTPHandling`Main`PackagePrivate`stderr]; Return[$Failed]; ]; HTTPHandling`Main`PackagePrivate`pubRes = MQTTLink`TopicPublish[HTTPHandling`Main`PackagePrivate`client, HTTPHandling`Main`PackagePrivate`json[\"Connection\"], JSONTools`ToJSON[Replace[GenerateHTTPResponse @@ {HTTPHandling`Main`PackagePrivate`fixExpr[HTTPHandling`Main`PackagePrivate`ws[\"Handler\"]], HTTPHandling`Main`PackagePrivate`fixData[HTTPHandling`Main`PackagePrivate`json]}, {HTTPHandling`Main`PackagePrivate`res_HTTPResponse :> HTTPHandling`Main`PackagePrivate`res, HTTPHandling`Main`PackagePrivate`e_ :> HTTPResponse[StringJoin[\"GenerateHTTPResponse must return an HTTPResponse: \", ToString[HTTPHandling`Main`PackagePrivate`e, InputForm]], Association[\"StatusCode\" -> 500]]}][{\"StatusCode\", \"Body\", \"Headers\", \"Cookies\"}], \"AllowAllSymbols\" -> True, \"Compact\" -> True, \"ASCIIOnly\" -> True]]; If[ !AssociationQ[HTTPHandling`Main`PackagePrivate`pubRes], Message[HTTPHandling`StartWebServer::serverErr]; ]; ]]]\nHTTPHandling`WebServer[(HTTPHandling`Main`PackagePrivate`meta_)?AssociationQ][\"Port\"] := Lookup[HTTPHandling`Main`PackagePrivate`meta, \"Port\", 7000]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"Meta\"] := Lookup[HTTPHandling`$WebServers, HTTPHandling`Main`PackagePrivate`ws[\"Port\"], Association[]]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"AbsoluteURL\", HTTPHandling`Main`PackagePrivate`path_:\"\/\"] := StringJoin[\"http:\/\/localhost:\", ToString[HTTPHandling`Main`PackagePrivate`ws[\"Port\"]], HTTPHandling`Main`PackagePrivate`path]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"Running\"] := TrueQ[ProcessStatus[HTTPHandling`$MQTTBroker[\"Process\"]] === \"Running\" && ProcessStatus[HTTPHandling`Main`PackagePrivate`ws[\"Meta\"][\"Server\"]] === \"Running\" && HTTPHandling`Main`PackagePrivate`ws[\"Meta\"][\"Connection\"][\"Connected\"]]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"Handler\", HTTPHandling`Main`PackagePrivate`func_:Identity] := Replace[HTTPHandling`Main`PackagePrivate`ws[\"Meta\"], {HTTPHandling`Main`PackagePrivate`meta_ \/; KeyExistsQ[HTTPHandling`Main`PackagePrivate`meta, \"Handler\"] :> Extract[HTTPHandling`Main`PackagePrivate`meta, \"Handler\", HTTPHandling`Main`PackagePrivate`func], _ :> HTTPHandling`Main`PackagePrivate`func @@ {HTTPHandling`Main`PackagePrivate`$DefaultHandler}}]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"RegisterHandler\", HTTPHandling`Main`PackagePrivate`expr_] := (HTTPHandling`$WebServers[HTTPHandling`Main`PackagePrivate`ws[\"Port\"], \"Handler\"] := HTTPHandling`Main`PackagePrivate`expr; HTTPHandling`Main`PackagePrivate`ws)\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"StopServer\"] := (If[HTTPHandling`Main`PackagePrivate`ws[\"Running\"], If[HTTPHandling`Main`PackagePrivate`ws[\"Meta\"][\"Connection\"][\"Connected\"], MQTTLink`DisconnectClient[HTTPHandling`Main`PackagePrivate`ws[\"Meta\"][\"Connection\"]]; ]; KillProcess[HTTPHandling`Main`PackagePrivate`ws[\"Meta\"][\"Server\"]]; HTTPHandling`$WebServers[HTTPHandling`Main`PackagePrivate`ws[\"Port\"]] = Association[HTTPHandling`Main`PackagePrivate`ws[\"Handler\", Function[HTTPHandling`Main`PackagePrivate`a, \"Handler\" :> HTTPHandling`Main`PackagePrivate`a, {HoldFirst}]]]; ]; HTTPHandling`Main`PackagePrivate`ws)\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"StartHTTPServer\"] := Block[{HTTPHandling`Main`PackagePrivate`process, HTTPHandling`Main`PackagePrivate`stderr, HTTPHandling`Main`PackagePrivate`exitcode}, HTTPHandling`Main`PackagePrivate`process = StartProcess[{First[FileNames[\"server*\", FileNameJoin[{PacletManager`PacletResource[\"HTTPHandling\", \"Server\"], $SystemID}]]], StringJoin[\"-port=\", ToString[HTTPHandling`Main`PackagePrivate`ws[\"Port\"]]], StringJoin[\"-debug=\", \"false\"]}]; ReadLine[HTTPHandling`Main`PackagePrivate`process]; If[ProcessStatus[HTTPHandling`Main`PackagePrivate`process] =!= \"Running\", HTTPHandling`Main`PackagePrivate`stderr = ReadString[ProcessConnection[HTTPHandling`Main`PackagePrivate`process, \"StandardError\"]]; HTTPHandling`Main`PackagePrivate`exitcode = ProcessInformation[HTTPHandling`Main`PackagePrivate`process, \"ExitCode\"]; Message[HTTPHandling`WebServer::procFail, \"HTTP\", HTTPHandling`Main`PackagePrivate`exitcode, HTTPHandling`Main`PackagePrivate`stderr]; $Failed, HTTPHandling`Main`PackagePrivate`process]]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"StartConnection\"] := Module[{HTTPHandling`Main`PackagePrivate`client}, HTTPHandling`Main`PackagePrivate`client = MQTTLink`CreateClient[\"localhost\", 1883, \"ClientDisconnectedFunction\" :> (Message[HTTPHandling`StartWebServer::serverErr] & )]; If[MatchQ[HTTPHandling`Main`PackagePrivate`client, _MQTTLink`MQTTClient], MQTTLink`TopicSubscribe[HTTPHandling`Main`PackagePrivate`client, \"GenerateHTTPResponse\", \"MessageReceivedFunction\" :> HTTPHandling`Main`PackagePrivate`ws[\"AsyncHandler\"]]; HTTPHandling`Main`PackagePrivate`client, $Failed]]\n(HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ])[\"StartServer\", HTTPHandling`Main`PackagePrivate`force_:False] := Block[{HTTPHandling`Main`PackagePrivate`port = HTTPHandling`Main`PackagePrivate`ws[\"Port\"], HTTPHandling`Main`PackagePrivate`serverProcess, HTTPHandling`Main`PackagePrivate`connection}, If[HTTPHandling`Main`PackagePrivate`ws[\"Running\"] &&  !HTTPHandling`Main`PackagePrivate`force, Message[HTTPHandling`WebServer::running, HTTPHandling`Main`PackagePrivate`port]; Return[HTTPHandling`Main`PackagePrivate`ws]]; HTTPHandling`$WebServers[HTTPHandling`Main`PackagePrivate`port] = Association[]; Quiet[HTTPHandling`$MQTTBroker = MQTTLink`StartBroker[1883], {MQTTLink`StartBroker::running}]; HTTPHandling`Main`PackagePrivate`connection = HTTPHandling`Main`PackagePrivate`ws[\"StartConnection\"]; HTTPHandling`Main`PackagePrivate`serverProcess = HTTPHandling`Main`PackagePrivate`ws[\"StartHTTPServer\"]; If[ !MemberQ[{HTTPHandling`Main`PackagePrivate`connection, HTTPHandling`Main`PackagePrivate`serverProcess, HTTPHandling`$MQTTBroker}, $Failed], HTTPHandling`$WebServers[HTTPHandling`Main`PackagePrivate`port, \"Server\"] = HTTPHandling`Main`PackagePrivate`serverProcess; HTTPHandling`$WebServers[HTTPHandling`Main`PackagePrivate`port, \"Connection\"] = HTTPHandling`Main`PackagePrivate`connection; HTTPHandling`Main`PackagePrivate`ws, $Failed]]\nDefaultValues: None\nNValues: None\nFormatValues: HTTPHandling`WebServer \/: MakeBoxes[HTTPHandling`Main`PackagePrivate`ws:HTTPHandling`WebServer[_?AssociationQ], StandardForm] := BoxForm`ArrangeSummaryBox[HTTPHandling`WebServer, HTTPHandling`Main`PackagePrivate`ws, Dynamic[Button[Graphics[{If[TrueQ[HTTPHandling`Main`PackagePrivate`ws[\"Running\"]], Darker[Green], Red], EdgeForm[Directive[Thick, White]], Disk[], Text[Style[\"\", Directive[22, White, Bold]], Scaled[{0.53, 0.48}]]}, ImageSize -> Dynamic[{Automatic, (3.2*CurrentValue[\"FontCapHeight\"])\/AbsoluteCurrentValue[Magnification]}], Background -> None], If[TrueQ[HTTPHandling`Main`PackagePrivate`ws[\"Running\"]], KillProcess[HTTPHandling`Main`PackagePrivate`ws], RunProcess[HTTPHandling`Main`PackagePrivate`ws]], Appearance -> \"Frameless\"]], {BoxForm`SummaryItem[{\"URL: \", Hyperlink[HTTPHandling`Main`PackagePrivate`ws[\"AbsoluteURL\"]]}], BoxForm`SummaryItem[{\"Running: \", Dynamic[TrueQ[HTTPHandling`Main`PackagePrivate`ws[\"Running\"]]]}]}, {BoxForm`SummaryItem[{\"Handler: \", Dynamic[Short[HTTPHandling`Main`PackagePrivate`ws[\"Handler\", HoldForm]]]}]}, StandardForm]\nOptions: None\nAttributes: {}\nFullName: HTTPHandling`WebServer",
	"Templating`WebVerticalLayout":"ObjectType: Symbol\nUsage: Templating`WebVerticalLayout\nDocumentation: None\nOwnValues: None\nUpValues: HoldPattern[CloudObject`CloudDeployActiveQ][_Templating`WebVerticalLayout] ^:= True\nHoldPattern[GenerateHTTPResponse][Templating`GenerateHTTPResponse`PackagePrivate`t_Templating`WebVerticalLayout] ^:= GenerateHTTPResponse[HTTPResponse[Templating`ToHTML[Templating`HTMLTemplate[Templating`GenerateHTTPResponse`PackagePrivate`t]]]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Alignment -> None}\nAttributes: {}\nFullName: Templating`WebVerticalLayout",
	"DateAndTime`WeekdayIncrementQ":"ObjectType: Symbol\nUsage: DateAndTime`WeekdayIncrementQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DateAndTime`WeekdayIncrementQ[System`InternalDateUtilitiesDump`arg_] := MemberQ[System`InternalDateUtilitiesDump`$weekdayElements, Verbatim[System`InternalDateUtilitiesDump`arg]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DateAndTime`WeekdayIncrementQ",
	"Statistics`Library`WeightedDataParameterEstimation":"ObjectType: Symbol\nUsage: Statistics`Library`WeightedDataParameterEstimation\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`WeightedDataParameterEstimation[Statistics`DistributionEstimateDump`data_, Statistics`DistributionEstimateDump`dist_, Statistics`DistributionEstimateDump`start_, Statistics`DistributionEstimateDump`optlist_, \"MaximumLikelihood\", Statistics`DistributionEstimateDump`caller_] := Block[{Statistics`DistributionEstimateDump`res}, Statistics`DistributionEstimateDump`res = If[Statistics`DistributionEstimateDump`start === Automatic, Statistics`Library`NMaximizeMLEstimation, Statistics`Library`FindMaximumMLEstimation][Statistics`DistributionEstimateDump`data, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`start, Statistics`DistributionEstimateDump`optlist, Statistics`DistributionEstimateDump`caller]; If[Internal`LiterallyAbsentQ[Statistics`DistributionEstimateDump`res, $Failed], Statistics`DistributionEstimateDump`res, $Failed]]\nStatistics`Library`WeightedDataParameterEstimation[Statistics`DistributionEstimateDump`data_, Statistics`DistributionEstimateDump`dist_, Statistics`DistributionEstimateDump`start_, Statistics`DistributionEstimateDump`optlist_, \"MethodOfMoments\", Statistics`DistributionEstimateDump`caller_] := Statistics`Library`WeightedDataParameterEstimation[Statistics`DistributionEstimateDump`data, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`start, Statistics`DistributionEstimateDump`optlist, {\"MethodOfMoments\", \"Moment\", Automatic}, Statistics`DistributionEstimateDump`caller]\nStatistics`Library`WeightedDataParameterEstimation[Statistics`DistributionEstimateDump`data_, Statistics`DistributionEstimateDump`dist_, Statistics`DistributionEstimateDump`start_, Statistics`DistributionEstimateDump`optlist_, {\"MethodOfMoments\", Statistics`DistributionEstimateDump`momenttype_, Statistics`DistributionEstimateDump`momentorders_}, Statistics`DistributionEstimateDump`caller_] := Block[{Statistics`DistributionEstimateDump`res}, Statistics`DistributionEstimateDump`res = Statistics`Library`FindRootMethodOfMomentsEstimation[Statistics`DistributionEstimateDump`data, Statistics`DistributionEstimateDump`dist, Statistics`DistributionEstimateDump`momenttype, Statistics`DistributionEstimateDump`start, Statistics`DistributionEstimateDump`optlist, Statistics`DistributionEstimateDump`caller, Statistics`DistributionEstimateDump`momentorders]; If[Internal`LiterallyAbsentQ[Statistics`DistributionEstimateDump`res, {$Failed, Statistics`Library`FindRootMethodOfMomentsEstimation}], Statistics`DistributionEstimateDump`res, $Failed]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`WeightedDataParameterEstimation",
	"Statistics`Library`WeightedFunctionOfData":"ObjectType: Symbol\nUsage: Statistics`Library`WeightedFunctionOfData\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`WeightedFunctionOfData[Statistics`DistributionEstimateDump`fun_, Statistics`DistributionEstimateDump`data_WeightedData] := Block[{Statistics`DistributionEstimateDump`v, Statistics`DistributionEstimateDump`w}, {Statistics`DistributionEstimateDump`v, Statistics`DistributionEstimateDump`w} = Statistics`DistributionEstimateDump`data[\"EmpiricalPDF\"]; WeightedData[Statistics`DistributionEstimateDump`fun[Statistics`DistributionEstimateDump`v], Statistics`DistributionEstimateDump`w]]\nStatistics`Library`WeightedFunctionOfData[Statistics`DistributionEstimateDump`fun_, Statistics`DistributionEstimateDump`data_] := Statistics`DistributionEstimateDump`fun[Statistics`DistributionEstimateDump`data]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`WeightedFunctionOfData",
	"Statistics`SurvivalAnalysisTools`WeightedLikelihood":"ObjectType: Symbol\nUsage: Statistics`SurvivalAnalysisTools`WeightedLikelihood\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`SurvivalAnalysisTools`WeightedLikelihood[Statistics`SurvivalAnalysisTools`Dump`dist_, Statistics`SurvivalAnalysisTools`Dump`data_] := With[{Statistics`SurvivalAnalysisTools`Dump`res = Statistics`SurvivalAnalysisTools`Dump`weightedLikelihood[Statistics`SurvivalAnalysisTools`Dump`data, Statistics`SurvivalAnalysisTools`Dump`dist, Likelihood]}, Statistics`SurvivalAnalysisTools`Dump`res \/; Statistics`SurvivalAnalysisTools`Dump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`SurvivalAnalysisTools`WeightedLikelihood",
	"Statistics`SurvivalAnalysisTools`WeightedLogLikelihood":"ObjectType: Symbol\nUsage: Statistics`SurvivalAnalysisTools`WeightedLogLikelihood\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`SurvivalAnalysisTools`WeightedLogLikelihood[Statistics`SurvivalAnalysisTools`Dump`dist_, Statistics`SurvivalAnalysisTools`Dump`data_] := With[{Statistics`SurvivalAnalysisTools`Dump`res = Statistics`SurvivalAnalysisTools`Dump`weightedLikelihood[Statistics`SurvivalAnalysisTools`Dump`data, Statistics`SurvivalAnalysisTools`Dump`dist, LogLikelihood]}, Statistics`SurvivalAnalysisTools`Dump`res \/; Statistics`SurvivalAnalysisTools`Dump`res =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`SurvivalAnalysisTools`WeightedLogLikelihood",
	"Statistics`Library`WeightedMeanOfFunction":"ObjectType: Symbol\nUsage: Statistics`Library`WeightedMeanOfFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`WeightedMeanOfFunction[Statistics`DistributionEstimateDump`fun_, Statistics`DistributionEstimateDump`data_WeightedData] := (#1 . Statistics`DistributionEstimateDump`fun[Statistics`DistributionEstimateDump`data[\"InputData\"]]\/Tr[#1] & )[Statistics`DistributionEstimateDump`data[\"Weights\"]]\nStatistics`Library`WeightedMeanOfFunction[Statistics`DistributionEstimateDump`fun_, Statistics`DistributionEstimateDump`data_] := Mean[Statistics`DistributionEstimateDump`fun[Statistics`DistributionEstimateDump`data]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`WeightedMeanOfFunction",
	"Statistics`Library`WeightedMedian":"ObjectType: Symbol\nUsage: Statistics`Library`WeightedMedian\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`WeightedMedian",
	"SurfaceGraphics`Methods`WeightedNormal":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`WeightedNormal\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`WeightedNormal",
	"Statistics`Library`WeightedTotalOfFunction":"ObjectType: Symbol\nUsage: Statistics`Library`WeightedTotalOfFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Statistics`Library`WeightedTotalOfFunction[Statistics`DistributionEstimateDump`fun_, Statistics`DistributionEstimateDump`data_WeightedData] := (#1 . Statistics`DistributionEstimateDump`fun[Statistics`DistributionEstimateDump`data[\"InputData\"]]\/Tr[#1] & )[Statistics`DistributionEstimateDump`data[\"Weights\"]]\nStatistics`Library`WeightedTotalOfFunction[Statistics`DistributionEstimateDump`fun_, Statistics`DistributionEstimateDump`data_] := Total[Statistics`DistributionEstimateDump`fun[Statistics`DistributionEstimateDump`data]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Statistics`Library`WeightedTotalOfFunction",
	"GeometricFunctions`Weights":"ObjectType: Symbol\nUsage: GeometricFunctions`Weights\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeometricFunctions`Weights",
	"GraphComputation`WeightValues":"ObjectType: Symbol\nUsage: GraphComputation`WeightValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`WeightValues",
	"GraphComputation`WeightVector":"ObjectType: Symbol\nUsage: GraphComputation`WeightVector\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GraphComputation`WeightVector",
	"RandomProcesses`Library`WienerProcessCovarianceMatrix":"ObjectType: Symbol\nUsage: RandomProcesses`Library`WienerProcessCovarianceMatrix\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: RandomProcesses`Library`WienerProcessCovarianceMatrix[(RandomProcesses`WienerProcessDump`tvec_)?VectorQ] := Block[{RandomProcesses`WienerProcessDump`ord, RandomProcesses`WienerProcessDump`len}, If[VectorQ[RandomProcesses`WienerProcessDump`tvec, Internal`RealValuedNumberQ], Table[Min[RandomProcesses`WienerProcessDump`i, RandomProcesses`WienerProcessDump`j], {RandomProcesses`WienerProcessDump`i, RandomProcesses`WienerProcessDump`tvec}, {RandomProcesses`WienerProcessDump`j, RandomProcesses`WienerProcessDump`tvec}], RandomProcesses`WienerProcessDump`len = Length[RandomProcesses`WienerProcessDump`tvec]; RandomProcesses`WienerProcessDump`ord = Nest[Ordering, Flatten[(Outer[Min, #1, #1] & )[Range[RandomProcesses`WienerProcessDump`len]]], 2]; Partition[Array[ConstantArray[RandomProcesses`WienerProcessDump`tvec[[#1]], 2*(RandomProcesses`WienerProcessDump`len - #1) + 1] & , RandomProcesses`WienerProcessDump`len, 1, Join][[RandomProcesses`WienerProcessDump`ord]], RandomProcesses`WienerProcessDump`len]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RandomProcesses`Library`WienerProcessCovarianceMatrix",
	"System`Private`WillNotEvaluateQ":"ObjectType: Symbol\nUsage: System`Private`WillNotEvaluateQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`WillNotEvaluateQ",
	"System`Private`WillNotEvaluateWhenAppliedQ":"ObjectType: Symbol\nUsage: System`Private`WillNotEvaluateWhenAppliedQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAllComplete}\nFullName: System`Private`WillNotEvaluateWhenAppliedQ",
	"Reduce`WindingNumber":"ObjectType: Symbol\nUsage: Reduce`WindingNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`WindingNumber",
	"Region`Mesh`WindingNumber":"ObjectType: Symbol\nUsage: Region`Mesh`WindingNumber\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`Mesh`WindingNumber",
	"Signal`WindowFilter2D":"ObjectType: Symbol\nUsage: Signal`WindowFilter2D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Signal`WindowFilter2D[(Signal`FilterDesignDump`L_Integer)?Positive, Signal`FilterDesignDump`fs_List, Signal`FilterDesignDump`vs_List] := (Message[Signal`WindowFilter2D::order]; $Failed) \/; Signal`FilterDesignDump`fs != Sort[Signal`FilterDesignDump`fs, Less]\nSignal`WindowFilter2D[(Signal`FilterDesignDump`L_Integer)?Positive, Signal`FilterDesignDump`fs_List, Signal`FilterDesignDump`vs_List] := Module[{Signal`FilterDesignDump`i, Signal`FilterDesignDump`j, Signal`FilterDesignDump`tmp, Signal`FilterDesignDump`h, Signal`FilterDesignDump`hfree, Signal`FilterDesignDump`z}, If[Length[Signal`FilterDesignDump`fs] != Length[Signal`FilterDesignDump`vs] + 1, Message[Signal`WindowFilter2D::length, Signal`FilterDesignDump`fs, Signal`FilterDesignDump`vs]; Return[$Failed]]; Signal`FilterDesignDump`tmp = Select[Thread[{Partition[Signal`FilterDesignDump`fs, 2, 1], Signal`FilterDesignDump`vs}], N[#1[[2]]] != N[0] & ]; Signal`FilterDesignDump`h = Plus @@ (Signal`FilterDesignDump`H[#1[[1,2]]] - Signal`FilterDesignDump`H[#1[[1,1]]] & ) \/@ Signal`FilterDesignDump`tmp; Signal`FilterDesignDump`hfree = DeleteCases[Signal`FilterDesignDump`h, Signal`FilterDesignDump`iKroneckerDelta[_]]; Signal`FilterDesignDump`z = If[FreeQ[Signal`FilterDesignDump`h, Signal`FilterDesignDump`iKroneckerDelta[_]], Asymptotics`ClassicLimit[Signal`FilterDesignDump`h, Signal`FilterDesignDump`n -> 0], Asymptotics`ClassicLimit[Signal`FilterDesignDump`hfree, Signal`FilterDesignDump`n -> 0] + 1]; Signal`FilterDesignDump`tmp = Signal`FilterDesignDump`hfree \/. Signal`FilterDesignDump`n -> Sqrt[Signal`FilterDesignDump`i^2 + Signal`FilterDesignDump`j^2]; Table[If[Signal`FilterDesignDump`i == 0 && Signal`FilterDesignDump`j == 0, Signal`FilterDesignDump`z, Signal`FilterDesignDump`tmp], {Signal`FilterDesignDump`i, -((Signal`FilterDesignDump`L - 1)\/2), (Signal`FilterDesignDump`L - 1)\/2}, {Signal`FilterDesignDump`j, -((Signal`FilterDesignDump`L - 1)\/2), (Signal`FilterDesignDump`L - 1)\/2}]] \/; Signal`FilterDesignDump`fs == Sort[Signal`FilterDesignDump`fs, Less]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`WindowFilter2D",
	"Signal`WindowFunction":"ObjectType: Symbol\nUsage: Signal`WindowFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Signal`WindowFunction[Signal`WindowsDump`args___] := Block[{Signal`WindowsDump`a, Signal`WindowsDump`res}, Signal`WindowsDump`a = System`Private`Arguments[Signal`WindowFunction[Signal`WindowsDump`args], 1]; Signal`WindowsDump`res \/; Signal`WindowsDump`a =!= {} && (Signal`WindowsDump`res = Signal`WindowsDump`iWindowFunction[Signal`WindowsDump`args]) =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Signal`WindowFunction",
	"ProcessLink`Private`WindowsQ":"None",
	"Region`Mesh`WingedEdgeGraph":"ObjectType: Symbol\nUsage: Region`Mesh`WingedEdgeGraph\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Mesh`WingedEdgeGraph[Region`WingedEdgeGraphDump`expr__] := Block[{Region`WingedEdgeGraphDump`res}, Region`WingedEdgeGraphDump`res = Region`WingedEdgeGraphDump`dWingedEdgeGraph[Region`WingedEdgeGraphDump`expr]; Region`WingedEdgeGraphDump`res \/; Region`WingedEdgeGraphDump`res =!= $Failed]\nRegion`Mesh`WingedEdgeGraph[Region`WingedEdgeGraphDump`expr___] := (Region`WingedEdgeGraphDump`mWingedEdgeGraph[Region`WingedEdgeGraphDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AnnotationRules -> Inherited, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, EdgeLabels -> None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, PerformanceGoal -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> Automatic}\nAttributes: {}\nFullName: Region`Mesh`WingedEdgeGraph",
	"GIS`WinkelTripelInverseFunction":"ObjectType: Symbol\nUsage: GIS`WinkelTripelInverseFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`WinkelTripelInverseFunction",
	"Internal`WithGroupTheoryOptions":"ObjectType: Symbol\nUsage: Internal`WithGroupTheoryOptions\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`WithGroupTheoryOptions[GroupTheory`PermutationGroups`Private`options_, GroupTheory`PermutationGroups`Private`expr_] := Module[{GroupTheory`PermutationGroups`Private`oldgto, GroupTheory`PermutationGroups`Private`newgto}, GroupTheory`PermutationGroups`Private`oldgto = SystemOptions[\"GroupTheoryOptions\"]; GroupTheory`PermutationGroups`Private`newgto = GroupTheory`PermutationGroups`Private`ParseGroupTheoryOptions[GroupTheory`PermutationGroups`Private`options]; Internal`WithLocalSettings[SetSystemOptions[GroupTheory`PermutationGroups`Private`newgto], GroupTheory`PermutationGroups`Private`expr, SetSystemOptions[GroupTheory`PermutationGroups`Private`oldgto]] \/; GroupTheory`PermutationGroups`Private`newgto =!= $Failed]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: Internal`WithGroupTheoryOptions",
	"GeoGraphics`WithinGeoHemisphere":"ObjectType: Symbol\nUsage: GeoGraphics`WithinGeoHemisphere\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeoGraphics`WithinGeoHemisphere[System`GeoEvaluateDump`loc_, System`GeoEvaluateDump`points_] := GeoGraphics`WithinGeoHemisphere[System`GeoEvaluateDump`loc, System`GeoEvaluateDump`points, 0]\nGeoGraphics`WithinGeoHemisphere[System`GeoEvaluateDump`loc_, Polygon[System`GeoEvaluateDump`points_, ___], System`GeoEvaluateDump`twilightdeg_] := GeoGraphics`WithinGeoHemisphere[System`GeoEvaluateDump`loc, System`GeoEvaluateDump`points, System`GeoEvaluateDump`twilightdeg]\nGeoGraphics`WithinGeoHemisphere[GeoHemisphere[System`GeoEvaluateDump`loc_], System`GeoEvaluateDump`points_, System`GeoEvaluateDump`twilightdeg_] := GeoGraphics`WithinGeoHemisphere[System`GeoEvaluateDump`loc, System`GeoEvaluateDump`points, System`GeoEvaluateDump`twilightdeg]\nGeoGraphics`WithinGeoHemisphere[DayHemisphere[System`GeoEvaluateDump`date_:\"Now\"], System`GeoEvaluateDump`points_, System`GeoEvaluateDump`twilightdeg_] := GeoGraphics`WithinGeoHemisphere[GIS`AstroGeoPosition[\"GeoVisibilityCenter\", \"Sun\", System`GeoEvaluateDump`date \/. \"Now\" :> Now], System`GeoEvaluateDump`points, System`GeoEvaluateDump`twilightdeg]\nGeoGraphics`WithinGeoHemisphere[NightHemisphere[System`GeoEvaluateDump`date_:\"Now\"], System`GeoEvaluateDump`points_, System`GeoEvaluateDump`twilightdeg_] := GeoGraphics`WithinGeoHemisphere[GeoAntipode[GIS`AstroGeoPosition[\"GeoVisibilityCenter\", \"Sun\", System`GeoEvaluateDump`date \/. \"Now\" :> Now]], System`GeoEvaluateDump`points, System`GeoEvaluateDump`twilightdeg]\nGeoGraphics`WithinGeoHemisphere[System`GeoEvaluateDump`loc_, System`GeoEvaluateDump`points_, System`GeoEvaluateDump`twilightdeg_] := With[{System`GeoEvaluateDump`pos = GeoPosition[System`GeoEvaluateDump`loc]}, If[ !GIS`GeoLocationQ[System`GeoEvaluateDump`pos, GeoPosition, First], Return[$Failed]]; Module[{System`GeoEvaluateDump`xyzloc, System`GeoEvaluateDump`xyzpoints, System`GeoEvaluateDump`angles, System`GeoEvaluateDump`twilightrad}, System`GeoEvaluateDump`xyzloc = Normalize[First[GeoPositionXYZ[System`GeoEvaluateDump`pos]]]; System`GeoEvaluateDump`xyzpoints = System`GeoEvaluateDump`normalvector \/@ (GIS`GetLatLon[GIS`GeoCoordinateFlatten[GeoPosition[System`GeoEvaluateDump`points]]]*Degree); If[ !MatrixQ[System`GeoEvaluateDump`xyzpoints, NumericQ], Return[$Failed]]; System`GeoEvaluateDump`angles = ArcCos[System`GeoEvaluateDump`xyzpoints . System`GeoEvaluateDump`xyzloc]; System`GeoEvaluateDump`twilightrad = Pi\/2 - GIS`ToRadians[System`GeoEvaluateDump`twilightdeg]; If[System`GeoEvaluateDump`twilightrad == $Failed, Return[$Failed]]; System`GeoEvaluateDump`tests = Thread[System`GeoEvaluateDump`angles <= System`GeoEvaluateDump`twilightrad]; Which[AllTrue[System`GeoEvaluateDump`tests, TrueQ], True, NoneTrue[System`GeoEvaluateDump`tests, TrueQ], False, True, Undefined]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GeoGraphics`WithinGeoHemisphere",
	"LocalObjects`WithLocalBundleDirectory":"ObjectType: Symbol\nUsage: LocalObjects`WithLocalBundleDirectory\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: LocalObjects`WithLocalBundleDirectory[LocalObjects`LocalObject`Dump`obj_LocalObject, LocalObjects`LocalObject`Dump`code_] := With[{LocalObjects`LocalObject`Dump`dir = LocalObjects`BundleDirectoryName[LocalObjects`LocalObject`Dump`obj]}, If[FileType[LocalObjects`LocalObject`Dump`dir] === File, DeleteFile[LocalObjects`LocalObject`Dump`dir]]; If[FileType[LocalObjects`LocalObject`Dump`dir] =!= Directory, CreateDirectory[LocalObjects`LocalObject`Dump`dir]; If[FileType[LocalObjects`LocalObject`Dump`dir] =!= Directory, Return[$Failed]], Null]; With[{LocalObjects`LocalObject`Dump`odir = Directory[]}, Internal`WithLocalSettings[SetDirectory[LocalObjects`LocalObject`Dump`dir], LocalObjects`LocalObject`Dump`code, If[Length[DirectoryStack[]] > 0, ResetDirectory[]]; If[Directory[] =!= LocalObjects`LocalObject`Dump`odir, If[Length[DirectoryStack[]] > 0, ResetDirectory[]]; SetDirectory[LocalObjects`LocalObject`Dump`odir]]; ]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldRest}\nFullName: LocalObjects`WithLocalBundleDirectory",
	"Internal`WithLocalSettings":"ObjectType: Symbol\nUsage: Internal`WithLocalSettings\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Internal`WithLocalSettings",
	"StochasticCalculus`WithMemoization":"ObjectType: Symbol\nUsage: StochasticCalculus`WithMemoization\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: StochasticCalculus`WithMemoization[RandomProcesses`ItoProcessDump`body_] := Internal`InheritedBlock[{RandomProcesses`ItoProcessDump`JacobianVec, RandomProcesses`ItoProcessDump`HessianMat}, RandomProcesses`ItoProcessDump`EnableDownValueMemoization[RandomProcesses`ItoProcessDump`JacobianVec]; RandomProcesses`ItoProcessDump`EnableDownValueMemoization[RandomProcesses`ItoProcessDump`HessianMat]; RandomProcesses`ItoProcessDump`body]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: StochasticCalculus`WithMemoization",
	"GeneralUtilities`WithMessageHandler":"ObjectType: Symbol\nUsage: WithMessageHandler[body, f] evaluates f[failure] whenever a message occurs during the evaluation of body, where failure is a Failure[…] object that represents the message.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GeneralUtilities`WithMessageHandler[GeneralUtilities`Failure`PackagePrivate`body_, GeneralUtilities`Failure`PackagePrivate`f_] := Quiet[With[{GeneralUtilities`Failure`PackagePrivate`id = GeneralUtilities`MessageStackID[]}, Internal`HandlerBlock[{\"Message\", GeneralUtilities`Failure`PackagePrivate`MessageHandler[GeneralUtilities`Failure`PackagePrivate`f, GeneralUtilities`Failure`PackagePrivate`id]}, GeneralUtilities`Failure`PackagePrivate`body]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldFirst}\nFullName: GeneralUtilities`WithMessageHandler",
	"Internal`WithTimestampsPreserved":"ObjectType: Symbol\nUsage: Internal`WithTimestampsPreserved\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Internal`WithTimestampsPreserved",
	"NeuralNetworks`WLNetExport":"ObjectType: Symbol\nUsage: NeuralNetworks`WLNetExport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NeuralNetworks`WLNetExport[NeuralNetworks`Private`WLNetFormat`filename_String, ((NeuralNetworks`Private`WLNetFormat`head_Symbol)[NeuralNetworks`Private`WLNetFormat`net_Association, NeuralNetworks`Private`WLNetFormat`meta_Association])?NeuralNetworks`ValidNetQ, NeuralNetworks`Private`WLNetFormat`opts:OptionsPattern[]] := Catch[Block[{NeuralNetworks`Private`WLNetFormat`internalVersion, NeuralNetworks`Private`WLNetFormat`meta$ = NeuralNetworks`Private`WLNetFormat`meta, NeuralNetworks`Private`WLNetFormat`$tensors, NeuralNetworks`Private`WLNetFormat`result, NeuralNetworks`Private`WLNetFormat`netstring, NeuralNetworks`Private`WLNetFormat`metastring}, {NeuralNetworks`Private`WLNetFormat`internalVersion} = NeuralNetworks`Private`WLNetFormat`GetIOOption[Export, NeuralNetworks`Private`WLNetFormat`$WLNetExportOptions, {\"InternalVersion\"}, {NeuralNetworks`Private`WLNetFormat`opts}]; If[NeuralNetworks`Private`WLNetFormat`internalVersion =!= Automatic, If[ !NeuralNetworks`Private`ValidVersionQ[NeuralNetworks`Private`WLNetFormat`internalVersion], Return[$Failed, Catch]]; NeuralNetworks`Private`WLNetFormat`meta$[\"Version\"] = NeuralNetworks`Private`WLNetFormat`internalVersion; , NeuralNetworks`Private`WLNetFormat`internalVersion = NeuralNetworks`Private`$NeuralNetworksVersionNumber; ]; NeuralNetworks`Private`WLNetFormat`$tensors = Internal`Bag[]; NeuralNetworks`Private`WLNetFormat`result = NeuralNetworks`Private`PrepareForExport[NeuralNetworks`Private`WLNetFormat`net]; NeuralNetworks`Private`WLNetFormat`$tensors = Internal`BagPart[NeuralNetworks`Private`WLNetFormat`$tensors, All]; Block[{$ContextPath = {\"System`\", \"NeuralNetworks`\"}, $Context = \"Dummy`\"}, NeuralNetworks`Private`WLNetFormat`netstring = NeuralNetworks`Private`WLNetFormat`IOContextBlock[Compress[NeuralNetworks`Private`WLNetFormat`result]]; NeuralNetworks`Private`WLNetFormat`metastring = NeuralNetworks`Private`WLNetFormat`IOContextBlock[Compress[NeuralNetworks`Private`WLNetFormat`meta$]]; ]; GeneralUtilities`ExportStructuredHDF5[NeuralNetworks`Private`WLNetFormat`filename, Association[\"Version\" -> NeuralNetworks`Private`WLNetFormat`internalVersion, \"Unstable\" -> Boole[NeuralNetworks`Private`$NeuralNetworkFormatIsUnstable], \"Network\" -> NeuralNetworks`Private`WLNetFormat`netstring, If[NeuralNetworks`Private`WLNetFormat`$tensors === {}, {}, \"Arrays\" -> NeuralNetworks`Private`WLNetFormat`$tensors], \"Metadata\" -> NeuralNetworks`Private`WLNetFormat`metastring]]; NeuralNetworks`Private`WLNetFormat`filename], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[Export]]\nNeuralNetworks`WLNetExport[NeuralNetworks`Private`WLNetFormat`a_, NeuralNetworks`Private`WLNetFormat`b_, ___] := (If[ !NeuralNetworks`ValidNetQ[NeuralNetworks`Private`WLNetFormat`b] &&  !MatchQ[NeuralNetworks`Private`WLNetFormat`b, _RuleDelayed], Message[Export::invnet2, HoldForm[Export][NeuralNetworks`Private`WLNetFormat`a, Shallow[NeuralNetworks`Private`WLNetFormat`b]]], Message[Export::nonetexpelem]; ]; $Failed)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NeuralNetworks`WLNetExport",
	"NeuralNetworks`WLNetImport":"ObjectType: Symbol\nUsage: NeuralNetworks`WLNetImport\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: NeuralNetworks`WLNetImport[NeuralNetworks`Private`WLNetFormat`file_String, NeuralNetworks`Private`WLNetFormat`retType_:\"Net\", NeuralNetworks`Private`WLNetFormat`opts:OptionsPattern[{\"InternalVersion\" -> Automatic}]] := Catch[Block[{NeuralNetworks`Private`WLNetFormat`internalVersion, NeuralNetworks`Private`WLNetFormat`arrayForm, NeuralNetworks`Private`WLNetFormat`arrayList, NeuralNetworks`Private`WLNetFormat`arrayAssoc, NeuralNetworks`Private`WLNetFormat`fileSize, NeuralNetworks`Private`WLNetFormat`result, NeuralNetworks`Private`WLNetFormat`network, NeuralNetworks`Private`WLNetFormat`arrays, NeuralNetworks`Private`WLNetFormat`version, NeuralNetworks`Private`WLNetFormat`metadata, NeuralNetworks`Private`WLNetFormat`arrpos, NeuralNetworks`Private`WLNetFormat`specs, NeuralNetworks`Private`$AssumedCoderVersion}, {NeuralNetworks`Private`WLNetFormat`internalVersion} = NeuralNetworks`Private`WLNetFormat`GetIOOption[Import, NeuralNetworks`Private`WLNetFormat`$WLNetImportOptions, {\"InternalVersion\"}, {NeuralNetworks`Private`WLNetFormat`opts}]; Switch[NeuralNetworks`Private`WLNetFormat`retType, \"Net\", NeuralNetworks`Private`WLNetFormat`arrayForm = \"RawArrays\", \"UninitializedNet\", NeuralNetworks`Private`WLNetFormat`arrayForm = \"Placeholders\", \"ArrayList\", NeuralNetworks`Private`WLNetFormat`arrayList = True; NeuralNetworks`Private`WLNetFormat`arrayForm = \"RawArrays\", \"ArrayAssociation\", NeuralNetworks`Private`WLNetFormat`arrayAssoc = True; NeuralNetworks`Private`WLNetFormat`arrayForm = \"RawArrays\", \"WLVersion\" | \"InternalVersion\" | \"InternalMetadata\", NeuralNetworks`Private`WLNetFormat`arrayForm = \"Placeholders\", _, GeneralUtilities`ThrowFailure[\"wlbadprop\", NeuralNetworks`Private`WLNetFormat`retType]]; If[NeuralNetworks`Private`WLNetFormat`retType === \"Net\", NeuralNetworks`Private`WLNetFormat`fileSize = Quiet[Check[FileByteCount[NeuralNetworks`Private`WLNetFormat`file], 0]]; Which[NeuralNetworks`Private`WLNetFormat`fileSize > NeuralNetworks`Private`$RealisticSystemMemory, GeneralUtilities`ThrowFailure[\"wlnetimpmem\", NeuralNetworks`Private`WLNetFormat`file, GeneralUtilities`PositiveSIString[NeuralNetworks`Private`WLNetFormat`fileSize]], NeuralNetworks`Private`WLNetFormat`fileSize > NeuralNetworks`Private`$RealisticSystemMemory\/4, ClearSystemCache[]; NeuralNetworks`ClearCache[], NeuralNetworks`Private`WLNetFormat`fileSize > NeuralNetworks`Private`$RealisticSystemMemory\/8, NeuralNetworks`ClearCache[], True, Null]; ]; NeuralNetworks`Private`WLNetFormat`result = Quiet[Catch[GeneralUtilities`ImportStructuredHDF5[NeuralNetworks`Private`WLNetFormat`file, \"ArrayForm\" -> NeuralNetworks`Private`WLNetFormat`arrayForm], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureHandler[NeuralNetworks`WLNetImport]]]; If[FailureQ[NeuralNetworks`Private`WLNetFormat`result], NeuralNetworks`Private`WLNetFormat`corrupt[]]; If[ !MatchQ[NeuralNetworks`Private`WLNetFormat`result, KeyValuePattern[{\"Version\" -> _, \"Network\" -> _}]], NeuralNetworks`Private`WLNetFormat`corrupt[]]; {NeuralNetworks`Private`WLNetFormat`network, NeuralNetworks`Private`WLNetFormat`arrays, NeuralNetworks`Private`WLNetFormat`version} = Lookup[NeuralNetworks`Private`WLNetFormat`result, {\"Network\", \"Arrays\", \"Version\"}, {}]; If[NeuralNetworks`Private`WLNetFormat`retType === \"InternalVersion\", Return[NeuralNetworks`Private`WLNetFormat`version]]; If[NeuralNetworks`Private`WLNetFormat`retType === \"WLVersion\", Return[NeuralNetworks`Private`WLNetFormat`version]]; If[NeuralNetworks`Private`WLNetFormat`arrayList, Return[NeuralNetworks`Private`WLNetFormat`arrays]]; If[KeyExistsQ[NeuralNetworks`Private`WLNetFormat`result, \"Metadata\"], NeuralNetworks`Private`WLNetFormat`metadata = ReleaseHold[NeuralNetworks`Private`WLNetFormat`toExpression[NeuralNetworks`Private`WLNetFormat`result[\"Metadata\"]]]; If[ !AssociationQ[NeuralNetworks`Private`WLNetFormat`metadata], NeuralNetworks`Private`WLNetFormat`corrupt[]]; , NeuralNetworks`Private`WLNetFormat`metadata = Association[\"Version\" -> NeuralNetworks`Private`WLNetFormat`version]; ]; If[NeuralNetworks`Private`WLNetFormat`internalVersion =!= Automatic, If[ !NeuralNetworks`Private`ValidVersionQ[NeuralNetworks`Private`WLNetFormat`internalVersion], Return[$Failed, Catch]]; NeuralNetworks`Private`WLNetFormat`metadata[\"Version\"] = NeuralNetworks`Private`WLNetFormat`internalVersion]; If[NeuralNetworks`Private`WLNetFormat`retType === \"InternalMetadata\", Return[NeuralNetworks`Private`WLNetFormat`metadata]]; NeuralNetworks`Private`WLNetFormat`network = NeuralNetworks`Private`WLNetFormat`toExpression[NeuralNetworks`Private`WLNetFormat`network]; If[FailureQ[NeuralNetworks`Private`WLNetFormat`network], Return[$Failed, Catch]]; If[NeuralNetworks`Private`WLNetFormat`arrayAssoc, NeuralNetworks`Private`WLNetFormat`arrpos = Position[ReleaseHold[NeuralNetworks`Private`WLNetFormat`network], _NeuralNetworks`ExportedArray]; NeuralNetworks`Private`WLNetFormat`specs = NeuralNetworks`FromNetPath[NeuralNetworks`Private`WLNetFormat`arrpos \/. Key[NeuralNetworks`Private`WLNetFormat`k_] :> NeuralNetworks`Private`WLNetFormat`k]; Return[AssociationThread[NeuralNetworks`Private`WLNetFormat`specs, NeuralNetworks`Private`WLNetFormat`arrays]]]; NeuralNetworks`Private`$AssumedCoderVersion = NeuralNetworks`Private`WLNetFormat`version; If[NeuralNetworks`Private`WLNetFormat`arrayForm === \"Placeholders\", NeuralNetworks`Private`WLNetFormat`arrays = NeuralNetworks`Private`WLNetFormat`arrays \/. GeneralUtilities`H5DatasetPlaceholder -> NeuralNetworks`TensorT]; NeuralNetworks`Private`WLNetFormat`network = NeuralNetworks`Private`WLNetFormat`network \/. NeuralNetworks`ExportedArray[NeuralNetworks`Private`WLNetFormat`id_] :> RuleCondition[NeuralNetworks`Private`WLNetFormat`arrays[[NeuralNetworks`Private`WLNetFormat`id]]]; NeuralNetworks`Private`WLNetFormat`network = ReleaseHold[NeuralNetworks`Private`WLNetFormat`network]; NeuralNetworks`Private`ReconstructNet[NeuralNetworks`Private`WLNetFormat`network, NeuralNetworks`Private`WLNetFormat`metadata, \"import\"]], GeneralUtilities`PackageScope`CatchFailureTag, GeneralUtilities`PackageScope`CatchFailureAsMessageHandler[Import]]\nNeuralNetworks`WLNetImport[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NeuralNetworks`WLNetImport",
	"GIS`WMSWMTSDataset":"ObjectType: Symbol\nUsage: GIS`WMSWMTSDataset[url, protocol] retrieves the XML configuration file from the given url, usually \ncontaining the XML configuration file of a map server and treats\nthe XML information tree using GIS`XMLDataset. \nThe variable \"protocol\" currently takes the values \"WMS\" and \"WMTS\" \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`WMSWMTSDataset[GIS`GeoServerDataDump`url_, GIS`GeoServerDataDump`protocol_String] := Module[{GIS`GeoServerDataDump`urlwms, GIS`GeoServerDataDump`caps, GIS`GeoServerDataDump`config}, GIS`GeoServerDataDump`urlwms = URLBuild[GIS`GeoServerDataDump`url, {\"SERVICE\" -> GIS`GeoServerDataDump`protocol, \"REQUEST\" -> \"GETCAPABILITIES\"}]; GIS`GeoServerDataDump`caps = Import[URLDownload[GIS`GeoServerDataDump`urlwms], \"XML\", \"ReadDTD\" -> False]; If[GIS`GeoServerDataDump`caps === $Failed, Throw[$Failed, \"GeoServerDataError\"]]; GIS`GeoServerDataDump`config = GIS`GeoServerDataDump`caps[[2]]; GIS`GeoServerDataDump`isParsed[GIS`GeoServerDataDump`url] = True; GIS`XMLDataset[GIS`GeoServerDataDump`config]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`WMSWMTSDataset",
	"NumberTheory`WNTLPrimeQ":"ObjectType: Symbol\nUsage: NumberTheory`WNTLPrimeQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NumberTheory`WNTLPrimeQ",
	"AlphaIntegration`WolframAlphaStepByStep":"ObjectType: Symbol\nUsage: AlphaIntegration`WolframAlphaStepByStep\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: AlphaIntegration`WolframAlphaStepByStep[WolframAlphaClient`Private`query_String, WolframAlphaClient`Private`opts:OptionsPattern[]] := Block[{WolframAlphaClient`Private`xml}, WolframAlphaClient`Private`xml = WolframAlpha[WolframAlphaClient`Private`query, \"WolframAlphaNotebookParseXML\"]; AlphaIntegration`WolframAlphaStepByStep[WolframAlphaClient`Private`query, WolframAlphaClient`Private`xml, WolframAlphaClient`Private`opts]] \/; WolframAlphaClient`Private`$WolframAlphaNotebookWANParse\nAlphaIntegration`WolframAlphaStepByStep[WolframAlphaClient`Private`query_String, WolframAlphaClient`Private`xmlobj_, OptionsPattern[]] := Block[{WolframAlphaClient`Private`xml, WolframAlphaClient`Private`parse, WolframAlphaClient`Private`hasSBSQ, WolframAlphaClient`Private`menuviewQ}, WolframAlphaClient`Private`xml = WolframAlphaClient`Private`xmlobj; If[WolframAlphaClient`Private`noParseQ[WolframAlphaClient`Private`xml], Return[{\"Result\" -> $Failed, \"ReturnType\" -> \"NoParse\"}]]; If[WolframAlphaClient`Private`reinterpretedParseQ[WolframAlphaClient`Private`xml], Return[{\"Result\" -> $Failed, \"ReturnType\" -> \"Reinterpreted\"}]]; WolframAlphaClient`Private`parse = FirstCase[WolframAlphaClient`Private`xml, XMLElement[\"mathematicaparse\", _, {WolframAlphaClient`Private`a_String}] :> WolframAlphaClient`Private`mparseMakeExpression[WolframAlphaClient`Private`a], None, Infinity]; WolframAlphaClient`Private`xml = WolframAlphaClient`Private`xml \/. XMLElement[\"pod\", _, WolframAlphaClient`Private`sp_] \/;  !FreeQ[WolframAlphaClient`Private`sp, \"\\\"step‐by‐step solution unavailable\\\"\"] -> Nothing; WolframAlphaClient`Private`hasSBSQ = Count[WolframAlphaClient`Private`xml, XMLElement[\"pod\", _, _], Infinity] > 0; If[WolframAlphaClient`Private`hasSBSQ, WolframAlphaClient`Private`xml = WolframAlphaClient`Private`reorderSBS[WolframAlphaClient`Private`xml]; ]; WolframAlphaClient`Private`menuviewQ = TrueQ[Replace[OptionValue[MenuView], Automatic -> WolframAlphaClient`Private`hasSBSQ, {0}]]; {\"Parse\" -> WolframAlphaClient`Private`parse, \"Result\" -> WolframAlphaClient`Private`formatAlphaSBS[WolframAlphaClient`Private`xml, WolframAlphaClient`Private`query, WolframAlphaClient`Private`menuviewQ], \"ReturnType\" -> If[WolframAlphaClient`Private`hasSBSQ, \"HasStepByStep\", \"NoStepByStep\"]}] \/; WolframAlphaClient`Private`$WolframAlphaNotebookWANParse\nAlphaIntegration`WolframAlphaStepByStep[WolframAlphaClient`Private`query_String, OptionsPattern[]] := Block[{WolframAlphaClient`Private`alphares, WolframAlphaClient`Private`states, WolframAlphaClient`Private`include, WolframAlphaClient`Private`hasSBSQ, WolframAlphaClient`Private`res, WolframAlphaClient`Private`menuviewQ}, WolframAlphaClient`Private`alphares = WolframAlpha[WolframAlphaClient`Private`query]; If[WolframAlphaClient`Private`noParseQ[WolframAlphaClient`Private`alphares], Return[{\"Result\" -> $Failed, \"ReturnType\" -> \"NoParse\"}]]; If[WolframAlphaClient`Private`reinterpretedParseQ[WolframAlphaClient`Private`alphares], Return[{\"Result\" -> $Failed, \"ReturnType\" -> \"Reinterpreted\"}]]; WolframAlphaClient`Private`states = Cases[WolframAlphaClient`Private`alphares, {___, \"input\" -> WolframAlphaClient`Private`in_String, \"stepbystep\" -> \"true\"} \/; StringStartsQ[WolframAlphaClient`Private`in, __~~\"__\"] :> WolframAlphaClient`Private`in, Infinity]; WolframAlphaClient`Private`include = StringSplit[WolframAlphaClient`Private`states, \"__\"][[All,1]]; {WolframAlphaClient`Private`include, WolframAlphaClient`Private`states} = WolframAlphaClient`Private`relevantSBS[WolframAlphaClient`Private`include, WolframAlphaClient`Private`states]; WolframAlphaClient`Private`hasSBSQ = Length[WolframAlphaClient`Private`include] > 0; WolframAlphaClient`Private`res = If[WolframAlphaClient`Private`hasSBSQ, WolframAlpha[WolframAlphaClient`Private`query, IncludePods -> WolframAlphaClient`Private`include, AppearanceElements -> {\"Pods\"}, PodStates -> WolframAlphaClient`Private`states], WolframAlphaClient`Private`alphares]; If[Count[WolframAlphaClient`Private`res, \"\\\"step‐by‐step solution unavailable\\\"\", Infinity] == Length[WolframAlphaClient`Private`states], WolframAlphaClient`Private`res = WolframAlphaClient`Private`alphares \/. XMLElement[\"state\", {___, \"stepbystep\" -> \"true\", ___}, {}] :> Sequence @@ {}; WolframAlphaClient`Private`hasSBSQ = False]; WolframAlphaClient`Private`menuviewQ = TrueQ[Replace[OptionValue[MenuView], Automatic -> WolframAlphaClient`Private`hasSBSQ, {0}]]; {\"Result\" -> WolframAlphaClient`Private`postProcessAlphaSBS[WolframAlphaClient`Private`res, WolframAlphaClient`Private`menuviewQ], \"ReturnType\" -> If[WolframAlphaClient`Private`hasSBSQ, \"HasStepByStep\", \"NoStepByStep\"]}]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {MenuView -> Automatic}\nAttributes: {}\nFullName: AlphaIntegration`WolframAlphaStepByStep",
	"CloudObject`Internal`WolframIDStatus":"ObjectType: Symbol\nUsage: CloudObject`Internal`WolframIDStatus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CloudObject`Internal`WolframIDStatus[] := CloudObject`Private`$WIDStatus\nCloudObject`Internal`WolframIDStatus[CloudObject`Private`server_String] := Replace[CloudObject`Private`$WIDStatus[CloudObject`Private`extractURLDomain[CloudObject`Private`server]], _Missing :> None]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: CloudObject`Internal`WolframIDStatus",
	"ResourceFunctionHelpers`WolframKnowledgebaseExplorer":"ObjectType: Symbol\nUsage: Produce a GUI for building data queries.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: ResourceFunctionHelpers`WolframKnowledgebaseExplorer[\"Domains\"] := ResourceFunctionHelpers`Private`getDomains[]\nResourceFunctionHelpers`WolframKnowledgebaseExplorer[ResourceFunctionHelpers`Private`domain:\"CalculusResult\" | \"CattleBreed\" | \"Chemical\" | \"Country\" | \"Element\" | \"Exoplanet\" | \"Financial\" | \"FoodType\" | \"GivenName\" | \"GoatBreed\" | \"HorseBreed\" | \"Isotope\" | \"PhysicalConstant\" | \"PigBreed\" | \"PigeonBreed\" | \"Planet\" | \"Pokemon\" | \"Polyhedron\" | \"PoultryBreed\" | \"SheepBreed\" | \"Surface\" | \"YogaPose\", ResourceFunctionHelpers`Private`rest___] := ResourceFunctionHelpers`WolframKnowledgebaseExplorerGUI[1, ResourceFunctionHelpers`Private`domain, ResourceFunctionHelpers`Private`rest]\nResourceFunctionHelpers`WolframKnowledgebaseExplorer[ResourceFunctionHelpers`Private`args___] := ResourceFunctionHelpers`WolframKnowledgebaseExplorerGUI[1, ResourceFunctionHelpers`Private`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`WolframKnowledgebaseExplorer",
	"ResourceFunctionHelpers`WolframKnowledgebaseGUI":"ObjectType: Symbol\nUsage: ResourceFunctionHelpers`WolframKnowledgebaseGUI\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: ResourceFunctionHelpers`WolframKnowledgebaseGUI",
	"WolframScript`Private`WolframScriptExecute":"ObjectType: Symbol\nUsage: WolframScript`Private`WolframScriptExecute\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: WolframScript`Private`WolframScriptExecute",
	"CloudObject`Internal`WolframUUIDStatus":"ObjectType: Symbol\nUsage: CloudObject`Internal`WolframUUIDStatus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: CloudObject`Internal`WolframUUIDStatus[] := CloudObject`Private`$WUUIDStatus\nCloudObject`Internal`WolframUUIDStatus[CloudObject`Private`server_String] := Replace[CloudObject`Private`$WUUIDStatus[CloudObject`Private`extractURLDomain[CloudObject`Private`server]], _Missing :> None]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: CloudObject`Internal`WolframUUIDStatus",
	"PacletManager`Paclet`Private`WolframVersion":"ObjectType: Symbol\nUsage: PacletManager`Paclet`Private`WolframVersion\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`Paclet`Private`WolframVersion",
	"GraphComputation`WordDataExtension":"ObjectType: Symbol\nUsage: GraphComputation`WordDataExtension\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GraphComputation`WordDataExtension[GraphComputation`GraphBuilderDump`name_, \"SynonymGraph\", GraphComputation`GraphBuilderDump`depth_:2, GraphComputation`GraphBuilderDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphBuilderDump`res}, GraphComputation`GraphBuilderDump`res = GraphComputation`GraphBuilderDump`wordDataExtension[GraphComputation`GraphBuilderDump`name, \"SynonymGraph\", GraphComputation`GraphBuilderDump`depth, GraphComputation`GraphBuilderDump`opts]; GraphComputation`GraphBuilderDump`res \/; GraphQ[GraphComputation`GraphBuilderDump`res]]\nGraphComputation`WordDataExtension[GraphComputation`GraphBuilderDump`name_, \"AntonymGraph\", GraphComputation`GraphBuilderDump`depth_:4, GraphComputation`GraphBuilderDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphBuilderDump`res}, GraphComputation`GraphBuilderDump`res = GraphComputation`GraphBuilderDump`wordDataExtension[GraphComputation`GraphBuilderDump`name, \"AntonymGraph\", GraphComputation`GraphBuilderDump`depth, GraphComputation`GraphBuilderDump`opts]; GraphComputation`GraphBuilderDump`res \/; GraphQ[GraphComputation`GraphBuilderDump`res]]\nGraphComputation`WordDataExtension[GraphComputation`GraphBuilderDump`name_, \"BroaderTermsGraph\", GraphComputation`GraphBuilderDump`depth_:2, GraphComputation`GraphBuilderDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphBuilderDump`res}, GraphComputation`GraphBuilderDump`res = GraphComputation`GraphBuilderDump`wordDataExtension[GraphComputation`GraphBuilderDump`name, \"BroaderTermsGraph\", GraphComputation`GraphBuilderDump`depth, GraphComputation`GraphBuilderDump`opts]; GraphComputation`GraphBuilderDump`res \/; GraphQ[GraphComputation`GraphBuilderDump`res]]\nGraphComputation`WordDataExtension[GraphComputation`GraphBuilderDump`name_, \"MorphologicalDerivativeGraph\", GraphComputation`GraphBuilderDump`depth_:2, GraphComputation`GraphBuilderDump`opts:OptionsPattern[]] := Block[{GraphComputation`GraphBuilderDump`res}, GraphComputation`GraphBuilderDump`res = GraphComputation`GraphBuilderDump`wordDataExtension[GraphComputation`GraphBuilderDump`name, \"MorphologicalDerivativeGraph\", GraphComputation`GraphBuilderDump`depth, GraphComputation`GraphBuilderDump`opts]; GraphComputation`GraphBuilderDump`res \/; GraphQ[GraphComputation`GraphBuilderDump`res]]\nGraphComputation`WordDataExtension[GraphComputation`GraphBuilderDump`expr___] := (GraphComputation`GraphBuilderDump`messageWordDataExtension[GraphComputation`GraphBuilderDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {AlignmentPoint -> Center, AnnotationRules -> {}, AspectRatio -> Automatic, Axes -> False, AxesLabel -> None, AxesOrigin -> Automatic, AxesStyle -> {}, Background -> None, BaselinePosition -> Automatic, BaseStyle -> {}, ContentSelectable -> Automatic, DirectedEdges -> Automatic, EdgeCapacity -> Automatic, EdgeCost -> Automatic, EdgeLabels -> None, EdgeLabelStyle -> Automatic, EdgeShapeFunction -> Automatic, EdgeStyle -> Automatic, EdgeWeight -> Automatic, Editable -> False, Epilog -> {}, FormatType -> TraditionalForm, Frame -> False, FrameLabel -> None, FrameStyle -> {}, FrameTicks -> None, FrameTicksStyle -> {}, GraphHighlight -> {}, GraphHighlightStyle -> Automatic, GraphLayout -> Automatic, GraphRoot -> Automatic, GraphStyle -> Automatic, GridLines -> None, GridLinesStyle -> {}, ImageMargins -> 0., ImagePadding -> All, ImageSize -> Automatic, LabelStyle -> {}, PerformanceGoal -> Automatic, PlotLabel -> None, PlotRange -> All, PlotRangeClipping -> False, PlotRangePadding -> Automatic, PlotRegion -> Automatic, PlotTheme -> Automatic, Prolog -> {}, Properties -> {}, RotateLabel -> True, Ticks -> Automatic, TicksStyle -> {}, VertexCapacity -> Automatic, VertexCoordinates -> Automatic, VertexLabels -> None, VertexLabelStyle -> Automatic, VertexShape -> Automatic, VertexShapeFunction -> Automatic, VertexSize -> Automatic, VertexStyle -> Automatic, VertexWeight -> Automatic}\nAttributes: {}\nFullName: GraphComputation`WordDataExtension",
	"GIS`WorldLonLatRangeByProjection":"ObjectType: Symbol\nUsage: GIS`WorldLonLatRangeByProjection[center, proj] returns a recommended {{lonmin, lonmax}, {latmin, latmax}} range for the whole world in the given projection. This is the range used by GeoGraphics with GeoRange -> \"World\" for such projection. The range differs from the expected {{-180, 180}, {-90, 90}} for projections that maps to an infinite region.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`WorldLonLatRangeByProjection[GIS`GeoMappingDump`center_, {GIS`GeoMappingDump`projection_String, GIS`GeoMappingDump`params___}] := GIS`WorldLonLatRangeByProjection[GIS`GeoMappingDump`center, GIS`GeoMappingDump`projection]\nGIS`WorldLonLatRangeByProjection[GeoPosition[GIS`GeoMappingDump`center_, ___], GIS`GeoMappingDump`projection_] := GIS`WorldLonLatRangeByProjection[Reverse[GIS`GeoMappingDump`center], GIS`GeoMappingDump`projection]\nGIS`WorldLonLatRangeByProjection[{GIS`GeoMappingDump`centerlon_, GIS`GeoMappingDump`centerlat_}, GIS`GeoMappingDump`projection_] := Switch[GIS`GeoMappingDump`projection, \"Mercator\", {GIS`GeoMappingDump`centerlon + {-180., 180.}, {-GIS`GeoMappingDump`$maxLatMercator, GIS`GeoMappingDump`$maxLatMercator}}, \"LambertConic\" | \"LambertConicConformal\" | \"LambertConicConformalNGS\" | \"LambertConicNearConformal\" | \"HerschelConicConformal\", {GIS`GeoMappingDump`centerlon + {-180., 180.}, {-75., 90.}}, \"Stereographic\", {GIS`GeoMappingDump`centerlon + {-160., 160.}, {-90., 90.}}, \"CraigRetroazimuthal\", {GIS`GeoMappingDump`centerlon + {-110, 110}, {-90, 90}}, \"Gnomonic\", {GIS`GeoMappingDump`centerlon + {-90., 90.}, Clip[GIS`GeoMappingDump`centerlat + {-89.999, 89.999}, {-90., 90.}]}, \"ConicCentrographic\", {GIS`GeoMappingDump`centerlon + {-180., 180.}, {-45, 90}}, \"ConicSatelliteTracking\", {GIS`GeoMappingDump`centerlon + {-180., 180.}, {-60, 80}}, \"Littrow\", {GIS`GeoMappingDump`centerlon + {-90., 90.}, {-75, 75}}, \"Airy\", {GIS`GeoMappingDump`centerlon + {-180, 180}, {-50, 90}}, \"ConicPerspective\", {GIS`GeoMappingDump`centerlon + {-180, 180}, {-60, 90}}, \"EquatorialStereographic\", {GIS`GeoMappingDump`centerlon + {-140, 140}, {-90, 90}}, \"MurdochII\", {GIS`GeoMappingDump`centerlon + {-180, 180}, {-60, 90}}, \"GinzburgII\", {GIS`GeoMappingDump`centerlon + {-180, 180}, {-60, 90}}, _, {GIS`GeoMappingDump`centerlon + {-180., 180.}, {-90., 90.}}]\nGIS`WorldLonLatRangeByProjection[_, GIS`GeoMappingDump`projection_] := GIS`WorldLonLatRangeByProjection[GeoPosition[{0, 0}], GIS`GeoMappingDump`projection]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`WorldLonLatRangeByProjection",
	"DataPaclets`WorldPolygonQ":"ObjectType: Symbol\nUsage: DataPaclets`WorldPolygonQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DataPaclets`WorldPolygonQ[All] := True\nDataPaclets`WorldPolygonQ[Entity[\"Planet\", \"Earth\"]] := True\nDataPaclets`WorldPolygonQ[Entity[\"Country\" | \"GeographicRegion\", \"World\"]] := True\nDataPaclets`WorldPolygonQ[Polygon[DataPaclets`CommonDump`p_]] := DataPaclets`WorldPolygonQ[DataPaclets`CommonDump`p]\nDataPaclets`WorldPolygonQ[_] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DataPaclets`WorldPolygonQ",
	"Internal`WouldBeNumericQ":"ObjectType: Symbol\nUsage: Internal`WouldBeNumericQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {HoldAll}\nFullName: Internal`WouldBeNumericQ",
	"BoxForm`Wrapper":"ObjectType: Symbol\nUsage: BoxForm`Wrapper\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: BoxForm`Wrapper",
	"DataPaclets`WrapperizePacletRequest":"ObjectType: Symbol\nUsage: DataPaclets`WrapperizePacletRequest\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: DataPaclets`WrapperizePacletRequest[DataPaclets`CommonDump`head_, DataPaclets`CommonDump`element_, DataPaclets`CommonDump`property__] := Which[TrueQ[\"UseDataWrappers\" \/. (\"DataOptions\" \/. SystemOptions[\"DataOptions\"])], DataPaclets`CommonDump`DispatchWrapper[DataPaclets`CommonDump`head, DataPaclets`CommonDump`element, DataPaclets`CommonDump`property], TrueQ[\"ReturnQuantities\" \/. (\"DataOptions\" \/. SystemOptions[\"DataOptions\"])], DataPaclets`CommonDump`unitifyPacletRequest[DataPaclets`CommonDump`head, DataPaclets`CommonDump`element, DataPaclets`CommonDump`property], True, If[MatchQ[DataPaclets`CommonDump`property, None | \"HandleGroupRequest\"], DataPaclets`CommonDump`head[DataPaclets`CommonDump`element], DataPaclets`CommonDump`head[DataPaclets`CommonDump`element, DataPaclets`CommonDump`property]]]\nDataPaclets`WrapperizePacletRequest[DataPaclets`CommonDump`head_, DataPaclets`CommonDump`args___] := DataPaclets`CommonDump`head[DataPaclets`CommonDump`args]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: DataPaclets`WrapperizePacletRequest",
	"Region`WrapperRegionQ":"ObjectType: Symbol\nUsage: Region`WrapperRegionQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`WrapperRegionQ",
	"Optimization`SolutionData`WrapStatus":"ObjectType: Symbol\nUsage: Optimization`SolutionData`WrapStatus\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Optimization`SolutionData`WrapStatus",
	"Developer`WriteExpressionJSONFile":"ObjectType: Symbol\nUsage: Developer`WriteExpressionJSONFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compact -> False, IssueMessagesAs -> Developer`WriteExpressionJSONFile, NullSymbols -> {}, PrecisionHandling -> True}\nAttributes: {}\nFullName: Developer`WriteExpressionJSONFile",
	"Developer`WriteExpressionJSONStream":"ObjectType: Symbol\nUsage: Developer`WriteExpressionJSONStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compact -> False, IssueMessagesAs -> Developer`WriteExpressionJSONStream, NullSymbols -> {}, PrecisionHandling -> True}\nAttributes: {}\nFullName: Developer`WriteExpressionJSONStream",
	"Developer`WriteExpressionJSONString":"ObjectType: Symbol\nUsage: Developer`WriteExpressionJSONString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compact -> False, IssueMessagesAs -> Developer`WriteExpressionJSONString, NullSymbols -> {}, PrecisionHandling -> True, ToByteString -> False}\nAttributes: {}\nFullName: Developer`WriteExpressionJSONString",
	"Internal`WriteLog":"ObjectType: Symbol\nUsage: Internal`WriteLog\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`WriteLog",
	"Developer`WriteRawJSONFile":"ObjectType: Symbol\nUsage: Developer`WriteRawJSONFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compact -> False, ConversionFunction -> None, ConversionRules -> {}, IssueMessagesAs -> Developer`WriteRawJSONFile, JSONObjectAsList -> False, PrecisionHandling -> False}\nAttributes: {}\nFullName: Developer`WriteRawJSONFile",
	"Developer`WriteRawJSONStream":"ObjectType: Symbol\nUsage: Developer`WriteRawJSONStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compact -> False, ConversionFunction -> None, ConversionRules -> {}, IssueMessagesAs -> Developer`WriteRawJSONStream, JSONObjectAsList -> False, PrecisionHandling -> False}\nAttributes: {}\nFullName: Developer`WriteRawJSONStream",
	"Developer`WriteRawJSONString":"ObjectType: Symbol\nUsage: Developer`WriteRawJSONString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Compact -> False, ConversionFunction -> None, ConversionRules -> {}, IssueMessagesAs -> Developer`WriteRawJSONString, JSONObjectAsList -> False, PrecisionHandling -> False, ToByteString -> False}\nAttributes: {}\nFullName: Developer`WriteRawJSONString",
	"Developer`WriteRegistryKeyValues":"ObjectType: Symbol\nUsage: Developer`WriteRegistryKeyValues\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Developer`WriteRegistryKeyValues",
	"Internal`WriteStorage":"ObjectType: Symbol\nUsage: Internal`WriteStorage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Internal`WriteStorage[ImportExport`HashDump`encoder_, ImportExport`HashDump`file_String, ImportExport`HashDump`expr_] := Catch[Block[{ImportExport`HashDump`key, ImportExport`HashDump`dir, ImportExport`HashDump`data, ImportExport`HashDump`filename}, ImportExport`HashDump`filename = ExpandFileName[ImportExport`HashDump`file]; If[ImportExport`HashDump`filename === $Failed, Throw[$Failed]]; ImportExport`HashDump`dir = DirectoryName[ImportExport`HashDump`filename]; If[ !FileExistsQ[ImportExport`HashDump`dir], ImportExport`HashDump`dir = CreateDirectory[ImportExport`HashDump`dir, CreateIntermediateDirectories -> True]; If[ImportExport`HashDump`dir === $Failed, Throw[$Failed]]]; ImportExport`HashDump`data = ImportExport`HashDump`encoder[ImportExport`HashDump`expr]; Quiet[Check[Export[ImportExport`HashDump`filename, ImportExport`HashDump`data, \"MX\"], Throw[$Failed]]]; ImportExport`HashDump`filename]]\nInternal`WriteStorage[___] := $Failed\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`WriteStorage",
	"MLFS`WriteString":"ObjectType: Symbol\nUsage: MLFS`WriteString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MLFS`WriteString",
	"Developer`WriteUBJSONByteArray":"ObjectType: Symbol\nUsage: Developer`WriteUBJSONByteArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ConversionFunction -> None, ConversionRules -> {}, IssueMessagesAs -> Developer`WriteUBJSONByteArray, StronglyTypedPackedArray -> False}\nAttributes: {}\nFullName: Developer`WriteUBJSONByteArray",
	"Developer`WriteUBJSONFile":"ObjectType: Symbol\nUsage: Developer`WriteUBJSONFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ConversionFunction -> None, ConversionRules -> {}, IssueMessagesAs -> Developer`WriteUBJSONFile, StronglyTypedPackedArray -> False}\nAttributes: {}\nFullName: Developer`WriteUBJSONFile",
	"Developer`WriteUBJSONStream":"ObjectType: Symbol\nUsage: Developer`WriteUBJSONStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ConversionFunction -> None, ConversionRules -> {}, IssueMessagesAs -> Developer`WriteUBJSONStream, StronglyTypedPackedArray -> False}\nAttributes: {}\nFullName: Developer`WriteUBJSONStream",
	"Developer`WriteWXFByteArray":"ObjectType: Symbol\nUsage: Developer`WriteWXFByteArray\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`WriteWXFByteArray, Method -> Automatic, PerformanceGoal -> Automatic}\nAttributes: {}\nFullName: Developer`WriteWXFByteArray",
	"Developer`WriteWXFFile":"ObjectType: Symbol\nUsage: Developer`WriteWXFFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`WriteWXFFile, Method -> Automatic, PerformanceGoal -> Automatic}\nAttributes: {}\nFullName: Developer`WriteWXFFile",
	"Developer`WriteWXFStream":"ObjectType: Symbol\nUsage: Developer`WriteWXFStream\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {IssueMessagesAs -> Developer`WriteWXFStream, Method -> Automatic, PerformanceGoal -> Automatic}\nAttributes: {}\nFullName: Developer`WriteWXFStream",
	"NProduct`WynnEpsilon":"ObjectType: Symbol\nUsage: NProduct`WynnEpsilon\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ExtraFactors -> 15, Degree -> 1}\nAttributes: {}\nFullName: NProduct`WynnEpsilon",
	"NSum`WynnEpsilon":"ObjectType: Symbol\nUsage: NSum`WynnEpsilon\nDocumentation: None\nOwnValues: None\nUpValues: NSum`WynnEpsilon \/: NSum`InitializeSummationAlgorithm[NSum`WynnEpsilon, NSum`AlgorithmsDump`nfs_, NSum`AlgorithmsDump`ranges_, NSum`AlgorithmsDump`algOpts_, NSum`AlgorithmsDump`allOpts_, NumericalMath`NSequenceLimit] := Block[{NSum`AlgorithmsDump`degree, NSum`AlgorithmsDump`t}, NSum`AlgorithmsDump`t = NIntegrate`GetMethodOptionValues[NumericalMath`NSequenceLimit`WynnEpsilon, NSum`AlgorithmsDump`NSequenceLimitWynnEpsilonProperties, NSum`AlgorithmsDump`algOpts, NumericalMath`NSequenceLimit]; If[NSum`AlgorithmsDump`t === $Failed, Return[$Failed]]; {NSum`AlgorithmsDump`degree} = NSum`AlgorithmsDump`t; If[NSum`AlgorithmsDump`degree === Automatic, NSum`AlgorithmsDump`degree = 1]; If[ !TrueQ[NSum`AlgorithmsDump`degree >= 0], Message[NumericalMath`NSequenceLimit::intpm, \"Degree\" -> NSum`AlgorithmsDump`degree, 2]; Return[$Failed]; ]; NSum`AlgorithmsDump`degree = Floor[NSum`AlgorithmsDump`degree]; If[NSum`AlgorithmsDump`degree == Infinity, NSum`AlgorithmsDump`degree = Length[NSum`AlgorithmsDump`ranges], If[TrueQ[NSum`AlgorithmsDump`degree < 1 || Length[NSum`AlgorithmsDump`ranges] < NSum`AlgorithmsDump`degree || Length[NSum`AlgorithmsDump`ranges] < 2*(NSum`AlgorithmsDump`degree + 1)], Message[NumericalMath`NSequenceLimit::seqw, Length[NSum`AlgorithmsDump`ranges], NSum`AlgorithmsDump`degree]; Return[$Failed]; ]; ]; NSum`WynnEpsilon[{Length[NSum`AlgorithmsDump`ranges], NSum`AlgorithmsDump`degree}]]\nNSum`InitializeSummationAlgorithm[NSum`WynnEpsilon, NSum`AlgorithmsDump`nfs_, NSum`AlgorithmsDump`ranges_, NSum`AlgorithmsDump`algOpts_, NSum`AlgorithmsDump`allOpts_, NSum`AlgorithmsDump`head_:NSum] ^:= Block[{NSum`AlgorithmsDump`extraterms, NSum`AlgorithmsDump`degree, NSum`AlgorithmsDump`t}, If[NSum`AlgorithmsDump`head === NSum, NSum`AlgorithmsDump`t = NIntegrate`GetMethodOptionValues[NSum`WynnEpsilon, NSum`AlgorithmsDump`NSumWynnEpsilonProperties, NSum`AlgorithmsDump`algOpts, NSum`AlgorithmsDump`head], NSum`AlgorithmsDump`t = NIntegrate`GetMethodOptionValues[NProduct`WynnEpsilon, NSum`AlgorithmsDump`NProductWynnEpsilonProperties, NSum`AlgorithmsDump`algOpts, NSum`AlgorithmsDump`head]]; If[NSum`AlgorithmsDump`t === $Failed, Return[$Failed]]; {NSum`AlgorithmsDump`extraterms, NSum`AlgorithmsDump`degree} = NSum`AlgorithmsDump`t; If[NSum`AlgorithmsDump`extraterms === Automatic, NSum`AlgorithmsDump`extraterms = 15]; If[ !TrueQ[NSum`AlgorithmsDump`extraterms >= 0], NSum`AlgorithmsDump`pos = NIntegrate`OptionNamePosition[NSum`AlgorithmsDump`strOpts, If[NSum`AlgorithmsDump`head === NSum, \"ExtraTerms\", \"ExtraFactors\"]]; Message[NSum`AlgorithmsDump`head::intpm, NSum`AlgorithmsDump`algOpts, NSum`AlgorithmsDump`pos]; Return[$Failed]; ]; NSum`AlgorithmsDump`extraterms = Floor[NSum`AlgorithmsDump`extraterms]; If[NSum`AlgorithmsDump`degree === Automatic, NSum`AlgorithmsDump`degree = 1]; If[ !TrueQ[NSum`AlgorithmsDump`degree >= 0], NSum`AlgorithmsDump`pos = NIntegrate`OptionNamePosition[NSum`AlgorithmsDump`strOpts, \"Degree\"]; Message[NSum`AlgorithmsDump`head::intpm, NSum`AlgorithmsDump`algOpts, NSum`AlgorithmsDump`pos]; Return[$Failed]; ]; NSum`AlgorithmsDump`degree = Floor[NSum`AlgorithmsDump`degree]; If[TrueQ[NSum`AlgorithmsDump`extraterms < 2*(NSum`AlgorithmsDump`degree + 1)], Message[NSum`AlgorithmsDump`head::wynntd, NSum`AlgorithmsDump`extraterms, If[NSum`AlgorithmsDump`head === NSum, \"ExtraTerms\", \"ExtraFactors\"], NSum`AlgorithmsDump`degree, \"Degree\"]; Return[$Failed]; ]; NSum`WynnEpsilon[{NSum`AlgorithmsDump`extraterms, NSum`AlgorithmsDump`degree}]]\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {ExtraTerms -> 15, Degree -> 1}\nAttributes: {}\nFullName: NSum`WynnEpsilon",
	"NumericalMath`NSequenceLimit`WynnEpsilon":"ObjectType: Symbol\nUsage: NumericalMath`NSequenceLimit`WynnEpsilon\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Degree -> 1}\nAttributes: {}\nFullName: NumericalMath`NSequenceLimit`WynnEpsilon",
	"GIS`XMLAttributes":"ObjectType: Symbol\nUsage: GIS`XMLAttributes[node] returns the attributes of a given node of a XML information tree. \nThe XML information tree must have been previously parsed with GIS`XMLDataset.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`XMLAttributes",
	"GIS`XMLData":"ObjectType: Symbol\nUsage: GIS`XMLData is a container of the information given by the end nodes of a XML information tree. \nThe information is retrieved and stored by means of GIS`XMLDataset.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`XMLData",
	"GIS`XMLDataset":"ObjectType: Symbol\nUsage: GIS`XMLDataSet[expr] parses a XML information tree contained in the XMLElement expression \nexpr and stores the values of the end nodes as downvalues of GIS`XMLData. The output is a Dataset whose entries \nare the nodes of the XML information tree contained in XMLElement.\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: GIS`XMLDataset[GIS`GeoServerDataDump`config_XMLElement] := Module[{GIS`GeoServerDataDump`firstparent, GIS`GeoServerDataDump`newconfig, GIS`GeoServerDataDump`posfirst, GIS`GeoServerDataDump`XMLAssociation, GIS`GeoServerDataDump`listkeys, GIS`GeoServerDataDump`rulechildren, GIS`GeoServerDataDump`child, GIS`GeoServerDataDump`listpartial, GIS`GeoServerDataDump`parent}, Clear[GIS`GeoServerDataDump`children]; Clear[GIS`GeoServerDataDump`position]; Clear[GIS`GeoServerDataDump`inverseposition]; Unprotect[GIS`XMLAttributes]; Clear[GIS`XMLAttributes]; Clear[GIS`GeoServerDataDump`siblings]; Unprotect[GIS`XMLData]; Clear[GIS`XMLData]; GIS`GeoServerDataDump`firstparent = GIS`GeoServerDataDump`config[[1]]; GIS`GeoServerDataDump`posfirst = {1}; GIS`GeoServerDataDump`position[GIS`GeoServerDataDump`firstparent] = GIS`GeoServerDataDump`posfirst; GIS`GeoServerDataDump`position[GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst]] = GIS`GeoServerDataDump`posfirst; GIS`GeoServerDataDump`inverseposition[GIS`GeoServerDataDump`posfirst] = GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst]; GIS`GeoServerDataDump`newconfig = GIS`GeoServerDataDump`config \/. GIS`GeoServerDataDump`firstparent :> GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`position[GIS`GeoServerDataDump`firstparent]]; GIS`GeoServerDataDump`XMLAssociation = Association[GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst] -> GIS`GeoServerDataDump`children[GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst]]]; GIS`GeoServerDataDump`listkeys = Keys[GIS`GeoServerDataDump`XMLAssociation]; GIS`GeoServerDataDump`rulechildren = GIS`GeoServerDataDump`parseXMLtree[GIS`GeoServerDataDump`newconfig]; GIS`XMLAttributes[GIS`GeoServerDataDump`listkeys[[1]]] = GIS`XMLAttributes[GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst]]; GIS`GeoServerDataDump`children[GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst]] = GIS`GeoServerDataDump`children[GIS`GeoServerDataDump`firstparent[GIS`GeoServerDataDump`posfirst]] \/. GIS`GeoServerDataDump`rulechildren; GIS`GeoServerDataDump`listkeys = (Append[{GIS`GeoServerDataDump`listkeys[[1]]}, #1] & ) \/@ GIS`GeoServerDataDump`keys[GIS`GeoServerDataDump`listkeys[[1]]]; While[GIS`GeoServerDataDump`listkeys =!= {}, GIS`GeoServerDataDump`parent = GIS`GeoServerDataDump`listkeys[[1,-2]]; GIS`GeoServerDataDump`child = GIS`GeoServerDataDump`listkeys[[1,-1]]; GIS`GeoServerDataDump`rulechildren = Quiet[GIS`GeoServerDataDump`parseXMLParentChildren[GIS`GeoServerDataDump`listkeys[[1]]]]; GIS`XMLAttributes[GIS`GeoServerDataDump`listkeys[[1]]] = GIS`XMLAttributes[GIS`GeoServerDataDump`child]; GIS`GeoServerDataDump`children[GIS`GeoServerDataDump`child] = GIS`GeoServerDataDump`children[GIS`GeoServerDataDump`child] \/. GIS`GeoServerDataDump`rulechildren; If[Head[GIS`GeoServerDataDump`keys[GIS`GeoServerDataDump`child]] === Keys, GIS`XMLData[GIS`GeoServerDataDump`listkeys[[1]]] = GIS`GeoServerDataDump`children[GIS`GeoServerDataDump`child]; GIS`GeoServerDataDump`listkeys = Quiet[GIS`GeoServerDataDump`pruneListKeys[GIS`GeoServerDataDump`listkeys]], GIS`GeoServerDataDump`listpartial = GIS`GeoServerDataDump`listkeys \/. GIS`GeoServerDataDump`listkeys[[1]] -> (Append[GIS`GeoServerDataDump`listkeys[[1]], #1] & ) \/@ GIS`GeoServerDataDump`keys[GIS`GeoServerDataDump`child]; GIS`GeoServerDataDump`listkeys = Cases[GIS`GeoServerDataDump`listpartial, GIS`GeoServerDataDump`expr_List \/; Depth[GIS`GeoServerDataDump`expr] === 4, Infinity]; ]; ]; GIS`GeoServerDataDump`isParsed[GIS`GeoServerDataDump`config] = True; Dataset[GIS`GeoServerDataDump`XMLAssociation]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`XMLDataset",
	"XML`XMLFormat":"ObjectType: Symbol\nUsage: XML`XMLFormat\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: XML`XMLFormat[System`Convert`XMLDump`path_, System`Convert`XMLDump`opts___] := Switch[System`Convert`XMLDump`XMLRoot[System`Convert`XMLDump`path, System`Convert`XMLDump`opts], {System`Convert`XMLDump`$MathMLNS, _}, \"MathML\", {System`Convert`XMLDump`$RSSNS, _}, \"RSS\", {System`Convert`XMLDump`$NotebookMLNS, _}, \"ExpressionML\", {None, \"math\"}, \"MathML\", {None, System`Convert`XMLDump`$RSSElements}, \"RSS\", {None, System`Convert`XMLDump`$ExpressionMLElements}, \"ExpressionML\", {None, \"jvx-model\"}, \"JVX\", $Failed, $Failed, _, \"SymbolicXML\"]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: XML`XMLFormat",
	"XML`Parser`XMLGet":"ObjectType: Symbol\nUsage: XML`Parser`XMLGet\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: XML`Parser`XMLGet[___] \/; System`Convert`XMLParserDump`$autoInstall &&  !System`Convert`XMLParserDump`linkSniffParser[] := $Failed \/; Block[{System`Convert`XMLParserDump`$autoInstall = False}, System`Convert`XMLParserDump`installParser[]; False]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGet[_?(System`Convert`XMLParserDump`headIsNot[String | InputStream]), ___] := $Failed \/; Message[XML`Parser`XMLGet::string, 1, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGet[_, _?(System`Convert`XMLParserDump`headIsNot[XML`Parser`XMLParser | Rule | RuleDelayed]), ___] := $Failed \/; Message[XML`Parser`XMLGet::xmlprsop, 2, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGet[] := $Failed \/; Message[XML`Parser`XMLGet::argm, System`Convert`XMLParserDump`toInputString[XML`Parser`XMLGet], 0, 1]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile_, System`Convert`XMLParserDump`parserOrOption_, System`Convert`XMLParserDump`l___, (System`Convert`XMLParserDump`notOption_)?(System`Convert`XMLParserDump`isNot[_Rule | _RuleDelayed]), System`Convert`XMLParserDump`r___] \/; True := (Message[XML`Parser`XMLGet::nonopt, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`notOption], 2, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]; XML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile, System`Convert`XMLParserDump`parserOrOption, System`Convert`XMLParserDump`l, System`Convert`XMLParserDump`r])\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile_, System`Convert`XMLParserDump`l___, (Rule | RuleDelayed)[System`Convert`XMLParserDump`lhs_, _], System`Convert`XMLParserDump`r___] \/; FreeQ[System`Convert`XMLParserDump`$parserOptions, System`Convert`XMLParserDump`lhs] := (Message[XML`Parser`XMLGet::optx, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`lhs], System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]; XML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile, System`Convert`XMLParserDump`l, System`Convert`XMLParserDump`r])\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile_, System`Convert`XMLParserDump`l___, System`Convert`XMLParserDump`option:(_Rule | _RuleDelayed)?System`Convert`XMLParserDump`invalidGetOptionQ, System`Convert`XMLParserDump`r___] := (Message[XML`Parser`XMLGet::optv, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`option], System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]; XML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile, System`Convert`XMLParserDump`l, System`Convert`XMLParserDump`r])\nXML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile_String, System`Convert`XMLParserDump`parser_XML`Parser`XMLParser, (System`Convert`XMLParserDump`opts___)?System`Convert`XMLParserDump`validGetOptionQ] := If[$OperatingSystem === \"iOS\", XMLLink`FromXML[ToString[System`Convert`XMLParserDump`makePathAbsolute[System`Convert`XMLParserDump`xmlfile], CharacterEncoding -> \"UTF8\"]], System`Convert`XMLParserDump`xmlGet[System`Convert`XMLParserDump`parserNumber[System`Convert`XMLParserDump`parser], ToString[System`Convert`XMLParserDump`makePathAbsolute[System`Convert`XMLParserDump`xmlfile], CharacterEncoding -> \"UTF8\"], System`Convert`XMLParserDump`$DTDBasePath, Sequence @@ System`Convert`XMLParserDump`OptsToInts[System`Convert`XMLParserDump`$parserOptions \/. {System`Convert`XMLParserDump`opts} \/. Options[XML`Parser`XMLGetString]]]]\nXML`Parser`XMLGet[System`Convert`XMLParserDump`xmlfile_String, (System`Convert`XMLParserDump`opts___)?System`Convert`XMLParserDump`validGetOptionQ] := If[$OperatingSystem === \"iOS\", XMLLink`FromXML[ToString[System`Convert`XMLParserDump`makePathAbsolute[System`Convert`XMLParserDump`xmlfile], CharacterEncoding -> \"UTF8\"]], System`Convert`XMLParserDump`xmlGet[0, ToString[System`Convert`XMLParserDump`makePathAbsolute[System`Convert`XMLParserDump`xmlfile], CharacterEncoding -> \"UTF8\"], System`Convert`XMLParserDump`$DTDBasePath, Sequence @@ System`Convert`XMLParserDump`OptsToInts[System`Convert`XMLParserDump`$parserOptions \/. {System`Convert`XMLParserDump`opts} \/. Options[XML`Parser`XMLGetString]]]]\nXML`Parser`XMLGet[System`Convert`XMLParserDump`inStream:InputStream[String, __], System`Convert`XMLParserDump`opts___] := If[$OperatingSystem === \"iOS\", XMLLink`FromXMLString[Read[System`Convert`XMLParserDump`inStream, Record, RecordSeparators -> {}]], XML`Parser`XMLGetString[Read[System`Convert`XMLParserDump`inStream, Record, RecordSeparators -> {}], System`Convert`XMLParserDump`opts]]\nXML`Parser`XMLGet[System`Convert`XMLParserDump`inStream_InputStream, System`Convert`XMLParserDump`opts___] := If[$OperatingSystem === \"iOS\", XMLLink`FromXMLString[FromCharacterCode[ToCharacterCode[Read[System`Convert`XMLParserDump`inStream, Record, RecordSeparators -> {}]], \"UTF8\"]], XML`Parser`XMLGetString[FromCharacterCode[ToCharacterCode[Read[System`Convert`XMLParserDump`inStream, Record, RecordSeparators -> {}]], \"UTF8\"], System`Convert`XMLParserDump`opts]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {NormalizeWhitespace -> True, IncludeNamespaces -> Automatic, ValidateAgainstDTD -> Automatic, IncludeEmbeddedObjects -> None, AllowRemoteDTDAccess -> True, ReadDTD -> True, IncludeDefaultedAttributes -> False, AllowUnrecognizedEntities -> Automatic, PreserveCDATASections -> False}\nAttributes: {}\nFullName: XML`Parser`XMLGet",
	"XML`Parser`XMLGetString":"ObjectType: Symbol\nUsage: XML`Parser`XMLGetString\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: XML`Parser`XMLGetString[___] \/; System`Convert`XMLParserDump`$autoInstall &&  !System`Convert`XMLParserDump`linkSniffParser[] := $Failed \/; Block[{System`Convert`XMLParserDump`$autoInstall = False}, System`Convert`XMLParserDump`installParser[]; False]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGetString[_?(System`Convert`XMLParserDump`headIsNot[String | InputStream]), ___] := $Failed \/; Message[XML`Parser`XMLGetString::string, 1, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGetString[_, _?(System`Convert`XMLParserDump`headIsNot[XML`Parser`XMLParser | Rule | RuleDelayed]), ___] := $Failed \/; Message[XML`Parser`XMLGetString::xmlprsop, 2, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGetString[] := $Failed \/; Message[XML`Parser`XMLGetString::argm, System`Convert`XMLParserDump`toInputString[XML`Parser`XMLGetString], 0, 1]\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring_, System`Convert`XMLParserDump`parserOrOption_, System`Convert`XMLParserDump`l___, (System`Convert`XMLParserDump`notOption_)?(System`Convert`XMLParserDump`isNot[_Rule | _RuleDelayed]), System`Convert`XMLParserDump`r___] \/; True := (Message[XML`Parser`XMLGetString::nonopt, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`notOption], 2, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]; XML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring, System`Convert`XMLParserDump`parserOrOption, System`Convert`XMLParserDump`l, System`Convert`XMLParserDump`r])\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring_, System`Convert`XMLParserDump`l___, (Rule | RuleDelayed)[System`Convert`XMLParserDump`lhs_, _], System`Convert`XMLParserDump`r___] \/; FreeQ[System`Convert`XMLParserDump`$parserOptions, System`Convert`XMLParserDump`lhs] := (Message[XML`Parser`XMLGetString::optx, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`lhs], System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]; XML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring, System`Convert`XMLParserDump`l, System`Convert`XMLParserDump`r])\nSystem`Convert`XMLParserDump`error:XML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring_, System`Convert`XMLParserDump`l___, System`Convert`XMLParserDump`option:(_Rule | _RuleDelayed)?System`Convert`XMLParserDump`invalidGetOptionQ, System`Convert`XMLParserDump`r___] := (Message[XML`Parser`XMLGetString::optv, System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`option], System`Convert`XMLParserDump`toInputString[System`Convert`XMLParserDump`error]]; XML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring, System`Convert`XMLParserDump`l, System`Convert`XMLParserDump`r])\nXML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring_String, System`Convert`XMLParserDump`parser_XML`Parser`XMLParser, (System`Convert`XMLParserDump`opts___)?System`Convert`XMLParserDump`validGetOptionQ] := If[$OperatingSystem === \"iOS\", XMLLink`FromXMLString[System`Convert`XMLParserDump`possiblyReplaceIndentingNewLines[System`Convert`XMLParserDump`xmlstring]], System`Convert`XMLParserDump`xmlGetString[System`Convert`XMLParserDump`parserNumber[System`Convert`XMLParserDump`parser], System`Convert`XMLParserDump`possiblyReplaceIndentingNewLines[System`Convert`XMLParserDump`xmlstring], System`Convert`XMLParserDump`$DTDBasePath, Sequence @@ System`Convert`XMLParserDump`OptsToInts[System`Convert`XMLParserDump`$parserOptions \/. {System`Convert`XMLParserDump`opts} \/. Options[XML`Parser`XMLGetString]]]]\nXML`Parser`XMLGetString[System`Convert`XMLParserDump`xmlstring_String, (System`Convert`XMLParserDump`opts___)?System`Convert`XMLParserDump`validGetOptionQ] := If[$OperatingSystem === \"iOS\", XMLLink`FromXMLString[System`Convert`XMLParserDump`possiblyReplaceIndentingNewLines[System`Convert`XMLParserDump`xmlstring]], System`Convert`XMLParserDump`xmlGetString[0, System`Convert`XMLParserDump`possiblyReplaceIndentingNewLines[System`Convert`XMLParserDump`xmlstring], System`Convert`XMLParserDump`$DTDBasePath, Sequence @@ System`Convert`XMLParserDump`OptsToInts[System`Convert`XMLParserDump`$parserOptions \/. {System`Convert`XMLParserDump`opts} \/. Options[XML`Parser`XMLGetString]]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {NormalizeWhitespace -> True, IncludeNamespaces -> Automatic, ValidateAgainstDTD -> Automatic, IncludeEmbeddedObjects -> None, AllowRemoteDTDAccess -> True, ReadDTD -> True, IncludeDefaultedAttributes -> False, AllowUnrecognizedEntities -> Automatic, PreserveCDATASections -> False}\nAttributes: {}\nFullName: XML`Parser`XMLGetString",
	"XML`Parser`XMLParser":"ObjectType: Symbol\nUsage: XML`Parser`XMLParser\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: XML`Parser`XMLParser",
	"Region`XorQ":"ObjectType: Symbol\nUsage: Region`XorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`XorQ[Xor[#1, #2] & , 2] := True\nRegion`XorQ[Region`RegionUtilitiesDump`bfunc_Xor, Region`RegionUtilitiesDump`n_] := With[{Region`RegionUtilitiesDump`vars = Array[Slot, Region`RegionUtilitiesDump`n]}, Region`RegionUtilitiesDump`bfunc @@ Region`RegionUtilitiesDump`vars === Xor @@ Region`RegionUtilitiesDump`vars]\nRegion`XorQ[Region`RegionUtilitiesDump`bfunc_, Region`RegionUtilitiesDump`n_] := With[{Region`RegionUtilitiesDump`vars = Array[Slot, Region`RegionUtilitiesDump`n]}, Region`RegionUtilitiesDump`isTautology[Evaluate[Equivalent[Region`RegionUtilitiesDump`bfunc @@ Region`RegionUtilitiesDump`vars, Xor @@ Region`RegionUtilitiesDump`vars]] & ]]\nRegion`XorQ[___] := False\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Region`XorQ",
	"Integrate`XR":"ObjectType: Symbol\nUsage: Integrate`XR\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`XR",
	"NIntegrate`XR":"ObjectType: Symbol\nUsage: NIntegrate`XR\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: NIntegrate`XR",
	"LinearAlgebra`Private`XSimplex":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`XSimplex\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`XSimplex",
	"Graphics`Glyphs`XSplineCurve":"ObjectType: Symbol\nUsage: Graphics`Glyphs`XSplineCurve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {GeometricFunctions`SamplePoints -> 75, SplineClosed -> False, GeometricFunctions`Weights -> Automatic}\nAttributes: {}\nFullName: Graphics`Glyphs`XSplineCurve",
	"SurfaceGraphics`Methods`XSplineCurve":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`XSplineCurve\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`XSplineCurve",
	"SurfaceGraphics`Methods`XSplineShape":"ObjectType: Symbol\nUsage: SurfaceGraphics`Methods`XSplineShape\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: SurfaceGraphics`Methods`XSplineShape",
	"FunctionProperties`Private`XVar":"ObjectType: Symbol\nUsage: FunctionProperties`Private`XVar\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FunctionProperties`Private`XVar",
	"Graphics`ListParserDump`XYCoordinates":"ObjectType: Symbol\nUsage: Graphics`ListParserDump`XYCoordinates\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Graphics`ListParserDump`XYCoordinates[\"Identity\"] = List\nGraphics`ListParserDump`XYCoordinates[\"Polar\"] = {#1, #2} & \nGraphics`ListParserDump`XYCoordinates[\"Log\"] = {#1, Log[#2]} & \nGraphics`ListParserDump`XYCoordinates[\"LogLog\"] = {Log[#1], Log[#2]} & \nGraphics`ListParserDump`XYCoordinates[\"LogLinear\"] = {Log[#1], #2} & \nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Graphics`ListParserDump`XYCoordinates",
	"Visualization`Utilities`XYStyleExpand":"ObjectType: Symbol\nUsage: Visualization`Utilities`XYStyleExpand\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Visualization`Utilities`XYStyleExpand[{}] := {Directive[], Directive[]}\nVisualization`Utilities`XYStyleExpand[Visualization`Utilities`OptionsDump`g_String] := {Visualization`Utilities`OptionsDump`g, Visualization`Utilities`OptionsDump`g}\nVisualization`Utilities`XYStyleExpand[Visualization`Utilities`OptionsDump`g:Except[_List]] := Charting`safeLabelStyle \/@ {Visualization`Utilities`OptionsDump`g, Visualization`Utilities`OptionsDump`g}\nVisualization`Utilities`XYStyleExpand[{Visualization`Utilities`OptionsDump`l__}] := Charting`safeLabelStyle \/@ Charting`padList[{Visualization`Utilities`OptionsDump`l}, 2]\nVisualization`Utilities`XYStyleExpand[Visualization`Utilities`OptionsDump`g_] := {Charting`safeLabelStyle[Visualization`Utilities`OptionsDump`g], Charting`safeLabelStyle[Visualization`Utilities`OptionsDump`g]}\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`Utilities`XYStyleExpand",
	"GIS`XYZFromLLH":"ObjectType: Symbol\nUsage: GIS`XYZFromLLH\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIS`XYZFromLLH",
	"Integrate`Y":"ObjectType: Symbol\nUsage: Integrate`Y\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`Y",
	"Internal`YieldAsynchronousTask":"ObjectType: Symbol\nUsage: Internal`YieldAsynchronousTask\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Internal`YieldAsynchronousTask",
	"Integrate`Z":"ObjectType: Symbol\nUsage: Integrate`Z\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`Z",
	"Integrate`ZDefs":"None",
	"Integrate`ZE":"ObjectType: Symbol\nUsage: Integrate`ZE\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`ZE",
	"Reduce`ZengDecision":"ObjectType: Symbol\nUsage: Reduce`ZengDecision\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ZengDecision[System`RealAlgDecDump`f_, System`RealAlgDecDump`vars_] := Module[{System`RealAlgDecDump`ff = System`RealAlgDecDump`f}, If[ !Internal`EPolyQ[System`RealAlgDecDump`ff, System`RealAlgDecDump`vars, \"Rational\"], System`RealAlgDecDump`ff = Expand[System`RealAlgDecDump`ff]; If[ !Internal`EPolyQ[System`RealAlgDecDump`ff, System`RealAlgDecDump`vars, \"Rational\"], Return[$Failed]]]; System`RealAlgDecDump`zengdec[System`RealAlgDecDump`ff, System`RealAlgDecDump`vars]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ZengDecision",
	"LinearAlgebra`Private`ZeroArrayQ":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`ZeroArrayQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`ZeroArrayQ",
	"Reduce`ZeroDimRealSol":"ObjectType: Symbol\nUsage: Reduce`ZeroDimRealSol\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ZeroDimRealSol",
	"LinearAlgebra`Private`ZeroMatrixQ":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`ZeroMatrixQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`ZeroMatrixQ",
	"Control`ZeroPoleGainModel":"ObjectType: Symbol\nUsage: Control`ZeroPoleGainModel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`CommonDump`in:HoldPattern[Control`ZeroPoleGainModel[Control`CommonDump`f_, Control`CommonDump`rest___]] := With[{Control`CommonDump`result = Control`CommonDump`zeropolegain[Control`CommonDump`f, Control`CommonDump`rest]}, Control`CommonDump`result \/; Control`CommonDump`result =!= $Failed] \/; Control`Utilities`validOptionsQ[Control`CommonDump`in, Control`ZeroPoleGainModel, Control`CommonDump`rest] && ( !MatchQ[Control`CommonDump`f, {_?System`Dump`CommonPatterns`matrixOfVectorsQ, _?System`Dump`CommonPatterns`matrixOfVectorsQ | _?VectorQ, _?MatrixQ}] || Length[{Control`CommonDump`rest}] == 0 ||  !Control`Utilities`tfVariableQ[First[{Control`CommonDump`rest}]] ||  !ArgumentCountQ[TransferFunctionModel, Control`Utilities`NonOptionArgCount[Rest[{Control`CommonDump`rest}]], 0, 3])\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Appearance -> Automatic, SystemsModelLabels -> Automatic, SamplingPeriod -> Automatic, ExternalTypeSignature -> Automatic}\nAttributes: {}\nFullName: Control`ZeroPoleGainModel",
	"Control`ZeroPoleGains":"ObjectType: Symbol\nUsage: Control`ZeroPoleGains\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`ZeroPoleGains[HoldPattern[TransferFunctionModel][{(Control`CommonDump`z_)?System`Dump`CommonPatterns`matrixOfVectorsQ, Control`CommonDump`p:_?System`Dump`CommonPatterns`matrixOfVectorsQ | _?VectorQ, (Control`CommonDump`g_)?MatrixQ}, (Control`CommonDump`var_)?Control`Utilities`tfVariableQ, Repeated[_?Control`Patterns`listAutoQ, {0, 2}], (Control`CommonDump`opts___)?OptionQ]] := {Control`CommonDump`z, Control`CommonDump`p, Control`CommonDump`g}\nControl`ZeroPoleGains[Control`CommonDump`tf_TransferFunctionModel] := Through[{TransferFunctionZeros, TransferFunctionPoles, Control`TransferFunctionGains}[TransferFunctionFactor[Control`CommonDump`tf]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Control`ZeroPoleGains",
	"Developer`ZeroQ":"ObjectType: Symbol\nUsage: ZeroQ[expr] returns True if built‐in transformations allow it to be determined that expr is numerically equal to zero, and returns False otherwise. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Algebraics -> False, Assumptions :> $Assumptions}\nAttributes: {Listable}\nFullName: Developer`ZeroQ",
	"RootReduce`Private`ZeroSeparationAccuracy":"ObjectType: Symbol\nUsage: RootReduce`Private`ZeroSeparationAccuracy\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: RootReduce`Private`ZeroSeparationAccuracy",
	"Reduce`ZeroTestConstants":"ObjectType: Symbol\nUsage: Reduce`ZeroTestConstants\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Reduce`ZeroTestConstants[System`ReduceUtilsDump`e_] := With[{System`ReduceUtilsDump`ee = System`ReduceUtilsDump`ztestconst[System`ReduceUtilsDump`e]}, If[System`ReduceUtilsDump`ee === System`ReduceUtilsDump`e, System`ReduceUtilsDump`e, System`ReduceUtilsDump`ee]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Reduce`ZeroTestConstants",
	"LinearAlgebra`Private`ZeroVectorQ":"ObjectType: Symbol\nUsage: LinearAlgebra`Private`ZeroVectorQ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: LinearAlgebra`Private`ZeroVectorQ",
	"System`Private`ZetaDerivative":"ObjectType: Symbol\nUsage: System`Private`ZetaDerivative\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: System`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`prec_] := Indeterminate \/;  !(FreeQ[System`ZetaDerivativeDump`s, Overflow[]] && FreeQ[System`ZetaDerivativeDump`s, Underflow[]])\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`k:1 | 2 | 3, (System`ZetaDerivativeDump`s_)?NumericQ, System`ZetaDerivativeDump`prec_] := Module[{System`ZetaDerivativeDump`res, System`ZetaDerivativeDump`ss, System`ZetaDerivativeDump`zzeta, System`ZetaDerivativeDump`n}, System`ZetaDerivativeDump`res = (-1)^System`ZetaDerivativeDump`k*D[(2*Cos[(Pi*System`ZetaDerivativeDump`ss)\/2]*Gamma[System`ZetaDerivativeDump`ss]*System`ZetaDerivativeDump`zzeta[System`ZetaDerivativeDump`ss])\/(2*Pi)^System`ZetaDerivativeDump`ss, {System`ZetaDerivativeDump`ss, System`ZetaDerivativeDump`k}]; System`ZetaDerivativeDump`res \/. {Derivative[System`ZetaDerivativeDump`n_][System`ZetaDerivativeDump`zzeta][System`ZetaDerivativeDump`ss_] :> System`Private`ZetaDerivative[System`ZetaDerivativeDump`n, System`ZetaDerivativeDump`ss, System`ZetaDerivativeDump`prec]} \/. {System`ZetaDerivativeDump`ss -> 1 - System`ZetaDerivativeDump`s} \/. {System`ZetaDerivativeDump`zzeta[System`ZetaDerivativeDump`ss_] -> N[Zeta[System`ZetaDerivativeDump`ss], System`ZetaDerivativeDump`prec]}] \/; InexactNumberQ[System`ZetaDerivativeDump`s] && Re[System`ZetaDerivativeDump`s] < -4^(-1) && FreeQ[System`ZetaDerivativeDump`s, Overflow[]] && FreeQ[System`ZetaDerivativeDump`s, Underflow[]]\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`prec_] := System`ZetaDerivativeDump`EMZeta[System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`prec] \/; InexactNumberQ[System`ZetaDerivativeDump`s] &&  !System`ZetaDerivativeDump`s == 1 && FreeQ[System`ZetaDerivativeDump`s, Overflow[] | Underflow[]]\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`prec_] \/; System`ZetaDerivativeDump`s == 1 := ComplexInfinity\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, {System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`a_}, System`ZetaDerivativeDump`prec_, System`ZetaDerivativeDump`classical:True | False:False] := Indeterminate \/;  !(FreeQ[System`ZetaDerivativeDump`s, Overflow[]] && FreeQ[System`ZetaDerivativeDump`s, Underflow[]] && FreeQ[System`ZetaDerivativeDump`a, Underflow[]] && FreeQ[System`ZetaDerivativeDump`a, Overflow[]])\nSystem`Private`ZetaDerivative[1, {System`ZetaDerivativeDump`s_, (System`ZetaDerivativeDump`a_)?NumberQ \/; System`ZetaDerivativeDump`a == 1\/2}, System`ZetaDerivativeDump`prec_, System`ZetaDerivativeDump`classical:True | False:False] := 2^System`ZetaDerivativeDump`s*Log[2]*Zeta[System`ZetaDerivativeDump`s] + (-1 + 2^System`ZetaDerivativeDump`s)*System`Private`ZetaDerivative[1, System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`prec]\nSystem`Private`ZetaDerivative[1, {System`ZetaDerivativeDump`s_, (System`ZetaDerivativeDump`a_)?NumberQ \/; System`ZetaDerivativeDump`a == -2^(-1)}, System`ZetaDerivativeDump`prec_, False] := 2^System`ZetaDerivativeDump`s*Log[2]*(1 + Zeta[System`ZetaDerivativeDump`s]) + (-1 + 2^System`ZetaDerivativeDump`s)*System`Private`ZetaDerivative[1, System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`prec]\nSystem`Private`ZetaDerivative[1, {System`ZetaDerivativeDump`s_, (System`ZetaDerivativeDump`a_)?NumberQ \/; System`ZetaDerivativeDump`a == -2^(-1)}, System`ZetaDerivativeDump`prec_, True] := (-(I*Pi) + Log[2])\/(-2^(-1))^System`ZetaDerivativeDump`s + 2^System`ZetaDerivativeDump`s*Log[2]*Zeta[System`ZetaDerivativeDump`s] + (-1 + 2^System`ZetaDerivativeDump`s)*System`Private`ZetaDerivative[1, System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`prec]\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, {System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`a_}, System`ZetaDerivativeDump`prec_, System`ZetaDerivativeDump`classical:True | False:False] \/;  !System`ZetaDerivativeDump`s == 1 := Module[{System`ZetaDerivativeDump`res}, System`ZetaDerivativeDump`res = If[ !System`ZetaDerivativeDump`classical && Re[System`ZetaDerivativeDump`a] < 0 && RealExponent[Re[System`ZetaDerivativeDump`a]] > 3, System`ZetaDerivativeDump`EMZeta[{System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`a + Ceiling[Re[-System`ZetaDerivativeDump`a]]}, System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`prec, System`ZetaDerivativeDump`classical] + System`ZetaDerivativeDump`EMZeta[{System`ZetaDerivativeDump`s, -System`ZetaDerivativeDump`a - Floor[Re[-System`ZetaDerivativeDump`a]]}, System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`prec, System`ZetaDerivativeDump`classical] - System`ZetaDerivativeDump`EMZeta[{System`ZetaDerivativeDump`s, 1 - System`ZetaDerivativeDump`a}, System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`prec, System`ZetaDerivativeDump`classical] + If[System`ZetaDerivativeDump`intQ[Re[System`ZetaDerivativeDump`a]] &&  !PossibleZeroQ[Im[System`ZetaDerivativeDump`a]], (-(Log[-Im[System`ZetaDerivativeDump`a]^2]\/2))^System`ZetaDerivativeDump`ord\/(-Im[System`ZetaDerivativeDump`a]^2)^(System`ZetaDerivativeDump`s\/2), 0], System`ZetaDerivativeDump`EMZeta[{System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`a}, System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`prec, System`ZetaDerivativeDump`classical]]; System`ZetaDerivativeDump`res \/; NumberQ[System`ZetaDerivativeDump`res]] \/; Precision[{System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`a}] < Infinity &&  !(System`ZetaDerivativeDump`intQ[System`ZetaDerivativeDump`a] && Re[System`ZetaDerivativeDump`a] <= 0 && Re[System`ZetaDerivativeDump`s] > 0)\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, {System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`a_}, System`ZetaDerivativeDump`prec_, System`ZetaDerivativeDump`classical:True | False:False] := If[System`ZetaDerivativeDump`classical, ComplexInfinity, System`Private`ZetaDerivative[System`ZetaDerivativeDump`ord, System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`prec]] \/; Precision[{System`ZetaDerivativeDump`s, System`ZetaDerivativeDump`a}] < Infinity && (System`ZetaDerivativeDump`intQ[System`ZetaDerivativeDump`a] && Re[System`ZetaDerivativeDump`a] <= 0 && Re[System`ZetaDerivativeDump`s] > 0)\nSystem`Private`ZetaDerivative[System`ZetaDerivativeDump`ord_Integer, {System`ZetaDerivativeDump`s_, System`ZetaDerivativeDump`a_}, System`ZetaDerivativeDump`prec_] \/; System`ZetaDerivativeDump`s == 1 := ComplexInfinity\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`ZetaDerivative",
	"Developer`ZetaSimplify":"ObjectType: Symbol\nUsage: ZetaSimplify[expr] transforms zeta functions in expr, trying to either decrease the number of zeta functions, or convert combinations of them into more elementary functions. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Assumptions :> $Assumptions}\nAttributes: {}\nFullName: Developer`ZetaSimplify",
	"Control`PID`ZieglerNicholsFrequencyTuning":"ObjectType: Symbol\nUsage: Control`PID`ZieglerNicholsFrequencyTuning\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PIDRulesDump`in:Control`PID`ZieglerNicholsFrequencyTuning[Control`PIDRulesDump`args__, Control`PIDRulesDump`opts:OptionsPattern[]] := With[{Control`PIDRulesDump`result = Control`PIDRulesDump`pidtune[Control`PID`ZieglerNicholsFrequencyTuning, Control`PIDRulesDump`args, Control`PIDRulesDump`opts]}, Control`PIDRulesDump`result \/; Control`PIDRulesDump`result =!= $Failed] \/; Control`Utilities`validOptionsQ[Control`PIDRulesDump`in, Control`PID`ZieglerNicholsFrequencyTuning, Control`PIDRulesDump`args, Control`PIDRulesDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, PIDDerivativeFilter -> None, PIDFeedforward -> None}\nAttributes: {}\nFullName: Control`PID`ZieglerNicholsFrequencyTuning",
	"Control`PID`ZieglerNicholsTuning":"ObjectType: Symbol\nUsage: Control`PID`ZieglerNicholsTuning\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Control`PIDRulesDump`in:Control`PID`ZieglerNicholsTuning[Control`PIDRulesDump`args__, Control`PIDRulesDump`opts:OptionsPattern[]] := With[{Control`PIDRulesDump`result = Control`PIDRulesDump`pidtune[Control`PID`ZieglerNicholsTuning, Control`PIDRulesDump`args, Control`PIDRulesDump`opts]}, Control`PIDRulesDump`result \/; Control`PIDRulesDump`result =!= $Failed] \/; Control`Utilities`validOptionsQ[Control`PIDRulesDump`in, Control`PID`ZieglerNicholsTuning, Control`PIDRulesDump`args, Control`PIDRulesDump`opts]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {Method -> Automatic, PIDDerivativeFilter -> None, PIDFeedforward -> None}\nAttributes: {}\nFullName: Control`PID`ZieglerNicholsTuning",
	"Random`Private`ZigguratExponentialDistribution":"ObjectType: Symbol\nUsage: Random`Private`ZigguratExponentialDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`ZigguratExponentialDistribution",
	"Random`Private`ZigguratNormalDistribution":"ObjectType: Symbol\nUsage: Random`Private`ZigguratNormalDistribution\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Random`Private`ZigguratNormalDistribution",
	"PacletManager`ZipExtractArchive":"ObjectType: Symbol\nUsage: ZipExtractArchive[\"zipfile\", \"destdir\"]\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`ZipExtractArchive[PacletManager`Zip`Private`zipFile_String, PacletManager`Zip`Private`opts:OptionsPattern[]] := PacletManager`ZipExtractArchive[PacletManager`Zip`Private`zipFile, Automatic, PacletManager`Zip`Private`opts]\nPacletManager`ZipExtractArchive[PacletManager`Zip`Private`zipFile_String, PacletManager`Zip`Private`destDir:_String | Automatic, OptionsPattern[]] := Module[{PacletManager`Zip`Private`unzFilePtr, PacletManager`Zip`Private`filenameEncoding, PacletManager`Zip`Private`archiveEncoding, PacletManager`Zip`Private`verbose, PacletManager`Zip`Private`overwrite, PacletManager`Zip`Private`wasZipError, PacletManager`Zip`Private`wasOverwriteError, PacletManager`Zip`Private`moreEntries, PacletManager`Zip`Private`fileInfo, PacletManager`Zip`Private`filePath, PacletManager`Zip`Private`isDir, PacletManager`Zip`Private`fullDestDir, PacletManager`Zip`Private`parentDir, PacletManager`Zip`Private`fullNewFilePath, PacletManager`Zip`Private`buffer, PacletManager`Zip`Private`numBytesRead, PacletManager`Zip`Private`strm, PacletManager`Zip`Private`filenameBytes, PacletManager`Zip`Private`resultPath, PacletManager`Zip`Private`isUnixLikeOS}, If[ !PacletManager`Zip`Private`loadLibraryFunctions[], Message[PacletManager`ZipExtractArchive::llink]; Return[$Failed]]; If[ !FileExistsQ[PacletManager`Zip`Private`zipFile], Message[PacletManager`ZipExtractArchive::notfound, PacletManager`Zip`Private`zipFile]; Return[$Failed]]; Which[PacletManager`Zip`Private`destDir === Automatic, PacletManager`Zip`Private`fullDestDir = DirectoryName[ExpandFileName[PacletManager`Zip`Private`zipFile]], DirectoryQ[PacletManager`Zip`Private`destDir], PacletManager`Zip`Private`fullDestDir = ExpandFileName[PacletManager`Zip`Private`destDir], True, Message[PacletManager`ZipExtractArchive::destdir, PacletManager`Zip`Private`destDir]; Return[$Failed]]; If[ !Developer`CheckFileAccess[\"Write\" -> PacletManager`Zip`Private`fullDestDir], Message[PacletManager`ZipExtractArchive::sandbox, StringJoin[\"Writing to directory \", PacletManager`Zip`Private`fullDestDir]]; Return[$Failed]]; {PacletManager`Zip`Private`filenameEncoding, PacletManager`Zip`Private`archiveEncoding, PacletManager`Zip`Private`overwrite, PacletManager`Zip`Private`verbose} = OptionValue[{\"FilenameEncoding\", \"ArchiveEncoding\", \"Overwrite\", Verbose}]; If[ !StringQ[PacletManager`Zip`Private`filenameEncoding], PacletManager`Zip`Private`filenameEncoding = If[StringMatchQ[$SystemID, \"Windows*\"], \"Unicode\", \"UTF8\"]]; If[ !StringQ[PacletManager`Zip`Private`archiveEncoding], PacletManager`Zip`Private`archiveEncoding = \"UTF8\"]; PacletManager`Zip`Private`isUnixLikeOS = StringMatchQ[$SystemID, \"Linux*\" | \"MacOSX*\"]; If[PacletManager`Zip`Private`verbose, Print[\"Extracting archive \", ExpandFileName[PacletManager`Zip`Private`zipFile]]]; PacletManager`Zip`Private`filenameBytes = ToCharacterCode[ExpandFileName[PacletManager`Zip`Private`zipFile], PacletManager`Zip`Private`filenameEncoding]; If[ !MatchQ[PacletManager`Zip`Private`filenameBytes, {__Integer}], Message[PacletManager`ZipExtractArchive::fencoding, PacletManager`Zip`Private`zipFile]; Return[$Failed]]; PacletManager`Zip`Private`unzFilePtr = PacletManager`Zip`Private`unzOpen[PacletManager`Zip`Private`filenameBytes, ExpandFileName[PacletManager`Zip`Private`zipFile]]; Switch[PacletManager`Zip`Private`unzFilePtr, 0, Message[PacletManager`ZipExtractArchive::ziperr, PacletManager`Zip`Private`zipFile]; Return[$Failed], -1, Message[PacletManager`ZipExtractArchive::sandbox, StringJoin[\"Reading file \", PacletManager`Zip`Private`zipFile]]; Return[$Failed]]; PacletManager`Package`try[PacletManager`Zip`Private`buffer = Table[0, {8192}]; PacletManager`Zip`Private`wasZipError = False; PacletManager`Zip`Private`wasOverwriteError = False; PacletManager`Zip`Private`moreEntries = True; PacletManager`Zip`Private`resultPath = $Failed; While[PacletManager`Zip`Private`moreEntries &&  !PacletManager`Zip`Private`wasZipError &&  !PacletManager`Zip`Private`wasOverwriteError, PacletManager`Zip`Private`fileInfo = PacletManager`Zip`Private`unzGetCurrentFileInfo[PacletManager`Zip`Private`unzFilePtr]; If[MatchQ[PacletManager`Zip`Private`fileInfo, {0, _List, _Integer, _Integer, _Integer, _List | Null}], PacletManager`Zip`Private`filePath = PacletManager`Zip`Private`decodeEntryName[PacletManager`Zip`Private`fileInfo, PacletManager`Zip`Private`archiveEncoding]; If[PacletManager`Zip`Private`filePath === $Failed, Message[PacletManager`ZipExtractArchive::encoding, PacletManager`Zip`Private`zipFile], If[PacletManager`Zip`Private`verbose, Print[StringJoin[\"   ... \", PacletManager`Zip`Private`filePath]]]; PacletManager`Zip`Private`isDir = StringMatchQ[PacletManager`Zip`Private`filePath, __~~\"\\\\\"] || StringMatchQ[PacletManager`Zip`Private`filePath, __~~\"\/\"]; PacletManager`Zip`Private`fullNewFilePath = ExpandFileName[FileNameJoin[{PacletManager`Zip`Private`fullDestDir, PacletManager`Zip`Private`filePath}]]; If[ !StringStartsQ[PacletManager`Zip`Private`fullNewFilePath, PacletManager`Zip`Private`fullDestDir], Message[PacletManager`ZipExtractArchive::zslip, PacletManager`Zip`Private`filePath]; PacletManager`Zip`Private`moreEntries = PacletManager`Zip`Private`unzGoToNext[PacletManager`Zip`Private`unzFilePtr] === 0; Continue[]]; If[ !StringQ[PacletManager`Zip`Private`resultPath], PacletManager`Zip`Private`resultPath = FileNameJoin[{PacletManager`Zip`Private`fullDestDir, FileNameTake[PacletManager`Zip`Private`filePath, 1]}]]; If[PacletManager`Zip`Private`isDir, If[ !DirectoryQ[PacletManager`Zip`Private`fullNewFilePath], CreateDirectory[PacletManager`Zip`Private`fullNewFilePath, CreateIntermediateDirectories -> True]], PacletManager`Zip`Private`parentDir = DirectoryName[PacletManager`Zip`Private`fullNewFilePath]; If[ !DirectoryQ[PacletManager`Zip`Private`parentDir], CreateDirectory[PacletManager`Zip`Private`parentDir, CreateIntermediateDirectories -> True]]; If[PacletManager`Zip`Private`unzOpenCurrent[PacletManager`Zip`Private`unzFilePtr] === 0, PacletManager`Zip`Private`numBytesRead = 0; If[ !FileExistsQ[PacletManager`Zip`Private`fullNewFilePath] || TrueQ[PacletManager`Zip`Private`overwrite], PacletManager`Zip`Private`strm = OpenWrite[PacletManager`Zip`Private`fullNewFilePath, BinaryFormat -> True]; While[(PacletManager`Zip`Private`numBytesRead = PacletManager`Zip`Private`unzReadCurrent[PacletManager`Zip`Private`unzFilePtr, PacletManager`Zip`Private`buffer]) > 0, BinaryWrite[PacletManager`Zip`Private`strm, Take[PacletManager`Zip`Private`buffer, PacletManager`Zip`Private`numBytesRead]]; ]; Close[PacletManager`Zip`Private`strm]; SetFileDate[PacletManager`Zip`Private`fullNewFilePath, PacletManager`Zip`Private`fileDateAsMDate[PacletManager`Zip`Private`fileInfo]]; If[PacletManager`Zip`Private`isUnixLikeOS && Last[PacletManager`Zip`Private`fileInfo] == ToCharacterCode[\"PMx\"], Quiet[Run[StringJoin[\"chmod a+x '\", PacletManager`Zip`Private`fullNewFilePath, \"'\"]]]], Message[PacletManager`ZipExtractArchive::overwrite, PacletManager`Zip`Private`fullNewFilePath]; PacletManager`Zip`Private`wasOverwriteError = True]; PacletManager`Zip`Private`unzCloseCurrent[PacletManager`Zip`Private`unzFilePtr]; PacletManager`Zip`Private`wasZipError = PacletManager`Zip`Private`numBytesRead < 0, PacletManager`Zip`Private`wasZipError = True]]], PacletManager`Zip`Private`wasZipError = True]; If[ !PacletManager`Zip`Private`wasZipError, PacletManager`Zip`Private`moreEntries = PacletManager`Zip`Private`unzGoToNext[PacletManager`Zip`Private`unzFilePtr] === 0]], PacletManager`Zip`Private`unzClose[PacletManager`Zip`Private`unzFilePtr]]; Which[PacletManager`Zip`Private`wasZipError, Message[PacletManager`ZipExtractArchive::ziperr, PacletManager`Zip`Private`zipFile]; $Failed, PacletManager`Zip`Private`wasOverwriteError, $Failed, True, PacletManager`Zip`Private`resultPath]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FilenameEncoding -> Automatic, ArchiveEncoding -> Automatic, Overwrite -> False, Verbose -> False}\nAttributes: {}\nFullName: PacletManager`ZipExtractArchive",
	"PacletManager`ZipGetFile":"ObjectType: Symbol\nUsage: ZipGetFile[\"zipfile\", \"requestedFile\"]\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: PacletManager`ZipGetFile[PacletManager`Zip`Private`zipFile_String, PacletManager`Zip`Private`requestedFileName_String, OptionsPattern[]] := Module[{PacletManager`Zip`Private`unzFilePtr, PacletManager`Zip`Private`wasZipError, PacletManager`Zip`Private`foundFile, PacletManager`Zip`Private`moreEntries, PacletManager`Zip`Private`fileInfo, PacletManager`Zip`Private`filenameEncoding, PacletManager`Zip`Private`filenameBytes, PacletManager`Zip`Private`archiveEncoding, PacletManager`Zip`Private`filePath, PacletManager`Zip`Private`fileNameParts, PacletManager`Zip`Private`requestedFileHasPath, PacletManager`Zip`Private`uncompressedSize, PacletManager`Zip`Private`buf, PacletManager`Zip`Private`numBytesRead}, If[ !PacletManager`Zip`Private`loadLibraryFunctions[], Message[PacletManager`ZipGetFile::llink]; Return[$Failed]]; If[ !FileExistsQ[PacletManager`Zip`Private`zipFile], Message[PacletManager`ZipGetFile::notfound, PacletManager`Zip`Private`zipFile]; Return[$Failed]]; {PacletManager`Zip`Private`filenameEncoding, PacletManager`Zip`Private`archiveEncoding} = OptionValue[{\"FilenameEncoding\", \"ArchiveEncoding\"}]; If[ !StringQ[PacletManager`Zip`Private`filenameEncoding], PacletManager`Zip`Private`filenameEncoding = If[StringMatchQ[$SystemID, \"Windows*\"], \"Unicode\", \"UTF8\"]]; If[ !StringQ[PacletManager`Zip`Private`archiveEncoding], PacletManager`Zip`Private`archiveEncoding = \"UTF8\"]; PacletManager`Zip`Private`fileNameParts = StringSplit[PacletManager`Zip`Private`requestedFileName, {\"\\\\\", \"\/\"}]; PacletManager`Zip`Private`requestedFileHasPath = Length[PacletManager`Zip`Private`fileNameParts] > 1; PacletManager`Zip`Private`filenameBytes = ToCharacterCode[ExpandFileName[PacletManager`Zip`Private`zipFile], PacletManager`Zip`Private`filenameEncoding]; If[ !MatchQ[PacletManager`Zip`Private`filenameBytes, {__Integer}], Message[PacletManager`ZipGetFile::fencoding, PacletManager`Zip`Private`zipFile]; Return[$Failed]]; PacletManager`Zip`Private`unzFilePtr = PacletManager`Zip`Private`unzOpen[PacletManager`Zip`Private`filenameBytes, ExpandFileName[PacletManager`Zip`Private`zipFile]]; Switch[PacletManager`Zip`Private`unzFilePtr, 0, Message[PacletManager`ZipGetFile::ziperr, PacletManager`Zip`Private`zipFile]; Return[$Failed], -1, Message[PacletManager`ZipGetFile::sandbox, PacletManager`Zip`Private`zipFile]; Return[$Failed]]; PacletManager`Package`try[PacletManager`Zip`Private`wasZipError = False; PacletManager`Zip`Private`foundFile = False; PacletManager`Zip`Private`moreEntries = True; While[PacletManager`Zip`Private`moreEntries &&  !PacletManager`Zip`Private`foundFile &&  !PacletManager`Zip`Private`wasZipError, PacletManager`Zip`Private`fileInfo = PacletManager`Zip`Private`unzGetCurrentFileInfo[PacletManager`Zip`Private`unzFilePtr]; If[MatchQ[PacletManager`Zip`Private`fileInfo, {0, _List, _Integer, _Integer, _Integer, _List | Null}], PacletManager`Zip`Private`filePath = PacletManager`Zip`Private`decodeEntryName[PacletManager`Zip`Private`fileInfo, PacletManager`Zip`Private`archiveEncoding]; If[PacletManager`Zip`Private`filePath === $Failed, Message[PacletManager`ZipGetFile::encoding, PacletManager`Zip`Private`zipFile], If[PacletManager`Zip`Private`fileNameParts == FileNameSplit[PacletManager`Zip`Private`filePath] || ( !PacletManager`Zip`Private`requestedFileHasPath && FileNameTake[PacletManager`Zip`Private`filePath] == PacletManager`Zip`Private`requestedFileName), PacletManager`Zip`Private`foundFile = True; PacletManager`Zip`Private`uncompressedSize = PacletManager`Zip`Private`fileInfo[[3]]; If[PacletManager`Zip`Private`unzOpenCurrent[PacletManager`Zip`Private`unzFilePtr] === 0, PacletManager`Zip`Private`buf = Table[0, {Max[1000, PacletManager`Zip`Private`uncompressedSize]}]; PacletManager`Zip`Private`numBytesRead = PacletManager`Zip`Private`unzReadCurrent[PacletManager`Zip`Private`unzFilePtr, PacletManager`Zip`Private`buf]; PacletManager`Zip`Private`unzCloseCurrent[PacletManager`Zip`Private`unzFilePtr]; PacletManager`Zip`Private`wasZipError = PacletManager`Zip`Private`numBytesRead =!= PacletManager`Zip`Private`uncompressedSize, PacletManager`Zip`Private`wasZipError = True]]], PacletManager`Zip`Private`wasZipError = True]; If[ !PacletManager`Zip`Private`wasZipError, PacletManager`Zip`Private`moreEntries = PacletManager`Zip`Private`unzGoToNext[PacletManager`Zip`Private`unzFilePtr] === 0]], PacletManager`Zip`Private`unzClose[PacletManager`Zip`Private`unzFilePtr]]; Which[PacletManager`Zip`Private`wasZipError, Message[PacletManager`ZipGetFile::ziperr, PacletManager`Zip`Private`zipFile]; $Failed,  !PacletManager`Zip`Private`foundFile, Message[PacletManager`ZipGetFile::noentry, PacletManager`Zip`Private`requestedFileName, PacletManager`Zip`Private`zipFile]; $Failed, True, Take[PacletManager`Zip`Private`buf, PacletManager`Zip`Private`numBytesRead]]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {FilenameEncoding -> Automatic, ArchiveEncoding -> Automatic}\nAttributes: {}\nFullName: PacletManager`ZipGetFile",
	"Region`Polyhedron`ZipPolyhedron":"ObjectType: Symbol\nUsage: Region`Polyhedron`ZipPolyhedron\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: Region`Polyhedron`ZipPolyhedron[Region`AugmentedPolyhedronDump`expr__] := Block[{Region`AugmentedPolyhedronDump`res}, Region`AugmentedPolyhedronDump`res = Region`AugmentedPolyhedronDump`dZipPolyhedron[Region`AugmentedPolyhedronDump`expr]; Region`AugmentedPolyhedronDump`res \/; Region`AugmentedPolyhedronDump`res =!= $Failed]\nRegion`Polyhedron`ZipPolyhedron[Region`AugmentedPolyhedronDump`expr___] := (Region`AugmentedPolyhedronDump`mZipPolyhedron[Region`AugmentedPolyhedronDump`expr]; Null \/; False)\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: {BaseStyle -> {}, DefaultBaseStyle -> {}, VertexColors -> Automatic, VertexNormals -> Automatic, VertexTextureCoordinates -> None}\nAttributes: {}\nFullName: Region`Polyhedron`ZipPolyhedron",
	"Integrate`ZNest":"None",
	"Integrate`ZOne":"ObjectType: Symbol\nUsage: Integrate`ZOne\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`ZOne",
	"Image`ZoomButtoms":"ObjectType: Symbol\nUsage: Image`ZoomButtoms\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Image`ZoomButtoms",
	"Integrate`ZPi":"ObjectType: Symbol\nUsage: Integrate`ZPi\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`ZPi",
	"FittedModels`ZPValue":"ObjectType: Symbol\nUsage: FittedModels`ZPValue\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: FittedModels`ZPValue[_DirectedInfinity, FittedModels`FittedModelsCommonDump`se_] := SetAccuracy[0, Accuracy[FittedModels`FittedModelsCommonDump`se]]\nFittedModels`ZPValue[FittedModels`FittedModelsCommonDump`zstat_, FittedModels`FittedModelsCommonDump`se_] := Erfc[Abs[FittedModels`FittedModelsCommonDump`zstat]\/Sqrt[2]]\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FittedModels`ZPValue",
	"Integrate`ZRanks":"None",
	"Integrate`ZX":"ObjectType: Symbol\nUsage: Integrate`ZX\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`ZX",
	"Parallel`Settings`$AbortPause":"None",
	"Reduce`Private`$AcceptIncompleteRoots":"ObjectType: Symbol\nUsage: Automatic represents an option or other value that is to be chosen automatically by a built‐in function. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Automatic",
	"StringPattern`Dump`$AdditionalLetters":"None",
	"Integrate`$Algebraic":"ObjectType: Symbol\nUsage: Integrate`$Algebraic\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`$Algebraic",
	"Integrate`$Algebraics":"ObjectType: Symbol\nUsage: Integrate`$Algebraics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`$Algebraics",
	"Image`HumanDump`$AllFaceFeatures":"None",
	"PacletManager`$AllowDataUpdates":"None",
	"PacletManager`$AllowDocumentationUpdates":"ObjectType: Symbol\nUsage: PacletManager`$AllowDocumentationUpdates\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: PacletManager`$AllowDocumentationUpdates",
	"DataPaclets`WordConvenienceFunctionsDump`$AllowedLanguages":"None",
	"PacletManager`$AllowInternet":"None",
	"Internal`$Alphabets":"None",
	"QuantityUnits`Private`$AlphaBlockFlag":"ObjectType: Symbol\nUsage: QuantityUnits`Private`$AlphaBlockFlag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityUnits`Private`$AlphaBlockFlag",
	"QuantityUnits`Private`$AlphaFlag":"ObjectType: Symbol\nUsage: QuantityUnits`Private`$AlphaFlag\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: QuantityUnits`Private`$AlphaFlag",
	"System`ConvertersDump`FormatUtilities`$AnimationDurationPatterns":"None",
	"Control`PlotUtilities`$Annotations":"None",
	"Charting`CommonDump`$ApplicationWrappers":"None",
	"Integrate`$ArcTan2":"ObjectType: Symbol\nUsage: Integrate`$ArcTan2\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`$ArcTan2",
	"URLUtilities`PackageScope`$AssocPattern":"None",
	"System`DateObjectDump`$AstrologicalSignList":"None",
	"Asymptotics`$AsymptoticRegularizedSum":"None",
	"Asymptotics`$AsymptoticRSolveValueTerms":"None",
	"BoxForm`$AsyncControls":"None",
	"Developer`$AsynchronousBlockedQ":"None",
	"Audio`AudioGUIDump`$AudioGUIDebug":"None",
	"System`ConvertersDump`$AudioVideoTempFileCFormats":"None",
	"GraphicsGrid`$Autoalign":"None",
	"System`Private`$AutoLoad":"ObjectType: Symbol\nUsage: System`Private`$AutoLoad\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Private`$AutoLoad",
	"Visualization`$AutomaticFillingStyle":"ObjectType: Symbol\nUsage: Visualization`$AutomaticFillingStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`$AutomaticFillingStyle",
	"GIS`$AutomaticGeoPad":"None",
	"Visualization`$AutomaticPlotStyle":"ObjectType: Symbol\nUsage: Visualization`$AutomaticPlotStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`$AutomaticPlotStyle",
	"System`DateObjectDump`$AutomaticRules":"None",
	"Visualization`$AutomaticStreamStyle":"ObjectType: Symbol\nUsage: Visualization`$AutomaticStreamStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`$AutomaticStreamStyle",
	"QuantityUnits`$AutomaticUnitTimes":"None",
	"Visualization`$AutomaticVectorStyle":"ObjectType: Symbol\nUsage: Visualization`$AutomaticVectorStyle\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Visualization`$AutomaticVectorStyle",
	"System`Dump`$AutoNumericRendering":"None",
	"URLUtilities`PackageScope`$AutoValues":"None",
	"Image`HumanDump`$AvailableFaceFeatures":"None",
	"System`ConvertersDump`FormatUtilities`$BackgroundPatterns":"None",
	"Themes`$BackgroundWeight":"None",
	"Image`$BarcodeImageFormats":"None",
	"Image`$BarcodeRecognizeFormats":"None",
	"PacletManager`$BasePacletsDirectory":"None",
	"System`ConvertersDump`$BinaryDataTypes":"None",
	"StartUp`Initialization`$BootstrapPath":"None",
	"Parallel`Settings`$BusyWait":"None",
	"CloudObject`$CachePersistence":"ObjectType: Symbol\nUsage: Inherited represents an option value to be inherited from an enclosing style, cell, or notebook. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Inherited",
	"System`Dump`$CacheSymbolicGraphics":"ObjectType: Symbol\nUsage: System`Dump`$CacheSymbolicGraphics\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Dump`$CacheSymbolicGraphics",
	"System`Dump`$CacheSymbolicGraphicsDefault":"None",
	"System`Dump`$CacheSymbolicGraphicsDynamicDefault":"None",
	"Themes`$CameraWeight":"None",
	"System`InformationDump`$CatchThrowTag":"None",
	"CCompilerDriver`$CCompilerInternalDirectory":"ObjectType: Symbol\nUsage: CCompilerDriver`$CCompilerInternalDirectory\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: CCompilerDriver`$CCompilerInternalDirectory",
	"Compiler`$CCompilerOptions":"None",
	"Integrate`$Circ":"ObjectType: Symbol\nUsage: Integrate`$Circ\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`$Circ",
	"Themes`$ClassicWeight":"None",
	"GIFTools`Private`$ClearCache":"ObjectType: Symbol\nUsage: GIFTools`Private`$ClearCache\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: GIFTools`Private`$ClearCache",
	"StartUp`Persistence`$CloudLocation":"None",
	"StartUp`Persistence`$CloudPersistenceBase":"None",
	"Internal`$CMakeVersion":"None",
	"Image`$ColorSpaceProperties":"None",
	"Themes`$ColorWeight":"None",
	"System`Convert`CommonVideoDump`$CommonVideoInit":"ObjectType: Symbol\nUsage: System`Convert`CommonVideoDump`$CommonVideoInit\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Convert`CommonVideoDump`$CommonVideoInit",
	"Dataset`$CompactDatasetRendering":"ObjectType: Symbol\nUsage: Dataset`$CompactDatasetRendering\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Dataset`$CompactDatasetRendering",
	"ProcessLink`Private`$ComparisonOperators":"None",
	"Internal`$CompilerID":"None",
	"MathLink`$CompilerID":"None",
	"System`ConvertersDump`FormatUtilities`$CompressionLevelPatterns":"None",
	"BoxForm`$ConditionalExpressionIconizeThreshold":"None",
	"CloudSystem`KernelInitialize`$ConfigurationProperties":"ObjectType: Symbol\nUsage: CloudSystem`KernelInitialize`$ConfigurationProperties\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: CloudSystem`KernelInitialize`$ConfigurationProperties",
	"Optimization`Utilities`$ConicConstraintFormalVariable":"ObjectType: Symbol\nUsage: System`\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`",
	"Internal`$ConsoleType":"None",
	"Internal`$ContextMarks":"ObjectType: Symbol\nUsage: Automatic represents an option or other value that is to be chosen automatically by a built‐in function. \nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`Automatic",
	"Control`$ContinuousTimeComplexPlaneVariable":"ObjectType: Symbol\nUsage: System`\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`",
	"Control`Utilities`$ContinuousTimeSubstitutionToken":"None",
	"Wavelets`$ContinuousTransformWavelets":"None",
	"System`Private`$ContourLabels":"None",
	"FrontEnd`$ControlActive":"ObjectType: Symbol\nUsage: FrontEnd`$ControlActive\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FrontEnd`$ControlActive",
	"System`ConvertersDump`FormatUtilities`$ControlAppearancePatterns":"None",
	"Control`$ControlObjects":"None",
	"System`ConvertersDump`$ConverterPackages":"None",
	"Internal`$ConvertForms":"None",
	"System`DateObjectDump`$CoreProperties":"None",
	"Internal`$CppBuild":"None",
	"PacletManager`Information`$CreationDate":"None",
	"FEPrivate`$CreationID":"ObjectType: Symbol\nUsage: FEPrivate`$CreationID\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: FEPrivate`$CreationID",
	"Internal`$CreationID":"None",
	"MathLink`Information`$CreationID":"None",
	"PacletManager`Information`$CreationID":"None",
	"Integrate`$CRoot":"ObjectType: Symbol\nUsage: Integrate`$CRoot\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`$CRoot",
	"Cryptography`$Cryptocurrencies":"None",
	"Geometry`Developer`$CurrentFile":"ObjectType: Symbol\nUsage: Geometry`Developer`$CurrentFile\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Geometry`Developer`$CurrentFile",
	"Geometry`Developer`$CurrentFunction":"ObjectType: Symbol\nUsage: Geometry`Developer`$CurrentFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Geometry`Developer`$CurrentFunction",
	"Geometry`Developer`$CurrentLine":"ObjectType: Symbol\nUsage: Geometry`Developer`$CurrentLine\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Geometry`Developer`$CurrentLine",
	"Geometry`Developer`$CurrentLogLevel":"ObjectType: Symbol\nUsage: Geometry`Developer`$CurrentLogLevel\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Geometry`Developer`$CurrentLogLevel",
	"Package`$CurrentPackage":"ObjectType: Symbol\nUsage: Package`$CurrentPackage\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Package`$CurrentPackage",
	"Integrate`$D":"ObjectType: Symbol\nUsage: Integrate`$D\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Integrate`$D",
	"Internal`$DataCollections":"None",
	"Compile`Class`$DataStructureSupported":"None",
	"Audio`$DataTypeProperties":"None",
	"Image`$DataTypeProperties":"None",
	"System`DateObjectDump`$DateFunctions":"None",
	"System`DateObjectDump`$DateObjectAlreadyValidated":"ObjectType: Symbol\nUsage: System`DateObjectDump`$DateObjectAlreadyValidated\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: System`DateObjectDump`$DateObjectAlreadyValidated",
	"System`DateObjectDump`$DateObjectElements":"None",
	"System`DateObjectDump`$DateObjectValidation":"None",
	"System`DateObjectDump`$DateResolution":"None",
	"System`DateObjectDump`$DateValueProperties":"None",
	"System`DateObjectDump`$DateValueTimeObjectProperties":"None",
	"DateAndTime`$DayPlusDayTypes":"None",
	"System`DateObjectDump`$DaysOfTheWeek":"None",
	"Parallel`Debug`$Debug":"ObjectType: Symbol\nUsage: Parallel`Debug`$Debug\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Parallel`Debug`$Debug",
	"Internal`$DebugBuild":"None",
	"MathLink`$DedicatedLink":"ObjectType: Symbol\nUsage: MathLink`$DedicatedLink\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: MathLink`$DedicatedLink",
	"Audio`AudioStreamInternals`$DefaultBufferCount":"None",
	"Audio`AudioStreamInternals`$DefaultBufferLatencyCount":"None",
	"Charting`CommonDump`$DefaultColorFunction":"ObjectType: Symbol\nUsage: Charting`CommonDump`$DefaultColorFunction\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {}\nFullName: Charting`CommonDump`$DefaultColorFunction",
	"Charting`CommonDump`$DefaultColorFunction$":"ObjectType: Symbol\nUsage: Charting`CommonDump`$DefaultColorFunction$\nDocumentation: None\nOwnValues: None\nUpValues: None\nDownValues: None\nSubValues: None\nDefaultValues: None\nNValues: None\nFormatValues: None\nOptions: None\nAttributes: {Temporary}\nFullName: Charting`CommonDump`$DefaultColorFunction$",
	"Themes`$DefaultColorWeight":"None",
	"DataPaclets`Dictionary`$DefaultDictionaryFile":"None",
	"Internal`$DefaultEntityStores":"None",
	"Region`Mesh`Internal`$DefaultFallbackMarchingSquaresPlotPoints":"None",
	"Charting`$DefaultGraphicsInteraction":"None",
	"Charting`$DefaultGraphicsInteractionV1":"None"
}